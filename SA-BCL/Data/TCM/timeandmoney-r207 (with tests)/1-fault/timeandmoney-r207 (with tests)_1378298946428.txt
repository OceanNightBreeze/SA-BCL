#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (64,357) (64,357) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (154,339) 110 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (64,357) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (154,339) 110 233 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (64,357) (64,357) 193 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (154,339) 110 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
116 1 340 1 299 1 138 1 184 9 302 2 8 1 203 1 286 1 370 1 13 1 256 2 74 2 163 2 328 1 309 1 75 9 312 2 271 2 209 2 352 1 79 1 58 3 274 5 172 1 358 6 359 4 29 1 
116 1 340 1 299 1 138 1 184 9 302 2 8 1 203 1 286 1 370 1 13 1 256 2 74 2 163 2 328 1 309 1 75 9 312 2 271 2 209 2 352 1 79 1 58 3 274 5 172 1 358 6 359 4 29 1 
116 1 340 1 299 1 138 1 184 10 302 2 8 1 203 1 286 1 370 1 13 1 256 2 74 2 163 2 328 1 309 1 75 10 312 2 271 2 209 2 352 1 79 1 58 4 274 6 172 1 358 7 359 5 29 1 
116 1 299 1 138 1 184 7 302 2 8 1 203 1 286 1 370 1 13 1 256 2 74 1 163 2 328 1 309 1 75 7 312 2 271 2 209 2 352 1 79 1 58 2 274 4 172 1 358 4 359 3 29 1 
328 1 75 4 340 1 312 1 271 1 209 1 302 1 184 4 138 1 352 1 79 1 58 1 274 3 256 1 74 2 358 3 359 2 29 1 
328 1 75 2 309 1 312 1 231 1 90 1 209 1 184 2 302 1 352 1 274 1 240 1 370 1 256 1 163 1 29 1 
328 1 75 3 299 1 312 2 184 3 352 1 58 1 274 2 256 2 163 1 358 1 359 1 29 1 
43 1 328 1 75 9 340 1 299 1 312 2 271 1 209 1 302 1 138 1 184 9 79 1 352 1 274 5 58 3 286 1 11 1 172 1 256 2 74 2 358 7 163 1 359 4 29 1 
43 1 328 1 75 9 340 1 299 1 312 2 271 1 209 1 302 1 138 1 184 9 79 1 352 1 274 5 58 3 286 1 11 1 172 1 256 2 74 2 358 7 163 1 359 4 29 1 
31 1 143 1 357 1 146 1 64 1 174 1 
307 1 
32 1 3 1 307 1 
307 1 202 1 290 2 
269 1 136 1 220 1 236 1 377 1 315 1 354 1 246 1 146 1 277 1 
2 2 149 2 97 1 62 2 110 1 225 1 154 1 146 1 15 1 371 1 
357 1 146 1 
264 1 31 1 3 1 229 1 362 1 269 1 220 1 354 1 6 1 255 1 143 1 307 1 246 1 114 1 
31 2 3 1 229 1 362 1 269 1 136 1 220 1 236 1 354 1 6 1 143 2 307 1 246 1 277 1 114 1 
31 1 143 1 201 1 303 1 174 1 
283 1 31 2 3 1 244 1 143 2 307 1 201 1 174 1 
31 1 143 1 201 1 
283 1 31 2 3 1 342 1 143 2 307 1 201 1 174 1 
87 1 30 1 167 1 180 1 31 5 48 2 3 1 251 1 364 1 54 2 201 2 21 1 283 1 10 1 143 5 327 2 307 1 14 1 174 2 
349 1 220 2 136 1 236 1 315 2 354 2 318 1 246 2 277 1 
294 1 287 1 288 1 
315 1 32 1 
2 1 323 1 375 1 198 1 220 1 149 1 94 1 96 1 315 1 243 1 326 1 152 1 62 1 225 1 369 1 246 1 
2 1 281 1 198 1 375 1 323 1 136 1 220 2 149 1 94 1 236 1 96 1 243 1 354 1 152 1 62 1 225 1 287 1 369 1 276 1 246 2 
264 1 360 1 281 1 158 1 136 4 220 5 236 4 315 1 239 1 354 5 318 1 276 2 246 5 277 1 
354 2 292 1 269 1 220 2 136 2 246 2 236 2 128 1 
315 1 354 3 220 3 136 3 276 1 246 3 277 1 236 3 
354 1 292 1 269 1 220 1 136 1 246 1 236 1 
349 1 354 1 269 1 318 1 220 1 136 1 246 1 236 1 277 1 
31 1 2 1 88 1 362 1 281 1 220 2 136 2 6 1 225 1 143 1 146 1 229 1 269 1 149 1 233 1 236 2 354 2 62 1 110 1 318 1 246 2 276 1 154 1 277 1 114 1 
315 1 264 1 354 2 158 1 220 2 136 1 246 2 276 1 236 1 
31 1 88 1 229 1 362 1 130 1 281 1 269 1 136 3 220 3 236 3 354 3 6 1 143 1 318 1 307 1 276 2 246 3 277 1 114 1 
136 2 220 2 236 2 354 2 287 1 318 1 276 1 246 2 288 1 277 1 
2 1 323 1 375 1 198 1 220 1 149 1 94 1 96 1 315 1 243 1 152 1 62 1 225 1 369 1 246 1 
2 1 375 1 198 1 220 1 149 1 221 1 94 1 344 1 96 1 315 1 243 1 62 1 225 1 369 1 246 1 
336 1 278 1 178 1 247 1 298 2 219 4 282 1 204 1 287 2 188 1 288 2 129 1 267 1 228 1 17 2 314 1 237 1 80 1 57 1 294 2 83 1 380 1 26 1 175 2 
354 1 269 1 220 1 136 1 246 1 236 1 114 1 128 1 
361 1 19 1 
361 1 19 1 
7 1 232 1 
7 1 232 1 
7 1 232 1 
361 1 334 1 19 1 
361 1 334 1 19 1 
227 1 361 1 19 1 
177 1 155 1 7 1 361 2 232 1 19 2 
361 1 334 1 19 1 
361 1 363 1 19 1 
361 1 363 1 19 1 
361 1 363 1 19 1 
156 1 227 1 338 1 31 1 104 1 361 1 16 1 89 1 374 1 169 1 220 2 19 1 136 2 236 2 315 1 317 1 325 1 354 2 367 1 143 1 215 1 246 2 173 1 176 1 
177 1 31 2 361 2 51 1 16 2 89 3 322 1 78 1 169 1 19 2 151 2 325 2 306 1 143 2 112 1 307 1 135 1 173 2 176 2 
240 1 230 1 271 1 302 2 150 2 
271 1 209 1 302 1 
240 1 209 1 302 1 
240 1 1 1 230 1 271 2 302 3 150 1 
240 1 241 1 230 1 271 1 302 2 150 1 
278 1 30 2 31 5 180 3 3 1 201 1 202 1 160 1 283 1 367 1 327 1 143 5 187 1 307 2 188 1 290 3 129 1 208 1 104 1 311 2 48 1 54 1 21 1 331 1 353 1 332 2 296 1 215 1 113 1 26 1 85 2 174 4 
278 3 30 6 31 9 180 8 3 1 201 6 202 3 303 5 37 1 38 1 160 2 283 1 123 1 367 4 143 9 327 2 187 2 307 5 188 3 290 9 261 5 129 3 167 1 311 6 48 2 373 1 54 2 210 1 21 1 353 1 296 3 26 3 85 6 174 7 86 1 
278 1 30 2 31 3 180 3 3 1 202 2 160 1 367 1 327 1 143 3 187 1 307 3 188 1 290 4 129 1 167 1 208 1 48 1 311 2 54 1 332 1 296 1 113 1 26 1 174 2 85 2 
278 2 30 4 31 4 180 5 3 1 202 3 37 1 38 1 160 1 367 2 327 1 143 4 187 1 307 4 188 2 290 7 129 2 167 1 208 1 311 4 48 1 54 1 210 1 332 2 296 2 113 1 26 2 85 4 174 3 
284 1 
243 1 32 1 199 1 
366 1 243 1 
243 1 198 1 96 1 
69 1 243 1 
243 1 96 1 
81 1 243 3 141 1 198 1 199 2 96 1 
129 1 247 2 179 1 168 1 219 7 314 3 18 2 17 4 91 1 137 1 56 1 293 1 205 1 26 1 207 1 259 1 175 3 66 1 
278 3 178 1 247 5 179 2 298 2 219 31 35 1 282 1 91 1 137 1 301 1 95 1 252 1 305 3 205 2 207 1 259 2 188 3 129 4 168 2 267 1 17 16 18 3 314 10 293 1 56 5 212 1 24 4 333 1 296 3 379 1 380 1 26 4 175 15 
178 2 247 3 298 4 179 1 181 1 219 9 282 2 137 1 205 1 259 1 207 1 129 1 168 1 267 2 17 5 18 2 314 4 56 1 293 1 191 1 333 1 380 2 26 1 175 4 
129 1 247 2 179 1 168 1 219 7 314 3 18 2 17 4 91 1 137 1 56 1 293 1 205 1 26 1 207 1 259 1 175 3 
129 1 247 2 179 1 168 1 219 7 314 3 18 2 17 4 91 1 137 1 56 1 293 1 205 1 26 1 207 1 259 1 175 3 
291 2 248 1 75 1 2 1 312 1 375 1 376 1 149 1 184 1 94 1 96 1 238 1 243 1 133 1 62 1 225 1 347 1 98 1 378 2 256 1 275 2 163 2 217 1 
1 1 2 1 33 1 157 1 184 2 302 2 94 1 256 1 163 1 291 1 103 1 328 1 75 2 312 1 313 1 271 1 375 1 209 1 149 1 170 1 352 1 274 1 240 1 62 1 378 1 275 1 358 1 216 1 28 1 29 1 
1 1 2 1 197 1 33 1 157 1 184 3 302 2 94 1 142 1 256 1 163 1 291 1 328 1 75 3 312 1 313 1 271 1 375 1 209 1 149 1 376 1 170 1 274 1 240 1 62 1 378 1 275 1 358 2 28 1 29 1 
1 1 2 1 197 1 157 1 184 2 302 2 94 1 142 1 163 1 291 1 328 1 75 2 375 1 271 1 149 1 170 1 209 1 274 1 240 1 62 1 378 1 275 1 358 2 28 1 29 1 
1 1 2 1 197 1 33 1 157 1 184 1 302 2 94 1 256 1 163 1 291 1 103 1 75 1 312 1 313 1 271 1 375 1 209 1 149 1 170 1 352 1 240 1 62 1 378 1 275 1 28 1 
308 1 
194 2 2 2 3 1 201 6 202 2 159 1 160 1 254 1 6 1 255 1 307 2 127 2 260 1 263 2 348 1 264 1 270 2 269 1 20 1 21 1 133 1 354 1 355 1 134 1 217 1 320 1 27 2 30 2 180 2 31 5 362 1 93 2 220 1 94 1 96 1 283 3 285 1 225 2 99 1 143 5 327 1 101 2 290 2 189 1 48 1 229 1 375 1 54 1 149 2 60 1 243 1 109 4 62 2 246 1 114 1 
264 1 31 3 229 1 362 1 342 1 270 1 269 1 220 1 201 2 20 1 283 1 60 1 254 1 109 2 354 1 6 1 285 1 255 1 143 3 246 1 114 1 260 1 
31 3 3 1 362 1 342 1 220 1 201 1 283 1 254 1 6 1 255 1 285 1 143 3 307 1 260 1 264 1 229 1 269 1 20 1 60 1 354 1 109 3 246 1 27 1 114 1 
264 1 31 3 3 1 229 1 362 1 342 1 270 1 269 1 220 1 201 2 20 1 283 1 60 1 254 1 109 3 354 1 6 1 285 1 255 1 143 3 307 1 127 1 246 1 27 1 114 1 260 1 
194 2 30 1 180 1 31 5 3 5 362 1 342 1 93 2 220 1 201 7 202 2 283 3 254 1 6 1 255 1 285 1 124 1 125 1 327 1 143 5 307 5 126 1 127 4 101 2 260 1 263 2 348 1 264 1 48 1 229 1 131 1 269 1 270 4 54 1 20 1 21 1 235 1 60 1 354 1 109 6 134 1 246 1 27 4 114 1 
194 2 3 1 201 4 202 2 159 1 254 1 6 1 255 1 307 2 127 2 260 1 264 1 348 1 263 2 269 1 270 2 20 1 21 1 354 1 134 1 27 2 30 1 31 4 180 1 362 1 220 1 93 2 283 2 285 1 143 4 327 1 290 2 101 2 48 1 229 1 54 1 60 1 109 4 246 1 114 1 
194 2 30 1 180 1 31 4 3 1 362 1 93 2 220 1 201 4 202 2 283 2 254 1 6 1 255 1 285 1 125 1 143 4 327 1 307 1 127 2 126 1 101 2 260 1 263 2 348 1 264 1 48 1 229 1 270 2 269 1 54 1 20 1 235 1 21 1 60 1 354 1 109 4 134 1 246 1 27 2 114 1 
194 2 30 1 180 1 31 4 3 1 362 1 93 2 220 1 201 4 202 2 283 2 254 1 6 1 255 1 285 1 125 1 143 4 327 1 307 1 127 2 126 1 101 2 260 1 263 2 348 1 264 1 48 1 229 1 270 2 269 1 54 1 20 1 235 1 21 1 60 1 354 1 109 4 134 1 246 1 27 2 114 1 
30 1 180 1 31 4 3 1 300 1 362 1 93 2 220 1 201 4 283 2 254 1 6 1 255 1 285 1 125 1 143 4 327 1 307 1 127 2 290 2 260 1 263 2 348 1 264 1 148 1 49 2 48 1 229 1 270 2 269 1 54 1 20 1 21 1 60 1 23 1 354 1 109 4 246 1 319 2 27 2 114 1 
194 2 30 1 180 1 31 4 3 1 362 1 93 2 220 1 201 5 202 2 283 2 254 1 6 1 255 1 285 1 125 1 327 1 143 4 307 1 126 1 127 3 101 2 260 1 263 2 348 1 264 1 48 1 229 1 131 1 269 1 270 3 54 1 20 1 21 1 235 1 60 1 354 1 109 5 134 1 246 1 27 3 114 1 
194 2 30 1 180 1 31 4 3 1 362 1 93 2 220 1 201 5 202 2 283 2 254 1 6 1 255 1 285 1 125 1 327 1 143 4 307 1 126 1 127 3 101 2 260 1 263 2 348 1 264 1 48 1 229 1 131 1 269 1 270 3 54 1 20 1 21 1 235 1 60 1 354 1 109 5 134 1 246 1 27 3 114 1 
3 1 300 1 201 4 159 1 254 1 6 1 255 1 307 1 127 2 260 1 264 1 348 1 263 2 269 1 270 2 20 1 21 1 354 1 319 2 27 2 30 1 31 4 180 1 362 1 220 1 93 2 283 2 285 1 143 4 327 1 290 2 48 1 49 2 229 1 54 1 60 1 109 4 246 1 114 1 
336 1 178 1 247 2 179 1 298 2 32 1 219 6 282 1 137 1 287 1 205 1 207 1 288 1 129 1 267 1 314 2 17 3 18 1 293 1 57 1 315 2 294 1 83 1 380 1 26 1 175 3 
336 2 278 2 247 1 178 2 298 4 182 1 219 14 282 2 183 1 95 1 345 1 305 3 226 1 287 11 188 1 288 4 129 2 267 2 314 2 17 8 56 1 315 1 272 1 57 1 273 1 242 1 24 3 294 11 296 2 379 1 380 2 26 1 175 6 
336 1 178 1 298 2 70 1 2 1 219 2 182 1 281 1 282 1 198 1 323 1 220 2 136 1 183 1 94 1 96 1 326 1 225 1 369 1 206 1 288 1 267 1 375 1 17 1 149 1 236 1 315 1 57 1 273 1 243 1 354 1 152 1 62 1 153 1 380 1 246 2 276 1 175 1 
336 3 247 4 298 6 339 2 2 3 197 1 198 2 205 1 162 2 207 1 129 3 267 3 18 1 17 10 314 8 315 2 273 1 354 1 26 3 276 1 175 10 278 2 178 3 179 1 182 1 219 20 281 1 282 3 323 2 137 1 183 1 136 1 220 3 94 2 96 2 225 1 186 2 287 7 369 2 188 2 288 7 289 1 42 1 102 2 375 2 149 3 236 1 293 1 56 4 57 3 243 2 294 7 152 2 295 1 62 3 296 2 380 3 246 3 154 2 
336 2 178 2 298 4 250 1 2 8 197 1 182 1 219 2 282 2 92 1 220 1 136 1 183 1 222 1 94 2 96 2 225 2 15 2 265 1 267 2 77 1 375 2 17 1 149 8 236 1 57 2 61 1 354 1 243 3 133 1 83 1 62 7 356 1 380 2 246 1 276 1 216 1 175 1 217 1 
336 1 278 1 247 1 178 1 298 2 219 3 282 1 136 1 220 1 287 1 188 1 288 1 129 1 267 1 314 1 17 1 211 1 236 1 57 1 273 1 294 1 354 1 296 1 318 1 380 1 246 1 26 1 175 2 277 1 
336 1 278 1 129 1 178 1 298 2 267 1 219 2 282 1 314 1 17 2 56 1 57 1 294 1 83 1 204 1 287 1 380 1 288 1 
336 1 247 1 178 1 298 2 267 1 219 2 228 1 282 1 314 1 57 1 294 1 83 1 287 1 380 1 188 1 26 1 288 1 175 2 
278 1 336 1 178 1 247 1 298 2 219 4 282 1 287 2 188 1 288 2 129 1 267 1 17 2 314 2 56 1 57 1 294 2 83 1 296 1 380 1 26 1 175 2 
336 1 278 1 129 1 178 1 298 2 267 1 219 2 282 1 314 1 17 2 56 1 57 1 294 1 356 1 204 1 287 1 380 1 288 1 
336 1 247 1 178 1 298 2 267 1 219 2 228 1 282 1 314 1 57 1 294 1 356 1 287 1 380 1 188 1 26 1 288 1 175 2 
278 1 336 1 178 1 247 1 298 2 219 4 282 1 287 2 188 1 288 2 129 1 267 1 17 2 314 2 56 1 57 1 294 2 356 1 296 1 380 1 26 1 175 2 
336 1 278 1 129 1 247 1 178 1 298 2 267 1 219 4 282 1 314 2 17 2 56 1 57 1 294 2 287 2 296 1 380 1 26 1 188 1 175 2 288 2 
336 1 178 1 298 2 2 1 182 1 219 2 282 1 198 1 323 1 220 1 183 1 94 1 96 1 225 1 369 1 267 1 17 1 375 1 149 1 315 1 57 1 243 1 152 1 62 1 380 1 246 1 154 1 175 1 
336 1 178 1 298 2 2 1 182 1 219 2 282 1 198 1 221 1 220 1 183 1 94 1 344 1 96 1 225 1 369 1 267 1 17 1 375 1 149 1 315 1 213 1 57 1 243 1 62 1 380 1 246 1 175 1 
278 1 336 1 178 1 247 1 298 2 219 4 282 1 287 2 188 1 288 2 129 1 267 1 17 2 314 2 56 1 57 1 273 1 294 2 296 1 380 1 26 1 175 2 
278 1 336 1 247 1 178 1 298 2 339 1 2 1 219 4 282 1 198 1 323 1 220 1 94 1 96 1 287 2 369 1 188 1 288 2 129 1 267 1 314 2 17 2 375 1 149 1 56 1 57 1 294 2 243 1 152 1 62 1 296 1 380 1 26 1 246 1 175 2 154 1 216 1 
336 1 278 1 178 1 298 2 219 3 282 1 136 1 220 1 287 1 188 1 288 1 129 1 266 1 267 1 314 1 17 2 236 1 56 1 57 1 273 1 354 1 294 1 296 1 318 1 380 1 26 1 246 1 175 1 277 1 
278 3 195 2 247 3 178 2 298 4 181 1 219 19 282 2 36 1 95 1 223 1 305 1 368 1 188 3 129 3 267 2 17 9 314 6 107 2 56 3 59 1 24 2 82 1 171 1 296 3 379 1 380 2 26 3 175 10 297 1 
117 1 278 3 195 1 247 2 178 3 298 6 181 1 219 26 4 1 282 3 36 2 185 1 324 1 305 2 368 1 188 2 166 1 129 3 267 3 106 1 314 4 17 14 107 4 56 2 59 1 24 2 333 2 82 1 171 2 296 3 379 2 380 3 26 2 175 12 
117 1 278 4 195 1 247 4 178 3 179 1 298 6 181 1 219 41 4 1 282 3 137 1 36 2 185 1 95 1 324 1 305 3 205 1 368 1 207 1 188 4 166 1 129 5 267 3 18 1 106 1 17 20 314 8 234 1 107 4 293 1 56 4 59 1 24 4 333 1 82 1 171 1 296 4 379 3 380 3 26 5 175 21 297 1 
117 1 278 4 195 1 247 4 178 4 179 1 298 8 181 1 219 38 4 1 282 4 137 1 36 2 185 1 95 1 324 1 305 3 205 1 368 1 207 1 188 3 166 1 129 5 267 4 18 1 106 1 17 20 314 7 234 1 107 4 293 1 56 3 59 1 24 4 333 2 82 1 171 1 296 4 379 3 380 4 26 4 175 18 297 1 
117 1 278 7 195 1 247 7 178 2 179 1 298 4 181 1 219 52 4 1 282 2 137 1 36 1 185 1 95 2 324 1 305 4 205 1 368 1 207 1 188 7 166 1 129 8 267 2 18 1 106 1 17 27 314 14 107 4 293 1 56 7 59 1 242 2 24 4 333 1 82 1 171 1 296 7 379 2 380 2 26 8 175 25 
177 1 122 1 325 1 361 1 16 1 322 1 19 1 135 1 173 1 176 1 
304 1 46 1 325 1 361 1 16 1 192 1 19 1 173 1 176 1 
227 1 338 1 
9 1 334 1 
155 1 363 1 330 1 
177 1 31 1 361 1 51 1 16 1 89 2 322 1 78 1 169 1 19 1 151 1 325 1 306 1 143 1 307 1 135 1 173 1 176 1 
177 1 31 1 361 1 51 1 16 1 89 2 322 1 78 1 169 1 19 1 151 1 325 1 306 1 143 1 307 1 135 1 173 1 176 1 
177 1 31 1 361 1 51 1 16 1 89 2 322 1 78 1 169 1 19 1 151 1 325 1 306 1 143 1 307 1 135 1 173 1 176 1 
155 1 9 1 334 1 
155 1 9 1 334 1 
363 1 330 1 
155 1 363 1 330 1 
156 1 374 1 
156 1 338 1 31 1 361 1 89 1 220 2 136 2 39 1 325 1 367 1 143 1 227 1 104 1 51 1 16 1 374 1 19 1 236 2 315 1 151 1 317 1 354 2 215 1 246 2 173 1 174 1 176 1 
336 1 68 1 178 1 298 2 2 2 182 1 219 2 282 1 220 2 183 1 222 1 94 1 96 1 15 2 147 1 372 1 267 1 77 1 375 1 17 1 149 2 329 1 57 1 273 1 243 1 354 2 62 2 380 1 246 2 65 1 175 1 
291 1 2 1 375 1 149 1 94 1 72 1 96 1 22 1 243 1 133 1 62 1 225 1 98 1 217 1 
291 1 1 1 280 1 2 2 197 1 33 1 157 1 271 1 375 1 209 1 149 2 170 1 302 2 94 1 72 1 240 1 62 2 100 1 216 1 
291 1 1 1 2 1 197 1 33 1 157 1 271 1 375 1 209 1 149 1 170 1 302 2 94 1 240 1 62 1 41 1 100 1 
291 1 1 1 280 1 2 1 197 1 33 1 157 1 271 1 375 1 209 1 149 1 170 1 302 2 72 1 94 1 240 1 62 1 100 1 
25 1 
87 1 30 1 180 1 48 1 3 1 54 1 21 1 10 1 327 1 307 1 
278 2 129 2 218 1 30 5 180 5 311 5 202 5 316 2 296 2 162 1 307 5 188 2 26 2 85 5 290 10 
87 1 30 1 180 1 32 1 3 1 10 1 307 1 
194 1 30 1 180 1 31 1 3 1 201 1 202 1 283 1 327 1 143 1 307 2 290 1 101 1 48 1 54 1 21 1 134 1 
0 2 69 2 118 2 2 3 3 2 198 3 71 2 199 2 201 5 202 6 160 2 161 2 10 1 162 2 307 8 129 2 310 1 311 6 268 1 350 2 21 4 132 1 316 2 81 1 26 2 216 1 85 6 278 2 87 1 218 2 30 8 180 9 31 5 362 2 94 3 96 3 366 3 283 3 140 1 225 1 99 1 327 4 143 5 145 1 188 2 290 12 48 4 375 4 54 4 149 3 243 10 62 3 296 2 381 2 
278 2 218 1 249 1 30 5 31 1 180 8 3 2 4 1 201 1 185 1 202 3 160 1 324 1 283 1 305 1 99 1 143 1 327 2 307 5 188 2 290 6 166 1 129 2 47 1 311 5 48 2 106 1 54 2 21 2 316 2 24 1 296 2 379 1 26 2 85 5 
129 1 30 1 179 1 180 2 31 1 48 1 54 1 21 1 316 2 205 1 143 1 327 1 193 1 357 1 26 1 207 1 126 1 146 1 64 1 
283 1 31 1 3 1 143 1 307 1 201 1 
30 2 180 2 31 3 2 4 34 1 201 4 94 1 96 1 160 2 283 2 346 1 225 2 327 2 99 2 143 3 145 2 189 1 167 1 48 2 375 1 54 2 149 4 21 1 132 1 243 1 133 1 355 1 62 4 217 1 
2 1 62 1 225 1 110 1 149 1 154 1 146 1 
30 2 180 1 311 2 48 1 3 2 18 1 54 1 202 2 21 1 160 1 327 1 99 1 307 4 85 2 290 4 
105 1 173 1 176 1 
105 1 173 1 176 1 
156 1 322 1 343 1 173 1 176 1 
105 1 173 1 176 1 
173 1 115 1 176 1 
173 1 115 1 176 1 
173 1 115 1 176 1 
173 1 176 1 
361 1 19 1 
129 2 178 1 247 3 298 2 179 2 267 1 181 1 219 10 282 1 314 5 17 5 56 2 205 2 380 1 193 1 207 1 26 2 175 5 
278 1 129 1 178 1 298 2 181 1 267 1 219 2 282 1 17 2 314 1 56 1 380 1 
278 1 129 1 247 1 178 1 298 2 181 1 267 1 219 4 282 1 314 2 17 2 56 1 296 1 380 1 26 1 188 1 175 2 
178 3 247 1 298 6 179 1 181 1 267 3 219 3 282 3 314 2 17 1 56 1 333 1 205 1 380 3 144 1 175 2 297 1 
278 3 178 5 247 7 179 3 298 10 181 1 219 34 35 1 282 5 137 1 200 1 252 1 95 1 305 3 205 3 207 2 144 1 188 3 129 5 267 5 18 1 17 16 314 12 293 1 56 5 212 1 24 4 333 2 296 3 379 1 380 5 26 5 175 18 297 1 
178 1 247 2 298 2 179 1 181 1 219 8 282 1 137 1 305 1 205 1 207 1 129 1 166 1 267 1 18 1 17 4 314 2 293 1 24 1 379 1 380 1 26 1 175 4 
278 1 247 2 178 2 179 1 298 4 181 1 219 11 282 2 137 1 200 1 95 1 305 1 205 1 207 1 166 1 129 2 267 2 18 1 17 6 314 3 293 1 56 1 24 2 296 1 379 1 380 2 26 1 175 5 
278 2 178 3 247 3 179 1 298 6 181 1 219 19 4 1 282 3 137 1 200 1 185 1 324 1 305 1 205 1 207 1 188 2 166 1 129 3 267 3 18 1 106 1 17 9 314 4 293 1 56 1 24 1 333 1 296 2 379 1 380 3 26 3 175 10 
278 2 178 3 247 3 179 1 298 6 181 1 219 17 4 1 282 3 137 1 200 1 185 1 324 1 305 1 205 1 207 1 188 1 166 1 129 3 267 3 18 1 17 10 314 5 106 1 293 1 56 2 24 1 333 1 296 2 379 1 380 3 26 2 175 7 
178 1 247 2 298 2 179 1 181 1 219 8 282 1 137 1 305 1 205 1 207 1 129 1 166 1 267 1 18 1 17 4 314 2 293 1 24 1 379 1 380 1 26 1 175 4 
278 2 178 1 247 1 298 2 181 1 219 12 4 1 282 1 185 1 324 1 305 1 188 2 166 1 129 2 267 1 17 6 314 2 106 1 56 1 24 1 296 2 379 1 380 1 26 2 175 6 
278 2 178 4 247 3 179 1 298 8 181 1 219 18 4 1 282 4 137 1 200 1 185 1 324 1 305 1 205 1 207 1 188 1 166 1 129 3 267 4 18 1 106 1 17 10 314 5 293 1 56 2 24 1 333 2 296 2 379 1 380 4 26 2 175 8 
278 3 178 4 247 3 298 8 181 1 219 16 4 1 282 4 185 1 324 1 305 1 188 2 166 1 129 3 267 4 106 1 17 9 314 6 56 3 24 1 333 2 296 3 379 1 380 4 26 2 175 7 297 1 
129 1 247 3 179 3 219 7 314 6 17 3 137 1 293 2 56 3 205 3 26 1 207 1 175 4 
278 2 178 4 247 3 179 1 298 8 181 1 219 18 4 1 282 4 137 1 185 1 324 1 305 1 205 1 207 1 188 1 166 1 129 3 267 4 18 1 106 1 17 10 314 4 293 1 56 1 24 1 333 2 296 2 379 1 380 4 26 2 175 8 297 1 
129 1 247 2 178 2 298 4 179 1 267 2 219 8 282 2 18 1 17 4 314 3 137 1 56 1 293 1 333 1 205 1 380 2 26 1 207 1 175 4 
129 1 247 2 179 1 32 1 219 6 18 1 314 2 17 3 137 1 293 1 205 1 207 1 26 1 175 3 
278 1 129 1 247 1 178 1 298 2 267 1 219 4 282 1 314 2 17 2 200 1 56 1 296 1 380 1 26 1 188 1 175 2 
278 1 129 1 247 1 219 7 17 3 314 2 95 1 56 1 24 2 305 1 296 1 379 1 26 1 188 1 175 4 
278 2 247 5 178 2 179 2 298 4 219 23 282 2 137 1 95 1 345 1 305 2 205 2 207 1 188 2 144 1 129 3 267 2 18 1 314 9 17 11 293 1 56 4 24 2 242 1 333 2 296 2 380 2 26 3 175 12 
24 1 219 1 175 1 
305 1 219 1 17 1 
278 1 129 1 178 1 247 2 298 2 267 1 219 6 282 1 17 3 314 3 200 1 56 1 296 1 162 1 380 1 188 1 26 1 175 3 
278 2 178 1 247 1 298 2 181 1 219 12 4 1 282 1 185 1 324 1 305 1 188 2 166 1 129 2 267 1 17 6 314 2 106 1 56 1 24 1 296 2 379 1 380 1 26 2 175 6 
129 1 247 1 179 1 219 6 17 3 314 2 56 1 205 1 207 1 26 1 175 3 
247 1 178 1 179 1 298 2 267 1 219 3 282 1 17 1 314 2 137 1 56 1 293 1 333 1 205 1 380 1 144 1 175 2 
315 1 264 1 196 1 354 1 220 1 158 1 246 1 
44 1 264 1 196 1 158 1 220 1 120 1 190 1 315 1 214 1 354 1 111 1 246 1 
45 1 2 4 375 1 149 4 253 1 94 1 96 1 133 1 243 1 62 4 225 1 216 1 217 1 
2 2 198 1 375 2 149 2 94 1 96 1 121 1 243 1 62 2 63 1 145 1 262 1 42 1 382 1 
240 1 2 1 62 1 225 1 375 1 209 1 170 1 149 1 302 1 94 1 
372 1 243 1 2 2 197 1 62 2 77 1 375 1 149 2 94 1 216 1 96 1 
243 1 133 1 32 1 2 1 62 1 225 1 375 1 149 1 94 1 217 1 96 1 
2 1 198 1 375 1 323 1 136 1 220 2 149 1 94 1 236 1 96 1 315 1 243 1 354 1 62 1 225 1 369 1 276 1 246 2 
69 1 2 1 229 1 71 1 269 1 198 2 375 1 323 1 136 1 220 2 149 1 94 1 236 2 96 2 315 1 243 3 354 2 62 1 369 1 276 1 246 2 145 1 114 1 
69 1 45 1 2 2 229 1 71 1 269 1 198 2 375 1 136 1 220 2 149 2 94 1 236 2 344 1 96 2 315 1 243 3 354 2 62 2 369 1 276 1 246 2 145 1 114 1 
69 1 45 1 76 1 31 2 2 3 3 1 362 1 198 1 71 1 375 1 149 3 199 1 201 1 94 1 96 1 365 1 366 1 243 4 62 3 225 1 143 2 307 1 145 1 
69 1 45 1 31 2 2 3 3 1 362 1 350 1 198 1 71 1 375 1 149 3 199 1 201 1 94 1 96 1 366 1 243 4 62 3 225 1 143 2 307 1 145 1 
61 1 2 1 62 1 375 1 149 1 94 1 
265 1 250 1 2 7 197 1 77 1 198 1 375 3 92 1 149 7 94 2 96 2 81 1 61 1 243 3 62 6 225 2 216 1 15 1 262 1 67 1 382 1 
336 2 247 2 178 2 179 1 298 4 339 1 2 1 219 6 282 2 198 1 323 1 137 1 220 2 136 1 94 1 96 1 186 1 287 1 205 1 369 1 207 1 288 1 129 1 147 1 267 2 18 1 17 3 314 2 375 1 149 1 236 1 293 1 315 2 57 2 273 1 294 1 243 1 354 1 152 1 62 1 380 2 26 1 246 2 276 1 175 3 216 1 154 1 
0 1 87 1 30 1 118 1 180 1 31 3 2 1 3 1 362 1 199 1 201 2 366 1 283 1 10 1 225 1 327 2 143 3 307 1 48 2 350 1 54 2 149 1 21 2 132 1 243 2 62 1 174 1 381 1 
2 2 198 1 375 2 199 1 149 2 94 1 96 1 140 1 81 1 61 1 243 2 62 2 216 1 
265 1 2 5 77 1 375 2 149 5 92 1 253 1 94 2 96 2 133 1 243 3 62 4 225 1 145 1 217 1 216 1 
2 5 77 1 375 2 149 5 92 1 253 1 94 2 55 1 96 2 133 1 243 3 62 4 225 1 145 1 217 1 216 1 
2 1 198 1 375 1 136 1 220 2 149 1 94 1 236 1 344 1 96 1 315 1 243 1 354 1 62 1 225 1 369 1 276 1 246 2 
2 1 198 1 375 2 149 1 94 1 96 1 81 1 243 1 62 1 145 1 262 1 67 1 382 1 
315 1 40 1 73 1 53 1 351 1 
337 1 31 2 3 1 229 1 88 1 362 1 50 1 53 2 269 1 351 1 315 1 40 2 6 1 73 2 143 2 307 1 174 1 164 1 114 1 
68 1 354 1 73 1 53 1 220 1 246 1 329 1 65 1 351 1 
337 1 164 1 351 1 
274 1 328 1 75 1 312 1 256 1 184 1 352 1 29 1 
328 2 75 4 119 1 312 1 5 1 184 4 58 1 274 3 84 1 370 1 256 1 358 2 359 1 29 2 
43 1 321 1 328 1 75 2 312 1 184 2 352 1 274 1 224 1 256 1 358 1 29 1 
328 1 279 1 75 3 119 1 312 1 184 3 352 1 274 1 84 2 370 2 256 1 29 1 
274 2 52 2 245 1 257 1 
75 1 341 1 312 1 256 1 184 1 352 1 
274 1 328 1 75 2 286 1 312 1 256 1 358 1 184 2 352 1 29 1 
274 1 328 1 32 1 29 1 
274 1 328 1 75 1 312 1 256 1 184 1 29 1 
75 1 275 1 163 1 
328 1 75 3 119 1 312 1 184 3 352 1 274 1 84 1 370 2 256 1 165 1 29 1 
274 1 328 1 75 2 312 1 256 1 74 1 358 1 184 2 29 1 
274 1 75 1 312 1 271 1 256 1 209 1 302 1 138 1 184 1 352 1 359 1 
274 1 75 1 312 1 256 1 184 1 352 1 29 1 
328 1 75 1 312 1 256 1 184 1 352 1 29 2 
75 2 312 2 184 2 352 1 139 1 274 1 335 1 256 2 258 1 29 1 
328 1 75 3 312 1 184 3 352 1 58 1 274 2 286 1 172 1 256 1 358 2 359 1 29 1 
328 1 75 2 1 1 312 1 271 1 209 1 302 2 184 2 352 1 274 1 240 1 12 1 256 1 358 1 29 1 
328 1 75 4 340 1 312 2 184 4 352 1 58 1 274 2 256 2 74 1 358 2 359 1 29 1 
108 1 
274 1 328 1 75 1 312 1 256 1 184 1 352 1 29 1 
328 1 75 3 312 1 184 3 352 1 274 1 286 1 370 1 256 1 358 1 29 1 
274 1 58 1 5 1 359 1 
274 1 29 1 

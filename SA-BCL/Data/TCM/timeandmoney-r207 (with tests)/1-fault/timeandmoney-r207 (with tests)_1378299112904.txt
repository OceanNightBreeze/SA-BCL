#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
310 1 75 2 171 2 25 2 295 4 101 2 173 6 247 9 273 1 274 2 317 1 36 1 134 2 250 1 365 1 159 1 231 1 323 5 62 1 207 1 370 1 66 1 208 1 85 2 259 9 289 1 121 1 90 3 
310 1 171 2 75 2 25 2 295 4 101 2 173 6 247 9 273 1 274 2 317 1 36 1 134 2 250 1 365 1 159 1 231 1 323 5 62 1 207 1 370 1 66 1 208 1 85 2 259 9 289 1 121 1 90 3 
310 1 171 2 75 2 25 2 295 5 101 2 173 7 247 10 273 1 274 2 317 1 36 1 134 2 250 1 365 1 159 1 231 1 323 6 62 1 207 1 370 1 66 1 208 1 85 2 259 10 289 1 121 1 90 4 
310 1 171 2 75 1 25 2 295 3 101 2 173 4 247 7 273 1 274 2 317 1 134 2 250 1 365 1 159 1 231 1 323 4 62 1 207 1 370 1 66 1 208 1 85 2 259 7 289 1 121 1 90 2 
310 1 159 1 323 3 75 2 25 1 295 2 207 1 101 1 173 3 85 1 247 4 259 4 289 1 274 1 317 1 36 1 134 1 90 1 
310 1 159 1 311 1 323 1 171 1 25 1 207 1 101 1 360 1 85 1 247 2 259 2 273 1 121 1 274 1 332 1 
310 1 159 1 323 2 171 1 295 1 207 1 173 1 85 2 247 3 259 3 274 2 90 1 250 1 
310 1 171 1 75 2 25 1 295 4 101 1 173 7 247 9 274 2 317 1 36 1 134 1 250 1 365 1 159 1 323 5 207 1 208 1 85 2 238 1 141 1 259 9 289 1 90 3 
310 1 171 1 75 2 25 1 295 4 101 1 173 7 247 9 274 2 317 1 36 1 134 1 250 1 365 1 159 1 323 5 207 1 208 1 85 2 238 1 141 1 259 9 289 1 90 3 
233 1 138 1 176 1 
233 1 298 1 283 2 
50 2 70 1 363 2 188 2 37 2 254 2 67 1 285 2 
50 3 24 1 242 1 147 1 94 1 245 1 28 1 102 1 316 1 363 2 35 1 364 1 318 2 202 2 343 1 37 2 110 1 321 1 40 2 83 1 206 1 65 1 236 1 254 2 67 1 185 1 43 1 285 3 19 1 256 2 45 2 349 1 70 1 188 2 145 1 146 1 124 1 
50 1 363 1 188 1 189 1 37 1 4 1 254 1 67 1 333 1 285 1 
50 1 233 1 138 1 42 1 345 1 4 1 296 1 285 1 348 1 196 1 362 1 211 1 37 1 308 1 
50 1 233 1 138 1 42 1 345 1 296 2 4 1 254 1 285 1 348 1 196 1 362 2 363 1 188 1 37 1 
296 1 218 1 302 1 219 1 362 1 
233 1 138 1 106 1 355 1 296 2 218 1 219 1 362 2 
296 1 218 1 362 1 
50 1 4 1 296 1 254 1 304 1 67 1 285 1 362 1 363 1 188 1 189 1 37 1 333 1 219 1 
233 1 
233 1 138 1 330 1 355 1 296 2 218 1 219 1 362 2 
92 1 233 1 138 1 193 2 61 2 129 1 296 5 209 1 30 1 281 1 362 5 287 1 377 1 301 2 6 1 72 1 355 1 218 2 219 2 
70 1 176 1 
50 2 336 1 254 1 339 1 285 2 70 2 363 1 188 1 37 2 
191 1 194 1 123 1 
50 1 24 1 147 1 368 1 206 1 65 1 236 1 28 1 102 1 185 1 285 1 45 1 70 1 318 1 202 1 343 1 
24 1 50 2 147 1 206 1 65 1 236 1 327 1 28 1 102 1 254 1 185 1 285 2 45 1 200 1 363 1 318 1 202 1 343 1 37 1 123 1 
50 3 70 1 200 1 363 3 188 1 37 3 254 3 285 3 
50 1 363 1 37 1 4 1 254 1 333 1 285 1 
50 1 363 1 336 1 188 1 37 1 4 1 254 1 339 1 285 1 
24 1 50 4 147 1 242 1 94 1 245 1 336 1 28 1 102 1 4 1 296 1 196 1 362 1 200 1 363 3 35 1 318 1 202 1 343 1 37 3 110 1 321 1 40 1 82 1 42 1 206 1 65 1 345 1 236 1 327 1 254 3 185 1 67 1 285 4 348 1 19 1 256 2 45 1 70 1 142 1 188 2 145 1 146 1 124 1 
50 2 70 1 200 1 363 1 359 1 37 2 308 1 254 1 285 2 
50 3 336 1 233 1 252 1 42 1 345 1 327 1 296 1 4 1 254 3 285 3 348 1 362 1 196 1 200 2 142 1 363 3 188 1 37 3 
191 1 50 2 336 1 254 2 285 2 200 1 363 2 188 1 37 2 123 1 
50 1 24 1 147 1 206 1 65 1 236 1 102 1 28 1 185 1 285 1 45 1 70 1 318 1 202 1 343 1 
50 1 147 1 206 1 65 1 236 1 175 1 102 1 28 1 285 1 45 1 70 1 318 1 202 1 343 1 58 1 
191 2 313 1 94 2 245 1 194 2 148 1 220 1 79 1 300 1 56 1 35 1 110 1 40 4 234 1 84 1 373 1 19 1 256 2 349 2 46 1 216 1 145 1 146 1 123 2 
50 1 363 1 275 1 37 1 4 1 254 1 285 1 196 1 
50 5 336 1 359 1 327 1 254 4 280 1 285 5 104 1 70 1 200 2 363 4 188 1 37 5 308 1 
50 2 363 2 275 1 37 2 4 1 254 2 333 1 285 2 
240 1 137 1 
240 1 137 1 
322 1 230 1 
322 1 230 1 
322 1 230 1 
266 1 240 1 137 1 
198 1 240 1 137 1 
197 1 322 1 352 1 240 2 230 1 137 2 
266 1 240 1 137 1 
266 1 240 1 137 1 
240 1 137 1 177 1 
240 1 137 1 177 1 
240 1 137 1 177 1 
112 2 233 1 269 2 294 1 314 1 16 3 162 1 296 2 284 1 362 2 329 2 197 1 341 1 331 1 47 2 226 2 240 2 137 2 334 1 
50 2 51 1 269 1 99 1 296 1 152 1 362 1 341 1 198 1 363 2 226 1 37 2 137 1 277 1 112 1 63 1 324 1 16 1 17 1 254 2 285 2 329 1 70 1 240 1 
25 1 101 1 134 1 
25 1 332 1 101 1 
222 1 332 1 109 1 101 3 134 2 59 1 
369 1 332 1 109 1 101 2 134 1 59 1 
332 1 109 2 101 2 134 1 59 1 
313 1 193 1 148 1 99 1 220 1 55 2 152 1 296 5 298 1 362 5 199 1 301 1 80 1 344 1 366 1 61 1 138 1 233 2 324 1 373 1 283 3 287 2 288 2 377 3 87 1 72 1 353 1 168 2 355 1 169 1 218 1 219 4 
313 3 193 2 148 3 99 4 129 1 220 3 270 1 296 9 298 3 362 9 340 1 199 2 179 1 301 2 344 2 302 5 366 3 158 1 138 1 233 5 61 2 326 1 372 1 373 3 283 9 287 6 119 5 288 6 377 8 72 1 168 6 169 1 355 1 218 6 219 7 
313 1 193 1 148 1 99 1 129 1 220 1 55 1 296 3 298 2 362 3 199 1 301 1 80 1 344 1 366 1 138 1 233 3 61 1 373 1 283 4 287 2 288 2 377 3 87 1 168 2 219 2 
313 2 193 1 148 2 99 2 129 1 220 2 55 2 296 4 298 3 362 4 340 1 199 1 179 1 301 1 80 1 344 1 366 2 158 1 138 1 233 4 61 1 373 2 283 7 287 4 288 4 377 5 87 1 168 4 219 3 
2 1 28 1 176 1 
235 1 28 1 
98 1 
28 1 102 1 
0 1 2 2 380 1 343 1 28 3 102 1 
343 1 28 1 102 1 
68 1 28 1 
40 7 293 1 94 3 148 1 76 1 373 1 117 1 257 1 31 1 140 1 349 4 20 1 212 1 46 3 201 1 216 2 276 2 
40 7 293 1 94 3 148 1 76 1 373 1 117 1 257 1 31 1 140 1 349 4 20 1 212 1 46 3 201 1 216 2 276 2 
293 1 40 7 94 3 148 1 76 1 373 1 117 1 257 1 31 1 140 1 349 4 20 1 212 1 46 3 201 1 216 2 239 1 276 2 
293 1 94 15 313 3 148 4 76 2 220 3 29 1 31 2 248 1 201 2 35 1 7 1 108 3 276 3 136 1 320 1 366 3 40 31 373 4 279 1 186 4 117 1 19 1 256 2 257 5 44 1 140 1 20 1 349 16 212 2 46 10 216 5 145 1 146 1 
268 1 293 1 40 9 94 4 170 1 148 1 76 1 373 1 117 1 257 1 256 4 19 2 31 1 20 1 349 5 212 1 46 4 201 1 35 2 216 3 145 2 146 2 136 1 276 2 
310 1 147 1 171 1 25 1 172 1 150 1 101 2 173 1 247 2 153 1 299 1 222 1 34 1 274 1 202 1 318 1 134 1 228 1 159 1 323 1 206 1 207 1 85 1 374 1 45 1 259 2 262 1 264 1 332 1 125 1 
147 1 171 1 25 1 172 1 150 1 101 2 173 2 247 3 153 1 222 1 34 1 274 1 202 1 318 1 134 1 228 1 159 1 323 1 206 1 207 1 347 1 85 1 374 1 45 1 259 3 165 1 262 1 332 1 309 1 125 1 
147 1 171 1 25 1 150 1 101 2 173 2 247 2 153 1 222 1 202 1 318 1 134 1 228 1 159 1 323 1 206 1 207 1 347 1 374 1 45 1 259 2 165 1 262 1 332 1 125 1 
147 1 127 1 171 2 206 1 236 1 161 1 184 1 150 2 28 1 102 1 85 1 247 1 118 1 374 2 45 1 32 1 259 1 262 2 274 1 318 1 202 1 309 1 303 1 
310 1 147 1 171 1 25 1 172 1 150 1 101 2 247 1 153 1 299 1 222 1 34 1 274 1 202 1 318 1 134 1 228 1 206 1 85 1 374 1 45 1 259 1 165 1 262 1 332 1 125 1 
156 1 
50 1 147 1 95 2 52 1 193 1 96 2 102 1 296 5 4 1 298 2 5 1 196 1 199 1 301 1 202 2 10 1 61 1 206 1 64 1 345 1 348 1 211 1 72 1 355 3 356 2 218 6 308 1 127 1 27 1 28 1 272 4 362 5 32 1 224 1 318 2 227 1 37 1 229 2 367 1 138 1 233 2 42 1 182 2 139 1 236 2 283 2 285 1 286 1 375 2 287 2 45 2 376 2 377 2 291 1 241 1 
50 1 296 3 4 1 5 1 272 2 362 3 196 1 37 1 10 1 42 1 64 1 345 1 139 1 285 1 348 1 211 1 376 1 330 1 355 1 308 1 218 2 291 1 
50 1 296 3 4 1 5 1 272 3 362 3 196 1 37 1 10 1 138 1 233 1 42 1 64 1 345 1 139 1 285 1 348 1 211 1 330 1 355 1 356 1 218 1 308 1 291 1 
50 1 296 3 4 1 5 1 272 3 362 3 196 1 37 1 10 1 138 1 233 1 42 1 64 1 182 1 345 1 139 1 285 1 348 1 211 1 376 1 330 1 355 1 356 1 308 1 218 2 291 1 
50 1 91 1 95 2 193 1 96 2 4 1 296 5 5 1 298 2 196 1 301 1 10 1 157 1 61 1 64 1 345 1 348 1 211 1 258 1 72 1 355 3 356 4 267 1 218 7 308 1 272 6 362 5 133 1 37 1 227 1 229 2 367 1 138 5 233 5 42 1 182 4 139 1 285 1 287 1 375 2 376 4 377 1 330 1 291 1 
50 1 95 2 193 1 52 1 96 2 4 1 296 4 5 1 298 2 196 1 301 1 10 1 61 1 64 1 345 1 348 1 211 1 72 1 355 2 356 2 308 1 218 4 272 4 362 4 37 1 227 1 229 2 367 1 233 2 138 1 42 1 182 2 139 1 283 2 285 1 287 1 375 2 377 1 376 2 291 1 
50 1 91 1 95 2 193 1 96 2 296 4 4 1 298 2 5 1 272 4 362 4 196 1 301 1 227 1 37 1 10 1 229 2 367 1 233 1 138 1 61 1 42 1 182 2 64 1 345 1 139 1 285 1 348 1 375 2 287 1 211 1 258 1 376 2 377 1 72 1 355 2 356 2 267 1 218 4 308 1 291 1 
50 1 91 1 95 2 193 1 96 2 296 4 4 1 298 2 5 1 272 4 362 4 196 1 301 1 227 1 37 1 10 1 229 2 367 1 233 1 138 1 61 1 42 1 182 2 64 1 345 1 139 1 285 1 348 1 375 2 287 1 211 1 258 1 376 2 377 1 72 1 355 2 356 2 267 1 218 4 308 1 291 1 
50 1 193 1 96 2 128 1 296 4 4 1 5 1 272 4 362 4 196 1 301 1 249 2 227 1 37 1 10 1 229 2 233 1 138 1 61 1 42 1 182 2 64 1 345 1 139 1 237 1 283 2 285 1 348 1 164 2 287 1 211 1 376 2 377 1 72 1 355 2 354 1 356 2 267 1 218 4 308 1 291 1 
50 1 91 1 95 2 193 1 96 2 296 4 4 1 298 2 5 1 272 5 362 4 196 1 301 1 133 1 227 1 37 1 10 1 229 2 367 1 233 1 138 1 61 1 42 1 64 1 182 3 345 1 139 1 285 1 348 1 375 2 287 1 258 1 211 1 377 1 376 3 72 1 355 2 267 1 356 3 308 1 218 5 291 1 
50 1 91 1 95 2 193 1 96 2 296 4 4 1 298 2 5 1 272 5 362 4 196 1 301 1 133 1 227 1 37 1 10 1 229 2 367 1 233 1 138 1 61 1 42 1 64 1 182 3 345 1 139 1 285 1 348 1 375 2 287 1 258 1 211 1 377 1 376 3 72 1 355 2 267 1 356 3 308 1 218 5 291 1 
50 1 193 1 52 1 96 2 4 1 296 4 5 1 196 1 301 1 249 2 10 1 61 1 64 1 345 1 348 1 164 2 211 1 72 1 355 2 356 2 308 1 218 4 272 4 362 4 37 1 227 1 229 2 138 1 233 1 42 1 182 2 139 1 237 1 283 2 285 1 287 1 377 1 376 2 291 1 
191 1 293 1 94 3 245 1 194 1 148 1 76 1 176 1 31 1 35 1 110 1 276 1 40 6 234 1 373 1 19 1 256 2 117 1 20 1 349 3 70 2 46 2 216 2 145 1 123 1 146 1 
191 4 94 6 313 1 1 1 245 1 194 11 246 1 148 1 220 2 29 1 35 2 108 3 7 1 110 2 321 1 111 1 366 2 40 14 373 2 186 3 43 1 257 1 19 2 256 4 70 1 349 8 46 2 307 1 263 1 216 1 145 2 146 2 123 11 
24 1 191 1 50 2 147 1 94 1 245 1 28 1 102 1 154 1 200 1 363 1 35 1 202 1 318 1 343 1 37 1 110 1 111 1 321 1 368 1 12 1 40 2 206 1 65 1 236 1 327 1 254 1 185 1 285 2 43 1 256 2 19 1 45 1 70 1 349 1 145 1 146 1 74 1 
50 3 191 7 242 2 147 2 293 1 94 10 245 3 194 7 148 3 102 2 200 1 202 3 343 2 110 3 57 2 111 1 206 2 65 2 254 1 117 1 19 3 256 6 257 4 70 2 20 1 349 10 165 1 216 4 123 7 24 2 313 2 76 1 220 2 28 2 174 2 31 1 363 1 35 3 225 1 318 3 37 1 181 1 135 1 276 1 321 1 366 2 40 20 278 2 236 1 327 1 373 3 185 2 43 1 285 3 45 3 89 2 46 8 145 3 146 3 
50 1 147 4 94 1 245 2 100 1 102 3 200 1 202 7 343 1 110 2 8 1 206 3 253 1 254 1 256 4 19 2 349 1 165 1 71 1 21 1 264 1 127 1 77 1 28 4 78 1 132 1 32 1 363 1 35 2 318 6 37 1 38 1 321 1 40 2 83 1 234 1 236 2 43 1 285 1 45 7 145 2 146 2 290 1 381 1 
191 1 50 1 313 1 94 2 194 1 336 1 245 1 148 1 97 1 220 1 363 1 35 1 37 1 110 1 111 1 366 1 40 3 254 1 373 1 285 1 19 1 256 2 349 1 46 1 188 1 216 1 145 1 123 1 146 1 
191 1 40 2 194 1 245 1 234 1 220 1 373 1 257 1 256 2 19 1 300 1 349 2 46 1 35 1 145 1 123 1 146 1 110 1 
191 1 40 2 313 1 94 2 194 1 245 1 234 1 148 1 256 2 19 1 56 1 46 1 35 1 216 1 145 1 123 1 146 1 110 1 
191 2 40 4 94 2 313 1 194 2 245 1 148 1 234 1 220 1 373 1 257 1 256 2 19 1 349 2 46 2 35 1 216 1 145 1 123 2 146 1 110 1 366 1 
191 1 40 2 194 1 245 1 220 1 77 1 373 1 257 1 256 2 19 1 300 1 349 2 46 1 35 1 145 1 123 1 146 1 110 1 
191 1 40 2 313 1 94 2 194 1 245 1 148 1 77 1 256 2 19 1 56 1 46 1 35 1 216 1 145 1 123 1 146 1 110 1 
191 2 40 4 94 2 313 1 194 2 245 1 148 1 220 1 77 1 373 1 257 1 256 2 19 1 349 2 46 2 35 1 216 1 145 1 123 2 146 1 110 1 366 1 
191 2 40 4 94 2 313 1 194 2 245 1 148 1 220 1 373 1 257 1 256 2 19 1 349 2 46 2 35 1 216 1 145 1 123 2 146 1 110 1 366 1 
24 1 50 1 147 1 242 1 94 1 245 1 102 1 28 1 35 1 202 1 318 1 343 1 110 1 321 1 40 2 206 1 65 1 236 1 185 1 43 1 285 1 256 2 19 1 45 1 349 1 70 1 145 1 146 1 
50 1 147 1 94 1 245 1 102 1 175 1 28 1 35 1 202 1 318 1 343 1 110 1 58 1 321 1 40 2 206 1 65 1 236 1 18 1 43 1 285 1 256 2 19 1 45 1 349 1 70 1 145 1 146 1 
191 2 40 4 94 2 313 1 194 2 245 1 148 1 220 1 373 1 257 1 256 2 19 1 349 2 46 2 35 1 216 1 145 1 123 2 146 1 110 1 111 1 366 1 
191 2 24 1 50 1 147 1 242 1 94 2 313 1 194 2 245 1 148 1 220 1 102 1 28 1 35 1 202 1 318 1 343 1 110 1 366 1 40 4 206 1 65 1 373 1 185 1 285 1 257 1 256 2 19 1 45 1 349 2 46 2 89 1 264 1 216 1 145 1 123 2 146 1 
50 1 191 1 94 1 313 1 336 1 245 1 194 1 148 1 220 1 363 1 35 1 37 1 110 1 111 1 204 1 366 1 40 3 254 1 373 1 285 1 257 1 19 1 256 2 349 2 46 1 188 1 145 1 146 1 123 1 
268 1 93 1 94 10 313 3 148 3 220 3 29 1 131 2 155 1 35 2 108 1 7 1 366 3 40 19 373 3 186 2 19 2 256 4 257 3 69 1 349 9 46 6 213 1 143 1 216 3 122 1 145 2 265 1 146 2 357 2 
268 1 94 12 93 1 313 2 337 1 148 2 220 3 29 2 131 1 35 3 108 2 136 2 366 3 40 26 14 1 183 1 373 3 282 1 186 2 163 1 257 2 19 3 256 6 349 14 46 4 213 2 22 1 143 1 216 2 122 1 145 3 265 2 146 3 357 4 
268 1 293 1 93 1 94 21 313 4 337 1 148 5 76 1 220 4 29 3 131 1 155 1 31 1 35 3 108 3 7 1 276 1 136 1 366 4 40 41 14 1 183 1 373 5 282 1 186 4 163 1 117 1 19 3 256 6 257 4 20 1 349 20 46 8 214 1 22 1 213 2 143 1 216 4 122 1 145 3 265 1 146 3 357 4 
268 1 293 1 93 1 94 18 313 3 337 1 148 4 76 1 220 4 29 3 131 1 155 1 31 1 35 4 108 3 7 1 276 1 136 2 366 4 40 38 14 1 183 1 373 5 282 1 186 4 163 1 117 1 19 4 256 8 257 3 20 1 349 20 46 7 214 1 22 1 213 2 143 1 216 4 122 1 145 4 265 1 146 4 357 4 
268 1 293 1 93 1 94 25 313 7 337 1 148 8 76 1 220 7 29 2 131 1 31 1 35 2 108 4 7 2 276 1 136 1 366 7 40 52 14 1 183 1 373 8 282 1 186 4 163 1 117 1 19 2 256 4 257 7 20 1 349 27 46 14 22 1 213 1 263 2 143 1 216 7 122 1 145 2 265 1 146 2 357 4 
329 1 112 1 197 1 269 1 226 1 162 1 190 1 240 1 284 1 137 1 
198 1 277 1 
329 1 112 1 260 1 269 1 151 1 226 1 255 1 240 1 137 1 
112 1 233 1 269 1 294 1 314 1 16 2 162 1 296 1 284 1 362 1 329 1 197 1 341 1 47 1 226 1 240 1 137 1 334 1 
112 1 233 1 269 1 294 1 314 1 16 2 162 1 296 1 284 1 362 1 329 1 197 1 341 1 47 1 226 1 240 1 137 1 334 1 
112 1 233 1 269 1 294 1 314 1 16 2 162 1 296 1 284 1 362 1 329 1 197 1 341 1 47 1 226 1 240 1 137 1 334 1 
48 1 352 1 266 1 
48 1 352 1 266 1 
144 1 177 1 
144 1 352 1 177 1 
63 1 17 1 
50 2 51 1 269 1 99 1 296 1 152 1 362 1 198 1 105 1 363 2 226 1 37 2 137 1 277 1 112 1 63 1 324 1 16 1 17 1 254 2 285 2 329 1 70 1 47 1 240 1 334 1 219 1 
48 1 266 1 
144 1 352 1 177 1 
50 2 147 1 312 1 94 1 245 1 28 1 102 1 35 1 202 2 318 2 37 2 110 1 38 1 319 1 111 1 321 1 40 2 83 2 206 1 346 1 210 1 285 2 43 1 256 2 19 1 45 2 349 1 21 1 306 1 145 1 146 1 
147 1 232 1 244 1 206 1 25 1 172 1 101 2 153 1 374 1 45 2 222 1 165 1 264 1 332 1 318 2 202 2 217 1 134 1 228 1 
147 1 244 1 206 1 25 1 172 1 101 2 271 1 153 1 374 1 45 1 222 1 165 1 332 1 318 1 202 1 134 1 228 1 
147 1 127 1 206 1 236 1 28 1 102 1 374 1 45 1 32 1 350 1 318 1 202 1 217 1 303 1 
147 1 232 1 244 1 206 1 25 1 172 1 101 2 153 1 374 1 45 1 222 1 165 1 332 1 318 1 202 1 217 1 134 1 228 1 
113 1 
287 1 377 1 233 1 138 1 6 1 30 1 176 1 
95 1 193 1 296 1 298 1 362 1 301 1 367 1 61 1 233 2 138 1 283 1 375 1 287 1 377 1 72 1 355 1 218 1 
335 1 147 4 193 4 53 1 148 2 2 2 102 3 296 5 298 6 199 2 301 4 6 1 202 3 343 3 9 2 205 1 61 4 206 3 116 2 68 2 264 1 72 4 166 2 168 6 355 3 73 1 218 5 126 2 313 2 220 2 26 1 27 1 28 10 30 1 361 2 362 5 180 2 318 3 366 2 138 2 233 8 42 2 235 3 278 2 236 1 373 2 283 12 45 3 287 8 288 6 377 9 378 2 380 1 379 2 
313 2 337 1 193 2 148 2 220 2 27 1 296 1 29 1 298 3 362 1 199 1 301 2 108 1 39 1 366 2 61 2 233 5 138 2 183 1 116 1 373 2 282 1 283 6 186 1 163 1 287 5 288 5 377 8 261 1 22 1 378 2 72 2 168 5 355 1 218 1 
50 1 193 1 148 1 76 1 4 1 296 1 178 1 362 1 31 1 301 1 363 1 37 1 61 1 116 1 373 2 254 1 304 1 67 1 285 1 117 1 287 2 258 1 377 2 188 1 189 1 378 2 72 1 333 1 
287 1 377 1 233 1 138 1 301 1 61 1 193 1 6 1 72 1 30 1 
313 2 233 5 148 2 278 1 220 2 116 1 373 2 298 5 283 10 287 5 288 5 377 5 378 2 168 5 366 2 
233 1 138 1 355 1 296 1 218 1 362 1 
147 1 127 1 193 2 129 1 26 1 315 1 28 1 102 1 27 2 296 3 362 3 32 1 199 2 224 1 301 2 202 4 318 4 251 1 205 2 61 2 206 1 236 2 286 1 45 4 287 2 377 2 72 1 355 2 218 4 
50 3 24 1 242 1 147 1 94 1 245 1 102 1 28 1 363 2 35 1 202 1 318 1 37 2 343 1 110 1 321 1 40 1 206 1 65 1 236 1 254 2 67 1 185 1 285 3 19 1 256 2 45 1 70 1 188 2 145 1 146 1 124 1 
193 1 61 1 138 2 233 4 27 1 298 2 283 4 287 2 288 2 199 1 377 1 301 1 72 1 168 2 276 1 
329 1 112 1 351 1 
120 1 329 1 112 1 63 1 162 1 
329 1 112 1 351 1 
329 1 112 1 351 1 
329 1 112 1 297 1 
329 1 112 1 297 1 
329 1 112 1 297 1 
329 1 112 1 
240 1 137 1 
40 8 293 1 94 4 148 1 76 1 373 1 117 1 257 1 256 4 19 2 31 1 349 4 20 1 46 3 35 2 216 2 145 2 146 2 276 1 136 1 
31 1 40 6 349 3 293 1 20 1 94 3 148 1 46 2 76 1 216 2 373 1 276 1 117 1 176 1 
40 4 94 2 313 1 148 1 114 1 220 1 373 1 256 2 19 1 257 1 349 2 46 2 35 1 216 1 145 1 146 1 366 1 
40 7 313 1 94 4 148 1 220 1 29 1 373 1 186 2 257 1 349 3 46 2 216 1 108 1 7 1 366 1 
293 1 94 12 313 2 148 3 76 2 220 2 31 2 35 2 7 1 108 2 276 1 136 2 366 2 40 23 13 1 373 3 186 2 117 1 257 4 256 4 19 2 20 1 349 11 46 9 307 1 263 1 216 5 145 2 146 2 
40 1 94 1 186 1 
40 1 349 1 108 1 
40 6 94 3 313 1 148 1 278 1 114 1 220 1 373 1 19 1 256 2 257 1 349 3 46 3 35 1 216 2 145 1 146 1 366 1 
268 1 94 6 313 2 337 1 148 2 220 2 29 1 35 1 108 1 366 2 40 12 183 1 373 2 186 1 282 1 163 1 257 1 19 1 256 2 349 6 46 2 22 1 216 1 145 1 146 1 
40 6 94 3 148 1 76 1 373 1 117 1 257 1 31 1 349 3 46 2 216 1 
293 1 13 1 40 3 94 2 76 1 257 1 256 2 19 1 31 1 349 1 20 1 46 2 35 1 216 1 145 1 146 1 136 1 
268 1 40 10 94 5 148 2 76 2 373 2 19 1 256 2 178 1 257 2 117 1 31 2 349 5 46 5 35 1 216 3 145 1 146 1 
268 1 40 2 220 1 373 1 256 2 19 1 257 1 349 2 46 1 35 1 145 1 146 1 
268 1 40 4 94 2 313 1 148 1 220 1 373 1 256 2 19 1 257 1 349 2 46 2 35 1 216 1 145 1 146 1 366 1 
268 1 13 1 40 3 94 2 76 1 256 6 19 3 257 1 155 1 31 1 349 1 46 2 35 3 216 1 145 3 146 3 136 1 
268 1 293 1 94 18 313 3 148 5 76 3 220 3 29 1 31 3 155 1 248 1 35 5 108 3 7 1 276 1 136 2 366 3 13 1 40 34 114 1 279 1 373 5 186 4 117 2 19 5 256 10 257 5 44 1 20 1 349 16 46 12 216 7 145 5 146 5 
268 1 293 1 40 8 94 4 148 1 76 1 183 1 29 1 373 1 186 1 117 1 256 2 19 1 31 1 20 1 349 4 46 2 35 1 216 2 145 1 108 1 146 1 276 1 
268 1 293 1 94 5 148 1 76 1 220 1 29 1 31 1 35 2 108 1 7 1 276 1 366 1 40 11 114 1 183 1 373 2 186 2 117 1 19 2 256 4 257 1 20 1 349 6 46 3 216 2 145 2 146 2 
268 1 293 1 94 10 313 2 337 1 148 3 76 1 220 2 29 1 31 1 35 3 108 1 276 1 136 1 366 2 40 19 114 1 183 1 373 3 282 1 186 1 163 1 117 1 257 1 19 3 256 6 20 1 349 9 46 4 22 1 216 3 145 3 146 3 
268 1 293 1 94 7 313 1 337 1 148 2 76 1 220 2 29 1 31 1 35 3 108 1 276 1 136 1 366 2 40 17 114 1 183 1 373 3 186 1 282 1 163 1 117 1 257 2 19 3 256 6 20 1 349 10 46 5 22 1 216 3 145 3 146 3 
268 1 293 1 40 8 94 4 148 1 76 1 183 1 29 1 373 1 186 1 117 1 256 2 19 1 31 1 20 1 349 4 46 2 35 1 216 2 145 1 108 1 146 1 276 1 
268 1 94 6 313 2 337 1 148 2 220 2 29 1 35 1 108 1 366 2 40 12 183 1 373 2 186 1 282 1 163 1 257 1 19 1 256 2 349 6 46 2 22 1 216 1 145 1 146 1 
268 1 293 1 94 8 313 1 337 1 148 2 76 1 220 2 29 1 31 1 35 4 108 1 276 1 136 2 366 2 40 18 114 1 183 1 373 3 282 1 186 1 163 1 117 1 257 2 19 4 256 8 20 1 349 10 46 5 22 1 216 3 145 4 146 4 
268 1 94 7 313 2 337 1 148 2 220 3 29 1 155 1 35 4 108 1 136 2 366 3 40 16 183 1 373 3 282 1 186 1 163 1 257 3 19 4 256 8 349 9 46 6 22 1 216 3 145 4 146 4 
40 7 293 2 94 4 148 1 76 3 373 1 257 3 117 1 31 3 20 1 349 3 46 6 216 3 
268 1 293 1 94 8 313 1 337 1 148 2 76 1 220 2 29 1 31 1 155 1 35 4 108 1 276 1 136 2 366 2 40 18 183 1 373 3 282 1 186 1 163 1 117 1 257 1 19 4 256 8 20 1 349 10 46 4 22 1 216 3 145 4 146 4 
50 1 70 1 359 1 88 1 37 1 308 1 285 1 
50 1 359 1 338 1 3 1 285 1 328 1 70 1 187 1 88 1 215 1 37 1 308 1 
45 1 147 1 32 1 127 1 206 1 236 1 202 1 318 1 28 1 102 1 176 1 
50 2 24 1 147 1 206 1 65 1 236 1 28 1 102 1 254 1 285 2 45 1 70 1 200 1 363 1 318 1 202 1 343 1 37 1 
50 2 24 1 126 1 147 1 205 1 206 1 65 1 4 1 28 3 102 2 254 2 348 1 285 2 196 1 68 1 45 1 70 1 200 1 363 1 318 1 202 1 343 2 37 2 
50 2 147 1 126 1 243 1 102 2 28 3 4 1 196 1 200 1 363 1 202 2 318 2 37 2 343 2 58 1 205 1 206 1 65 1 254 2 285 2 348 1 45 2 68 1 70 1 
147 1 126 1 243 1 195 1 2 1 28 4 296 2 102 1 362 2 202 3 318 3 343 1 11 1 205 1 138 1 233 1 42 1 206 1 235 1 236 1 45 3 68 1 218 1 
126 1 147 1 243 1 205 1 233 1 138 1 42 1 235 1 206 1 236 1 2 1 102 1 296 2 28 4 362 2 68 1 45 3 166 1 318 3 202 3 343 1 218 1 
45 1 147 1 206 1 202 1 318 1 132 1 
147 3 206 2 100 1 253 1 236 2 102 2 28 3 132 1 45 6 165 1 21 1 71 1 264 1 318 5 202 6 107 1 380 1 343 1 8 1 290 1 
191 1 50 2 242 1 147 1 293 1 94 3 245 2 194 1 148 1 102 1 200 1 202 1 343 1 110 2 57 1 111 1 206 1 65 1 346 1 254 1 19 2 256 4 117 1 20 1 349 3 70 2 264 1 216 2 123 1 24 1 76 1 28 1 31 1 363 1 35 2 318 1 37 1 276 1 40 6 373 1 185 1 285 2 45 1 89 1 46 2 145 2 146 2 
193 2 26 1 2 1 296 3 28 2 30 1 362 3 361 1 301 2 6 1 180 1 318 1 202 1 9 1 233 1 138 1 61 2 42 1 235 1 236 1 287 1 45 1 377 1 72 2 166 1 355 1 218 2 219 1 
335 1 147 2 206 1 2 1 102 1 28 2 132 1 45 2 264 1 318 2 202 2 380 1 343 1 
147 1 127 1 243 1 206 1 15 1 236 1 102 1 28 1 45 4 32 1 264 1 318 4 202 4 
147 2 205 1 206 1 78 1 102 1 28 1 45 2 71 1 318 2 202 2 343 1 8 1 135 1 381 1 
45 1 147 1 206 1 25 1 236 1 332 1 202 1 318 1 101 1 228 1 
45 2 147 1 21 1 165 1 206 1 264 1 202 2 318 2 28 1 102 1 319 1 
147 2 127 1 205 1 206 2 15 1 100 1 236 1 102 2 28 3 45 5 32 1 21 1 264 1 318 4 202 5 290 1 
147 2 127 1 205 1 54 1 206 2 15 1 100 1 236 1 102 2 28 3 45 5 32 1 21 1 264 1 318 4 202 5 
50 2 147 1 206 1 65 1 236 1 28 1 102 1 254 1 285 2 45 1 70 1 200 1 363 1 318 1 202 1 343 1 37 1 58 1 
147 2 205 1 206 1 102 1 28 1 45 1 71 1 318 1 202 1 107 1 380 1 343 1 8 1 
292 1 70 1 342 1 41 1 23 1 
292 2 358 1 233 1 138 1 42 1 41 2 345 1 160 1 4 1 296 2 348 1 196 1 362 2 305 1 70 1 342 2 142 1 219 1 23 1 
292 1 50 1 312 1 41 1 210 1 285 1 306 1 37 1 23 1 
305 1 160 1 23 1 
159 1 323 1 207 1 176 1 
159 1 259 1 323 1 274 1 207 1 247 1 85 1 
171 1 150 1 247 1 
310 1 159 1 323 1 115 1 207 1 85 1 247 3 259 3 273 2 274 1 167 1 203 1 
159 1 259 2 323 1 75 1 274 1 207 1 173 1 247 2 85 1 
310 1 323 1 25 1 295 1 101 1 85 1 247 1 259 1 289 1 274 1 134 1 
310 1 159 1 259 1 323 1 274 1 247 1 85 1 
310 1 159 2 259 1 274 1 207 1 247 1 85 1 
310 1 159 1 323 1 371 1 85 2 247 2 221 1 259 2 223 1 274 2 
310 1 159 1 323 2 295 1 207 1 208 1 173 2 85 1 247 3 259 3 274 1 90 1 365 1 
310 1 159 1 323 1 25 1 207 1 101 2 173 1 85 1 247 2 103 1 259 2 222 1 274 1 332 1 134 1 
310 1 159 1 323 2 75 1 295 1 207 1 173 2 85 2 247 4 259 4 274 2 36 1 90 1 
310 1 159 1 259 1 323 1 274 1 207 1 247 1 85 1 
159 2 259 4 323 3 273 1 274 1 115 1 295 1 207 2 173 2 90 1 85 1 247 4 86 1 203 1 
310 1 159 1 323 1 60 1 207 1 130 1 173 1 85 1 247 2 238 1 259 2 274 1 
310 1 159 1 323 1 115 1 325 1 207 1 85 1 247 3 259 3 273 2 274 1 203 2 
192 2 323 2 33 1 81 1 
310 1 259 1 149 1 274 1 247 1 85 1 
310 1 159 1 259 2 323 1 274 1 207 1 173 1 208 1 247 2 85 1 
49 1 
310 1 159 1 259 1 323 1 274 1 207 1 247 1 85 1 
310 1 159 1 323 1 207 1 173 1 208 1 85 1 247 3 259 3 273 1 274 1 
323 1 295 1 90 1 86 1 
159 1 323 1 

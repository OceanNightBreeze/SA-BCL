#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) (88,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (88,281) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) (88,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (70,161,220,243) (70,161,220,243) (70,161,220,243) 93 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 93 1 161 1 
305 1 248 1 182 1 
248 1 330 1 109 2 
111 2 247 2 233 1 329 2 318 2 134 1 76 2 250 2 
270 1 191 1 231 1 233 1 63 1 68 1 242 1 111 2 247 2 72 1 318 2 76 3 169 2 250 3 25 2 125 2 209 1 323 1 82 1 30 1 289 1 131 1 134 1 215 1 36 1 141 1 143 1 183 2 329 2 186 1 332 1 94 1 151 1 95 2 268 1 269 1 154 1 
111 1 247 1 329 1 318 1 134 1 76 1 178 1 301 1 258 1 250 1 
156 1 53 1 2 1 174 1 258 1 182 1 244 1 40 1 247 1 147 1 248 1 76 1 250 1 252 1 
53 2 2 1 174 1 258 1 182 1 111 1 244 1 40 2 247 1 147 1 248 1 329 1 318 1 76 1 250 1 
53 1 276 1 40 1 207 1 259 1 
53 2 276 1 122 1 40 2 248 1 307 1 182 1 259 1 
53 1 40 1 259 1 
53 1 134 1 178 1 258 1 276 1 111 1 40 1 247 1 184 1 329 1 318 1 76 1 301 1 250 1 
248 1 
53 2 276 1 122 1 40 2 248 1 31 1 182 1 259 1 
53 5 122 1 211 2 127 1 62 2 12 1 108 1 66 1 293 1 182 1 294 1 259 2 276 2 279 1 40 5 21 1 248 1 172 1 49 2 
233 1 305 1 
287 1 233 2 111 1 247 2 329 1 318 1 319 1 76 2 250 2 
124 1 18 1 106 1 
191 1 231 1 25 1 125 1 209 1 323 1 233 1 234 1 30 1 131 1 68 1 72 1 186 1 76 1 169 1 250 1 
191 1 124 1 231 1 25 1 323 1 209 1 125 1 30 1 131 1 290 1 68 1 111 1 112 1 247 1 72 1 186 1 318 1 76 2 169 1 250 2 
98 1 5 1 287 1 233 1 60 1 290 1 111 4 112 2 247 5 329 1 318 4 76 5 250 5 252 1 
111 2 247 2 318 2 236 1 76 2 178 1 258 1 250 2 
111 3 112 1 247 3 233 1 329 1 318 3 76 3 250 3 
111 1 247 1 318 1 76 1 178 1 258 1 250 1 
111 1 247 1 287 1 329 1 318 1 319 1 76 1 258 1 250 1 
270 1 191 1 53 1 2 1 231 1 233 1 68 1 242 1 111 3 244 1 112 1 247 3 72 1 318 3 76 4 169 1 250 4 25 1 323 1 209 1 125 1 174 1 82 1 287 1 30 1 289 1 131 1 290 1 134 1 215 1 257 1 258 1 36 1 141 1 143 1 40 1 183 2 146 1 147 1 186 1 329 2 94 1 95 1 268 1 
98 1 111 1 112 1 247 2 233 1 318 1 76 2 250 2 252 1 
53 1 2 1 174 1 287 1 176 1 290 1 258 1 111 3 244 1 40 1 112 2 247 3 146 1 147 1 329 1 248 1 318 3 76 3 250 3 
124 1 111 2 112 1 247 2 287 1 329 1 318 2 76 2 106 1 250 2 
191 1 231 1 25 1 125 1 209 1 323 1 233 1 30 1 131 1 68 1 72 1 186 1 76 1 169 1 250 1 
231 1 25 1 125 1 302 1 209 1 323 1 233 1 30 1 68 1 72 1 186 1 205 1 76 1 169 1 250 1 
270 1 232 1 106 2 16 1 242 1 165 1 18 2 282 1 208 1 123 1 124 2 82 1 288 1 289 1 135 1 92 1 36 2 143 1 183 2 145 1 300 1 268 1 95 4 269 2 
111 1 147 1 247 1 318 1 76 1 236 1 258 1 250 1 
4 1 96 1 
4 1 96 1 
0 1 144 1 
0 1 144 1 
0 1 144 1 
81 1 4 1 96 1 
81 1 4 1 96 1 
4 1 331 1 96 1 
0 1 144 1 4 2 114 1 107 1 96 2 
81 1 4 1 96 1 
4 1 9 1 96 1 
4 1 9 1 96 1 
4 1 9 1 96 1 
53 1 4 1 6 1 233 1 103 1 59 1 196 1 111 2 315 1 247 2 318 2 76 2 250 2 129 1 256 1 85 1 37 1 218 1 40 1 42 1 187 1 331 1 47 1 96 1 
53 2 4 2 6 2 7 1 129 1 59 2 214 1 240 1 91 2 163 1 37 3 142 1 40 2 114 1 248 1 187 2 229 1 47 2 96 2 
304 1 79 1 139 1 
304 1 219 1 139 1 
219 1 266 1 79 2 119 1 239 1 139 3 
54 1 219 1 266 1 79 1 239 1 139 2 
219 1 266 2 79 1 239 1 139 2 
53 5 232 1 62 1 109 3 66 2 16 1 67 1 276 4 315 1 314 2 279 1 248 2 21 3 320 1 123 1 122 1 211 1 83 1 256 1 85 1 136 2 179 1 90 1 181 1 259 1 182 1 41 1 40 5 330 1 300 1 49 1 50 2 
53 9 232 3 303 1 235 1 8 1 309 1 62 2 109 9 66 6 16 3 67 2 276 7 314 6 279 1 248 5 21 8 207 5 320 1 123 3 122 1 211 2 85 4 213 1 136 6 179 2 181 3 293 1 259 6 182 1 296 5 40 9 224 1 330 3 300 3 49 2 
53 3 232 1 62 1 109 4 16 1 66 2 67 1 276 2 314 2 248 3 21 3 123 1 211 1 83 1 85 1 136 2 179 1 90 1 181 1 293 1 182 1 40 3 330 2 300 1 49 1 50 1 
53 4 232 2 235 1 8 1 62 1 109 7 16 2 66 4 67 1 276 3 314 4 248 4 21 5 123 2 211 1 83 1 85 2 136 4 179 1 90 1 181 2 293 1 182 1 40 4 224 1 330 3 300 2 49 1 50 2 
305 1 72 1 230 1 
72 1 313 1 
277 1 
72 1 30 1 68 1 
72 1 333 1 
72 1 30 1 
72 3 30 1 325 1 230 2 68 1 241 1 
1 1 193 1 232 1 101 1 288 3 237 1 160 1 16 1 36 3 246 2 200 1 249 1 95 7 282 2 269 4 120 1 251 1 
1 1 193 1 232 1 101 1 288 3 237 1 160 1 16 1 36 3 246 2 200 1 249 1 95 7 282 2 269 4 120 1 251 1 
1 1 193 1 232 1 101 1 288 3 324 1 237 1 160 1 16 1 36 3 200 1 246 2 249 1 95 7 282 2 269 4 120 1 251 1 
193 1 1 2 232 4 101 1 102 1 237 5 160 2 16 4 162 1 242 1 200 1 246 3 115 1 249 2 78 1 282 5 120 1 251 2 123 3 126 1 175 1 288 10 289 1 181 3 36 15 143 1 261 3 183 2 221 1 265 4 300 3 268 1 95 31 269 16 
1 1 193 1 232 1 102 1 288 4 289 2 84 1 237 1 160 1 16 1 36 4 242 2 143 2 200 1 246 2 183 4 74 1 249 1 95 9 268 2 282 3 269 5 120 1 251 1 
243 1 286 1 70 1 93 1 161 1 
243 1 286 1 70 1 281 1 161 1 
286 1 220 1 88 1 161 1 
243 1 286 1 70 1 281 1 161 1 
243 1 286 1 70 1 93 1 161 1 
260 1 
2 1 105 2 109 2 274 1 110 2 15 1 198 2 17 1 279 1 280 1 21 2 121 2 122 3 25 2 125 2 209 1 211 1 30 1 137 2 33 1 38 2 140 1 40 5 147 1 223 1 148 1 149 1 46 4 49 1 153 1 51 1 53 5 156 1 231 2 55 1 62 1 66 2 244 1 247 1 72 1 248 2 169 2 76 1 77 1 250 1 252 1 174 1 179 1 89 1 258 1 182 1 259 6 327 2 186 1 330 2 
53 3 156 1 122 1 2 1 174 1 31 1 258 1 274 1 259 2 198 1 140 1 244 1 40 3 147 1 280 1 247 1 46 2 149 1 76 1 153 1 250 1 252 1 
156 1 53 3 2 1 274 1 244 1 247 1 280 1 248 1 76 1 250 1 252 1 122 1 174 1 137 1 31 1 258 1 259 1 182 1 140 1 40 3 147 1 149 1 46 3 153 1 
156 1 53 3 2 1 274 1 198 1 244 1 247 1 280 1 248 1 76 1 250 1 252 1 122 1 174 1 137 1 31 1 258 1 259 2 182 1 140 1 327 1 40 3 147 1 149 1 46 3 153 1 
156 1 53 5 2 1 105 2 62 1 14 1 274 1 110 2 66 1 198 4 244 1 279 1 247 1 280 1 21 1 204 1 248 5 76 1 284 1 321 1 250 1 252 1 121 2 122 3 211 1 174 1 137 4 89 1 31 1 258 1 182 5 259 7 38 2 140 1 327 4 40 5 147 1 223 1 226 1 330 2 149 1 46 6 49 1 153 1 
2 1 105 2 274 1 109 2 110 2 198 2 279 1 280 1 21 1 121 2 122 2 211 1 137 2 140 1 38 2 40 4 147 1 223 1 46 4 149 1 49 1 153 1 53 4 156 1 62 1 66 1 244 1 247 1 248 2 76 1 77 1 250 1 252 1 174 1 89 1 258 1 259 4 182 1 327 2 330 2 
156 1 53 4 2 1 105 2 62 1 14 1 274 1 110 2 66 1 198 2 244 1 279 1 247 1 280 1 248 1 21 1 76 1 250 1 321 1 252 1 121 2 122 2 174 1 211 1 137 2 89 1 258 1 182 1 259 4 327 2 38 2 140 1 40 4 147 1 223 1 226 1 330 2 149 1 46 4 49 1 153 1 
156 1 53 4 2 1 105 2 62 1 14 1 274 1 110 2 66 1 198 2 244 1 279 1 247 1 280 1 248 1 21 1 76 1 250 1 321 1 252 1 121 2 122 2 174 1 211 1 137 2 89 1 258 1 182 1 259 4 327 2 38 2 140 1 40 4 147 1 223 1 226 1 330 2 149 1 46 4 49 1 153 1 
156 1 53 4 2 1 104 2 158 1 62 1 109 2 14 1 274 1 66 1 198 2 244 1 279 1 247 1 280 1 248 1 21 1 76 1 250 1 252 1 24 1 121 2 122 2 174 1 211 1 137 2 89 1 258 1 182 1 259 4 327 2 38 2 140 1 40 4 147 1 149 1 46 4 334 2 49 1 153 1 190 1 
156 1 53 4 2 1 105 2 62 1 14 1 274 1 110 2 66 1 198 3 244 1 279 1 247 1 280 1 248 1 21 1 204 1 76 1 250 1 321 1 252 1 121 2 122 2 211 1 174 1 137 3 89 1 258 1 182 1 259 5 38 2 140 1 327 3 40 4 147 1 223 1 226 1 330 2 149 1 46 5 49 1 153 1 
156 1 53 4 2 1 105 2 62 1 14 1 274 1 110 2 66 1 198 3 244 1 279 1 247 1 280 1 248 1 21 1 204 1 76 1 250 1 321 1 252 1 121 2 122 2 211 1 174 1 137 3 89 1 258 1 182 1 259 5 38 2 140 1 327 3 40 4 147 1 223 1 226 1 330 2 149 1 46 5 49 1 153 1 
156 1 53 4 2 1 104 2 62 1 109 2 274 1 66 1 198 2 244 1 279 1 280 1 247 1 248 1 21 1 76 1 77 1 250 1 252 1 121 2 122 2 211 1 174 1 137 2 89 1 258 1 182 1 259 4 327 2 38 2 140 1 40 4 147 1 149 1 46 4 334 2 153 1 49 1 190 1 
270 1 193 1 1 1 124 1 232 1 233 2 288 2 82 1 305 1 289 1 106 1 16 1 36 3 242 1 143 1 246 1 183 2 200 1 18 1 95 6 268 1 269 3 282 2 120 1 251 1 208 1 
270 2 232 1 233 1 106 4 237 1 16 2 242 2 199 1 18 11 167 1 78 1 282 1 124 11 123 1 126 1 288 2 82 1 128 1 289 2 181 2 36 6 143 2 261 3 183 4 45 1 264 1 265 3 332 1 94 1 300 2 268 2 95 14 269 8 
191 1 270 1 231 1 233 1 234 1 106 1 68 1 242 1 111 1 112 1 247 1 72 1 167 1 318 1 169 1 76 2 283 1 250 2 25 1 323 1 209 1 125 1 82 1 30 1 289 1 131 1 290 1 295 1 36 1 39 1 143 1 183 2 186 1 94 1 332 1 268 1 95 2 269 1 
1 1 193 1 270 3 191 2 106 7 16 3 111 1 112 1 278 2 200 1 113 2 19 1 18 7 282 4 120 1 285 1 25 3 124 7 123 2 125 3 209 2 288 8 30 2 289 3 131 2 290 1 36 10 141 2 143 3 300 2 152 1 231 1 232 3 233 2 310 2 237 4 68 2 242 3 246 1 247 1 71 1 167 1 72 2 318 1 169 3 76 3 250 3 251 1 323 2 82 3 181 2 183 6 185 2 186 2 332 1 94 1 268 3 95 20 269 10 
270 2 231 2 55 1 57 1 13 1 312 1 242 2 111 1 17 1 112 1 247 1 72 3 75 1 318 1 76 1 169 8 250 1 208 1 25 8 209 2 125 7 82 2 30 2 130 1 289 2 36 1 143 2 183 4 186 2 44 1 297 1 332 1 94 1 151 2 152 1 189 1 268 2 95 2 269 1 
270 1 232 1 106 1 16 1 242 1 111 1 247 1 18 1 167 1 318 1 116 1 76 1 282 1 250 1 124 1 123 1 288 1 287 1 82 1 289 1 181 1 36 2 143 1 183 2 329 1 300 1 268 1 95 3 269 1 
270 1 124 1 288 1 82 1 289 1 106 1 237 1 16 1 242 1 143 1 183 2 145 1 18 1 300 1 95 2 268 1 269 2 208 1 
270 1 124 1 123 1 232 1 288 1 82 1 289 1 106 1 92 1 36 2 242 1 143 1 183 2 18 1 95 2 268 1 282 1 208 1 
270 1 232 1 106 2 237 1 16 1 242 1 18 2 282 1 208 1 124 2 123 1 82 1 288 2 289 1 181 1 36 2 143 1 183 2 300 1 268 1 95 4 269 2 
270 1 124 1 288 1 82 1 289 1 106 1 237 1 16 1 242 1 143 1 183 2 145 1 18 1 44 1 300 1 95 2 268 1 269 2 
270 1 124 1 123 1 232 1 288 1 82 1 289 1 106 1 92 1 36 2 242 1 143 1 183 2 18 1 44 1 95 2 268 1 282 1 
270 1 232 1 106 2 237 1 16 1 242 1 18 2 282 1 124 2 123 1 82 1 288 2 289 1 181 1 36 2 143 1 183 2 44 1 300 1 268 1 95 4 269 2 
270 1 232 1 106 2 237 1 16 1 242 1 18 2 282 1 124 2 123 1 82 1 288 2 289 1 181 1 36 2 143 1 183 2 300 1 95 4 268 1 269 2 
191 1 270 1 231 1 233 1 68 1 242 1 72 1 169 1 76 1 250 1 25 1 323 1 209 1 125 1 82 1 30 1 289 1 131 1 36 1 141 1 143 1 183 2 186 1 332 1 94 1 95 2 268 1 269 1 
270 1 231 1 302 1 233 1 68 1 242 1 72 1 205 1 169 1 76 1 250 1 25 1 323 1 209 1 125 1 82 1 30 1 289 1 32 1 36 1 143 1 183 2 186 1 332 1 94 1 95 2 268 1 269 1 
270 1 232 1 106 2 237 1 16 1 242 1 18 2 167 1 282 1 124 2 123 1 82 1 288 2 289 1 181 1 36 2 143 1 183 2 300 1 268 1 95 4 269 2 
191 1 270 1 232 1 106 2 237 1 16 1 68 1 242 1 278 1 18 2 72 1 169 1 76 1 282 1 250 1 123 1 124 2 25 1 323 1 209 1 125 1 288 2 82 1 30 1 289 1 131 1 181 1 36 2 141 1 143 1 183 2 186 1 300 1 95 4 189 1 268 1 269 2 
270 1 232 1 106 1 237 1 16 1 242 1 111 1 316 1 247 1 18 1 167 1 318 1 76 1 250 1 123 1 124 1 288 1 287 1 82 1 289 1 181 1 36 1 143 1 183 2 329 1 300 1 268 1 95 3 269 2 
193 1 1 1 97 1 100 2 3 1 102 1 194 1 11 1 273 1 16 5 275 1 200 1 203 1 201 1 282 4 120 1 123 4 126 3 288 8 29 1 289 3 36 21 143 3 228 4 300 4 232 5 237 4 242 3 69 1 246 1 74 1 78 1 322 1 251 1 254 1 181 4 261 3 183 6 262 1 265 4 95 41 268 3 269 20 
97 1 1 1 193 1 3 1 100 2 232 4 102 2 194 1 11 1 273 1 237 3 275 1 16 5 69 1 242 4 246 1 200 1 201 1 203 1 74 1 78 1 282 4 120 1 322 1 251 1 123 3 126 3 29 1 288 7 254 1 289 4 181 4 36 18 143 4 261 3 183 8 262 1 228 4 265 4 300 4 268 4 95 38 269 20 
1 1 193 1 3 1 100 1 232 8 102 1 194 1 11 1 273 1 237 7 16 8 69 1 242 2 246 1 200 1 201 1 203 1 74 1 78 2 282 7 120 1 322 1 251 1 123 7 126 2 29 1 288 14 254 1 289 2 181 7 36 25 143 2 261 4 183 4 262 1 228 4 264 2 265 4 300 7 268 2 95 52 269 27 
100 1 232 3 237 3 275 1 16 3 69 1 242 2 166 1 203 1 74 1 78 1 282 3 123 3 126 1 29 1 288 6 254 1 289 2 181 3 36 10 143 2 261 1 183 4 262 2 228 2 265 2 300 3 268 2 95 19 269 9 
232 2 100 2 3 1 102 2 194 1 11 1 237 2 273 1 16 3 69 2 242 3 201 1 203 1 74 1 282 2 322 1 123 2 126 2 29 1 288 4 254 1 289 3 181 3 36 12 143 3 261 2 183 6 262 1 228 4 265 2 300 3 268 3 95 26 269 14 
4 1 6 1 114 1 59 1 187 1 214 1 47 1 240 1 96 1 292 1 
218 1 331 1 
164 1 4 1 6 1 59 1 187 1 272 1 86 1 47 1 96 1 
81 1 308 1 
9 1 107 1 64 1 
53 1 4 1 6 1 7 1 129 1 59 1 214 1 240 1 91 1 163 1 37 2 142 1 40 1 114 1 248 1 187 1 47 1 96 1 
53 1 4 1 6 1 7 1 129 1 59 1 214 1 240 1 91 1 163 1 37 2 142 1 40 1 114 1 248 1 187 1 47 1 96 1 
53 1 4 1 6 1 7 1 129 1 59 1 214 1 240 1 91 1 163 1 37 2 142 1 40 1 114 1 248 1 187 1 47 1 96 1 
81 1 308 1 107 1 
81 1 308 1 107 1 
9 1 64 1 
9 1 107 1 64 1 
42 1 196 1 
53 1 4 1 6 1 233 1 7 1 103 1 59 1 196 1 276 1 315 1 111 2 247 2 318 2 76 2 250 2 256 1 85 1 87 1 91 1 37 1 218 1 40 1 42 1 187 1 331 1 47 1 96 1 
270 1 13 1 242 1 247 2 72 1 167 1 169 2 76 2 250 2 173 1 25 2 209 1 125 2 82 1 30 1 130 1 289 1 177 1 291 1 326 1 217 1 36 1 143 1 183 2 186 1 332 1 94 1 151 2 268 1 95 2 269 1 
25 2 304 1 209 1 125 2 26 1 56 1 58 1 61 1 139 2 245 1 219 1 186 1 118 1 298 1 169 2 79 1 119 1 152 1 189 1 
25 1 304 1 125 1 26 1 209 1 56 1 58 1 139 2 245 1 219 1 186 1 298 1 169 1 22 1 79 1 119 1 152 1 
231 1 25 1 209 1 125 1 55 1 30 1 306 1 132 1 61 1 17 1 245 1 72 1 186 1 169 1 
25 1 304 1 209 1 125 1 26 1 56 1 58 1 61 1 139 2 245 1 219 1 186 1 118 1 298 1 169 1 79 1 119 1 152 1 
65 1 
305 1 21 1 248 1 172 1 66 1 182 1 294 1 
53 1 105 1 62 1 109 1 110 1 66 1 279 1 21 1 248 2 122 1 211 1 259 1 182 1 40 1 223 1 330 1 49 1 
99 1 2 2 10 2 109 12 16 2 279 4 20 1 21 9 117 2 25 3 122 3 123 2 209 4 125 3 27 2 211 4 30 3 133 2 136 6 294 1 40 5 222 2 299 1 148 1 230 2 300 2 49 4 53 5 231 1 232 2 159 1 310 2 62 4 66 8 313 3 68 3 314 6 317 1 72 10 248 8 73 2 170 2 169 3 172 1 325 1 179 2 180 2 181 2 182 2 259 5 186 3 330 6 189 1 333 2 
53 1 3 1 232 2 194 1 11 1 62 2 273 1 238 1 109 6 66 5 16 2 314 5 279 2 21 8 248 5 322 1 122 1 123 2 126 1 211 2 133 2 136 5 179 1 181 2 259 1 182 2 40 1 261 1 222 1 330 3 265 1 148 1 300 2 48 1 49 2 
1 1 53 1 232 1 62 1 16 2 66 2 111 1 279 1 247 1 21 2 318 1 76 1 250 1 120 1 251 1 211 1 133 2 134 1 178 1 138 1 258 1 40 1 184 1 222 1 226 1 329 1 301 1 49 1 
211 1 62 1 66 1 294 1 182 1 279 1 248 1 21 1 172 1 49 1 
123 2 232 2 133 2 310 1 136 5 181 2 109 10 16 2 66 5 314 5 222 1 248 5 21 5 330 5 300 2 
53 1 122 1 40 1 248 1 182 1 259 1 
53 3 231 2 55 1 159 1 62 2 15 1 66 2 17 1 279 1 72 1 21 2 169 4 23 1 25 4 122 2 209 1 125 4 211 2 30 1 179 2 33 1 293 1 259 4 40 3 186 1 227 1 299 2 148 2 49 2 
191 1 270 1 231 1 233 1 68 1 242 1 111 2 247 2 72 1 318 2 169 1 76 3 250 3 25 1 125 1 209 1 323 1 82 1 30 1 289 1 131 1 134 1 215 1 36 1 141 1 143 1 183 2 329 2 186 1 94 1 95 1 268 1 
211 1 136 2 62 1 179 1 109 4 66 2 182 2 314 2 279 1 246 1 21 1 248 4 330 2 148 1 49 1 
28 1 6 1 47 1 
28 1 6 1 47 1 
6 1 206 1 196 1 47 1 240 1 
28 1 6 1 47 1 
6 1 47 1 34 1 
6 1 47 1 34 1 
6 1 47 1 34 1 
6 1 47 1 
4 1 96 1 
193 1 1 1 232 1 11 1 16 1 242 1 246 1 200 1 74 1 282 2 120 1 251 1 126 1 288 2 289 1 36 4 143 1 261 1 183 2 265 1 95 8 268 1 269 4 
1 1 193 1 232 1 11 1 237 1 16 2 242 2 197 1 246 1 200 1 74 1 78 1 282 2 120 1 251 1 126 1 288 3 289 2 181 1 36 5 143 2 261 1 183 4 265 2 300 1 95 11 268 2 269 6 
1 1 193 1 3 1 232 3 102 1 194 1 11 1 237 1 273 1 16 3 197 1 242 3 246 1 200 1 74 1 282 3 120 1 322 1 251 1 123 2 126 1 288 4 289 3 181 2 36 10 143 3 261 1 183 6 265 1 300 2 95 19 268 3 269 9 
1 1 193 1 3 1 232 2 102 1 194 1 11 1 237 2 273 1 16 3 197 1 242 3 246 1 200 1 74 1 282 3 120 1 322 1 251 1 123 1 126 1 288 5 289 3 181 2 36 7 143 3 261 1 183 6 265 1 300 2 95 17 268 3 269 10 
193 1 1 1 232 1 11 1 16 1 242 1 246 1 200 1 74 1 282 2 120 1 251 1 126 1 288 2 289 1 36 4 143 1 261 1 183 2 265 1 95 8 268 1 269 4 
3 1 232 2 194 1 11 1 237 1 273 1 16 2 242 1 74 1 282 1 322 1 123 2 126 1 288 2 289 1 181 2 36 6 143 1 261 1 183 2 265 1 300 2 95 12 268 1 269 6 
1 1 193 1 3 1 232 2 102 2 194 1 11 1 237 2 273 1 16 3 197 1 242 4 246 1 200 1 74 1 282 3 120 1 322 1 251 1 123 1 126 1 288 5 289 4 181 2 36 8 143 4 261 1 183 8 265 1 300 2 95 18 268 4 269 10 
3 1 232 2 102 2 194 1 11 1 237 3 273 1 275 1 16 3 242 4 74 1 282 3 322 1 123 2 126 1 288 6 289 4 181 3 36 7 143 4 261 1 183 8 265 1 300 3 95 16 268 4 269 9 
193 1 1 3 232 1 288 6 237 3 16 1 36 4 200 2 95 7 282 3 269 3 120 1 251 3 
1 1 193 1 3 1 232 2 102 2 194 1 11 1 237 1 273 1 275 1 16 3 242 4 246 1 200 1 74 1 282 3 120 1 322 1 251 1 123 1 126 1 288 4 289 4 181 2 36 8 143 4 261 1 183 8 265 1 300 2 95 18 268 4 269 10 
193 1 1 1 232 1 102 1 288 3 289 2 237 1 16 1 36 4 242 2 143 2 246 1 183 4 200 1 95 8 268 2 269 4 282 2 120 1 251 1 
193 1 1 1 232 1 305 1 288 2 16 1 36 3 246 1 200 1 95 6 282 2 269 3 120 1 251 1 
123 1 232 1 288 2 289 1 237 1 181 1 16 1 36 2 197 1 242 1 143 1 183 2 300 1 268 1 95 4 282 1 269 2 
123 1 232 1 126 1 288 2 237 1 181 1 16 1 36 4 261 1 265 2 300 1 95 7 78 1 282 1 269 3 
1 2 193 1 232 3 102 2 237 4 16 3 242 2 246 1 200 1 199 1 78 1 282 5 120 1 251 2 123 2 288 9 289 2 181 2 36 12 143 2 261 2 183 4 265 2 264 1 267 1 300 2 95 23 268 2 269 11 
265 1 95 1 36 1 
261 1 95 1 269 1 
123 1 232 1 288 3 289 1 310 1 237 1 181 1 16 1 36 3 242 1 197 1 143 1 183 2 300 1 268 1 95 6 269 3 282 2 
3 1 232 2 194 1 11 1 237 1 273 1 16 2 242 1 74 1 282 1 322 1 123 2 126 1 288 2 289 1 181 2 36 6 143 1 261 1 183 2 265 1 300 2 95 12 268 1 269 6 
1 1 232 1 288 2 237 1 16 1 36 3 95 6 269 3 282 1 120 1 251 1 
1 1 193 1 102 1 288 2 289 1 237 1 36 2 242 1 143 1 200 1 183 2 267 1 95 3 268 1 269 1 282 1 251 1 
1 2 232 2 288 5 289 1 237 2 138 1 16 2 36 5 242 1 143 1 183 2 74 1 268 1 95 10 282 3 269 5 120 1 251 2 
288 1 289 1 237 1 16 1 242 1 143 1 183 2 74 1 300 1 268 1 95 2 269 2 
123 1 232 1 288 2 289 1 237 1 181 1 16 1 36 2 242 1 143 1 183 2 74 1 300 1 268 1 95 4 282 1 269 2 
1 1 102 1 288 2 289 3 237 1 275 1 36 2 242 3 143 3 183 6 74 1 267 1 95 3 268 3 282 1 269 1 251 1 
1 3 193 1 232 5 102 2 237 5 275 1 16 5 162 1 197 1 242 5 246 1 200 1 74 1 115 1 78 1 282 7 120 2 251 3 123 3 126 1 288 12 289 5 181 3 36 18 143 5 261 3 183 10 221 1 265 4 267 1 300 3 268 5 95 34 269 16 
98 1 247 1 233 1 255 1 76 1 250 1 252 1 
52 1 98 1 210 1 233 1 255 1 328 1 247 1 43 1 76 1 150 1 250 1 252 1 
17 1 25 1 231 1 209 1 125 1 55 1 305 1 72 1 30 1 186 1 169 1 
191 1 231 1 25 1 323 1 209 1 125 1 233 1 30 1 68 1 111 1 112 1 247 1 72 1 186 1 318 1 76 2 169 1 250 2 
191 1 25 1 27 1 323 1 209 1 125 1 233 1 30 2 258 1 68 2 244 1 111 2 112 1 147 1 247 2 72 3 186 1 318 1 76 2 299 1 169 1 333 1 250 2 
302 1 233 1 68 2 111 2 244 1 112 1 247 2 72 3 318 1 169 2 76 2 250 2 25 2 125 2 209 1 323 1 27 1 30 2 258 1 147 1 186 1 188 1 299 1 333 1 
53 2 192 1 2 1 231 1 195 1 313 1 68 1 72 4 248 1 169 3 25 3 125 3 209 1 27 1 30 1 259 1 182 1 40 2 186 1 188 1 299 1 230 1 333 1 
53 2 231 1 2 1 25 3 27 1 209 1 125 3 30 1 180 1 182 1 68 1 313 1 259 1 40 2 72 4 248 1 186 1 188 1 299 1 169 3 230 1 333 1 
25 1 209 1 125 1 186 1 297 1 169 1 
157 1 231 2 25 7 125 6 209 3 57 1 30 2 130 1 325 1 216 1 312 1 68 1 72 3 186 2 297 1 75 1 169 7 171 1 151 1 152 1 189 1 
1 1 193 1 270 2 191 1 232 1 233 2 106 1 16 1 68 1 242 2 111 1 112 1 278 1 246 1 200 1 247 1 18 1 72 1 167 1 318 1 76 2 169 1 282 2 120 1 250 2 251 1 124 1 25 1 323 1 209 1 125 1 288 2 82 2 30 1 289 2 131 1 291 1 36 3 141 1 143 2 183 4 185 1 186 1 95 6 268 2 189 1 269 3 
53 3 231 1 2 1 159 1 10 1 62 2 66 1 313 1 276 1 279 2 72 2 21 1 248 1 73 1 169 1 170 1 172 1 25 1 122 1 125 1 211 2 180 1 182 1 294 1 259 2 40 3 230 1 49 2 
25 2 99 1 125 2 209 2 30 1 325 1 68 1 72 2 186 1 297 1 169 2 230 1 189 1 
231 1 25 4 209 1 125 4 55 1 271 1 30 1 17 1 72 1 186 1 188 1 169 4 189 1 
25 2 125 2 209 2 30 1 212 1 216 1 68 1 71 1 202 1 72 1 186 1 299 1 169 2 171 1 
25 1 231 1 304 1 209 1 125 1 56 1 219 1 186 1 169 1 139 1 
25 2 209 1 125 2 72 1 30 1 186 1 130 1 169 2 152 1 189 1 217 1 
231 1 25 5 125 4 209 2 55 1 271 1 30 2 130 1 312 1 17 1 72 3 186 2 75 1 299 1 169 5 189 1 
231 1 25 5 125 4 209 2 55 1 271 1 30 2 130 1 35 1 17 1 72 3 186 2 75 1 299 1 169 5 189 1 
231 1 25 1 323 1 209 1 125 1 302 1 233 1 30 1 68 1 111 1 112 1 247 1 72 1 186 1 318 1 76 2 169 1 250 2 
157 1 25 1 125 1 209 2 30 1 325 1 216 1 68 1 72 1 186 1 299 1 169 1 171 1 
233 1 225 1 168 1 311 1 155 1 
53 2 2 1 174 1 233 1 253 1 258 1 311 2 182 1 276 1 244 1 40 2 147 1 146 1 263 1 248 1 225 1 168 2 80 1 155 2 
177 1 326 1 311 1 247 1 225 1 168 1 76 1 250 1 173 1 
253 1 263 1 225 1 

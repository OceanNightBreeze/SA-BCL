#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 1 197 1 83 1 340 1 134 1 135 5 61 1 363 1 87 2 366 2 207 2 88 2 263 1 141 9 372 1 67 1 45 1 167 2 268 1 12 2 118 1 354 9 237 1 172 1 156 3 295 4 216 2 55 6 
358 1 197 1 83 1 340 1 134 1 135 5 61 1 363 1 87 2 366 2 207 2 88 2 263 1 141 9 372 1 67 1 45 1 167 2 268 1 12 2 118 1 354 9 237 1 172 1 156 3 295 4 216 2 55 6 
358 1 197 1 83 1 340 1 134 1 135 6 61 1 363 1 87 2 366 2 207 2 88 2 263 1 141 10 372 1 67 1 45 1 167 2 268 1 12 2 118 1 354 10 237 1 172 1 156 4 295 5 216 2 55 7 
358 1 197 1 83 1 340 1 134 1 135 4 61 1 363 1 87 1 366 2 207 2 88 2 263 1 141 7 372 1 67 1 45 1 167 2 268 1 12 2 118 1 354 7 237 1 156 2 295 3 216 2 55 4 
167 1 83 1 340 1 135 3 268 1 12 1 118 1 354 4 237 1 87 2 172 1 207 1 88 1 156 1 295 2 141 4 55 3 216 1 
197 1 45 1 167 1 83 1 20 1 198 1 135 1 268 1 12 1 118 1 4 1 354 2 366 1 207 1 88 1 141 2 
83 1 135 2 268 1 118 1 354 3 366 1 207 2 88 2 156 1 295 1 263 1 141 3 55 1 
358 1 277 1 83 1 340 1 135 5 181 1 87 2 366 1 207 2 88 2 263 1 141 9 372 1 167 1 268 1 12 1 118 1 354 9 237 1 172 1 295 4 156 3 55 7 216 1 
358 1 277 1 83 1 340 1 135 5 181 1 87 2 366 1 207 2 88 2 263 1 141 9 372 1 167 1 268 1 12 1 118 1 354 9 237 1 172 1 295 4 156 3 55 7 216 1 
155 1 287 1 261 1 
41 1 155 1 11 2 
150 2 159 2 204 2 205 2 95 2 161 1 304 2 305 1 
246 1 80 1 102 2 158 1 159 3 128 1 359 1 17 1 248 1 161 1 298 1 23 2 300 1 25 1 60 1 203 1 183 1 204 2 302 2 205 2 184 1 304 3 34 1 305 1 186 1 7 1 89 2 113 1 8 1 91 1 265 1 143 1 145 1 148 1 150 2 95 2 75 2 
256 1 150 1 159 1 81 1 204 1 205 1 95 1 58 1 304 1 305 1 
159 1 327 1 10 1 360 1 21 1 58 1 146 1 353 1 205 1 97 1 155 1 304 1 261 1 333 1 
159 1 327 1 10 1 360 1 58 1 353 2 146 2 150 1 204 1 205 1 95 1 97 1 155 1 304 1 261 1 
176 1 355 1 321 1 353 1 146 1 
176 1 355 1 155 1 244 1 261 1 217 1 353 2 146 2 
176 1 353 1 146 1 
159 1 81 1 58 1 146 1 353 1 256 1 150 1 355 1 204 1 205 1 138 1 95 1 304 1 305 1 
155 1 
176 1 355 1 155 1 261 1 72 1 217 1 353 2 146 2 
37 1 90 1 101 2 176 2 18 1 319 1 320 2 168 1 22 1 146 5 353 5 202 1 355 2 324 2 381 1 155 1 261 1 217 1 164 1 
161 1 287 1 
350 1 159 2 161 2 150 1 204 1 205 2 95 1 304 2 112 1 
43 1 290 1 200 1 
246 1 102 1 158 1 159 1 128 1 248 1 161 1 298 1 23 1 148 1 269 1 203 1 304 1 184 1 75 1 186 1 
246 1 158 1 102 1 159 2 128 1 43 1 248 1 298 1 23 1 148 1 150 1 203 1 286 1 29 1 204 1 205 1 184 1 304 2 75 1 186 1 
350 1 159 5 161 1 47 1 150 4 29 2 286 1 204 4 205 5 322 1 95 1 304 5 273 1 333 1 
150 2 159 2 81 1 204 2 205 2 58 1 304 2 24 1 
150 3 29 1 159 3 204 3 205 3 95 1 161 1 304 3 
150 1 159 1 81 1 204 1 205 1 58 1 304 1 
150 1 350 1 159 1 204 1 205 1 95 1 58 1 304 1 112 1 
246 1 158 1 102 1 128 1 159 4 359 1 17 1 360 1 248 1 161 1 298 1 58 1 300 1 23 1 25 1 60 1 203 1 29 1 286 1 183 1 204 3 302 1 205 3 184 1 304 4 186 1 305 1 7 1 89 2 113 1 350 1 91 1 327 1 265 1 10 1 46 1 148 1 146 1 353 1 150 3 95 2 122 1 97 1 75 1 
150 1 159 2 29 1 204 1 205 2 161 1 47 1 304 2 333 1 
350 1 159 3 327 1 10 1 360 1 46 1 58 1 353 1 146 1 150 3 286 1 29 2 204 3 205 3 95 1 206 1 97 1 155 1 304 3 
350 1 159 2 43 1 290 1 150 2 29 1 204 2 205 2 95 1 304 2 
246 1 102 1 158 1 159 1 128 1 248 1 161 1 298 1 23 1 148 1 203 1 304 1 184 1 75 1 186 1 
245 1 246 1 102 1 158 1 159 1 248 1 161 1 23 1 148 1 152 1 203 1 304 1 184 1 75 1 186 1 
335 1 177 1 359 1 129 1 17 1 299 1 225 1 25 1 200 2 60 2 302 4 89 2 113 1 91 1 265 1 43 2 189 1 290 2 211 1 93 1 145 2 292 1 96 1 242 1 
150 1 159 1 204 1 205 1 10 1 58 1 304 1 24 1 
222 1 241 1 
222 1 241 1 
257 1 114 1 
257 1 114 1 
257 1 114 1 
222 1 241 1 352 1 
222 1 241 1 352 1 
254 1 222 1 241 1 
257 1 229 1 114 1 222 2 241 2 106 1 
222 1 241 1 352 1 
222 1 241 1 35 1 
222 1 241 1 35 1 
222 1 241 1 35 1 
195 1 159 2 160 1 222 1 161 1 163 1 254 1 204 2 205 2 230 1 303 1 304 2 65 1 40 1 267 1 308 1 353 1 146 1 150 2 331 1 14 1 241 1 53 1 77 1 
195 3 373 1 115 1 308 2 222 2 106 1 146 2 353 2 27 1 271 1 14 2 314 2 111 1 230 2 241 2 303 1 325 1 155 1 77 2 
167 1 12 1 216 1 
167 1 20 1 12 1 
142 1 171 1 167 3 20 1 224 1 216 2 
142 1 167 2 20 1 224 1 216 1 26 1 
142 1 167 2 20 1 224 2 216 1 
101 1 176 1 160 1 177 1 250 2 320 1 319 1 179 1 299 1 362 1 201 1 63 1 324 1 369 2 65 1 261 1 41 1 40 1 189 1 11 3 49 1 168 3 117 2 353 5 146 5 292 1 355 4 120 1 381 2 155 2 272 1 217 1 
0 1 101 2 176 6 177 3 296 1 250 6 319 1 320 2 223 5 299 3 252 1 321 5 201 1 202 1 136 1 63 3 324 2 369 6 261 1 41 3 40 4 68 1 189 3 48 1 11 9 49 2 168 8 353 9 146 9 292 3 355 7 381 6 155 5 272 2 217 1 
101 1 177 1 250 2 320 1 362 1 299 1 202 1 324 1 63 1 369 2 261 1 41 2 40 1 189 1 49 1 168 3 11 4 117 1 353 3 146 3 292 1 355 2 120 1 381 2 155 3 272 1 
0 1 101 1 177 2 250 4 320 1 362 1 299 2 252 1 202 1 324 1 63 2 369 4 261 1 41 3 40 2 68 1 189 2 11 7 49 1 168 5 117 2 353 4 146 4 292 2 355 3 120 1 381 4 155 4 272 1 
105 1 287 1 148 1 
285 1 148 1 
74 1 
246 1 184 1 148 1 
336 1 148 1 
184 1 148 1 
246 1 39 1 184 1 105 2 54 1 148 3 
306 2 187 1 178 1 328 1 211 3 299 1 145 4 13 1 149 1 60 3 292 1 342 1 302 7 240 1 96 2 174 1 349 1 
306 2 187 1 178 1 328 1 211 3 299 1 145 4 13 1 149 1 60 3 292 1 342 1 302 7 240 1 96 2 174 1 349 1 
306 2 187 1 69 1 178 1 328 1 211 3 299 1 145 4 13 1 149 1 60 3 292 1 342 1 302 7 240 1 96 2 174 1 349 1 
274 4 219 1 278 1 178 2 177 3 221 1 132 1 17 1 19 3 299 4 282 1 25 1 60 15 342 1 302 31 63 3 140 1 349 2 89 2 187 1 113 1 306 3 91 1 328 2 189 3 211 10 145 16 13 5 149 1 292 4 240 1 96 5 193 1 174 2 
278 1 178 1 17 2 299 1 59 1 25 2 60 4 342 1 302 9 349 1 89 4 113 2 306 2 91 2 328 1 211 4 145 5 13 1 149 1 292 1 240 1 96 3 194 1 174 1 
102 1 158 1 220 1 83 1 20 1 135 1 23 1 228 1 28 1 182 1 366 1 367 1 207 1 88 1 347 1 208 1 141 2 186 1 232 1 167 2 309 1 268 1 12 1 118 1 354 2 171 1 75 1 55 1 216 1 334 1 
276 1 102 1 158 1 220 1 20 1 135 1 23 1 182 1 366 1 367 1 207 1 88 1 347 1 208 1 141 3 186 1 232 1 167 2 309 1 268 1 12 1 118 1 354 3 171 1 173 1 75 1 316 1 216 1 55 2 334 1 
276 1 102 1 158 1 220 1 20 1 135 1 23 1 182 1 366 1 367 1 208 1 141 2 186 1 167 2 309 1 268 1 12 1 118 1 354 2 171 1 173 1 75 1 55 2 216 1 334 1 
102 1 158 1 220 2 248 1 199 1 23 1 107 1 85 1 366 2 367 2 207 1 88 1 184 1 186 1 141 1 289 1 377 1 309 2 236 1 148 1 354 1 75 1 316 1 
102 1 158 1 220 1 83 1 20 1 23 1 28 1 182 1 366 1 367 1 207 1 88 1 347 1 208 1 141 1 186 1 232 1 167 2 309 1 12 1 354 1 171 1 173 1 75 1 216 1 334 1 
310 1 
101 1 102 2 158 1 159 1 248 2 338 1 339 2 58 1 199 1 3 2 110 1 205 1 62 1 259 1 304 1 261 1 6 2 10 1 116 2 11 2 168 2 353 5 315 2 75 2 217 3 175 1 176 6 360 1 21 1 319 1 320 1 280 1 23 2 85 1 227 1 324 1 184 1 326 1 371 1 186 1 41 2 327 1 375 1 329 2 235 1 49 1 50 1 146 5 148 1 51 2 238 4 97 1 381 2 155 2 333 1 
176 2 159 1 360 1 21 1 338 1 58 1 227 1 205 1 62 1 304 1 371 1 327 1 10 1 116 1 72 1 353 3 146 3 238 2 97 1 333 1 175 1 217 1 
176 1 159 1 360 1 21 1 338 1 58 1 227 1 205 1 62 1 304 1 371 1 261 1 327 1 10 1 72 1 353 3 146 3 51 1 238 3 97 1 155 1 333 1 175 1 217 1 
176 2 159 1 360 1 21 1 338 1 339 1 58 1 227 1 205 1 62 1 304 1 371 1 261 1 327 1 10 1 116 1 72 1 353 3 146 3 51 1 238 3 97 1 155 1 333 1 217 1 175 1 
101 1 159 1 103 1 338 1 339 4 58 1 3 2 301 1 205 1 110 1 62 1 304 1 261 5 6 2 10 1 116 4 168 1 72 1 353 5 315 2 217 3 175 1 176 7 360 1 21 1 319 1 320 1 283 1 227 1 33 1 324 1 371 1 41 2 327 1 375 1 188 1 329 2 146 5 51 4 238 6 97 1 381 1 155 5 333 1 
101 1 176 4 159 1 360 1 21 1 338 1 339 2 320 1 319 1 58 1 3 2 227 1 110 1 205 1 62 1 324 1 304 1 326 1 371 1 261 1 6 2 41 2 327 1 375 1 10 1 116 2 329 2 11 2 168 1 353 4 146 4 51 2 238 4 97 1 381 1 155 2 315 2 333 1 217 2 175 1 
101 1 176 4 159 1 103 1 360 1 21 1 338 1 339 2 319 1 320 1 58 1 3 2 227 1 110 1 205 1 62 1 33 1 324 1 304 1 371 1 261 1 6 2 41 2 375 1 327 1 10 1 188 1 116 2 329 2 168 1 353 4 146 4 51 2 238 4 97 1 381 1 155 1 315 2 333 1 217 2 175 1 
101 1 176 4 159 1 103 1 360 1 21 1 338 1 339 2 319 1 320 1 58 1 3 2 227 1 110 1 205 1 62 1 33 1 324 1 304 1 371 1 261 1 6 2 41 2 375 1 327 1 10 1 188 1 116 2 329 2 168 1 353 4 146 4 51 2 238 4 97 1 381 1 155 1 315 2 333 1 217 2 175 1 
101 1 176 4 159 1 103 1 360 1 337 2 21 1 338 1 339 2 319 1 320 1 58 1 3 2 227 1 109 1 110 1 205 1 62 1 324 1 304 1 371 1 261 1 9 2 327 1 10 1 116 2 329 2 11 2 168 1 353 4 146 4 51 2 238 4 379 1 97 1 154 1 381 1 155 1 333 1 217 2 175 1 
101 1 176 5 159 1 103 1 360 1 21 1 338 1 320 1 319 1 339 3 58 1 3 2 301 1 227 1 110 1 205 1 33 1 62 1 324 1 304 1 371 1 261 1 6 2 41 2 375 1 327 1 10 1 188 1 116 3 329 2 168 1 353 4 146 4 51 3 238 5 97 1 381 1 155 1 315 2 333 1 217 2 175 1 
101 1 176 5 159 1 103 1 360 1 21 1 338 1 320 1 319 1 339 3 58 1 3 2 301 1 227 1 110 1 205 1 33 1 62 1 324 1 304 1 371 1 261 1 6 2 41 2 375 1 327 1 10 1 188 1 116 3 329 2 168 1 353 4 146 4 51 3 238 5 97 1 381 1 155 1 315 2 333 1 217 2 175 1 
101 1 176 4 159 1 360 1 337 2 21 1 338 1 339 2 320 1 319 1 58 1 3 2 227 1 110 1 205 1 62 1 324 1 304 1 326 1 371 1 261 1 9 2 327 1 10 1 116 2 329 2 11 2 168 1 353 4 146 4 51 2 238 4 379 1 97 1 381 1 155 1 333 1 217 2 175 1 
359 1 17 1 161 2 299 1 25 1 200 1 60 3 342 1 302 6 287 1 349 1 89 2 113 1 306 1 91 1 43 1 265 1 290 1 211 2 145 3 149 1 292 1 240 1 96 2 242 1 174 1 
274 3 57 1 80 1 177 2 359 1 17 2 19 3 161 1 133 1 299 2 282 1 25 2 200 11 60 6 183 1 302 14 63 2 140 1 346 1 89 4 113 2 91 2 265 2 43 11 233 1 290 4 189 1 211 2 145 8 13 1 292 1 96 1 215 1 
57 1 246 1 158 1 102 1 80 1 128 1 159 2 359 1 17 1 248 1 161 1 298 1 23 1 25 1 60 1 203 1 29 1 286 1 204 1 183 1 205 1 302 2 5 1 184 1 304 2 186 1 89 2 113 1 91 1 265 1 307 1 210 1 290 1 145 1 148 1 269 1 150 1 75 1 
57 1 246 2 102 3 158 2 159 3 248 1 161 2 298 2 251 2 299 3 300 2 200 7 60 10 342 1 203 2 344 1 204 1 205 1 302 20 63 2 304 3 349 1 306 1 113 3 265 3 211 8 13 4 173 1 75 3 78 2 174 1 125 1 80 1 128 2 177 2 359 3 130 1 17 3 23 3 25 3 180 2 286 1 29 1 183 1 184 2 186 2 89 6 91 3 43 7 290 7 189 2 145 10 149 1 148 2 292 3 150 1 240 1 96 4 99 2 
218 1 158 2 102 8 80 1 159 1 359 2 17 2 248 2 199 1 23 7 25 2 60 1 85 1 228 1 29 1 204 1 183 1 205 1 302 2 32 1 304 1 184 2 186 2 89 4 113 2 91 2 166 1 265 2 44 1 234 1 143 2 145 1 148 3 150 1 239 1 173 1 242 1 75 8 317 1 
57 1 196 1 159 1 177 1 359 1 17 1 299 1 200 1 25 1 60 2 204 1 205 1 302 3 63 1 304 1 89 2 350 1 113 1 91 1 43 1 265 1 290 1 189 1 211 1 145 1 150 1 292 1 96 1 95 1 
89 2 113 1 91 1 335 1 177 1 43 1 359 1 265 1 17 1 290 1 211 1 299 1 145 2 13 1 200 1 25 1 302 2 242 1 
89 2 113 1 91 1 43 1 359 1 265 1 17 1 290 1 189 1 211 1 225 1 200 1 25 1 60 2 292 1 302 2 96 1 242 1 
177 1 359 1 17 1 299 1 25 1 200 2 60 2 302 4 63 1 89 2 113 1 91 1 265 1 43 2 290 2 189 1 211 2 145 2 13 1 292 1 96 1 242 1 
89 2 113 1 91 1 335 1 177 1 43 1 359 1 265 1 234 1 17 1 290 1 211 1 299 1 145 2 13 1 200 1 25 1 302 2 
89 2 113 1 91 1 43 1 359 1 265 1 234 1 17 1 290 1 189 1 211 1 225 1 200 1 25 1 60 2 292 1 302 2 96 1 
177 1 359 1 17 1 299 1 25 1 200 2 60 2 302 4 63 1 89 2 113 1 91 1 265 1 43 2 234 1 290 2 189 1 211 2 145 2 13 1 292 1 96 1 
177 1 359 1 17 1 299 1 25 1 200 2 60 2 302 4 63 1 89 2 113 1 91 1 265 1 43 2 290 2 189 1 211 2 145 2 13 1 292 1 96 1 
246 1 80 1 158 1 102 1 128 1 159 1 359 1 17 1 248 1 161 1 298 1 300 1 23 1 25 1 60 1 203 1 183 1 302 2 184 1 304 1 186 1 89 2 113 1 91 1 265 1 145 1 148 1 75 1 
245 1 246 1 80 1 158 1 102 1 159 1 359 1 17 1 248 1 161 1 23 1 25 1 60 1 203 1 183 1 302 2 184 1 304 1 186 1 89 2 113 1 91 1 265 1 145 1 148 1 152 1 313 1 75 1 
57 1 177 1 359 1 17 1 299 1 25 1 200 2 60 2 302 4 63 1 89 2 113 1 91 1 265 1 43 2 290 2 189 1 211 2 145 2 13 1 292 1 96 1 
246 1 158 1 102 1 177 1 128 1 159 1 359 1 17 1 298 1 299 1 300 1 23 1 200 2 25 1 60 2 180 1 203 1 228 1 302 4 63 1 184 1 304 1 186 1 89 2 113 1 91 1 43 2 265 1 189 1 290 2 211 2 145 2 13 1 148 1 292 1 96 1 75 1 
57 1 159 1 177 1 359 1 17 1 299 1 25 1 200 1 60 1 204 1 30 1 205 1 302 3 63 1 304 1 89 2 350 1 113 1 91 1 265 1 43 1 189 1 290 1 211 1 145 2 13 1 292 1 150 1 95 1 
274 4 15 1 278 1 177 4 17 3 19 3 341 1 59 1 299 5 282 1 108 1 226 1 25 3 255 1 60 21 342 1 343 1 86 1 302 41 63 4 140 3 349 1 89 6 306 1 113 3 42 1 91 3 374 1 92 1 330 2 189 4 211 8 145 20 311 4 13 4 149 1 292 5 94 1 240 1 96 4 380 1 243 1 174 1 
274 4 15 1 278 2 177 4 17 4 19 3 341 1 59 1 299 5 282 1 108 1 226 1 25 4 255 1 60 18 342 1 343 1 86 1 302 38 63 4 140 3 349 1 89 8 306 1 113 4 42 1 91 4 374 1 92 1 330 2 189 3 211 7 145 20 311 4 13 3 149 1 292 4 94 1 240 1 96 4 380 1 243 1 174 1 
274 4 15 1 278 1 177 7 17 2 19 4 59 1 299 8 282 2 108 1 226 1 25 2 255 1 60 25 342 1 343 1 86 1 302 52 63 7 140 2 349 1 89 4 306 1 113 2 42 1 91 2 374 1 92 1 330 1 189 7 211 14 145 27 311 4 13 7 149 1 292 8 240 1 96 7 380 1 243 1 215 2 174 1 
274 2 177 3 17 2 19 1 59 1 299 3 282 1 25 2 255 1 60 10 343 2 302 19 63 3 140 1 89 4 113 2 91 2 374 1 92 1 144 1 330 1 189 3 211 6 145 9 311 2 13 3 292 3 94 1 96 3 243 1 
274 2 15 1 278 2 177 3 17 3 19 2 59 1 299 3 108 1 25 3 226 1 60 12 255 2 343 1 86 1 302 26 63 3 140 2 89 6 113 3 42 1 91 3 374 1 92 1 330 2 189 2 211 4 145 14 13 2 311 4 292 2 96 2 380 1 243 1 
27 1 115 1 14 1 230 1 222 1 308 1 241 1 70 1 77 1 106 1 
254 1 53 1 
275 1 16 1 14 1 230 1 222 1 308 1 323 1 241 1 77 1 
352 1 66 1 
229 1 368 1 35 1 
195 2 373 1 115 1 308 1 222 1 106 1 146 1 353 1 27 1 14 1 314 1 111 1 230 1 241 1 303 1 325 1 155 1 77 1 
195 2 373 1 115 1 308 1 222 1 106 1 146 1 353 1 27 1 14 1 314 1 111 1 230 1 241 1 303 1 325 1 155 1 77 1 
195 2 373 1 115 1 308 1 222 1 106 1 146 1 353 1 27 1 14 1 314 1 111 1 230 1 241 1 303 1 325 1 155 1 77 1 
229 1 352 1 66 1 
229 1 352 1 66 1 
368 1 35 1 
229 1 368 1 35 1 
331 1 267 1 
195 1 159 2 160 1 222 1 161 1 104 1 163 1 254 1 204 2 205 2 230 1 325 1 304 2 65 1 40 1 267 1 308 1 353 1 146 1 150 2 331 1 355 1 14 1 314 1 241 1 53 1 77 1 
57 1 158 1 102 2 80 1 159 2 359 1 17 1 249 1 23 2 25 1 60 1 84 1 284 1 183 1 205 2 302 2 32 1 184 1 304 2 186 1 89 2 113 1 91 1 265 1 44 1 143 2 145 1 71 1 148 1 332 1 75 2 
79 1 158 1 102 2 220 1 167 2 20 1 12 1 23 2 253 1 171 1 228 1 173 1 75 2 347 1 208 1 216 1 186 1 123 1 334 1 
102 1 158 1 220 1 167 2 20 1 12 1 23 1 253 1 171 1 173 1 356 1 75 1 347 1 208 1 216 1 186 1 334 1 
79 1 158 1 102 1 220 1 248 1 377 1 199 1 23 1 148 1 169 1 85 1 184 1 75 1 186 1 
79 1 102 1 158 1 220 1 167 2 20 1 12 1 23 1 253 1 171 1 173 1 75 1 347 1 208 1 216 1 186 1 123 1 334 1 
231 1 
90 1 18 1 381 1 155 1 168 1 287 1 261 1 
101 1 176 1 320 1 319 1 324 1 261 1 6 1 41 1 375 1 168 1 11 1 146 1 353 1 381 1 155 2 315 1 217 1 
246 1 101 3 158 1 102 1 248 1 162 2 250 6 105 2 299 2 63 2 261 1 168 8 11 12 353 5 75 1 124 1 78 2 318 2 217 3 176 5 127 2 177 2 360 2 319 3 320 3 23 1 285 3 364 1 324 3 369 6 184 1 186 2 41 6 378 1 189 2 291 2 49 2 50 1 148 6 146 5 292 2 381 7 155 7 54 1 56 2 
100 1 157 1 274 1 101 2 15 1 176 1 177 2 82 2 19 1 250 5 320 2 319 2 299 2 108 1 226 1 324 2 63 2 369 5 140 1 261 2 41 3 42 1 189 2 49 1 11 6 168 8 50 1 353 1 146 1 292 2 380 1 381 5 155 5 76 1 217 1 
101 1 159 1 81 1 82 2 320 1 319 1 58 1 299 2 256 1 342 1 204 1 205 1 365 1 33 1 138 1 324 1 304 1 305 1 349 1 168 2 353 1 146 1 292 1 150 1 95 1 381 2 76 1 174 1 
101 1 90 1 18 1 319 1 320 1 168 1 324 1 381 1 155 1 261 1 
41 5 177 2 250 5 189 2 299 2 11 10 168 5 292 2 63 2 381 5 369 5 155 5 78 1 
176 1 155 1 261 1 353 1 146 1 217 1 
101 2 158 1 247 1 102 4 176 4 248 2 361 2 320 2 319 1 280 1 199 1 23 4 202 1 85 1 324 2 184 1 370 1 186 1 209 1 235 1 49 2 168 2 50 2 148 1 146 3 353 3 381 2 75 4 217 2 
246 1 102 1 158 1 159 3 128 1 359 1 17 1 248 1 161 1 298 1 23 1 300 1 25 1 60 1 203 1 183 1 204 2 302 1 205 2 304 3 184 1 305 1 186 1 7 1 89 2 113 1 91 1 265 1 148 1 150 2 95 2 75 1 
41 1 101 1 250 1 319 1 320 1 11 2 49 1 168 1 50 1 324 1 381 1 155 2 261 1 
230 1 279 1 77 1 
230 1 279 1 77 1 
27 1 137 1 267 1 230 1 77 1 
230 1 279 1 77 1 
230 1 52 1 77 1 
230 1 52 1 77 1 
230 1 52 1 77 1 
230 1 77 1 
222 1 241 1 
274 1 17 1 19 1 299 1 59 1 25 1 60 4 342 1 302 8 140 1 349 1 89 2 306 1 113 1 91 1 211 2 145 4 149 1 292 1 240 1 96 2 380 1 174 1 
274 2 177 1 17 2 19 1 59 1 299 2 282 1 25 2 60 5 342 1 302 11 63 1 140 1 349 1 89 4 306 1 113 2 91 2 211 3 145 6 13 1 149 1 292 1 240 1 96 2 380 1 73 1 174 1 
274 1 15 1 278 1 177 2 17 3 19 1 59 1 299 3 25 3 226 1 108 1 60 10 342 1 302 19 63 2 140 1 349 1 89 6 306 1 113 3 42 1 91 3 189 2 211 4 145 9 13 1 149 1 292 3 240 1 96 3 380 1 73 1 174 1 
274 1 15 1 278 1 177 2 17 3 19 1 59 1 299 3 25 3 226 1 108 1 60 7 342 1 302 17 63 2 140 1 349 1 89 6 306 1 113 3 91 3 42 1 189 1 211 5 145 10 13 2 149 1 292 2 240 1 96 3 380 1 73 1 174 1 
274 1 17 1 19 1 299 1 59 1 25 1 60 4 342 1 302 8 140 1 349 1 89 2 306 1 113 1 91 1 211 2 145 4 149 1 292 1 240 1 96 2 380 1 174 1 
274 1 15 1 177 2 17 1 19 1 59 1 299 2 25 1 226 1 108 1 60 6 302 12 63 2 140 1 89 2 113 1 91 1 42 1 189 2 211 2 145 6 13 1 292 2 96 1 380 1 
274 1 15 1 278 2 177 2 17 4 19 1 59 1 299 3 108 1 25 4 226 1 60 8 342 1 302 18 63 2 140 1 349 1 89 8 306 1 113 4 42 1 91 4 189 1 211 5 145 10 13 2 149 1 292 2 240 1 96 3 380 1 73 1 174 1 
274 1 15 1 278 2 177 3 17 4 19 1 59 1 299 3 108 1 25 4 226 1 60 7 302 16 63 3 140 1 89 8 113 4 42 1 91 4 189 2 211 6 145 9 13 3 292 2 94 1 96 3 380 1 
211 6 299 1 145 3 13 3 149 1 60 4 292 1 342 1 302 7 240 2 96 3 349 3 174 3 
274 1 15 1 278 2 177 2 17 4 19 1 59 1 299 3 108 1 25 4 226 1 60 8 342 1 302 18 63 2 140 1 349 1 89 8 306 1 113 4 42 1 91 4 189 1 211 4 145 10 13 1 149 1 292 2 240 1 94 1 96 3 380 1 174 1 
89 4 306 1 113 2 91 2 278 1 17 2 211 3 299 1 145 4 13 1 25 2 149 1 60 4 292 1 342 1 302 8 240 1 96 2 349 1 174 1 
306 1 211 2 299 1 145 3 149 1 60 3 292 1 342 1 302 6 240 1 96 2 287 1 349 1 174 1 
89 2 113 1 91 1 177 1 17 1 189 1 211 2 299 1 145 2 13 1 25 1 60 2 292 1 302 4 96 1 73 1 63 1 
274 2 177 1 19 1 189 1 211 2 145 3 299 1 282 1 13 1 60 4 292 1 302 7 96 1 63 1 140 1 
274 2 278 2 177 2 17 2 19 2 133 1 299 3 282 1 25 2 60 12 342 1 302 23 63 2 345 1 349 2 89 4 306 1 113 2 91 2 189 2 211 9 145 11 13 4 149 1 292 3 240 1 96 5 215 1 174 2 
60 1 274 1 302 1 
302 1 19 1 145 1 
89 2 113 1 91 1 177 1 17 1 189 1 211 3 299 1 145 3 13 1 25 1 60 3 292 1 302 6 96 2 73 1 63 1 78 1 
274 1 15 1 177 2 17 1 19 1 59 1 299 2 25 1 226 1 108 1 60 6 302 12 63 2 140 1 89 2 113 1 91 1 42 1 189 2 211 2 145 6 13 1 292 2 96 1 380 1 
211 2 299 1 145 3 13 1 60 3 292 1 342 1 302 6 96 1 349 1 174 1 
89 2 113 1 278 1 91 1 17 1 211 2 145 1 13 1 25 1 149 1 60 2 302 3 240 1 96 1 345 1 174 1 349 1 
89 2 113 1 91 1 17 1 211 5 59 1 145 5 299 2 13 2 25 1 60 5 292 2 342 1 302 10 365 1 96 3 349 2 174 2 
89 2 113 1 91 1 177 1 17 1 211 1 59 1 299 1 145 2 13 1 25 1 302 2 
89 2 113 1 91 1 177 1 17 1 189 1 211 2 59 1 299 1 145 2 13 1 25 1 60 2 292 1 302 4 96 1 63 1 
89 6 113 3 278 1 91 3 17 3 211 2 59 1 145 1 13 1 25 3 60 2 302 3 94 1 96 1 345 1 349 1 174 1 
274 4 278 2 219 1 177 3 221 1 17 5 19 3 59 1 299 5 282 1 25 5 60 18 342 2 302 34 63 3 345 1 140 1 349 3 89 10 306 1 113 5 91 5 189 3 211 12 145 16 13 5 149 1 292 5 240 1 94 1 96 7 73 1 193 1 174 3 
159 1 205 1 161 1 304 1 47 1 333 1 147 1 
159 1 266 1 205 1 213 1 161 1 139 1 304 1 47 1 191 1 333 1 147 1 312 1 
158 1 85 1 102 1 248 1 184 1 287 1 75 1 199 1 186 1 23 1 148 1 
246 1 102 1 158 1 159 2 248 1 161 1 298 1 23 1 148 1 150 1 203 1 29 1 204 1 205 1 184 1 304 2 75 1 186 1 
246 2 158 1 102 1 159 2 161 1 361 1 336 1 298 1 58 1 23 1 203 1 29 1 204 2 205 2 304 2 184 2 186 1 10 1 212 1 148 3 150 1 97 1 75 1 
246 2 158 1 102 2 159 2 161 1 361 1 336 1 58 1 23 2 203 1 29 1 204 2 205 2 304 2 184 2 186 1 36 1 10 1 212 1 148 3 150 1 152 1 97 1 75 2 
246 1 102 3 176 1 158 1 248 1 360 1 336 1 361 1 212 1 105 1 23 3 146 2 353 2 148 4 170 1 285 1 357 1 155 1 184 1 75 3 261 1 186 1 36 1 
246 1 102 3 176 1 158 1 248 1 360 1 336 1 361 1 162 1 212 1 105 1 23 3 146 2 353 2 148 4 285 1 155 1 184 1 75 3 261 1 186 1 36 1 
158 1 102 1 239 1 75 1 186 1 23 1 
218 1 246 1 102 7 158 2 166 1 131 1 248 2 143 1 297 1 23 6 148 3 228 1 239 1 214 1 173 1 32 1 184 2 75 7 54 1 317 1 186 3 
57 1 246 1 158 1 102 1 159 2 128 1 359 2 17 2 161 2 298 1 299 1 23 1 300 1 200 1 25 2 60 3 180 1 342 1 203 1 29 1 228 1 204 1 302 6 205 1 184 1 304 2 186 1 349 1 89 4 306 1 113 2 91 2 43 1 265 2 290 1 211 2 145 3 149 1 148 1 292 1 150 1 332 1 240 1 96 2 75 1 99 1 174 1 
101 2 102 1 247 1 176 2 18 1 248 1 360 1 162 1 320 2 319 2 105 1 23 1 285 1 324 2 261 1 90 1 168 1 291 1 353 3 146 3 148 2 355 1 381 1 155 1 75 1 56 1 318 1 217 1 
246 1 102 2 158 1 105 1 23 2 148 2 228 1 239 1 364 1 184 1 75 2 54 1 186 2 
102 4 158 1 248 1 2 1 199 1 23 4 148 1 85 1 228 1 184 1 75 4 186 1 36 1 
246 1 102 2 158 1 130 1 131 1 361 1 297 1 23 2 148 1 184 1 75 2 262 1 288 1 186 2 
158 1 102 1 167 1 248 1 20 1 75 1 208 1 12 1 186 1 23 1 
102 2 158 1 71 1 23 2 148 1 228 1 173 1 32 1 184 1 75 2 186 1 
102 5 158 2 166 1 248 1 361 1 2 1 199 1 23 4 148 3 85 1 228 1 32 1 184 2 75 5 186 2 317 1 
38 1 102 5 158 2 248 1 361 1 2 1 199 1 23 4 148 3 85 1 228 1 32 1 184 2 75 5 186 2 317 1 
246 1 102 1 158 1 159 2 248 1 161 1 23 1 148 1 150 1 203 1 152 1 29 1 204 1 205 1 184 1 304 2 75 1 186 1 
246 1 102 1 158 1 131 1 297 1 361 1 23 1 148 1 214 1 184 1 75 1 54 1 186 2 
258 1 1 1 161 1 98 1 281 1 
327 1 10 1 360 1 1 1 46 1 161 1 58 1 281 2 146 2 353 2 258 2 355 1 294 1 97 1 98 2 155 1 64 1 261 1 260 1 
159 1 1 1 249 1 281 1 84 1 258 1 284 1 205 1 304 1 
294 1 1 1 260 1 
118 1 287 1 135 1 268 1 
118 1 354 1 207 1 88 1 135 1 268 1 141 1 
366 1 309 1 141 1 
165 1 45 2 83 1 190 1 135 1 268 1 118 1 293 1 354 3 207 1 88 1 141 3 
118 1 354 2 87 1 207 1 88 1 135 1 268 1 55 1 141 2 
167 1 83 1 340 1 135 1 12 1 354 1 207 1 88 1 295 1 141 1 216 1 
118 1 354 1 83 1 207 1 88 1 135 1 141 1 
118 2 354 1 83 1 207 1 88 1 268 1 141 1 
118 1 151 1 354 2 119 1 83 1 207 2 88 2 185 1 135 1 141 2 
358 1 83 1 135 2 268 1 118 1 354 3 207 1 88 1 156 1 295 1 141 3 372 1 55 2 
167 2 20 1 83 1 135 1 268 1 12 1 118 1 354 2 171 1 121 1 207 1 88 1 141 2 216 1 55 1 
83 1 135 2 268 1 118 1 354 4 87 1 172 1 207 2 88 2 156 1 295 1 141 4 55 2 
118 1 354 1 83 1 207 1 88 1 135 1 268 1 141 1 
165 1 45 1 190 1 135 3 268 2 118 2 354 4 270 1 207 1 88 1 156 1 295 1 55 2 141 4 
264 1 277 1 83 1 135 1 268 1 118 1 354 2 153 1 207 1 88 1 141 2 55 1 
118 1 165 2 126 1 354 3 45 2 83 1 207 1 88 1 190 1 135 1 268 1 141 3 
351 1 376 1 192 2 135 2 
354 1 31 1 83 1 207 1 88 1 141 1 
118 1 354 2 83 1 207 1 88 1 135 1 268 1 55 1 372 1 141 2 
348 1 
118 1 354 1 83 1 207 1 88 1 135 1 268 1 141 1 
45 1 83 1 135 1 268 1 118 1 354 3 207 1 88 1 55 1 141 3 372 1 
270 1 295 1 156 1 135 1 
118 1 135 1 

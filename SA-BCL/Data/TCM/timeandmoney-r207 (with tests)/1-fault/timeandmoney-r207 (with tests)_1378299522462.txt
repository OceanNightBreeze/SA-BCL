#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (285,353) 54 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (285,353) 54 310 44 (285,353) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 26 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (285,353) 54 40 256 202 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (285,353) 54 276 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (285,353) 54 310 87 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (285,353) 54 244 168 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (285,353) 54 310 44 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (285,353) 54 244 87 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (285,353) 54 244 168 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (285,353) 54 310 44 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (285,353) 54 244 87 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (285,353) 54 244 87 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (285,353) 54 244 87 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (285,353) 54 244 87 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (285,353) 54 244 87 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (285,353) 54 173 (215,239) (215,239) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 338 2 46 1 221 2 25 1 341 5 47 6 4 9 29 1 31 2 171 1 106 1 325 9 371 4 59 1 35 1 355 1 174 1 15 2 376 1 234 2 84 3 289 2 238 1 240 1 362 1 136 2 69 1 
71 1 338 2 46 1 221 2 25 1 341 5 47 6 4 9 29 1 31 2 171 1 106 1 325 9 371 4 59 1 35 1 355 1 174 1 15 2 234 2 376 1 84 3 238 1 289 2 240 1 362 1 136 2 69 1 
71 1 338 2 46 1 221 2 25 1 341 6 47 7 4 10 29 1 31 2 171 1 106 1 325 10 371 5 59 1 35 1 355 1 174 1 15 2 234 2 376 1 84 4 238 1 289 2 240 1 362 1 136 2 69 1 
338 2 46 1 221 2 25 1 341 4 47 4 4 7 29 1 31 2 171 1 106 1 325 7 371 3 59 1 35 1 355 1 174 1 15 2 234 2 376 1 84 2 238 1 289 1 240 1 362 1 136 2 69 1 
171 1 325 4 71 1 371 2 338 1 355 1 221 1 25 1 47 3 341 3 4 4 15 1 31 1 84 1 234 1 289 2 362 1 69 1 
106 1 325 2 338 1 355 1 46 1 221 1 341 1 25 1 4 2 15 1 271 1 303 1 31 1 317 1 136 1 69 1 
325 3 371 1 338 2 35 1 355 1 25 1 341 2 47 1 4 3 31 2 84 1 136 1 69 1 
71 1 338 2 221 1 25 1 47 7 341 5 4 9 29 1 31 2 171 1 325 9 371 4 35 1 355 1 15 1 133 1 84 3 234 1 289 2 240 1 362 1 136 1 88 1 69 1 
71 1 338 2 221 1 25 1 47 7 341 5 4 9 29 1 31 2 171 1 325 9 371 4 35 1 355 1 15 1 133 1 84 3 234 1 289 2 240 1 362 1 136 1 88 1 69 1 
66 1 206 1 26 1 
222 1 75 2 206 1 
139 2 357 2 140 2 158 1 16 2 347 2 81 1 175 2 
139 3 140 2 217 1 365 1 162 1 143 1 294 1 94 1 186 1 188 1 342 1 103 2 32 1 347 2 127 1 279 1 197 1 105 1 324 1 12 1 198 1 108 1 60 1 81 1 175 2 13 2 258 1 357 3 112 2 158 1 176 1 306 1 16 2 378 1 180 2 19 1 309 2 
139 1 357 1 140 1 100 1 16 1 61 1 347 1 81 1 98 1 175 1 
140 1 139 1 172 1 337 1 220 1 204 1 61 1 206 1 357 1 74 1 167 1 66 1 343 1 286 1 
140 1 139 1 337 2 220 1 204 1 61 1 206 1 175 1 357 1 74 1 167 1 66 1 16 1 286 2 347 1 
280 1 64 1 337 1 286 1 150 1 
280 1 66 1 208 1 337 2 286 2 150 1 206 1 329 1 
337 1 286 1 150 1 
140 1 139 1 280 1 337 1 61 1 81 1 98 1 175 1 357 1 132 1 100 1 286 1 16 1 347 1 
206 1 
280 1 66 1 208 1 337 2 286 2 150 1 206 1 27 1 
122 1 153 1 280 2 337 5 92 2 284 1 142 1 3 2 206 1 49 1 62 2 177 1 207 1 66 1 208 1 286 5 194 1 277 1 150 2 
158 1 26 1 
139 2 357 2 140 2 158 2 16 1 117 1 347 1 175 1 266 1 
353 1 54 1 
139 1 105 1 365 1 162 1 108 1 94 1 188 1 13 1 258 1 357 1 112 1 158 1 115 1 342 1 180 1 279 1 
105 1 140 1 139 2 1 1 353 1 365 1 162 1 108 1 94 1 188 1 175 1 13 1 258 1 357 2 112 1 342 1 134 1 180 1 347 1 279 1 
139 3 357 3 140 3 158 1 16 1 134 1 347 3 175 3 
139 1 357 1 140 1 61 1 347 1 98 1 175 1 
139 1 357 1 140 1 16 1 117 1 61 1 347 1 266 1 175 1 
139 4 140 3 217 1 1 1 337 1 365 1 162 1 294 1 94 1 186 1 220 1 188 1 74 1 167 1 342 1 191 1 103 2 347 3 127 1 279 1 105 1 369 1 324 1 198 1 12 1 108 1 60 1 204 1 61 1 81 1 258 1 175 3 13 1 357 4 112 1 158 1 176 1 306 1 16 2 286 1 117 1 134 1 180 1 309 1 
139 2 357 2 140 2 158 1 343 1 134 1 308 1 347 1 175 1 
140 3 139 3 1 1 337 1 204 1 220 1 61 1 206 1 295 1 175 3 357 3 74 1 167 1 191 1 16 1 286 1 117 1 134 2 347 3 
140 2 139 2 353 1 175 2 131 1 357 2 16 1 134 1 117 1 347 2 
139 1 105 1 365 1 162 1 108 1 94 1 13 1 258 1 188 1 357 1 112 1 158 1 342 1 180 1 279 1 
139 1 105 1 365 1 162 1 108 1 94 1 13 1 188 1 357 1 112 1 158 1 179 1 180 1 364 1 279 1 
310 1 44 1 217 1 324 1 353 1 60 1 294 1 186 1 285 1 230 1 176 1 315 1 103 2 54 1 127 2 309 2 
139 1 357 1 140 1 21 1 220 1 61 1 347 1 175 1 
139 5 357 5 140 5 190 1 1 1 158 1 343 1 16 1 117 1 134 2 308 1 347 4 214 1 175 4 
139 2 357 2 140 2 21 1 61 1 347 2 98 1 175 2 
330 1 302 1 
330 1 302 1 
67 1 237 1 
67 1 237 1 
67 1 237 1 
330 1 302 1 326 1 
330 1 302 1 326 1 
330 1 302 1 70 1 
330 2 302 2 224 1 7 1 67 1 237 1 
330 1 302 1 326 1 
330 1 302 1 354 1 
330 1 302 1 354 1 
330 1 302 1 354 1 
160 1 281 1 337 2 37 1 206 1 232 2 302 2 330 2 273 2 374 1 192 2 286 2 7 1 118 2 318 3 331 1 288 1 297 2 10 1 
140 2 139 2 312 1 182 1 70 1 337 1 72 1 164 1 273 1 318 1 297 1 252 1 347 2 227 1 175 2 232 1 330 1 302 1 357 2 158 1 286 1 118 1 331 1 235 1 
15 1 234 1 221 1 
15 1 303 1 221 1 
15 3 154 1 303 1 234 2 80 1 195 1 
15 2 154 1 303 1 234 1 85 1 80 1 
15 2 154 1 303 1 234 1 80 2 
310 1 122 1 182 1 183 2 292 1 337 5 92 1 72 1 219 2 244 1 165 1 3 1 222 1 75 3 277 2 150 1 78 1 280 4 227 1 109 1 230 1 206 2 62 1 63 2 358 1 177 3 208 1 66 1 286 5 178 1 87 1 137 1 
310 3 0 5 122 1 89 1 183 6 337 9 92 2 244 3 165 2 3 2 49 1 222 3 75 9 277 6 150 6 78 1 280 7 227 4 228 1 255 1 36 1 230 3 206 5 62 2 63 6 64 5 177 8 66 1 208 1 286 9 178 2 287 1 87 3 137 3 334 1 
310 1 183 2 292 1 337 3 92 1 219 1 244 1 165 1 3 1 49 1 222 2 75 4 277 2 280 2 227 1 109 1 230 1 206 3 62 1 63 2 177 3 66 1 286 3 178 1 87 1 137 1 
310 2 89 1 183 4 292 1 337 4 92 1 219 2 244 2 165 1 3 1 49 1 222 3 75 7 277 4 280 3 227 2 36 1 109 1 230 2 206 4 62 1 63 4 177 5 66 1 286 4 178 1 287 1 87 2 137 2 
260 1 26 1 188 1 
53 1 188 1 
110 1 
105 1 188 1 
105 1 260 2 293 1 162 1 290 1 188 3 
105 1 162 1 188 1 
126 1 188 1 
11 1 350 3 351 2 181 1 173 2 143 4 230 1 124 1 28 1 145 1 239 1 127 3 137 1 43 1 309 7 216 1 215 1 
11 1 350 3 351 2 181 1 173 2 143 4 230 1 124 1 28 1 145 1 239 1 127 3 137 1 43 1 309 7 216 1 215 1 
11 1 350 3 351 2 181 1 173 2 143 4 230 1 124 1 257 1 28 1 145 1 239 1 127 3 137 1 43 1 309 7 215 1 216 1 
310 3 181 2 141 1 22 1 143 16 244 3 294 1 186 1 124 1 28 2 145 2 189 3 103 2 344 1 127 15 226 1 11 2 350 10 351 5 324 1 352 1 173 3 230 4 40 4 176 1 87 3 213 1 239 1 137 4 43 5 309 31 215 1 216 1 138 1 
181 1 141 1 294 2 143 5 186 2 124 1 247 1 28 1 145 1 103 4 250 1 127 4 11 1 351 3 350 4 324 2 173 2 230 1 176 2 239 1 137 1 43 1 309 9 215 1 
291 1 338 1 184 1 94 1 221 1 341 1 25 1 47 1 4 2 50 1 31 1 195 1 128 1 279 1 325 2 201 1 355 1 13 1 112 1 372 1 259 1 15 2 304 1 303 1 234 1 209 1 135 1 180 1 136 1 69 1 
291 1 338 1 184 1 94 1 221 1 341 1 25 1 47 2 4 3 144 1 50 1 31 1 195 1 128 1 279 1 325 3 282 1 201 1 205 1 13 1 112 1 372 1 259 1 15 2 304 1 303 1 234 1 180 1 136 1 69 1 
184 1 94 1 221 1 341 1 25 1 47 2 4 2 144 1 50 1 195 1 128 1 279 1 325 2 282 1 201 1 13 1 112 1 259 1 15 2 304 1 303 1 234 1 180 1 136 1 69 1 
365 1 218 1 338 1 184 2 94 1 4 1 246 1 188 1 148 1 31 1 279 1 105 1 325 1 201 2 205 1 13 1 112 1 259 2 359 1 42 1 180 1 136 2 241 1 
291 1 325 1 282 1 338 1 201 1 184 1 94 1 355 1 221 1 4 1 13 1 372 1 112 1 15 2 50 1 259 1 303 1 304 1 31 1 234 1 135 1 195 1 180 1 279 1 128 1 136 1 
299 1 
140 1 139 1 90 4 337 5 92 1 94 1 3 1 188 1 296 2 147 1 343 1 150 6 9 2 152 1 105 1 300 2 254 2 204 1 61 1 206 2 13 2 62 1 112 2 357 1 66 1 208 3 116 1 263 1 122 1 311 1 365 2 165 1 220 1 166 1 74 1 167 1 222 2 270 1 75 2 277 2 77 1 279 1 320 1 172 1 129 1 38 2 231 1 233 2 82 2 177 2 286 5 42 1 180 2 241 1 242 1 
139 1 140 1 311 1 90 2 337 3 220 1 27 1 74 1 167 1 147 1 343 1 150 2 320 1 172 1 129 1 38 1 204 1 61 1 357 1 208 1 286 3 242 1 
139 1 140 1 311 1 90 3 337 3 220 1 27 1 74 1 167 1 147 1 343 1 150 1 320 1 172 1 129 1 254 1 204 1 61 1 206 1 357 1 66 1 208 1 286 3 242 1 
139 1 140 1 311 1 90 3 337 3 220 1 27 1 74 1 167 1 147 1 343 1 150 2 320 1 172 1 129 1 254 1 38 1 204 1 61 1 206 1 357 1 82 1 208 1 66 1 286 3 242 1 
139 1 140 1 90 6 243 1 337 5 92 1 3 1 296 2 147 1 343 1 150 7 9 2 152 1 300 2 254 4 57 1 204 1 61 1 206 5 357 1 62 1 208 3 66 5 122 1 311 1 73 1 220 1 27 1 167 1 74 1 270 1 222 2 272 1 277 1 320 1 170 1 172 1 129 1 38 4 233 2 82 4 177 1 286 5 242 1 
139 1 140 1 90 4 337 4 92 1 3 1 296 2 147 1 343 1 150 4 9 2 152 1 300 2 254 2 204 1 61 1 206 2 357 1 62 1 208 2 66 1 122 1 311 1 220 1 166 1 167 1 74 1 270 1 222 2 75 2 277 1 320 1 172 1 129 1 38 2 233 2 177 1 82 2 286 4 242 1 
139 1 140 1 122 1 311 1 90 4 337 4 92 1 73 1 220 1 3 1 74 1 167 1 222 2 270 1 272 1 296 2 147 1 343 1 277 1 150 4 9 2 320 1 152 1 170 1 172 1 300 2 254 2 129 1 38 2 204 1 61 1 206 1 233 2 357 1 62 1 82 2 177 1 66 1 208 2 286 4 242 1 
139 1 140 1 122 1 311 1 90 4 337 4 92 1 73 1 220 1 3 1 74 1 167 1 222 2 270 1 272 1 296 2 147 1 343 1 277 1 150 4 9 2 320 1 152 1 170 1 172 1 300 2 254 2 129 1 38 2 204 1 61 1 206 1 233 2 357 1 62 1 82 2 177 1 66 1 208 2 286 4 242 1 
139 1 140 1 122 1 311 1 90 4 337 4 92 1 73 1 220 1 95 1 3 1 74 1 167 1 75 2 6 2 296 2 147 1 343 1 277 1 150 4 9 2 320 1 56 1 152 1 172 1 254 2 129 1 38 2 204 1 61 1 206 1 357 1 62 1 82 2 177 1 66 1 208 2 286 4 159 2 264 1 242 1 
122 1 139 1 140 1 311 1 90 5 337 4 92 1 73 1 220 1 3 1 74 1 167 1 222 2 270 1 272 1 296 2 147 1 343 1 277 1 150 5 9 2 320 1 152 1 170 1 172 1 300 2 129 1 254 3 57 1 38 3 204 1 61 1 206 1 233 2 62 1 357 1 177 1 82 3 66 1 208 2 286 4 242 1 
122 1 139 1 140 1 311 1 90 5 337 4 92 1 73 1 220 1 3 1 74 1 167 1 222 2 270 1 272 1 296 2 147 1 343 1 277 1 150 5 9 2 320 1 152 1 170 1 172 1 300 2 129 1 254 3 57 1 38 3 204 1 61 1 206 1 233 2 62 1 357 1 177 1 82 3 66 1 208 2 286 4 242 1 
139 1 140 1 90 4 337 4 92 1 3 1 296 2 6 2 147 1 343 1 150 4 9 2 152 1 254 2 204 1 61 1 206 1 357 1 62 1 208 2 66 1 159 2 264 1 122 1 311 1 220 1 166 1 167 1 74 1 75 2 277 1 320 1 172 1 129 1 38 2 177 1 82 2 286 4 242 1 
11 1 350 2 351 2 217 1 324 1 353 1 173 1 143 3 60 1 294 1 186 1 230 1 124 1 26 1 145 1 158 2 176 1 315 1 103 2 54 1 239 1 127 3 137 1 309 6 215 1 
324 1 176 1 217 1 353 1 103 2 294 1 60 1 202 1 186 1 54 1 127 1 256 1 309 1 40 1 151 1 
139 2 140 1 217 1 1 1 365 1 162 1 294 1 143 1 94 1 245 1 186 1 188 1 342 1 316 1 103 2 253 1 347 1 279 1 127 1 151 1 197 1 105 1 324 1 108 1 60 1 258 1 13 1 175 1 112 1 131 1 357 2 158 1 176 1 115 1 306 1 134 1 180 1 309 2 
139 2 140 1 217 2 1 1 365 1 162 1 294 2 94 1 186 2 188 1 342 1 276 1 103 4 251 1 346 1 54 1 347 1 279 1 127 2 151 1 105 1 370 1 324 2 198 1 353 1 34 1 108 1 60 2 258 1 175 1 13 1 357 2 112 1 176 2 306 1 134 1 180 1 309 2 
139 1 140 1 217 2 365 2 294 2 143 1 94 2 186 2 97 1 188 3 315 1 103 4 278 1 347 1 32 2 279 2 127 1 197 1 105 2 324 2 282 1 283 1 60 2 175 1 13 8 357 1 112 8 176 2 306 1 209 1 134 1 360 1 211 1 42 1 180 7 333 1 241 1 121 1 309 2 
140 1 139 1 310 1 217 1 294 1 244 1 143 1 186 1 103 2 54 1 347 1 127 2 151 1 324 1 353 1 60 1 230 1 157 1 175 1 357 1 176 1 16 1 117 1 87 1 137 1 309 3 
324 1 176 1 217 1 168 1 315 1 353 1 103 2 143 2 244 1 294 1 60 1 186 1 54 1 137 1 309 2 
310 1 44 1 217 1 324 1 353 1 60 1 294 1 186 1 230 1 176 1 315 1 103 2 54 1 127 2 309 2 
324 1 176 1 217 1 315 1 353 1 103 2 143 2 244 1 294 1 60 1 87 1 186 1 54 1 137 1 309 2 
324 1 176 1 217 1 168 1 353 1 103 2 360 1 143 2 244 1 294 1 60 1 186 1 54 1 137 1 309 2 
310 1 44 1 217 1 324 1 353 1 60 1 294 1 186 1 230 1 176 1 103 2 360 1 54 1 127 2 309 2 
324 1 176 1 217 1 353 1 103 2 360 1 143 2 244 1 294 1 60 1 87 1 186 1 54 1 137 1 309 2 
324 1 176 1 217 1 353 1 103 2 143 2 244 1 294 1 60 1 87 1 186 1 54 1 137 1 309 2 
139 1 217 1 365 1 162 1 143 1 294 1 94 1 186 1 188 1 342 1 103 2 279 1 127 1 197 1 105 1 324 1 198 1 108 1 60 1 258 1 13 1 112 1 357 1 158 1 176 1 306 1 180 1 309 2 
139 1 217 1 365 1 162 1 366 1 143 1 294 1 94 1 186 1 188 1 103 2 279 1 127 1 197 1 105 1 324 1 108 1 60 1 13 1 112 1 357 1 158 1 176 1 306 1 179 1 180 1 364 1 309 2 
324 1 176 1 217 1 353 1 103 2 143 2 244 1 294 1 60 1 87 1 186 1 54 1 137 1 309 2 151 1 
139 1 217 1 162 1 143 2 244 1 294 1 94 1 186 1 188 1 342 1 103 2 346 1 54 1 279 1 105 1 324 1 198 1 353 1 108 1 60 1 258 1 13 1 112 1 357 1 176 1 209 1 180 1 87 1 137 1 309 2 
139 1 140 1 217 1 324 1 353 1 143 2 244 1 60 1 294 1 186 1 175 1 357 1 176 1 103 2 16 1 117 1 87 1 54 1 347 1 137 1 309 2 169 1 151 1 
310 3 22 1 294 2 143 9 244 3 186 2 247 1 189 1 30 1 103 4 8 1 127 10 321 1 55 2 322 1 351 3 350 6 324 2 79 1 58 2 200 1 203 1 230 3 40 2 176 2 87 3 137 3 43 3 309 19 138 1 
310 2 141 2 294 3 143 14 244 3 186 3 247 1 189 2 30 1 146 1 76 1 102 1 103 6 8 2 127 12 321 1 55 1 350 4 351 2 324 3 79 2 58 4 200 1 230 2 40 2 176 3 375 1 210 1 212 1 87 3 43 2 137 3 309 26 138 2 
141 1 244 4 143 20 294 3 340 1 186 3 247 1 145 1 189 3 146 1 102 1 103 6 8 1 55 1 11 1 350 8 351 4 200 1 58 4 210 1 212 1 309 41 215 1 310 4 22 1 124 1 30 1 76 1 127 21 321 1 322 1 324 3 79 2 173 1 230 5 40 4 176 3 375 1 87 4 239 1 43 4 137 5 138 3 
310 3 141 2 22 1 294 4 143 20 244 4 340 1 186 4 124 1 247 1 145 1 189 3 146 1 30 1 76 1 102 1 103 8 8 1 127 18 321 1 55 1 322 1 11 1 351 4 350 7 324 4 79 2 58 4 200 1 173 1 230 4 40 4 176 4 375 1 210 1 212 1 87 4 239 1 137 5 43 3 309 38 215 1 138 3 
310 7 141 1 22 2 294 2 143 27 244 7 186 2 124 1 48 2 247 1 145 1 189 4 146 1 30 1 76 1 102 1 103 4 8 1 127 25 321 1 55 1 11 1 351 7 350 14 324 2 79 1 58 4 200 1 173 1 230 8 40 4 176 2 375 1 210 1 212 1 87 7 239 1 137 8 43 7 309 52 215 1 138 2 
330 1 302 1 160 1 273 1 7 1 118 1 37 1 297 1 104 1 232 1 
70 1 235 1 
330 1 302 1 51 1 273 1 223 1 118 1 328 1 297 1 232 1 
160 1 281 1 337 1 37 1 206 1 232 1 302 1 330 1 273 1 374 1 192 1 286 1 7 1 118 1 318 2 331 1 288 1 297 1 
160 1 281 1 337 1 37 1 206 1 232 1 302 1 330 1 273 1 374 1 192 1 286 1 7 1 118 1 318 2 331 1 288 1 297 1 
160 1 281 1 337 1 37 1 206 1 232 1 302 1 330 1 273 1 374 1 192 1 286 1 7 1 118 1 318 2 331 1 288 1 297 1 
326 1 224 1 193 1 
326 1 224 1 193 1 
267 1 354 1 
267 1 224 1 354 1 
164 1 252 1 
139 2 140 2 312 1 182 1 70 1 337 1 72 1 164 1 187 1 273 1 192 1 318 1 297 1 252 1 347 2 280 1 227 1 232 1 175 2 357 2 330 1 302 1 158 1 374 1 286 1 118 1 235 1 
326 1 193 1 
267 1 224 1 354 1 
139 2 140 2 217 1 2 1 339 1 294 1 143 1 94 1 186 1 188 1 248 1 103 2 32 2 279 1 127 1 151 1 197 1 105 1 324 1 283 1 60 1 13 2 112 2 357 2 176 1 114 1 306 1 262 1 211 1 180 2 309 2 
268 1 291 1 282 1 201 1 94 1 221 1 13 2 356 1 112 2 15 2 303 1 304 1 367 1 234 1 209 1 195 1 180 2 279 1 128 1 
291 1 282 1 201 1 94 1 221 1 13 1 112 1 15 2 303 1 304 1 367 1 234 1 345 1 195 1 180 1 128 1 279 1 
105 1 365 1 201 1 94 1 188 1 13 1 356 1 246 1 112 1 42 1 180 1 279 1 241 1 68 1 
268 1 291 1 282 1 201 1 94 1 221 1 13 1 356 1 112 1 15 2 303 1 304 1 367 1 234 1 195 1 180 1 279 1 128 1 
377 1 
153 1 177 1 66 1 277 1 142 1 206 1 26 1 
122 1 337 1 92 1 3 1 222 1 270 1 75 1 277 1 150 1 300 1 206 2 62 1 233 1 177 1 208 1 66 1 286 1 
183 6 337 5 92 4 142 1 244 2 94 3 3 4 188 10 5 2 53 3 150 5 105 3 349 1 153 1 107 2 155 2 204 2 206 8 13 3 62 4 112 3 63 6 66 2 260 2 208 3 209 1 307 1 263 1 20 2 122 4 310 2 365 1 162 3 23 1 165 2 123 1 222 6 75 12 276 2 126 2 277 8 279 4 368 2 130 2 327 2 230 2 39 1 177 9 286 5 180 3 236 2 87 2 290 1 137 2 
122 2 310 2 183 5 337 1 313 1 92 2 244 2 165 1 3 2 222 3 189 1 75 6 146 1 5 1 76 1 102 1 277 5 150 1 155 2 229 1 230 2 206 5 40 1 62 2 63 5 177 8 375 1 208 1 66 2 286 1 210 1 263 1 87 2 137 2 138 1 
139 1 122 1 140 1 337 1 92 1 3 1 124 1 98 1 145 1 100 1 5 1 277 2 347 1 11 1 170 1 155 2 61 1 230 1 81 1 175 1 357 1 62 1 132 1 373 1 177 2 286 1 16 1 137 2 
122 1 153 1 92 1 142 1 3 1 206 1 62 1 177 1 66 1 277 1 
310 2 183 5 155 2 244 2 230 2 206 5 63 5 222 5 75 10 177 5 5 1 276 1 277 5 87 2 137 2 
66 1 337 1 208 1 286 1 150 1 206 1 
122 1 365 2 337 3 92 2 23 2 163 1 94 1 165 2 3 2 49 1 188 1 277 2 77 1 149 1 150 4 279 1 105 1 13 4 62 2 112 4 177 2 116 1 208 2 286 3 307 1 42 1 180 4 263 2 241 1 
139 3 140 2 217 1 365 1 162 1 294 1 94 1 186 1 188 1 342 1 103 2 347 2 127 1 279 1 105 1 324 1 12 1 198 1 108 1 60 1 81 1 13 1 175 2 258 1 112 1 357 3 158 1 176 1 306 1 16 2 180 1 309 1 
122 1 183 2 92 1 173 1 165 1 3 1 206 4 62 1 222 2 63 2 75 4 177 1 66 2 277 2 263 1 
274 1 297 1 232 1 
274 1 297 1 232 1 
160 1 83 1 164 1 297 1 232 1 
274 1 297 1 232 1 
99 1 297 1 232 1 
99 1 297 1 232 1 
99 1 297 1 232 1 
297 1 232 1 
330 1 302 1 
11 1 350 3 351 2 324 2 141 1 173 1 143 4 294 2 186 2 230 1 124 1 145 1 176 2 103 4 239 1 137 1 127 4 43 1 309 8 215 1 
11 1 351 2 350 2 173 1 143 3 230 1 26 1 124 1 145 1 239 1 127 3 137 1 309 6 215 1 
310 1 351 1 350 2 324 1 294 1 244 1 143 2 186 1 230 1 176 1 103 2 86 1 87 1 127 2 137 1 43 1 309 4 
310 1 351 1 350 2 22 1 143 3 244 1 230 1 40 2 189 1 87 1 127 4 137 1 43 1 309 7 138 1 
310 2 141 2 22 1 269 1 244 2 143 11 294 2 186 2 124 1 48 1 145 2 189 2 103 4 127 12 11 2 350 9 351 5 324 2 173 1 230 3 256 1 40 2 176 2 87 2 239 1 43 4 137 3 309 23 215 1 
127 1 309 1 40 1 
189 1 143 1 309 1 
310 1 350 3 351 2 324 1 294 1 244 1 143 3 186 1 230 1 176 1 276 1 103 2 86 1 87 1 127 3 137 1 43 1 309 6 
310 2 294 1 143 6 244 2 186 1 247 1 189 1 146 1 76 1 102 1 103 2 127 6 351 1 350 2 324 1 230 2 40 1 176 1 375 1 210 1 87 2 43 1 137 2 309 12 138 1 
11 1 351 1 350 2 143 3 230 1 124 1 145 1 137 1 127 3 43 1 309 6 
11 1 350 2 351 1 141 1 324 1 269 1 143 1 294 1 186 1 145 1 176 1 103 2 239 1 43 1 127 2 309 3 215 1 
11 2 351 3 350 5 324 1 294 1 143 5 186 1 230 2 124 1 247 1 145 2 176 1 373 1 103 2 43 2 127 5 137 2 309 10 
350 1 324 1 294 1 244 1 143 2 186 1 247 1 176 1 103 2 137 1 43 1 309 2 
310 1 351 1 350 2 324 1 294 1 244 1 143 2 186 1 230 1 247 1 176 1 103 2 87 1 127 2 137 1 43 1 309 4 
322 1 11 1 351 1 350 2 141 1 324 3 269 1 294 3 143 1 186 3 247 1 145 1 176 3 103 6 127 2 43 1 309 3 
310 3 141 2 269 1 22 1 294 5 143 16 244 3 186 5 124 2 247 1 145 3 189 3 103 10 127 18 226 1 11 3 322 1 350 12 351 7 324 5 352 1 173 1 230 5 40 4 176 5 86 1 213 1 87 3 239 1 137 5 43 5 309 34 215 1 138 1 
294 1 143 4 186 1 124 1 247 1 145 1 189 1 103 2 127 4 11 1 351 2 350 2 324 1 173 1 230 1 40 1 176 1 210 1 239 1 137 1 309 8 138 1 215 1 
22 1 294 2 143 6 244 1 186 2 124 1 247 1 145 1 189 1 103 4 127 5 11 1 351 2 350 3 324 2 173 1 230 1 40 2 176 2 210 1 86 1 87 1 239 1 137 2 43 1 309 11 215 1 138 1 
310 2 141 1 294 3 143 9 244 2 186 3 124 1 247 1 145 1 189 1 146 1 76 1 102 1 103 6 127 10 11 1 351 3 350 4 324 3 173 1 230 3 40 1 176 3 375 1 210 1 86 1 87 2 239 1 43 1 137 3 309 19 215 1 138 1 
310 1 141 1 294 3 143 10 244 2 186 3 124 1 247 1 145 1 189 1 146 1 76 1 102 1 103 6 127 7 11 1 351 3 350 5 324 3 173 1 230 2 40 1 176 3 375 1 210 1 86 1 87 2 239 1 43 2 137 3 309 17 215 1 138 1 
294 1 143 4 186 1 124 1 247 1 145 1 189 1 103 2 127 4 11 1 351 2 350 2 324 1 173 1 230 1 40 1 176 1 210 1 239 1 137 1 309 8 138 1 215 1 
310 2 294 1 143 6 244 2 186 1 247 1 189 1 146 1 76 1 102 1 103 2 127 6 351 1 350 2 324 1 230 2 40 1 176 1 375 1 210 1 87 2 43 1 137 2 309 12 138 1 
310 1 141 2 294 4 143 10 244 2 186 4 124 1 247 1 145 1 189 1 146 1 76 1 102 1 103 8 127 8 11 1 351 3 350 5 324 4 173 1 230 2 40 1 176 4 375 1 210 1 86 1 87 2 239 1 43 2 137 3 309 18 215 1 138 1 
310 2 141 2 294 4 143 9 244 3 186 4 247 1 189 1 146 1 76 1 102 1 103 8 127 7 322 1 351 3 350 6 324 4 230 2 40 1 176 4 375 1 210 1 87 3 43 3 137 3 309 16 138 1 
11 3 351 3 350 6 143 3 230 1 124 1 145 3 239 1 127 4 43 3 137 1 309 7 215 2 
310 1 141 2 294 4 143 10 244 2 186 4 124 1 247 1 145 1 189 1 146 1 76 1 102 1 103 8 127 8 11 1 322 1 351 3 350 4 324 4 173 1 230 2 40 1 176 4 375 1 210 1 87 2 239 1 43 1 137 3 309 18 215 1 138 1 
139 1 357 1 140 1 158 1 343 1 308 1 225 1 
140 1 139 1 199 1 161 1 24 1 111 1 357 1 158 1 343 1 308 1 225 1 298 1 
105 1 112 1 365 1 94 1 42 1 180 1 279 1 241 1 26 1 188 1 13 1 
105 1 140 1 139 2 365 1 162 1 108 1 94 1 188 1 175 1 13 1 357 2 112 1 158 1 342 1 134 1 180 1 347 1 279 1 
105 2 140 2 139 2 162 2 108 1 23 1 94 1 220 1 61 1 188 3 175 2 13 1 167 1 357 2 112 1 158 1 342 1 126 1 134 1 236 1 180 1 347 1 279 1 
105 2 140 2 139 2 162 2 108 1 23 1 94 1 220 1 61 1 188 3 175 2 13 2 167 1 357 2 112 2 158 1 126 1 134 1 236 1 180 2 347 1 279 1 364 1 265 1 
337 2 365 1 162 1 23 1 94 1 188 4 53 1 249 1 126 1 150 1 279 1 105 1 204 1 206 1 13 3 112 3 260 1 66 1 286 2 180 3 236 1 265 1 335 1 
105 1 365 1 337 2 107 1 162 1 23 1 94 1 204 1 206 1 13 3 188 4 112 3 53 1 66 1 260 1 286 2 126 1 236 1 180 3 150 1 279 1 265 1 
112 1 94 1 180 1 279 1 13 1 97 1 
105 2 282 1 283 1 365 2 162 1 94 2 97 1 13 7 188 3 112 7 65 1 209 1 41 1 120 1 278 1 180 6 32 1 290 1 333 1 279 3 121 1 
139 2 140 1 217 2 162 1 143 3 294 2 94 1 186 2 124 1 188 1 145 1 342 1 103 4 346 1 54 1 347 1 127 3 279 1 151 1 11 1 105 1 350 2 351 2 370 1 324 2 198 1 353 1 173 1 108 1 60 2 230 1 175 1 13 1 258 1 357 2 112 1 158 2 176 2 114 1 134 1 209 1 180 1 239 1 137 1 309 6 215 1 
122 2 365 1 337 3 92 2 142 1 3 2 188 2 53 1 277 1 150 2 368 1 153 1 280 1 130 1 107 1 327 1 204 1 206 1 13 1 62 2 112 1 177 1 66 1 260 1 208 1 286 3 307 1 180 1 
349 1 105 1 162 1 94 1 97 1 13 2 188 2 112 2 260 1 209 1 180 2 290 1 279 2 
105 1 365 1 93 1 94 1 13 4 188 1 112 4 209 1 42 1 180 4 279 1 241 1 265 1 
105 1 33 1 162 1 23 1 45 1 94 1 125 1 13 2 188 1 112 2 65 1 120 1 180 2 279 2 
112 1 15 1 303 1 304 1 365 1 94 1 180 1 221 1 279 1 13 1 
105 1 112 2 283 1 282 1 209 1 339 1 94 1 180 2 279 1 188 1 13 2 
105 2 283 1 365 1 23 1 93 1 94 2 13 5 188 3 112 5 209 1 42 1 180 4 278 1 241 1 279 2 121 1 
105 2 283 1 336 1 365 1 23 1 93 1 94 2 13 5 188 3 112 5 209 1 42 1 180 4 278 1 241 1 279 2 
105 1 140 1 139 2 365 1 162 1 108 1 94 1 188 1 175 1 13 1 357 2 112 1 158 1 134 1 180 1 347 1 279 1 364 1 
105 1 162 1 23 1 94 1 13 1 188 1 112 1 65 1 41 1 120 1 180 1 290 1 279 2 
323 1 158 1 361 1 319 1 363 1 
280 1 323 2 337 2 204 1 220 1 61 1 206 1 167 1 74 1 158 1 305 1 52 1 191 1 66 1 286 2 119 1 319 1 361 2 363 2 
139 1 357 1 140 1 323 1 248 1 2 1 262 1 319 1 361 1 
52 1 119 1 319 1 
341 1 25 1 26 1 69 1 
325 1 31 1 338 1 341 1 25 1 4 1 69 1 
259 1 325 1 136 1 
106 2 325 3 338 1 91 1 301 1 355 1 96 1 341 1 25 1 4 3 31 1 69 1 
325 2 31 1 338 1 289 1 341 1 25 1 47 1 4 2 69 1 
171 1 325 1 371 1 338 1 355 1 221 1 341 1 4 1 15 1 31 1 234 1 
325 1 31 1 338 1 355 1 341 1 25 1 4 1 
325 1 31 1 338 1 355 1 25 2 4 1 69 1 
325 2 338 2 314 1 355 1 341 1 25 1 4 2 31 2 17 1 332 1 
325 3 371 1 338 1 355 1 25 1 47 2 341 2 4 3 29 1 31 1 84 1 240 1 69 1 
325 2 338 1 355 1 156 1 221 1 341 1 25 1 47 1 4 2 15 2 303 1 31 1 234 1 195 1 69 1 
325 4 71 1 371 1 338 2 355 1 25 1 47 2 341 2 4 4 31 2 84 1 289 1 69 1 
325 1 31 1 338 1 355 1 341 1 25 1 4 1 69 1 
106 1 325 4 371 1 91 1 338 1 301 1 25 2 47 2 341 3 4 4 31 1 84 1 348 1 69 2 
325 2 338 1 355 1 185 1 341 1 25 1 47 1 4 2 133 1 31 1 18 1 69 1 
106 2 325 3 338 1 91 2 301 1 355 1 341 1 25 1 4 3 101 1 31 1 69 1 
14 1 261 1 341 2 196 2 
325 1 31 1 275 1 338 1 355 1 4 1 
29 1 325 2 31 1 338 1 355 1 341 1 25 1 47 1 4 2 69 1 
113 1 
325 1 31 1 338 1 355 1 341 1 25 1 4 1 69 1 
106 1 325 3 338 1 355 1 47 1 25 1 341 1 4 3 29 1 31 1 69 1 
371 1 84 1 341 1 348 1 
341 1 25 1 

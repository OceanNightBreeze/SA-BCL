#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
59 1 106 9 60 1 108 2 132 1 363 2 4 6 134 2 66 1 224 1 22 5 225 1 349 4 180 1 75 1 183 2 208 1 77 1 13 1 123 2 241 1 295 3 262 1 81 1 146 1 126 2 56 2 170 9 
59 1 106 9 60 1 108 2 132 1 363 2 4 6 134 2 66 1 224 1 22 5 225 1 349 4 180 1 75 1 183 2 208 1 77 1 13 1 123 2 241 1 295 3 262 1 81 1 146 1 126 2 56 2 170 9 
59 1 106 10 60 1 108 2 132 1 363 2 4 7 134 2 66 1 224 1 22 6 225 1 349 5 180 1 75 1 183 2 208 1 77 1 13 1 123 2 241 1 295 4 262 1 81 1 146 1 126 2 56 2 170 10 
59 1 106 7 60 1 108 2 363 2 4 4 134 2 66 1 224 1 22 4 225 1 349 3 180 1 75 1 183 1 208 1 77 1 13 1 123 2 241 1 295 2 262 1 81 1 146 1 126 2 56 2 170 7 
183 2 75 1 59 1 106 4 60 1 108 1 132 1 77 1 363 1 4 3 123 1 295 1 22 3 126 1 349 2 56 1 180 1 170 4 
59 1 106 2 60 1 108 1 77 1 163 1 363 1 123 1 134 1 22 1 224 1 81 1 72 1 126 1 319 1 170 2 
59 1 106 3 60 1 77 1 4 1 123 2 241 1 134 1 295 1 22 2 126 2 349 1 170 3 
59 1 106 9 60 1 108 1 132 1 4 7 363 1 134 1 22 5 349 4 180 1 183 2 75 1 77 1 13 1 123 2 241 1 144 1 295 3 262 1 301 1 126 2 56 1 170 9 
59 1 106 9 60 1 108 1 132 1 4 7 363 1 134 1 22 5 349 4 180 1 183 2 75 1 77 1 13 1 123 2 241 1 144 1 295 3 262 1 301 1 126 2 56 1 170 9 
283 1 
232 1 300 2 361 1 
93 2 46 1 71 2 367 2 174 2 97 2 112 1 223 2 
171 1 1 1 173 2 19 1 174 2 221 1 112 1 223 2 93 3 46 1 71 2 367 2 206 1 73 1 28 1 97 3 181 1 209 1 210 1 51 1 101 1 52 1 14 1 332 1 212 1 297 1 16 2 334 1 336 1 337 2 104 1 338 1 302 2 36 1 307 2 380 1 381 1 
93 1 82 1 71 1 367 1 174 1 95 1 339 1 97 1 112 1 223 1 
99 1 10 1 133 1 119 1 110 1 361 1 223 1 20 1 93 1 266 1 114 1 97 1 339 1 87 1 
99 2 10 1 119 1 110 1 361 1 174 1 223 1 93 1 71 1 266 1 367 1 114 2 97 1 339 1 87 1 
99 1 117 1 57 1 114 1 322 1 
99 2 109 1 119 1 57 1 361 1 254 1 114 2 322 1 
99 1 57 1 114 1 
99 1 174 1 112 1 223 1 82 1 93 1 71 1 367 1 114 1 95 1 368 1 339 1 97 1 322 1 
361 1 
99 2 109 1 119 1 57 1 361 1 114 2 322 1 165 1 
99 5 100 2 275 1 109 1 119 1 249 1 361 1 188 1 331 1 201 1 21 1 155 1 213 2 335 2 57 2 245 1 304 1 114 5 322 2 
49 1 210 1 52 1 237 1 174 1 30 1 221 1 223 1 212 1 297 1 93 2 337 1 104 1 367 1 338 1 302 1 36 1 97 2 380 1 307 1 
283 1 
61 1 174 1 223 2 346 1 93 2 71 1 46 2 367 1 97 2 
94 1 47 1 30 1 
285 1 210 1 52 1 221 1 212 1 93 1 297 1 46 1 337 1 104 1 302 1 338 1 36 1 97 1 380 1 307 1 
49 1 61 1 133 1 237 2 174 4 278 1 239 1 223 5 93 5 71 1 46 1 367 4 316 1 97 5 
93 2 367 2 174 2 95 1 339 1 97 2 344 1 223 2 
93 3 71 1 46 1 367 3 237 1 174 3 97 3 223 3 
93 1 367 1 174 1 95 1 339 1 97 1 223 1 
346 1 93 1 71 1 61 1 367 1 174 1 339 1 97 1 223 1 
171 1 173 2 61 1 110 1 174 3 221 1 112 1 223 3 44 1 93 4 46 1 71 2 367 3 206 1 318 1 114 1 28 1 97 4 181 1 99 1 10 1 49 1 209 1 210 1 51 1 101 1 52 1 237 1 14 1 212 1 297 1 266 1 16 1 334 1 104 1 337 1 338 1 302 1 36 1 339 1 380 1 307 1 87 1 381 1 
93 2 46 1 133 1 367 1 316 1 174 1 237 1 97 2 223 2 
99 1 10 1 49 1 61 1 110 1 361 1 237 2 174 3 277 1 223 3 93 3 71 1 266 1 367 3 318 1 114 1 339 1 97 3 87 1 
61 1 237 1 174 2 30 1 223 2 93 2 94 1 71 1 367 2 97 2 
210 1 52 1 221 1 212 1 93 1 297 1 46 1 337 1 104 1 302 1 338 1 36 1 97 1 380 1 307 1 
358 1 210 1 52 1 212 1 314 1 93 1 297 1 46 1 337 1 302 1 338 1 36 1 97 1 380 1 307 1 
171 1 1 2 38 1 173 2 89 1 111 1 176 1 94 2 47 2 206 1 139 1 181 1 256 1 209 1 51 1 101 2 30 2 334 1 16 4 269 1 150 1 34 1 86 1 341 1 
93 1 367 1 110 1 174 1 339 1 97 1 223 1 344 1 
218 1 379 1 
218 1 379 1 
326 1 373 1 
326 1 373 1 
326 1 373 1 
2 1 218 1 379 1 
2 1 218 1 379 1 
6 1 218 1 379 1 
326 1 373 1 168 1 218 2 379 2 365 1 
2 1 218 1 379 1 
137 1 218 1 379 1 
137 1 218 1 379 1 
137 1 218 1 379 1 
0 1 174 2 42 1 218 1 223 2 175 1 93 2 46 1 6 1 367 2 158 1 114 1 282 1 97 2 321 1 99 1 207 1 141 1 327 1 161 1 292 1 127 1 303 1 379 1 
99 2 207 3 141 2 327 2 199 2 161 1 361 1 218 2 42 2 292 2 154 1 222 1 365 1 166 1 192 1 114 2 379 2 169 1 195 1 
108 1 56 1 363 1 
108 1 163 1 363 1 
267 1 56 2 205 1 163 1 363 3 214 1 
92 1 267 1 56 1 163 1 363 2 214 1 
267 1 56 1 163 1 363 2 214 2 
274 1 0 1 109 1 361 2 175 1 176 1 67 1 252 2 114 5 322 4 232 1 116 2 100 1 99 5 256 1 287 2 258 1 119 1 259 1 188 2 261 1 213 1 300 3 335 1 269 1 57 1 304 1 245 3 303 1 34 1 247 1 248 1 
109 1 361 5 176 3 67 2 155 1 179 1 114 9 228 1 322 7 232 3 116 6 99 9 100 2 117 5 256 3 287 6 119 1 188 6 143 5 261 3 294 1 299 1 213 2 300 9 335 2 32 1 269 3 57 6 303 4 304 1 245 8 34 3 271 1 247 1 248 2 
274 1 361 3 67 1 176 1 155 1 252 1 114 3 322 2 232 2 100 1 99 3 116 2 256 1 287 2 119 1 259 1 188 2 261 1 213 1 300 4 335 1 269 1 245 3 303 1 34 1 248 1 
274 1 361 4 67 1 176 2 155 1 179 1 252 2 114 4 322 3 232 3 116 4 100 1 99 4 256 2 287 4 119 1 259 1 188 4 261 2 299 1 213 1 300 7 335 1 269 2 245 5 303 2 34 2 271 1 248 1 
283 1 
36 1 5 1 
107 1 
210 1 338 1 36 1 
36 1 130 1 
338 1 36 1 
255 1 151 1 210 1 338 1 36 3 96 2 
184 1 1 4 217 1 185 1 234 2 89 2 101 3 219 1 242 1 135 1 176 1 24 1 103 1 16 7 148 1 34 1 86 3 
184 1 1 4 217 1 185 1 234 2 89 2 101 3 219 1 242 1 135 1 176 1 24 1 103 1 16 7 148 1 34 1 86 3 
58 1 184 1 1 4 217 1 185 1 234 2 89 2 101 3 219 1 242 1 135 1 176 1 24 1 103 1 16 7 148 1 34 1 86 3 
217 1 1 16 173 2 89 5 362 1 219 2 135 1 176 4 347 4 24 1 206 1 138 1 74 1 181 1 286 3 184 2 234 3 185 5 186 1 256 3 51 1 101 15 122 1 261 3 242 2 103 1 16 31 334 1 269 3 148 2 193 1 33 1 34 4 86 10 
184 1 1 5 185 1 234 2 173 4 89 3 51 2 187 1 101 4 219 1 43 1 135 1 242 1 176 1 24 1 103 1 16 9 334 2 148 1 206 2 33 1 34 1 86 4 181 2 
356 1 59 1 106 2 60 1 108 1 359 1 4 1 363 2 134 1 22 1 113 1 205 1 230 1 231 1 77 1 118 1 52 1 163 1 123 1 297 1 337 1 377 1 126 1 56 1 378 1 302 1 35 1 246 1 307 1 170 2 
356 1 59 1 106 3 60 1 108 1 359 1 4 2 363 2 134 1 22 1 113 1 205 1 9 1 230 1 118 1 52 1 163 1 260 1 123 1 297 1 337 1 31 1 377 1 126 1 56 1 378 1 302 1 246 1 307 1 170 3 
59 1 106 2 60 1 359 1 108 1 4 2 363 2 134 1 22 1 113 1 205 1 9 1 230 1 52 1 163 1 297 1 337 1 31 1 377 1 378 1 56 1 302 1 246 1 307 1 170 2 
106 1 134 2 345 1 45 1 369 1 52 1 260 1 240 1 123 1 297 1 376 1 337 1 377 2 126 1 378 2 302 1 338 1 36 1 246 2 307 1 380 1 131 1 170 1 
356 1 106 1 108 1 359 1 363 2 134 1 113 1 205 1 9 1 230 1 231 1 77 1 118 1 52 1 163 1 123 1 297 1 337 1 377 1 126 1 56 1 378 1 302 1 246 1 307 1 170 1 
121 1 
40 2 133 1 41 1 343 2 345 1 223 1 91 2 93 1 348 1 97 1 182 1 98 1 232 2 99 5 100 1 10 1 52 1 188 2 240 1 290 1 297 1 300 2 147 2 57 6 302 2 245 2 304 1 306 1 307 2 197 2 109 3 110 1 361 2 313 1 20 1 251 4 67 1 69 1 317 1 114 5 115 2 119 1 213 1 263 2 264 1 266 1 335 1 337 2 167 1 338 1 36 1 85 1 339 1 380 2 87 1 
98 1 197 1 99 3 10 1 109 1 133 1 110 1 290 1 223 1 165 1 251 2 20 1 69 1 93 1 264 1 266 1 57 2 114 3 339 1 97 1 306 1 87 1 
98 1 99 3 10 1 109 1 40 1 133 1 119 1 110 1 361 1 290 1 223 1 165 1 251 3 20 1 69 1 93 1 264 1 266 1 57 1 114 3 339 1 97 1 306 1 87 1 
197 1 109 1 40 1 133 1 110 1 361 1 343 1 223 1 20 1 251 3 93 1 69 1 114 3 97 1 98 1 99 3 10 1 119 1 290 1 165 1 266 1 264 1 57 2 339 1 306 1 87 1 
40 4 133 1 343 4 279 1 223 1 91 2 93 1 97 1 98 1 99 5 100 1 232 2 10 1 188 1 290 1 147 2 57 7 304 1 245 1 306 1 197 4 109 3 110 1 361 5 313 1 251 6 20 1 69 1 26 1 27 1 114 5 115 2 119 5 165 1 213 1 266 1 264 1 375 1 265 1 263 2 335 1 85 1 339 1 87 1 
40 2 133 1 41 1 343 2 223 1 91 2 93 1 97 1 98 1 99 4 100 1 232 2 10 1 188 1 290 1 300 2 147 2 57 4 304 1 245 1 306 1 197 2 109 2 110 1 361 2 313 1 251 4 20 1 69 1 114 4 115 2 119 1 213 1 266 1 264 1 263 2 335 1 85 1 339 1 87 1 
197 2 40 2 109 2 133 1 110 1 361 1 343 2 279 1 313 1 223 1 91 2 20 1 251 4 93 1 69 1 114 4 97 1 115 2 98 1 232 2 99 4 100 1 10 1 119 1 188 1 290 1 213 1 263 2 266 1 264 1 375 1 265 1 147 2 335 1 57 4 245 1 304 1 85 1 339 1 306 1 87 1 
197 2 40 2 109 2 133 1 110 1 361 1 343 2 279 1 313 1 223 1 91 2 20 1 251 4 93 1 69 1 114 4 97 1 115 2 98 1 232 2 99 4 100 1 10 1 119 1 188 1 290 1 213 1 263 2 266 1 264 1 375 1 265 1 147 2 335 1 57 4 245 1 304 1 85 1 339 1 306 1 87 1 
197 2 40 2 109 2 133 1 110 1 200 1 361 1 343 2 279 1 280 1 223 1 91 2 20 1 251 4 366 2 93 1 69 1 204 2 114 4 97 1 98 1 99 4 100 1 140 1 10 1 119 1 188 1 290 1 213 1 300 2 263 2 266 1 264 1 335 1 57 4 245 1 304 1 85 1 339 1 306 1 87 1 
197 3 109 2 40 3 133 1 110 1 361 1 279 1 343 3 313 1 223 1 91 2 20 1 251 5 93 1 69 1 26 1 114 4 97 1 115 2 98 1 232 2 100 1 99 4 10 1 119 1 188 1 290 1 213 1 263 2 265 1 266 1 264 1 375 1 147 2 335 1 57 5 245 1 304 1 85 1 339 1 306 1 87 1 
197 3 109 2 40 3 133 1 110 1 361 1 279 1 343 3 313 1 223 1 91 2 20 1 251 5 93 1 69 1 26 1 114 4 97 1 115 2 98 1 232 2 100 1 99 4 10 1 119 1 188 1 290 1 213 1 263 2 265 1 266 1 264 1 375 1 147 2 335 1 57 5 245 1 304 1 85 1 339 1 306 1 87 1 
40 2 133 1 41 1 343 2 223 1 91 2 93 1 97 1 98 1 99 4 100 1 140 1 10 1 188 1 290 1 300 2 57 4 304 1 245 1 306 1 197 2 109 2 110 1 361 1 251 4 20 1 366 2 69 1 204 2 114 4 119 1 213 1 266 1 264 1 263 2 335 1 85 1 339 1 87 1 
171 1 173 2 334 1 209 1 51 1 206 1 150 1 283 1 181 1 
171 2 1 8 173 4 89 1 176 2 347 3 46 1 94 4 47 11 206 2 73 1 281 1 138 1 181 2 286 3 185 1 76 1 209 1 256 1 51 2 101 6 14 1 30 11 261 2 374 1 334 2 16 14 269 2 193 1 34 1 86 2 272 1 196 1 
171 1 18 1 1 1 173 2 174 1 221 1 223 1 93 2 46 1 94 1 367 1 206 1 73 1 97 2 181 1 285 1 76 1 49 1 209 1 210 1 51 1 52 1 101 1 238 1 237 1 14 1 15 1 212 1 297 1 104 1 337 1 334 1 16 2 338 1 302 1 36 1 307 1 380 1 
171 3 1 10 173 6 89 4 174 1 219 1 221 2 223 1 135 1 176 3 93 3 46 2 94 7 226 2 47 7 97 3 9 1 181 3 234 1 185 4 49 1 51 3 101 10 52 2 237 1 14 1 297 2 145 2 103 1 16 20 104 2 302 3 148 1 354 1 307 3 152 2 312 1 24 1 367 1 206 3 73 1 28 2 159 2 76 1 209 3 256 2 210 2 164 1 30 7 261 2 212 2 337 3 334 3 269 2 338 2 34 3 36 2 86 8 380 1 
171 2 357 1 1 1 173 4 276 1 174 1 223 1 345 1 93 1 367 1 206 2 73 1 97 1 9 1 229 1 181 2 233 1 209 2 51 2 52 2 101 1 237 1 14 1 240 1 293 1 298 1 297 2 337 7 334 2 16 2 336 2 190 1 302 8 338 2 150 1 35 1 36 3 307 8 380 2 
171 1 1 1 173 2 61 1 89 1 174 1 223 1 176 1 93 1 94 1 71 1 47 1 367 1 206 1 97 1 181 1 76 1 209 1 256 1 51 1 101 2 30 1 261 1 334 1 16 3 269 1 149 1 34 1 86 1 
171 1 1 2 185 1 173 2 209 1 51 1 30 1 176 1 94 1 47 1 16 2 334 1 269 1 150 1 206 1 86 1 139 1 181 1 
171 1 173 2 209 1 256 1 89 1 51 1 101 2 30 1 94 1 47 1 16 2 334 1 150 1 206 1 34 1 86 1 181 1 341 1 
171 1 1 2 185 1 173 2 256 1 209 1 89 1 51 1 101 2 30 2 261 1 176 1 94 2 47 2 16 4 334 1 269 1 150 1 206 1 34 1 86 2 181 1 
171 1 1 2 185 1 173 2 209 1 51 1 30 1 176 1 94 1 47 1 16 2 334 1 190 1 269 1 206 1 86 1 139 1 181 1 
171 1 173 2 209 1 256 1 89 1 51 1 101 2 30 1 94 1 47 1 16 2 334 1 190 1 206 1 34 1 86 1 181 1 341 1 
171 1 1 2 185 1 173 2 256 1 209 1 89 1 51 1 101 2 30 2 261 1 176 1 94 2 47 2 16 4 334 1 190 1 269 1 206 1 34 1 86 2 181 1 
171 1 1 2 185 1 173 2 256 1 209 1 89 1 51 1 101 2 30 2 261 1 176 1 94 2 47 2 334 1 16 4 269 1 206 1 34 1 86 2 181 1 
171 1 1 1 173 2 221 1 93 1 46 1 206 1 73 1 28 1 97 1 181 1 209 1 210 1 51 1 52 1 101 1 14 1 212 1 297 1 16 2 104 1 337 1 334 1 338 1 302 1 36 1 307 1 380 1 
171 1 1 1 358 1 173 2 314 1 93 1 46 1 206 1 73 1 97 1 181 1 209 1 210 1 51 1 52 1 101 1 14 1 212 1 297 1 16 2 337 1 334 1 338 1 302 1 36 1 37 1 307 1 380 1 
171 1 1 2 185 1 76 1 173 2 256 1 209 1 89 1 51 1 101 2 30 2 261 1 176 1 94 2 47 2 16 4 334 1 269 1 206 1 34 1 86 2 181 1 
171 1 1 2 173 2 89 1 152 1 221 1 176 1 93 1 94 2 47 2 206 1 28 1 97 1 181 1 185 1 256 1 209 1 210 1 51 1 101 2 52 1 30 2 261 1 212 1 297 1 16 4 104 1 337 1 334 1 269 1 302 1 338 1 34 1 35 1 36 1 86 2 307 1 
171 1 1 2 173 2 61 1 62 1 174 1 223 1 176 1 93 1 71 1 94 1 47 1 367 1 206 1 97 1 181 1 185 1 76 1 256 1 209 1 51 1 101 1 30 1 261 1 334 1 16 3 269 1 34 1 86 1 
1 20 173 6 89 4 342 1 219 1 135 1 176 5 23 1 347 4 24 1 156 1 206 3 350 4 138 1 181 3 286 3 234 1 325 1 185 4 256 4 288 1 160 2 51 3 187 1 162 1 101 21 289 1 261 4 353 1 244 1 125 1 103 1 334 3 16 41 269 4 148 1 33 1 193 3 17 1 34 5 194 1 86 8 215 1 
1 20 173 8 89 4 342 1 219 1 135 1 176 5 23 1 347 4 24 1 156 1 206 4 350 4 138 1 181 4 286 3 234 1 325 1 185 3 256 3 288 1 160 2 51 4 187 1 162 1 101 18 289 1 261 4 353 1 244 1 125 1 103 1 334 4 16 38 269 4 148 1 33 2 193 3 17 1 34 4 194 1 86 7 215 1 
1 27 173 4 89 7 342 1 219 1 135 1 176 8 347 4 24 1 206 2 350 4 138 2 181 2 286 4 234 1 325 1 185 7 256 7 288 1 160 1 51 2 187 1 162 1 101 25 289 1 261 7 353 1 244 1 125 1 103 1 334 2 16 52 269 7 148 1 33 1 193 2 17 1 34 8 194 1 86 14 215 1 196 2 
1 9 173 4 89 3 342 1 176 3 347 2 156 1 206 2 350 2 138 1 181 2 286 1 185 3 256 3 160 1 51 2 187 1 162 1 101 10 261 3 189 1 244 1 334 2 16 19 269 3 193 1 34 3 194 1 86 6 215 2 
1 14 173 6 89 2 342 1 176 3 347 2 206 3 350 4 181 3 286 2 185 2 325 1 256 2 288 1 160 2 51 3 187 1 101 12 162 1 289 1 261 3 353 1 244 1 125 1 334 3 16 26 269 3 33 2 193 2 34 2 17 1 194 2 86 4 215 1 
141 1 327 1 42 1 218 1 379 1 364 1 292 1 169 1 222 1 365 1 
6 1 127 1 
136 1 83 1 141 1 310 1 327 1 42 1 218 1 379 1 292 1 
54 1 2 1 
137 1 168 1 220 1 
99 1 207 2 141 1 327 1 199 1 161 1 361 1 218 1 42 1 292 1 154 1 222 1 365 1 166 1 114 1 379 1 169 1 195 1 
99 1 207 2 141 1 327 1 199 1 161 1 361 1 218 1 42 1 292 1 154 1 222 1 365 1 166 1 114 1 379 1 169 1 195 1 
99 1 207 2 141 1 327 1 199 1 161 1 361 1 218 1 42 1 292 1 154 1 222 1 365 1 166 1 114 1 379 1 169 1 195 1 
54 1 2 1 168 1 
54 1 2 1 168 1 
137 1 220 1 
137 1 168 1 220 1 
158 1 282 1 
0 1 199 1 174 2 42 1 218 1 154 1 223 2 175 1 93 2 46 1 6 1 367 2 158 1 114 1 282 1 97 2 321 1 322 1 99 1 207 1 141 1 79 1 327 1 292 1 127 1 303 1 379 1 
171 1 1 1 173 2 203 1 223 2 93 2 206 1 73 1 97 2 181 1 233 1 76 1 209 1 352 1 51 1 52 1 101 1 14 1 293 1 297 1 334 1 16 2 336 2 337 2 338 1 302 2 128 1 36 1 129 1 307 2 355 1 
108 1 50 1 90 1 118 1 163 1 52 1 363 2 297 1 337 2 113 1 56 1 205 1 302 2 35 1 246 1 48 1 9 1 307 2 230 1 
324 1 108 1 50 1 118 1 163 1 52 1 363 2 297 1 337 1 113 1 56 1 205 1 302 1 246 1 9 1 307 1 230 1 
90 1 52 1 240 1 345 1 297 1 337 1 268 1 338 1 302 1 36 1 246 1 380 1 307 1 131 1 
108 1 50 1 90 1 118 1 163 1 52 1 363 2 297 1 337 1 113 1 56 1 205 1 302 1 246 1 48 1 9 1 307 1 230 1 
78 1 
283 1 
99 1 100 1 232 1 109 1 119 1 361 2 188 1 313 1 213 1 300 1 147 1 335 1 57 1 304 1 245 1 114 1 115 1 
3 2 5 3 176 2 177 1 96 2 351 1 100 4 99 5 232 6 236 1 287 6 142 2 52 3 188 8 102 2 297 4 300 12 302 3 57 5 245 9 304 4 307 3 309 2 109 3 249 1 361 8 250 2 21 1 67 2 114 5 159 2 116 6 370 2 255 1 256 2 210 3 119 2 29 1 120 2 330 1 261 2 213 4 335 4 337 3 167 1 269 2 338 3 35 1 36 10 34 2 130 2 380 1 273 2 87 2 
109 1 361 5 3 2 67 1 176 2 347 1 114 1 99 1 116 5 100 2 232 3 286 1 325 1 371 1 287 5 256 2 288 1 119 2 188 5 289 1 261 2 102 1 353 1 213 2 300 6 335 2 167 1 269 2 57 1 245 8 304 2 193 1 84 1 17 1 34 2 
3 2 174 1 219 1 112 1 223 1 176 2 93 1 71 1 367 1 114 1 95 1 368 1 97 1 100 1 99 1 235 1 188 2 102 1 213 1 82 1 265 1 335 1 103 1 148 1 304 1 245 2 34 1 339 1 
100 1 249 1 119 1 361 1 188 1 21 1 213 1 335 1 304 1 245 1 
116 5 232 5 287 5 256 2 361 5 3 2 188 5 261 2 102 1 176 2 300 10 269 2 245 5 34 2 159 1 
99 1 109 1 119 1 57 1 361 1 114 1 
109 2 64 1 345 1 67 2 155 1 348 1 114 3 351 1 182 1 100 2 99 3 329 1 52 1 330 2 188 2 240 1 297 1 213 2 335 2 337 4 167 2 338 1 302 4 57 4 304 1 245 2 36 1 307 4 380 2 
171 1 173 2 174 2 221 1 112 1 223 2 93 3 46 1 71 2 367 2 206 1 28 1 97 3 181 1 209 1 210 1 51 1 101 1 52 1 14 1 212 1 297 1 16 1 337 1 104 1 334 1 302 1 338 1 36 1 307 1 380 1 381 1 
232 2 116 2 100 1 234 1 287 2 119 2 361 4 188 2 67 1 213 1 300 4 335 1 167 1 304 1 245 1 
327 1 328 1 42 1 
327 1 328 1 42 1 
88 1 327 1 282 1 42 1 169 1 
327 1 328 1 42 1 
70 1 327 1 42 1 
70 1 327 1 42 1 
70 1 327 1 42 1 
327 1 42 1 
218 1 379 1 
1 4 173 2 89 2 219 1 135 1 176 1 347 1 24 1 206 1 181 1 286 1 234 1 325 1 51 1 187 1 101 4 16 8 334 1 103 1 148 1 193 1 34 1 86 2 
1 6 173 4 89 2 219 1 135 1 176 2 347 2 24 1 206 2 138 1 181 2 286 1 234 1 325 1 185 1 51 2 187 1 101 5 261 1 124 1 103 1 16 11 334 2 269 1 148 1 193 1 34 1 86 3 
1 9 173 6 89 3 219 1 135 1 176 3 347 1 24 1 206 3 181 3 286 1 234 1 185 1 325 1 256 2 288 1 51 3 187 1 101 10 289 1 261 2 353 1 124 1 103 1 16 19 334 3 269 2 148 1 193 1 33 1 17 1 34 3 86 4 
1 10 173 6 89 3 219 1 135 1 176 3 347 1 24 1 206 3 181 3 286 1 234 1 185 2 325 1 256 1 288 1 51 3 187 1 101 7 289 1 261 2 353 1 124 1 103 1 16 17 334 3 269 2 148 1 33 1 193 1 17 1 34 2 86 5 
1 4 173 2 89 2 219 1 135 1 176 1 347 1 24 1 206 1 181 1 286 1 234 1 325 1 51 1 187 1 101 4 16 8 334 1 103 1 148 1 193 1 34 1 86 2 
1 6 173 2 89 1 176 2 347 1 206 1 181 1 286 1 185 1 325 1 256 2 288 1 51 1 187 1 101 6 289 1 261 2 353 1 16 12 334 1 269 2 193 1 17 1 34 2 86 2 
1 10 173 8 89 3 219 1 135 1 176 3 347 1 24 1 206 4 181 4 286 1 234 1 185 2 325 1 256 1 288 1 51 4 187 1 101 8 289 1 261 2 353 1 124 1 103 1 16 18 334 4 269 2 148 1 193 1 33 2 17 1 34 2 86 5 
1 9 173 8 89 3 176 3 347 1 156 1 206 4 181 4 286 1 185 3 325 1 256 2 288 1 51 4 187 1 101 7 289 1 261 3 353 1 16 16 334 4 269 3 193 1 33 2 17 1 34 2 86 6 
1 3 185 3 89 3 101 4 219 3 135 1 176 1 24 2 16 7 103 1 148 3 34 1 86 6 
1 10 173 8 89 3 219 1 135 1 176 3 347 1 24 1 156 1 206 4 181 4 286 1 234 1 185 1 325 1 256 1 288 1 51 4 187 1 101 8 289 1 261 2 353 1 103 1 16 18 334 4 269 2 148 1 193 1 33 2 17 1 34 2 86 4 
1 4 234 1 185 1 173 4 89 2 51 2 101 4 219 1 135 1 176 1 24 1 103 1 16 8 334 2 206 2 148 1 33 1 34 1 86 3 181 2 
283 1 
1 2 185 1 173 2 256 1 89 1 51 1 101 2 261 1 176 1 124 1 334 1 16 4 269 1 206 1 34 1 86 2 181 1 
286 1 1 3 185 1 256 1 89 1 101 4 261 1 176 1 347 2 16 7 269 1 193 1 34 1 138 1 86 2 
1 11 173 4 89 5 219 2 135 1 176 3 347 2 24 1 206 2 138 1 181 2 284 1 286 2 234 1 185 4 256 2 51 2 101 12 261 2 103 1 16 23 334 2 269 2 148 2 33 2 34 3 86 9 272 1 196 1 
347 1 16 1 101 1 
1 1 286 1 16 1 
1 3 185 1 173 2 256 1 89 2 51 1 101 3 261 1 176 1 124 1 334 1 16 6 269 1 206 1 34 1 159 1 86 3 181 1 
1 6 173 2 89 1 176 2 347 1 206 1 181 1 286 1 185 1 325 1 256 2 288 1 51 1 187 1 101 6 289 1 261 2 353 1 16 12 334 1 269 2 193 1 17 1 34 2 86 2 
1 3 185 1 89 1 101 3 219 1 176 1 103 1 16 6 148 1 34 1 86 2 
284 1 1 1 185 1 173 2 89 1 51 1 101 2 219 1 135 1 24 1 16 3 334 1 148 1 206 1 33 1 86 2 181 1 
1 5 235 1 185 2 173 2 89 3 51 1 187 1 101 5 219 2 176 2 334 1 16 10 103 1 206 1 148 2 34 2 86 5 181 1 
1 2 185 1 173 2 51 1 187 1 176 1 334 1 16 2 269 1 206 1 86 1 181 1 
1 2 185 1 173 2 256 1 89 1 51 1 187 1 101 2 261 1 176 1 334 1 16 4 269 1 206 1 34 1 86 2 181 1 
284 1 1 1 185 1 173 6 89 1 51 3 187 1 101 2 219 1 16 3 334 3 156 1 206 3 148 1 33 1 86 2 181 3 
1 16 173 10 89 7 362 1 219 3 135 1 176 5 347 4 24 1 156 1 206 5 138 1 74 1 181 5 284 1 286 3 234 1 185 5 186 1 256 3 51 5 187 1 101 18 261 3 124 1 103 2 334 5 16 34 269 3 148 3 33 2 193 1 34 5 86 12 
308 1 93 1 46 1 133 1 316 1 97 1 223 1 
308 1 198 1 133 1 223 1 333 1 178 1 243 1 93 1 46 1 270 1 316 1 97 1 
337 1 302 1 307 1 380 1 283 1 
210 1 52 1 237 1 174 1 221 1 223 1 212 1 297 1 93 2 46 1 337 1 367 1 338 1 302 1 36 1 97 2 380 1 307 1 
10 1 210 2 110 1 52 1 237 1 174 2 330 1 250 1 221 1 223 2 212 1 297 1 93 2 46 1 337 1 367 1 338 2 302 1 36 3 130 1 339 1 97 2 307 1 
110 1 174 2 250 1 223 2 314 1 93 2 46 1 367 1 253 1 97 2 10 1 210 2 52 1 330 1 237 1 212 1 297 1 337 2 302 2 338 2 36 3 130 1 339 1 307 2 
172 1 361 1 250 1 5 1 68 1 253 1 114 2 96 1 99 2 210 1 119 1 52 1 330 1 297 1 337 3 57 1 302 3 338 1 36 4 130 1 307 3 380 1 87 1 
99 2 210 1 119 1 142 1 361 1 52 1 330 1 250 1 5 1 297 1 337 3 253 1 338 1 302 3 57 1 114 2 36 4 130 1 96 1 380 1 307 3 87 1 
297 1 298 1 337 1 302 1 52 1 307 1 
233 1 357 1 255 1 276 1 210 1 311 1 52 2 153 1 298 1 297 3 336 1 337 6 302 7 338 2 35 1 36 3 340 1 9 1 229 1 380 2 307 7 
171 2 1 3 173 4 89 2 174 1 219 1 221 1 223 1 135 1 176 1 93 2 94 1 46 2 47 1 97 2 181 2 234 1 51 2 52 1 101 3 237 1 297 1 145 1 104 1 103 1 16 6 302 1 148 1 307 1 152 1 203 1 24 1 367 1 206 2 28 1 76 1 209 2 210 1 30 1 212 1 337 1 334 2 338 1 35 1 36 1 34 1 86 2 
309 1 109 1 249 1 361 1 5 1 21 1 114 3 96 1 351 1 322 1 100 2 99 3 370 1 119 1 142 1 188 1 213 2 337 1 335 2 302 1 57 2 245 1 304 2 36 2 380 1 307 1 273 1 87 1 
255 1 210 1 52 1 177 1 298 1 297 2 337 2 302 2 338 1 35 1 36 2 96 1 307 2 
52 1 291 1 240 1 345 1 297 1 337 4 253 1 302 4 338 1 35 1 36 1 380 1 307 4 
210 1 311 1 164 1 52 1 330 1 80 1 211 1 297 2 337 2 302 2 338 1 36 1 340 1 307 2 
297 1 108 1 337 1 302 1 163 1 52 1 363 1 307 1 380 1 230 1 
233 1 352 1 52 1 297 1 337 2 302 2 338 1 35 1 36 1 307 2 9 1 
357 1 233 1 52 2 330 1 291 1 240 1 345 1 297 2 337 4 302 5 338 2 35 1 36 3 380 1 307 5 229 1 
233 1 52 2 330 1 291 1 240 1 345 1 297 2 337 4 7 1 302 5 338 2 35 1 36 3 380 1 307 5 229 1 
210 1 52 1 237 1 174 1 223 1 212 1 314 1 297 1 93 2 46 1 337 1 367 1 338 1 302 1 36 1 97 2 380 1 307 1 
255 1 210 1 311 1 52 1 330 1 153 1 297 2 337 1 302 1 338 1 36 1 340 1 307 1 
46 1 11 1 305 1 320 1 202 1 
99 2 10 1 11 2 360 1 119 1 110 1 361 1 202 1 65 1 46 1 266 1 318 1 114 2 8 1 305 2 320 2 339 1 322 1 87 1 
202 1 223 1 93 1 128 1 305 1 129 1 320 1 97 1 355 1 
360 1 8 1 202 1 
283 1 
22 1 59 1 106 1 60 1 126 1 123 1 170 1 
106 1 378 1 134 1 
106 3 59 1 60 1 77 1 53 1 63 1 123 1 22 1 224 2 126 1 191 1 170 3 
22 1 183 1 59 1 106 2 60 1 126 1 4 1 123 1 170 2 
75 1 106 1 108 1 77 1 363 1 123 1 22 1 126 1 349 1 56 1 170 1 
22 1 59 1 106 1 126 1 77 1 123 1 170 1 
59 2 106 1 60 1 126 1 77 1 123 1 170 1 
59 1 106 2 77 1 372 1 123 2 22 1 157 1 126 2 227 1 170 2 
59 1 106 3 60 1 77 1 13 1 4 2 123 1 262 1 295 1 22 2 126 1 349 1 170 3 
59 1 106 2 60 1 108 1 77 1 163 1 363 2 4 1 123 1 22 1 126 1 56 1 205 1 170 2 323 1 
183 1 59 1 106 4 60 1 77 1 132 1 4 2 123 2 295 1 22 2 126 2 349 1 170 4 
22 1 59 1 106 1 60 1 126 1 77 1 123 1 170 1 
59 2 106 4 60 2 63 1 4 2 123 1 295 1 224 1 22 3 315 1 126 1 191 1 349 1 170 4 
59 1 106 2 39 1 105 1 60 1 77 1 4 1 123 1 22 1 126 1 301 1 170 2 
106 3 59 1 60 1 77 1 12 1 63 1 123 1 22 1 224 2 126 1 191 2 170 3 
216 1 22 2 55 2 257 1 
296 1 106 1 126 1 77 1 123 1 170 1 
262 1 22 1 59 1 106 2 60 1 126 1 77 1 4 1 123 1 170 2 
25 1 
22 1 59 1 106 1 60 1 126 1 77 1 123 1 170 1 
262 1 22 1 224 1 59 1 106 3 60 1 126 1 77 1 4 1 123 1 170 3 
295 1 22 1 315 1 349 1 
22 1 59 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
214 2 359 2 217 1 47 1 27 9 263 2 342 2 298 2 172 3 119 5 346 1 246 1 81 4 351 1 230 1 374 1 181 1 207 2 305 1 309 1 328 1 182 6 83 9 329 1 285 2 286 1 73 1 334 1 
214 2 359 2 217 1 47 1 27 9 263 2 342 2 298 2 172 3 119 5 346 1 246 1 81 4 351 1 230 1 374 1 181 1 207 2 305 1 309 1 328 1 182 6 83 9 329 1 285 2 286 1 73 1 334 1 
214 2 359 2 217 1 47 1 27 10 263 2 342 2 298 2 172 4 119 6 346 1 246 1 81 5 351 1 230 1 374 1 181 1 207 2 305 1 309 1 328 1 182 7 83 10 329 1 285 2 286 1 73 1 334 1 
214 2 359 1 217 1 47 1 27 7 263 2 342 2 298 2 172 2 119 4 346 1 246 1 81 3 351 1 374 1 181 1 207 2 305 1 309 1 328 1 182 4 83 7 329 1 285 2 286 1 73 1 334 1 
214 1 359 2 81 2 351 1 230 1 263 1 27 4 374 1 342 1 182 3 309 1 298 1 83 4 172 1 119 3 285 1 246 1 73 1 
47 1 351 1 136 1 27 2 263 1 374 1 207 1 342 1 328 1 298 1 355 1 83 2 119 1 285 1 246 1 202 1 
81 1 351 1 27 3 374 1 207 1 342 2 182 1 298 2 83 3 329 1 172 1 119 2 246 1 
214 1 359 2 27 9 263 1 342 2 298 2 172 3 119 5 346 1 246 1 81 4 351 1 124 1 230 1 374 1 207 1 38 1 182 7 309 1 329 1 83 9 285 1 73 1 334 1 
214 1 359 2 27 9 263 1 342 2 298 2 172 3 119 5 346 1 246 1 81 4 351 1 124 1 230 1 374 1 207 1 38 1 182 7 309 1 329 1 83 9 285 1 73 1 334 1 
288 1 243 1 337 1 
46 1 281 2 337 1 
236 2 242 1 183 1 94 2 125 2 317 2 29 2 76 2 
24 1 362 1 187 1 291 1 26 1 164 1 267 1 317 2 50 2 29 3 76 2 113 1 242 1 77 1 94 2 200 1 120 1 98 1 63 1 347 1 323 1 277 1 125 3 15 2 325 1 153 1 68 1 236 2 377 1 183 1 69 1 108 1 44 1 211 2 315 2 260 1 186 2 
236 1 242 1 363 1 162 1 94 1 125 1 317 1 369 1 29 1 76 1 
288 1 337 1 125 1 16 1 233 1 29 1 369 1 196 1 354 1 253 1 94 1 8 1 322 1 85 1 
288 1 337 1 125 1 16 1 317 1 233 1 29 1 369 1 196 2 76 1 236 1 253 1 8 2 94 1 322 1 
4 1 8 1 248 1 196 1 201 1 
288 1 209 1 337 1 8 2 248 1 196 2 201 1 375 1 
8 1 248 1 196 1 
188 1 363 1 162 1 125 1 317 1 369 1 196 1 29 1 76 1 242 1 236 1 8 1 94 1 201 1 
337 1 
288 1 37 1 209 1 337 1 8 2 248 1 196 2 201 1 
288 1 160 2 290 1 152 2 337 1 87 1 248 2 373 1 196 5 376 1 90 1 18 2 343 1 209 1 8 5 118 1 177 1 201 2 121 1 
183 1 243 1 
352 1 125 2 317 1 29 2 76 1 236 1 222 1 183 2 94 2 
53 1 296 1 141 1 
63 1 347 1 323 1 187 1 125 1 15 1 325 1 50 1 29 1 68 1 377 1 183 1 31 1 108 1 315 1 260 1 
236 3 183 1 94 3 125 3 317 1 17 1 29 3 76 3 
236 1 162 1 94 1 125 1 369 1 29 1 76 1 
236 1 222 1 94 1 352 1 125 1 317 1 369 1 29 1 76 1 
24 1 362 1 187 1 291 1 26 1 164 1 317 2 50 1 29 4 369 1 196 1 76 3 113 1 242 1 271 1 272 1 222 1 94 3 8 1 98 1 321 1 322 1 63 1 347 1 323 1 277 1 325 1 125 4 15 1 16 1 17 1 233 1 68 1 236 3 377 1 253 1 183 1 69 1 108 1 44 1 211 2 315 1 260 1 186 1 
236 1 216 1 183 1 94 2 125 2 17 1 29 2 85 1 76 1 
337 1 125 3 137 1 16 1 317 1 17 2 233 1 196 1 369 1 29 3 76 3 236 3 253 1 272 1 222 1 8 1 94 3 321 1 322 1 
53 1 236 2 296 1 222 1 94 2 125 2 317 1 17 1 29 2 76 2 
63 1 347 1 323 1 187 1 125 1 15 1 325 1 50 1 29 1 68 1 377 1 183 1 108 1 315 1 260 1 
63 1 323 1 187 1 125 1 15 1 325 1 50 1 29 1 68 1 183 1 108 1 315 1 185 1 213 1 260 1 
24 1 362 1 164 1 167 1 51 1 141 2 53 2 270 1 296 2 370 1 98 1 148 1 14 1 277 1 249 1 179 1 153 2 130 1 69 2 44 1 211 2 70 1 21 1 186 4 
154 1 236 1 94 1 125 1 233 1 369 1 29 1 76 1 
63 1 347 1 323 1 187 1 325 1 125 2 15 1 17 1 50 1 29 2 76 1 68 1 236 1 377 1 296 1 94 1 108 1 321 1 315 1 260 1 
216 1 125 5 317 1 17 2 29 5 76 4 75 1 236 4 222 1 183 1 94 5 96 1 321 1 85 1 
154 1 236 2 162 1 94 2 125 2 369 1 29 2 76 2 
287 1 95 1 
287 1 95 1 
134 1 234 1 
134 1 234 1 
134 1 234 1 
287 1 95 1 356 1 
287 1 95 1 356 1 
287 1 95 1 313 1 
35 1 22 1 287 2 134 1 95 2 234 1 
287 1 95 1 356 1 
122 1 287 1 95 1 
122 1 287 1 95 1 
122 1 287 1 95 1 
35 1 287 2 36 2 101 1 293 1 337 1 231 2 278 2 353 1 127 1 196 2 295 1 341 1 156 3 8 2 171 2 95 2 9 1 62 2 
287 1 338 1 339 1 196 1 29 2 76 2 8 1 94 2 95 1 9 1 173 1 62 1 303 1 348 1 36 1 278 1 231 1 125 2 205 1 236 2 183 1 156 1 41 1 313 1 
214 1 263 1 285 1 
263 1 285 1 202 1 
214 2 263 3 174 1 48 1 344 1 202 1 
214 1 263 2 174 1 344 1 175 1 202 1 
214 1 263 2 174 1 344 2 202 1 
46 1 288 1 160 1 337 2 192 2 87 3 51 1 196 5 52 1 241 1 270 1 170 1 8 5 147 1 201 4 121 2 204 1 303 1 152 1 205 1 249 1 248 1 40 1 251 2 376 1 130 1 208 1 281 3 18 1 209 1 41 1 45 2 
46 2 288 1 160 2 337 4 87 6 51 2 196 8 52 2 241 2 90 1 270 2 4 4 170 2 223 4 8 8 201 6 121 4 303 4 123 1 152 2 249 2 248 5 251 4 376 1 130 2 208 1 281 6 18 2 256 1 255 1 209 1 284 1 132 1 42 1 45 4 
288 1 46 2 160 1 337 3 192 1 87 3 51 1 196 3 52 1 241 1 90 1 270 1 170 1 8 3 147 1 201 2 121 2 204 1 303 1 152 1 249 1 251 2 130 1 18 1 281 4 45 2 
46 2 160 1 337 2 192 1 87 3 51 1 196 3 52 1 241 1 90 1 270 1 170 1 8 3 147 1 201 2 121 2 204 1 303 2 152 1 249 1 251 2 130 1 281 4 18 1 256 1 255 1 284 1 45 2 
68 1 111 1 243 1 
68 1 140 1 
32 1 
68 1 323 1 
68 3 323 1 111 2 108 1 366 1 203 1 
68 1 323 1 108 1 
68 1 365 1 
133 1 1 2 65 1 67 1 153 4 130 1 270 1 320 1 370 2 237 1 69 3 312 1 276 1 72 1 186 7 148 3 358 1 
133 1 1 2 65 1 67 1 153 4 130 1 270 1 320 1 370 2 237 1 69 3 312 1 276 1 72 1 186 7 148 3 358 1 
133 1 1 2 65 1 195 1 67 1 153 4 130 1 270 1 320 1 370 2 237 1 69 3 312 1 276 1 72 1 186 7 148 3 358 1 
133 1 360 1 1 3 24 1 362 1 86 3 190 1 316 1 51 3 3 1 270 4 320 2 370 5 170 3 245 4 276 1 148 10 277 1 65 5 249 3 106 1 67 1 153 16 130 4 283 1 237 2 312 1 69 15 44 1 211 2 212 1 186 31 72 2 358 2 
133 1 1 2 24 2 362 2 2 1 168 1 270 1 320 1 370 3 276 1 148 4 277 2 65 1 153 5 130 1 237 1 69 4 312 1 44 2 211 4 212 1 186 9 72 1 358 1 
214 1 187 1 27 2 263 2 48 1 294 1 50 1 318 1 55 1 342 1 57 1 298 1 119 1 10 1 246 1 202 1 228 1 351 1 151 1 15 1 325 1 374 1 207 1 235 1 182 1 19 1 83 2 258 1 285 1 315 1 
214 1 110 1 187 1 27 3 263 2 48 1 294 1 50 1 55 1 144 1 342 1 298 1 119 1 10 1 246 1 202 1 228 1 151 1 15 1 325 1 374 1 207 1 235 1 182 2 19 1 83 3 157 1 258 1 285 1 315 1 
214 1 110 1 187 1 27 2 263 2 48 1 294 1 50 1 144 1 119 1 10 1 246 1 202 1 228 1 151 1 15 1 325 1 374 1 207 1 235 1 182 2 83 2 258 1 285 1 315 1 
23 1 187 1 27 1 191 1 294 2 50 1 342 1 298 1 117 1 10 2 300 1 63 1 323 1 64 1 325 1 15 1 207 2 128 1 235 2 68 1 83 1 157 1 315 1 
214 1 187 1 228 1 151 1 351 1 263 2 27 1 325 1 15 1 48 1 294 1 207 1 50 1 318 1 235 1 55 1 144 1 19 1 342 1 298 1 83 1 258 1 10 1 285 1 315 1 202 1 
336 1 
288 1 46 2 187 1 337 2 191 1 87 2 88 2 50 2 241 1 196 5 6 1 8 5 94 1 93 1 299 2 146 1 63 2 150 1 100 2 152 1 15 2 248 6 16 1 104 2 66 1 68 1 18 1 354 1 253 1 20 2 209 3 315 2 160 1 25 1 261 1 161 1 262 4 264 1 166 1 29 1 369 1 117 1 176 1 322 1 121 2 226 2 323 1 324 2 325 1 125 1 233 1 376 1 131 1 281 2 85 1 
25 1 161 1 261 1 262 2 29 1 196 3 369 1 94 1 8 3 146 1 176 1 322 1 37 1 125 1 16 1 248 2 233 1 354 1 253 1 20 1 209 1 85 1 
288 1 25 1 161 1 261 1 262 3 337 1 29 1 196 3 369 1 94 1 8 3 146 1 176 1 322 1 226 1 37 1 125 1 248 1 16 1 233 1 354 1 253 1 209 1 85 1 
288 1 25 1 161 1 261 1 262 3 337 1 29 1 196 3 369 1 94 1 8 3 146 1 299 1 176 1 322 1 226 1 37 1 125 1 16 1 248 2 233 1 354 1 253 1 209 1 20 1 85 1 
288 5 46 2 337 5 87 1 88 2 196 5 54 1 8 5 94 1 299 4 146 1 97 1 61 1 99 1 100 2 152 1 16 1 248 7 104 2 66 1 253 1 354 1 18 1 20 4 209 3 25 1 160 1 262 6 261 1 161 1 166 1 369 1 29 1 176 1 322 1 121 1 226 4 37 1 324 2 125 1 233 1 129 1 376 1 85 1 
46 2 288 1 337 2 87 1 88 2 196 4 6 1 94 1 8 4 146 1 299 2 100 2 152 1 16 1 248 4 104 2 66 1 253 1 18 1 354 1 209 2 20 2 160 1 25 1 262 4 261 1 161 1 166 1 369 1 29 1 176 1 322 1 121 1 226 2 324 2 125 1 233 1 376 1 281 2 85 1 
288 1 46 2 25 1 160 1 161 1 261 1 262 4 337 1 87 1 88 2 166 1 29 1 196 4 369 1 54 1 94 1 8 4 299 2 146 1 176 1 61 1 322 1 121 1 226 2 99 1 100 2 152 1 324 2 125 1 248 4 16 1 104 2 66 1 233 1 376 1 354 1 253 1 18 1 20 2 209 2 85 1 
288 1 46 2 25 1 160 1 161 1 261 1 262 4 337 1 87 1 88 2 166 1 29 1 196 4 369 1 54 1 94 1 8 4 299 2 146 1 176 1 61 1 322 1 121 1 226 2 99 1 100 2 152 1 324 2 125 1 248 4 16 1 104 2 66 1 233 1 376 1 354 1 253 1 18 1 20 2 209 2 85 1 
288 1 25 1 160 1 161 1 261 1 262 4 337 1 87 1 88 2 29 1 196 4 369 1 54 1 114 1 5 1 7 2 94 1 8 4 299 2 146 1 176 1 322 1 121 1 226 2 152 1 324 2 125 1 248 4 16 1 66 1 233 1 376 1 306 1 281 2 354 1 253 1 18 1 20 2 209 2 210 2 85 1 
288 1 46 2 160 1 25 1 161 1 261 1 262 5 337 1 87 1 88 2 166 1 29 1 196 4 369 1 54 1 94 1 8 4 146 1 299 3 176 1 61 1 97 1 322 1 121 1 226 3 99 1 100 2 152 1 324 2 125 1 16 1 248 5 104 2 66 1 233 1 376 1 18 1 354 1 253 1 209 2 20 3 85 1 
288 1 46 2 160 1 25 1 161 1 261 1 262 5 337 1 87 1 88 2 166 1 29 1 196 4 369 1 54 1 94 1 8 4 146 1 299 3 176 1 61 1 97 1 322 1 121 1 226 3 99 1 100 2 152 1 324 2 125 1 16 1 248 5 104 2 66 1 233 1 376 1 18 1 354 1 253 1 209 2 20 3 85 1 
288 1 337 1 87 1 88 2 196 4 6 1 94 1 8 4 7 2 146 1 299 2 152 1 16 1 248 4 66 1 306 1 253 1 18 1 354 1 209 2 20 2 210 2 160 1 25 1 262 4 261 1 161 1 369 1 29 1 176 1 322 1 121 1 226 2 324 2 125 1 233 1 376 1 281 2 85 1 
133 1 1 1 24 1 362 1 164 1 167 1 141 1 53 1 270 1 320 1 296 1 370 2 243 1 98 1 276 1 148 2 277 1 153 3 130 1 183 2 312 1 69 3 44 1 211 2 186 6 358 1 
24 2 362 2 86 3 316 1 265 1 164 1 51 2 368 1 141 11 53 4 270 2 113 1 370 1 296 11 170 2 200 1 245 3 98 2 148 2 302 1 277 2 65 1 249 1 153 8 130 1 183 1 283 1 107 1 69 6 44 2 259 1 211 4 186 14 
187 1 362 1 24 1 164 1 50 1 368 1 29 2 76 1 53 1 113 1 94 1 31 1 200 1 98 1 321 1 63 1 347 1 323 1 227 1 277 1 325 1 15 1 125 2 178 1 17 1 105 1 153 1 68 1 236 1 377 1 183 1 108 1 69 1 44 1 315 1 211 2 260 1 186 2 
133 1 1 1 187 2 291 2 50 3 51 2 240 1 340 2 141 7 53 7 144 1 296 7 94 1 200 1 98 3 148 8 63 1 347 2 103 1 15 3 65 4 249 2 17 1 153 10 68 2 254 2 312 1 69 10 108 2 315 3 211 6 260 2 358 1 24 3 362 3 215 2 164 3 29 3 368 1 76 1 270 3 113 1 320 1 370 4 170 2 321 1 276 1 323 2 277 3 125 3 325 2 130 3 236 1 377 2 183 2 379 2 380 1 44 3 186 20 
187 2 24 2 362 2 218 1 191 1 164 2 267 2 167 1 50 7 29 1 76 1 197 1 144 1 113 1 145 1 57 1 94 1 117 1 200 1 371 1 98 2 63 2 323 2 277 2 206 1 125 1 325 2 15 8 326 1 17 1 153 1 68 3 236 1 69 1 332 1 44 2 315 8 211 4 186 2 
24 1 362 1 164 1 317 1 51 1 141 1 368 1 29 1 76 1 53 1 270 1 370 1 296 1 222 1 170 1 94 1 98 1 148 1 277 1 125 1 249 1 153 1 130 1 236 1 308 1 69 2 44 1 211 2 186 3 
362 1 24 1 14 1 277 1 65 1 164 1 167 1 51 1 141 1 53 1 153 2 270 1 296 1 44 1 98 1 211 2 186 2 148 1 
362 1 24 1 277 1 164 1 249 1 179 1 167 1 141 1 53 1 130 1 370 1 296 1 69 2 44 1 98 1 211 2 186 2 148 1 
24 1 362 1 164 1 167 1 51 1 141 2 53 2 270 1 296 2 370 1 170 1 98 1 148 2 277 1 65 1 249 1 153 2 130 1 69 2 44 1 211 2 186 4 
362 1 24 1 14 1 277 1 65 1 164 1 326 1 51 1 141 1 53 1 153 2 270 1 296 1 44 1 98 1 211 2 186 2 148 1 
362 1 24 1 277 1 164 1 326 1 249 1 179 1 141 1 53 1 130 1 370 1 296 1 69 2 44 1 98 1 211 2 186 2 148 1 
24 1 362 1 164 1 51 1 141 2 53 2 270 1 296 2 370 1 170 1 98 1 148 2 277 1 65 1 326 1 249 1 153 2 130 1 69 2 44 1 211 2 186 4 
362 1 24 1 277 1 65 1 164 1 249 1 51 1 141 2 53 2 153 2 130 1 270 1 370 1 296 2 170 1 69 2 44 1 98 1 211 2 186 4 148 2 
187 1 362 1 24 1 291 1 164 1 50 1 29 1 113 1 200 1 98 1 63 1 347 1 323 1 277 1 325 1 15 1 125 1 153 1 68 1 377 1 183 1 108 1 69 1 44 1 315 1 211 2 260 1 186 2 
187 1 362 1 24 1 164 1 50 1 29 1 113 1 200 1 98 1 63 1 323 1 277 1 229 1 325 1 15 1 125 1 153 1 68 1 183 1 108 1 69 1 44 1 315 1 211 2 260 1 213 1 185 1 186 2 
24 1 362 1 164 1 51 1 368 1 141 2 53 2 270 1 296 2 370 1 170 1 98 1 148 2 277 1 65 1 249 1 153 2 130 1 69 2 44 1 211 2 186 4 
187 1 362 1 24 1 291 1 164 1 50 1 51 1 141 2 340 1 29 1 53 2 270 1 370 1 296 2 57 1 170 1 98 1 148 2 347 1 323 1 277 1 65 1 325 1 15 1 125 1 249 1 153 2 130 1 68 1 377 1 69 2 108 1 44 1 315 1 211 2 260 1 186 4 
24 1 362 1 164 1 317 1 51 1 368 1 29 1 141 1 76 1 53 1 270 1 296 1 222 1 170 1 94 1 98 1 148 1 277 1 65 1 125 1 249 1 153 2 130 1 236 1 257 1 69 1 44 1 211 2 186 3 
24 2 362 2 86 1 316 1 163 1 138 2 51 3 168 1 270 3 198 1 370 3 297 1 170 3 224 1 245 2 148 6 277 2 304 1 65 3 249 3 252 2 153 9 130 3 283 1 311 1 69 10 43 1 44 2 211 4 186 19 
24 3 362 3 86 2 316 2 163 1 138 1 51 3 367 1 168 1 270 3 198 2 370 2 116 1 170 3 275 1 245 2 148 4 277 3 102 1 304 1 65 2 249 2 180 1 252 4 153 14 130 2 311 2 69 12 158 1 43 1 44 3 212 2 211 6 186 26 
133 1 1 1 24 3 362 3 86 3 316 3 163 1 138 1 51 4 367 1 168 1 270 5 198 1 320 1 370 4 116 1 170 4 224 1 275 1 245 4 276 1 148 8 102 1 277 3 304 1 65 4 249 4 180 1 252 4 153 20 130 5 283 1 311 2 312 1 69 21 158 1 43 1 44 3 212 1 211 6 186 41 381 1 358 1 
133 1 1 1 24 4 362 4 86 3 316 3 163 1 138 1 51 4 367 1 168 1 270 5 198 1 320 1 370 4 116 1 170 4 224 1 275 1 245 4 276 1 148 7 102 1 277 4 304 1 65 3 249 3 180 1 252 4 153 20 130 4 283 1 311 2 312 1 69 18 158 1 43 1 44 4 212 2 211 8 186 38 381 1 358 1 
133 1 1 1 24 2 362 2 86 4 316 2 265 2 163 1 138 1 51 7 367 1 168 1 270 8 198 1 320 1 370 7 116 1 170 7 275 1 245 4 276 1 148 14 102 1 277 2 304 1 65 7 249 7 180 1 252 4 153 27 130 8 283 2 311 1 312 1 69 25 158 1 43 1 44 2 212 1 211 4 186 52 358 1 
341 1 35 1 287 1 0 1 36 1 293 1 278 1 231 1 95 1 62 1 
348 1 313 1 
221 1 287 1 36 1 78 1 155 1 278 1 231 1 95 1 62 1 
35 1 287 1 36 1 101 1 293 1 337 1 231 1 278 1 127 1 196 1 295 1 341 1 156 2 8 1 171 1 95 1 9 1 62 1 
35 1 287 1 36 1 101 1 293 1 337 1 231 1 278 1 127 1 196 1 295 1 341 1 156 2 8 1 171 1 95 1 9 1 62 1 
35 1 287 1 36 1 101 1 293 1 337 1 231 1 278 1 127 1 196 1 295 1 341 1 156 2 8 1 171 1 95 1 9 1 62 1 
22 1 115 1 356 1 
22 1 115 1 356 1 
122 1 238 1 
22 1 122 1 238 1 
338 1 339 1 
287 1 338 1 339 1 29 2 196 1 76 2 171 1 8 1 94 2 95 1 173 1 62 1 201 1 303 1 348 1 36 1 372 1 125 2 278 1 231 1 205 1 127 1 236 2 183 1 156 1 41 1 313 1 
115 1 356 1 
22 1 122 1 238 1 
187 1 362 1 24 1 218 1 164 1 267 2 220 1 50 2 139 1 368 1 29 2 113 1 145 1 94 2 200 1 98 1 323 1 277 1 325 1 15 2 125 2 250 1 126 1 327 1 153 1 68 1 69 1 44 1 315 2 211 2 186 2 
214 1 187 1 151 1 263 2 325 1 15 2 48 1 50 2 235 1 144 1 91 1 199 1 19 1 57 1 258 1 285 1 357 1 315 2 202 1 
214 1 187 1 151 1 263 2 15 1 325 1 48 1 50 1 235 1 144 1 19 1 258 1 274 1 285 1 357 1 315 1 202 1 
63 1 323 1 187 1 82 1 191 1 325 1 15 1 50 1 128 1 235 1 68 1 91 1 117 1 315 1 
214 1 187 1 151 1 263 2 325 1 15 1 48 1 50 1 235 1 144 1 91 1 199 1 19 1 258 1 285 1 357 1 315 1 202 1 
225 1 
288 1 343 1 243 1 337 1 87 1 177 1 121 1 
46 1 288 1 160 1 337 2 87 1 166 1 196 1 8 1 121 1 100 1 152 1 248 1 104 1 376 1 18 1 281 1 209 1 
288 2 46 6 187 3 337 8 87 9 49 2 194 1 50 3 51 2 140 3 89 2 241 2 196 5 57 1 343 1 8 5 345 2 11 2 203 1 63 1 152 4 15 3 248 5 249 2 251 6 68 10 18 4 253 2 209 3 108 3 315 3 314 1 361 2 111 2 160 4 264 1 219 1 365 2 268 1 269 2 169 2 270 2 170 2 177 1 33 2 121 8 323 3 325 4 376 4 130 2 281 12 379 2 184 1 45 6 
46 3 288 2 86 1 160 2 316 1 264 1 337 5 87 8 51 2 89 1 367 1 319 1 241 1 196 1 169 2 270 2 116 1 170 2 8 1 275 1 245 1 121 5 102 1 152 2 248 1 249 2 180 1 251 5 376 2 130 2 281 6 18 2 209 1 330 1 45 5 
188 1 363 1 160 1 162 1 87 2 317 1 89 1 369 1 29 1 196 1 76 1 169 2 270 2 242 1 320 1 8 1 94 1 61 1 276 1 121 2 152 1 125 1 39 1 376 1 130 1 236 1 18 1 358 1 
288 1 160 1 152 1 337 1 87 1 376 1 18 1 343 1 177 1 121 1 
46 5 337 5 249 2 87 5 51 2 89 1 251 5 169 2 270 2 130 2 281 10 170 2 379 1 45 5 121 5 
288 1 209 1 337 1 8 1 248 1 196 1 
187 1 160 2 264 2 191 1 165 1 219 1 87 2 194 2 50 4 241 2 196 3 90 1 59 1 8 3 117 1 121 2 63 2 323 1 150 1 152 2 325 1 15 4 248 4 376 1 68 1 131 1 18 2 209 2 315 4 
24 1 362 1 187 1 291 1 26 1 164 1 317 2 50 1 29 3 76 2 113 1 242 1 94 2 98 1 63 1 347 1 323 1 277 1 15 1 125 3 325 1 68 1 236 2 377 1 183 1 69 1 108 1 44 1 211 2 315 1 260 1 186 1 
1 1 46 2 288 2 160 1 152 1 337 4 264 1 87 1 251 2 241 1 376 1 281 4 18 1 45 2 121 2 
60 1 278 1 231 1 
60 1 278 1 231 1 
341 1 364 1 338 1 278 1 231 1 
60 1 278 1 231 1 
310 1 278 1 231 1 
310 1 278 1 231 1 
310 1 278 1 231 1 
278 1 231 1 
287 1 95 1 
133 1 1 1 362 2 24 2 277 2 65 1 153 4 130 1 270 1 320 1 370 2 69 4 312 1 44 2 211 4 212 1 276 1 186 8 148 3 358 1 
133 1 1 1 153 3 270 1 130 1 320 1 370 2 243 1 69 3 312 1 276 1 186 6 358 1 148 2 
362 1 24 1 277 1 350 1 65 1 249 1 51 1 153 2 130 1 270 1 370 1 170 1 69 2 44 1 211 2 186 4 148 2 
86 1 316 1 65 1 249 1 51 1 153 3 130 1 270 1 370 1 283 1 170 1 69 4 245 2 186 7 148 2 
133 1 1 1 86 2 362 2 24 2 189 1 265 1 51 2 270 3 320 2 370 5 170 2 245 2 276 1 148 9 302 1 277 2 65 4 249 2 153 11 130 3 283 1 312 1 69 12 44 2 212 2 211 4 186 23 358 2 
69 1 245 1 186 1 
153 1 86 1 186 1 
24 1 362 1 277 1 350 1 65 1 249 1 51 1 153 3 270 1 130 1 370 2 170 1 379 1 69 3 44 1 211 2 186 6 148 3 
86 1 24 1 362 1 316 1 51 2 367 1 168 1 270 2 370 1 116 1 170 2 245 1 275 1 148 2 277 1 102 1 65 1 249 2 180 1 153 6 130 2 69 6 44 1 211 2 186 12 
65 1 153 3 270 1 130 1 320 1 370 1 69 3 276 1 186 6 358 1 148 2 
133 1 362 1 24 1 189 1 277 1 65 1 153 1 320 1 370 1 69 2 312 1 44 1 212 1 211 2 186 3 148 2 358 1 
24 1 362 1 277 1 65 2 39 1 168 1 153 5 270 2 130 2 320 2 370 3 69 5 44 1 211 2 276 1 186 10 358 2 148 5 
362 1 24 1 277 1 65 1 51 1 168 1 153 2 270 1 44 1 211 2 186 2 148 1 
362 1 24 1 277 1 65 1 249 1 51 1 168 1 153 2 130 1 270 1 370 1 170 1 69 2 44 1 211 2 186 4 148 2 
362 3 24 3 189 1 277 3 65 1 168 1 153 1 320 1 370 1 224 1 69 2 44 3 212 1 211 6 186 3 358 1 148 2 
133 1 360 1 1 1 24 5 362 5 86 3 189 1 190 1 316 1 51 3 168 1 270 5 320 3 370 7 170 3 224 1 245 4 276 2 148 12 277 5 350 1 65 5 249 3 106 1 153 16 130 5 283 1 312 1 69 18 44 5 212 2 211 10 186 34 358 3 
133 1 1 1 86 1 24 1 362 1 316 1 168 1 270 1 320 1 370 2 245 1 276 1 148 2 277 1 180 1 153 4 130 1 69 4 312 1 44 1 211 2 186 8 358 1 
133 1 1 1 24 2 362 2 86 1 316 1 51 1 168 1 270 2 320 1 370 2 170 1 245 2 276 1 148 3 277 2 350 1 65 1 180 1 153 6 130 1 283 1 312 1 69 5 44 2 211 4 186 11 358 1 
133 1 1 1 86 1 24 3 362 3 316 1 51 2 367 1 168 1 270 3 320 1 370 3 116 1 170 2 245 1 275 1 276 1 148 4 277 3 102 1 350 1 65 1 249 2 180 1 153 9 130 3 312 1 69 10 44 3 211 6 212 1 186 19 358 1 
133 1 1 1 86 1 24 3 362 3 316 1 51 2 367 1 168 1 270 3 320 1 370 3 116 1 170 2 245 1 275 1 276 1 148 5 277 3 102 1 350 1 65 2 249 1 180 1 153 10 130 2 312 1 69 7 44 3 212 1 211 6 186 17 358 1 
133 1 1 1 86 1 24 1 362 1 316 1 168 1 270 1 320 1 370 2 245 1 276 1 148 2 277 1 180 1 153 4 130 1 69 4 312 1 44 1 211 2 186 8 358 1 
86 1 24 1 362 1 316 1 51 2 367 1 168 1 270 2 370 1 116 1 170 2 245 1 275 1 148 2 277 1 102 1 65 1 249 2 180 1 153 6 130 2 69 6 44 1 211 2 186 12 
133 1 1 1 24 4 362 4 86 1 316 1 51 2 367 1 168 1 270 3 320 1 370 3 116 1 170 2 275 1 245 1 276 1 148 5 277 4 102 1 350 1 65 2 249 1 180 1 153 10 130 2 312 1 69 8 44 4 211 8 212 2 186 18 358 1 
24 4 362 4 86 1 316 1 51 3 367 1 168 1 270 3 370 3 116 1 170 3 224 1 275 1 245 1 148 6 277 4 102 1 65 3 249 2 180 1 153 9 130 2 69 7 44 4 211 8 212 2 186 16 
133 2 65 3 153 3 130 1 270 1 320 3 370 3 69 4 312 1 276 1 186 7 358 3 148 6 
133 1 1 1 24 4 362 4 86 1 316 1 51 2 367 1 168 1 270 3 320 1 370 3 116 1 170 2 224 1 275 1 245 1 276 1 148 4 277 4 102 1 65 1 249 1 180 1 153 10 130 2 312 1 69 8 44 4 211 8 212 2 186 18 358 1 
216 1 183 1 94 1 125 1 29 1 112 1 85 1 
289 1 216 1 247 1 125 1 232 1 112 1 29 1 183 1 94 1 30 1 71 1 85 1 
63 1 68 1 323 1 187 1 243 1 191 1 325 1 15 1 117 1 50 1 315 1 
63 1 347 1 323 1 187 1 325 1 125 2 15 1 17 1 50 1 29 2 76 1 68 1 236 1 183 1 94 1 108 1 315 1 260 1 
347 1 323 2 187 1 325 1 125 2 15 1 365 1 16 1 17 1 194 1 50 1 233 1 369 1 29 2 76 2 68 3 236 1 183 1 94 2 108 2 345 1 315 1 260 1 
187 1 365 1 50 2 194 1 29 2 369 1 76 2 94 2 273 1 345 1 323 2 15 2 125 2 325 1 16 1 17 1 233 1 68 3 236 1 183 1 108 2 315 2 213 1 260 1 
288 1 187 1 111 1 337 1 365 1 50 3 194 1 140 1 196 2 142 1 8 2 273 1 345 1 63 1 323 1 15 3 325 1 248 1 68 4 253 1 108 1 109 1 315 3 
63 1 288 1 323 1 361 1 187 1 111 1 337 1 325 1 15 3 365 1 248 1 194 1 50 3 140 1 196 2 68 4 253 1 8 2 273 1 108 1 345 1 315 3 
197 1 187 1 325 1 15 1 50 1 315 1 
63 2 323 2 187 2 266 1 206 1 15 7 325 3 267 1 50 6 197 1 68 3 144 1 145 1 57 1 108 1 332 1 371 1 315 7 34 1 333 1 203 1 
133 1 1 1 187 1 362 2 24 2 291 1 164 2 220 1 50 1 141 1 368 1 29 2 340 1 76 1 53 1 270 1 320 1 296 1 370 2 57 1 94 1 98 2 276 1 148 2 347 1 323 1 277 2 325 1 125 2 15 1 17 1 153 3 130 1 68 1 236 1 377 1 254 1 183 2 69 3 312 1 108 1 44 2 211 4 315 1 260 1 186 6 358 1 
288 1 361 1 111 1 160 2 337 1 87 1 219 1 49 1 50 1 140 1 196 3 269 1 343 1 8 3 177 1 33 1 201 1 121 1 63 1 152 2 15 1 248 2 376 2 68 2 18 2 253 1 209 1 315 1 
323 1 187 1 111 1 15 2 325 2 50 2 197 1 68 2 57 1 108 1 315 2 314 1 203 1 
63 1 323 1 187 1 191 1 325 1 15 4 50 4 279 1 68 1 57 1 273 1 117 1 315 4 
335 1 323 1 187 1 266 1 103 1 15 2 325 2 194 1 50 2 68 1 58 1 108 1 315 2 333 1 
63 1 187 1 263 1 325 1 15 1 258 1 285 1 50 1 315 1 202 1 
68 1 323 1 144 1 187 1 145 1 57 1 325 1 15 2 50 2 315 2 139 1 
63 1 323 2 187 2 191 1 15 5 325 2 194 1 50 4 279 1 68 3 145 1 57 1 117 1 332 1 315 5 371 1 
63 1 323 2 187 2 74 1 191 1 15 5 325 2 194 1 50 4 279 1 68 3 145 1 57 1 117 1 315 5 371 1 
63 1 323 1 187 1 325 1 125 2 15 1 17 1 50 1 29 2 76 1 68 1 236 1 183 1 94 1 108 1 315 1 260 1 213 1 
323 1 187 1 266 1 15 1 325 2 194 1 50 1 68 1 108 1 315 1 34 1 333 1 203 1 
125 1 126 1 250 1 327 1 29 1 143 1 307 1 94 1 80 1 
193 1 159 1 80 1 
307 1 183 1 244 1 143 1 80 1 
288 1 337 1 16 1 193 1 233 1 369 1 196 2 143 2 307 2 253 1 272 1 183 1 8 2 244 2 331 1 322 1 201 1 159 1 80 1 
243 1 119 1 374 1 246 1 
342 1 298 1 83 1 27 1 119 1 374 1 246 1 
83 1 10 1 207 1 
56 1 342 1 47 2 351 1 298 1 83 3 27 3 119 1 374 1 79 1 12 1 246 1 
359 1 182 1 342 1 298 1 83 2 27 2 119 1 374 1 246 1 
214 1 81 1 309 1 342 1 351 1 298 1 263 1 83 1 27 1 119 1 285 1 
342 1 351 1 298 1 83 1 27 1 119 1 374 1 
342 1 351 1 298 1 83 1 27 1 374 2 246 1 
378 1 342 2 135 1 351 1 298 2 83 2 27 2 28 1 119 1 374 1 
81 1 182 2 342 1 351 1 298 1 83 3 27 3 172 1 119 2 374 1 346 1 246 1 334 1 
214 1 351 1 263 2 27 2 48 1 374 1 342 1 182 1 298 1 83 2 92 1 119 1 285 1 246 1 202 1 
81 1 359 1 182 2 342 2 351 1 298 2 230 1 83 4 27 4 172 1 119 2 374 1 246 1 
342 1 351 1 298 1 83 1 27 1 119 1 374 1 246 1 
81 1 47 1 27 4 374 2 280 1 56 1 182 2 342 1 298 1 83 4 172 1 119 3 79 1 246 2 
149 1 351 1 27 2 374 1 38 1 342 1 182 1 298 1 83 2 119 1 246 1 239 1 
56 2 342 1 47 2 282 1 351 1 298 1 83 3 27 3 119 1 374 1 79 1 246 1 
349 1 119 2 301 2 84 1 
342 1 292 1 351 1 298 1 83 1 27 1 
182 1 342 1 351 1 298 1 83 2 27 2 119 1 374 1 246 1 334 1 
13 1 
342 1 351 1 298 1 83 1 27 1 119 1 374 1 246 1 
351 1 47 1 27 3 374 1 182 1 342 1 298 1 83 3 119 1 246 1 334 1 
81 1 280 1 172 1 119 1 
119 1 374 1 

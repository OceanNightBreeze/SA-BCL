#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (19,145) (19,145) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (19,145) (19,145) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (19,145) (19,145) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (19,145) (19,145) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
89 1 19 1 25 1 157 1 145 1 217 1 219 1 136 1 44 1 
89 1 19 1 25 1 157 1 145 1 217 1 219 1 136 1 44 1 
89 1 19 1 25 1 157 1 145 1 217 1 219 1 136 1 44 1 
89 1 19 1 25 1 157 1 145 1 217 1 219 1 136 1 44 1 
121 1 25 1 257 1 315 1 316 1 2 1 328 1 61 3 44 4 129 1 157 4 217 1 375 2 288 1 169 3 94 2 24 1 219 1 
25 1 60 1 2 1 61 1 328 1 44 2 89 1 127 1 129 1 157 2 217 1 170 1 171 1 24 1 219 1 136 1 
25 1 328 1 61 2 44 3 157 3 217 2 8 1 375 1 288 1 169 1 24 1 219 2 136 1 
121 1 25 1 315 1 316 1 2 1 345 1 129 1 157 9 8 1 217 2 219 2 136 1 257 1 14 1 328 1 61 5 44 9 375 4 198 1 288 3 169 7 230 1 94 2 24 1 
121 1 25 1 315 1 316 1 2 1 345 1 129 1 157 9 8 1 217 2 219 2 136 1 257 1 14 1 328 1 61 5 44 9 375 4 198 1 288 3 169 7 230 1 94 2 24 1 
45 1 332 1 40 1 
332 1 261 1 99 2 
13 2 320 2 206 2 208 1 379 2 134 1 163 2 212 2 
361 1 234 1 206 3 124 1 208 1 75 1 178 1 318 2 76 1 28 1 212 2 78 1 179 2 213 1 319 1 180 1 320 3 303 2 275 2 107 1 31 1 134 1 162 1 163 2 13 2 36 1 351 1 310 1 111 1 190 1 245 1 115 1 91 1 286 1 148 1 379 2 201 2 
13 1 371 1 320 1 206 1 263 1 379 1 134 1 82 1 163 1 212 1 
13 1 35 1 206 1 53 1 207 1 40 1 42 1 332 1 320 1 229 1 57 1 218 1 251 1 82 1 
13 1 206 1 53 1 207 2 40 1 42 1 212 1 332 1 320 1 57 2 229 1 218 1 379 1 163 1 82 1 
326 1 207 1 21 1 57 1 289 1 
331 1 332 1 326 1 207 2 21 1 181 1 57 2 40 1 
326 1 207 1 57 1 
13 1 371 1 165 1 207 1 206 1 212 1 320 1 21 1 57 1 263 1 134 1 379 1 82 1 163 1 
332 1 
332 1 326 1 207 2 21 1 181 1 57 2 40 1 166 1 
264 1 185 1 372 2 326 2 176 2 207 5 40 1 364 1 27 1 77 1 332 1 336 1 227 1 21 2 181 1 57 5 159 1 358 1 291 2 
13 1 234 1 139 1 206 2 124 1 245 1 75 1 74 1 98 1 76 1 212 1 179 1 115 1 213 1 319 1 180 1 320 2 275 1 201 1 163 1 
45 1 208 1 
13 2 128 1 320 2 206 2 208 2 312 1 379 1 163 1 212 1 
187 1 279 1 98 1 
234 1 206 1 124 1 208 1 245 1 75 1 76 1 179 1 115 1 213 1 319 1 180 1 320 1 305 1 275 1 201 1 
13 3 320 3 206 3 208 1 74 1 379 1 163 3 212 3 
13 1 320 1 206 1 263 1 82 1 163 1 212 1 
13 1 128 1 320 1 206 1 312 1 379 1 82 1 163 1 212 1 
361 1 234 1 51 1 206 4 53 1 207 1 124 1 208 1 75 1 74 1 178 1 318 1 76 1 28 1 212 3 78 1 179 1 213 1 319 1 180 1 320 4 303 2 57 1 275 1 218 1 31 1 134 1 163 3 82 1 13 3 36 1 310 1 111 1 190 1 139 1 245 1 42 1 115 1 333 1 286 1 229 1 312 1 379 2 201 1 
13 2 320 2 206 2 208 1 251 1 74 1 155 1 163 1 212 1 
13 3 51 1 139 1 207 1 206 3 53 1 74 2 42 1 212 3 332 1 320 3 57 1 229 1 312 1 218 1 379 1 323 1 82 1 163 3 
13 2 206 2 74 1 279 1 98 1 212 2 320 2 312 1 379 1 163 2 
234 1 206 1 124 1 208 1 245 1 75 1 76 1 179 1 115 1 213 1 319 1 180 1 320 1 275 1 201 1 
206 1 124 1 208 1 245 1 75 1 76 1 179 1 368 1 213 1 319 1 180 1 320 1 275 1 359 1 201 1 
361 1 209 1 98 2 26 1 318 4 210 1 301 1 28 1 78 2 79 1 304 1 303 2 31 1 276 1 12 1 33 1 187 2 36 1 351 2 310 1 190 1 279 2 360 1 290 1 
13 1 320 1 53 1 206 1 322 1 82 1 163 1 212 1 
13 5 139 1 206 5 208 1 74 2 155 1 212 4 320 5 312 1 251 1 93 1 379 1 163 4 256 1 
13 2 320 2 206 2 263 1 322 1 82 1 163 2 212 2 
90 1 64 1 
90 1 64 1 
6 1 9 1 
6 1 9 1 
6 1 9 1 
90 1 64 1 294 1 
90 1 64 1 294 1 
90 1 164 1 64 1 
59 1 90 2 6 1 9 1 64 2 88 1 
90 1 64 1 294 1 
90 1 23 1 64 1 
90 1 23 1 64 1 
90 1 23 1 64 1 
186 1 15 2 151 1 152 1 207 2 39 2 363 2 64 2 88 1 356 3 332 1 248 1 90 2 274 1 118 2 57 2 232 1 321 1 309 2 
151 1 207 1 206 2 208 1 363 1 212 2 320 2 57 1 183 1 163 2 13 2 15 1 164 1 39 1 114 1 224 1 64 1 43 1 356 1 90 1 46 1 376 1 118 1 49 1 
129 1 316 1 2 1 
127 1 129 1 2 1 
127 1 129 3 68 1 316 2 58 1 41 1 
127 1 129 2 68 1 316 1 346 1 41 1 
127 1 129 2 316 1 68 1 41 2 
96 1 176 1 207 5 154 2 209 1 99 3 301 1 77 1 181 1 57 5 184 1 161 1 11 2 33 1 138 1 372 1 326 1 352 2 40 1 114 1 224 1 261 1 280 1 374 1 332 2 227 2 21 4 358 3 47 1 290 1 291 1 49 1 
203 1 176 2 207 9 237 1 209 3 99 9 301 3 77 1 366 1 57 9 181 1 30 1 184 3 161 1 11 6 185 1 33 3 372 2 326 6 352 6 114 4 40 1 261 3 62 1 280 2 247 1 374 2 332 5 227 6 21 7 358 8 290 3 289 5 292 5 291 2 
176 1 207 3 154 1 209 1 99 4 301 1 57 3 184 1 11 2 185 1 33 1 138 1 372 1 352 2 40 1 114 1 261 2 280 1 374 1 332 3 21 2 227 2 358 3 47 1 291 1 290 1 
176 1 207 4 154 2 237 1 209 2 99 7 301 2 57 4 30 1 184 2 11 4 185 1 33 2 372 1 138 1 352 4 40 1 114 2 261 3 280 1 247 1 374 1 332 4 21 3 227 4 358 5 47 1 291 1 290 2 
45 1 149 1 75 1 
75 1 255 1 
200 1 
245 1 75 1 
112 1 124 1 113 1 149 2 245 1 75 3 
124 1 245 1 75 1 
228 1 75 1 
33 1 85 2 351 4 175 1 259 1 267 1 210 2 318 7 301 1 268 1 344 1 78 3 283 1 271 1 337 1 81 1 12 3 
33 1 85 2 351 4 175 1 259 1 267 1 210 2 318 7 301 1 268 1 344 1 78 3 283 1 271 1 337 1 81 1 12 3 
33 1 85 2 351 4 175 1 259 1 267 1 210 2 318 7 301 1 268 1 344 1 78 3 102 1 283 1 271 1 337 1 81 1 12 3 
361 1 338 1 339 1 175 2 209 3 267 2 318 31 210 5 268 1 301 4 344 2 28 1 78 15 369 1 271 5 303 2 81 2 32 1 184 3 83 1 12 10 33 4 348 1 85 3 351 16 310 1 190 1 259 1 260 4 194 3 283 1 337 1 287 1 290 3 
361 2 175 1 267 1 318 9 210 3 301 1 268 1 28 2 344 1 101 1 78 4 271 1 303 4 81 1 12 4 33 1 85 2 310 2 351 5 190 2 259 1 337 1 357 1 287 1 
204 1 25 1 205 1 316 1 236 1 2 1 299 1 367 1 179 1 213 1 180 1 127 1 129 2 157 2 273 1 217 1 275 1 132 1 58 1 219 1 136 1 220 1 110 1 61 1 328 1 44 2 169 1 252 1 201 1 24 1 
204 1 316 1 236 1 2 1 299 1 179 1 213 1 180 1 127 1 129 2 157 3 273 1 217 1 275 1 132 1 58 1 308 1 219 1 136 1 135 1 220 1 110 1 61 1 328 1 355 1 44 3 169 2 252 1 201 1 24 1 
204 1 316 1 236 1 2 1 299 1 179 1 213 1 180 1 127 1 129 2 157 2 273 1 275 1 132 1 58 1 136 1 135 1 61 1 328 1 355 1 44 2 169 2 252 1 201 1 24 1 
204 2 0 1 349 1 245 1 75 1 126 1 44 1 179 1 213 1 319 1 180 1 195 1 157 1 146 1 217 1 273 2 275 1 378 1 308 1 252 2 201 1 219 1 136 2 
204 1 220 1 25 1 110 1 205 1 316 1 236 1 2 1 299 1 44 1 355 1 179 1 213 1 127 1 180 1 129 2 157 1 217 1 273 1 132 1 275 1 58 1 252 1 201 1 219 1 136 1 
199 1 
295 2 0 1 207 5 206 1 53 1 99 2 302 1 100 1 55 1 213 1 103 1 104 2 57 5 306 1 218 1 10 2 160 2 347 1 13 1 109 1 261 2 225 1 227 2 229 1 358 2 313 1 176 1 235 1 126 1 75 1 77 1 179 2 319 2 180 1 320 1 181 3 275 2 278 1 82 1 35 1 34 4 372 1 326 6 40 1 245 1 246 1 280 1 42 1 332 2 334 2 335 2 285 2 251 1 291 1 201 2 
206 1 207 3 53 1 100 1 103 1 320 1 57 3 181 1 218 1 306 1 10 1 347 1 82 1 13 1 35 1 34 2 326 2 225 1 42 1 166 1 229 1 251 1 
206 1 207 3 53 1 100 1 103 1 320 1 57 3 181 1 218 1 306 1 347 1 82 1 13 1 35 1 34 3 326 1 40 1 225 1 42 1 166 1 334 1 332 1 229 1 251 1 
206 1 207 3 53 1 100 1 103 1 104 1 320 1 181 1 57 3 218 1 306 1 10 1 347 1 82 1 13 1 35 1 34 3 326 2 40 1 166 1 225 1 42 1 334 1 332 1 229 1 251 1 
295 2 53 1 206 1 207 5 100 1 55 1 103 1 104 4 7 1 57 5 218 1 306 1 10 4 160 2 347 1 13 1 261 2 166 1 225 1 66 1 227 1 229 1 22 1 358 1 122 1 176 1 77 1 320 1 181 3 82 1 278 1 34 6 35 1 372 1 326 7 37 1 40 5 42 1 334 4 332 5 335 2 285 2 251 1 291 1 
295 2 53 1 206 1 207 4 99 2 100 1 55 1 103 1 104 2 57 4 218 1 306 1 160 2 10 2 347 1 13 1 261 2 225 1 227 1 229 1 358 1 313 1 176 1 77 1 320 1 181 2 82 1 278 1 34 4 35 1 372 1 326 4 40 1 42 1 334 2 332 2 335 2 285 2 251 1 291 1 
295 2 122 1 176 1 206 1 207 4 53 1 77 1 100 1 55 1 103 1 104 2 320 1 181 2 57 4 218 1 306 1 10 2 160 2 278 1 347 1 82 1 13 1 35 1 34 4 372 1 326 4 37 1 40 1 261 2 225 1 42 1 332 1 334 2 335 2 285 2 227 1 229 1 22 1 358 1 251 1 291 1 
295 2 122 1 176 1 206 1 207 4 53 1 77 1 100 1 55 1 103 1 104 2 320 1 181 2 57 4 218 1 306 1 10 2 160 2 278 1 347 1 82 1 13 1 35 1 34 4 372 1 326 4 37 1 40 1 261 2 225 1 42 1 332 1 334 2 335 2 285 2 227 1 229 1 22 1 358 1 251 1 291 1 
295 2 176 1 206 1 207 4 53 1 177 1 99 2 77 1 100 1 103 1 104 2 320 1 181 2 57 4 218 1 306 1 10 2 278 1 347 1 82 1 13 1 35 1 34 4 372 1 326 4 37 1 40 1 222 2 225 1 42 1 142 2 332 1 334 2 335 2 117 1 227 1 229 1 92 1 358 1 251 1 291 1 
295 2 122 1 176 1 206 1 207 4 53 1 77 1 100 1 55 1 103 1 104 3 7 1 320 1 181 2 57 4 218 1 306 1 160 2 10 3 278 1 347 1 82 1 13 1 35 1 34 5 372 1 326 5 37 1 40 1 261 2 225 1 42 1 332 1 334 3 335 2 285 2 227 1 229 1 22 1 358 1 251 1 291 1 
295 2 122 1 176 1 206 1 207 4 53 1 77 1 100 1 55 1 103 1 104 3 7 1 320 1 181 2 57 4 218 1 306 1 160 2 10 3 278 1 347 1 82 1 13 1 35 1 34 5 372 1 326 5 37 1 40 1 261 2 225 1 42 1 332 1 334 3 335 2 285 2 227 1 229 1 22 1 358 1 251 1 291 1 
295 2 53 1 206 1 207 4 99 2 100 1 103 1 104 2 57 4 218 1 306 1 10 2 347 1 13 1 222 2 225 1 117 1 227 1 229 1 358 1 313 1 176 1 77 1 320 1 181 2 82 1 278 1 34 4 35 1 372 1 326 4 40 1 42 1 142 2 334 2 332 1 335 2 251 1 291 1 
33 1 361 1 187 1 36 1 85 1 351 3 310 1 190 1 175 1 259 1 208 2 279 1 98 1 318 6 210 2 301 1 268 1 344 1 28 1 78 3 45 1 337 1 303 2 360 1 31 1 12 2 
361 2 339 1 208 1 209 1 98 11 210 1 318 14 301 1 28 2 78 6 214 1 5 1 271 1 303 4 31 2 184 2 12 2 83 1 33 2 187 11 36 1 310 2 351 8 111 1 16 1 190 2 260 3 279 4 281 1 194 3 20 1 91 1 290 2 
361 1 234 1 206 2 124 1 208 1 75 1 74 1 365 1 76 1 318 2 28 1 212 1 179 1 78 1 213 1 319 1 180 1 320 2 305 1 303 2 275 1 31 1 163 1 13 1 36 1 310 1 351 1 190 1 139 1 111 1 327 1 353 1 245 1 279 1 115 1 20 1 91 1 201 1 
206 3 208 2 209 2 98 7 210 4 301 3 344 1 212 1 213 2 106 1 303 6 163 1 12 8 13 1 310 3 351 10 111 1 311 2 259 1 355 1 115 2 167 2 20 1 361 3 234 2 175 1 72 1 124 2 74 1 75 2 178 2 318 20 76 2 268 1 28 3 78 10 179 3 319 1 180 2 271 4 320 3 275 3 31 3 184 2 324 2 33 3 187 7 36 3 85 1 139 1 190 3 245 2 279 7 193 2 91 1 337 1 48 1 290 2 201 3 
361 2 0 1 1 1 97 1 206 1 74 1 75 3 126 1 318 2 343 1 367 1 28 2 212 1 179 8 78 1 213 2 319 2 56 1 180 2 320 1 303 4 275 7 31 2 162 2 163 1 13 1 36 2 350 1 310 2 351 1 190 2 111 1 245 2 329 1 355 1 116 1 91 1 360 1 201 8 
361 1 206 1 209 1 98 1 210 1 318 3 301 1 28 1 54 1 212 1 78 2 320 1 303 2 31 1 184 1 163 1 12 1 13 1 33 1 187 1 36 1 310 1 351 1 190 1 279 1 20 1 312 1 379 1 290 1 
361 1 33 1 187 1 36 1 310 1 351 2 190 1 279 1 98 1 26 1 318 2 28 1 271 1 303 2 360 1 31 1 290 1 12 1 
361 1 187 1 36 1 310 1 190 1 279 1 209 1 98 1 210 1 318 2 301 1 28 1 78 2 303 2 304 1 360 1 31 1 12 1 
361 1 209 1 98 2 318 4 210 1 301 1 28 1 78 2 271 1 303 2 31 1 184 1 12 2 33 1 187 2 36 1 351 2 310 1 190 1 279 2 360 1 290 1 
361 1 33 1 187 1 36 1 310 1 351 2 190 1 279 1 98 1 26 1 318 2 28 1 56 1 271 1 303 2 31 1 290 1 12 1 
361 1 187 1 36 1 310 1 190 1 279 1 209 1 98 1 210 1 318 2 301 1 28 1 78 2 56 1 303 2 304 1 31 1 12 1 
361 1 209 1 98 2 318 4 210 1 301 1 28 1 78 2 56 1 271 1 303 2 31 1 184 1 12 2 33 1 187 2 36 1 351 2 310 1 190 1 279 2 290 1 
361 1 33 1 187 2 36 1 310 1 351 2 190 1 209 1 279 2 98 2 210 1 318 4 301 1 28 1 78 2 271 1 303 2 31 1 184 1 290 1 12 2 
361 1 234 1 206 1 124 1 208 1 75 1 178 1 318 2 76 1 28 1 179 1 78 1 213 1 319 1 180 1 320 1 303 2 275 1 31 1 36 1 351 1 310 1 190 1 111 1 245 1 115 1 91 1 201 1 
361 1 206 1 124 1 208 1 362 1 75 1 318 2 76 1 28 1 368 1 179 1 78 1 213 1 319 1 180 1 320 1 303 2 275 1 31 1 36 1 351 1 310 1 190 1 111 1 245 1 91 1 359 1 201 1 
361 1 209 1 98 2 318 4 210 1 301 1 28 1 78 2 271 1 303 2 31 1 184 1 12 2 33 1 187 2 36 1 351 2 310 1 190 1 279 2 20 1 290 1 
361 1 234 1 206 1 124 1 209 1 75 1 98 2 178 1 210 1 318 4 76 1 301 1 367 1 28 1 78 2 179 1 213 1 180 1 271 1 320 1 303 2 275 1 31 1 184 1 12 2 33 1 187 2 36 1 351 2 310 1 311 1 190 1 245 1 279 2 115 1 290 1 201 1 
361 1 206 1 209 1 125 1 98 1 318 3 301 1 28 1 212 1 78 1 271 1 320 1 303 2 31 1 184 1 163 1 12 1 13 1 33 1 187 1 36 1 310 1 351 2 190 1 279 1 20 1 312 1 379 1 290 1 
339 3 296 1 3 1 209 4 210 4 301 5 300 1 344 1 215 2 303 6 158 1 12 8 351 20 310 3 260 4 259 1 226 1 67 1 357 1 120 1 361 3 175 1 265 1 239 1 318 41 268 1 28 3 240 4 78 21 271 4 184 4 83 1 33 5 85 1 190 3 140 1 38 1 282 1 194 3 337 1 287 1 290 4 95 1 
361 4 339 3 175 1 296 1 265 1 3 1 209 3 239 1 210 4 318 38 300 1 268 1 301 4 344 1 240 4 28 4 78 18 215 2 271 3 158 1 303 8 184 4 83 1 12 7 33 5 85 1 310 4 351 20 140 1 190 4 259 1 38 1 260 4 282 1 194 3 226 1 67 1 337 1 357 1 287 2 290 4 120 1 95 1 
361 2 339 2 175 1 265 1 209 7 239 1 210 7 318 52 300 1 268 1 301 8 344 1 240 4 28 2 78 25 215 1 271 7 158 1 303 4 184 7 83 2 12 14 33 8 85 1 310 2 351 27 140 1 16 2 190 2 259 1 38 1 260 4 282 1 194 4 226 1 67 1 337 1 357 1 287 1 290 7 120 1 95 1 
361 2 339 1 340 1 265 2 3 1 209 3 210 3 318 19 300 1 301 3 240 2 28 2 78 10 215 1 271 3 303 4 184 3 83 1 12 6 33 3 310 2 351 9 190 2 260 2 282 1 194 1 67 1 357 1 290 3 95 1 
361 3 339 2 265 1 209 2 239 1 210 2 318 26 300 1 301 2 240 4 28 3 78 12 215 2 271 2 158 1 303 6 184 3 12 4 33 3 310 3 351 14 190 3 140 1 38 1 260 2 282 2 194 2 226 1 67 1 357 1 287 2 290 3 120 1 95 1 
15 1 90 1 274 1 118 1 39 1 342 1 363 1 232 1 64 1 88 1 
164 1 43 1 
15 1 90 1 317 1 118 1 39 1 363 1 64 1 269 1 270 1 
186 1 15 1 151 1 207 1 39 1 363 1 64 1 88 1 356 2 332 1 248 1 90 1 274 1 57 1 118 1 232 1 321 1 309 1 
186 1 15 1 151 1 207 1 39 1 363 1 64 1 88 1 356 2 332 1 248 1 90 1 274 1 57 1 118 1 232 1 321 1 309 1 
186 1 15 1 151 1 207 1 39 1 363 1 64 1 88 1 356 2 332 1 248 1 90 1 274 1 57 1 118 1 232 1 321 1 309 1 
59 1 272 1 294 1 
59 1 272 1 294 1 
241 1 23 1 
59 1 241 1 23 1 
376 1 183 1 
206 2 207 1 208 1 363 1 253 1 212 2 320 2 57 1 183 1 163 2 309 1 13 2 186 1 15 1 164 1 39 1 114 1 224 1 64 1 43 1 356 1 90 1 46 1 21 1 376 1 118 1 49 1 
272 1 294 1 
59 1 241 1 23 1 
361 1 1 1 206 2 75 1 318 2 28 1 179 2 156 1 78 1 213 1 180 1 320 2 303 2 275 2 31 1 133 1 162 2 13 2 36 1 350 1 310 1 373 1 351 1 190 1 111 1 87 1 245 1 17 1 20 1 91 1 201 2 
204 1 137 1 220 1 316 1 236 1 2 1 299 1 367 1 355 1 179 2 213 1 127 1 180 1 129 2 130 1 275 2 58 1 293 1 201 2 
204 1 220 1 316 1 236 1 2 1 299 1 355 1 18 1 179 1 213 1 127 1 180 1 129 2 275 1 58 1 293 1 201 1 
204 1 0 1 52 1 245 1 75 1 126 1 179 1 213 1 319 1 180 1 130 1 146 1 275 1 201 1 
204 1 137 1 220 1 316 1 236 1 2 1 299 1 355 1 179 1 213 1 127 1 180 1 129 2 130 1 275 1 58 1 293 1 201 1 
119 1 
264 1 45 1 332 1 227 1 40 1 358 1 27 1 
176 1 207 1 99 1 77 1 55 1 181 1 57 1 160 1 372 1 326 1 40 1 261 1 332 2 285 1 227 1 358 1 291 1 
207 5 297 1 209 2 99 12 301 2 211 2 213 3 57 5 255 3 11 6 352 6 113 1 261 6 63 1 262 2 167 2 228 2 227 8 358 9 70 2 264 1 314 1 176 4 235 1 73 2 124 3 75 10 266 1 27 1 77 4 367 1 179 3 319 1 370 2 180 4 181 3 275 3 184 2 33 2 84 2 372 4 326 5 40 2 191 1 245 3 280 2 42 2 143 2 332 8 149 2 291 4 290 2 201 3 50 2 
339 1 176 2 235 1 207 1 209 2 239 1 99 6 77 2 301 2 57 1 181 1 184 2 11 5 33 2 372 2 188 1 326 1 352 5 140 1 38 1 260 1 40 2 261 3 280 1 262 1 332 5 194 1 226 1 196 1 227 5 358 8 291 2 290 2 120 1 50 2 
122 1 175 1 176 1 206 1 207 1 238 1 77 1 301 1 344 1 212 1 320 1 57 1 134 1 82 1 163 1 33 2 13 1 372 1 371 1 165 1 262 1 337 1 227 2 263 1 358 2 291 1 379 1 50 2 
264 1 372 1 176 1 40 1 27 1 77 1 332 1 227 1 358 1 291 1 
33 2 352 5 261 5 209 2 99 10 262 1 301 2 167 1 332 5 227 5 358 5 184 2 290 2 50 2 11 5 
332 1 326 1 207 1 57 1 181 1 40 1 
314 2 0 1 176 2 235 2 207 3 75 1 126 1 77 1 302 1 179 4 213 1 319 2 180 1 105 1 181 2 57 3 275 4 185 1 109 1 372 2 86 1 326 4 245 1 63 1 280 2 227 2 358 2 291 2 201 4 
361 1 234 1 206 3 124 1 208 1 75 1 178 1 318 1 76 1 28 1 212 2 78 1 179 1 213 1 319 1 180 1 320 3 303 2 275 1 31 1 134 1 163 2 13 2 36 1 310 1 111 1 190 1 245 1 115 1 286 1 379 2 201 1 
85 1 372 1 352 2 176 1 235 1 40 2 261 2 99 4 77 1 280 1 332 4 227 2 358 1 291 1 11 2 
325 1 15 1 118 1 
325 1 15 1 118 1 
15 1 274 1 118 1 183 1 29 1 
325 1 15 1 118 1 
15 1 118 1 65 1 
15 1 118 1 65 1 
15 1 118 1 65 1 
15 1 118 1 
90 1 64 1 
361 1 339 1 175 1 318 8 210 2 301 1 268 1 28 1 344 1 78 4 303 2 12 2 33 1 85 1 310 1 351 4 190 1 260 1 259 1 194 1 226 1 337 1 357 1 
361 2 339 1 175 1 210 2 318 11 301 1 268 1 344 1 28 2 78 5 271 1 303 4 184 1 277 1 83 1 12 3 33 2 85 1 310 2 351 6 190 2 259 1 260 2 194 1 226 1 337 1 357 1 290 1 
361 3 339 1 175 1 209 2 239 1 318 19 210 3 268 1 301 3 344 1 28 3 78 10 271 1 303 6 184 2 277 1 12 4 33 3 85 1 310 3 351 9 190 3 140 1 259 1 38 1 260 1 194 1 226 1 337 1 357 1 287 1 290 2 120 1 
361 3 339 1 175 1 209 1 239 1 318 17 210 3 268 1 301 2 344 1 28 3 78 7 271 2 303 6 184 2 277 1 12 5 33 3 85 1 310 3 351 10 190 3 140 1 259 1 260 1 38 1 194 1 226 1 337 1 357 1 287 1 290 2 120 1 
361 1 339 1 175 1 318 8 210 2 301 1 268 1 28 1 344 1 78 4 303 2 12 2 33 1 85 1 310 1 351 4 190 1 260 1 259 1 194 1 226 1 337 1 357 1 
361 1 339 1 209 2 239 1 318 12 210 1 301 2 28 1 78 6 271 1 303 2 184 2 12 2 33 2 310 1 351 6 190 1 140 1 260 1 38 1 194 1 226 1 357 1 290 2 120 1 
361 4 339 1 175 1 209 1 239 1 318 18 210 3 268 1 301 2 344 1 28 4 78 8 271 2 303 8 184 2 277 1 12 5 33 3 85 1 310 4 351 10 190 4 140 1 259 1 38 1 260 1 194 1 226 1 337 1 357 1 287 2 290 2 120 1 
361 4 339 1 3 1 209 2 239 1 318 16 210 3 301 2 28 4 78 7 271 3 303 8 184 3 12 6 33 3 310 4 351 9 190 4 140 1 38 1 260 1 194 1 226 1 357 1 287 2 290 3 120 1 
33 1 351 3 175 3 259 1 318 7 210 3 301 1 268 2 344 3 78 4 271 3 337 1 12 6 
361 4 339 1 175 1 3 1 209 1 239 1 318 18 210 3 268 1 301 2 344 1 28 4 78 8 271 1 303 8 184 2 12 4 33 3 85 1 310 4 351 10 190 4 140 1 259 1 38 1 260 1 194 1 226 1 337 1 357 1 287 2 290 2 120 1 
33 1 361 2 85 1 351 4 310 2 190 2 175 1 259 1 318 8 210 2 301 1 268 1 28 2 344 1 78 4 271 1 337 1 303 4 287 1 12 3 
33 1 85 1 351 3 175 1 259 1 210 2 318 6 268 1 301 1 344 1 78 3 45 1 337 1 12 2 
361 1 33 1 310 1 351 2 190 1 209 1 210 1 318 4 301 1 28 1 78 2 271 1 303 2 184 1 290 1 277 1 12 2 
33 1 339 1 351 3 260 2 209 1 210 1 318 7 301 1 78 4 194 1 271 1 184 1 290 1 83 1 12 2 
361 2 123 1 175 2 209 2 318 23 210 5 268 1 301 3 344 2 28 2 78 12 5 1 271 4 303 4 184 2 12 9 83 1 33 3 85 1 351 11 310 2 16 1 190 2 259 1 260 2 194 2 337 1 287 2 290 2 
78 1 260 1 318 1 
194 1 351 1 318 1 
361 1 33 1 310 1 351 3 190 1 209 1 318 6 210 2 301 1 28 1 167 1 78 3 271 1 303 2 184 1 290 1 277 1 12 3 
361 1 339 1 209 2 239 1 318 12 210 1 301 2 28 1 78 6 271 1 303 2 184 2 12 2 33 2 310 1 351 6 190 1 140 1 260 1 38 1 194 1 226 1 357 1 290 2 120 1 
33 1 351 3 175 1 318 6 210 1 301 1 344 1 78 3 271 1 337 1 12 2 
361 1 351 1 123 1 310 1 175 1 190 1 259 1 210 1 318 3 268 1 344 1 28 1 78 2 271 1 287 1 303 2 12 2 
361 1 33 2 310 1 351 5 190 1 175 2 238 1 210 3 318 10 301 2 28 1 344 2 78 5 271 2 337 1 357 1 303 2 12 5 
361 1 33 1 310 1 351 2 190 1 318 2 28 1 271 1 357 1 303 2 290 1 12 1 
361 1 33 1 310 1 351 2 190 1 209 1 210 1 318 4 301 1 28 1 78 2 271 1 357 1 303 2 184 1 290 1 12 2 
361 3 123 1 310 3 351 1 190 3 175 1 3 1 318 3 210 1 28 3 344 1 78 2 271 1 357 1 287 1 303 6 12 2 
361 5 338 1 123 1 339 1 175 3 3 1 209 3 318 34 210 7 268 1 301 5 344 3 28 5 78 18 369 1 271 5 303 10 184 3 277 1 83 1 12 12 33 5 348 1 85 1 310 5 351 16 190 5 259 1 260 4 194 3 337 2 357 1 287 2 290 3 
13 1 320 1 206 1 250 1 208 1 251 1 155 1 
13 1 206 1 221 1 208 1 244 1 155 1 320 1 250 1 182 1 251 1 307 1 202 1 
45 1 179 1 213 1 0 1 319 1 180 1 275 1 245 1 75 1 126 1 201 1 
13 1 234 1 206 2 124 1 208 1 245 1 75 1 74 1 76 1 212 1 179 1 213 1 319 1 180 1 320 2 275 1 201 1 163 1 
13 2 234 1 314 1 53 1 206 2 124 2 208 1 245 2 75 3 74 1 76 1 211 1 212 1 179 1 213 1 180 1 320 2 228 1 229 1 275 1 201 1 82 1 163 2 
13 2 314 1 53 1 206 2 124 2 208 1 245 2 75 3 74 1 76 1 211 1 212 1 179 2 213 1 180 1 144 1 320 2 228 1 229 1 275 2 359 1 201 2 82 1 163 2 
314 1 174 1 207 2 124 1 75 4 211 1 179 3 213 1 319 1 180 1 80 1 57 2 275 3 255 1 326 1 40 1 245 1 42 1 332 1 144 1 228 1 149 1 201 3 
314 1 326 1 207 2 124 1 40 1 245 1 75 4 42 1 211 1 179 3 332 1 213 1 319 1 370 1 180 1 144 1 228 1 57 2 275 3 149 1 201 3 255 1 
179 1 213 1 180 1 275 1 201 1 329 1 
1 1 97 1 113 1 124 1 245 2 354 1 75 3 343 1 367 1 329 1 355 1 179 7 213 2 116 1 319 2 180 3 284 1 275 6 162 1 71 1 201 7 
361 2 234 1 175 1 206 2 124 1 208 2 75 1 74 1 98 1 178 1 318 6 210 2 76 1 301 1 268 1 344 1 28 2 367 1 212 1 78 3 179 1 213 1 180 1 320 2 303 4 275 1 31 2 133 1 163 1 12 2 33 1 13 1 187 1 36 2 85 1 351 3 310 2 190 2 311 1 259 1 245 1 279 1 193 1 115 1 20 1 337 1 201 1 
264 1 176 2 207 3 73 1 75 2 27 1 77 2 179 1 319 1 370 1 57 3 181 1 275 1 255 1 84 1 372 2 326 2 40 1 63 1 42 1 143 1 332 1 227 1 21 1 358 1 149 1 291 2 201 1 
113 1 124 1 245 1 266 1 75 2 367 1 329 1 179 2 213 1 180 2 275 2 149 1 201 2 
0 1 245 1 126 1 75 1 367 1 179 4 213 1 319 1 180 1 144 1 275 4 231 1 201 4 
314 1 124 1 245 1 223 1 75 1 179 2 213 1 180 2 284 1 197 1 106 1 275 2 71 1 201 2 
179 1 213 1 319 1 127 1 180 1 129 1 236 1 2 1 275 1 201 1 
179 2 213 1 180 1 1 1 275 2 245 1 75 1 201 2 17 1 367 1 355 1 
314 1 0 1 1 1 97 1 245 2 126 1 75 3 343 1 367 1 179 5 213 2 319 1 180 2 275 4 231 1 201 5 
314 1 0 1 1 1 245 2 126 1 75 3 343 1 367 1 179 5 213 2 319 1 180 2 275 4 231 1 150 1 201 5 
13 1 206 2 124 1 208 1 245 1 75 1 74 1 76 1 212 1 179 1 213 1 319 1 180 1 320 2 275 1 359 1 201 1 163 1 
314 1 113 1 124 1 245 1 354 1 75 1 179 1 213 1 180 2 284 1 275 1 71 1 201 1 
172 1 189 1 208 1 377 1 141 1 
172 2 51 1 189 2 53 1 207 2 208 1 40 1 298 1 42 1 141 1 332 1 21 1 229 1 57 2 131 1 377 2 218 1 82 1 233 1 
13 1 172 1 373 1 189 1 206 1 87 1 141 1 156 1 320 1 
131 1 298 1 141 1 
45 1 61 1 328 1 24 1 
157 1 217 1 61 1 328 1 24 1 219 1 44 1 
273 1 136 1 44 1 
25 1 258 1 243 1 61 1 328 1 44 3 330 1 157 3 217 1 171 2 219 1 24 1 
157 2 217 1 61 1 328 1 169 1 94 1 24 1 219 1 44 2 
25 1 129 1 315 1 316 1 157 1 375 1 217 1 2 1 61 1 219 1 44 1 
25 1 157 1 217 1 61 1 328 1 219 1 44 1 
25 1 157 1 217 1 328 2 24 1 219 1 44 1 
25 1 242 1 173 1 61 1 328 1 4 1 44 2 157 2 217 2 219 2 
25 1 328 1 61 2 44 3 345 1 157 3 217 1 375 1 198 1 288 1 169 2 24 1 219 1 
25 1 316 1 2 1 61 1 328 1 44 2 127 1 129 2 157 2 216 1 217 1 169 1 58 1 24 1 219 1 
121 1 25 1 328 1 61 2 44 4 157 4 217 2 375 1 288 1 169 2 94 1 24 1 219 2 
25 1 157 1 217 1 61 1 328 1 24 1 219 1 44 1 
243 1 328 2 61 3 44 4 330 1 157 4 217 1 375 1 147 1 288 1 169 2 171 1 24 2 219 1 
25 1 14 1 61 1 328 1 44 2 249 1 157 2 217 1 69 1 169 1 219 1 24 1 
25 1 243 2 61 1 328 1 44 3 330 1 157 3 168 1 217 1 171 2 219 1 24 1 
153 1 61 2 192 1 108 2 
25 1 157 1 217 1 341 1 219 1 44 1 
345 1 25 1 157 2 217 1 61 1 328 1 169 1 24 1 219 1 44 2 
254 1 
25 1 157 1 217 1 61 1 328 1 24 1 219 1 44 1 
25 1 328 1 61 1 44 3 345 1 157 3 217 1 169 1 171 1 219 1 24 1 
375 1 147 1 288 1 61 1 
61 1 328 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
110 6 51 3 228 1 176 2 80 2 274 1 316 2 253 2 360 1 294 1 206 9 182 1 235 1 34 1 281 1 212 2 121 1 282 1 242 2 15 9 73 1 74 5 196 1 145 1 352 2 287 4 23 1 220 1 
110 6 51 3 176 2 228 1 80 2 274 1 316 2 253 2 360 1 294 1 206 9 182 1 235 1 34 1 281 1 212 2 121 1 282 1 242 2 15 9 73 1 74 5 196 1 145 1 352 2 287 4 23 1 220 1 
110 7 51 4 176 2 228 1 80 2 274 1 316 2 253 2 360 1 294 1 206 10 182 1 235 1 34 1 281 1 212 2 121 1 282 1 242 2 15 10 73 1 74 6 196 1 145 1 352 2 287 5 23 1 220 1 
110 4 51 2 176 2 228 1 80 1 274 1 316 2 253 2 360 1 294 1 206 7 182 1 235 1 34 1 212 2 121 1 282 1 242 2 15 7 73 1 74 4 196 1 145 1 352 2 287 3 23 1 220 1 
281 1 212 1 110 3 51 1 176 1 80 2 242 1 316 1 15 4 274 1 206 4 74 3 145 1 235 1 352 1 287 2 34 1 220 1 
200 1 47 1 212 1 48 1 242 1 316 1 15 2 253 1 294 1 206 2 181 1 74 1 235 1 352 1 23 1 34 1 220 1 
212 2 110 1 121 1 51 1 316 2 15 3 253 1 206 3 74 2 235 1 287 1 34 1 220 1 
110 7 51 3 53 1 176 1 80 2 316 2 274 1 253 1 360 1 206 9 235 1 34 1 212 2 281 1 121 1 242 1 15 9 73 1 331 1 74 5 145 1 287 4 352 1 220 1 
110 7 51 3 53 1 176 1 80 2 316 2 274 1 253 1 360 1 206 9 235 1 34 1 212 2 281 1 121 1 242 1 15 9 73 1 331 1 74 5 145 1 287 4 352 1 220 1 
378 1 333 1 343 1 
292 1 78 2 343 1 
198 2 361 1 189 1 94 2 32 2 14 2 269 2 67 2 
221 1 199 1 198 3 171 1 289 1 290 1 202 1 151 1 204 2 56 1 230 1 361 1 32 2 135 1 211 2 298 1 10 1 65 1 36 1 186 1 38 2 303 1 189 1 139 1 94 3 14 2 214 1 67 2 370 1 16 1 347 1 42 2 374 1 166 2 348 1 380 1 269 2 
198 1 218 1 31 1 189 1 94 1 32 1 14 1 269 1 270 1 67 1 
198 1 153 1 223 1 92 1 218 1 162 1 320 1 94 1 132 1 333 1 269 1 252 1 209 1 343 1 
198 1 223 1 92 2 162 2 94 1 333 1 14 1 343 1 67 1 153 1 218 1 320 1 32 1 269 1 209 1 
92 1 84 1 369 1 162 1 283 1 
26 1 92 2 84 1 162 2 333 1 343 1 283 1 280 1 
92 1 162 1 283 1 
198 1 92 1 162 1 77 1 189 1 94 1 14 1 67 1 84 1 218 1 31 1 32 1 269 1 270 1 
343 1 
0 1 92 2 84 1 162 2 333 1 343 1 283 1 280 1 
92 5 66 1 37 1 108 1 162 5 273 1 333 1 343 1 283 2 141 1 58 1 84 2 118 2 144 1 207 1 62 2 183 1 280 1 321 2 
199 1 198 2 289 1 213 1 38 1 202 1 1 1 94 2 151 1 54 1 14 1 370 1 204 1 347 1 42 1 374 1 380 1 32 1 269 1 135 1 
361 1 378 1 
198 2 94 2 239 1 14 1 67 1 361 2 85 1 32 1 269 2 
368 1 275 1 1 1 
198 1 199 1 289 1 38 1 202 1 94 1 151 1 204 1 370 1 347 1 361 1 18 1 42 1 374 1 380 1 135 1 
198 5 213 1 94 5 239 1 54 2 14 4 40 1 67 1 361 1 247 1 132 1 32 4 119 1 269 5 
198 2 327 1 218 1 94 2 32 2 14 2 269 2 270 1 
198 3 361 1 94 3 54 1 32 3 14 3 269 3 67 1 
198 1 218 1 94 1 32 1 14 1 269 1 270 1 
198 1 218 1 85 1 94 1 239 1 32 1 14 1 269 1 67 1 
221 1 199 1 198 4 223 1 289 1 290 1 202 1 151 1 54 1 204 1 56 1 153 1 361 1 320 1 254 1 32 3 135 1 209 1 211 1 298 1 8 1 65 1 186 1 213 1 92 1 162 1 38 1 303 1 189 1 139 1 239 1 94 4 214 1 14 3 67 2 370 1 347 1 42 1 374 1 166 2 218 1 348 1 380 1 269 3 
198 2 361 1 247 1 132 1 94 2 32 1 14 1 54 1 269 2 
198 3 223 1 213 1 92 1 162 1 239 1 94 3 54 2 14 3 67 1 343 1 153 1 218 1 320 1 276 1 254 1 32 3 269 3 209 1 
198 2 368 1 1 1 239 1 94 2 54 1 14 2 67 1 32 2 269 2 
198 1 199 1 289 1 38 1 202 1 94 1 151 1 204 1 370 1 347 1 361 1 42 1 374 1 380 1 135 1 
198 1 199 1 289 1 357 1 38 1 94 1 227 1 151 1 204 1 370 1 347 1 361 1 42 1 380 1 135 1 
221 1 172 1 290 1 49 1 314 1 1 2 230 2 275 2 134 1 298 1 211 4 65 1 120 1 91 1 186 1 368 2 163 1 303 2 139 1 95 1 71 1 328 1 166 2 379 1 
198 1 327 1 218 1 320 1 94 1 32 1 14 1 269 1 
296 1 178 1 
296 1 178 1 
13 1 353 1 
13 1 353 1 
13 1 353 1 
296 1 233 1 178 1 
296 1 233 1 178 1 
334 1 296 1 178 1 
296 2 13 1 102 1 103 1 178 2 353 1 
296 1 233 1 178 1 
296 1 263 1 178 1 
296 1 263 1 178 1 
296 1 263 1 178 1 
198 2 201 1 315 1 359 1 226 1 115 1 178 1 152 1 334 1 361 1 296 1 32 2 33 1 9 1 299 1 92 1 162 1 341 1 94 2 14 2 165 1 98 1 269 2 105 1 
355 1 299 2 338 1 92 2 162 2 315 2 341 3 115 2 305 1 343 1 178 2 165 1 82 1 296 2 329 1 102 1 33 2 88 1 312 2 
176 1 352 1 242 1 
48 1 352 1 242 1 
48 1 109 1 234 1 169 1 176 2 242 3 
205 1 48 1 109 1 234 1 176 1 242 2 
48 1 109 2 234 1 176 1 242 2 
197 2 25 1 49 1 108 1 201 1 292 1 359 1 332 1 78 3 114 2 333 1 152 1 317 1 58 2 84 4 118 1 62 1 207 3 280 1 321 1 120 1 91 1 260 1 92 5 162 5 95 1 283 1 343 2 126 1 248 1 146 2 170 1 
197 6 25 3 356 1 49 3 201 4 108 1 292 3 332 2 78 9 114 6 333 1 58 6 84 7 363 1 118 2 62 2 207 8 280 1 321 2 120 3 91 3 260 1 92 9 369 5 162 9 190 1 95 3 283 6 343 5 72 1 126 2 144 1 76 5 104 1 288 1 
197 2 25 1 49 1 201 1 292 2 332 1 78 4 114 2 333 1 84 2 58 2 118 1 62 1 207 3 321 1 120 1 91 1 92 3 162 3 95 1 343 3 126 1 144 1 248 1 146 1 170 1 
197 4 25 2 49 2 201 2 292 3 332 1 78 7 114 4 333 1 84 3 58 4 363 1 118 1 62 1 207 5 321 1 120 2 91 2 92 4 162 4 95 2 343 4 72 1 126 1 144 1 248 1 146 2 170 1 288 1 
347 1 107 1 378 1 
347 1 251 1 
21 1 
199 1 347 1 135 1 
347 1 319 1 
199 1 347 1 
199 1 347 3 107 2 7 1 342 1 135 1 
172 2 91 1 49 1 339 1 173 1 272 1 303 3 112 2 2 1 71 3 230 4 131 1 267 1 249 1 286 1 255 1 211 7 
172 2 91 1 49 1 339 1 173 1 272 1 303 3 112 2 2 1 71 3 230 4 131 1 267 1 249 1 286 1 255 1 211 7 
172 2 91 1 49 1 339 1 173 1 272 1 303 3 112 2 2 1 71 3 83 1 230 4 131 1 267 1 249 1 286 1 255 1 211 7 
172 5 221 1 25 3 49 4 272 1 173 2 112 3 2 5 230 16 131 1 154 1 133 4 279 1 255 2 298 1 211 31 65 1 120 3 91 4 339 1 303 15 139 1 241 1 95 3 372 1 71 10 97 1 346 1 124 3 166 2 20 1 267 2 249 1 286 2 
221 2 172 3 49 1 358 1 173 1 112 2 2 1 230 5 131 1 279 1 255 1 298 2 211 9 65 2 91 1 339 1 303 4 139 2 71 4 166 4 267 1 286 1 249 1 310 1 
48 1 224 1 110 1 111 1 176 1 204 1 316 1 253 1 362 1 206 2 231 1 235 1 34 1 136 1 212 1 38 1 39 1 238 1 242 2 15 2 370 1 41 1 125 1 42 1 219 1 74 1 169 1 380 1 352 1 220 1 
48 1 224 1 110 2 176 1 129 1 204 1 316 1 253 1 362 1 206 3 231 1 34 1 136 1 212 1 138 1 38 1 238 1 242 2 15 3 370 1 41 1 125 1 42 1 219 1 74 1 169 1 349 1 380 1 352 1 220 1 
48 1 224 1 110 2 129 1 176 1 204 1 253 1 362 1 206 2 34 1 136 1 38 1 242 2 15 2 370 1 41 1 125 1 42 1 219 1 74 1 169 1 349 1 380 1 352 1 220 1 
199 1 289 1 224 2 127 1 204 1 316 1 253 2 362 2 206 1 180 1 35 1 212 1 138 1 38 1 370 1 15 1 306 1 347 1 42 1 100 1 219 2 380 1 311 1 
48 1 224 1 111 1 176 1 129 1 204 1 316 1 253 1 362 1 206 1 231 1 235 1 136 1 212 1 38 1 238 1 242 2 15 1 370 1 41 1 125 1 42 1 219 1 169 1 380 1 352 1 
261 1 
199 1 198 1 289 2 108 1 292 2 149 1 333 1 252 1 116 2 293 1 204 2 153 1 58 2 5 2 118 1 60 4 155 2 207 2 62 1 64 1 209 1 161 1 162 5 343 2 347 1 218 1 126 1 269 1 223 1 127 1 78 2 179 2 29 1 229 1 180 1 320 1 132 1 280 3 87 1 321 1 322 1 92 5 38 2 188 1 94 1 283 6 243 1 370 1 244 1 42 2 330 2 285 2 380 1 381 2 46 1 
198 1 0 1 223 1 252 1 153 1 320 1 60 2 132 1 209 1 280 1 87 1 322 1 161 1 92 3 188 1 162 3 94 1 283 2 244 1 218 1 269 1 381 1 
198 1 0 1 223 1 333 1 252 1 116 1 153 1 320 1 60 3 132 1 209 1 280 1 87 1 322 1 161 1 92 3 188 1 162 3 94 1 283 1 343 1 244 1 218 1 269 1 
198 1 0 1 223 1 333 1 252 1 116 1 153 1 320 1 60 3 132 1 209 1 280 1 87 1 322 1 161 1 92 3 188 1 162 3 94 1 283 2 343 1 244 1 218 1 330 1 269 1 381 1 
198 1 0 1 108 1 292 2 333 5 252 1 116 4 153 1 58 1 118 1 5 2 60 6 155 2 157 1 62 1 207 1 209 1 257 1 160 1 161 1 162 5 343 5 218 1 266 1 269 1 223 1 29 1 179 2 229 1 320 1 132 1 280 3 87 1 322 1 321 1 92 5 188 1 94 1 283 7 140 1 244 1 330 4 285 2 381 4 
198 1 108 1 292 2 333 1 252 1 116 2 153 1 58 1 118 1 5 2 60 4 155 2 62 1 207 1 209 1 161 1 162 4 343 2 218 1 269 1 223 1 78 2 29 1 179 2 229 1 320 1 132 1 280 2 87 1 322 1 321 1 92 4 188 1 94 1 283 4 244 1 285 2 330 2 381 2 46 1 
198 1 223 1 108 1 292 2 333 1 252 1 116 2 179 2 29 1 229 1 153 1 58 1 5 2 118 1 320 1 60 4 155 2 132 1 207 1 62 1 209 1 280 2 87 1 160 1 322 1 321 1 161 1 92 4 188 1 162 4 94 1 343 1 283 4 140 1 244 1 218 1 266 1 330 2 285 2 269 1 381 2 
198 1 223 1 108 1 292 2 333 1 252 1 116 2 179 2 29 1 229 1 153 1 58 1 5 2 118 1 320 1 60 4 155 2 132 1 207 1 62 1 209 1 280 2 87 1 160 1 322 1 321 1 161 1 92 4 188 1 162 4 94 1 343 1 283 4 140 1 244 1 218 1 266 1 330 2 285 2 269 1 381 2 
198 1 223 1 108 1 225 1 78 2 333 1 177 2 252 1 116 2 3 2 29 1 153 1 58 1 5 2 118 1 320 1 60 4 155 2 132 1 207 1 62 1 209 1 280 2 87 1 160 1 322 1 321 1 161 1 92 4 188 1 162 4 94 1 343 1 283 4 70 1 244 1 218 1 330 2 269 1 381 2 24 1 
198 1 223 1 108 1 292 2 333 1 252 1 116 3 179 2 29 1 229 1 153 1 58 1 5 2 118 1 320 1 60 5 155 2 132 1 207 1 62 1 209 1 280 2 87 1 257 1 160 1 321 1 322 1 161 1 92 4 188 1 162 4 94 1 343 1 283 5 140 1 244 1 266 1 218 1 285 2 330 3 269 1 381 3 
198 1 223 1 108 1 292 2 333 1 252 1 116 3 179 2 29 1 229 1 153 1 58 1 5 2 118 1 320 1 60 5 155 2 132 1 207 1 62 1 209 1 280 2 87 1 257 1 160 1 321 1 322 1 161 1 92 4 188 1 162 4 94 1 343 1 283 5 140 1 244 1 266 1 218 1 285 2 330 3 269 1 381 3 
198 1 108 1 333 1 252 1 116 2 3 2 153 1 58 1 118 1 5 2 60 4 155 2 62 1 207 1 209 1 161 1 162 4 343 1 218 1 269 1 24 1 223 1 78 2 177 2 29 1 320 1 132 1 280 2 87 1 322 1 321 1 92 4 188 1 94 1 283 4 244 1 330 2 381 2 46 1 
221 1 172 2 290 1 49 1 1 1 112 1 230 3 361 2 275 1 131 1 298 1 211 6 65 1 186 1 91 1 368 1 339 1 163 1 303 3 139 1 71 2 166 2 378 1 267 1 286 1 249 1 
172 1 221 2 25 2 290 2 49 2 1 11 2 1 56 1 230 8 361 1 275 11 156 1 278 1 133 3 298 2 211 14 10 1 65 2 120 1 186 1 91 1 368 4 303 6 325 1 139 2 95 2 71 2 97 1 123 1 124 3 166 4 20 1 351 1 
199 1 221 1 198 2 289 1 290 1 202 1 151 1 54 1 204 1 56 1 230 1 361 1 32 1 135 1 210 1 298 1 211 2 10 1 65 1 186 1 213 1 368 1 38 1 303 1 94 2 139 1 14 1 370 1 123 1 347 1 42 1 18 1 374 1 375 1 166 2 19 1 380 1 269 1 
198 3 199 2 289 1 290 3 49 3 148 1 50 1 202 2 112 1 1 7 54 1 151 2 2 4 204 3 56 1 298 3 211 20 10 1 65 3 120 2 213 1 339 1 303 10 14 1 214 2 71 8 123 1 347 2 166 6 267 1 269 1 172 4 221 3 25 2 174 2 129 1 230 10 361 2 275 7 131 1 32 1 135 2 366 2 137 2 91 3 186 3 368 7 93 2 38 3 139 3 94 3 95 2 370 2 326 1 42 3 374 2 249 1 286 1 380 2 
198 1 221 2 199 2 289 2 290 2 127 1 27 1 129 1 54 1 204 8 56 1 230 1 180 1 32 1 208 1 236 1 298 2 211 2 10 1 65 2 186 2 39 1 38 8 163 1 303 1 94 1 139 2 14 1 370 2 191 1 16 2 347 3 42 7 166 4 377 1 45 1 380 2 75 1 269 1 
172 1 221 1 198 1 25 1 290 1 49 1 1 1 230 1 275 1 32 1 298 1 158 1 211 3 65 1 120 1 186 1 91 1 368 1 303 2 239 1 139 1 94 1 14 1 95 1 67 1 71 1 123 1 166 2 269 1 
221 1 65 1 186 1 290 1 368 1 49 1 1 1 163 1 139 1 2 1 95 1 71 1 230 2 275 1 166 2 134 1 211 2 298 1 
172 1 221 1 65 1 120 1 186 1 290 1 91 1 368 1 1 1 163 1 303 2 139 1 71 1 275 1 166 2 328 1 211 2 298 1 
172 1 221 1 65 1 120 1 25 1 91 1 186 1 290 1 368 2 49 1 303 2 1 2 163 1 139 1 2 1 95 1 71 2 230 2 275 2 166 2 211 4 298 1 
221 1 65 1 186 1 290 1 368 1 49 1 1 1 139 1 2 1 95 1 71 1 230 2 275 1 166 2 208 1 134 1 211 2 298 1 
172 1 221 1 65 1 120 1 186 1 290 1 91 1 368 1 1 1 303 2 139 1 71 1 275 1 166 2 328 1 208 1 211 2 298 1 
172 1 221 1 65 1 120 1 25 1 91 1 186 1 290 1 368 2 49 1 303 2 1 2 139 1 2 1 95 1 71 2 230 2 275 2 166 2 208 1 211 4 298 1 
172 1 221 1 65 1 120 1 25 1 91 1 186 1 290 1 368 2 49 1 303 2 1 2 139 1 2 1 95 1 71 2 230 2 275 2 166 2 298 1 211 4 
199 1 198 1 221 1 289 1 290 1 202 1 151 1 204 1 56 1 230 1 361 1 135 1 211 2 298 1 10 1 65 1 186 1 38 1 303 1 94 1 139 1 214 1 370 1 347 1 42 1 374 1 166 2 380 1 
199 1 198 1 221 1 289 1 357 1 290 1 151 1 227 1 204 1 56 1 230 1 361 1 135 1 211 2 298 1 10 1 65 1 186 1 323 1 38 1 303 1 94 1 139 1 370 1 347 1 42 1 166 2 380 1 
172 1 221 1 65 1 120 1 25 1 91 1 186 1 290 1 368 2 49 1 303 2 1 2 139 1 2 1 95 1 71 2 123 1 230 2 275 2 166 2 211 4 298 1 
172 1 199 1 198 1 221 1 25 1 290 1 49 1 202 1 1 2 151 1 2 1 204 1 230 2 275 2 135 1 211 4 298 1 366 1 65 1 120 1 91 1 186 1 368 2 38 1 39 1 303 2 94 1 139 1 214 1 95 1 370 1 71 2 347 1 42 1 374 1 166 2 380 1 
221 1 198 1 25 1 290 1 49 1 1 1 2 1 230 2 275 1 32 1 298 1 211 3 65 1 120 1 91 1 186 1 368 1 303 1 239 1 139 1 94 1 14 1 95 1 67 1 122 1 71 1 123 1 166 2 269 1 
172 4 221 3 25 4 49 5 113 1 112 1 203 1 2 4 81 1 230 20 131 1 86 1 133 4 279 1 256 4 298 3 211 41 89 2 65 3 120 4 91 5 339 1 340 1 324 1 303 21 139 3 95 4 216 1 68 1 96 1 71 8 264 1 97 3 142 1 124 3 195 1 166 6 20 1 267 1 249 1 286 1 310 1 354 1 
172 4 221 4 25 4 49 5 113 1 112 1 203 1 2 3 81 1 230 20 131 1 86 1 133 4 279 2 256 4 298 4 211 38 89 2 65 4 120 3 91 4 339 1 340 1 324 1 303 18 139 4 95 4 216 1 68 1 96 1 71 7 264 1 97 3 142 1 124 3 195 1 166 8 20 1 267 1 249 1 286 1 310 1 354 1 
172 7 221 2 25 7 49 8 112 1 203 1 2 7 81 1 230 27 131 1 86 1 133 4 279 1 256 4 298 2 211 52 89 1 65 2 120 7 91 8 339 1 340 1 324 1 303 25 325 2 139 2 95 7 216 1 68 1 96 1 71 14 97 2 142 1 124 4 195 1 166 4 20 2 267 1 249 1 286 1 310 1 354 1 
172 3 221 2 25 3 49 3 113 1 203 1 2 3 81 2 230 9 133 2 256 2 298 2 211 19 89 1 65 2 120 3 12 1 91 3 340 1 303 10 139 2 95 3 96 1 71 6 97 1 124 1 166 4 20 1 310 1 354 1 
172 2 221 3 25 3 49 3 203 1 2 2 81 1 230 14 86 1 133 2 279 2 256 4 298 3 211 26 89 2 65 3 120 2 91 2 340 1 324 1 303 12 139 3 95 3 216 1 68 1 96 2 71 4 97 2 124 2 142 1 166 6 195 1 310 1 354 1 
222 1 299 1 338 1 296 1 315 1 115 1 102 1 305 1 33 1 178 1 
334 1 9 1 
299 1 318 1 232 1 296 1 315 1 22 1 115 1 33 1 178 1 
90 1 233 1 
309 1 263 1 103 1 
355 1 299 1 338 1 92 1 162 1 315 1 341 2 115 1 305 1 343 1 178 1 165 1 82 1 296 1 102 1 33 1 88 1 312 1 
355 1 299 1 338 1 92 1 162 1 315 1 341 2 115 1 305 1 343 1 178 1 165 1 82 1 296 1 102 1 33 1 88 1 312 1 
355 1 299 1 338 1 92 1 162 1 315 1 341 2 115 1 305 1 343 1 178 1 165 1 82 1 296 1 102 1 33 1 88 1 312 1 
90 1 233 1 103 1 
90 1 233 1 103 1 
309 1 263 1 
309 1 263 1 103 1 
98 1 226 1 
198 2 201 1 315 1 359 1 226 1 175 1 115 1 178 1 152 1 82 1 334 1 361 1 84 1 296 1 32 2 33 1 9 1 299 1 92 1 162 1 94 2 341 1 14 2 98 1 269 2 105 1 312 1 
199 1 221 1 198 2 290 1 271 1 204 2 56 1 230 1 297 1 298 1 211 2 10 1 65 1 186 1 38 2 303 1 94 2 139 1 370 1 191 1 16 2 123 1 347 1 245 1 42 2 166 2 45 1 168 1 380 1 268 1 269 2 
48 1 38 2 39 1 176 1 129 1 215 1 242 2 344 1 370 1 204 2 41 1 125 1 42 2 231 1 219 1 169 1 61 1 380 1 352 1 
48 1 38 1 176 1 129 1 215 1 242 2 204 1 370 1 41 1 99 1 125 1 42 1 231 1 219 1 169 1 380 1 352 1 
199 1 106 1 289 1 127 1 38 1 370 1 204 1 347 1 42 1 180 1 219 1 61 1 380 1 311 1 
48 1 38 1 176 1 129 1 215 1 242 2 344 1 370 1 204 1 41 1 125 1 42 1 231 1 219 1 169 1 61 1 380 1 352 1 
69 1 
58 1 66 1 37 1 378 1 207 1 333 1 343 1 
108 1 292 1 78 1 333 1 179 1 229 1 58 1 118 1 207 1 62 1 280 1 321 1 92 1 162 1 343 2 283 1 285 1 
199 3 197 6 289 1 147 2 291 2 49 2 108 4 107 2 292 6 114 6 333 2 293 1 204 3 57 1 58 8 118 4 335 1 207 9 62 4 7 1 209 2 159 2 120 2 66 1 162 5 262 1 304 2 343 8 347 10 126 2 350 2 25 2 78 12 130 2 319 2 135 3 280 3 321 4 365 1 187 2 91 2 92 5 37 1 93 2 39 1 38 3 95 2 283 5 370 4 42 3 194 1 44 2 380 3 251 3 
197 5 25 2 49 2 108 2 292 3 78 6 114 5 333 2 293 1 130 1 58 5 118 2 86 1 207 8 133 1 62 2 280 1 321 2 120 2 187 2 91 2 237 1 92 1 162 1 240 1 95 2 283 1 343 5 216 1 68 1 97 1 124 1 142 1 195 1 126 1 
198 1 49 2 108 1 77 1 130 1 58 2 118 1 31 1 62 1 207 2 32 1 321 1 187 2 91 1 92 1 162 1 189 1 94 1 14 1 67 1 371 1 218 1 266 1 267 1 286 1 249 1 269 1 270 1 
37 1 108 1 66 1 333 1 343 1 58 1 118 1 62 1 207 1 321 1 
197 5 25 2 120 2 187 2 91 2 49 2 93 1 292 5 78 10 114 5 95 2 343 5 130 1 58 5 207 5 
92 1 162 1 333 1 343 1 283 1 280 1 
199 1 289 2 108 1 127 1 149 1 293 2 204 4 57 2 58 2 118 2 180 1 62 2 207 2 280 2 321 2 185 1 92 3 38 4 162 3 262 1 283 4 370 1 243 1 347 1 42 4 167 1 126 2 144 1 380 1 
198 3 199 1 221 1 289 1 290 1 202 1 151 1 204 1 56 1 361 1 32 2 135 1 211 1 298 1 65 1 186 1 38 1 303 1 189 1 139 1 94 3 14 2 214 1 67 2 370 1 347 1 42 1 374 1 166 2 348 1 380 1 269 2 
197 2 108 1 292 2 112 1 78 4 114 2 333 2 343 4 293 1 58 2 118 1 126 1 62 1 207 1 321 1 
115 1 164 1 33 1 
115 1 164 1 33 1 
338 1 302 1 226 1 115 1 33 1 
115 1 164 1 33 1 
308 1 115 1 33 1 
308 1 115 1 33 1 
308 1 115 1 33 1 
115 1 33 1 
296 1 178 1 
221 1 172 2 49 1 112 1 230 4 131 1 133 1 211 8 298 1 65 1 91 1 339 1 303 4 139 1 71 2 97 1 124 1 195 1 166 2 267 1 286 1 249 1 310 1 
172 2 221 2 25 1 49 2 112 1 2 1 230 6 131 1 133 2 211 11 298 2 65 2 301 1 91 1 339 1 303 5 139 2 95 1 71 3 97 1 124 1 195 1 166 4 20 1 267 1 249 1 286 1 310 1 
221 3 172 3 25 2 49 3 112 1 2 1 230 9 131 1 86 1 133 1 279 1 211 19 298 3 65 3 301 1 120 2 91 3 339 1 303 10 139 3 95 2 216 1 68 1 71 4 97 1 124 1 142 1 195 1 166 6 267 1 249 1 286 1 310 1 
221 3 172 3 25 2 49 3 112 1 2 2 230 10 131 1 86 1 133 1 279 1 211 17 298 3 65 3 301 1 120 1 91 2 339 1 303 7 139 3 95 2 68 1 216 1 71 5 97 1 124 1 142 1 195 1 166 6 267 1 249 1 286 1 310 1 
221 1 172 2 49 1 112 1 230 4 131 1 133 1 211 8 298 1 65 1 91 1 339 1 303 4 139 1 71 2 97 1 124 1 195 1 166 2 267 1 286 1 249 1 310 1 
221 1 172 1 25 2 49 2 2 1 230 6 86 1 133 1 211 12 298 1 65 1 120 2 91 2 303 6 139 1 95 2 68 1 216 1 71 2 97 1 124 1 142 1 195 1 166 2 310 1 
221 4 172 3 25 2 49 3 112 1 2 2 230 10 131 1 86 1 133 1 279 2 211 18 298 4 65 4 301 1 120 1 91 2 339 1 303 8 139 4 95 2 216 1 68 1 71 5 97 1 124 1 142 1 195 1 166 8 267 1 249 1 286 1 310 1 
221 4 172 3 25 3 49 3 113 1 2 3 230 9 86 1 133 1 279 2 211 16 298 4 65 4 120 2 91 2 303 7 139 4 95 3 216 1 68 1 71 6 97 1 124 1 142 1 195 1 166 8 310 1 
172 3 91 1 339 1 49 1 303 4 2 3 71 6 230 3 131 2 267 3 286 3 249 1 211 7 
221 4 172 3 25 2 49 3 112 1 113 1 2 1 230 10 131 1 86 1 133 1 279 2 211 18 298 4 65 4 120 1 91 2 339 1 303 8 139 4 95 2 216 1 68 1 71 4 97 1 124 1 142 1 195 1 166 8 267 1 249 1 286 1 310 1 
172 2 221 2 65 2 91 1 49 1 339 1 112 1 303 4 139 2 2 1 71 3 230 4 166 4 131 1 267 1 249 1 286 1 279 1 211 8 298 2 
172 2 91 1 339 1 49 1 112 1 303 3 71 2 230 3 131 1 378 1 267 1 286 1 249 1 211 6 
172 1 221 1 65 1 120 1 301 1 25 1 91 1 49 1 303 2 139 1 2 1 95 1 71 2 230 2 166 2 298 1 211 4 
172 1 120 1 25 1 91 1 49 1 303 4 2 1 95 1 71 2 97 1 124 1 230 3 20 1 133 2 211 7 
172 5 221 2 25 2 49 3 112 1 2 4 230 11 131 1 156 1 133 2 279 2 211 23 298 2 65 2 120 2 91 3 339 1 303 12 325 1 139 2 95 2 71 9 373 1 124 2 166 4 20 1 267 2 249 1 286 2 
303 1 133 1 211 1 
230 1 124 1 211 1 
65 1 221 1 172 2 301 1 25 1 120 1 91 1 49 1 93 1 303 3 139 1 2 1 95 1 71 3 230 3 166 2 298 1 211 6 
221 1 172 1 25 2 49 2 2 1 230 6 86 1 133 1 211 12 298 1 65 1 120 2 91 2 303 6 139 1 95 2 68 1 216 1 71 2 97 1 124 1 142 1 195 1 166 2 310 1 
172 1 91 1 49 1 303 3 2 1 71 2 230 3 267 1 249 1 286 1 211 6 
172 1 221 1 65 1 339 1 303 2 139 1 2 1 71 2 373 1 230 1 131 1 166 2 267 1 286 1 279 1 211 3 298 1 
65 1 221 1 172 3 91 2 49 2 303 5 139 1 2 2 371 1 71 5 230 5 166 2 267 2 286 2 249 1 310 1 298 1 211 10 
221 1 65 1 49 1 139 1 2 1 95 1 71 1 230 2 166 2 310 1 298 1 211 2 
172 1 221 1 65 1 120 1 25 1 91 1 49 1 303 2 139 1 2 1 95 1 71 2 230 2 166 2 310 1 298 1 211 4 
221 3 65 3 172 1 113 1 303 2 139 3 2 1 373 1 71 2 230 1 166 6 267 1 286 1 279 1 310 1 211 3 298 3 
221 5 172 7 25 3 49 5 112 1 113 1 2 5 230 16 131 1 133 4 279 2 298 5 211 34 65 5 301 1 120 3 91 5 339 1 303 18 139 5 241 1 95 3 373 1 372 1 71 12 97 1 346 1 124 3 166 10 20 1 267 3 249 2 286 3 310 1 
198 1 345 1 361 1 247 1 94 1 132 1 269 1 
11 1 198 1 94 1 345 1 17 1 361 1 4 1 43 1 284 1 247 1 132 1 269 1 
199 1 347 1 289 1 42 1 127 1 180 1 38 1 378 1 380 1 370 1 204 1 
199 1 198 2 289 1 38 1 94 2 151 1 54 1 14 1 370 1 204 1 347 1 361 1 42 1 374 1 32 1 380 1 269 1 135 1 
198 2 199 2 54 1 151 1 204 1 153 1 57 1 361 1 319 1 320 1 32 2 135 2 159 1 38 1 94 2 14 1 370 1 347 3 42 1 374 1 218 1 380 1 269 2 
198 2 199 2 227 1 54 1 151 1 204 2 153 1 57 1 361 1 319 1 320 1 32 2 135 2 159 1 38 2 94 2 14 1 370 1 347 3 42 2 376 1 218 1 380 1 269 2 
199 1 289 1 107 1 333 1 204 3 57 1 319 1 63 1 135 1 209 1 159 1 92 2 38 3 162 2 283 1 343 1 370 1 347 4 42 3 376 1 380 1 250 1 251 1 
199 1 289 1 147 1 92 2 107 1 162 2 38 3 333 1 343 1 283 1 370 1 204 3 57 1 347 4 42 3 376 1 319 1 380 1 209 1 135 1 159 1 251 1 
42 1 38 1 380 1 75 1 370 1 204 1 
199 2 258 1 289 2 39 1 27 1 38 7 129 1 204 7 370 3 191 1 16 1 117 1 347 3 42 6 59 1 377 1 7 1 380 2 75 1 135 1 236 1 
198 2 199 1 290 2 49 1 202 1 112 1 1 1 54 1 151 1 204 1 298 2 211 6 65 2 339 1 303 3 214 1 14 1 71 2 123 1 347 1 166 4 267 1 269 1 221 2 172 2 230 3 361 2 275 1 131 1 32 1 135 1 366 1 137 1 186 2 91 1 368 1 38 1 39 1 139 2 94 2 370 1 245 1 42 1 374 1 380 1 286 1 249 1 
289 1 147 1 291 1 108 2 107 1 333 1 204 1 58 1 84 1 118 2 207 1 62 2 209 1 280 1 321 2 92 3 66 1 37 1 162 3 38 1 262 1 304 1 343 1 283 2 347 2 42 1 350 1 251 1 
199 1 107 1 39 1 38 2 204 2 370 2 347 2 42 2 335 1 7 1 380 1 75 1 135 1 
199 1 289 1 127 1 38 4 39 1 370 1 204 4 347 1 42 4 376 1 180 1 101 1 380 1 
199 1 258 1 148 1 38 2 55 1 204 2 370 2 57 1 347 1 42 2 59 1 336 1 380 1 135 1 
289 1 48 1 42 1 38 1 380 1 352 1 242 1 370 1 204 1 41 1 
199 1 39 1 38 2 129 1 204 2 370 1 191 1 347 1 42 2 380 1 268 1 
199 2 289 1 127 1 38 5 39 1 204 5 370 2 191 1 57 1 347 3 42 4 180 1 377 1 101 1 380 2 236 1 
199 2 289 1 127 1 38 5 39 1 128 1 204 5 370 2 191 1 57 1 347 3 42 4 180 1 101 1 380 2 236 1 
199 1 198 2 289 1 38 1 94 2 151 1 54 1 14 1 227 1 370 1 204 1 347 1 361 1 42 1 32 1 380 1 269 1 135 1 
258 1 199 1 117 1 347 1 57 1 42 1 59 1 38 1 380 1 7 1 135 1 370 2 204 1 
259 1 361 1 367 1 6 1 79 1 
259 2 223 1 367 1 92 2 162 2 333 1 79 2 343 1 153 1 246 1 361 1 84 1 218 1 320 1 307 1 6 2 254 1 209 1 364 1 
198 1 259 1 271 1 367 1 94 1 297 1 6 1 168 1 269 1 
246 1 367 1 307 1 
378 1 74 1 34 1 220 1 
212 1 206 1 74 1 34 1 15 1 316 1 220 1 
253 1 362 1 15 1 
212 1 316 1 15 3 295 1 265 1 294 2 206 3 74 1 235 1 184 1 34 1 220 1 
212 1 206 2 110 1 74 1 80 1 34 1 15 2 316 1 220 1 
212 1 176 1 242 1 316 1 15 1 274 1 206 1 74 1 235 1 287 1 352 1 
212 1 206 1 74 1 235 1 15 1 316 1 220 1 
212 1 206 1 235 1 34 1 15 1 316 1 220 2 
212 2 52 1 316 2 15 2 192 1 206 2 74 1 277 1 235 1 220 1 
212 1 110 2 51 1 316 1 15 3 73 1 360 1 206 3 74 2 235 1 287 1 34 1 220 1 
48 1 212 1 313 1 110 1 176 1 242 2 316 1 15 2 206 2 74 1 169 1 235 1 352 1 34 1 220 1 
212 2 281 1 110 2 51 1 80 1 316 2 15 4 206 4 74 2 235 1 287 1 34 1 220 1 
212 1 206 1 74 1 235 1 34 1 15 1 316 1 220 1 
200 1 212 1 110 2 51 1 15 4 316 1 294 1 265 1 206 4 74 3 287 1 184 1 34 2 220 2 
193 1 212 1 206 2 110 1 150 1 331 1 74 1 235 1 34 1 15 2 316 1 220 1 
212 1 316 1 15 3 217 1 265 1 294 2 206 3 74 1 235 1 184 2 34 1 220 1 
300 2 143 1 337 1 74 2 
212 1 30 1 206 1 235 1 15 1 316 1 
360 1 212 1 206 2 110 1 74 1 235 1 34 1 15 2 316 1 220 1 
28 1 
212 1 206 1 74 1 235 1 34 1 15 1 316 1 220 1 
360 1 294 1 212 1 206 3 110 1 74 1 235 1 34 1 15 3 316 1 220 1 
200 1 51 1 74 1 287 1 
74 1 220 1 

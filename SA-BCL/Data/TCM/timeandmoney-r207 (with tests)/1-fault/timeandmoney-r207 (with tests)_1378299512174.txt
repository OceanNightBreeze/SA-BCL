#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 205 134 308 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 205 134 308 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 205 134 308 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 205 134 308 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 205 134 308 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
30 2 267 5 169 2 132 1 317 3 318 1 8 1 35 1 290 1 320 2 176 1 273 1 114 2 115 9 75 2 21 1 297 1 122 1 300 1 100 2 285 4 164 9 303 1 261 6 51 2 306 1 128 1 148 1 
30 2 267 5 169 2 132 1 317 3 318 1 8 1 35 1 290 1 320 2 176 1 273 1 114 2 115 9 75 2 21 1 297 1 122 1 300 1 100 2 285 4 164 9 303 1 261 6 51 2 306 1 128 1 148 1 
30 2 267 6 169 2 132 1 317 4 318 1 8 1 35 1 290 1 320 2 176 1 273 1 114 2 115 10 75 2 21 1 297 1 122 1 300 1 100 2 285 5 164 10 303 1 261 7 51 2 306 1 128 1 148 1 
30 1 267 4 169 2 132 1 317 2 8 1 35 1 290 1 320 2 176 1 273 1 114 2 115 7 75 2 21 1 297 1 122 1 300 1 100 2 285 3 164 7 303 1 261 4 51 2 306 1 128 1 148 1 
30 2 267 3 132 1 169 1 297 1 317 1 318 1 100 1 285 2 320 1 164 4 303 1 261 3 273 1 114 1 115 4 148 1 75 1 
266 1 267 1 25 1 341 1 100 1 320 1 290 1 164 2 303 1 273 1 306 1 51 1 114 1 115 2 148 1 75 1 
267 2 317 1 300 1 285 1 320 2 164 3 303 1 261 1 273 1 51 1 115 3 148 1 75 2 
30 2 267 5 169 1 132 1 297 1 122 1 317 3 318 1 300 1 100 1 285 4 320 2 176 1 164 9 303 1 261 7 273 1 125 1 51 1 91 1 114 1 115 9 148 1 75 2 
30 2 267 5 169 1 132 1 297 1 122 1 317 3 318 1 300 1 100 1 285 4 320 2 176 1 164 9 303 1 261 7 273 1 125 1 51 1 91 1 114 1 115 9 148 1 75 2 
178 1 366 1 162 1 
7 2 289 1 366 1 
138 1 351 2 259 1 10 2 90 2 288 2 361 2 74 2 
149 1 202 1 288 3 34 1 228 1 177 1 10 2 90 3 321 1 361 2 206 1 112 1 363 1 207 1 15 1 70 1 294 1 74 2 254 1 157 2 138 1 160 1 24 1 120 1 350 1 351 2 213 2 259 1 101 1 215 1 262 2 194 1 372 2 307 1 195 1 241 2 81 1 
351 1 0 1 259 1 10 1 90 1 222 1 288 1 361 1 80 1 74 1 
158 1 346 1 59 1 288 1 222 1 298 1 111 1 162 1 330 1 90 1 292 1 361 1 366 1 365 1 
158 1 346 1 288 1 222 1 298 2 111 1 162 1 351 1 10 1 292 2 90 1 361 1 74 1 366 1 365 1 
371 1 135 1 292 1 298 1 29 1 
371 1 135 1 292 2 23 1 298 2 251 1 366 1 162 1 
371 1 292 1 298 1 
0 1 222 1 288 1 298 1 351 1 259 1 135 1 10 1 292 1 90 1 361 1 80 1 287 1 74 1 
366 1 
371 1 135 1 292 2 23 1 298 2 47 1 366 1 162 1 
211 1 1 1 282 1 256 2 44 2 23 1 268 1 298 5 48 1 172 1 162 1 371 2 135 2 216 1 292 5 145 2 362 1 366 1 19 1 
138 1 178 1 
138 2 288 2 87 1 257 1 351 1 10 1 90 2 361 2 74 1 
238 1 217 1 280 1 
138 1 149 1 288 1 160 1 24 1 204 1 350 1 215 1 262 1 90 1 112 1 207 1 15 1 241 1 70 1 157 1 
238 1 149 1 288 2 160 1 24 1 350 1 351 1 215 1 262 1 90 2 361 1 196 1 112 1 207 1 15 1 241 1 70 1 335 1 74 1 157 1 
345 1 138 1 59 1 288 5 87 1 244 1 351 4 10 1 90 5 64 1 361 5 196 1 335 2 74 4 
351 2 90 2 222 1 288 2 361 2 86 1 80 1 74 2 
138 1 351 3 10 1 90 3 288 3 361 3 335 1 74 3 
351 1 90 1 222 1 288 1 361 1 80 1 74 1 
351 1 10 1 90 1 222 1 288 1 361 1 87 1 257 1 74 1 
149 1 202 1 288 4 222 1 87 1 269 1 111 1 34 1 228 1 10 2 90 4 292 1 361 3 206 1 67 1 112 1 207 1 15 1 70 1 74 3 365 1 157 1 138 1 158 1 346 1 160 1 24 1 120 1 298 1 350 1 351 3 213 1 259 1 101 1 215 1 262 1 194 1 372 2 307 1 195 1 196 1 241 1 81 1 335 1 
138 1 345 1 351 1 90 2 59 1 288 2 361 2 335 1 74 1 
158 1 346 1 222 1 288 3 87 1 298 1 111 1 351 3 260 1 10 1 292 1 90 3 361 3 196 1 67 1 335 2 74 3 366 1 365 1 
238 1 351 2 10 1 90 2 288 2 361 2 87 1 217 1 335 1 74 2 
138 1 149 1 288 1 160 1 24 1 350 1 215 1 262 1 90 1 112 1 207 1 15 1 241 1 70 1 157 1 
138 1 149 1 288 1 24 1 350 1 27 1 262 1 90 1 52 1 112 1 207 1 15 1 241 1 70 1 157 1 
202 1 337 1 152 1 34 1 228 2 321 2 231 1 232 1 38 1 236 1 206 1 280 2 344 1 238 2 281 1 123 1 213 4 101 1 372 2 307 1 217 2 355 1 127 1 81 1 
351 1 90 1 222 1 288 1 361 1 86 1 74 1 365 1 
93 1 258 1 
93 1 258 1 
117 1 356 1 
117 1 356 1 
117 1 356 1 
93 1 105 1 258 1 
93 1 105 1 258 1 
93 1 43 1 258 1 
93 2 322 1 283 1 117 1 258 2 356 1 
93 1 105 1 258 1 
93 1 305 1 258 1 
93 1 305 1 258 1 
93 1 305 1 258 1 
138 1 209 1 93 1 295 1 22 1 43 1 288 2 298 1 186 1 33 1 258 1 369 1 173 1 351 2 63 1 144 1 90 2 292 1 361 2 156 1 108 1 18 1 74 2 220 1 
93 2 295 3 298 2 186 1 258 2 369 2 191 1 163 1 192 1 144 2 37 1 292 2 322 1 156 2 14 2 181 1 69 1 366 1 220 2 
169 1 114 1 100 1 
266 1 114 1 100 1 
266 1 347 1 169 2 235 1 175 1 100 3 
266 1 347 1 169 1 175 1 340 1 100 2 
266 1 347 2 169 1 175 1 100 2 
1 3 203 1 5 2 33 1 7 3 289 1 246 1 63 1 135 4 292 5 231 1 232 1 325 1 18 1 366 2 281 1 282 2 256 1 159 1 44 1 368 2 367 1 23 1 118 1 298 5 162 1 371 1 216 1 145 1 197 1 355 1 336 2 
1 8 268 1 5 6 7 9 224 1 289 3 360 1 227 1 63 4 135 7 11 5 292 9 231 3 232 3 323 1 92 1 325 2 366 5 281 3 282 6 256 2 44 2 368 6 367 3 23 1 118 2 298 9 162 1 371 6 216 1 145 2 53 1 197 1 355 3 29 5 
1 3 203 1 268 1 5 2 7 4 289 2 246 1 63 1 135 2 292 3 231 1 232 1 325 1 366 3 281 1 256 1 282 2 44 1 118 1 367 1 368 2 298 3 162 1 145 1 355 1 336 1 
1 5 268 1 203 1 5 4 7 7 289 3 246 1 227 1 63 2 135 3 292 4 231 2 232 2 323 1 325 1 366 4 281 2 256 1 282 4 44 1 368 4 118 1 367 2 298 4 162 1 145 1 53 1 355 2 336 2 
178 1 350 1 237 1 
299 1 350 1 
240 1 
24 1 350 1 70 1 
121 1 350 1 
350 1 70 1 
140 1 24 1 104 1 350 3 70 1 237 2 
201 1 167 1 3 1 152 2 228 3 213 7 229 1 231 1 321 4 103 1 65 1 324 1 355 1 127 3 279 2 116 1 41 1 
201 1 167 1 3 1 152 2 228 3 213 7 229 1 231 1 321 4 103 1 65 1 324 1 355 1 127 3 279 2 116 1 41 1 
201 1 167 1 3 1 152 2 228 3 213 7 229 1 231 1 321 4 103 1 65 1 324 1 183 1 355 1 127 3 279 2 116 1 41 1 
201 1 311 1 167 2 3 1 357 1 152 5 34 1 228 15 229 5 230 4 321 16 231 4 232 3 65 2 206 1 324 2 279 3 71 1 116 1 41 2 281 3 367 3 212 1 161 3 329 1 213 31 372 2 307 1 103 1 375 1 355 4 127 10 81 1 310 1 
167 1 3 1 152 3 34 2 228 4 229 1 231 1 321 5 250 1 65 1 206 2 324 1 279 2 342 1 116 1 41 1 212 1 213 9 372 4 307 2 103 1 355 1 127 4 81 2 
149 1 266 1 267 1 85 1 169 1 314 1 133 1 270 1 88 1 320 1 273 1 179 1 235 1 207 1 114 1 115 2 157 1 75 1 326 1 185 1 119 1 100 2 164 2 261 1 303 1 262 1 51 1 264 1 241 1 148 1 
149 1 266 1 267 1 85 1 169 1 314 1 133 1 88 1 320 1 9 1 273 1 89 1 179 1 235 1 207 1 114 1 115 3 157 1 75 1 185 1 141 1 119 1 100 2 164 3 261 2 262 1 51 1 264 1 241 1 148 1 
149 1 266 1 267 1 85 1 169 1 133 1 88 1 273 1 89 1 179 1 235 1 207 1 114 1 115 2 157 1 185 1 141 1 119 1 100 2 164 2 261 2 262 1 51 1 241 1 148 1 
149 1 315 1 133 2 170 1 350 1 88 2 9 1 320 1 164 1 262 1 179 2 249 1 51 2 112 1 207 1 208 1 241 1 70 1 129 1 55 1 115 1 75 1 157 1 
149 1 266 1 85 1 169 1 314 1 133 1 88 1 320 1 89 1 179 1 235 1 207 1 114 1 115 1 157 1 75 1 326 1 185 1 119 1 100 2 164 1 303 1 262 1 51 1 264 1 241 1 
198 1 
149 1 1 2 59 1 288 1 338 1 110 2 6 1 61 1 7 2 111 1 289 2 292 5 112 2 207 1 208 1 70 1 72 1 343 2 157 2 20 1 158 1 346 1 256 1 23 3 118 1 298 5 350 1 162 1 216 1 262 2 352 1 83 1 222 1 84 1 315 1 316 2 226 2 319 1 90 1 361 1 366 2 365 1 139 2 282 2 44 1 143 2 327 1 328 1 371 6 50 1 330 1 333 2 145 1 241 2 106 4 
158 1 20 1 139 1 346 1 222 1 59 1 288 1 84 1 23 1 298 3 47 1 111 1 327 1 371 2 330 1 292 3 90 1 352 1 361 1 106 2 72 1 365 1 
288 1 59 1 222 1 84 1 111 1 90 1 292 3 361 1 72 1 343 1 365 1 366 1 20 1 158 1 346 1 23 1 298 3 47 1 327 1 162 1 371 1 330 1 352 1 106 3 
288 1 59 1 222 1 84 1 316 1 111 1 90 1 292 3 361 1 72 1 343 1 365 1 366 1 20 1 158 1 346 1 139 1 23 1 298 3 47 1 327 1 162 1 371 2 330 1 352 1 106 3 
1 1 288 1 59 1 110 2 6 1 111 1 289 2 292 5 12 1 252 1 72 1 343 4 158 1 20 1 346 1 256 1 23 3 298 5 77 1 162 5 216 1 352 1 222 1 84 1 316 4 226 2 90 1 361 1 365 1 366 5 139 4 42 1 282 1 44 1 47 1 143 2 327 1 328 1 371 7 330 1 333 2 145 1 106 6 107 1 
1 1 288 1 59 1 110 2 6 1 7 2 61 1 111 1 289 2 292 4 72 1 343 2 158 1 20 1 346 1 256 1 23 2 298 4 162 1 216 1 352 1 222 1 84 1 316 2 226 2 90 1 361 1 365 1 366 2 139 2 282 1 44 1 143 2 327 1 328 1 371 4 330 1 333 2 145 1 106 4 
1 1 288 1 59 1 222 1 84 1 110 2 316 2 6 1 111 1 289 2 226 2 90 1 292 4 12 1 361 1 252 1 72 1 343 2 366 1 365 1 20 1 158 1 139 2 346 1 282 1 256 1 44 1 23 2 298 4 143 2 327 1 162 1 328 1 371 4 330 1 216 1 333 2 352 1 145 1 106 4 107 1 
1 1 288 1 59 1 222 1 84 1 110 2 316 2 6 1 111 1 289 2 226 2 90 1 292 4 12 1 361 1 252 1 72 1 343 2 366 1 365 1 20 1 158 1 139 2 346 1 282 1 256 1 44 1 23 2 298 4 143 2 327 1 162 1 328 1 371 4 330 1 216 1 333 2 352 1 145 1 106 4 107 1 
1 1 288 1 59 1 222 1 84 1 110 2 316 2 7 2 111 1 174 1 226 2 90 1 292 4 12 1 361 1 72 1 343 2 366 1 364 1 365 1 20 1 158 1 139 2 346 1 282 1 256 1 44 1 23 2 298 4 327 1 124 2 162 1 328 1 190 1 371 4 330 1 193 2 216 1 352 1 145 1 106 4 
1 1 288 1 59 1 222 1 84 1 110 2 6 1 316 3 111 1 289 2 226 2 90 1 292 4 12 1 361 1 252 1 72 1 343 3 366 1 365 1 20 1 158 1 346 1 42 1 139 3 282 1 256 1 44 1 23 2 298 4 143 2 327 1 162 1 328 1 371 5 330 1 216 1 333 2 145 1 352 1 107 1 106 5 
1 1 288 1 59 1 222 1 84 1 110 2 6 1 316 3 111 1 289 2 226 2 90 1 292 4 12 1 361 1 252 1 72 1 343 3 366 1 365 1 20 1 158 1 346 1 42 1 139 3 282 1 256 1 44 1 23 2 298 4 143 2 327 1 162 1 328 1 371 5 330 1 216 1 333 2 145 1 352 1 107 1 106 5 
1 1 59 1 288 1 222 1 84 1 110 2 316 2 61 1 7 2 111 1 226 2 292 4 90 1 361 1 72 1 343 2 366 1 365 1 364 1 20 1 158 1 139 2 346 1 282 1 256 1 44 1 23 2 298 4 327 1 124 2 162 1 328 1 371 4 330 1 193 2 216 1 352 1 145 1 106 4 
202 1 167 1 3 1 152 2 34 1 228 3 178 1 321 3 231 1 65 1 38 1 206 1 279 1 280 1 116 1 238 1 138 2 213 6 101 1 372 2 307 1 103 1 217 1 127 2 355 1 81 1 
202 2 152 1 34 2 228 6 229 1 230 3 321 8 231 1 232 2 234 1 206 2 363 1 280 11 71 1 17 1 138 1 238 11 281 1 367 2 161 3 301 1 213 14 101 1 372 4 307 2 195 1 217 4 375 1 127 2 165 1 355 2 81 2 166 1 
149 1 202 1 288 2 204 1 34 1 228 1 90 2 321 1 361 1 112 1 206 1 207 1 363 1 15 1 70 1 74 1 157 1 138 1 160 1 45 1 24 1 350 1 78 1 79 1 351 1 213 2 215 1 101 1 262 1 307 1 372 2 195 1 196 1 217 1 241 1 81 1 335 1 166 1 
149 2 202 3 3 1 288 3 152 4 247 2 65 1 112 1 206 3 207 2 15 2 16 1 70 2 116 1 74 1 157 3 255 2 160 2 120 2 24 2 350 2 351 1 213 20 215 2 262 3 307 3 126 1 217 7 355 3 127 8 81 3 166 1 167 1 131 2 34 3 228 10 89 1 229 4 90 3 231 3 321 10 361 1 232 2 363 1 279 1 280 7 138 2 238 7 281 2 367 2 49 1 101 3 332 2 372 6 103 1 195 1 196 1 241 3 335 1 
149 2 57 1 202 2 31 1 288 1 315 1 34 2 270 1 271 1 228 1 177 2 154 1 89 1 90 1 321 1 155 1 361 1 38 1 112 2 206 2 207 2 363 1 278 1 208 1 70 2 74 1 157 8 76 1 350 3 351 1 213 2 101 2 262 8 372 4 307 2 195 1 241 7 81 2 335 1 
202 1 288 1 87 1 152 1 34 1 228 2 10 1 90 1 321 1 231 1 361 1 232 1 206 1 182 1 280 1 74 1 238 1 281 1 367 1 351 1 213 3 101 1 372 2 307 1 217 1 127 1 355 1 81 1 166 1 
238 1 202 1 337 1 34 1 213 2 101 1 229 1 307 1 372 2 321 2 232 1 38 1 206 1 217 1 127 1 355 1 280 1 81 1 
238 1 202 1 281 1 152 1 34 1 213 2 228 2 101 1 307 1 372 2 231 1 38 1 206 1 236 1 217 1 127 1 280 1 81 1 
202 1 152 1 34 1 228 2 229 1 321 2 231 1 232 1 38 1 206 1 280 2 238 2 281 1 367 1 213 4 101 1 372 2 307 1 217 2 355 1 127 2 81 1 
238 1 202 1 337 1 34 1 213 2 101 1 229 1 307 1 372 2 321 2 232 1 206 1 217 1 127 1 278 1 355 1 280 1 81 1 
238 1 202 1 281 1 152 1 34 1 213 2 228 2 101 1 307 1 372 2 231 1 206 1 236 1 217 1 127 1 278 1 280 1 81 1 
202 1 152 1 34 1 228 2 229 1 321 2 231 1 232 1 206 1 278 1 280 2 238 2 281 1 367 1 213 4 101 1 372 2 307 1 217 2 355 1 127 2 81 1 
202 1 152 1 34 1 228 2 229 1 321 2 231 1 232 1 206 1 280 2 238 2 281 1 367 1 213 4 101 1 372 2 307 1 217 2 355 1 127 2 81 1 
149 1 202 1 288 1 34 1 228 1 90 1 321 1 112 1 206 1 363 1 207 1 15 1 70 1 157 1 138 1 160 1 24 1 120 1 350 1 213 2 215 1 101 1 262 1 307 1 372 2 195 1 241 1 81 1 
149 1 202 1 288 1 34 1 228 1 90 1 321 1 112 1 206 1 363 1 207 1 15 1 70 1 157 1 138 1 24 1 350 1 187 1 27 1 213 2 101 1 262 1 307 1 372 2 52 1 195 1 241 1 81 1 
202 1 152 1 34 1 228 2 229 1 321 2 231 1 232 1 206 1 280 2 238 2 281 1 367 1 213 4 101 1 372 2 307 1 217 2 355 1 127 2 81 1 166 1 
149 1 202 1 288 1 152 1 34 1 270 1 228 2 229 1 90 1 231 1 321 2 232 1 206 1 207 1 15 1 280 2 70 1 157 1 238 2 281 1 160 1 24 1 120 1 367 1 350 1 213 4 215 1 101 1 262 1 332 1 307 1 372 2 217 2 127 2 355 1 241 1 81 1 
202 1 288 1 87 1 223 1 34 1 228 1 10 1 229 1 90 1 231 1 321 2 361 1 232 1 206 1 280 1 74 1 238 1 281 1 367 1 351 1 213 3 101 1 372 2 307 1 217 1 127 1 355 1 81 1 166 1 
308 1 372 2 307 1 206 1 134 1 293 1 81 1 34 1 342 1 205 1 
308 1 372 2 307 1 206 1 134 1 293 1 81 1 34 1 342 1 205 1 
308 1 372 2 307 1 206 1 134 1 293 1 81 1 34 1 342 1 205 1 
308 1 372 2 307 1 206 1 134 1 293 1 81 1 34 1 342 1 205 1 
308 1 372 2 307 1 206 1 134 1 293 1 81 1 34 1 342 1 205 1 
191 1 93 1 192 1 94 1 144 1 322 1 156 1 258 1 369 1 220 1 
43 1 108 1 
93 1 144 1 277 1 156 1 258 1 369 1 39 1 26 1 220 1 
210 1 105 1 
214 1 305 1 283 1 
93 1 295 2 298 1 186 1 258 1 369 1 191 1 163 1 192 1 144 1 37 1 292 1 322 1 156 1 14 1 69 1 366 1 220 1 
93 1 295 2 298 1 186 1 258 1 369 1 191 1 163 1 192 1 144 1 37 1 292 1 322 1 156 1 14 1 69 1 366 1 220 1 
93 1 295 2 298 1 186 1 258 1 369 1 191 1 163 1 192 1 144 1 37 1 292 1 322 1 156 1 14 1 69 1 366 1 220 1 
210 1 283 1 105 1 
210 1 283 1 105 1 
214 1 305 1 
214 1 305 1 283 1 
209 1 22 1 
288 2 33 1 173 1 63 1 135 1 90 2 292 1 361 2 156 1 14 1 18 1 74 2 138 1 93 1 209 1 295 1 43 1 22 1 298 1 258 1 369 1 351 2 163 1 331 1 144 1 108 1 220 1 
149 1 202 1 288 2 34 1 271 1 36 1 228 1 177 2 275 1 90 2 321 1 155 1 361 2 13 1 66 1 206 1 207 1 363 1 70 1 157 2 350 1 213 2 101 1 262 2 307 1 372 2 195 1 54 1 241 2 81 1 166 1 
149 1 221 1 266 1 185 1 85 1 169 1 100 2 270 1 88 1 89 1 262 2 235 1 207 1 286 1 114 1 264 1 241 2 219 1 157 2 
149 1 266 1 185 1 85 1 169 1 99 1 100 2 88 1 89 1 262 1 235 1 286 1 207 1 114 1 264 1 241 1 157 1 
149 1 315 1 350 1 88 1 302 1 262 1 112 1 207 1 241 1 208 1 70 1 219 1 129 1 157 1 
221 1 149 1 266 1 185 1 85 1 169 1 100 2 88 1 89 1 262 1 235 1 207 1 286 1 114 1 264 1 241 1 219 1 157 1 
142 1 
1 1 282 1 178 1 48 1 172 1 366 1 162 1 
1 1 6 1 7 1 289 1 292 1 366 2 282 1 256 1 44 1 23 1 298 1 143 1 162 1 371 1 216 1 333 1 145 1 
149 3 1 9 151 2 5 6 7 12 153 1 289 6 247 2 292 5 112 1 207 4 70 3 157 3 158 2 296 2 256 4 118 2 24 3 23 3 298 5 348 2 121 2 299 3 350 10 162 2 304 1 216 4 262 3 355 2 82 2 265 2 130 2 168 2 172 1 270 1 319 1 231 2 232 2 136 2 237 2 366 8 95 1 281 2 282 8 140 1 44 4 368 6 367 2 284 1 48 1 188 1 371 5 145 4 241 3 
1 8 109 1 5 5 7 6 289 3 319 1 292 1 230 1 180 1 231 2 232 2 366 5 184 1 281 2 296 2 256 2 282 5 96 1 44 2 118 1 98 1 23 1 368 5 367 2 298 1 349 1 161 1 162 2 371 1 216 2 145 2 334 1 375 1 355 2 82 1 
0 1 167 1 1 2 222 1 288 1 10 1 90 1 292 1 231 1 361 1 65 1 137 1 116 1 74 1 296 2 256 1 282 2 44 1 298 1 351 1 259 1 216 1 145 1 80 1 287 1 355 2 107 1 82 1 
256 1 282 1 1 1 44 1 172 1 48 1 162 1 216 1 145 1 366 1 
281 2 296 2 282 5 1 5 367 2 368 5 5 5 7 10 289 5 247 1 231 2 232 2 355 2 82 1 366 5 
371 1 292 1 23 1 298 1 366 1 162 1 
149 1 83 1 1 2 268 1 315 1 319 2 292 3 112 2 207 1 208 1 70 1 157 4 95 1 256 2 282 2 44 2 118 2 23 2 298 3 239 1 350 1 188 2 50 1 371 4 216 1 262 4 263 1 145 2 241 4 
149 1 202 1 288 3 34 1 228 1 10 2 90 3 361 2 206 1 112 1 207 1 15 1 70 1 74 2 157 1 138 1 160 1 120 1 24 1 350 1 351 2 213 1 259 1 215 1 101 1 262 1 194 1 372 2 307 1 195 1 241 1 81 1 
282 2 256 1 1 1 44 1 368 2 118 1 5 2 7 4 289 2 162 2 319 1 216 1 145 1 279 1 366 4 
156 1 218 1 220 1 
156 1 218 1 220 1 
191 1 272 1 209 1 156 1 220 1 
156 1 218 1 220 1 
156 1 56 1 220 1 
156 1 56 1 220 1 
156 1 56 1 220 1 
156 1 220 1 
93 1 258 1 
167 1 3 1 152 2 212 1 34 2 228 4 213 8 229 1 231 1 321 4 307 2 372 4 103 1 65 1 206 2 279 1 355 1 127 3 81 2 116 1 
167 1 3 1 152 2 228 3 213 6 178 1 321 3 231 1 103 1 65 1 279 1 127 2 355 1 116 1 
281 1 367 1 152 1 370 1 34 1 228 2 213 4 229 1 231 1 307 1 372 2 321 2 232 1 206 1 127 2 355 1 81 1 
281 1 367 1 152 1 161 1 228 4 213 7 229 1 230 2 231 1 321 3 232 1 375 1 355 1 127 2 71 1 
167 2 3 1 152 5 34 2 339 1 228 12 229 4 230 2 321 11 231 3 232 2 65 2 234 1 206 2 279 1 71 1 116 1 281 2 367 2 212 2 161 2 301 1 213 23 307 2 372 4 103 1 127 9 355 3 81 2 
213 1 228 1 230 1 
213 1 321 1 161 1 
281 1 367 1 152 2 370 1 34 1 228 3 213 6 247 1 229 1 372 2 307 1 321 3 231 1 232 1 206 1 355 1 127 3 81 1 
152 1 34 1 228 6 229 1 230 1 321 6 180 1 231 2 232 2 206 1 342 1 281 2 96 1 367 2 98 1 349 1 161 1 213 12 372 2 307 1 334 1 375 1 355 2 127 2 81 1 
167 1 152 1 213 6 228 3 229 1 321 3 231 1 65 1 355 1 127 2 116 1 
167 1 3 1 152 1 212 1 339 1 34 1 228 2 213 3 229 1 321 1 307 1 372 2 103 1 65 1 206 1 127 2 81 1 
167 2 152 3 34 1 213 10 228 5 229 2 372 2 307 1 321 5 231 2 65 2 206 1 137 1 127 5 355 2 81 1 342 1 116 1 
213 2 229 1 321 2 372 2 307 1 232 1 206 1 127 1 355 1 81 1 34 1 342 1 
281 1 367 1 152 1 34 1 228 2 213 4 229 1 231 1 307 1 372 2 321 2 232 1 206 1 127 2 355 1 81 1 342 1 
167 1 2 1 152 1 212 1 339 1 34 3 228 2 213 3 229 1 307 3 372 6 321 1 65 1 206 3 127 2 81 3 342 1 
311 1 167 3 3 1 2 1 357 1 152 7 339 1 34 5 228 18 229 5 230 4 321 16 231 5 232 3 65 3 206 5 279 1 342 1 71 1 116 2 281 3 367 3 212 2 370 1 161 3 329 1 213 34 372 10 307 5 103 1 375 1 355 5 127 12 81 5 
167 1 3 1 152 2 34 1 228 4 230 1 231 1 321 4 65 1 206 1 279 1 342 1 116 1 161 1 213 8 372 2 307 1 103 1 334 1 355 1 375 1 127 2 81 1 
167 1 3 1 152 2 34 2 228 5 229 1 230 2 231 1 321 6 232 1 65 1 206 2 279 1 342 1 71 1 116 1 367 1 370 1 161 1 213 11 372 4 307 2 103 1 334 1 375 1 355 2 127 3 81 2 
167 1 3 1 152 3 34 3 228 10 229 1 230 1 321 9 180 1 231 3 232 2 65 1 206 3 279 1 342 1 116 1 281 2 96 1 98 1 367 2 212 1 349 1 370 1 161 1 213 19 372 6 307 3 103 1 334 1 375 1 355 3 127 4 81 3 
167 1 3 1 152 3 34 3 228 7 229 2 230 1 321 10 180 1 231 2 232 2 65 1 206 3 279 1 342 1 116 1 281 1 96 1 367 2 98 1 212 1 349 1 370 1 161 1 213 17 372 6 307 3 103 1 334 1 375 1 355 3 127 5 81 3 
167 1 3 1 152 2 34 1 228 4 230 1 231 1 321 4 65 1 206 1 279 1 342 1 116 1 161 1 213 8 372 2 307 1 103 1 334 1 355 1 375 1 127 2 81 1 
152 1 34 1 228 6 229 1 230 1 321 6 180 1 231 2 232 2 206 1 342 1 281 2 96 1 367 2 98 1 349 1 161 1 213 12 372 2 307 1 334 1 375 1 355 2 127 2 81 1 
167 1 3 1 152 3 34 4 228 8 229 2 230 1 321 10 180 1 231 2 232 2 65 1 206 4 279 1 342 1 116 1 281 1 96 1 98 1 367 2 212 2 349 1 370 1 161 1 213 18 372 8 307 4 103 1 334 1 375 1 355 3 127 5 81 4 
2 1 152 3 34 4 228 7 229 3 230 1 321 9 180 1 231 2 232 3 206 4 342 1 281 2 96 1 98 1 367 3 212 2 349 1 161 1 213 16 372 8 307 4 334 1 375 1 355 3 127 6 81 4 
167 3 3 2 152 3 228 4 213 7 229 3 231 1 321 3 103 1 65 3 127 6 355 1 116 1 
167 1 3 1 2 1 152 3 34 4 228 8 229 1 230 1 321 10 180 1 231 2 232 2 65 1 206 4 279 1 342 1 116 1 281 1 96 1 98 1 367 2 212 2 349 1 161 1 213 18 372 8 307 4 103 1 334 1 375 1 355 3 127 4 81 4 
138 1 345 1 90 1 58 1 288 1 59 1 361 1 
138 1 150 1 345 1 312 1 32 1 58 1 59 1 288 1 60 1 90 1 361 1 309 1 
149 1 262 1 178 1 315 1 112 1 207 1 208 1 241 1 350 1 70 1 157 1 
138 1 149 1 288 2 160 1 24 1 350 1 351 1 262 1 90 2 361 1 112 1 207 1 15 1 241 1 70 1 335 1 74 1 157 1 
149 1 130 1 288 2 222 1 90 2 361 2 207 1 15 1 70 2 74 1 157 1 365 1 138 1 346 1 160 1 24 2 121 1 350 3 188 1 351 2 262 1 241 1 335 1 
149 1 130 1 288 2 222 1 276 1 90 2 361 2 207 1 15 1 70 2 74 1 157 2 365 1 138 1 346 1 24 2 121 1 350 3 27 1 188 1 351 2 262 2 241 2 335 1 
149 1 130 1 243 1 276 1 292 2 112 1 207 1 70 1 237 1 157 3 366 1 158 1 24 1 298 2 121 1 299 1 350 4 188 1 162 1 371 1 262 3 102 1 241 3 
158 1 149 1 130 1 168 1 24 1 298 2 121 1 299 1 350 4 162 1 188 1 371 1 262 3 276 1 292 2 112 1 207 1 241 3 70 1 366 1 157 3 237 1 
149 1 262 1 154 1 207 1 241 1 157 1 
149 2 57 1 31 1 140 1 24 1 76 1 171 1 350 3 270 1 177 1 154 1 89 1 262 7 155 1 146 1 112 2 207 3 241 6 147 1 70 2 157 7 
149 1 202 2 167 1 131 1 3 1 288 2 152 2 34 2 270 1 228 3 36 1 90 2 231 1 321 3 361 1 65 1 206 2 207 1 15 1 279 1 280 1 70 1 116 1 74 1 157 1 238 1 138 2 160 1 24 1 120 1 350 1 351 1 213 6 101 2 215 1 262 1 332 1 307 2 372 4 103 1 217 1 355 1 127 2 241 1 81 2 335 1 166 1 
1 1 151 1 168 1 172 1 135 1 292 3 112 1 136 1 366 1 157 1 237 1 158 1 95 1 282 1 256 2 44 2 23 1 298 3 299 1 48 1 350 2 162 1 371 2 216 2 262 1 145 2 241 1 265 1 
149 1 140 1 24 1 153 1 350 2 270 1 154 1 262 2 207 2 241 2 70 1 237 1 157 2 
149 1 97 1 315 1 350 1 270 1 262 4 276 1 112 1 207 1 241 4 208 1 70 1 157 4 
149 1 24 1 171 1 350 1 225 1 188 1 49 1 262 2 146 1 207 2 113 1 241 2 70 1 157 2 
149 1 266 1 262 1 85 1 112 1 207 1 114 1 241 1 100 1 157 1 
149 1 89 1 262 2 155 1 207 1 54 1 241 2 350 1 70 1 157 2 270 1 
149 2 31 1 97 1 315 1 76 1 350 3 188 1 270 1 262 5 155 1 112 1 207 2 208 1 241 4 70 2 157 5 
149 2 97 1 315 1 76 1 350 3 359 1 188 1 270 1 262 5 155 1 112 1 207 2 208 1 241 4 70 2 157 5 
138 1 149 1 288 2 24 1 350 1 27 1 351 1 262 1 90 2 361 1 112 1 207 1 15 1 241 1 70 1 335 1 74 1 157 1 
149 1 140 1 24 1 171 1 350 1 188 1 262 1 146 1 207 2 241 1 147 1 70 1 157 1 
138 1 200 1 248 1 40 1 242 1 
138 1 158 1 200 2 346 1 222 1 298 2 111 1 62 1 245 1 162 1 135 1 292 2 248 2 233 1 67 1 242 1 40 2 366 1 365 1 
200 1 288 1 248 1 275 1 90 1 361 1 13 1 66 1 242 1 
233 1 245 1 242 1 
267 1 273 1 178 1 148 1 
320 1 164 1 267 1 273 1 115 1 148 1 75 1 
179 1 51 1 115 1 
267 1 320 1 164 3 303 1 274 1 273 1 306 2 28 1 354 1 115 3 148 1 75 1 
30 1 320 1 164 2 261 1 267 1 273 1 115 2 148 1 75 1 
267 1 169 1 297 1 285 1 100 1 320 1 164 1 303 1 114 1 115 1 75 1 
320 1 164 1 303 1 267 1 273 1 115 1 75 1 
320 1 164 1 303 1 273 2 115 1 148 1 75 1 
267 1 320 2 164 2 303 1 273 1 373 1 374 1 115 2 73 1 75 2 
267 2 122 1 317 1 285 1 320 1 164 3 176 1 303 1 261 2 273 1 115 3 148 1 75 1 
266 1 267 1 169 1 100 2 320 1 164 2 303 1 261 1 273 1 235 1 68 1 114 1 115 2 148 1 75 1 
30 1 267 2 317 1 318 1 285 1 320 2 164 4 303 1 261 2 273 1 115 4 148 1 75 2 
320 1 164 1 303 1 267 1 273 1 115 1 148 1 75 1 
267 3 46 1 317 1 285 1 320 1 164 4 261 2 274 1 273 2 306 1 354 1 115 4 148 2 75 1 
313 1 267 1 4 1 320 1 164 2 303 1 261 1 273 1 91 1 115 2 148 1 75 1 
267 1 358 1 320 1 164 3 303 1 274 2 273 1 306 2 354 1 115 3 148 1 75 1 
291 1 267 2 353 1 199 2 
320 1 164 1 303 1 115 1 189 1 75 1 
320 1 164 2 261 1 303 1 267 1 273 1 122 1 115 2 148 1 75 1 
253 1 
320 1 164 1 303 1 267 1 273 1 115 1 148 1 75 1 
267 1 122 1 320 1 164 3 261 1 303 1 273 1 306 1 115 3 148 1 75 1 
267 1 46 1 317 1 285 1 
267 1 273 1 

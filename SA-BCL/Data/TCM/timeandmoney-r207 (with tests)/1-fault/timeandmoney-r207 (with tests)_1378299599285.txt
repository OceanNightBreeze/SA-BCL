#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 55 344 250 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 55 344 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 5 341 2 279 1 252 1 224 4 42 1 45 1 183 2 85 1 62 1 115 2 299 1 86 1 349 1 329 9 260 3 119 9 94 1 264 1 314 1 237 1 267 2 125 1 149 6 214 2 36 1 315 2 338 2 
77 5 341 2 279 1 252 1 224 4 42 1 45 1 183 2 85 1 62 1 115 2 299 1 86 1 349 1 329 9 260 3 119 9 94 1 264 1 314 1 237 1 267 2 125 1 149 6 214 2 36 1 315 2 338 2 
77 6 341 2 279 1 252 1 224 5 42 1 45 1 183 2 85 1 62 1 115 2 299 1 86 1 349 1 329 10 260 4 119 10 94 1 264 1 314 1 237 1 267 2 125 1 149 7 214 2 36 1 315 2 338 2 
77 4 341 2 279 1 252 1 224 3 42 1 45 1 183 2 85 1 62 1 115 2 299 1 86 1 349 1 329 7 260 2 119 7 94 1 264 1 314 1 267 1 125 1 149 4 214 2 36 1 315 2 338 2 
77 3 260 1 341 1 119 4 279 1 264 1 252 1 224 2 237 1 267 2 45 1 183 1 149 3 214 1 115 1 299 1 338 1 329 4 
77 1 341 1 306 1 119 2 158 1 94 1 264 1 252 1 42 1 183 1 323 1 115 1 299 1 315 1 338 1 329 2 
77 2 260 1 341 2 119 3 264 1 252 1 224 1 149 1 62 1 299 1 315 1 338 2 329 3 
77 5 341 2 135 1 279 1 252 1 224 4 45 1 183 1 85 1 62 1 115 1 299 1 329 9 260 3 119 9 264 1 314 1 267 2 237 1 149 7 214 1 315 1 130 1 338 2 
77 5 341 2 135 1 279 1 252 1 224 4 45 1 183 1 85 1 62 1 115 1 299 1 329 9 260 3 119 9 264 1 314 1 267 2 237 1 149 7 214 1 315 1 130 1 338 2 
91 1 192 1 43 1 
91 1 318 2 236 1 
207 1 164 2 255 2 195 2 339 2 5 2 191 2 345 1 
219 1 339 2 320 1 133 1 160 1 345 1 180 2 295 2 255 3 346 2 81 1 82 1 24 1 83 1 61 1 5 2 230 1 8 1 9 1 207 1 164 2 47 1 187 1 191 3 351 1 95 1 238 1 97 1 74 1 195 2 355 1 37 1 16 2 357 1 100 2 38 1 175 1 
164 1 255 1 195 1 339 1 185 1 5 1 49 1 191 1 243 1 345 1 
91 1 331 1 131 1 177 1 339 1 49 1 191 1 192 1 212 1 255 1 203 1 240 1 174 1 117 1 
164 1 91 1 131 1 177 1 339 1 49 1 191 1 192 1 255 1 203 2 195 1 5 1 240 1 174 2 117 1 
203 1 151 1 146 1 358 1 174 1 
91 1 192 1 105 1 203 2 48 1 151 1 146 1 174 2 
203 1 146 1 174 1 
164 1 339 1 49 1 191 1 345 1 268 1 255 1 203 1 195 1 185 1 151 1 5 1 243 1 174 1 
91 1 
181 1 91 1 192 1 203 2 48 1 151 1 146 1 174 2 
91 1 48 1 178 1 342 1 343 1 29 2 1 1 146 2 161 1 21 1 34 1 51 1 192 1 72 2 203 5 213 1 151 2 174 5 139 2 
164 1 339 1 133 1 191 2 351 1 95 1 255 2 346 1 97 1 355 1 83 1 5 1 357 1 16 1 25 1 239 1 100 1 18 1 38 1 175 1 
207 1 43 1 
164 1 207 2 339 2 191 2 281 1 321 1 255 2 195 1 5 1 
193 1 25 1 263 1 
207 1 191 1 133 1 351 1 95 1 255 1 346 1 97 1 355 1 83 1 16 1 357 1 100 1 38 1 175 1 65 1 
164 4 207 1 331 1 339 5 93 1 191 5 321 1 255 5 96 1 195 1 5 4 239 2 325 1 18 1 
164 2 255 2 339 2 185 1 5 2 262 1 49 1 191 2 
207 1 164 3 255 3 195 1 339 3 5 3 239 1 191 3 
164 1 255 1 339 1 185 1 5 1 49 1 191 1 
164 1 255 1 195 1 339 1 5 1 49 1 191 1 281 1 321 1 
131 1 177 1 339 3 133 1 159 1 160 1 321 1 345 1 180 1 295 2 255 4 346 1 203 1 81 1 83 1 24 1 61 1 5 3 230 1 8 1 117 1 9 1 207 1 164 3 49 1 191 4 351 1 95 1 238 1 97 1 74 1 355 1 195 2 37 1 357 1 16 1 239 1 240 1 100 1 18 1 38 1 173 1 174 1 175 1 
207 1 164 1 331 1 255 2 339 2 5 1 239 1 325 1 191 2 
164 3 91 1 131 1 177 1 339 3 49 1 191 3 321 1 352 1 255 3 203 1 195 1 5 3 239 2 240 1 18 1 174 1 173 1 117 1 
164 2 339 2 191 2 321 1 255 2 193 1 195 1 5 2 239 1 25 1 
207 1 191 1 133 1 351 1 95 1 255 1 346 1 97 1 355 1 83 1 16 1 357 1 100 1 38 1 175 1 
207 1 190 1 191 1 133 1 351 1 95 1 255 1 346 1 97 1 16 1 357 1 100 1 101 1 38 1 175 1 
156 1 319 1 295 2 180 4 81 1 61 1 230 1 25 2 8 1 302 1 9 1 187 2 92 1 168 1 189 1 145 1 263 2 28 1 30 1 238 1 193 2 74 2 335 1 359 1 
164 1 255 1 339 1 5 1 49 1 262 1 240 1 191 1 
165 1 223 1 
165 1 223 1 
112 1 205 1 
112 1 205 1 
112 1 205 1 
165 1 223 1 32 1 
165 1 223 1 32 1 
165 1 223 1 244 1 
165 2 112 1 223 2 242 1 289 1 205 1 
165 1 223 1 32 1 
165 1 223 1 312 1 
165 1 223 1 312 1 
165 1 223 1 312 1 
165 1 317 1 203 1 223 1 250 1 326 1 344 1 174 1 55 1 
165 1 317 1 223 1 326 1 344 1 55 1 
183 1 214 1 115 1 
183 1 323 1 115 1 
214 2 323 1 76 1 231 1 115 3 90 1 
214 1 323 1 231 1 115 2 33 1 90 1 
214 1 323 1 231 1 115 2 90 2 
0 1 318 3 178 2 342 3 203 5 226 1 324 1 113 2 87 1 139 1 10 1 91 2 92 1 259 1 48 1 168 1 189 1 169 1 236 1 29 1 146 1 286 2 72 1 192 1 213 1 128 2 151 4 174 5 337 1 218 1 246 1 359 1 
318 9 178 6 342 8 80 1 22 1 182 1 203 9 322 1 324 3 139 2 10 2 91 5 92 3 48 1 168 3 189 3 169 1 236 3 146 6 29 2 51 1 286 6 192 1 72 2 213 1 128 6 151 7 269 1 241 1 216 5 358 5 174 9 337 4 218 2 359 3 
318 4 178 2 342 3 226 1 203 3 113 1 324 1 139 1 10 1 91 3 92 1 259 1 189 1 168 1 236 2 29 1 51 1 192 1 72 1 286 2 151 2 128 2 174 3 337 1 218 1 359 1 
318 7 178 4 342 5 80 1 22 1 203 4 226 1 113 2 324 2 139 1 10 1 91 4 92 2 259 1 189 2 168 2 236 3 29 1 51 1 192 1 286 4 72 1 128 4 151 3 269 1 174 4 337 2 218 1 359 2 
104 1 175 1 43 1 
175 1 31 1 
186 1 
38 1 175 1 351 1 
188 1 175 1 
175 1 351 1 
66 1 104 2 38 1 175 3 351 1 26 1 
156 3 220 1 118 1 187 4 201 1 340 1 307 2 168 1 277 1 319 2 58 1 171 1 180 7 98 1 74 3 270 1 359 1 
156 3 220 1 118 1 187 4 201 1 340 1 307 2 168 1 277 1 319 2 58 1 171 1 180 7 98 1 74 3 270 1 359 1 
156 3 220 1 118 1 187 4 201 1 340 1 307 2 168 1 277 1 319 2 58 1 171 1 180 7 98 1 74 3 270 1 359 1 330 1 
156 10 247 1 220 2 201 1 340 5 248 1 277 2 58 2 319 5 280 3 295 2 180 31 162 1 324 3 61 1 232 1 8 1 9 1 206 1 118 1 187 16 92 3 307 3 189 3 168 4 171 2 353 1 287 4 238 1 98 1 74 15 356 1 270 1 359 4 
156 4 220 1 340 1 277 1 58 1 319 3 295 4 180 9 61 2 8 2 9 2 118 1 187 5 307 2 168 1 171 1 148 1 238 2 98 1 74 4 356 1 270 1 359 1 57 1 
77 1 132 1 341 1 133 1 134 1 252 1 346 1 183 1 323 1 229 1 115 2 299 1 300 1 329 2 283 1 119 2 50 1 264 1 15 1 149 1 214 1 150 1 16 1 357 1 100 1 76 1 102 1 315 1 56 1 338 1 
77 1 132 1 341 1 20 1 133 1 134 1 252 1 346 1 183 1 323 1 115 2 299 1 300 1 329 3 283 1 119 3 50 1 15 1 149 2 214 1 150 1 16 1 357 1 76 1 100 1 336 1 315 1 56 1 197 1 338 1 
77 1 283 1 132 1 119 2 133 1 20 1 134 1 252 1 15 1 346 1 183 1 149 2 214 1 150 1 323 1 357 1 16 1 76 1 100 1 115 2 299 1 315 1 300 1 197 1 329 2 
292 1 132 2 341 1 133 1 134 2 346 1 348 1 329 1 283 2 143 1 309 1 119 1 266 1 351 1 95 1 126 1 357 1 16 1 100 1 336 1 315 2 175 1 338 1 
283 1 341 1 132 1 119 1 133 1 20 1 50 1 134 1 264 1 15 1 346 1 183 1 214 1 150 1 323 1 357 1 229 1 16 1 76 1 100 1 115 2 56 1 315 1 300 1 338 1 329 1 
235 1 
131 1 177 1 272 1 78 2 222 2 318 2 178 2 276 1 133 1 4 1 137 1 327 1 139 1 91 2 331 1 332 1 48 3 143 1 49 1 236 2 191 1 146 6 95 2 192 1 194 1 16 2 100 2 240 1 154 1 157 1 339 1 342 2 107 2 108 1 109 1 346 2 255 1 203 5 256 4 63 2 348 1 117 1 29 1 265 2 351 1 123 2 211 1 72 1 212 1 35 2 213 1 357 1 174 5 175 1 218 1 
177 1 331 1 131 1 272 1 48 1 339 1 276 1 49 1 191 1 146 2 181 1 108 1 137 1 212 1 255 1 203 3 256 2 194 1 240 1 63 1 174 3 117 1 
91 1 177 1 331 1 131 1 272 1 48 1 339 1 276 1 49 1 191 1 146 1 181 1 123 1 108 1 192 1 137 1 212 1 255 1 203 3 256 3 194 1 240 1 174 3 117 1 
131 1 177 1 272 1 339 1 222 1 276 1 181 1 108 1 255 1 137 1 203 3 256 3 63 1 117 1 331 1 91 1 48 1 49 1 191 1 146 2 123 1 212 1 192 1 194 1 240 1 174 3 
177 1 131 1 272 1 78 2 222 4 276 1 178 1 3 1 181 1 137 1 327 1 139 1 331 1 91 5 48 3 49 1 191 1 236 2 146 7 192 5 194 1 240 1 157 1 339 1 342 1 251 1 107 2 111 1 108 1 60 1 255 1 203 5 256 6 63 4 117 1 167 1 29 1 265 2 123 4 212 1 72 1 35 2 213 1 174 5 
177 1 131 1 272 1 78 2 318 2 222 2 276 1 178 1 137 1 327 1 139 1 331 1 91 2 48 2 49 1 191 1 236 2 146 4 192 1 194 1 240 1 154 1 157 1 339 1 342 1 107 2 108 1 255 1 203 4 256 4 63 2 117 1 29 1 265 2 123 2 72 1 212 1 35 2 213 1 174 4 
157 1 131 1 177 1 272 1 78 2 222 2 339 1 178 1 276 1 342 1 107 2 251 1 3 1 108 1 60 1 255 1 137 1 203 4 256 4 63 2 327 1 139 1 117 1 91 1 331 1 48 2 49 1 236 2 191 1 146 4 29 1 265 2 123 2 192 1 212 1 72 1 35 2 213 1 194 1 240 1 174 4 
157 1 131 1 177 1 272 1 78 2 222 2 339 1 178 1 276 1 342 1 107 2 251 1 3 1 108 1 60 1 255 1 137 1 203 4 256 4 63 2 327 1 139 1 117 1 91 1 331 1 48 2 49 1 236 2 191 1 146 4 29 1 265 2 123 2 192 1 212 1 72 1 35 2 213 1 194 1 240 1 174 4 
131 1 177 1 272 1 78 2 222 2 318 2 339 1 178 1 276 1 275 1 342 1 251 1 108 1 255 1 137 1 203 4 256 4 228 1 63 2 327 1 139 1 117 1 91 1 331 1 305 2 48 2 49 1 191 1 146 4 29 1 123 2 192 1 354 2 212 1 72 1 35 2 213 1 194 1 240 1 215 1 174 4 
157 1 131 1 177 1 272 1 78 2 339 1 222 3 178 1 276 1 342 1 107 2 251 1 3 1 60 1 108 1 255 1 137 1 203 4 256 5 327 1 63 3 139 1 117 1 91 1 331 1 48 2 167 1 49 1 236 2 191 1 29 1 146 5 265 2 123 3 192 1 72 1 212 1 35 2 213 1 194 1 240 1 174 4 
157 1 131 1 177 1 272 1 78 2 339 1 222 3 178 1 276 1 342 1 107 2 251 1 3 1 60 1 108 1 255 1 137 1 203 4 256 5 327 1 63 3 139 1 117 1 91 1 331 1 48 2 167 1 49 1 236 2 191 1 29 1 146 5 265 2 123 3 192 1 72 1 212 1 35 2 213 1 194 1 240 1 174 4 
131 1 177 1 272 1 78 2 222 2 318 2 339 1 178 1 276 1 342 1 108 1 137 1 255 1 203 4 256 4 228 1 63 2 327 1 139 1 117 1 91 1 331 1 305 2 48 2 49 1 191 1 146 4 29 1 123 2 192 1 354 2 212 1 72 1 35 2 213 1 194 1 240 1 154 1 174 4 
156 2 220 1 277 1 319 2 43 1 295 2 180 6 81 1 61 1 230 1 25 1 8 1 9 1 207 2 118 1 187 3 307 1 168 1 145 1 263 1 238 1 193 1 98 1 74 3 270 1 359 1 
156 2 273 1 221 1 340 1 319 1 280 3 295 4 180 14 44 1 162 1 81 2 61 2 324 2 230 1 25 11 233 1 8 2 9 2 207 1 47 1 187 8 92 1 189 2 168 2 263 11 353 1 287 3 238 2 193 4 74 6 37 1 271 1 359 1 
339 1 133 1 295 2 180 2 346 1 255 2 81 1 83 1 61 1 5 1 347 1 230 1 65 1 8 1 328 1 9 1 207 1 164 1 47 1 187 1 191 2 351 1 95 1 97 1 238 1 193 1 355 1 74 1 37 1 357 1 16 1 196 1 100 1 239 1 18 1 38 1 175 1 271 1 
220 1 277 1 319 4 133 2 180 20 227 1 81 3 83 2 5 1 324 2 230 3 8 3 9 3 47 1 187 10 92 2 189 2 191 3 95 1 52 2 238 3 97 2 98 1 193 7 16 3 100 3 239 1 18 1 198 2 156 8 339 1 340 4 20 1 253 1 295 6 346 3 255 3 24 2 61 3 25 7 64 2 207 2 164 1 118 1 304 1 307 1 168 3 263 7 351 2 74 10 355 2 75 2 37 1 357 2 38 2 175 2 270 1 359 3 271 1 
219 2 339 1 179 1 20 1 133 2 225 1 295 4 180 2 254 1 297 1 255 1 346 7 81 2 5 1 61 2 230 2 348 1 116 1 8 2 9 2 164 1 141 1 47 1 187 1 143 1 145 1 191 1 351 2 313 1 95 2 238 2 74 1 37 1 357 2 16 8 239 1 100 8 102 1 175 3 
156 1 339 1 319 1 41 1 321 1 295 2 180 3 255 1 81 1 5 1 61 1 324 1 230 1 25 1 8 1 9 1 164 1 187 1 92 1 189 1 168 1 263 1 191 1 238 1 193 1 195 1 74 2 271 1 359 1 
156 1 187 2 340 1 189 1 168 1 263 1 145 1 180 2 295 2 238 1 193 1 81 1 61 1 230 1 335 1 25 1 8 1 9 1 
156 1 92 1 319 1 263 1 145 1 30 1 180 2 295 2 238 1 193 1 81 1 74 2 61 1 230 1 25 1 8 1 9 1 359 1 
156 2 340 1 319 1 295 2 180 4 81 1 324 1 61 1 230 1 25 2 8 1 9 1 187 2 92 1 168 1 189 1 145 1 263 2 238 1 193 2 74 2 359 1 
156 1 187 2 340 1 189 1 168 1 263 1 180 2 295 2 297 1 238 1 193 1 81 1 61 1 230 1 335 1 25 1 8 1 9 1 
156 1 92 1 319 1 263 1 30 1 180 2 295 2 297 1 238 1 193 1 81 1 74 2 61 1 230 1 25 1 8 1 9 1 359 1 
156 2 340 1 319 1 295 2 180 4 297 1 81 1 324 1 61 1 230 1 25 2 8 1 9 1 187 2 92 1 168 1 189 1 263 2 238 1 193 2 74 2 359 1 
156 2 92 1 187 2 340 1 189 1 168 1 319 1 263 2 295 2 180 4 238 1 193 2 81 1 74 2 61 1 324 1 230 1 25 2 8 1 359 1 9 1 
133 1 180 2 295 2 346 1 255 1 81 1 83 1 24 1 61 1 230 1 8 1 9 1 207 1 47 1 187 1 191 1 351 1 95 1 97 1 238 1 355 1 74 1 37 1 357 1 16 1 100 1 38 1 175 1 
133 1 180 2 295 2 346 1 255 1 81 1 61 1 230 1 8 1 9 1 207 1 47 1 187 1 190 1 191 1 351 1 95 1 97 1 238 1 99 1 74 1 37 1 357 1 16 1 100 1 101 1 38 1 175 1 
156 2 340 1 319 1 295 2 180 4 81 1 324 1 61 1 230 1 25 2 8 1 9 1 187 2 92 1 168 1 189 1 263 2 238 1 193 2 74 2 271 1 359 1 
156 2 340 1 319 1 133 1 180 4 295 2 346 1 255 1 81 1 83 1 24 1 61 1 324 1 230 1 25 2 8 1 9 1 92 1 187 2 168 1 189 1 263 2 191 1 351 1 97 1 238 1 193 2 74 2 355 1 75 1 357 1 16 1 100 1 102 1 38 1 175 1 359 1 
156 1 340 1 339 1 321 1 295 2 180 3 255 1 81 1 5 1 61 1 324 1 230 1 25 1 8 1 9 1 164 1 92 1 187 2 284 1 189 1 168 1 263 1 191 1 238 1 193 1 74 1 195 1 359 1 271 1 
156 6 176 2 340 3 319 3 2 1 280 1 295 4 180 19 162 1 61 2 324 3 257 1 8 2 301 1 89 1 9 2 187 9 92 3 285 1 13 1 189 3 168 3 69 1 353 1 148 1 287 2 238 2 74 10 129 2 359 3 
156 4 176 4 200 1 340 2 319 2 280 2 295 6 180 26 61 3 324 3 8 3 301 1 89 2 9 3 303 1 187 14 92 2 209 1 67 1 285 1 13 1 189 3 168 3 69 2 148 1 353 2 287 2 238 3 74 12 356 2 153 1 129 1 39 1 359 2 
176 4 220 1 277 1 319 4 2 1 280 3 180 41 46 1 324 4 8 3 9 3 89 2 92 4 187 20 285 1 189 4 13 1 148 1 287 4 238 3 98 1 153 1 156 8 200 1 340 4 295 6 162 1 61 3 301 1 303 1 118 1 209 1 67 1 307 1 168 5 69 1 353 3 74 21 356 1 129 1 39 1 270 1 359 5 
156 7 220 1 176 4 200 1 340 3 277 1 319 4 2 1 280 3 295 8 180 38 162 1 46 1 61 4 324 4 8 4 301 1 89 2 9 4 303 1 118 1 187 20 92 3 209 1 67 1 285 1 307 1 13 1 189 4 168 5 69 1 353 3 148 1 287 4 238 4 98 1 74 18 356 2 153 1 129 1 39 1 270 1 359 4 
156 14 220 1 176 4 200 1 221 2 340 7 277 1 319 7 280 4 295 4 180 52 162 2 61 2 324 7 8 2 301 1 89 1 9 2 303 1 118 1 187 27 92 7 209 1 67 1 285 1 307 1 13 1 189 7 168 8 69 1 353 2 148 1 287 4 238 2 98 1 74 25 356 1 153 1 129 1 39 1 270 1 359 8 
219 2 339 2 274 1 249 1 133 1 295 2 180 2 255 2 346 2 81 1 61 1 230 1 116 1 8 1 88 1 9 1 141 1 47 1 187 1 144 1 191 2 351 1 238 1 74 1 37 1 357 1 172 1 16 2 100 2 175 1 271 1 
283 1 12 1 133 1 20 1 59 1 15 1 346 2 183 1 214 1 323 1 357 1 16 2 76 1 100 2 115 2 102 1 288 1 56 1 300 1 
291 1 283 1 12 1 20 1 133 1 15 1 346 1 183 1 214 1 323 1 16 1 357 1 76 1 100 1 115 2 56 1 300 1 
292 1 283 1 68 1 143 1 133 1 59 1 351 1 95 1 346 1 357 1 16 1 100 1 348 1 175 1 
283 1 12 1 20 1 59 1 133 1 15 1 346 1 183 1 214 1 323 1 357 1 16 1 76 1 100 1 115 2 288 1 56 1 300 1 
84 1 
91 1 192 1 178 1 342 1 161 1 43 1 34 1 
157 1 318 1 178 1 342 1 107 1 203 1 139 1 91 2 48 1 236 1 29 1 146 1 265 1 72 1 192 1 213 1 174 1 
318 12 178 8 278 1 133 3 324 2 282 1 139 4 91 8 92 2 332 1 188 2 48 3 189 2 236 6 146 5 95 1 192 2 52 2 286 6 54 2 16 3 100 3 152 1 102 1 104 2 342 9 293 2 161 1 110 1 346 3 203 5 298 2 117 2 66 1 210 1 168 2 310 2 120 2 29 4 31 3 170 2 351 3 34 1 70 2 72 4 73 2 213 4 128 6 357 4 38 3 174 5 175 10 218 2 359 2 
200 1 318 6 178 5 342 8 280 1 203 1 324 2 139 2 303 1 91 5 92 2 332 1 209 1 48 1 189 2 168 2 236 3 146 1 29 2 14 1 70 2 353 1 71 1 286 5 287 1 72 2 192 2 213 2 54 1 128 5 153 1 174 1 39 1 218 1 359 2 
220 1 339 1 178 2 277 1 342 2 345 1 60 1 255 1 203 1 185 1 5 1 139 1 164 1 261 1 168 2 49 1 191 1 29 1 70 2 72 1 268 1 213 1 195 1 54 1 243 1 174 1 270 1 359 1 
91 1 178 1 342 1 29 1 161 1 34 1 72 1 192 1 213 1 139 1 
91 5 92 2 318 10 189 2 168 2 178 5 342 5 236 5 70 2 52 1 286 5 54 1 324 2 128 5 359 2 
91 1 192 1 203 1 48 1 146 1 174 1 
178 2 342 2 133 1 4 1 110 1 346 4 203 3 348 1 282 2 139 2 332 2 166 1 48 2 143 1 29 2 146 4 351 1 95 2 51 1 211 1 72 2 127 1 213 1 357 1 16 4 100 4 174 3 175 1 218 2 
339 2 133 1 160 1 345 1 180 1 295 2 346 1 255 3 81 1 24 1 83 1 5 2 61 1 230 1 8 1 9 1 207 1 164 2 191 3 351 1 95 1 238 1 97 1 74 1 195 2 355 1 37 1 16 1 357 1 100 1 38 1 175 1 
91 4 332 1 307 1 318 4 178 2 342 1 236 2 29 1 286 2 72 1 192 2 213 1 128 2 139 1 218 1 
317 1 55 1 
317 1 55 1 
317 1 55 1 
317 1 55 1 
317 1 55 1 
317 1 55 1 
317 1 55 1 
317 1 55 1 
165 1 223 1 
156 3 118 1 220 1 187 4 307 1 340 1 168 1 277 1 319 2 180 8 295 4 238 2 98 1 74 4 61 2 356 1 8 2 270 1 359 1 9 2 
156 2 220 1 118 1 187 3 98 1 74 3 307 1 168 1 277 1 319 2 43 1 270 1 359 1 180 6 
156 2 92 1 187 2 340 1 189 1 168 1 319 1 295 2 180 4 238 1 74 2 61 1 324 1 8 1 217 1 359 1 9 1 
156 2 92 1 187 3 340 1 189 1 168 1 319 1 280 1 180 7 353 1 287 2 162 1 74 4 324 1 359 1 
156 9 220 2 221 1 340 4 40 1 277 2 319 5 280 2 180 23 295 4 162 1 324 2 61 2 233 1 8 2 9 2 118 1 187 11 92 2 307 1 168 3 189 2 287 2 238 2 98 1 74 12 356 2 270 1 359 3 
287 1 74 1 180 1 
187 1 280 1 180 1 
156 3 187 3 92 1 340 1 189 1 168 1 319 2 295 2 180 6 52 1 238 1 74 3 61 1 324 1 8 1 217 1 9 1 359 1 
156 2 200 1 340 1 319 1 280 1 180 12 295 2 61 1 324 2 8 1 9 1 303 1 187 6 92 2 209 1 189 2 168 2 353 1 148 1 287 1 238 1 74 6 153 1 39 1 359 2 
156 2 220 1 187 3 340 1 168 1 277 1 319 1 180 6 74 3 270 1 359 1 
156 2 220 1 118 1 187 1 340 1 40 1 277 1 319 1 180 3 295 2 238 1 98 1 74 2 61 1 356 1 8 1 9 1 
156 5 220 2 187 5 261 1 340 2 168 2 277 2 319 3 295 2 180 10 148 1 238 1 74 5 61 1 8 1 270 1 9 1 359 2 
156 1 187 2 340 1 189 1 168 1 295 2 180 2 148 1 238 1 61 1 8 1 9 1 
156 2 92 1 187 2 340 1 189 1 168 1 319 1 295 2 180 4 148 1 238 1 74 2 61 1 324 1 8 1 359 1 9 1 
156 2 220 1 187 1 40 1 340 1 277 1 319 1 2 1 180 3 295 6 148 1 238 3 74 2 61 3 356 1 8 3 9 3 
247 1 156 12 220 3 40 1 340 5 248 1 277 3 319 7 2 1 280 3 295 10 180 34 162 1 61 5 324 3 232 1 8 5 9 5 118 1 187 16 92 3 307 1 189 3 168 5 353 1 148 1 287 4 238 5 98 1 74 18 356 2 270 2 217 1 359 5 
156 2 220 1 277 1 319 2 280 1 180 8 295 2 61 1 8 1 9 1 118 1 187 4 209 1 307 1 168 1 353 1 148 1 287 1 238 1 98 1 74 4 270 1 359 1 
156 3 220 1 340 1 277 1 319 2 280 1 180 11 295 4 162 1 61 2 324 1 8 2 9 2 118 1 187 6 209 1 307 1 189 1 168 2 353 1 148 1 287 2 238 2 98 1 74 5 270 1 217 1 359 1 
156 4 220 1 200 1 340 1 277 1 319 3 280 1 180 19 295 6 61 3 324 2 8 3 9 3 303 1 118 1 187 9 92 2 209 1 307 1 189 2 168 3 353 1 148 1 287 1 238 3 98 1 74 10 356 1 153 1 39 1 270 1 217 1 359 3 
156 5 220 1 200 1 340 2 277 1 319 3 280 1 180 17 295 6 61 3 324 2 8 3 9 3 303 1 118 1 187 10 92 1 209 1 307 1 189 2 168 3 353 1 148 1 287 1 238 3 98 1 74 7 356 1 153 1 39 1 270 1 217 1 359 2 
156 2 220 1 277 1 319 2 280 1 180 8 295 2 61 1 8 1 9 1 118 1 187 4 209 1 307 1 168 1 353 1 148 1 287 1 238 1 98 1 74 4 270 1 359 1 
156 2 200 1 340 1 319 1 280 1 180 12 295 2 61 1 324 2 8 1 9 1 303 1 187 6 92 2 209 1 189 2 168 2 353 1 148 1 287 1 238 1 74 6 153 1 39 1 359 2 
156 5 220 1 200 1 340 2 277 1 319 3 280 1 180 18 295 8 61 4 324 2 8 4 9 4 303 1 118 1 187 10 92 1 209 1 307 1 189 2 168 3 353 1 148 1 287 1 238 4 98 1 74 8 356 2 153 1 39 1 270 1 217 1 359 2 
156 6 200 1 340 3 319 3 2 1 280 1 180 16 295 8 61 4 324 3 8 4 9 4 303 1 187 9 92 2 209 1 189 3 168 3 353 1 148 1 287 1 238 4 74 7 356 2 153 1 39 1 359 2 
156 6 118 1 220 3 187 3 340 3 168 1 277 3 319 3 180 7 98 2 74 4 270 1 359 1 
156 4 220 1 200 1 340 1 277 1 319 3 2 1 280 1 180 18 295 8 61 4 324 2 8 4 9 4 303 1 118 1 187 10 92 1 209 1 307 1 189 2 168 3 353 1 148 1 287 1 238 4 98 1 74 8 356 2 153 1 39 1 270 1 359 2 
207 1 124 1 255 1 331 1 339 1 191 1 325 1 
207 1 331 1 142 1 339 1 191 1 202 1 333 1 311 1 124 1 255 1 17 1 325 1 
346 1 143 1 357 1 16 1 100 1 133 1 348 1 175 1 351 1 43 1 95 1 
207 1 164 1 339 1 191 2 133 1 351 1 95 1 255 2 346 1 97 1 83 1 5 1 357 1 16 1 239 1 100 1 38 1 175 1 
177 1 339 2 133 1 346 1 255 2 83 1 5 1 282 1 207 1 164 2 188 1 49 1 191 2 170 1 351 2 97 1 16 1 357 1 100 1 239 1 240 1 38 2 175 3 
177 1 339 2 133 1 346 2 255 2 5 1 282 1 207 1 164 2 188 1 190 1 49 1 191 2 170 1 351 2 97 1 53 1 16 2 357 1 100 2 239 1 240 1 38 2 175 3 
104 1 133 1 346 3 203 2 184 1 7 1 282 1 117 1 91 1 188 1 146 1 31 1 170 1 351 1 95 1 192 1 53 1 16 3 357 1 100 3 174 2 38 1 175 4 
91 1 104 1 188 1 310 1 133 1 146 1 170 1 31 1 351 1 95 1 192 1 346 3 203 2 53 1 357 1 16 3 100 3 38 1 174 2 282 1 175 4 117 1 
346 1 357 1 16 1 100 1 133 1 313 1 
219 1 199 1 66 1 141 1 316 1 308 1 179 1 20 1 133 2 225 1 351 2 313 1 95 2 254 1 346 6 16 7 357 3 100 7 102 1 38 1 175 3 
220 1 277 1 319 2 133 1 180 6 81 2 83 1 5 1 230 2 8 2 9 2 187 3 191 2 238 2 97 1 193 1 98 1 16 1 100 1 239 1 102 1 198 1 156 2 339 1 249 1 295 4 346 1 255 2 24 1 61 2 25 1 164 1 207 2 118 1 307 1 168 1 263 1 351 1 355 1 74 3 75 1 357 1 38 1 175 1 270 1 271 1 359 1 
104 1 178 1 342 1 293 1 161 1 110 1 346 1 203 3 298 1 139 2 117 1 91 1 48 1 310 1 29 2 120 1 146 2 31 1 34 1 95 1 192 1 72 2 213 2 151 1 16 1 100 1 174 3 175 2 
66 1 104 1 133 1 351 1 313 1 346 2 16 2 357 2 100 2 152 1 102 1 38 1 175 2 
143 1 27 1 133 1 351 1 95 1 346 4 53 1 357 1 16 4 100 4 102 1 348 1 175 1 
316 1 308 1 133 1 351 1 334 1 346 2 227 1 16 2 6 1 357 2 100 2 282 1 38 1 175 1 
346 1 183 1 323 1 357 1 16 1 100 1 115 1 133 1 300 1 95 1 
141 1 20 1 133 1 351 1 346 2 16 2 172 1 357 1 100 2 102 1 175 1 
141 1 143 1 179 1 27 1 133 2 225 1 351 2 95 1 346 4 16 5 357 2 100 5 348 1 102 1 282 1 175 3 
141 1 143 1 27 1 133 2 225 1 351 2 95 1 346 4 16 5 357 2 100 5 348 1 102 1 282 1 175 3 140 1 
207 1 164 1 339 1 190 1 191 2 133 1 351 1 95 1 255 2 346 1 97 1 5 1 357 1 16 1 239 1 100 1 38 1 175 1 
199 1 66 1 316 1 308 1 133 1 351 1 346 1 16 1 357 2 100 1 282 1 38 1 175 1 
207 1 103 1 138 1 350 1 136 1 
207 1 103 2 91 1 177 1 131 1 49 1 350 2 147 1 136 1 296 1 192 1 203 2 138 2 151 1 240 1 174 2 173 1 245 1 117 1 
103 1 274 1 339 1 144 1 191 1 136 1 255 1 138 1 88 1 
147 1 296 1 136 1 
77 1 299 1 252 1 43 1 
77 1 341 1 119 1 299 1 252 1 329 1 338 1 
119 1 134 1 315 1 
77 1 163 1 341 1 79 1 119 3 299 1 264 1 252 1 122 1 42 2 329 3 338 1 
77 1 267 1 149 1 341 1 119 2 299 1 252 1 329 2 338 1 
77 1 341 1 119 1 264 1 224 1 45 1 183 1 214 1 115 1 338 1 329 1 
77 1 341 1 119 1 299 1 264 1 329 1 338 1 
341 1 119 1 299 2 264 1 252 1 329 1 338 1 
77 1 341 2 119 2 264 1 121 1 294 1 23 1 299 1 338 2 329 2 
77 2 260 1 341 1 119 3 264 1 252 1 224 1 314 1 149 2 85 1 299 1 338 1 329 3 
77 1 341 1 119 2 264 1 252 1 183 1 149 1 214 1 323 1 76 1 115 2 258 1 299 1 338 1 329 2 
77 2 260 1 341 2 119 4 264 1 252 1 224 1 237 1 267 1 149 2 299 1 338 2 329 4 
77 1 341 1 119 1 299 1 264 1 252 1 329 1 338 1 
77 3 260 1 341 1 234 1 119 4 122 1 252 2 224 1 42 1 149 2 163 1 299 2 329 4 338 1 
77 1 341 1 19 1 119 2 106 1 135 1 264 1 252 1 149 1 299 1 338 1 329 2 
77 1 163 1 341 1 119 3 299 1 264 1 252 1 122 2 42 2 155 1 329 3 338 1 
77 2 208 2 114 1 204 1 
11 1 341 1 119 1 264 1 329 1 338 1 
77 1 149 1 341 1 119 2 299 1 264 1 252 1 314 1 329 2 338 1 
290 1 
77 1 341 1 119 1 299 1 264 1 252 1 329 1 338 1 
77 1 149 1 341 1 119 3 299 1 264 1 252 1 42 1 314 1 329 3 338 1 
77 1 260 1 234 1 224 1 
77 1 299 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 3 301 1 250 1 251 1 73 2 240 3 143 1 130 1 65 1 37 1 86 1 379 2 298 2 
248 1 127 9 301 3 250 6 105 1 251 1 73 5 336 1 107 1 130 4 133 1 109 2 110 1 341 1 322 1 289 1 179 2 240 9 143 1 18 2 65 1 185 1 330 2 37 2 86 1 125 1 379 2 298 2 
248 1 127 9 301 3 250 6 105 1 251 1 73 5 336 1 107 1 130 4 133 1 109 2 110 1 341 1 322 1 289 1 179 2 240 9 143 1 18 2 65 1 185 1 330 2 37 2 86 1 125 1 379 2 298 2 
248 1 127 10 301 4 250 7 105 1 251 1 73 6 336 1 107 1 130 5 133 1 109 2 110 1 341 1 322 1 289 1 179 2 240 10 143 1 18 2 65 1 185 1 330 2 37 2 86 1 125 1 379 2 298 2 
248 1 127 7 301 2 250 4 105 1 251 1 73 4 336 1 107 1 130 3 133 1 109 1 110 1 341 1 322 1 179 2 240 7 143 1 18 2 65 1 185 1 330 2 37 2 86 1 125 1 379 2 298 2 
127 4 301 1 250 3 105 1 251 1 73 3 289 1 179 1 240 4 143 1 130 2 18 1 330 1 86 1 109 2 379 1 341 1 298 1 
127 2 73 1 251 1 179 1 336 1 268 1 240 2 143 1 166 1 330 1 37 1 125 1 86 1 379 1 298 1 89 1 
127 9 301 3 250 7 105 1 251 1 73 5 130 4 109 2 110 1 341 1 204 1 209 1 179 1 289 1 240 9 143 1 65 1 18 1 185 1 330 1 37 1 86 1 379 2 298 2 
127 9 301 3 250 7 105 1 251 1 73 5 130 4 109 2 110 1 341 1 204 1 209 1 179 1 289 1 240 9 143 1 65 1 18 1 185 1 330 1 37 1 86 1 379 2 298 2 
112 1 258 1 218 1 276 1 115 1 238 2 128 2 342 1 
137 1 112 1 258 2 276 2 115 1 369 2 238 5 128 5 118 1 306 1 242 1 371 2 292 1 173 1 199 2 84 1 38 1 297 1 342 1 
112 1 132 1 342 1 
112 1 108 2 363 1 
247 2 64 1 226 2 338 2 233 2 150 1 13 2 175 2 
247 2 72 1 168 1 226 3 46 2 0 1 50 1 194 1 307 1 308 1 255 1 357 1 93 1 338 2 233 2 282 1 313 1 314 2 158 1 175 2 284 2 28 1 54 1 316 1 234 1 239 2 264 2 263 1 13 3 119 1 241 1 325 1 64 1 150 1 149 1 350 1 378 1 
247 1 64 1 226 1 338 1 233 1 277 1 161 1 13 1 175 1 181 1 
112 1 315 1 226 1 238 1 128 1 13 1 181 1 231 1 270 1 271 1 167 1 338 1 103 1 342 1 
112 1 247 1 315 1 226 1 238 2 128 2 13 1 181 1 231 1 167 1 233 1 338 1 175 1 103 1 342 1 
258 1 276 1 238 1 128 1 32 1 
112 1 258 1 259 1 276 1 115 1 238 2 128 2 342 1 
258 1 238 1 128 1 
247 1 276 1 277 1 226 1 161 1 238 1 128 1 13 1 181 1 356 1 64 1 233 1 338 1 175 1 
112 1 
247 1 54 1 72 1 249 1 316 1 226 2 239 1 263 1 13 2 62 1 241 1 194 1 307 1 93 1 338 1 314 1 378 1 175 1 203 1 284 1 
247 1 226 2 13 2 146 1 281 1 338 2 233 1 150 2 175 1 
372 1 334 1 62 1 
54 1 316 1 72 1 226 1 239 1 263 1 13 1 241 1 194 1 307 1 51 1 93 1 150 1 314 1 378 1 284 1 
132 1 150 1 
247 3 233 1 226 3 338 3 150 1 13 3 175 3 203 1 
247 1 226 1 338 1 161 1 13 1 175 1 181 1 
247 1 146 1 281 1 226 1 338 1 233 1 13 1 175 1 181 1 
247 3 71 1 72 1 249 1 168 1 226 4 46 1 128 1 194 1 307 1 308 1 357 1 281 1 231 1 93 1 233 2 338 3 282 1 314 1 158 1 175 3 203 1 284 1 28 1 315 1 54 1 207 1 316 1 234 1 238 1 239 1 264 2 263 1 13 4 119 1 241 1 181 1 325 1 64 1 167 1 150 1 149 1 378 1 103 1 
247 1 271 1 226 2 338 2 150 1 13 2 96 1 175 1 203 1 
112 1 247 3 315 1 71 1 249 1 226 3 238 1 128 1 13 3 181 1 281 1 231 1 167 1 233 1 338 3 340 1 175 3 203 2 103 1 
247 2 226 2 13 2 62 1 372 1 281 1 233 1 338 2 175 2 203 1 
54 1 316 1 72 1 226 1 239 1 263 1 13 1 194 1 241 1 307 1 93 1 150 1 314 1 378 1 284 1 
54 1 316 1 72 1 226 1 239 1 13 1 194 1 241 1 307 1 172 1 374 1 150 1 314 1 378 1 284 1 
168 2 334 2 225 1 46 4 254 1 309 1 311 1 357 1 158 1 205 1 28 1 234 1 264 2 119 1 62 2 61 1 372 2 325 1 66 1 186 1 350 2 331 1 
247 1 226 1 338 1 201 1 13 1 175 1 181 1 103 1 
247 4 249 1 226 5 192 1 13 5 281 1 271 1 338 5 233 1 329 1 150 1 96 1 175 4 203 2 
247 2 201 1 226 2 338 2 161 1 13 2 175 2 181 1 
53 1 232 1 
53 1 232 1 
351 1 163 1 
351 1 163 1 
351 1 163 1 
174 1 53 1 232 1 
174 1 53 1 232 1 
53 2 6 1 232 2 252 1 351 1 163 1 
53 1 114 1 232 1 
174 1 53 1 232 1 
159 1 53 1 232 1 
159 1 53 1 232 1 
159 1 53 1 232 1 
112 1 55 1 56 1 211 2 98 2 31 3 138 2 238 2 252 1 128 2 79 1 14 1 144 2 229 1 53 2 25 1 328 1 232 2 364 2 
247 2 226 2 128 1 169 1 53 1 24 1 232 1 338 2 364 1 175 2 27 1 111 1 211 1 114 1 31 1 98 1 138 1 238 1 14 1 13 2 60 1 293 1 376 1 150 1 
18 1 317 2 330 2 2 1 89 1 
18 1 330 1 179 1 
330 1 179 1 89 1 
343 1 317 1 18 2 330 3 2 1 89 1 
317 1 18 1 244 1 330 2 2 1 89 1 
354 1 276 4 225 1 128 5 193 1 306 1 254 1 227 2 310 1 108 3 200 1 199 1 339 1 363 1 27 1 111 1 342 1 112 2 137 3 206 2 258 1 115 1 58 2 369 1 238 5 118 2 371 1 293 1 66 1 186 1 222 1 189 1 
354 2 276 7 225 3 304 1 128 9 306 1 254 3 197 1 108 9 200 3 199 2 136 1 363 3 76 1 342 1 112 5 137 8 206 6 258 6 115 1 58 6 369 2 238 9 118 6 32 5 215 1 242 1 371 2 142 5 293 4 66 3 148 1 186 3 222 2 189 1 
354 1 276 2 225 1 128 3 254 1 227 1 310 1 199 1 200 1 108 4 339 1 363 2 342 1 112 3 137 3 206 2 58 2 369 1 238 3 118 2 242 1 371 1 293 1 66 1 186 1 222 1 
354 1 276 3 225 2 128 4 254 2 227 2 310 1 108 7 199 1 200 2 339 1 363 3 136 1 342 1 76 1 112 4 137 5 206 4 58 4 369 1 238 4 118 4 242 1 371 1 293 2 66 2 148 1 186 2 222 1 
17 1 132 1 241 1 
345 1 241 1 
286 1 
241 1 307 1 
17 2 327 1 305 1 241 3 194 1 307 1 
241 1 194 1 307 1 
235 1 241 1 
168 3 225 1 46 7 178 1 180 1 120 1 35 1 326 1 257 1 134 2 123 1 135 2 186 1 349 3 350 4 104 1 333 1 
168 3 225 1 46 7 178 1 180 1 120 1 35 1 326 1 257 1 134 2 123 1 135 2 186 1 349 3 350 4 104 1 333 1 
168 3 225 1 46 7 178 1 180 1 120 1 35 1 326 1 257 1 219 1 134 2 123 1 135 2 186 1 349 3 350 4 104 1 333 1 
168 15 303 3 225 4 46 31 254 3 357 1 200 3 134 3 257 5 135 3 158 1 236 1 178 1 160 1 180 1 264 2 213 4 267 1 120 2 119 1 81 1 35 2 325 1 326 2 123 1 66 3 243 1 295 1 350 16 349 8 186 4 187 1 104 1 333 2 
168 4 45 1 225 1 46 9 357 2 134 2 257 1 135 3 158 2 160 1 178 1 264 4 180 1 119 2 120 1 35 1 325 2 326 1 377 1 186 1 350 5 349 4 104 1 333 1 
72 1 127 1 307 1 91 2 359 1 26 1 314 1 284 1 54 1 368 2 316 1 288 1 239 1 11 1 139 1 240 1 241 1 37 2 272 1 85 1 69 2 379 1 298 1 
127 2 72 1 250 1 73 1 251 1 191 1 171 1 91 1 314 1 284 1 54 1 368 1 343 1 318 1 239 1 179 1 240 2 16 1 143 1 18 1 330 2 37 1 296 1 86 1 124 1 221 1 69 1 379 1 298 1 89 1 
127 3 72 1 250 2 73 1 251 1 191 1 91 1 26 1 314 1 283 1 284 1 54 1 368 1 343 1 318 1 262 1 239 1 179 1 240 3 16 1 143 1 18 1 330 2 37 1 296 1 221 1 69 1 379 1 298 1 89 1 
127 2 72 1 250 2 73 1 251 1 91 1 314 1 283 1 284 1 54 1 368 1 343 1 318 1 262 1 239 1 179 1 240 2 16 1 143 1 18 1 330 2 37 1 296 1 69 1 89 1 
54 1 72 1 127 1 368 1 343 1 318 1 191 1 239 1 179 1 16 1 240 1 91 1 18 1 330 2 37 1 296 1 314 1 221 1 124 1 86 1 283 1 379 1 69 1 284 1 89 1 298 1 
153 1 
226 1 128 5 1 4 170 2 3 1 230 1 231 1 338 1 7 1 284 2 342 1 137 2 54 1 346 1 238 5 239 2 139 1 13 1 140 2 241 1 181 1 141 1 103 1 353 2 299 2 354 1 72 1 106 1 306 1 253 1 195 2 196 1 307 1 256 1 108 2 199 1 157 2 363 2 314 2 112 2 315 1 258 6 208 1 316 2 113 1 115 3 320 1 369 1 118 2 33 2 371 1 270 1 271 1 167 1 85 1 
226 1 106 1 128 3 1 2 3 1 231 1 157 1 338 1 315 1 208 1 258 2 113 1 115 1 346 1 238 3 13 1 181 1 218 1 271 1 270 1 167 1 103 1 
299 1 226 1 106 1 128 3 1 3 3 1 231 1 338 1 342 1 315 1 112 1 258 1 208 1 113 1 115 1 346 1 238 3 13 1 181 1 218 1 271 1 270 1 167 1 103 1 
299 1 226 1 106 1 128 3 1 3 170 1 3 1 231 1 157 1 338 1 342 1 315 1 112 1 208 1 258 2 113 1 115 1 346 1 238 3 13 1 181 1 218 1 271 1 270 1 167 1 103 1 
226 1 128 5 47 1 1 6 170 4 3 1 231 1 338 1 342 5 137 1 346 1 238 5 13 1 181 1 140 2 103 1 353 2 299 4 106 1 306 1 195 2 196 1 75 1 199 1 157 4 363 2 315 1 112 5 258 7 208 1 113 1 115 3 320 1 369 1 30 1 118 1 80 1 371 1 33 2 218 1 167 1 270 1 271 1 332 1 
226 1 128 4 1 4 170 2 3 1 231 1 338 1 7 1 342 1 137 1 346 1 238 4 13 1 181 1 140 2 103 1 353 2 299 2 106 1 306 1 195 2 196 1 199 1 108 2 157 2 363 2 315 1 112 2 208 1 258 4 113 1 115 2 320 1 369 1 118 1 371 1 33 2 167 1 271 1 270 1 
299 2 226 1 106 1 128 4 1 4 306 1 170 2 195 2 196 1 3 1 199 1 231 1 157 2 338 1 363 2 342 1 112 1 137 1 315 1 258 4 208 1 113 1 115 2 320 1 30 1 369 1 346 1 238 4 118 1 13 1 80 1 140 2 181 1 33 2 371 1 271 1 270 1 167 1 103 1 332 1 353 2 
299 2 226 1 106 1 128 4 1 4 306 1 170 2 195 2 196 1 3 1 199 1 231 1 157 2 338 1 363 2 342 1 112 1 137 1 315 1 258 4 208 1 113 1 115 2 320 1 30 1 369 1 346 1 238 4 118 1 13 1 80 1 140 2 181 1 33 2 371 1 271 1 270 1 167 1 103 1 332 1 353 2 
299 2 22 1 226 1 154 2 106 1 128 4 1 4 306 1 170 2 195 2 196 1 3 1 92 1 108 2 199 1 231 1 157 2 94 2 338 1 342 1 112 1 137 1 315 1 258 4 208 1 113 1 115 2 30 1 369 1 346 1 238 4 118 1 13 1 140 2 181 1 371 1 271 1 270 1 167 1 220 1 103 1 
299 3 226 1 106 1 128 4 47 1 306 1 1 5 195 2 170 3 196 1 3 1 199 1 231 1 157 3 338 1 363 2 342 1 112 1 137 1 315 1 208 1 258 5 113 1 115 2 320 1 30 1 369 1 346 1 238 4 118 1 13 1 80 1 140 2 181 1 33 2 371 1 271 1 270 1 167 1 103 1 332 1 353 2 
299 3 226 1 106 1 128 4 47 1 306 1 1 5 195 2 170 3 196 1 3 1 199 1 231 1 157 3 338 1 363 2 342 1 112 1 137 1 315 1 208 1 258 5 113 1 115 2 320 1 30 1 369 1 346 1 238 4 118 1 13 1 80 1 140 2 181 1 33 2 371 1 271 1 270 1 167 1 103 1 332 1 353 2 
226 1 128 4 1 4 170 2 3 1 231 1 94 2 338 1 7 1 342 1 137 1 346 1 238 4 13 1 181 1 140 2 103 1 299 2 106 1 154 2 306 1 195 2 196 1 199 1 108 2 157 2 315 1 112 1 208 1 258 4 113 1 115 2 369 1 118 1 371 1 167 1 271 1 270 1 220 1 
168 3 334 1 225 1 46 6 357 1 132 1 134 1 135 2 158 1 205 1 28 1 234 1 178 1 264 2 180 1 62 1 119 1 120 1 372 1 35 1 325 1 150 2 349 2 350 3 186 1 104 1 
168 6 334 11 303 3 225 2 46 14 254 1 357 2 337 1 200 2 257 1 313 1 158 2 28 1 234 2 236 1 237 1 344 1 100 1 213 3 264 4 119 2 62 11 63 1 372 4 325 2 66 2 150 1 149 1 349 1 350 8 186 1 187 1 
247 1 72 1 249 1 168 1 226 2 46 2 194 1 307 1 51 1 357 1 312 1 93 1 338 1 314 1 313 1 158 1 175 1 203 1 284 1 28 1 54 1 316 1 234 1 237 1 116 1 239 1 263 1 264 2 13 2 241 1 119 1 372 1 325 1 150 1 149 1 350 1 378 1 352 1 
168 4 275 1 334 3 226 2 225 1 46 7 93 1 135 1 338 1 282 1 175 1 284 1 176 1 54 1 234 2 237 1 97 1 239 1 13 2 241 1 62 3 66 1 149 1 349 1 350 3 186 1 247 1 249 1 72 1 194 1 254 1 307 1 357 2 200 1 314 1 158 2 203 1 28 2 316 1 319 1 264 4 263 1 119 2 372 3 325 2 83 1 378 1 
247 1 72 2 42 1 168 1 226 1 46 2 278 1 50 2 171 1 307 2 357 2 5 1 362 1 338 1 314 8 313 1 283 1 175 1 158 2 203 1 284 7 365 1 205 1 28 2 366 1 54 2 316 2 234 2 370 1 239 8 264 4 139 1 13 1 241 3 119 2 325 2 149 1 350 1 85 1 
28 1 234 1 334 1 225 1 46 2 264 2 62 1 119 1 61 1 372 1 357 1 325 1 257 1 66 1 349 1 350 2 158 1 205 1 
28 1 234 1 168 2 334 1 46 2 264 2 62 1 119 1 254 1 372 1 357 1 325 1 186 1 158 1 331 1 205 1 
28 1 168 2 234 1 334 2 225 1 46 4 264 2 254 1 62 2 119 1 372 2 357 1 325 1 200 1 66 1 186 1 350 2 158 1 205 1 
28 1 234 1 334 1 225 1 46 2 264 2 62 1 119 1 61 1 372 1 357 1 325 1 257 1 66 1 349 1 350 2 158 1 365 1 
28 1 234 1 168 2 334 1 46 2 264 2 62 1 119 1 254 1 372 1 357 1 325 1 186 1 158 1 331 1 365 1 
28 1 168 2 234 1 334 2 225 1 46 4 264 2 254 1 62 2 119 1 372 2 357 1 325 1 200 1 257 1 66 1 186 1 349 1 350 2 158 1 365 1 
28 1 168 2 234 1 334 2 225 1 46 4 264 2 254 1 62 2 119 1 372 2 357 1 325 1 200 1 66 1 186 1 350 2 158 1 
72 1 168 1 226 1 46 2 194 1 307 1 357 1 93 1 282 1 313 1 314 1 158 1 284 1 28 1 54 1 316 1 234 1 239 1 263 1 264 2 13 1 241 1 119 1 325 1 150 1 149 1 350 1 378 1 
72 1 168 1 226 1 46 2 194 1 307 1 172 1 357 1 313 1 314 1 158 1 284 1 28 1 54 1 316 1 234 1 239 1 264 2 13 1 241 1 119 1 325 1 374 1 150 1 149 1 67 1 350 1 378 1 
28 1 168 2 234 1 237 1 334 2 225 1 46 4 264 2 254 1 62 2 119 1 372 2 357 1 325 1 200 1 66 1 186 1 350 2 158 1 
72 1 168 2 334 2 225 1 226 1 46 4 254 1 194 1 171 1 307 1 357 1 200 1 93 1 282 1 314 1 158 1 284 1 176 1 28 1 54 1 234 1 239 1 263 1 264 2 13 1 62 2 241 1 119 1 372 2 325 1 66 1 186 1 350 2 378 1 
247 1 168 1 334 1 226 1 225 1 46 3 254 1 357 1 281 1 200 1 257 1 233 1 338 1 175 1 158 1 28 1 234 1 237 1 264 2 13 1 119 1 62 1 372 1 325 1 66 1 186 1 349 1 350 2 188 1 
247 1 168 2 334 1 226 1 225 1 46 3 254 1 357 1 281 1 200 1 233 1 338 1 175 1 158 1 28 1 234 1 237 1 264 2 13 1 62 1 119 1 372 1 325 1 269 1 66 1 350 1 186 1 
274 1 168 21 45 1 225 5 46 41 90 1 134 1 135 2 236 3 99 1 178 1 180 1 290 4 15 1 102 1 66 4 246 1 186 5 349 6 350 20 187 1 104 1 302 1 303 3 254 4 357 3 200 4 257 4 158 3 210 1 260 2 160 1 264 6 213 4 214 1 119 3 120 1 35 1 325 3 373 1 165 1 87 1 126 1 
274 1 168 18 45 1 225 5 46 38 90 1 134 1 135 2 236 3 99 1 178 1 180 1 290 4 15 1 102 1 66 4 246 1 186 4 349 5 350 20 187 1 104 1 302 1 303 3 254 3 357 4 200 4 257 3 158 4 210 1 260 2 160 2 264 8 213 4 214 1 119 4 120 1 35 1 325 4 373 1 165 1 87 1 126 1 
274 1 168 19 302 1 45 1 303 2 225 5 46 37 90 1 254 4 357 2 200 4 134 1 257 2 135 2 158 2 210 1 236 2 260 1 99 1 178 1 160 1 180 1 213 3 264 4 290 4 15 1 214 1 120 1 119 2 35 1 102 1 373 1 325 2 66 4 246 1 349 4 350 18 186 5 187 1 126 1 104 1 
168 7 45 1 303 1 225 2 46 13 254 2 357 2 200 2 257 1 158 2 236 1 260 1 213 2 264 4 290 1 119 2 102 1 373 1 325 2 165 1 66 2 246 1 350 6 349 1 186 2 187 1 88 1 126 1 
274 1 168 12 302 1 45 1 303 2 225 3 46 26 90 1 254 2 357 3 200 3 257 2 135 1 158 3 210 1 236 2 260 2 99 1 160 2 264 6 213 2 290 4 15 1 214 1 119 3 102 1 373 1 325 3 66 3 246 1 349 3 186 2 350 14 126 2 
53 1 211 1 25 1 328 1 98 1 232 1 138 1 252 1 266 1 364 1 
112 1 55 1 56 1 211 1 98 1 31 2 238 1 138 1 252 1 128 1 14 1 144 1 229 1 53 1 25 1 328 1 232 1 364 1 
112 1 55 1 56 1 211 1 98 1 31 2 238 1 138 1 252 1 128 1 14 1 144 1 229 1 53 1 25 1 328 1 232 1 364 1 
112 1 55 1 56 1 211 1 98 1 31 2 238 1 138 1 252 1 128 1 14 1 144 1 229 1 53 1 25 1 328 1 232 1 364 1 
174 1 6 1 279 1 
174 1 6 1 279 1 
159 1 20 1 
159 1 6 1 20 1 
24 1 376 1 
247 2 276 1 226 2 128 1 169 1 53 1 24 1 232 1 338 2 364 1 27 1 175 2 111 1 56 1 211 1 114 1 98 1 31 1 238 1 138 1 13 2 60 1 183 1 144 1 293 1 376 1 150 1 
174 1 279 1 
159 1 6 1 20 1 
114 1 169 1 
40 1 300 1 53 1 211 1 23 1 98 1 232 1 138 1 364 1 
72 1 168 1 44 1 226 2 46 2 50 2 307 1 357 1 5 1 362 1 338 2 314 2 313 1 158 1 284 2 28 1 54 1 77 1 367 1 234 1 237 1 239 2 264 2 13 2 241 1 119 1 182 1 34 1 325 1 149 1 350 1 
54 1 72 1 316 1 239 1 139 1 101 1 241 1 307 1 91 1 147 1 359 1 314 1 85 1 284 1 
54 1 72 1 343 1 318 1 239 2 191 1 179 1 101 1 16 1 171 1 91 1 280 1 18 1 361 1 330 2 314 2 283 1 284 2 89 1 
54 1 72 1 343 1 318 1 239 1 191 1 179 1 162 1 16 1 91 1 18 1 361 1 330 2 314 1 283 1 284 1 89 1 
54 1 72 1 343 1 318 1 239 1 191 1 179 1 101 1 16 1 91 1 280 1 18 1 361 1 330 2 314 1 283 1 284 1 89 1 
8 1 
112 1 137 1 369 1 118 1 306 1 371 1 199 1 84 1 38 1 342 1 
137 1 112 1 132 1 84 1 38 1 118 1 342 1 
128 1 306 1 199 1 108 1 363 1 342 1 137 1 112 2 258 1 115 1 320 1 369 1 238 1 118 1 371 1 33 1 353 1 
70 1 273 1 72 2 354 1 223 1 225 1 128 2 306 2 254 1 194 1 307 1 155 1 200 1 108 6 199 2 363 3 314 1 284 1 285 1 112 3 137 4 206 3 258 2 54 1 316 1 319 1 115 1 58 3 321 1 369 2 345 2 238 2 239 1 118 3 241 4 184 1 371 2 17 1 66 1 327 1 245 1 167 1 186 1 
354 1 274 1 302 1 303 1 225 2 128 1 306 2 90 1 254 2 230 1 52 1 108 6 199 2 200 2 363 3 342 2 137 8 112 5 258 1 206 5 177 1 236 1 115 1 58 5 321 2 369 2 238 1 213 1 118 5 15 1 214 1 121 1 371 2 66 2 186 2 
247 1 226 1 225 2 277 1 128 1 306 1 356 1 52 1 199 1 233 1 338 1 175 1 137 2 321 2 369 1 161 1 238 1 180 1 118 2 13 1 181 1 120 1 164 1 371 1 35 1 64 1 186 1 332 1 
112 2 137 2 206 2 58 2 225 1 118 2 254 1 200 1 108 4 66 1 363 2 186 1 
247 2 72 1 168 1 226 3 46 1 194 1 307 1 308 1 357 1 93 1 338 2 233 2 282 1 314 1 158 1 175 2 284 1 28 1 54 1 316 1 234 1 239 1 264 2 263 1 13 3 119 1 241 1 325 1 64 1 150 1 149 1 378 1 
137 1 112 4 206 2 354 1 58 2 369 1 118 2 306 1 371 1 230 1 108 4 199 1 134 1 363 2 342 2 
112 1 258 1 115 1 238 1 128 1 342 1 
72 1 354 2 128 3 306 1 253 1 307 1 228 2 256 1 230 2 199 2 314 4 284 4 137 2 54 1 258 4 316 2 78 1 115 2 369 2 239 4 238 3 59 1 118 2 139 1 242 1 241 1 371 2 375 1 85 1 
98 1 138 1 129 1 
98 1 138 1 129 1 
98 1 138 1 129 1 
98 1 138 1 48 1 
98 1 138 1 48 1 
98 1 138 1 48 1 
98 1 138 1 
53 1 232 1 
24 1 328 1 98 1 138 1 323 1 
274 1 168 4 45 1 303 1 225 1 46 8 357 1 134 1 135 2 158 1 236 1 178 1 213 1 264 2 180 1 119 1 120 1 35 1 325 1 186 1 350 4 349 2 104 1 
274 1 168 5 45 1 303 1 225 2 46 11 357 2 200 1 134 1 257 1 135 2 158 2 236 1 178 1 180 1 213 2 264 4 120 1 119 2 35 1 325 2 66 1 186 1 350 6 349 3 187 1 104 1 21 1 
274 1 168 10 302 1 45 1 303 1 225 3 46 19 90 1 254 2 357 3 200 2 134 1 257 1 135 3 158 3 236 1 178 1 160 1 180 1 213 1 264 6 214 1 15 1 120 1 119 3 35 1 325 3 66 2 350 9 186 3 349 4 104 1 21 1 
274 1 168 5 302 1 45 1 303 1 225 2 46 12 90 1 254 1 357 4 200 2 257 1 135 1 158 4 236 1 160 2 213 1 264 8 214 1 15 1 119 4 325 4 66 2 350 7 186 1 349 2 21 1 
274 1 168 4 45 1 303 1 225 1 46 8 357 1 134 1 135 2 158 1 236 1 178 1 213 1 264 2 180 1 119 1 120 1 35 1 325 1 186 1 350 4 349 2 104 1 
274 1 168 7 302 1 45 1 303 1 225 2 46 13 90 1 254 2 357 2 200 2 257 1 135 1 158 2 236 1 160 1 213 1 264 4 214 1 15 1 119 2 325 2 66 2 350 6 186 2 349 2 
274 1 168 8 302 1 45 1 303 1 225 3 46 18 90 1 254 1 357 4 200 2 134 1 257 2 135 3 158 4 236 1 178 1 160 2 180 1 213 1 264 8 15 1 214 1 120 1 119 4 35 1 325 4 66 2 350 10 186 2 349 5 104 1 21 1 
274 1 168 7 302 1 45 1 303 1 225 3 46 16 90 1 254 2 357 4 200 3 257 3 135 1 158 4 236 1 160 2 213 1 264 8 15 1 214 1 119 4 325 4 165 1 66 3 350 9 186 2 349 4 
168 4 225 1 46 7 178 1 180 1 120 3 35 3 257 3 135 3 186 1 349 6 350 3 104 2 
274 1 168 8 302 1 45 1 303 1 225 3 46 18 90 1 254 1 357 4 200 2 134 1 257 1 135 3 158 4 236 1 178 1 160 2 180 1 213 1 264 8 15 1 214 1 120 1 119 4 35 1 325 4 165 1 66 2 350 10 186 2 349 4 104 1 
168 4 225 1 46 8 160 1 178 1 180 1 264 4 119 2 120 1 35 1 357 2 325 2 134 1 257 1 135 2 186 1 350 4 349 3 158 2 104 1 
35 1 132 1 168 3 134 1 135 2 225 1 46 6 178 1 180 1 186 1 350 3 349 2 120 1 104 1 
168 2 225 1 46 4 264 2 254 1 119 1 357 1 325 1 200 1 66 1 257 1 186 1 349 1 350 2 158 1 21 1 
168 4 236 1 303 1 225 1 46 7 213 2 254 1 200 1 66 1 257 1 186 1 350 3 349 1 187 1 
168 12 303 2 225 5 46 25 254 2 357 1 200 2 134 1 257 4 135 4 158 1 344 1 160 1 178 1 180 2 213 2 264 2 120 2 119 1 164 1 35 2 63 1 325 1 66 2 186 5 350 13 349 8 187 1 104 1 
168 1 46 1 213 1 
303 1 46 1 350 1 
168 3 319 1 225 1 46 6 254 1 200 1 66 1 257 1 135 1 350 3 349 2 186 1 
274 1 168 7 302 1 45 1 303 1 225 2 46 13 90 1 254 2 357 2 200 2 257 1 135 1 158 2 236 1 160 1 213 1 264 4 214 1 15 1 119 2 325 2 66 2 350 6 186 2 349 2 
168 3 225 1 46 6 180 1 120 1 35 1 257 1 135 1 350 3 186 1 349 2 
168 2 43 1 46 3 160 1 178 1 264 2 120 1 119 1 35 1 357 1 325 1 257 1 135 1 350 1 349 2 158 1 104 1 
168 5 45 1 225 2 46 10 264 2 180 1 119 1 120 2 164 1 35 2 325 1 357 1 257 2 135 3 349 5 350 5 186 2 158 1 
45 1 225 1 46 2 264 2 119 1 357 1 325 1 66 1 257 1 350 2 349 1 158 1 
168 2 45 1 225 1 46 4 264 2 119 1 254 1 357 1 325 1 200 1 66 1 186 1 350 2 158 1 
168 2 43 1 45 1 160 1 46 3 264 6 119 3 120 1 35 1 357 3 325 3 165 1 257 1 135 1 349 2 350 1 158 3 
168 18 43 1 45 1 303 3 225 5 46 34 254 3 357 5 200 3 134 1 257 5 135 4 158 5 236 1 178 1 160 2 180 2 213 4 264 10 267 1 120 3 119 5 35 3 325 5 165 1 243 1 66 3 295 1 350 16 349 9 186 5 187 1 104 1 21 1 
271 1 36 1 226 1 338 1 150 1 13 1 96 1 
10 1 355 1 226 1 49 1 13 1 216 1 217 1 36 1 271 1 338 1 150 1 96 1 
54 1 72 1 316 1 224 1 239 4 139 1 241 1 171 1 307 1 347 1 314 4 85 1 284 4 
54 1 72 1 316 1 330 1 239 1 179 1 314 1 16 1 284 1 89 1 
54 1 72 1 5 1 239 2 314 2 283 1 241 1 307 1 284 2 171 1 34 1 
54 1 72 1 132 1 316 1 239 1 314 1 85 1 139 1 241 1 307 1 284 1 
247 1 54 1 72 1 316 1 226 2 239 1 13 2 241 1 194 1 307 1 93 1 338 1 150 1 314 1 378 1 175 1 203 1 284 1 
247 2 54 1 72 1 235 1 226 2 239 1 13 2 181 1 241 3 194 2 307 2 228 1 131 1 231 1 93 1 338 2 150 1 314 1 378 1 175 1 103 1 203 1 284 1 
247 2 72 1 226 2 194 2 307 2 172 1 228 1 131 1 231 1 338 2 314 2 175 1 203 1 284 2 54 1 235 1 239 2 13 2 241 3 181 1 347 1 150 1 378 1 103 1 
72 1 128 2 74 1 194 1 307 1 228 1 358 1 131 1 314 3 284 3 342 1 112 1 54 1 258 1 316 1 235 1 345 1 239 3 238 2 241 4 347 1 17 1 167 1 
112 1 258 1 54 1 316 1 72 1 235 1 345 1 238 2 239 3 128 2 194 1 241 4 307 1 184 1 347 1 228 1 17 1 131 1 167 1 314 3 284 3 342 1 
54 1 366 1 72 1 239 1 314 1 284 1 
366 1 54 2 316 2 72 3 42 1 370 1 239 7 265 1 50 1 278 1 335 1 194 1 241 3 171 1 307 2 5 1 327 1 95 1 314 7 283 1 284 6 
275 1 168 3 334 1 226 2 225 1 46 6 171 1 93 1 134 1 135 2 338 1 282 1 175 1 284 1 176 1 54 1 234 2 237 1 239 1 178 1 180 1 13 2 241 1 62 1 150 2 349 2 350 3 186 1 104 1 247 1 72 1 194 1 307 1 357 2 314 1 158 2 203 1 28 2 77 1 263 1 264 4 119 2 120 1 372 1 35 1 325 2 378 1 
70 1 273 1 276 1 128 3 306 2 199 2 314 1 284 1 342 1 285 1 137 1 112 1 258 2 316 1 115 1 369 2 345 1 239 1 238 3 118 1 241 2 371 2 184 1 17 1 375 1 167 1 84 1 38 1 
366 1 54 1 72 2 239 2 194 1 241 2 171 1 307 1 155 1 17 1 327 1 314 2 284 2 
54 1 72 2 239 2 12 1 335 1 194 1 241 1 307 1 228 1 95 1 314 2 68 1 284 2 39 1 
54 2 316 1 72 2 224 1 239 5 370 1 139 1 278 1 241 3 171 1 307 2 228 1 5 1 314 5 85 1 284 4 
54 2 316 1 72 2 224 1 239 5 370 1 139 1 241 3 171 1 307 2 228 1 4 1 5 1 314 5 85 1 284 4 
247 1 54 1 72 1 316 1 226 2 239 1 13 2 241 1 194 1 307 1 172 1 338 1 150 1 314 1 378 1 175 1 203 1 284 1 
54 1 72 2 239 1 265 1 335 1 194 1 241 1 307 1 228 1 327 1 95 1 314 1 284 1 
367 1 57 1 44 1 117 1 226 1 13 1 182 1 338 1 202 1 
117 1 324 1 19 1 
41 1 57 1 117 1 150 1 202 1 
112 1 315 1 41 2 71 1 276 1 57 2 117 1 238 2 128 2 324 1 181 1 231 1 167 1 150 1 294 1 202 2 19 1 103 1 342 1 
143 1 127 1 73 1 251 1 86 1 379 1 240 1 298 1 
127 4 301 1 250 2 261 1 251 2 73 3 240 4 143 2 130 1 360 1 125 1 379 1 151 1 298 1 
127 2 29 1 250 1 212 1 73 1 251 1 240 2 143 1 86 1 379 1 204 1 298 1 
127 3 261 1 73 1 251 1 240 3 143 1 198 1 360 2 86 1 125 2 379 1 298 1 
152 1 73 2 348 2 9 1 
127 1 287 1 86 1 379 1 240 1 298 1 
143 1 132 1 73 1 251 1 
143 1 127 1 73 1 251 1 379 1 240 1 298 1 
37 1 69 1 240 1 
127 3 261 1 73 1 251 1 240 3 143 1 122 1 360 1 86 1 125 2 379 1 298 1 
143 1 127 2 250 1 73 1 251 1 109 1 379 1 240 2 298 1 
127 1 105 1 73 1 179 1 240 1 130 1 18 1 330 1 86 1 379 1 298 1 
127 1 73 1 251 1 86 1 379 1 240 1 298 1 
143 1 127 1 251 2 86 1 379 1 240 1 298 1 
127 2 73 1 251 1 240 2 82 1 145 1 156 1 86 1 379 2 298 2 
127 3 301 1 250 2 251 1 73 2 240 3 143 1 130 1 185 1 86 1 379 1 110 1 298 1 
127 2 343 1 250 1 73 1 251 1 179 1 240 2 291 1 143 1 18 1 330 2 86 1 379 1 89 1 298 1 
127 4 301 1 250 2 251 1 73 2 289 1 240 4 143 1 130 1 86 1 109 1 379 2 298 2 
143 1 127 3 250 1 73 1 251 1 125 1 86 1 110 1 379 1 240 3 298 1 
130 1 301 1 73 1 151 1 
73 1 251 1 
143 1 127 2 250 1 73 1 251 1 86 1 110 1 379 1 240 2 298 1 
190 1 
143 1 127 1 73 1 251 1 86 1 379 1 240 1 298 1 

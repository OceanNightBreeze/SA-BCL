#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 9 343 1 62 1 36 1 64 1 206 4 348 1 88 5 186 2 92 2 328 2 330 1 94 2 70 1 311 1 47 2 97 1 99 1 18 2 143 1 358 2 263 6 26 1 172 1 341 3 200 1 125 9 267 1 
295 9 343 1 62 1 36 1 64 1 206 4 348 1 88 5 186 2 92 2 328 2 330 1 94 2 70 1 311 1 47 2 97 1 99 1 18 2 143 1 358 2 263 6 26 1 172 1 341 3 200 1 125 9 267 1 
295 10 343 1 62 1 36 1 64 1 206 5 348 1 88 6 186 2 92 2 328 2 330 1 94 2 70 1 311 1 47 2 97 1 99 1 18 2 143 1 358 2 263 7 26 1 172 1 341 4 200 1 125 10 267 1 
295 7 343 1 62 1 36 1 64 1 206 3 348 1 88 4 186 2 92 1 328 2 330 1 94 2 70 1 311 1 47 2 97 1 99 1 18 2 143 1 358 2 263 4 26 1 172 1 341 2 125 7 267 1 
295 4 343 1 47 1 99 1 18 1 143 1 206 2 358 1 263 3 348 1 88 3 172 1 92 2 328 1 341 1 200 1 125 4 94 1 
295 2 47 1 49 1 99 1 18 1 36 1 143 1 85 1 358 1 88 1 186 1 112 1 172 1 125 2 94 1 330 1 
88 2 295 3 186 1 172 1 62 1 99 1 143 1 341 1 125 3 206 1 263 1 94 2 358 2 
295 9 343 1 62 1 64 1 206 4 348 1 88 5 186 1 92 2 328 1 94 2 70 1 47 1 99 1 18 1 143 1 263 7 358 2 172 1 104 1 341 3 151 1 125 9 200 1 
295 9 343 1 62 1 64 1 206 4 348 1 88 5 186 1 92 2 328 1 94 2 70 1 47 1 99 1 18 1 143 1 263 7 358 2 172 1 104 1 341 3 151 1 125 9 200 1 
90 1 28 1 187 1 
164 1 187 1 31 2 
332 2 71 2 167 1 115 2 48 2 21 1 329 2 67 2 
321 1 322 1 158 1 345 1 272 1 63 1 2 1 275 1 252 2 185 1 134 1 136 1 44 2 367 1 281 1 329 3 67 2 140 1 332 2 71 2 167 1 115 2 116 1 48 3 356 1 236 2 372 1 21 1 101 2 168 1 286 1 148 1 124 1 176 2 79 1 178 1 224 1 
332 1 41 1 71 1 167 1 115 1 48 1 29 1 329 1 67 1 238 1 
71 1 48 1 52 1 264 1 238 1 307 1 28 1 245 1 187 1 138 1 223 1 152 1 329 1 106 1 
332 1 71 1 115 1 48 1 52 1 264 1 238 1 307 1 28 1 187 1 223 2 138 2 67 1 329 1 106 1 
371 1 195 1 213 1 223 1 138 1 
191 1 344 1 371 1 28 1 195 1 187 1 223 2 138 2 
371 1 223 1 138 1 
332 1 167 1 71 1 115 1 48 1 195 1 238 1 41 1 228 1 29 1 138 1 223 1 67 1 329 1 
187 1 
191 1 371 1 28 1 195 1 187 1 223 2 138 2 144 1 
247 1 191 1 156 1 193 1 371 2 38 1 335 1 195 2 239 1 241 2 40 1 28 1 57 2 187 1 138 5 223 5 354 2 153 1 292 1 
90 1 21 1 
332 1 278 1 71 2 115 1 48 2 340 1 21 2 67 1 329 2 
310 1 98 1 33 1 
116 1 48 1 158 1 345 1 272 1 372 1 21 1 101 1 286 1 148 1 314 1 136 1 44 1 176 1 329 1 178 1 
332 3 374 1 71 3 115 3 48 3 21 1 67 1 329 3 
332 1 41 1 71 1 115 1 48 1 329 1 238 1 
332 1 278 1 71 1 115 1 340 1 48 1 329 1 67 1 238 1 
321 1 322 1 158 1 272 1 345 1 63 1 2 1 277 1 252 1 278 1 134 1 307 1 210 1 136 1 44 1 367 1 281 1 138 1 67 2 329 4 332 3 71 3 167 1 116 1 115 3 48 4 236 2 50 1 372 1 21 1 101 1 168 1 52 1 264 1 238 1 374 1 286 1 148 1 176 1 79 1 223 1 106 1 178 1 224 1 
332 1 374 1 71 2 115 1 48 2 114 1 21 1 152 1 329 2 
332 3 71 3 115 3 48 3 50 1 238 1 52 1 264 1 278 1 349 1 374 2 210 1 307 1 187 1 223 1 138 1 67 1 106 1 329 3 
332 2 310 1 71 2 115 2 48 2 278 1 374 1 67 1 329 2 33 1 
116 1 48 1 345 1 272 1 158 1 372 1 21 1 101 1 286 1 148 1 136 1 44 1 176 1 329 1 178 1 
181 1 116 1 48 1 272 1 158 1 372 1 21 1 101 1 286 1 113 1 148 1 44 1 176 1 329 1 178 1 
179 1 322 1 63 1 2 1 275 2 304 1 252 4 134 1 368 1 139 1 281 2 310 2 258 1 232 1 355 1 98 2 236 2 169 1 373 1 265 1 79 1 224 1 33 2 80 1 
332 1 71 1 229 1 115 1 48 1 329 1 238 1 264 1 
310 1 332 1 71 1 116 1 115 1 48 2 158 1 272 1 345 1 372 1 101 1 374 1 286 1 210 1 148 1 136 1 44 1 176 1 329 2 178 1 
332 4 71 5 155 1 115 4 48 5 21 1 278 1 336 1 374 2 210 1 114 1 152 1 329 5 67 1 
332 2 41 1 71 2 229 1 115 2 48 2 329 2 238 1 
161 1 293 1 
161 1 293 1 
231 1 222 1 
231 1 222 1 
231 1 222 1 
161 1 1 1 293 1 
161 1 1 1 293 1 
161 1 129 1 293 1 
14 1 161 2 231 1 222 1 294 1 293 2 
161 1 1 1 293 1 
180 1 161 1 293 1 
180 1 161 1 293 1 
180 1 161 1 293 1 
296 1 14 1 370 1 357 2 120 1 251 1 24 1 122 1 305 2 337 2 161 2 9 2 175 3 12 2 187 1 138 2 223 2 291 1 293 2 
248 1 129 1 205 1 5 1 161 1 305 1 42 1 9 1 12 1 138 1 329 2 332 2 71 2 115 2 48 2 220 1 118 1 21 1 120 1 337 1 175 1 103 1 223 1 293 1 
47 1 18 1 328 1 
47 1 112 1 18 1 
123 1 47 3 112 1 326 1 328 2 61 1 
123 1 47 2 112 1 326 1 250 1 328 1 
123 1 47 2 112 1 326 2 328 1 
247 3 179 1 248 1 38 2 205 1 42 1 10 1 163 1 164 1 354 1 138 5 187 2 232 1 191 1 355 1 192 1 261 1 371 1 73 2 102 2 195 4 373 1 241 1 239 1 22 1 146 1 316 2 57 1 28 1 31 3 223 5 319 1 
247 8 179 3 38 6 205 4 162 5 164 3 137 1 213 5 138 9 187 5 354 2 217 1 232 3 165 1 191 1 355 3 192 3 193 1 371 6 102 6 195 7 373 3 239 1 241 2 22 2 146 2 147 1 315 1 316 6 28 1 57 2 31 9 223 9 32 1 319 1 
247 3 179 1 205 1 38 2 10 1 163 1 164 2 187 3 354 1 138 3 232 1 355 1 192 1 193 1 73 1 195 2 102 2 373 1 241 1 22 1 146 1 28 1 57 1 316 2 223 3 31 4 
247 5 179 2 205 2 38 4 10 1 163 1 164 3 187 4 354 1 138 4 232 2 355 2 192 2 193 1 73 2 102 4 195 3 373 2 241 1 22 1 146 1 147 1 315 1 28 1 316 4 57 1 31 7 223 4 32 1 
90 1 158 1 308 1 
158 1 262 1 
279 1 
158 1 178 1 
331 1 376 1 308 2 158 3 372 1 178 1 
158 1 372 1 178 1 
202 1 158 1 
232 1 179 1 333 1 65 1 3 1 275 4 304 2 252 7 89 1 242 1 133 1 93 1 212 1 281 3 80 3 127 1 95 2 
232 1 179 1 333 1 65 1 3 1 275 4 304 2 252 7 89 1 242 1 133 1 93 1 212 1 281 3 80 3 127 1 95 2 
232 1 179 1 333 1 65 1 3 1 275 4 304 2 252 7 89 1 242 1 133 1 11 1 93 1 212 1 281 3 80 3 127 1 95 2 
179 4 226 1 65 1 2 1 275 16 3 5 304 5 39 1 252 31 132 1 89 1 133 2 134 1 256 3 93 1 212 2 281 15 95 3 218 1 232 4 333 1 192 3 355 3 236 2 373 3 25 1 242 2 173 1 338 1 79 1 224 1 318 4 127 2 80 10 
179 1 2 2 65 1 275 5 3 1 304 3 252 9 132 1 89 1 43 1 133 1 134 2 212 1 281 4 95 2 232 1 333 1 16 1 236 4 242 1 79 2 224 2 127 1 80 4 
295 2 82 1 347 1 88 1 186 1 112 1 325 1 44 1 328 1 309 1 94 1 47 2 116 1 99 1 18 1 100 1 101 1 143 1 263 1 358 1 243 1 172 1 339 1 148 1 176 1 266 1 199 1 125 2 61 1 268 1 
295 3 82 1 301 1 347 1 88 1 227 1 186 1 253 1 112 1 325 1 44 1 328 1 309 1 94 1 47 2 116 1 99 1 18 1 100 1 101 1 358 1 263 2 172 1 339 1 148 1 176 1 266 1 125 3 61 1 268 1 
295 2 82 1 88 1 227 1 186 1 253 1 112 1 325 1 44 1 328 1 309 1 47 2 116 1 99 1 18 1 100 1 101 1 263 2 172 1 339 1 148 1 176 1 266 1 125 2 61 1 
295 1 116 1 82 2 158 1 301 1 302 1 101 1 51 1 145 1 358 1 6 1 186 2 286 1 339 2 288 1 325 2 148 1 44 1 176 1 214 1 125 1 178 1 94 1 
295 1 47 2 116 1 82 1 18 1 100 1 101 1 143 1 347 1 358 1 227 1 243 1 186 1 112 1 339 1 325 1 148 1 266 1 44 1 176 1 328 1 309 1 125 1 61 1 94 1 268 1 
184 1 
342 1 247 2 299 2 157 1 158 1 108 2 7 2 6 1 307 1 164 2 354 1 71 1 116 1 17 1 117 1 119 2 22 1 264 1 313 1 27 1 28 1 176 2 360 4 31 2 223 5 178 1 37 1 38 2 131 1 86 2 91 1 135 2 327 2 44 2 187 2 138 5 329 1 191 3 48 1 371 6 101 2 237 1 145 1 239 1 241 1 52 1 238 1 197 1 198 1 286 2 148 1 57 1 245 1 152 1 106 1 
71 1 191 1 48 1 157 1 371 2 237 1 144 1 131 1 313 1 238 1 264 1 52 1 198 1 307 1 135 1 360 2 245 1 138 3 223 3 106 1 152 1 329 1 
71 1 191 1 48 1 157 1 371 1 108 1 237 1 144 1 131 1 313 1 238 1 264 1 52 1 198 1 307 1 28 1 360 3 245 1 187 1 138 3 223 3 106 1 152 1 329 1 
157 1 108 1 131 1 307 1 135 1 138 3 187 1 329 1 71 1 191 1 48 1 371 2 119 1 237 1 144 1 52 1 264 1 238 1 313 1 198 1 245 1 360 3 28 1 223 3 152 1 106 1 
342 1 247 1 299 2 157 1 108 4 110 1 7 2 207 1 307 1 164 2 354 1 71 1 117 1 119 4 313 1 264 1 360 6 28 5 223 5 38 1 131 1 86 2 135 4 327 2 138 5 187 5 329 1 96 1 191 3 48 1 371 7 237 1 144 1 238 1 52 1 239 1 241 1 198 1 245 1 57 1 105 1 106 1 152 1 379 1 
342 1 247 1 299 2 157 1 108 2 38 1 131 1 7 2 86 2 307 1 164 2 135 2 327 2 187 2 354 1 138 4 329 1 71 1 191 2 48 1 371 4 117 1 119 2 237 1 241 1 239 1 52 1 264 1 238 1 313 1 197 1 198 1 28 1 245 1 57 1 360 4 31 2 223 4 152 1 106 1 
342 1 247 1 299 2 157 1 108 2 38 1 131 1 7 2 86 2 207 1 307 1 164 2 135 2 327 2 187 1 354 1 138 4 329 1 71 1 191 2 48 1 371 4 117 1 119 2 237 1 52 1 264 1 238 1 313 1 239 1 241 1 198 1 28 1 245 1 360 4 57 1 223 4 105 1 152 1 106 1 379 1 
342 1 247 1 299 2 157 1 108 2 38 1 131 1 7 2 86 2 207 1 307 1 164 2 135 2 327 2 187 1 354 1 138 4 329 1 71 1 191 2 48 1 371 4 117 1 119 2 237 1 52 1 264 1 238 1 313 1 239 1 241 1 198 1 28 1 245 1 360 4 57 1 223 4 105 1 152 1 106 1 379 1 
247 1 299 2 157 1 182 1 108 2 38 1 4 1 131 1 86 2 307 1 135 2 352 1 187 1 354 1 138 4 329 1 71 1 191 2 48 1 371 4 117 1 119 2 237 1 283 2 52 1 264 1 238 1 313 1 239 1 241 1 198 1 149 2 28 1 245 1 360 4 57 1 31 2 223 4 152 1 106 1 379 1 
342 1 247 1 299 2 157 1 108 3 38 1 131 1 7 2 86 2 207 1 307 1 164 2 135 3 327 2 187 1 354 1 138 4 329 1 71 1 96 1 191 2 48 1 371 5 117 1 119 3 237 1 241 1 239 1 52 1 264 1 238 1 313 1 198 1 28 1 57 1 245 1 360 5 223 4 105 1 152 1 106 1 379 1 
342 1 247 1 299 2 157 1 108 3 38 1 131 1 7 2 86 2 207 1 307 1 164 2 135 3 327 2 187 1 354 1 138 4 329 1 71 1 96 1 191 2 48 1 371 5 117 1 119 3 237 1 241 1 239 1 52 1 264 1 238 1 313 1 198 1 28 1 57 1 245 1 360 5 223 4 105 1 152 1 106 1 379 1 
247 1 299 2 157 1 182 1 108 2 38 1 131 1 86 2 307 1 135 2 187 1 354 1 138 4 329 1 71 1 191 2 48 1 371 4 117 1 119 2 237 1 283 2 241 1 239 1 52 1 264 1 238 1 313 1 197 1 198 1 149 2 28 1 245 1 57 1 360 4 31 2 223 4 152 1 106 1 
179 1 322 1 63 1 2 1 65 1 275 3 304 2 252 6 89 1 90 1 134 1 212 1 139 1 281 3 95 1 310 1 232 1 333 1 98 1 236 2 21 2 242 1 79 1 33 1 224 1 80 2 
179 2 35 1 322 2 63 1 2 2 3 1 275 8 304 1 252 14 39 1 185 1 209 1 134 2 256 3 367 1 281 6 257 1 310 11 232 1 98 11 192 2 355 1 236 4 21 1 373 2 173 1 55 1 30 1 79 2 80 2 318 3 224 2 33 4 
271 1 322 1 158 1 272 1 345 1 63 1 2 1 275 1 252 2 185 1 209 1 134 1 210 1 136 1 44 1 367 1 281 1 329 2 188 1 332 1 71 1 116 1 115 1 48 2 236 2 372 1 21 1 101 1 334 1 374 1 286 1 148 1 314 1 176 1 79 1 178 1 33 1 224 1 
107 2 249 2 345 2 158 2 63 3 65 1 2 3 3 4 304 4 159 2 252 20 209 1 66 1 210 1 212 1 310 7 71 1 115 1 116 2 355 2 221 2 21 2 168 2 176 3 79 3 178 2 224 3 33 7 80 8 179 3 322 3 272 2 275 10 89 1 185 1 227 1 134 3 136 2 44 3 367 1 281 10 329 3 95 1 332 1 232 3 233 1 333 1 48 3 98 7 192 2 236 6 372 2 101 3 373 2 374 1 242 1 286 1 148 2 380 1 
269 1 322 2 158 3 63 2 2 2 275 1 252 2 6 1 185 1 227 1 134 2 365 1 44 7 367 1 139 1 281 1 329 1 69 1 332 1 71 1 141 1 115 1 116 2 48 1 236 4 101 8 145 1 374 1 286 2 148 2 289 1 124 2 58 1 176 8 199 1 79 2 178 2 201 1 224 2 
179 1 34 1 322 1 63 1 2 1 275 1 304 1 252 3 278 1 209 1 134 1 281 2 67 1 329 1 310 1 332 1 232 1 71 1 115 1 98 1 48 1 192 1 355 1 236 2 373 1 79 1 80 1 33 1 224 1 
310 1 179 1 98 1 322 1 236 2 63 1 2 1 3 1 275 2 373 1 252 2 134 1 265 1 139 1 79 1 80 1 33 1 224 1 
310 1 232 1 98 1 355 1 322 1 236 2 63 1 2 1 304 1 252 2 134 1 139 1 79 1 368 1 281 2 80 1 33 1 224 1 
179 1 322 1 63 1 2 1 275 2 3 1 304 1 252 4 134 1 139 1 281 2 310 2 232 1 192 1 98 2 355 1 236 2 373 1 79 1 224 1 33 2 80 2 
310 1 179 1 98 1 322 1 236 2 63 1 2 1 3 1 275 2 373 1 252 2 134 1 265 1 79 1 80 1 33 1 69 1 224 1 
310 1 232 1 98 1 355 1 322 1 236 2 63 1 2 1 304 1 252 2 134 1 79 1 368 1 281 2 80 1 33 1 69 1 224 1 
179 1 322 1 63 1 2 1 275 2 3 1 304 1 252 4 134 1 281 2 69 1 310 2 232 1 192 1 98 2 355 1 236 2 373 1 79 1 224 1 33 2 80 2 
179 1 322 1 63 1 2 1 275 2 3 1 304 1 252 4 134 1 281 2 310 2 232 1 192 1 98 2 355 1 236 2 373 1 79 1 224 1 33 2 80 2 
322 1 272 1 345 1 158 1 63 1 2 1 275 1 252 2 185 1 134 1 136 1 44 1 367 1 281 1 329 1 116 1 48 1 236 2 372 1 21 1 101 1 168 1 286 1 148 1 176 1 79 1 178 1 224 1 
181 1 322 1 272 1 158 1 63 1 2 1 275 1 252 2 185 1 134 1 113 1 44 1 367 1 281 1 329 1 116 1 48 1 236 2 372 1 21 1 101 1 286 1 148 1 176 1 177 1 79 1 178 1 224 1 
179 1 322 1 63 1 2 1 275 2 3 1 304 1 252 4 209 1 134 1 281 2 310 2 232 1 192 1 98 2 355 1 236 2 373 1 79 1 224 1 33 2 80 2 
179 1 249 1 322 1 272 1 345 1 158 1 63 1 2 1 3 1 275 2 304 1 252 4 134 1 136 1 44 1 281 2 329 1 310 2 232 1 116 1 355 1 98 2 48 1 192 1 236 2 372 1 101 1 168 1 373 1 148 1 176 1 199 1 79 1 178 1 80 2 33 2 224 1 
179 1 322 1 63 1 2 1 3 1 275 2 252 3 278 1 209 1 134 1 281 1 67 1 68 1 329 1 332 1 310 1 232 1 71 1 115 1 355 1 48 1 192 1 98 1 236 2 373 1 79 1 80 1 224 1 33 1 
179 2 273 1 2 2 274 1 275 6 3 2 304 2 252 12 111 1 134 2 281 6 189 2 219 1 232 2 16 1 192 2 355 2 19 1 236 4 74 1 121 2 373 2 79 2 126 1 224 2 80 4 
179 1 273 1 2 1 274 1 275 4 252 8 134 1 281 4 189 1 232 1 16 1 192 1 355 1 19 1 236 2 74 2 121 2 373 1 79 1 126 2 224 1 
179 1 273 1 109 1 2 2 274 1 275 4 3 1 252 8 134 2 281 4 189 1 219 1 232 1 16 1 192 1 355 1 19 1 236 4 74 2 121 2 373 1 79 2 126 1 224 2 80 1 
179 1 273 1 109 1 2 2 274 1 275 4 3 1 304 1 252 8 134 2 281 4 189 1 219 1 232 1 16 1 192 1 355 1 19 1 236 4 74 2 121 2 373 1 79 2 126 1 224 2 80 2 
179 3 273 1 2 1 65 2 274 1 3 1 275 10 304 3 252 18 89 2 134 1 212 2 281 8 95 2 189 1 232 3 333 2 355 1 192 1 16 1 19 1 236 2 74 1 121 2 373 1 242 2 79 1 126 1 224 1 80 4 
298 1 14 1 161 1 337 1 305 1 9 1 12 1 291 1 24 1 293 1 
103 1 129 1 
161 1 337 1 305 1 9 1 312 1 12 1 59 1 276 1 293 1 
296 1 14 1 357 1 120 1 251 1 24 1 122 1 305 1 337 1 161 1 9 1 175 2 12 1 187 1 138 1 223 1 291 1 293 1 
296 1 14 1 357 1 120 1 251 1 24 1 122 1 305 1 337 1 161 1 9 1 175 2 12 1 187 1 138 1 223 1 291 1 293 1 
296 1 14 1 357 1 120 1 251 1 24 1 122 1 305 1 337 1 161 1 9 1 175 2 12 1 187 1 138 1 223 1 291 1 293 1 
1 1 84 1 294 1 
1 1 84 1 294 1 
180 1 170 1 
180 1 170 1 294 1 
220 1 118 1 
296 1 248 1 130 1 129 1 205 1 5 1 161 1 305 1 42 1 9 1 12 1 138 1 329 2 332 2 71 2 115 2 48 2 220 1 357 1 118 1 21 1 195 1 337 1 175 1 103 1 223 1 293 1 
1 1 84 1 
180 1 170 1 294 1 
322 1 158 1 63 1 2 1 275 1 160 1 252 2 185 1 209 1 134 1 255 1 280 1 44 2 367 1 281 1 45 1 329 2 71 2 141 1 116 1 15 1 48 2 236 2 101 2 148 1 124 2 176 2 79 1 178 1 201 1 224 1 
47 2 116 1 82 1 18 1 101 2 284 1 227 1 112 1 148 1 150 1 44 2 176 2 266 1 328 1 353 1 309 1 199 1 61 1 268 1 
47 2 116 1 82 1 18 1 194 1 101 1 284 1 227 1 112 1 148 1 44 1 176 1 266 1 328 1 309 1 61 1 268 1 
116 1 128 1 82 1 158 1 101 1 51 1 145 1 6 1 286 1 148 1 150 1 44 1 176 1 178 1 
47 2 116 1 82 1 18 1 101 1 284 1 227 1 112 1 148 1 150 1 44 1 176 1 266 1 328 1 353 1 309 1 61 1 268 1 
378 1 
40 1 247 1 90 1 28 1 38 1 187 1 153 1 
342 1 247 1 191 1 371 1 38 1 239 1 241 1 7 1 164 1 28 1 327 1 57 1 223 1 138 1 187 2 31 1 354 1 
247 9 300 2 202 2 158 10 350 1 164 6 308 2 354 4 216 2 116 3 355 2 75 2 221 2 76 2 262 3 22 2 28 2 176 3 316 6 223 5 31 12 317 1 178 3 320 1 179 2 37 1 38 8 324 2 40 1 363 2 44 3 138 5 187 8 232 2 191 3 192 2 371 5 372 3 101 3 102 6 373 2 239 4 241 4 53 2 285 1 54 2 286 1 376 1 148 4 377 1 57 4 199 1 153 1 106 2 
247 8 179 2 0 1 37 1 38 5 87 1 362 1 164 3 256 1 138 1 354 2 187 5 216 1 232 2 191 1 234 1 192 2 355 2 371 1 142 1 76 2 102 5 373 2 22 1 241 2 239 2 173 1 244 1 316 5 57 2 28 2 223 1 31 6 60 1 318 1 
247 2 179 2 65 1 38 2 207 1 41 1 228 1 211 1 212 1 354 1 138 1 329 1 67 1 216 1 332 1 232 1 167 1 71 1 115 1 48 1 76 2 238 1 241 1 239 1 242 1 57 1 29 1 223 1 
40 1 247 1 28 1 57 1 38 1 187 1 354 1 153 1 241 1 239 1 
232 2 247 5 179 2 192 2 355 2 221 1 76 2 38 5 102 5 373 2 164 5 316 5 31 10 187 5 216 1 
191 1 371 1 28 1 187 1 223 1 138 1 
320 1 247 2 158 1 183 1 37 2 38 2 6 1 91 1 44 4 354 2 138 3 116 1 191 2 17 1 193 1 371 4 101 4 241 2 239 1 22 2 145 1 359 1 286 2 148 1 57 2 176 4 223 3 317 2 178 1 
321 1 322 1 345 1 272 1 158 1 63 1 2 1 252 1 134 1 136 1 44 1 367 1 281 1 329 3 67 2 332 2 71 2 167 1 115 2 116 1 48 3 236 2 372 1 21 1 101 1 168 1 286 1 148 1 176 1 79 1 178 1 224 1 
247 1 37 1 38 2 102 2 239 1 241 1 22 1 164 2 316 2 57 1 28 2 31 4 354 1 187 4 95 1 
9 1 12 1 77 1 
9 1 12 1 77 1 
369 1 9 1 220 1 12 1 291 1 
9 1 12 1 77 1 
9 1 72 1 12 1 
9 1 72 1 12 1 
9 1 72 1 12 1 
9 1 12 1 
161 1 293 1 
232 1 179 1 333 1 236 4 65 1 2 2 275 4 3 1 304 2 252 8 132 1 89 1 242 1 134 2 212 1 281 4 79 2 95 1 80 3 224 2 
232 1 179 1 333 1 65 1 275 3 304 2 252 6 89 1 242 1 90 1 212 1 281 3 95 1 80 2 
232 1 179 1 355 1 192 1 236 2 2 1 275 2 3 1 304 1 373 1 240 1 252 4 134 1 281 2 79 1 80 2 224 1 
232 1 179 1 355 1 192 1 275 3 3 1 304 1 373 1 252 7 39 1 173 1 256 1 281 4 318 2 80 2 
179 3 65 1 2 2 3 4 275 11 304 5 39 1 252 23 132 2 89 1 134 2 256 2 212 2 281 12 95 1 257 1 232 3 190 1 333 1 192 2 355 2 236 4 373 2 242 2 30 1 79 2 80 9 318 2 224 2 
281 1 252 1 318 1 
256 1 275 1 252 1 
232 1 179 1 192 1 355 1 236 2 221 1 2 1 275 3 3 1 373 1 304 2 240 1 252 6 134 1 79 1 281 3 224 1 80 3 
179 2 0 1 2 1 3 1 275 6 304 1 252 12 87 1 362 1 134 1 256 1 281 6 232 2 234 1 16 1 192 2 355 2 236 2 373 2 173 1 244 1 79 1 318 1 224 1 80 2 
232 1 179 1 65 1 275 3 3 1 304 1 252 6 242 1 212 1 281 3 80 2 
190 1 333 1 236 2 2 1 275 1 3 1 304 1 252 3 132 1 89 1 242 1 134 1 212 1 281 2 79 1 80 2 224 1 
232 2 179 2 16 1 236 2 2 1 65 1 3 2 275 5 304 3 252 10 242 2 134 1 211 1 212 2 79 1 281 5 224 1 80 5 
179 1 16 1 236 2 2 1 275 2 3 1 373 1 252 2 134 1 79 1 224 1 80 1 
232 1 179 1 355 1 16 1 192 1 236 2 2 1 275 2 3 1 304 1 373 1 252 4 134 1 281 2 79 1 80 2 224 1 
190 1 219 1 16 1 236 6 2 3 3 1 275 1 304 1 132 1 252 3 242 1 134 3 212 1 281 2 79 3 224 3 80 2 
179 5 226 1 65 2 2 5 275 16 3 5 304 7 132 2 252 34 39 1 89 1 134 5 256 3 212 3 281 18 95 1 190 1 219 1 232 5 333 1 16 1 192 3 355 3 236 10 373 3 240 1 25 1 242 3 338 1 173 1 79 5 318 4 224 5 80 12 
179 1 0 1 2 1 65 1 275 4 304 2 252 8 89 1 134 1 256 1 212 1 281 4 95 1 232 1 333 1 16 1 236 2 242 1 173 1 79 1 318 1 224 1 80 2 
179 2 0 1 65 1 2 2 275 6 3 1 304 2 252 11 39 1 89 1 134 2 256 1 212 1 281 5 95 1 232 1 333 1 16 1 192 1 236 4 373 1 240 1 242 1 173 1 79 2 318 2 224 2 80 3 
179 3 0 1 65 1 2 3 3 1 275 9 304 3 252 19 132 1 89 1 87 1 362 1 134 3 256 1 212 1 281 10 95 1 232 3 333 1 234 1 16 1 192 2 355 2 236 6 373 2 240 1 242 1 173 1 244 1 79 3 318 1 224 3 80 4 
179 3 0 1 65 1 2 3 3 2 275 10 304 3 132 1 252 17 89 1 87 1 362 1 134 3 256 1 212 1 281 7 95 1 232 2 333 1 234 1 16 1 192 2 355 1 236 6 373 2 240 1 242 1 173 1 244 1 79 3 318 1 224 3 80 5 
179 1 0 1 2 1 65 1 275 4 304 2 252 8 89 1 134 1 256 1 212 1 281 4 95 1 232 1 333 1 16 1 236 2 242 1 173 1 79 1 318 1 224 1 80 2 
179 2 0 1 2 1 3 1 275 6 304 1 252 12 87 1 362 1 134 1 256 1 281 6 232 2 234 1 16 1 192 2 355 2 236 2 373 2 173 1 244 1 79 1 318 1 224 1 80 2 
179 3 0 1 65 1 2 4 3 2 275 10 304 3 252 18 132 2 89 1 87 1 362 1 134 4 256 1 212 1 281 8 95 1 232 2 333 1 234 1 16 1 192 2 355 1 236 8 373 2 240 1 242 1 173 1 244 1 79 4 318 1 224 4 80 5 
179 3 0 1 2 4 3 3 275 9 304 3 252 16 132 2 87 1 362 1 134 4 256 1 281 7 219 1 232 2 234 1 16 1 192 3 355 2 236 8 373 3 173 1 244 1 79 4 318 1 224 4 80 6 
232 1 179 1 333 2 65 1 3 3 275 3 304 3 252 7 89 1 242 3 212 3 281 4 80 6 
179 3 0 1 65 1 2 4 3 1 275 10 304 3 252 18 132 2 89 1 87 1 362 1 134 4 256 1 212 1 281 8 95 1 219 1 232 2 333 1 234 1 16 1 192 2 355 1 236 8 373 2 242 1 173 1 244 1 79 4 318 1 224 4 80 4 
71 1 48 1 114 1 21 1 329 1 152 1 23 1 
71 1 260 1 48 1 21 1 303 1 23 1 208 1 8 1 171 1 114 1 152 1 329 1 
286 1 116 1 90 1 148 1 158 1 101 1 176 1 44 1 178 1 145 1 6 1 
332 1 71 1 115 1 116 1 48 2 158 1 272 1 345 1 372 1 21 1 101 1 374 1 286 1 148 1 44 1 176 1 329 2 178 1 
202 1 345 1 272 1 158 3 363 1 44 1 329 2 332 1 71 2 116 1 115 2 48 2 372 2 21 1 101 1 52 1 264 1 238 1 374 1 148 1 176 1 317 1 178 2 
202 1 272 1 158 3 363 1 113 1 44 2 329 2 46 1 332 1 71 2 116 1 115 2 48 2 372 2 21 1 101 2 52 1 264 1 238 1 374 1 148 1 176 2 317 1 178 2 
116 1 202 1 204 1 158 4 371 1 372 1 101 3 262 1 286 1 363 1 148 1 308 1 28 1 44 3 176 3 187 1 138 2 223 2 106 1 317 1 178 1 246 1 46 1 
116 1 202 1 158 4 371 1 372 1 75 1 101 3 262 1 286 1 363 1 148 1 308 1 28 1 44 3 176 3 187 1 138 2 223 2 106 1 317 1 178 1 46 1 
269 1 116 1 148 1 101 1 176 1 44 1 
269 1 225 1 116 2 158 3 372 1 101 7 227 1 286 2 306 1 376 1 148 3 124 1 289 1 365 1 58 1 44 6 176 7 199 1 13 1 178 2 201 1 
107 1 249 1 345 1 158 1 63 2 2 2 65 1 304 2 252 6 209 1 212 1 310 1 71 1 115 1 116 1 21 2 168 1 176 1 79 2 178 1 33 1 224 2 80 2 179 1 322 2 272 1 275 3 89 1 134 2 136 1 44 1 281 3 329 2 45 1 95 1 332 1 232 1 333 1 48 2 98 1 236 4 372 1 101 1 374 1 242 1 148 1 199 1 
320 1 247 1 300 1 158 2 38 1 324 1 40 1 308 1 44 1 187 1 354 2 138 3 191 1 371 2 75 1 101 1 262 1 195 1 241 2 239 2 286 1 54 1 28 1 176 1 57 2 223 3 153 1 106 1 
269 1 116 1 158 2 372 1 101 2 350 1 376 1 148 2 308 1 44 2 176 2 199 1 178 1 
116 1 158 1 101 4 145 1 6 1 286 1 174 1 148 1 44 4 176 4 199 1 178 1 46 1 
225 1 116 1 83 1 158 1 372 1 101 2 323 1 66 1 148 2 44 2 176 2 13 1 317 1 178 1 
47 1 112 1 286 1 116 1 18 1 148 1 101 1 176 1 44 1 309 1 
15 1 116 1 158 1 101 2 227 1 148 1 44 2 176 2 199 1 178 1 201 1 
116 2 158 3 101 5 145 1 6 1 286 1 174 1 148 2 289 1 365 1 44 4 176 5 199 1 317 1 178 2 201 1 
116 2 235 1 158 3 101 5 145 1 6 1 286 1 174 1 148 2 289 1 44 4 176 5 199 1 317 1 178 2 201 1 
332 1 71 1 115 1 116 1 48 2 158 1 272 1 372 1 21 1 101 1 374 1 286 1 148 1 113 1 44 1 176 1 329 2 178 1 
225 1 116 1 158 1 372 1 101 1 306 1 376 1 148 2 44 1 176 1 13 1 317 1 178 1 
71 1 48 1 20 1 160 1 287 1 255 1 280 1 154 1 329 1 
270 1 287 1 254 1 
364 1 287 1 20 1 21 1 154 1 
270 1 282 1 20 2 50 1 21 1 195 1 238 1 264 1 52 1 287 1 364 2 307 1 254 1 28 1 187 1 138 2 223 2 106 1 154 2 
88 1 172 1 90 1 99 1 
88 1 295 1 172 1 99 1 125 1 94 1 358 1 
186 1 339 1 125 1 
295 3 297 1 99 1 36 2 143 1 358 1 88 1 172 1 78 1 215 1 125 3 94 1 
88 1 295 2 172 1 99 1 92 1 125 2 263 1 94 1 358 1 
88 1 295 1 343 1 47 1 18 1 328 1 143 1 125 1 206 1 94 1 358 1 
88 1 295 1 99 1 143 1 125 1 94 1 358 1 
295 1 172 1 99 2 143 1 125 1 94 1 358 1 
295 2 166 1 99 1 143 1 358 2 88 1 366 1 290 1 125 2 94 2 
295 3 99 1 64 1 143 1 206 1 358 1 263 2 88 2 172 1 341 1 125 3 94 1 70 1 
295 2 47 2 99 1 203 1 18 1 143 1 358 1 263 1 88 1 112 1 172 1 328 1 125 2 61 1 94 1 
88 2 295 4 172 1 99 1 92 1 143 1 341 1 200 1 125 4 206 1 263 2 94 2 358 2 
88 1 295 1 172 1 99 1 143 1 125 1 94 1 358 1 
295 4 297 1 81 1 99 2 36 1 206 1 263 2 358 1 88 3 172 2 78 1 341 1 125 4 94 1 
295 2 99 1 143 1 196 1 358 1 263 1 88 1 172 1 56 1 125 2 151 1 94 1 
295 3 297 2 99 1 36 2 143 1 358 1 88 1 351 1 172 1 78 1 125 3 94 1 
88 2 259 1 230 2 361 1 
295 1 346 1 143 1 125 1 94 1 358 1 
88 1 295 2 172 1 99 1 64 1 143 1 125 2 263 1 94 1 358 1 
375 1 
88 1 295 1 172 1 99 1 143 1 125 1 94 1 358 1 
295 3 99 1 36 1 64 1 143 1 263 1 358 1 88 1 172 1 125 3 94 1 
88 1 81 1 341 1 206 1 
88 1 99 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 3 234 1 177 5 74 2 334 2 209 1 208 1 75 1 262 1 4 2 185 2 117 2 140 1 340 1 339 2 354 4 373 1 14 1 245 1 219 9 143 6 246 1 377 1 195 1 325 1 93 2 274 9 100 1 
206 3 234 1 177 5 334 2 74 2 209 1 208 1 75 1 262 1 4 2 185 2 117 2 140 1 340 1 339 2 354 4 373 1 14 1 245 1 219 9 143 6 246 1 377 1 195 1 325 1 93 2 274 9 100 1 
206 4 234 1 177 6 334 2 74 2 209 1 208 1 75 1 262 1 4 2 185 2 117 2 140 1 340 1 339 2 354 5 373 1 14 1 245 1 219 10 143 7 246 1 377 1 195 1 325 1 93 2 274 10 100 1 
206 2 234 1 177 4 334 2 74 2 209 1 208 1 75 1 262 1 4 2 185 2 117 1 140 1 340 1 339 2 354 3 373 1 14 1 245 1 219 7 143 4 246 1 377 1 195 1 93 2 274 7 100 1 
14 1 206 1 177 3 219 4 143 3 246 1 74 1 334 1 75 1 195 1 325 1 93 1 4 1 274 4 185 1 117 2 340 1 354 2 
280 1 373 1 14 1 177 1 219 2 74 1 75 1 93 1 4 1 274 2 335 1 185 1 292 1 140 1 340 1 339 1 
14 1 206 1 245 1 177 2 219 3 143 1 74 2 75 1 4 2 274 3 340 1 339 1 354 1 
206 3 234 1 283 1 177 5 74 2 334 1 75 1 262 1 4 2 185 1 117 2 340 1 339 1 354 4 14 1 245 1 143 7 219 9 246 1 195 1 93 1 325 1 274 9 379 1 
206 3 234 1 283 1 177 5 74 2 334 1 75 1 262 1 4 2 185 1 117 2 340 1 339 1 354 4 14 1 245 1 143 7 219 9 246 1 195 1 93 1 325 1 274 9 379 1 
260 1 50 1 162 1 
257 2 153 1 162 1 
130 2 316 2 180 2 324 1 9 2 269 2 174 2 305 1 
313 1 53 2 346 1 135 1 348 1 365 1 29 1 2 1 316 2 180 2 72 1 32 1 351 2 289 1 265 1 336 2 320 1 321 1 7 1 324 1 9 3 269 2 190 2 243 1 168 1 270 1 301 1 41 1 305 1 196 2 275 1 46 1 199 1 130 3 253 1 276 1 174 2 
57 1 116 1 130 1 316 1 180 1 9 1 269 1 174 1 125 1 305 1 
260 1 176 1 136 1 152 1 316 1 319 1 378 1 116 1 130 1 293 1 9 1 204 1 60 1 162 1 
260 1 136 1 152 1 180 1 316 1 378 1 116 1 130 1 293 1 204 2 269 1 9 1 174 1 60 2 162 1 
138 1 239 1 303 1 204 1 60 1 
138 1 260 1 282 1 110 1 303 1 204 2 60 2 162 1 
303 1 204 1 60 1 
180 1 316 1 125 1 305 1 57 1 138 1 307 1 116 1 130 1 204 1 269 1 9 1 60 1 174 1 
162 1 
138 1 260 1 282 1 303 1 204 2 255 1 60 2 162 1 
341 1 217 1 260 1 54 1 282 1 207 2 114 1 113 1 303 2 248 1 317 1 318 2 138 2 147 1 159 2 204 5 60 5 142 1 162 1 
50 1 324 1 
331 1 316 2 180 1 128 1 130 2 9 2 269 1 324 2 174 1 
249 1 158 1 83 1 
295 1 313 1 53 1 135 1 301 1 29 1 2 1 41 1 351 1 265 1 199 1 336 1 130 1 253 1 324 1 9 1 
313 1 53 1 135 1 301 1 2 1 29 1 107 1 180 1 316 1 41 1 351 1 211 1 265 1 199 1 336 1 158 1 130 2 253 1 9 2 174 1 
107 1 130 3 316 3 180 3 269 1 324 1 9 3 174 3 
116 1 130 1 316 1 180 1 9 1 174 1 125 1 
128 1 116 1 331 1 130 1 316 1 180 1 9 1 269 1 174 1 
313 1 53 1 135 1 315 1 348 1 365 1 2 1 29 1 136 1 331 1 107 1 152 1 316 3 180 3 351 1 211 1 289 1 265 1 336 1 116 1 320 1 7 1 293 1 324 1 269 2 9 4 60 1 84 1 190 2 243 1 168 1 270 1 301 1 41 1 305 1 196 1 46 1 199 1 378 1 130 4 253 1 276 1 204 1 174 3 
319 1 130 2 107 1 316 2 180 1 372 1 324 1 9 2 174 1 
331 1 136 1 107 2 152 1 180 3 316 3 272 1 211 1 378 1 116 1 130 3 293 1 269 1 204 1 9 3 60 1 174 3 162 1 84 1 
331 1 107 1 180 2 316 2 249 1 158 1 130 2 269 1 9 2 174 2 
313 1 53 1 135 1 29 1 2 1 301 1 41 1 351 1 265 1 199 1 336 1 130 1 253 1 324 1 9 1 
13 1 313 1 53 1 2 1 301 1 17 1 41 1 351 1 265 1 199 1 336 1 130 1 253 1 324 1 9 1 
132 1 348 1 365 1 350 1 32 2 33 1 289 2 158 2 7 1 161 1 83 2 190 2 191 1 243 1 168 1 356 1 196 4 249 2 46 1 148 1 229 1 327 1 329 1 361 1 
20 1 116 1 130 1 152 1 316 1 180 1 9 1 174 1 
331 1 107 2 180 4 316 5 211 1 319 1 58 1 130 5 323 1 372 1 9 5 269 1 324 1 174 4 
20 1 116 1 130 2 316 2 180 2 9 2 174 2 125 1 
39 1 139 1 
39 1 139 1 
95 1 222 1 
95 1 222 1 
95 1 222 1 
39 1 139 1 175 1 
39 1 139 1 175 1 
19 1 39 1 139 1 
95 1 39 2 139 2 189 1 222 1 36 1 
39 1 139 1 175 1 
237 1 39 1 139 1 
237 1 39 1 139 1 
237 1 39 1 139 1 
38 3 39 2 28 1 111 2 286 1 273 1 304 2 182 1 224 2 344 2 77 2 45 1 139 2 149 1 189 1 204 2 11 1 60 2 162 1 
104 1 180 2 111 1 316 2 115 1 267 1 139 1 324 1 9 2 60 1 38 1 39 1 169 1 304 1 65 1 91 1 224 1 344 1 19 1 149 1 130 2 99 1 204 1 174 2 
185 1 334 1 93 1 
335 1 185 1 93 1 
335 1 79 1 334 2 73 1 156 1 93 3 
363 1 335 1 79 1 334 1 156 1 93 2 
335 1 79 1 334 1 156 2 93 2 
257 3 260 1 282 1 106 2 179 1 207 1 178 1 349 1 153 1 114 2 317 1 33 1 183 1 115 1 318 1 138 4 159 1 118 1 60 5 162 2 164 1 217 3 300 2 375 1 65 1 303 1 356 1 148 1 251 2 99 1 327 1 204 5 
257 9 233 1 260 1 133 1 282 1 106 6 178 1 207 2 30 1 349 2 153 3 114 6 317 1 33 3 183 3 115 4 318 2 138 7 159 2 118 2 239 5 60 9 162 5 37 1 217 8 303 6 356 3 223 5 21 1 147 1 148 3 251 6 327 3 204 9 277 1 
257 4 260 1 106 2 207 1 349 1 153 2 114 2 33 1 115 1 183 1 318 1 138 2 159 1 118 1 60 3 162 3 164 1 217 3 300 1 375 1 356 1 147 1 148 1 251 2 327 1 204 3 
257 7 233 1 260 1 133 1 106 4 207 1 349 1 153 3 114 4 33 2 115 2 183 2 318 1 138 3 159 1 118 1 60 4 162 4 164 1 37 1 217 5 300 2 375 1 356 2 147 1 148 2 251 4 327 2 204 4 
250 1 301 1 50 1 
301 1 64 1 
48 1 
301 1 253 1 
163 1 250 2 301 3 253 1 41 1 353 1 
301 1 253 1 41 1 
85 1 301 1 
297 1 191 2 166 1 244 1 40 1 122 1 350 3 32 4 356 1 92 1 289 3 196 7 337 2 188 1 327 1 173 1 294 1 
297 1 191 2 166 1 244 1 40 1 122 1 350 3 32 4 356 1 92 1 289 3 196 7 337 2 188 1 327 1 173 1 294 1 
297 1 191 2 166 1 244 1 40 1 122 1 350 3 32 4 356 1 92 1 289 3 196 7 337 2 188 1 327 1 173 1 371 1 294 1 
279 1 348 1 365 1 350 10 32 16 289 15 183 3 33 3 264 1 337 3 188 2 370 3 7 1 294 1 190 2 297 2 191 5 16 1 166 1 40 1 244 2 122 1 356 4 92 5 196 31 306 1 46 1 227 4 148 3 359 1 360 1 173 2 327 4 254 1 
205 1 348 2 365 2 350 4 32 5 289 4 236 1 337 2 188 1 7 2 294 1 190 4 297 1 191 3 166 1 40 1 244 1 356 1 92 1 196 9 46 2 359 1 327 1 173 1 
53 1 0 1 177 1 2 1 334 1 351 1 74 1 235 1 154 1 73 1 75 1 155 1 4 1 335 1 265 1 185 1 336 1 80 1 340 1 339 1 14 1 343 1 218 1 143 1 219 2 93 2 274 2 127 1 380 1 203 1 
53 1 0 1 177 1 2 1 334 1 73 1 351 1 74 1 235 1 154 1 155 1 4 1 335 1 265 1 185 1 336 1 340 1 339 1 120 1 14 1 343 1 218 1 219 3 143 2 93 2 274 3 127 1 226 1 203 1 150 1 
53 1 0 1 177 1 2 1 351 1 235 1 154 1 73 1 334 1 155 1 335 1 265 1 336 1 185 1 340 1 339 1 120 1 14 1 218 1 219 2 143 2 93 2 274 2 226 1 203 1 
261 1 70 1 53 1 2 1 351 1 74 1 155 2 4 1 265 1 336 1 339 2 296 1 218 2 301 1 219 1 87 1 144 1 274 1 199 1 203 2 24 1 253 1 150 1 
53 1 0 1 2 1 334 1 351 1 74 1 235 1 154 1 73 1 75 1 155 1 4 1 335 1 265 1 185 1 336 1 339 1 343 1 218 1 219 1 93 2 274 1 127 1 226 1 380 1 203 1 
287 1 
257 2 258 2 260 1 312 1 53 2 2 1 207 1 152 1 316 1 349 1 153 2 114 2 351 2 317 1 318 1 319 1 265 1 352 2 116 1 159 1 9 1 60 5 162 2 217 2 63 4 66 1 228 1 68 1 130 1 131 1 69 2 364 1 176 1 282 3 136 1 288 1 368 1 336 2 293 1 296 1 342 1 192 2 301 1 87 1 89 2 247 1 303 6 197 2 44 1 96 1 199 2 378 1 382 2 253 1 204 5 
258 1 342 1 364 1 63 2 176 1 282 1 136 1 152 1 316 1 303 2 288 1 319 1 66 1 378 1 116 1 130 1 293 1 131 1 204 3 9 1 255 1 60 3 
364 1 260 1 176 1 282 1 136 1 152 1 316 1 288 1 319 1 352 1 116 1 293 1 9 1 60 3 162 1 342 1 63 3 303 1 66 1 378 1 130 1 131 1 204 3 255 1 
364 1 69 1 258 1 260 1 176 1 282 1 136 1 152 1 316 1 288 1 319 1 352 1 116 1 293 1 9 1 60 3 162 1 342 1 63 3 303 2 66 1 378 1 130 1 131 1 204 3 255 1 
258 4 260 5 152 1 207 1 316 1 114 1 153 2 317 1 319 1 318 1 352 4 116 1 159 1 9 1 60 5 162 5 217 1 63 6 167 1 121 1 66 1 228 1 68 1 130 1 131 1 69 4 364 1 176 1 282 3 136 1 288 1 293 1 342 1 192 2 298 1 89 2 303 7 197 2 378 1 201 1 382 2 204 5 255 1 311 1 
257 2 258 2 312 1 260 1 152 1 207 1 316 1 114 1 153 2 317 1 319 1 318 1 352 2 116 1 159 1 9 1 60 4 162 2 217 1 63 4 66 1 228 1 68 1 130 1 131 1 364 1 69 2 176 1 282 2 136 1 288 1 293 1 342 1 192 2 89 2 303 4 197 2 378 1 382 2 204 4 
258 2 69 2 364 1 260 1 176 1 282 2 136 1 152 1 207 1 316 1 153 2 114 1 317 1 288 1 319 1 318 1 352 2 116 1 159 1 293 1 9 1 60 4 162 1 342 1 192 2 298 1 217 1 63 4 89 2 303 4 197 2 66 1 228 1 378 1 68 1 130 1 201 1 382 2 131 1 204 4 311 1 
258 2 69 2 364 1 260 1 176 1 282 2 136 1 152 1 207 1 316 1 153 2 114 1 317 1 288 1 319 1 318 1 352 2 116 1 159 1 293 1 9 1 60 4 162 1 342 1 192 2 298 1 217 1 63 4 89 2 303 4 197 2 66 1 228 1 378 1 68 1 130 1 201 1 382 2 131 1 204 4 311 1 
257 2 258 2 69 2 364 1 260 1 176 1 282 2 136 1 284 1 56 1 152 1 207 1 316 1 114 1 317 1 288 1 319 1 318 1 352 2 116 1 159 1 59 2 293 1 9 1 82 2 60 4 162 1 342 1 298 1 217 1 63 4 89 2 303 4 197 2 66 1 378 1 68 1 130 1 381 1 131 1 204 4 
364 1 69 3 258 3 260 1 176 1 282 2 136 1 207 1 152 1 316 1 153 2 114 1 317 1 288 1 318 1 319 1 352 3 116 1 159 1 293 1 9 1 60 4 162 1 342 1 192 2 298 1 217 1 63 5 167 1 89 2 303 5 197 2 66 1 228 1 378 1 68 1 130 1 201 1 382 2 131 1 204 4 311 1 
364 1 69 3 258 3 260 1 176 1 282 2 136 1 207 1 152 1 316 1 153 2 114 1 317 1 288 1 318 1 319 1 352 3 116 1 159 1 293 1 9 1 60 4 162 1 342 1 192 2 298 1 217 1 63 5 167 1 89 2 303 5 197 2 66 1 228 1 378 1 68 1 130 1 201 1 382 2 131 1 204 4 311 1 
257 2 258 2 312 1 260 1 152 1 207 1 316 1 114 1 317 1 319 1 318 1 352 2 116 1 159 1 59 2 9 1 60 4 162 1 217 1 63 4 66 1 68 1 130 1 131 1 364 1 69 2 176 1 282 2 136 1 284 1 288 1 293 1 82 2 342 1 89 2 303 4 197 2 378 1 204 4 
348 1 365 1 350 2 32 3 289 3 337 1 188 1 158 1 7 1 294 1 324 2 83 1 190 2 191 2 166 1 244 1 40 1 243 1 168 1 356 1 249 1 196 6 46 1 329 1 327 1 50 1 
279 1 348 2 365 2 350 2 32 8 289 6 183 2 33 1 264 1 184 1 34 1 6 1 321 1 158 11 370 3 7 2 324 1 83 11 190 4 191 1 193 1 165 1 243 2 168 1 270 1 356 1 92 1 196 14 249 4 46 2 227 3 148 2 327 2 
313 1 53 1 135 1 2 1 29 1 348 1 365 1 107 1 316 1 180 1 351 1 32 1 211 1 289 1 265 1 336 1 34 1 321 1 7 1 141 1 324 1 9 2 295 1 190 2 243 1 168 1 301 1 270 1 171 1 124 1 41 1 249 1 196 2 199 1 46 1 130 2 253 1 174 1 
103 1 313 2 53 3 348 3 2 2 107 1 316 1 350 8 351 3 211 1 265 2 321 1 158 7 7 3 324 2 9 3 119 2 166 1 168 3 270 1 356 3 226 1 130 3 327 3 276 2 174 1 135 2 365 3 29 2 180 1 333 2 181 1 285 2 32 10 289 10 183 2 33 2 336 3 337 1 34 1 188 1 294 1 83 7 190 6 191 4 244 1 40 1 243 3 301 2 41 2 92 4 196 20 249 7 198 1 199 1 46 3 148 2 253 2 101 2 
52 1 53 8 2 2 348 2 365 2 107 1 316 1 180 1 351 8 32 1 289 1 265 2 336 7 266 1 321 1 7 2 80 1 9 1 296 1 190 4 243 2 168 2 301 3 270 1 87 1 271 1 194 1 220 1 126 1 94 1 196 2 275 2 199 2 46 2 226 1 130 1 329 1 253 2 174 1 
1 1 331 1 348 1 365 1 180 1 316 1 350 1 32 1 183 1 33 1 289 2 34 1 158 1 7 1 269 1 9 1 83 1 190 2 191 1 243 1 168 1 356 1 249 1 196 3 46 1 148 1 130 1 327 1 174 1 
190 2 168 1 243 1 365 1 348 1 350 1 32 2 92 1 249 1 196 2 46 1 148 1 158 1 7 1 329 1 327 1 361 1 83 1 
132 1 190 2 191 1 168 1 243 1 365 1 348 1 350 1 356 1 249 1 196 2 33 1 289 2 46 1 158 1 7 1 329 1 83 1 
348 1 365 1 350 2 32 2 183 1 33 1 289 2 158 2 7 1 83 2 190 2 191 1 243 1 168 1 356 1 92 1 196 4 249 2 46 1 148 1 327 1 329 1 
190 2 168 1 243 1 365 1 348 1 350 1 220 1 32 2 92 1 249 1 196 2 46 1 148 1 158 1 7 1 327 1 361 1 83 1 
132 1 190 2 191 1 168 1 243 1 365 1 348 1 350 1 220 1 356 1 249 1 196 2 33 1 289 2 46 1 158 1 7 1 83 1 
348 1 365 1 350 2 32 2 183 1 33 1 289 2 158 2 7 1 83 2 190 2 191 1 243 1 168 1 220 1 356 1 92 1 196 4 249 2 46 1 148 1 327 1 
348 1 365 1 350 2 32 2 183 1 33 1 289 2 158 2 7 1 83 2 190 2 191 1 243 1 168 1 356 1 92 1 196 4 249 2 46 1 148 1 327 1 
313 1 53 1 135 1 2 1 29 1 365 1 348 1 32 1 351 1 289 1 265 1 336 1 321 1 7 1 324 1 9 1 190 2 168 1 243 1 301 1 270 1 41 1 196 2 199 1 46 1 130 1 253 1 276 1 
190 2 53 1 168 1 243 1 270 1 365 1 348 1 351 1 196 1 289 1 5 1 199 1 336 1 46 1 116 1 238 1 7 1 324 1 
348 1 365 1 350 2 32 2 183 1 33 1 289 2 34 1 158 2 7 1 83 2 190 2 191 1 243 1 168 1 356 1 92 1 196 4 249 2 46 1 148 1 327 1 
313 1 53 1 135 1 2 1 29 1 365 1 348 1 350 2 285 1 32 2 351 1 289 2 33 1 183 1 265 1 336 1 158 2 7 1 80 1 9 1 83 2 190 2 191 1 168 1 243 1 301 1 41 1 356 1 92 1 249 2 196 4 46 1 148 1 130 1 327 1 276 1 253 1 
331 1 348 1 365 1 180 1 316 1 350 1 32 2 289 1 33 1 183 1 34 1 158 1 7 1 269 1 9 1 83 1 190 2 243 1 168 1 356 1 92 1 225 1 196 3 249 1 46 1 148 1 130 1 327 1 174 1 
362 1 279 1 205 1 26 1 348 2 365 2 350 6 32 9 289 10 183 3 33 3 264 1 78 1 187 1 214 1 370 1 7 2 190 4 191 3 374 2 299 2 356 3 92 3 196 19 46 2 227 2 148 3 252 1 129 1 327 3 
362 1 279 2 205 1 26 1 348 3 365 3 108 1 350 4 32 14 289 12 183 3 33 2 187 2 214 2 370 2 7 3 190 6 191 2 15 1 374 4 299 1 376 1 356 2 92 2 196 26 146 1 46 3 359 2 227 2 148 3 308 1 67 1 129 1 327 3 
362 1 279 3 205 1 26 1 348 3 365 3 108 1 350 8 32 20 289 21 183 4 33 4 264 1 337 1 188 1 187 2 214 1 370 3 7 3 294 1 190 6 15 1 191 4 374 4 299 1 166 1 244 1 40 1 302 1 376 1 356 5 92 4 196 41 146 1 46 3 359 1 227 4 148 4 308 1 67 1 252 1 129 1 327 5 
362 1 279 3 205 1 26 1 348 4 365 4 108 1 350 7 32 20 289 18 183 4 33 3 264 1 337 1 188 1 187 2 214 1 370 3 7 4 294 1 190 8 15 1 191 4 374 4 299 1 166 1 244 1 40 1 302 1 376 1 356 4 92 3 196 38 146 1 46 4 359 2 227 4 148 4 308 1 67 1 252 1 129 1 327 5 
362 1 279 2 205 1 26 1 348 2 365 2 108 1 350 14 32 27 289 25 183 7 33 7 264 2 337 1 188 1 187 1 214 1 370 4 7 2 294 1 190 4 15 1 191 7 193 2 374 4 299 1 166 1 244 1 40 1 376 1 356 8 92 7 196 52 146 1 46 2 359 1 227 4 148 7 308 1 67 1 129 1 327 8 
224 1 344 1 39 1 139 1 111 1 189 1 304 1 11 1 216 1 182 1 
19 1 91 1 
61 1 224 1 344 1 39 1 139 1 49 1 160 1 111 1 304 1 
38 2 39 1 28 1 111 1 273 1 304 1 182 1 224 1 344 1 77 1 45 1 139 1 149 1 189 1 204 1 11 1 60 1 162 1 
38 2 39 1 28 1 111 1 273 1 304 1 182 1 224 1 344 1 77 1 45 1 139 1 149 1 189 1 204 1 11 1 60 1 162 1 
38 2 39 1 28 1 111 1 273 1 304 1 182 1 224 1 344 1 77 1 45 1 139 1 149 1 189 1 204 1 11 1 60 1 162 1 
259 1 36 1 175 1 
259 1 36 1 175 1 
326 1 237 1 
326 1 237 1 36 1 
104 1 169 1 
104 1 28 1 111 1 180 2 316 2 115 1 77 1 138 1 267 1 139 1 324 1 9 2 60 1 38 1 39 1 169 1 304 1 65 1 91 1 224 1 344 1 19 1 130 2 328 1 99 1 204 1 174 2 
259 1 175 1 
326 1 237 1 36 1 
52 1 53 2 134 1 2 1 365 1 348 1 316 2 351 2 32 1 289 1 265 1 336 2 34 1 321 1 7 1 9 2 190 2 243 1 168 1 301 1 170 1 270 1 94 1 196 2 275 2 46 1 47 1 345 1 130 2 202 1 253 1 
343 1 53 2 2 1 334 1 73 1 351 2 235 1 154 1 93 2 155 1 335 1 18 1 265 1 185 1 336 2 226 1 80 1 240 1 12 1 
343 1 53 1 332 1 2 1 334 1 73 1 351 1 235 1 154 1 93 2 155 1 335 1 265 1 185 1 336 1 226 1 12 1 
296 1 53 1 2 1 301 1 87 1 144 1 351 1 155 1 18 1 265 1 199 1 336 1 213 1 253 1 
343 1 53 1 2 1 334 1 73 1 351 1 235 1 154 1 93 2 155 1 335 1 18 1 265 1 185 1 336 1 226 1 240 1 12 1 
290 1 
217 1 260 1 54 1 50 1 114 1 113 1 162 1 
257 1 260 1 282 1 207 1 153 1 114 1 317 1 318 1 159 1 60 1 162 2 192 1 217 1 303 1 228 1 382 1 204 1 
257 12 260 2 53 3 54 1 2 4 106 6 207 4 349 2 113 1 351 3 153 6 114 8 3 2 317 4 318 4 265 3 212 1 159 4 8 2 353 1 119 2 60 5 162 8 217 9 64 3 123 2 356 2 358 1 23 2 327 2 278 1 330 2 282 3 137 1 183 2 33 2 368 1 336 3 80 1 85 2 301 10 41 3 42 2 303 5 250 2 43 2 199 1 378 2 148 2 309 1 251 6 253 3 310 2 204 5 
25 1 257 6 279 1 260 2 282 1 106 5 108 1 207 2 349 1 3 1 153 3 114 5 317 2 183 2 33 2 368 1 318 2 369 1 159 2 370 1 60 1 162 5 15 1 217 8 376 1 303 1 42 2 356 2 227 1 148 2 308 1 67 1 251 5 327 2 204 1 
109 1 207 1 180 1 316 1 3 1 114 2 317 1 57 1 318 1 116 1 188 1 159 1 9 1 294 1 269 1 60 1 217 2 244 1 42 2 356 1 125 1 305 1 307 1 130 1 327 2 204 1 174 1 311 1 
260 1 217 1 54 1 207 1 113 1 114 1 317 1 318 1 159 1 162 1 
257 10 217 5 106 5 3 1 42 2 114 5 153 5 356 2 183 2 33 2 148 2 251 5 327 2 119 1 162 5 
260 1 282 1 204 1 303 1 60 1 162 1 
53 4 282 2 2 1 207 2 349 2 351 4 114 2 317 1 318 2 368 2 265 1 212 1 336 4 159 2 241 1 60 3 296 1 217 2 301 1 87 1 247 1 303 4 44 1 147 1 199 2 309 2 253 1 204 3 231 1 
313 1 53 1 135 1 348 1 29 1 2 1 365 1 316 2 180 2 351 1 289 1 265 1 336 1 320 1 7 1 324 1 9 3 269 2 190 2 168 1 243 1 270 1 301 1 41 1 305 1 196 1 46 1 199 1 130 3 276 1 253 1 174 2 
257 4 217 1 260 2 106 2 207 1 349 1 153 2 114 2 317 1 318 1 368 1 337 1 159 1 251 2 162 4 
344 1 314 1 111 1 
344 1 314 1 111 1 
344 1 169 1 366 1 111 1 182 1 
344 1 314 1 111 1 
344 1 22 1 111 1 
344 1 22 1 111 1 
344 1 22 1 111 1 
344 1 111 1 
39 1 139 1 
190 4 191 2 166 1 40 1 244 1 365 2 348 2 350 3 32 4 356 1 92 1 289 4 196 8 46 2 337 1 359 1 188 1 7 2 327 1 294 1 
191 2 166 1 40 1 244 1 350 2 32 3 356 1 289 3 196 6 337 1 188 1 327 1 50 1 294 1 
190 2 191 1 365 1 348 1 350 2 32 2 356 1 92 1 289 2 33 1 183 1 196 4 46 1 148 1 7 1 327 1 81 1 
279 1 191 1 350 2 32 3 356 1 92 1 33 1 289 4 196 7 183 1 264 1 227 2 148 1 370 1 327 1 
51 1 365 2 348 2 350 9 32 11 183 2 289 12 33 2 264 1 337 1 188 2 6 1 370 2 7 2 294 1 190 4 191 5 193 1 166 1 244 2 40 1 356 3 92 4 196 23 46 2 148 2 227 2 359 2 327 3 
196 1 289 1 227 1 
196 1 370 1 32 1 
190 2 191 2 348 1 365 1 350 3 32 3 356 1 92 1 289 3 196 6 183 1 33 1 46 1 148 1 7 1 327 1 81 1 119 1 
279 1 205 1 348 1 365 1 108 1 350 2 32 6 289 6 183 2 33 2 370 1 7 1 190 2 15 1 191 1 376 1 356 2 92 1 196 12 46 1 227 1 148 2 308 1 67 1 327 2 
191 1 244 1 350 2 32 3 356 1 92 1 196 6 289 3 188 1 327 1 294 1 
51 1 190 2 191 1 166 1 244 1 40 1 365 1 348 1 350 2 32 1 92 1 289 2 196 3 46 1 359 1 188 1 7 1 
190 2 205 1 191 3 244 2 348 1 365 1 109 1 350 5 32 5 356 2 92 2 196 10 289 5 46 1 188 2 7 1 327 2 294 1 
190 2 205 1 365 1 348 1 350 1 32 2 92 1 196 2 46 1 148 1 7 1 327 1 
190 2 191 1 205 1 365 1 348 1 350 2 32 2 356 1 92 1 289 2 33 1 183 1 196 4 46 1 148 1 7 1 327 1 
51 1 190 6 205 1 191 1 244 1 365 3 348 3 350 2 32 1 92 1 289 2 196 3 46 3 359 1 188 1 7 3 252 1 
51 1 279 1 205 1 348 5 365 5 350 12 32 16 289 18 183 3 33 3 264 1 337 1 188 3 370 3 7 5 81 1 294 2 190 10 191 7 16 1 166 1 244 3 40 1 356 5 92 5 306 1 196 34 46 5 359 2 227 4 148 3 252 1 327 5 254 1 
279 1 205 1 348 1 365 1 350 2 32 4 289 4 337 1 188 1 370 1 7 1 294 1 190 2 191 2 166 1 40 1 244 1 356 1 196 8 46 1 227 1 67 1 327 1 
279 1 205 1 348 2 365 2 350 3 32 6 289 5 183 1 264 1 337 1 188 1 370 1 7 2 81 1 294 1 190 4 191 2 166 1 244 1 40 1 356 1 92 1 196 11 46 2 227 2 148 1 67 1 327 2 
279 1 205 1 348 3 365 3 108 1 350 4 32 9 289 10 183 2 33 2 337 1 188 1 370 1 7 3 81 1 294 1 190 6 15 1 191 3 166 1 244 1 40 1 376 1 356 3 92 1 196 19 46 3 227 1 148 2 359 1 308 1 67 1 327 3 
279 1 205 1 348 3 365 3 108 1 350 5 32 10 289 7 183 2 33 1 337 1 188 1 370 1 7 3 81 1 294 1 190 6 15 1 191 3 166 1 244 1 40 1 376 1 356 2 92 2 196 17 46 3 359 1 227 1 148 2 308 1 67 1 327 3 
279 1 205 1 348 1 365 1 350 2 32 4 289 4 337 1 188 1 370 1 7 1 294 1 190 2 191 2 166 1 40 1 244 1 356 1 196 8 46 1 227 1 67 1 327 1 
279 1 205 1 348 1 365 1 108 1 350 2 32 6 289 6 183 2 33 2 370 1 7 1 190 2 15 1 191 1 376 1 356 2 92 1 196 12 46 1 227 1 148 2 308 1 67 1 327 2 
279 1 205 1 348 4 365 4 108 1 350 5 32 10 289 8 183 2 33 1 337 1 188 1 370 1 7 4 81 1 294 1 190 8 15 1 191 3 166 1 244 1 40 1 376 1 356 2 92 2 196 18 46 4 227 1 148 2 359 2 308 1 67 1 327 3 
279 1 205 1 348 4 365 4 108 1 350 6 32 9 289 7 183 3 33 2 370 1 7 4 190 8 15 1 191 3 376 1 356 2 92 3 196 16 46 4 227 1 148 3 359 2 308 1 67 1 252 1 327 3 
191 3 166 2 40 1 244 3 350 6 32 3 356 1 92 3 289 4 196 7 188 3 327 1 294 1 
279 1 205 1 348 4 365 4 108 1 350 4 32 10 289 8 183 2 33 1 337 1 188 1 370 1 7 4 294 1 190 8 15 1 191 3 166 1 244 1 40 1 376 1 356 2 92 1 196 18 46 4 227 1 148 2 359 2 308 1 67 1 252 1 327 3 
319 1 130 1 316 1 372 1 324 1 9 1 367 1 
62 1 86 1 347 1 316 1 112 1 367 1 319 1 130 1 230 1 372 1 324 1 9 1 
296 1 265 1 336 1 199 1 53 1 2 1 301 1 87 1 253 1 50 1 351 1 
313 1 53 1 301 1 2 1 29 1 107 1 180 1 316 1 41 1 351 1 265 1 199 1 336 1 130 2 253 1 324 1 9 2 174 1 
313 1 53 1 29 1 2 1 107 1 152 1 316 2 180 1 351 1 265 1 336 1 116 1 293 1 324 1 9 2 85 1 301 3 41 2 309 1 130 2 253 2 310 1 174 2 
313 1 53 2 2 1 107 1 152 1 316 2 180 1 351 2 157 1 265 1 336 2 116 1 293 1 324 1 9 2 85 1 301 3 17 1 41 2 309 1 130 2 253 2 310 1 174 2 
85 1 260 1 53 3 2 1 301 4 64 1 71 1 41 1 351 3 303 1 250 1 157 1 265 1 199 1 336 3 378 1 309 1 253 1 310 1 204 2 60 2 256 1 162 1 
85 1 260 1 53 3 2 1 301 4 64 1 41 1 351 3 303 1 250 1 157 1 265 1 199 1 336 3 378 1 309 1 8 1 253 1 310 1 204 2 60 2 162 1 
265 1 336 1 53 1 2 1 194 1 351 1 
52 1 53 7 301 3 2 3 271 1 194 1 41 1 90 1 351 7 126 1 275 1 265 2 199 2 336 6 226 1 266 1 322 1 80 1 253 2 353 1 215 1 
313 1 53 1 348 2 2 1 107 1 316 1 350 2 351 1 265 1 158 1 7 2 9 2 324 2 166 1 168 2 356 1 130 2 327 1 276 1 174 1 135 1 29 1 365 2 180 1 285 1 32 3 289 3 336 1 34 1 337 1 188 1 80 1 294 1 83 1 190 4 191 2 243 2 40 1 244 1 301 1 41 1 249 1 196 6 46 2 202 1 253 1 101 1 
260 1 53 1 330 1 54 1 282 1 207 2 114 1 113 1 351 1 317 2 318 2 138 1 336 1 212 1 159 2 8 1 60 3 162 1 217 1 301 2 64 1 123 1 303 2 250 1 199 1 378 1 23 1 204 3 
250 1 265 1 336 2 53 2 2 2 301 2 80 1 253 1 41 1 194 1 353 1 351 2 278 1 
296 1 53 4 2 1 301 1 87 1 351 4 157 1 265 1 199 1 336 4 291 1 80 1 253 1 
53 2 301 1 2 2 41 1 90 1 351 2 357 1 198 1 265 1 336 2 186 1 309 1 253 1 215 1 
335 1 265 1 185 1 336 1 199 1 53 1 2 1 154 1 351 1 93 1 
52 1 265 1 336 2 47 1 226 1 53 2 2 1 301 1 80 1 253 1 351 2 
296 1 52 1 53 5 301 3 2 2 87 1 271 1 351 5 265 2 199 1 336 4 266 1 291 1 309 1 80 1 253 2 
296 1 52 1 53 5 301 3 2 2 87 1 271 1 351 5 263 1 265 2 199 1 336 4 291 1 309 1 80 1 253 2 
313 1 53 1 301 1 2 1 107 1 180 1 316 1 41 1 17 1 351 1 265 1 199 1 336 1 130 2 253 1 324 1 9 2 174 1 
53 1 301 1 2 2 41 1 90 1 351 1 265 1 336 1 322 1 309 1 253 1 353 1 215 1 
345 1 105 1 134 1 170 1 200 1 130 1 316 1 9 1 102 1 
200 1 35 1 88 1 
105 1 200 1 172 1 324 1 102 1 
260 1 105 2 136 1 152 1 88 1 31 1 172 2 138 1 378 1 116 1 200 1 35 1 293 1 324 1 204 2 60 2 102 2 162 1 84 1 
14 1 177 1 340 1 50 1 
14 1 274 1 4 1 177 1 219 1 340 1 74 1 
218 1 219 1 339 1 
232 1 14 1 177 1 219 3 74 1 75 1 4 1 274 3 338 1 140 2 340 1 10 1 
14 1 274 2 4 1 177 1 117 1 143 1 219 2 340 1 74 1 
274 1 4 1 185 1 177 1 219 1 246 1 334 1 74 1 75 1 93 1 354 1 
274 1 4 1 177 1 219 1 340 1 74 1 75 1 
14 1 274 1 4 1 219 1 340 2 74 1 75 1 
281 1 151 1 177 1 219 2 74 2 75 1 145 1 4 2 274 2 340 1 
14 1 206 1 234 1 177 2 219 3 143 2 74 1 75 1 262 1 4 1 274 3 340 1 354 1 
14 1 242 1 177 1 219 2 143 1 74 1 73 1 334 1 75 1 93 2 335 1 4 1 274 2 185 1 340 1 
14 1 206 1 177 2 219 4 143 2 74 2 75 1 325 1 4 2 274 4 117 1 340 1 354 1 
14 1 274 1 4 1 177 1 219 1 340 1 74 1 75 1 
232 1 14 2 206 1 177 3 143 2 219 4 355 1 74 1 274 4 4 1 338 1 140 1 340 2 354 1 
14 1 76 1 274 2 4 1 379 1 177 1 143 1 219 2 340 1 221 1 74 1 75 1 
232 2 14 1 274 3 4 1 338 1 177 1 219 3 140 2 340 1 74 1 75 1 210 1 
98 1 177 2 27 2 268 1 
274 1 4 1 97 1 219 1 74 1 75 1 
14 1 274 2 4 1 234 1 177 1 143 1 219 2 340 1 74 1 75 1 
55 1 
14 1 274 1 4 1 177 1 219 1 340 1 74 1 75 1 
14 1 234 1 177 1 143 1 219 3 74 1 75 1 4 1 274 3 140 1 340 1 
206 1 177 1 355 1 354 1 
177 1 340 1 

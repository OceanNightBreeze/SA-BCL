#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (219,262) (219,262) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (219,262) (219,262) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (219,262) (219,262) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (219,262) (219,262) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 271 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 271 14 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 271 14 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (137,330,357) (37,120,225) (37,120,225) (37,120,225) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (137,330,357) (37,120,225) (37,120,225) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (137,330,357) (37,120,225) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (137,330,357) (37,120,225) (37,120,225) (37,120,225) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (137,330,357) (137,330,357) (137,330,357) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (137,330,357) (137,330,357) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (137,330,357) (137,330,357) (137,330,357) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 294 1 229 1 186 1 102 1 125 1 219 1 252 1 304 1 262 1 54 1 8 1 
219 1 294 1 1 1 229 1 102 1 186 1 252 1 304 1 54 1 262 1 125 1 8 1 
219 1 294 1 1 1 229 1 102 1 186 1 252 1 304 1 54 1 262 1 125 1 8 1 
219 1 294 1 1 1 229 1 102 1 186 1 252 1 304 1 54 1 262 1 125 1 8 1 
374 1 51 1 271 1 169 1 1 1 46 1 229 1 252 1 304 1 125 2 107 1 8 2 
374 1 212 1 341 1 240 1 33 1 1 1 229 1 133 1 177 1 186 1 102 1 125 2 25 1 252 1 327 1 8 2 
374 2 169 1 33 1 57 1 154 1 1 1 229 2 177 1 102 1 125 3 252 2 107 1 8 3 
374 3 110 1 169 5 57 1 154 2 1 1 46 1 229 2 102 1 125 7 14 1 51 1 271 1 252 2 289 1 304 1 305 1 107 3 8 7 
374 3 110 1 169 5 57 1 154 2 1 1 46 1 229 2 102 1 125 7 14 1 51 1 271 1 252 2 289 1 304 1 305 1 107 3 8 7 
210 1 298 1 333 1 
72 1 298 1 335 2 
239 2 193 2 175 2 35 2 7 1 27 2 85 2 360 1 
239 2 343 1 344 2 22 2 71 1 49 1 24 2 250 1 162 1 193 2 118 1 119 1 7 1 27 2 94 1 28 1 355 1 277 1 198 1 199 1 170 1 309 2 174 2 175 2 230 1 35 3 254 1 101 1 12 1 360 1 316 1 61 1 180 1 288 1 234 1 322 1 85 3 
197 1 239 1 131 1 193 1 175 1 35 1 27 1 354 1 85 1 360 1 
197 1 328 1 0 1 333 1 35 1 298 1 193 1 140 1 151 1 258 1 165 1 17 1 63 1 85 1 
197 1 328 2 239 1 0 1 175 1 333 1 35 1 298 1 193 1 151 1 258 1 17 2 27 1 63 1 85 1 
328 1 109 1 17 1 108 1 95 1 
328 2 109 1 298 1 86 1 163 1 333 1 17 2 108 1 
328 1 17 1 108 1 
197 1 109 1 328 1 239 1 131 1 175 1 378 1 35 1 360 1 193 1 17 1 27 1 354 1 85 1 
298 1 
256 1 328 2 109 1 298 1 86 1 333 1 17 2 108 1 
109 2 328 5 211 1 340 1 122 1 100 1 86 1 358 1 310 2 333 1 188 1 249 1 60 2 350 1 298 1 204 2 17 5 290 1 108 2 
210 1 7 1 
239 1 175 1 193 2 35 2 7 2 27 1 47 1 276 1 85 2 
362 1 104 1 261 1 
344 1 309 1 230 1 22 1 35 1 12 1 71 1 49 1 316 1 61 1 162 1 180 1 181 1 288 1 7 1 85 1 
239 1 344 1 309 1 175 1 230 1 22 1 35 2 12 1 71 1 49 1 36 1 316 1 61 1 162 1 180 1 193 1 288 1 261 1 85 2 55 1 
239 3 193 3 175 3 35 3 27 1 7 1 36 1 85 3 
197 1 239 1 131 1 193 1 175 1 35 1 85 1 
197 1 239 1 193 1 175 1 35 1 47 1 27 1 85 1 276 1 
239 3 0 1 344 1 266 1 22 1 71 1 49 1 24 2 250 1 162 1 193 3 7 1 27 2 94 1 28 1 276 1 55 1 355 1 197 1 328 1 277 1 198 1 199 1 170 1 309 1 174 1 230 1 175 3 35 4 12 1 101 1 36 1 360 1 316 1 257 1 61 1 180 1 151 1 258 1 288 1 17 1 63 1 322 1 85 4 
239 1 193 2 175 1 380 1 165 1 35 2 7 1 85 2 36 1 
328 1 197 1 239 3 0 1 175 3 35 3 36 2 257 1 298 1 205 1 193 3 151 1 258 1 17 1 27 1 63 1 276 1 85 3 55 1 
239 2 175 2 35 2 36 1 104 1 193 2 27 1 261 1 276 1 85 2 
344 1 309 1 230 1 22 1 35 1 12 1 71 1 49 1 316 1 61 1 162 1 180 1 288 1 7 1 85 1 
253 1 344 1 309 1 22 1 35 1 71 1 49 1 316 1 61 1 162 1 180 1 288 1 7 1 18 1 85 1 
132 1 343 2 368 1 48 1 157 1 134 1 24 2 250 1 28 1 355 1 277 2 198 1 170 1 377 1 174 4 123 1 202 1 362 2 203 1 148 1 104 2 259 1 261 2 322 1 
197 1 0 1 239 1 191 1 193 1 175 1 35 1 85 1 
239 4 111 1 175 4 35 5 185 1 36 2 193 5 380 1 165 1 27 1 7 1 85 5 276 1 55 1 
197 1 239 2 131 1 191 1 193 2 175 2 35 2 85 2 
352 1 143 1 
352 1 143 1 
255 1 369 1 
255 1 369 1 
255 1 369 1 
91 1 352 1 143 1 
91 1 352 1 143 1 
173 1 352 1 143 1 
352 2 5 1 255 1 143 2 236 1 369 1 
91 1 352 1 143 1 
136 1 352 1 143 1 
136 1 352 1 143 1 
136 1 352 1 143 1 
328 2 278 1 98 2 265 3 45 2 231 1 88 1 314 1 143 2 269 2 144 1 160 2 298 1 287 1 352 2 138 1 52 2 5 1 17 2 
328 1 239 2 245 1 173 1 265 1 45 1 175 2 35 2 88 1 143 1 269 1 160 1 372 1 92 1 352 1 193 2 139 1 326 1 52 1 17 1 7 1 129 1 237 1 85 2 
304 1 
240 1 341 1 327 1 
341 1 206 1 304 2 327 1 
67 1 341 1 34 1 217 1 233 1 304 1 327 1 
67 1 341 1 34 1 217 2 304 1 327 1 
44 2 109 4 292 2 21 1 86 1 48 1 346 1 187 1 134 1 72 1 189 1 298 2 372 1 351 1 92 1 328 5 96 1 122 1 100 3 358 2 282 1 310 1 333 1 202 1 335 3 59 2 60 1 203 1 204 1 17 5 237 1 108 1 
44 6 109 7 68 5 86 1 48 3 346 2 187 3 188 1 134 3 72 3 189 1 298 5 92 4 95 5 328 9 96 2 122 1 100 8 358 6 310 2 142 1 333 1 202 3 335 9 58 1 59 6 126 1 60 2 203 3 79 1 204 2 363 1 82 1 17 9 108 6 
109 2 292 1 44 2 21 1 346 1 48 1 187 1 188 1 134 1 72 2 298 3 92 1 328 3 96 1 100 3 282 1 358 2 310 1 333 1 202 1 335 4 59 2 60 1 203 1 204 1 17 3 
44 4 292 2 109 3 21 1 346 1 48 2 187 2 188 1 134 2 72 3 298 4 92 2 328 4 96 1 100 5 282 1 358 4 310 1 333 1 142 1 202 2 335 7 58 1 59 4 60 1 203 2 204 1 363 1 17 4 
210 1 145 1 288 1 
288 1 11 1 
40 1 
316 1 288 1 
316 1 145 2 61 1 288 3 19 1 209 1 
316 1 61 1 288 1 
56 1 288 1 
277 3 29 1 112 1 32 1 343 4 356 2 174 7 9 1 48 1 315 1 349 1 203 1 317 1 74 1 148 2 232 1 259 3 
277 3 29 1 112 1 32 1 343 4 356 2 174 7 9 1 48 1 315 1 349 1 203 1 317 1 74 1 148 2 232 1 259 3 
277 3 29 1 112 1 32 1 343 4 356 2 174 7 9 1 48 1 315 1 349 1 203 1 317 1 74 1 148 2 232 1 259 3 365 1 
213 4 112 2 343 16 345 1 48 4 89 1 187 3 134 3 349 1 74 1 24 2 250 1 192 1 28 1 97 1 277 15 29 2 170 1 32 2 356 3 174 31 9 5 312 1 202 3 315 2 317 1 203 4 232 1 148 5 179 1 259 10 84 1 364 3 322 1 
112 1 343 5 48 1 349 1 24 4 250 2 74 1 28 2 373 1 97 1 29 1 277 4 170 2 32 1 356 2 174 9 9 1 315 1 203 1 317 1 148 3 259 4 322 2 66 1 
120 1 225 1 341 1 344 1 309 1 357 1 1 1 229 1 87 1 332 1 22 1 102 1 71 1 125 1 37 1 73 1 190 1 180 1 206 1 252 1 381 1 207 1 304 1 327 1 8 1 
225 1 341 1 169 1 344 1 309 1 357 1 229 1 87 1 248 1 22 1 102 1 71 1 125 2 37 1 73 1 190 1 4 1 180 1 206 1 252 1 381 1 207 1 304 1 327 1 382 1 8 2 
341 1 169 1 344 1 309 1 357 1 87 1 248 1 22 1 102 1 71 1 125 1 37 1 73 1 4 1 180 1 206 1 381 1 207 1 304 1 327 1 8 1 
307 1 344 1 309 1 229 1 87 2 22 1 102 2 71 1 103 1 125 1 49 1 316 1 73 2 337 1 180 1 288 1 381 2 252 1 208 1 42 1 224 1 382 1 8 1 
120 1 225 1 341 1 344 1 309 1 357 1 1 1 229 1 87 1 22 1 102 1 71 1 125 1 37 1 73 1 190 1 4 1 180 1 206 1 252 1 381 1 207 1 304 1 327 1 8 1 
53 1 
0 1 242 1 344 2 86 3 247 2 297 1 49 2 2 2 3 1 298 2 299 1 193 1 140 1 196 1 96 1 197 1 100 2 309 2 358 2 310 1 316 1 60 1 146 2 204 1 151 1 258 1 17 5 208 1 64 1 63 1 108 6 69 1 22 2 71 1 114 1 72 2 370 1 221 1 165 1 167 4 121 2 328 5 122 1 376 1 280 2 333 1 35 1 77 1 335 2 285 2 180 1 288 1 235 2 42 1 85 1 
197 1 328 3 0 1 242 1 69 1 86 1 35 1 77 1 2 1 256 1 3 1 221 1 193 1 258 1 140 1 151 1 17 3 165 1 63 1 108 2 167 2 85 1 
0 1 242 1 69 1 86 1 3 1 221 1 298 1 193 1 140 1 165 1 167 3 328 3 197 1 121 1 35 1 333 1 77 1 256 1 151 1 258 1 17 3 63 1 108 1 85 1 
0 1 242 1 69 1 86 1 2 1 3 1 221 1 298 1 193 1 140 1 165 1 167 3 328 3 197 1 121 1 35 1 333 1 77 1 256 1 146 1 151 1 258 1 17 3 63 1 85 1 108 2 
0 1 241 1 242 1 86 3 247 2 348 1 2 4 3 1 298 5 193 1 140 1 196 1 197 1 100 1 358 1 310 1 256 1 60 1 146 4 204 1 258 1 151 1 17 5 63 1 108 7 264 1 69 1 72 2 325 1 221 1 165 1 167 6 328 5 121 4 122 1 376 1 280 2 35 1 333 5 77 1 285 2 83 1 235 2 85 1 
0 1 242 1 69 1 86 2 247 2 2 2 72 2 3 1 298 2 299 1 221 1 193 1 140 1 165 1 196 1 167 4 121 2 328 4 197 1 122 1 376 1 280 2 100 1 358 1 310 1 333 1 35 1 77 1 335 2 285 2 60 1 146 2 204 1 151 1 258 1 17 4 235 2 63 1 108 4 85 1 
0 1 241 1 242 1 69 1 86 2 247 2 2 2 72 2 3 1 325 1 298 1 221 1 193 1 140 1 165 1 196 1 167 4 121 2 328 4 197 1 122 1 376 1 280 2 100 1 358 1 310 1 333 1 35 1 77 1 285 2 60 1 146 2 204 1 151 1 258 1 17 4 83 1 235 2 63 1 108 4 85 1 
0 1 241 1 242 1 69 1 86 2 247 2 2 2 72 2 3 1 325 1 298 1 221 1 193 1 140 1 165 1 196 1 167 4 121 2 328 4 197 1 122 1 376 1 280 2 100 1 358 1 310 1 333 1 35 1 77 1 285 2 60 1 146 2 204 1 151 1 258 1 17 4 83 1 235 2 63 1 108 4 85 1 
0 1 293 2 241 1 242 1 69 1 86 2 70 2 2 2 324 1 3 1 298 1 221 1 193 1 140 1 301 1 302 1 165 1 196 1 167 4 121 2 328 4 197 1 122 1 280 2 100 1 358 1 310 1 333 1 35 1 77 1 335 2 285 2 60 1 146 2 204 1 151 1 258 1 17 4 63 1 108 4 85 1 
0 1 241 1 242 1 69 1 86 2 247 2 348 1 2 3 72 2 3 1 325 1 298 1 221 1 193 1 140 1 165 1 196 1 167 5 328 4 197 1 121 3 122 1 376 1 280 2 100 1 358 1 310 1 333 1 35 1 77 1 285 2 60 1 146 3 204 1 151 1 258 1 83 1 17 4 235 2 63 1 85 1 108 5 
0 1 241 1 242 1 69 1 86 2 247 2 348 1 2 3 72 2 3 1 325 1 298 1 221 1 193 1 140 1 165 1 196 1 167 5 328 4 197 1 121 3 122 1 376 1 280 2 100 1 358 1 310 1 333 1 35 1 77 1 285 2 60 1 146 3 204 1 151 1 258 1 83 1 17 4 235 2 63 1 85 1 108 5 
0 1 293 2 242 1 69 1 86 2 70 2 2 2 324 1 3 1 298 1 299 1 221 1 193 1 140 1 165 1 196 1 167 4 121 2 328 4 197 1 122 1 280 2 100 1 358 1 310 1 333 1 35 1 77 1 335 2 285 2 60 1 146 2 204 1 151 1 258 1 17 4 63 1 108 4 85 1 
210 1 132 1 343 3 48 1 349 1 24 2 250 1 74 1 7 2 28 1 355 1 277 3 198 1 170 1 32 1 356 1 174 6 315 1 362 1 317 1 203 1 148 2 104 1 259 2 261 1 322 1 
213 3 343 8 48 2 89 1 187 2 134 2 24 4 250 2 7 1 93 1 94 1 28 2 355 2 277 6 226 1 375 1 198 1 170 2 174 14 281 1 9 1 312 1 254 1 202 1 362 11 203 1 148 1 104 4 259 2 261 11 364 3 322 2 153 1 
239 1 344 1 244 1 343 1 22 1 71 1 49 1 159 1 250 1 24 2 162 1 193 1 7 1 28 1 94 1 55 1 355 1 277 1 198 1 170 1 309 1 174 2 230 1 175 1 35 2 12 1 334 1 254 1 36 1 316 1 61 1 104 1 180 1 181 1 288 1 322 1 85 2 153 1 
239 1 344 3 343 10 48 3 187 2 49 1 134 2 349 1 250 3 4 1 193 1 7 2 94 1 55 1 355 3 198 3 199 2 200 1 356 1 309 3 9 4 254 1 12 2 202 2 315 1 316 2 362 7 317 1 203 3 61 2 148 4 104 7 259 8 106 1 261 7 322 3 153 1 22 3 71 2 74 1 24 6 117 2 162 2 28 3 223 2 277 10 170 3 172 1 32 1 174 20 175 1 230 2 35 3 36 1 127 2 180 2 81 2 288 2 85 3 
239 1 132 1 344 8 343 1 246 1 295 1 22 8 347 1 71 2 49 2 23 1 24 4 250 2 4 1 193 1 194 1 118 2 28 2 94 1 355 2 277 1 198 2 306 1 170 2 309 7 174 2 175 1 332 1 35 1 254 1 283 1 36 1 316 2 180 2 288 3 208 1 322 2 85 1 42 1 
239 1 343 1 48 1 187 1 134 1 24 2 250 1 193 1 27 1 28 1 166 1 276 1 355 1 277 2 198 1 170 1 174 3 175 1 35 1 202 1 362 1 203 1 148 1 104 1 259 1 261 1 322 1 85 1 153 1 
355 1 198 1 132 1 170 1 343 2 174 2 9 1 48 1 157 1 134 1 362 1 250 1 24 2 104 1 259 1 261 1 28 1 322 1 
355 1 277 2 198 1 132 1 170 1 377 1 174 2 202 1 362 1 203 1 148 1 250 1 24 2 104 1 259 1 261 1 28 1 322 1 
132 1 343 2 48 1 187 1 134 1 24 2 250 1 28 1 355 1 277 2 198 1 170 1 174 4 9 1 202 1 362 2 203 1 148 1 104 2 259 2 261 2 322 1 
355 1 198 1 170 1 343 2 174 2 9 1 48 1 283 1 157 1 134 1 362 1 250 1 24 2 104 1 259 1 261 1 28 1 322 1 
355 1 277 2 198 1 170 1 377 1 174 2 202 1 283 1 362 1 203 1 148 1 250 1 24 2 104 1 259 1 261 1 28 1 322 1 
343 2 48 1 187 1 134 1 24 2 250 1 28 1 355 1 277 2 198 1 170 1 174 4 9 1 202 1 283 1 362 2 203 1 148 1 104 2 259 2 261 2 322 1 
343 2 48 1 187 1 134 1 24 2 250 1 28 1 355 1 277 2 198 1 170 1 174 4 9 1 202 1 362 2 203 1 148 1 104 2 259 2 261 2 322 1 
343 1 344 1 22 1 71 1 49 1 250 1 24 2 162 1 7 1 28 1 94 1 355 1 277 1 199 1 198 1 170 1 309 1 174 2 230 1 35 1 254 1 12 1 316 1 61 1 180 1 288 1 322 1 85 1 
343 1 344 1 22 1 71 1 49 1 250 1 24 2 162 1 7 1 28 1 94 1 355 1 253 1 277 1 198 1 170 1 228 1 309 1 174 2 35 1 254 1 316 1 61 1 180 1 288 1 18 1 322 1 85 1 
343 2 48 1 187 1 134 1 24 2 250 1 28 1 355 1 277 2 198 1 170 1 174 4 9 1 202 1 362 2 203 1 148 1 104 2 259 2 261 2 322 1 153 1 
343 2 344 1 22 1 48 1 71 1 187 1 134 1 250 1 24 2 162 1 28 1 355 1 277 2 199 1 198 1 170 1 309 1 174 4 230 1 9 1 332 1 35 1 202 1 12 1 316 1 362 2 127 1 203 1 61 1 148 1 104 2 180 1 259 2 288 1 261 2 322 1 85 1 
239 1 343 2 184 1 48 1 187 1 134 1 24 2 250 1 193 1 27 1 28 1 276 1 355 1 277 1 198 1 170 1 174 3 175 1 9 1 35 1 202 1 362 1 203 1 104 1 259 1 261 1 322 1 85 1 153 1 
213 2 367 1 343 9 48 3 89 1 187 3 134 3 24 4 250 2 135 2 26 1 303 1 28 2 353 1 373 1 277 10 329 2 170 2 174 19 331 1 10 1 9 3 312 1 202 3 203 3 80 1 148 3 259 6 364 1 322 2 
367 2 213 2 243 1 343 14 48 3 187 3 134 3 24 6 250 3 135 4 26 1 274 1 303 2 28 3 373 1 97 2 277 12 329 1 170 3 30 1 174 26 9 2 10 1 312 2 202 2 39 1 203 2 80 1 148 2 318 1 259 4 152 1 364 2 322 3 
213 4 367 2 243 1 343 20 48 5 89 1 187 4 134 4 349 1 74 1 24 6 250 3 135 4 26 1 274 1 303 1 28 3 373 1 97 1 277 21 329 1 30 1 170 3 32 1 356 1 174 41 331 1 10 1 9 4 312 3 202 4 315 1 317 1 39 1 203 5 80 1 148 4 318 1 259 8 152 1 364 3 322 3 43 1 
213 4 367 2 243 1 343 20 48 5 89 1 187 4 134 4 349 1 74 1 24 8 250 4 135 4 26 1 274 1 303 1 28 4 373 1 97 2 277 18 329 1 30 1 170 4 32 1 356 1 174 38 331 1 10 1 9 3 312 3 202 3 315 1 317 1 39 1 203 4 80 1 148 4 318 1 259 7 152 1 364 3 322 4 43 1 
213 4 367 1 243 1 343 27 48 8 89 2 187 7 134 7 349 1 74 1 24 4 250 2 135 4 26 1 274 1 303 1 28 2 373 1 97 1 277 25 329 1 30 1 170 2 32 1 356 1 174 52 281 2 10 1 9 7 312 2 202 7 315 1 317 1 39 1 203 8 80 1 148 7 318 1 259 14 152 1 364 4 322 2 
144 1 160 1 287 1 352 1 45 1 52 1 5 1 143 1 269 1 116 1 
173 1 139 1 
160 1 251 1 352 1 45 1 273 1 52 1 321 1 143 1 269 1 
328 1 278 1 98 1 265 2 45 1 231 1 88 1 143 1 269 1 144 1 160 1 298 1 287 1 352 1 138 1 52 1 5 1 17 1 
328 1 278 1 98 1 265 2 45 1 231 1 88 1 143 1 269 1 144 1 160 1 298 1 287 1 352 1 138 1 52 1 5 1 17 1 
328 1 278 1 98 1 265 2 45 1 231 1 88 1 143 1 269 1 144 1 160 1 298 1 287 1 352 1 138 1 52 1 5 1 17 1 
91 1 268 1 236 1 
91 1 268 1 236 1 
147 1 136 1 
147 1 136 1 236 1 
245 1 129 1 
109 1 239 2 245 1 265 1 45 1 115 1 269 1 160 1 372 1 352 1 92 1 193 2 52 1 326 1 139 1 7 1 328 1 98 1 173 1 175 2 231 1 35 2 143 1 17 1 129 1 85 2 237 1 
91 1 268 1 
147 1 136 1 236 1 
344 2 343 1 246 1 22 2 71 1 347 1 270 1 250 1 24 2 193 2 118 2 28 1 94 1 355 1 277 1 198 1 170 1 309 2 174 2 176 1 35 2 254 1 316 1 38 1 15 1 180 1 338 1 288 1 322 1 85 2 153 1 
341 1 344 2 330 1 309 2 357 1 22 2 332 1 71 1 190 1 4 1 137 1 180 1 206 1 381 1 207 1 304 1 327 1 65 1 
341 1 344 1 309 1 357 1 22 1 71 1 190 1 4 1 137 1 180 1 206 1 381 1 207 1 304 1 327 1 339 1 
344 1 309 1 22 1 296 1 71 1 49 1 316 1 180 1 288 1 381 1 208 1 65 1 42 1 224 1 
341 1 344 1 330 1 309 1 357 1 22 1 71 1 190 1 4 1 137 1 180 1 206 1 381 1 207 1 304 1 327 1 65 1 
366 1 
210 1 340 1 298 1 100 1 358 1 333 1 290 1 
328 1 122 1 376 1 100 1 86 1 358 1 247 1 310 1 333 1 335 1 72 1 60 1 298 2 204 1 17 1 235 1 108 1 
44 6 340 1 344 3 86 3 183 1 48 2 187 2 49 1 134 2 50 1 298 8 6 2 195 1 96 2 56 2 141 2 100 9 309 3 358 8 310 4 11 3 202 2 59 6 316 3 60 4 203 2 61 3 145 2 149 1 204 4 16 2 320 2 17 5 64 1 19 1 63 2 108 5 22 3 155 2 71 3 156 2 72 6 161 1 222 2 328 5 122 4 332 1 333 2 379 2 335 12 180 4 81 2 288 10 290 1 
44 5 213 1 243 1 86 1 48 2 187 2 134 2 72 3 298 5 222 2 274 1 96 1 328 1 122 2 30 1 100 8 358 5 310 2 312 1 333 2 202 2 335 6 59 5 60 2 39 1 203 2 16 1 204 2 318 1 150 1 17 1 64 1 260 1 364 1 108 1 
239 1 131 1 48 2 74 1 222 2 193 1 27 1 354 1 197 1 328 1 122 1 32 1 201 1 100 2 358 2 175 1 310 1 378 1 35 1 315 1 360 1 60 1 203 1 16 1 204 1 83 1 17 1 85 1 
340 1 122 1 100 1 358 1 310 1 333 1 60 1 204 1 298 1 290 1 
44 5 100 5 358 5 48 2 202 2 187 2 335 10 134 2 59 5 72 5 203 2 16 1 298 5 222 2 81 1 
328 1 298 1 86 1 333 1 17 1 108 1 
342 1 344 4 86 2 22 4 71 1 297 1 188 1 49 2 370 1 161 1 96 2 328 3 122 1 309 4 100 2 358 2 310 2 336 1 316 1 60 2 149 2 204 2 180 1 288 1 17 3 64 2 208 1 108 4 42 1 
239 2 344 1 22 1 71 1 49 1 24 2 250 1 162 1 193 2 7 1 27 2 94 1 28 1 355 1 277 1 199 1 198 1 170 1 309 1 174 1 175 2 230 1 35 3 101 1 12 1 360 1 316 1 61 1 180 1 288 1 322 1 85 3 
44 2 96 1 122 1 356 1 100 1 358 2 310 1 333 2 335 4 59 2 72 2 60 1 204 1 298 4 64 1 
160 1 52 1 75 1 
160 1 52 1 75 1 
160 1 245 1 287 1 52 1 105 1 
160 1 52 1 75 1 
160 1 113 1 52 1 
160 1 113 1 52 1 
160 1 113 1 52 1 
160 1 52 1 
352 1 143 1 
97 1 277 4 170 2 343 4 32 1 356 1 174 8 9 1 48 1 315 1 349 1 203 1 317 1 74 1 148 2 250 2 24 4 259 3 28 2 322 2 
210 1 277 3 203 1 317 1 74 1 148 2 343 3 32 1 356 1 174 6 259 2 48 1 315 1 349 1 
277 2 170 1 343 2 174 4 9 1 202 1 178 1 48 1 187 1 134 1 203 1 148 1 250 1 24 2 259 2 28 1 322 1 
277 4 213 2 343 3 174 7 9 1 312 1 202 1 48 1 89 1 187 1 134 1 203 1 148 1 259 2 364 1 
213 2 343 11 48 3 187 2 89 1 134 2 349 1 74 1 250 2 24 4 28 2 97 2 277 12 375 1 170 2 32 2 356 1 174 23 281 1 9 4 202 2 315 2 317 1 203 3 148 5 128 1 259 9 364 2 322 2 
277 1 213 1 174 1 
343 1 174 1 364 1 
277 3 170 1 343 3 174 6 9 1 178 1 48 1 202 1 187 1 134 1 203 1 24 2 250 1 148 2 81 1 259 3 28 1 322 1 
213 1 343 6 243 1 48 2 187 2 134 2 24 2 250 1 274 1 28 1 373 1 277 6 30 1 170 1 174 12 9 1 312 1 202 2 203 2 39 1 148 1 318 1 259 2 364 1 322 1 
277 3 343 3 32 1 174 6 9 1 48 1 315 1 203 1 74 1 148 1 259 2 
97 1 277 2 170 1 343 1 32 1 174 3 9 1 315 1 349 1 317 1 148 1 250 1 24 2 128 1 259 2 28 1 322 1 
277 5 170 1 32 2 343 5 201 1 174 10 9 2 48 2 315 2 203 2 24 2 250 1 148 3 74 1 259 5 28 1 322 1 373 1 
170 1 343 2 174 2 9 1 48 1 134 1 250 1 24 2 259 1 28 1 322 1 373 1 
277 2 170 1 343 2 174 4 9 1 202 1 48 1 187 1 134 1 203 1 148 1 250 1 24 2 259 2 28 1 322 1 373 1 
97 1 277 2 170 3 32 1 343 1 174 3 331 1 9 1 315 1 250 3 24 6 148 1 128 1 259 2 28 3 322 3 373 1 
213 4 343 16 345 1 48 5 89 1 187 3 134 3 349 1 74 2 24 10 250 5 192 1 28 5 373 1 97 2 277 18 170 5 32 3 356 1 174 34 331 1 9 5 312 1 178 1 202 3 315 3 317 1 203 5 148 7 128 1 259 12 84 1 364 3 322 5 
213 1 343 4 48 1 349 1 24 2 250 1 74 1 28 1 373 1 277 4 30 1 170 1 32 1 356 1 174 8 312 1 315 1 203 1 317 1 148 2 259 2 364 1 322 1 
213 2 343 6 48 2 89 1 187 1 134 1 349 1 74 1 24 4 250 2 28 2 373 1 277 5 30 1 170 2 32 1 356 1 174 11 9 1 312 1 178 1 315 1 203 1 317 1 148 2 259 3 364 1 322 2 
213 1 243 1 343 9 48 3 187 2 134 2 349 1 74 1 24 6 250 3 274 1 28 3 373 1 97 1 277 10 30 1 170 3 32 1 356 1 174 19 9 1 312 1 178 1 202 2 315 1 317 1 203 3 39 1 148 3 318 1 259 4 364 1 322 3 
213 1 343 10 243 1 48 3 187 2 134 2 349 1 74 1 24 6 250 3 274 1 28 3 373 1 97 1 277 7 30 1 170 3 32 1 356 1 174 17 9 2 312 1 178 1 202 1 315 1 317 1 203 2 39 1 148 3 318 1 259 5 364 1 322 3 
213 1 343 4 48 1 349 1 24 2 250 1 74 1 28 1 373 1 277 4 30 1 170 1 32 1 356 1 174 8 312 1 315 1 203 1 317 1 148 2 259 2 364 1 322 1 
213 1 343 6 243 1 48 2 187 2 134 2 24 2 250 1 274 1 28 1 373 1 277 6 30 1 170 1 174 12 9 1 312 1 202 2 203 2 39 1 148 1 318 1 259 2 364 1 322 1 
213 1 243 1 343 10 48 3 187 2 134 2 349 1 74 1 24 8 250 4 274 1 28 4 373 1 97 2 277 8 30 1 170 4 32 1 356 1 174 18 9 2 312 1 178 1 202 1 315 1 317 1 39 1 203 2 148 3 318 1 259 5 364 1 322 4 
213 1 243 1 343 9 48 3 187 3 134 3 24 8 250 4 274 1 28 4 373 1 97 2 277 7 30 1 170 4 174 16 9 3 331 1 312 1 202 2 39 1 203 2 148 3 318 1 259 6 364 1 322 4 
277 4 32 3 343 3 174 7 9 3 48 1 315 3 349 2 203 1 317 1 148 3 74 1 259 6 
213 1 243 1 343 10 48 3 187 2 134 2 349 1 74 1 24 8 250 4 274 1 28 4 373 1 97 2 277 8 30 1 170 4 32 1 356 1 174 18 9 1 331 1 312 1 202 1 315 1 317 1 39 1 203 2 148 3 318 1 259 4 364 1 322 4 
193 1 380 1 35 1 165 1 275 1 7 1 85 1 
227 1 308 1 35 1 313 1 193 1 380 1 164 1 275 1 165 1 7 1 41 1 85 1 
316 1 210 1 344 1 309 1 180 1 22 1 288 1 71 1 208 1 49 1 42 1 
239 1 344 1 309 1 175 1 22 1 35 2 12 1 71 1 49 1 36 1 316 1 61 1 162 1 180 1 193 1 288 1 7 1 85 2 
197 1 56 1 0 1 239 2 344 1 309 1 175 1 22 1 35 2 12 1 71 1 36 1 316 2 61 2 162 1 149 1 180 1 193 2 258 1 6 1 288 3 7 1 85 2 
239 2 0 1 344 2 22 2 71 1 162 1 193 2 6 1 7 1 197 1 253 1 56 1 309 2 175 1 35 2 36 1 316 2 61 2 149 1 180 1 258 1 288 3 263 1 85 2 
344 3 22 3 71 1 49 1 298 1 6 1 328 2 56 1 76 1 309 3 333 1 11 1 316 1 145 1 61 1 149 1 180 1 288 4 17 2 63 1 263 1 108 1 20 1 
328 2 56 1 344 3 309 3 22 3 333 1 155 1 11 1 71 1 49 1 316 1 61 1 145 1 298 1 149 1 180 1 6 1 17 2 288 4 63 1 263 1 108 1 
344 1 309 1 180 1 295 1 22 1 71 1 
306 1 31 1 344 7 309 6 216 1 295 1 332 1 22 7 124 1 347 1 71 2 49 2 23 1 316 2 61 1 4 1 180 3 194 1 118 1 288 3 19 1 
239 1 343 3 344 1 22 1 48 1 71 1 349 1 74 1 250 2 24 4 162 1 117 1 193 1 7 2 28 2 355 2 277 3 198 2 199 1 170 2 32 1 356 1 309 1 174 6 175 1 230 1 332 1 176 1 35 2 12 1 315 1 36 1 316 1 362 1 127 1 203 1 317 1 61 1 148 2 104 1 180 1 259 2 288 1 261 1 322 2 85 2 153 1 
109 1 340 1 344 1 86 1 22 1 155 1 49 1 161 1 298 1 328 3 122 2 100 1 309 1 141 1 358 1 310 2 333 1 11 1 379 1 60 2 145 1 204 2 320 1 17 3 288 2 63 1 290 1 108 2 
344 2 309 2 295 1 332 1 22 2 71 1 316 1 145 1 61 1 180 2 288 2 195 1 19 1 
344 4 309 4 22 4 332 1 71 1 49 1 158 1 316 1 180 1 288 1 208 1 263 1 42 1 
31 1 172 1 344 2 309 2 216 1 22 2 71 1 316 1 78 1 61 1 149 1 180 2 288 1 130 1 
240 1 341 1 344 1 309 1 180 1 22 1 71 1 207 1 49 1 327 1 
344 2 309 2 332 1 22 2 347 1 71 1 316 1 15 1 4 1 180 1 288 1 
306 1 344 5 309 4 22 5 332 1 347 1 71 2 49 1 158 1 316 2 149 1 180 2 194 1 288 3 208 1 42 1 
344 5 309 4 22 5 332 1 347 1 71 2 49 1 158 1 316 2 371 1 149 1 180 2 194 1 288 3 208 1 42 1 
239 1 253 1 344 1 309 1 175 1 22 1 35 2 71 1 49 1 36 1 316 1 61 1 162 1 180 1 193 1 288 1 7 1 85 2 
31 1 344 1 309 1 216 1 22 1 124 1 71 1 316 1 61 1 149 1 180 2 288 1 19 1 
291 1 182 1 215 1 319 1 7 1 
197 1 109 1 328 2 291 2 0 1 182 2 323 1 215 1 333 1 257 1 286 1 298 1 62 1 258 1 319 2 151 1 17 2 7 1 63 1 
270 1 291 1 38 1 182 1 215 1 193 1 338 1 35 1 85 1 
286 1 323 1 215 1 
374 1 210 1 33 1 177 1 
374 1 33 1 229 1 177 1 252 1 125 1 8 1 
73 1 102 1 8 1 
374 1 212 2 214 1 220 1 33 1 99 1 1 1 229 1 177 1 252 1 125 3 8 3 
374 1 51 1 169 1 33 1 229 1 177 1 252 1 125 2 8 2 
374 1 1 1 46 1 229 1 252 1 304 1 125 1 107 1 8 1 
374 1 1 1 229 1 177 1 252 1 125 1 8 1 
33 1 1 1 229 1 177 2 252 1 125 1 8 1 
374 1 168 1 1 1 229 2 177 1 284 1 125 2 300 1 252 2 8 2 
374 2 110 1 169 2 33 1 154 1 1 1 229 1 177 1 125 3 252 1 289 1 107 1 8 3 
341 1 1 1 229 1 206 1 252 1 304 1 125 1 13 1 327 1 8 1 
374 2 169 2 33 1 171 1 154 1 1 1 229 2 177 1 125 4 51 1 252 2 107 1 8 4 
374 1 33 1 1 1 229 1 177 1 252 1 125 1 8 1 
374 3 212 1 214 1 169 2 279 1 33 2 154 1 229 1 177 2 125 4 220 1 252 1 107 1 8 4 
374 1 169 1 33 1 1 1 229 1 177 1 125 2 90 1 252 1 305 1 8 2 238 1 
374 1 212 2 214 2 33 1 1 1 229 1 177 1 125 3 359 1 220 1 252 1 8 3 
374 2 361 2 272 1 267 1 
1 1 229 1 252 1 125 1 218 1 8 1 
374 1 169 1 33 1 1 1 229 1 177 1 252 1 289 1 125 2 8 2 
311 1 
374 1 33 1 1 1 229 1 177 1 252 1 125 1 8 1 
374 1 212 1 169 1 33 1 1 1 229 1 177 1 252 1 289 1 125 3 8 3 
374 1 279 1 154 1 107 1 
374 1 177 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 148 55 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
336 9 24 1 312 1 292 5 272 1 202 1 361 2 248 1 277 1 1 3 151 1 299 1 57 4 347 1 234 1 373 1 304 2 265 6 354 2 238 2 379 9 119 2 242 1 43 1 192 2 288 2 220 1 225 1 
336 9 24 1 312 1 292 5 272 1 202 1 361 2 248 1 277 1 1 3 151 1 299 1 57 4 347 1 234 1 373 1 304 2 265 6 238 2 354 2 379 9 119 2 242 1 43 1 192 2 288 2 220 1 225 1 
336 10 24 1 312 1 292 6 272 1 202 1 361 2 248 1 277 1 1 4 151 1 299 1 57 5 347 1 234 1 373 1 304 2 265 7 238 2 354 2 379 10 119 2 242 1 43 1 192 2 288 2 220 1 225 1 
336 7 312 1 292 4 272 1 202 1 361 2 248 1 277 1 1 2 151 1 299 1 57 3 347 1 234 1 373 1 304 2 265 4 238 2 354 1 379 7 119 2 242 1 43 1 192 2 288 2 220 1 225 1 
336 4 24 1 234 1 292 3 361 1 304 1 277 1 1 1 265 3 238 1 354 2 379 4 119 1 151 1 43 1 192 1 299 1 57 2 
336 2 292 1 234 1 272 1 104 1 304 1 361 1 238 1 379 2 119 1 151 1 109 1 288 1 299 1 370 1 225 1 
336 3 312 1 234 1 292 2 304 2 1 1 265 1 238 2 379 3 151 1 288 1 299 1 57 1 
336 9 312 1 24 1 292 5 361 1 277 1 1 3 151 1 299 1 57 4 260 1 112 1 234 1 304 2 265 7 238 2 354 2 379 9 119 1 242 1 43 1 192 1 288 1 220 1 
336 9 312 1 24 1 292 5 361 1 277 1 1 3 151 1 299 1 57 4 260 1 112 1 234 1 304 2 265 7 238 2 354 2 379 9 119 1 242 1 43 1 192 1 288 1 220 1 
306 1 307 1 230 1 
311 2 306 1 268 1 
12 2 365 1 137 2 293 2 219 2 222 2 362 2 71 1 
337 2 226 1 293 2 69 1 28 1 70 1 167 2 203 1 149 1 362 2 71 1 150 1 3 2 172 1 365 1 253 1 345 2 254 1 176 1 208 1 180 1 12 3 137 2 79 1 350 1 326 1 281 1 353 1 87 1 377 2 42 1 44 1 92 1 329 1 219 3 222 2 196 1 
12 1 365 1 343 1 137 1 293 1 219 1 222 1 362 1 266 1 77 1 
12 1 211 1 105 1 340 1 362 1 158 1 306 1 307 1 74 1 343 1 219 1 56 1 368 1 35 1 
12 1 137 1 293 1 340 2 362 1 158 1 306 1 307 1 74 1 343 1 219 1 56 1 222 1 368 1 35 2 
2 1 38 1 340 1 35 1 168 1 
2 1 306 1 307 1 122 1 340 2 35 2 168 1 239 1 
340 1 35 1 168 1 
12 1 137 1 293 1 340 1 362 1 266 1 356 1 2 1 365 1 343 1 219 1 222 1 35 1 77 1 
306 1 
2 1 306 1 307 1 340 2 35 2 168 1 322 1 239 1 
114 1 340 5 166 1 84 1 275 1 185 1 214 2 168 2 239 1 2 2 173 1 306 1 357 1 307 1 366 1 291 1 35 5 48 2 178 2 
230 1 71 1 
12 2 137 1 293 1 351 1 362 2 71 2 219 2 222 1 177 1 
331 1 83 1 147 1 
337 1 180 1 226 1 12 1 79 1 28 1 70 1 281 1 71 1 377 1 295 1 172 1 92 1 345 1 219 1 176 1 
267 1 12 3 137 3 293 3 219 3 222 1 362 3 71 1 
12 1 343 1 137 1 293 1 219 1 362 1 266 1 
12 1 343 1 137 1 293 1 219 1 222 1 351 1 177 1 362 1 
337 1 226 1 293 3 28 1 70 1 167 2 340 1 149 1 362 3 71 1 229 1 3 1 172 1 365 1 74 1 343 1 253 1 345 1 56 1 254 1 368 1 176 1 177 1 35 1 208 1 180 1 12 4 79 1 301 1 137 3 350 1 281 1 353 1 87 1 157 1 158 1 377 1 267 1 42 1 44 1 92 1 219 4 222 2 196 1 
267 1 12 2 137 1 293 1 206 1 219 2 105 1 362 2 71 1 
12 3 137 3 293 3 340 1 157 1 362 3 158 1 229 1 267 2 306 1 343 1 74 1 219 3 56 1 222 1 368 1 177 1 35 1 179 1 
12 2 137 2 293 2 147 1 362 2 267 1 219 2 331 1 222 1 177 1 
337 1 180 1 226 1 12 1 79 1 28 1 70 1 281 1 71 1 377 1 172 1 92 1 345 1 219 1 176 1 
337 1 180 1 25 1 226 1 12 1 70 1 63 1 281 1 71 1 377 1 172 1 92 1 345 1 219 1 176 1 
126 1 26 1 101 1 165 1 167 2 147 2 149 2 72 1 3 4 342 1 254 1 231 1 350 1 83 2 326 2 85 1 353 1 143 1 215 1 189 1 42 1 44 1 331 2 196 1 
12 1 343 1 74 1 137 1 293 1 219 1 224 1 362 1 
180 1 337 1 226 1 12 2 79 1 137 1 293 1 28 1 70 1 147 1 281 1 157 1 362 1 377 1 172 1 267 1 92 1 345 1 219 2 176 1 
12 5 137 4 293 4 338 1 105 1 146 1 362 5 157 1 71 1 267 2 206 1 219 5 222 1 177 1 
12 2 343 1 137 2 293 2 219 2 224 1 362 2 266 1 
191 1 140 1 
191 1 140 1 
255 1 280 1 
255 1 280 1 
255 1 280 1 
296 1 191 1 140 1 
296 1 191 1 140 1 
330 1 191 1 140 1 
191 2 255 1 280 1 236 1 140 2 259 1 
296 1 191 1 140 1 
191 1 140 1 294 1 
191 1 140 1 294 1 
191 1 140 1 294 1 
11 1 78 2 15 1 263 2 274 1 340 2 237 2 140 2 118 2 306 1 287 1 191 2 279 3 367 2 246 1 35 2 259 1 124 1 98 1 
293 2 340 1 362 2 71 1 133 1 279 1 367 1 369 1 35 1 78 1 12 2 137 2 263 1 140 1 237 1 187 1 89 1 90 1 191 1 330 1 219 2 359 1 193 1 98 1 
119 1 192 1 361 1 
119 1 109 1 361 1 
119 3 109 1 192 2 153 1 372 1 142 1 
119 2 360 1 109 1 192 1 153 1 372 1 
119 2 109 1 192 1 153 1 372 2 
311 3 126 1 340 5 204 1 168 1 205 2 2 4 173 2 75 1 231 1 76 1 35 5 178 1 348 1 185 3 285 2 214 1 143 1 239 1 215 1 90 1 160 2 306 2 307 1 359 1 245 1 358 1 95 1 291 1 193 1 48 1 268 1 
311 9 126 3 270 1 166 1 340 9 204 3 168 6 2 7 173 6 297 1 231 3 76 1 207 1 35 9 178 2 348 2 113 1 38 5 156 5 62 1 185 8 305 1 285 6 214 2 143 3 239 1 215 3 90 4 160 6 306 5 307 1 358 2 291 1 48 2 268 3 
126 1 311 4 340 3 166 1 204 1 205 1 2 2 173 2 75 1 231 1 35 3 178 1 348 1 185 3 214 1 285 2 143 1 90 1 215 1 160 2 306 3 307 1 245 1 358 1 48 1 268 2 
311 7 126 2 340 4 166 1 204 2 205 2 2 3 173 4 297 1 75 1 231 2 35 4 178 1 348 1 113 1 185 5 305 1 285 4 214 1 143 2 90 2 215 2 160 4 306 4 307 1 245 1 358 1 48 1 268 3 
51 1 230 1 281 1 
223 1 281 1 
197 1 
226 1 281 1 
226 1 92 1 51 2 281 3 333 1 284 1 
226 1 92 1 281 1 
209 1 281 1 
126 1 181 1 101 2 314 1 200 1 326 4 106 1 149 3 65 1 3 7 342 3 344 1 93 1 231 1 8 2 34 1 195 1 
126 1 181 1 101 2 314 1 200 1 326 4 106 1 149 3 65 1 3 7 342 3 344 1 93 1 231 1 8 2 34 1 195 1 
126 1 181 1 101 2 314 1 200 1 326 4 106 1 149 3 249 1 65 1 3 7 342 3 344 1 93 1 231 1 8 2 34 1 195 1 
126 4 101 5 314 2 200 1 167 2 106 1 149 15 204 3 0 1 3 31 342 10 344 2 254 1 231 4 33 1 8 3 34 5 136 1 261 3 300 4 181 1 326 16 353 1 264 1 65 2 143 3 215 3 42 1 44 1 93 1 218 1 96 1 332 1 195 2 
126 1 145 1 181 1 101 3 314 1 326 5 167 4 106 1 353 2 0 1 149 4 65 1 3 9 342 4 42 2 344 1 44 2 93 1 254 2 231 1 8 2 34 1 309 1 195 1 
337 1 336 2 292 1 313 1 361 1 70 1 107 1 319 1 108 1 31 1 151 1 172 1 109 1 345 1 299 1 152 1 298 1 111 1 234 1 304 1 265 1 375 1 238 1 377 1 379 2 142 1 119 2 192 1 288 1 46 1 
337 1 336 3 68 1 292 1 361 1 70 1 107 1 319 1 108 1 172 1 109 1 345 1 299 1 152 1 298 1 111 1 234 1 13 1 304 1 235 1 265 2 375 1 238 1 142 1 377 1 379 3 119 2 192 1 288 1 46 1 
337 1 336 2 68 1 292 1 70 1 361 1 108 1 172 1 109 1 345 1 299 1 152 1 298 1 111 1 234 1 13 1 265 2 375 1 377 1 379 2 142 1 119 2 192 1 288 1 46 1 
336 1 337 1 226 1 50 1 102 1 70 1 304 1 281 1 282 1 235 1 29 1 278 1 238 1 379 1 377 1 172 1 217 1 345 1 288 2 152 2 111 2 176 1 46 2 
337 1 336 1 68 1 361 1 70 1 107 1 319 1 108 1 31 1 151 1 172 1 109 1 345 1 152 1 298 1 111 1 304 1 375 1 238 1 377 1 379 1 142 1 119 2 192 1 288 1 46 1 
16 1 
337 2 49 1 199 2 102 1 105 1 53 1 340 5 251 1 341 1 343 1 345 2 56 1 10 1 155 1 12 1 211 1 17 2 60 4 213 2 214 1 158 1 306 2 307 1 219 1 358 1 22 1 268 2 23 2 310 1 311 2 226 1 70 1 129 1 130 1 362 1 228 1 168 6 278 1 173 2 172 1 174 2 74 1 368 1 176 2 35 5 178 1 80 2 82 2 281 1 185 2 239 3 377 2 144 1 291 1 48 1 
105 1 340 3 362 1 228 1 168 2 251 1 174 1 74 1 343 1 56 1 368 1 35 3 10 1 322 1 155 1 12 1 211 1 60 2 158 1 239 1 219 1 144 1 
199 1 105 1 340 3 362 1 228 1 168 1 251 1 74 1 343 1 56 1 368 1 35 3 10 1 322 1 155 1 12 1 211 1 60 3 158 1 239 1 306 1 307 1 219 1 144 1 
199 1 105 1 340 3 362 1 228 1 168 2 251 1 174 1 74 1 343 1 56 1 368 1 35 3 322 1 10 1 155 1 12 1 211 1 80 1 60 3 158 1 239 1 306 1 307 1 219 1 144 1 
49 1 199 4 105 1 340 5 251 1 341 1 343 1 56 1 10 1 155 1 12 1 302 1 211 1 303 1 60 6 17 2 213 2 158 1 214 1 306 5 307 5 219 1 21 1 23 2 268 2 228 1 362 1 168 7 173 1 174 4 74 1 368 1 35 5 178 1 322 1 80 4 82 2 185 1 141 1 239 3 91 1 144 1 291 1 48 1 
49 1 199 2 105 1 340 4 251 1 341 1 343 1 56 1 10 1 155 1 12 1 211 1 60 4 17 2 213 2 158 1 214 1 306 2 307 1 219 1 23 2 268 2 311 2 130 1 228 1 362 1 168 4 173 1 174 2 74 1 368 1 35 4 178 1 80 2 82 2 185 1 239 2 144 1 291 1 48 1 
49 1 199 2 105 1 340 4 362 1 228 1 168 4 251 1 341 1 173 1 174 2 74 1 343 1 56 1 368 1 35 4 178 1 10 1 155 1 12 1 302 1 80 2 303 1 211 1 82 2 17 2 60 4 213 2 185 1 214 1 158 1 141 1 239 2 306 1 307 1 219 1 144 1 291 1 48 1 268 2 23 2 
49 1 199 2 105 1 340 4 362 1 228 1 168 4 251 1 341 1 173 1 174 2 74 1 343 1 56 1 368 1 35 4 178 1 10 1 155 1 12 1 302 1 80 2 303 1 211 1 82 2 17 2 60 4 213 2 185 1 214 1 158 1 141 1 239 2 306 1 307 1 219 1 144 1 291 1 48 1 268 2 23 2 
311 2 198 1 199 2 105 1 340 4 362 1 228 1 168 4 251 1 341 1 173 1 174 2 74 1 343 1 134 1 56 1 368 1 321 2 35 4 178 1 10 1 155 1 58 1 12 1 80 2 303 1 211 1 17 2 60 4 39 2 185 1 214 1 158 1 239 2 306 1 307 1 219 1 144 1 291 1 48 1 23 2 
49 1 199 3 105 1 340 4 362 1 228 1 168 5 251 1 341 1 173 1 174 3 74 1 343 1 56 1 368 1 35 4 178 1 10 1 155 1 12 1 302 1 303 1 211 1 80 3 82 2 17 2 60 5 213 2 185 1 214 1 158 1 141 1 239 2 91 1 306 1 307 1 219 1 144 1 291 1 48 1 268 2 23 2 
49 1 199 3 105 1 340 4 362 1 228 1 168 5 251 1 341 1 173 1 174 3 74 1 343 1 56 1 368 1 35 4 178 1 10 1 155 1 12 1 302 1 303 1 211 1 80 3 82 2 17 2 60 5 213 2 185 1 214 1 158 1 141 1 239 2 91 1 306 1 307 1 219 1 144 1 291 1 48 1 268 2 23 2 
199 2 105 1 340 4 251 1 341 1 343 1 56 1 10 1 155 1 12 1 211 1 60 4 17 2 158 1 214 1 306 1 307 1 219 1 23 2 311 2 130 1 228 1 362 1 168 4 173 1 174 2 74 1 134 1 368 1 35 4 321 2 178 1 80 2 39 2 185 1 239 2 144 1 291 1 48 1 
126 1 101 2 314 1 147 1 167 2 106 1 149 3 71 2 72 1 3 6 342 2 344 1 254 1 230 1 231 1 8 1 181 1 350 1 83 1 326 3 353 1 42 1 44 1 93 1 331 1 196 1 
126 2 101 1 167 4 147 11 203 1 149 6 204 2 71 1 3 14 342 2 254 2 231 1 34 1 232 1 136 1 261 3 208 1 300 3 36 1 324 1 350 1 83 11 326 8 353 2 143 1 215 2 42 2 44 2 121 1 331 4 96 1 335 1 196 2 
337 1 226 1 293 1 28 1 70 1 167 2 203 1 149 1 362 1 71 1 295 1 3 2 172 1 345 1 254 1 176 1 208 1 180 1 12 2 79 1 137 1 350 1 281 1 326 1 353 1 157 1 377 1 267 1 42 1 92 1 121 1 44 1 221 1 219 2 331 1 94 1 97 1 196 1 
337 3 101 4 293 1 147 7 106 1 203 1 149 10 204 2 3 20 342 8 344 1 5 1 345 3 254 3 8 1 9 2 208 1 12 3 115 1 350 3 353 3 352 2 157 1 159 2 215 2 267 1 121 1 66 2 219 3 68 1 226 2 126 3 314 1 317 1 28 2 70 2 167 6 362 1 71 2 172 2 231 3 176 1 34 4 180 2 181 1 137 1 79 2 83 7 281 2 326 10 87 2 377 3 143 2 42 3 44 3 92 2 93 1 331 7 196 3 
337 8 68 1 226 2 313 1 293 1 27 1 69 2 102 1 70 2 167 4 203 1 149 1 362 1 132 1 169 1 72 1 278 1 3 2 172 2 73 1 345 8 254 2 176 2 154 1 320 1 208 1 12 1 137 1 350 2 281 3 326 1 353 2 377 7 267 1 120 1 42 2 44 2 219 1 196 2 
227 1 126 1 101 1 293 1 147 1 167 2 204 1 149 2 362 1 3 3 342 1 254 1 231 1 177 1 12 1 137 1 83 1 350 1 326 1 353 1 143 1 215 1 42 1 44 1 121 1 219 1 331 1 222 1 196 1 
126 1 165 1 83 1 350 1 147 1 167 2 326 2 353 1 72 1 3 2 215 1 342 1 42 1 44 1 331 1 254 1 34 1 196 1 
101 1 83 1 350 1 147 1 167 2 353 1 149 2 72 1 143 1 3 2 189 1 342 1 42 1 44 1 331 1 254 1 231 1 196 1 
126 1 101 1 167 2 147 2 204 1 149 2 72 1 3 4 342 2 254 1 231 1 34 1 350 1 83 2 326 2 353 1 143 1 215 1 42 1 44 1 331 2 196 1 
126 1 165 1 83 1 350 1 147 1 167 2 326 2 353 1 3 2 215 1 120 1 342 1 42 1 44 1 331 1 254 1 34 1 196 1 
101 1 83 1 350 1 147 1 167 2 353 1 149 2 143 1 3 2 120 1 189 1 342 1 42 1 44 1 331 1 254 1 231 1 196 1 
126 1 101 1 167 2 147 2 204 1 149 2 3 4 342 2 254 1 231 1 34 1 350 1 83 2 326 2 353 1 143 1 215 1 120 1 42 1 44 1 331 2 196 1 
126 1 101 1 167 2 147 2 204 1 149 2 3 4 342 2 254 1 231 1 34 1 350 1 83 2 326 2 353 1 143 1 215 1 42 1 44 1 331 2 196 1 
337 1 226 1 28 1 70 1 167 2 203 1 149 1 71 1 3 2 172 1 345 1 254 1 176 1 208 1 180 1 12 1 79 1 350 1 326 1 281 1 87 1 353 1 377 1 42 1 92 1 44 1 219 1 196 1 
337 1 226 1 25 1 70 1 167 2 203 1 149 1 71 1 3 2 172 1 345 1 254 1 176 1 208 1 180 1 12 1 350 1 326 1 63 1 281 1 353 1 377 1 42 1 92 1 44 1 244 1 219 1 196 1 
126 1 101 1 167 2 147 2 204 1 149 2 3 4 342 2 254 1 231 1 34 1 350 1 83 2 326 2 353 1 143 1 215 1 42 1 44 1 121 1 331 2 196 1 
337 1 126 1 226 1 313 1 101 1 28 1 70 1 147 2 167 2 149 2 204 1 3 4 172 1 342 2 345 1 254 1 231 1 34 1 9 1 180 1 12 1 79 1 83 2 350 1 326 2 281 1 87 1 353 1 143 1 377 1 215 1 42 1 92 1 44 1 219 1 331 2 196 1 
126 1 293 1 167 2 147 1 149 1 204 1 362 1 3 3 342 1 252 1 254 1 231 1 34 1 177 1 12 1 137 1 350 1 83 1 326 2 353 1 143 1 215 1 42 1 44 1 121 1 219 1 222 1 331 1 196 1 
126 3 145 1 101 3 148 2 167 4 149 10 204 3 55 1 3 19 342 6 6 1 254 2 175 1 231 3 34 3 136 1 261 1 300 2 233 1 262 1 139 1 326 9 353 2 143 3 215 3 328 1 42 2 44 2 162 2 96 1 
126 3 145 1 101 1 148 1 167 6 276 1 0 2 149 11 204 3 131 1 55 1 3 24 342 2 254 3 231 2 110 1 34 1 136 2 261 2 233 1 300 2 262 1 59 1 139 2 326 13 353 3 143 2 216 1 215 3 328 2 42 3 44 3 162 3 334 1 
126 4 145 1 101 2 148 1 167 6 276 1 0 1 149 17 204 4 131 1 55 1 3 32 342 5 254 3 175 1 231 4 110 1 34 3 136 3 261 3 300 4 233 1 262 1 59 1 139 2 326 15 353 3 143 4 216 1 215 4 380 1 328 1 42 3 44 3 162 3 96 1 334 1 
126 4 145 1 101 3 148 1 167 8 276 1 0 2 149 16 204 4 131 1 55 1 3 33 342 6 254 4 175 1 231 3 110 1 34 3 136 3 261 3 300 4 233 1 262 1 59 1 139 2 326 17 353 4 143 3 216 1 215 4 380 1 328 1 42 4 44 4 162 4 96 1 334 1 
126 7 145 1 101 6 314 1 148 1 167 4 106 1 276 1 0 1 149 22 204 6 131 1 55 1 3 46 342 12 344 1 254 2 231 7 110 1 8 1 34 6 232 2 136 2 261 4 300 4 233 1 181 1 262 1 59 1 139 1 326 24 353 2 143 6 216 1 215 6 328 1 42 2 44 2 93 1 162 3 96 2 334 1 
78 1 15 1 191 1 263 1 346 1 367 1 274 1 140 1 237 1 259 1 
133 1 330 1 
78 1 191 1 263 1 117 1 367 1 140 1 237 1 88 1 355 1 
78 1 15 1 263 1 274 1 340 1 237 1 140 1 118 1 306 1 287 1 191 1 279 2 367 1 246 1 35 1 259 1 124 1 98 1 
78 1 15 1 263 1 274 1 340 1 237 1 140 1 118 1 306 1 287 1 191 1 279 2 367 1 246 1 35 1 259 1 124 1 98 1 
78 1 15 1 263 1 274 1 340 1 237 1 140 1 118 1 306 1 287 1 191 1 279 2 367 1 246 1 35 1 259 1 124 1 98 1 
296 1 271 1 236 1 
296 1 271 1 236 1 
81 1 294 1 
81 1 236 1 294 1 
187 1 89 1 
293 2 340 1 362 2 71 1 2 1 133 1 279 1 367 1 369 1 35 1 78 1 12 2 137 2 263 1 140 1 237 1 187 1 118 1 89 1 90 1 191 1 330 1 219 2 359 1 246 1 290 1 193 1 
296 1 271 1 
81 1 236 1 294 1 
337 2 226 1 69 2 70 1 167 2 203 1 149 1 362 2 363 1 3 2 172 1 73 1 345 2 254 1 154 1 258 1 208 1 12 2 182 1 61 1 350 1 281 1 326 1 353 1 377 2 42 1 121 1 44 1 161 1 219 2 196 1 
337 2 68 1 313 1 361 1 70 1 339 1 107 1 41 1 375 1 108 1 142 1 377 2 119 2 171 1 172 1 109 1 192 1 345 2 111 1 
337 1 68 1 361 1 70 1 107 1 20 1 375 1 108 1 142 1 377 1 119 2 171 1 172 1 109 1 192 1 345 1 111 1 
337 1 226 1 210 1 50 1 102 1 70 1 281 1 41 1 278 1 377 1 172 1 345 1 111 1 176 1 
337 1 68 1 361 1 70 1 339 1 107 1 41 1 375 1 108 1 142 1 377 1 119 2 171 1 172 1 109 1 192 1 345 1 111 1 
316 1 
173 1 306 1 357 1 307 1 366 1 230 1 185 1 
311 1 49 1 340 1 168 1 173 1 35 1 178 1 82 1 185 1 213 1 214 1 239 1 306 2 307 1 291 1 48 1 268 1 
337 3 51 2 340 5 204 2 4 2 345 3 256 2 14 2 209 2 212 1 19 1 214 4 215 2 160 6 357 1 306 8 307 2 66 2 223 3 358 2 268 6 310 1 226 3 311 12 126 2 313 1 164 2 128 2 70 3 168 5 30 2 172 4 173 8 366 1 368 2 231 2 176 1 35 5 178 4 374 1 184 1 281 10 185 9 188 2 286 1 285 6 377 3 239 3 143 2 92 3 47 2 291 4 333 1 48 4 
311 6 126 2 340 1 276 1 204 2 168 1 131 1 173 4 231 2 110 1 35 1 178 2 136 1 261 1 300 1 59 1 185 7 188 1 285 5 214 2 239 1 143 2 215 2 160 5 306 4 307 1 163 1 291 2 48 2 334 1 268 3 
126 2 293 1 314 1 273 1 340 1 362 1 30 1 173 2 365 1 343 1 344 1 231 1 35 1 178 1 77 1 12 1 181 1 137 1 185 2 188 2 214 1 266 1 141 1 356 1 219 1 222 1 291 1 48 1 
185 1 214 1 173 1 357 1 306 1 307 1 366 1 291 1 48 1 178 1 
126 2 311 10 204 2 185 5 188 2 285 5 30 1 143 2 215 2 173 5 160 5 306 5 66 1 231 2 268 5 
306 1 307 1 340 1 35 1 168 1 239 1 
337 4 310 2 226 1 102 1 70 1 53 1 166 1 340 3 54 1 168 4 278 1 172 1 173 2 345 4 176 2 35 3 178 2 184 2 281 1 212 1 185 2 214 2 378 1 377 4 239 2 358 2 291 1 22 1 48 2 
337 1 226 1 293 2 28 1 70 1 167 2 149 1 362 2 71 1 3 1 172 1 365 1 253 1 345 1 254 1 176 1 208 1 180 1 12 3 137 2 79 1 350 1 281 1 87 1 353 1 377 1 42 1 44 1 92 1 219 3 222 2 196 1 
310 1 311 4 185 1 285 2 214 1 160 2 173 2 306 4 307 2 358 1 8 1 291 1 48 1 178 1 268 2 
78 1 100 1 263 1 
78 1 100 1 263 1 
67 1 78 1 263 1 274 1 187 1 
78 1 100 1 263 1 
78 1 364 1 263 1 
78 1 364 1 263 1 
78 1 364 1 263 1 
78 1 263 1 
191 1 140 1 
126 1 181 1 101 2 314 1 326 4 167 4 353 2 106 1 149 4 0 1 3 8 342 3 42 2 44 2 344 1 93 1 254 2 231 1 8 1 34 1 
126 1 181 1 101 2 314 1 326 3 106 1 149 3 3 6 342 2 344 1 93 1 230 1 231 1 8 1 
126 1 101 1 167 2 326 2 353 1 149 2 204 1 143 1 240 1 215 1 3 4 342 2 42 1 44 1 254 1 231 1 34 1 
126 1 101 1 326 3 149 4 204 1 143 1 3 7 215 1 342 2 231 1 96 1 34 1 136 1 261 1 300 2 
126 3 101 5 314 2 52 1 167 4 106 1 204 2 149 12 0 2 3 23 342 9 344 2 254 2 231 3 8 1 34 4 232 1 261 2 300 2 36 1 181 1 326 11 353 2 143 2 215 2 42 2 44 2 93 1 96 1 
3 1 149 1 300 1 
3 1 326 1 261 1 
126 1 101 2 167 2 326 3 353 1 149 3 204 1 143 1 240 1 3 6 215 1 42 1 342 3 44 1 66 1 254 1 231 1 34 1 
126 2 145 1 101 1 167 2 276 1 149 6 204 2 131 1 3 12 342 2 254 1 231 2 110 1 34 1 136 1 261 1 300 1 59 1 326 6 353 1 143 2 215 2 42 1 44 1 334 1 
126 1 181 1 101 1 314 1 326 3 149 3 3 6 342 2 344 1 231 1 34 1 
101 1 314 1 52 1 326 1 167 2 353 1 106 1 149 2 0 1 3 3 342 2 42 1 344 1 44 1 93 1 254 1 34 1 
126 2 145 1 181 1 101 3 314 2 273 1 167 2 326 5 353 1 149 5 3 10 42 1 342 5 44 1 344 2 254 1 231 2 34 2 
126 1 145 1 167 2 326 2 353 1 215 1 3 2 42 1 342 1 44 1 254 1 34 1 
126 1 145 1 101 1 167 2 326 2 353 1 149 2 204 1 143 1 215 1 3 4 342 2 42 1 44 1 254 1 231 1 34 1 
145 1 101 1 314 1 52 1 167 6 326 1 353 3 0 1 149 2 3 3 42 3 342 2 44 3 344 1 254 3 175 1 34 1 
126 5 145 1 101 7 314 3 52 1 167 10 106 1 0 2 149 18 204 3 3 34 342 12 344 3 254 5 175 1 231 5 8 1 33 1 34 5 136 1 261 3 300 4 181 2 326 16 353 5 264 1 143 3 240 1 215 3 42 5 44 5 93 1 218 1 96 1 
126 1 145 1 181 1 101 2 314 1 326 4 167 2 106 1 353 1 149 4 3 8 342 2 42 1 344 1 44 1 93 1 254 1 231 1 110 1 8 1 136 1 261 1 300 1 
126 2 145 1 101 2 314 1 167 4 106 1 149 5 204 1 3 11 342 3 344 1 254 2 231 1 110 1 8 1 34 1 136 1 261 1 300 2 181 1 326 6 353 2 240 1 215 1 42 2 44 2 93 1 96 1 
126 2 145 1 101 1 167 6 276 1 149 7 204 2 0 1 131 1 3 13 342 2 254 3 231 2 110 1 34 1 136 1 261 1 300 1 59 1 326 6 353 3 143 2 240 1 215 2 42 3 44 3 334 1 
126 2 145 1 101 1 167 6 276 1 0 1 149 4 204 2 131 1 3 11 342 2 254 3 231 1 110 1 34 1 136 1 261 1 300 1 59 1 326 7 353 3 143 1 240 1 215 2 42 3 44 3 334 1 
126 1 145 1 181 1 101 2 314 1 326 4 167 2 106 1 353 1 149 4 3 8 342 2 42 1 344 1 44 1 93 1 254 1 231 1 110 1 8 1 136 1 261 1 300 1 
126 2 145 1 101 1 167 2 276 1 149 6 204 2 131 1 3 12 342 2 254 1 231 2 110 1 34 1 136 1 261 1 300 1 59 1 326 6 353 1 143 2 215 2 42 1 44 1 334 1 
126 2 145 1 101 1 167 8 276 1 149 5 204 2 0 2 131 1 3 12 342 2 254 4 231 1 110 1 34 1 136 1 261 1 300 1 59 1 326 7 353 4 143 1 240 1 215 2 42 4 44 4 334 1 
126 2 145 1 101 2 167 8 276 1 149 5 204 2 0 2 131 1 3 12 342 4 254 4 175 1 231 1 110 1 34 2 136 1 261 1 300 1 59 1 326 7 353 4 143 1 215 2 42 4 44 4 334 1 
126 1 181 1 101 3 314 3 326 3 106 1 149 4 3 7 342 6 344 3 93 2 231 1 34 3 
126 2 145 1 101 1 167 8 276 1 149 5 204 2 0 2 131 1 3 12 342 2 254 4 175 1 231 1 110 1 34 1 136 1 261 1 300 1 59 1 326 7 353 4 143 1 215 2 42 4 44 4 334 1 
12 1 219 1 206 1 183 1 105 1 362 1 71 1 
99 1 12 1 315 1 138 1 183 1 116 1 105 1 362 1 71 1 376 1 206 1 219 1 
337 1 172 1 226 1 345 1 102 1 230 1 70 1 281 1 176 1 278 1 377 1 
180 1 337 1 226 1 12 2 137 1 79 1 293 1 70 1 281 1 362 1 71 1 377 1 172 1 267 1 92 1 345 1 219 2 176 1 
180 1 337 1 226 2 12 2 164 1 137 1 79 1 293 2 209 1 70 1 281 3 184 1 362 2 71 1 377 1 172 1 267 1 343 1 74 1 92 2 345 1 56 1 219 2 
337 2 226 2 164 1 293 2 70 1 362 2 71 1 172 1 74 1 343 1 345 2 56 1 180 1 37 1 12 2 137 1 209 1 63 1 184 1 281 3 377 2 267 1 92 2 219 2 
337 3 226 1 37 1 164 1 349 1 209 1 51 1 70 1 340 2 184 1 281 4 283 1 168 1 377 3 172 1 306 1 307 1 92 1 345 3 368 1 223 1 176 1 35 2 
337 3 226 1 37 1 164 1 209 1 51 1 70 1 340 2 184 1 281 4 168 1 377 3 172 1 306 1 307 1 92 1 345 3 368 1 223 1 256 1 176 1 35 2 
337 1 172 1 345 1 27 1 70 1 377 1 
337 7 68 1 226 2 313 1 69 1 27 1 323 1 70 2 281 3 64 1 132 1 169 1 377 6 172 3 73 1 92 1 345 7 176 2 32 1 320 1 333 1 
337 1 126 1 226 1 313 1 101 2 293 1 314 1 28 1 70 1 147 1 167 4 106 1 149 3 362 1 71 2 3 6 172 1 342 2 344 1 345 1 254 2 231 1 8 1 9 1 180 1 12 2 181 1 137 1 79 1 61 1 83 1 350 2 326 3 281 1 353 2 87 1 159 1 377 1 267 1 42 2 92 1 121 1 44 2 93 1 219 2 331 1 196 2 
337 1 128 1 51 1 340 3 168 2 2 1 173 1 4 1 345 1 366 1 368 1 256 1 176 1 35 3 178 2 14 1 281 2 212 1 185 1 214 2 377 1 239 1 306 1 357 1 307 1 223 1 291 2 48 2 
337 2 226 1 313 1 27 1 51 1 70 1 281 2 286 1 377 2 172 2 92 1 345 2 333 1 
337 4 226 1 37 1 313 1 102 1 70 1 281 1 278 1 377 4 172 1 345 4 176 1 257 1 
337 2 226 1 115 1 323 1 70 1 184 1 281 1 64 1 377 2 172 2 92 1 345 2 123 1 371 1 
119 1 337 1 172 1 109 1 345 1 361 1 70 1 176 1 108 1 377 1 
337 2 68 1 226 1 313 1 70 1 281 1 377 2 172 1 73 1 345 2 258 1 
337 5 226 2 313 1 102 1 70 2 184 1 281 3 132 1 278 1 377 4 172 2 73 1 345 5 176 1 257 1 320 1 
337 5 226 2 313 1 102 1 70 2 184 1 281 3 318 1 132 1 278 1 377 4 172 2 73 1 345 5 176 1 257 1 
180 1 337 1 226 1 12 2 137 1 293 1 70 1 281 1 63 1 362 1 71 1 377 1 172 1 267 1 92 1 345 1 219 2 176 1 
337 1 226 1 323 1 70 1 184 1 281 1 64 1 377 1 172 2 92 1 345 1 32 1 333 1 
12 1 219 1 161 1 182 1 135 1 362 1 194 1 363 1 269 1 
243 1 135 1 170 1 
325 1 135 1 194 1 71 1 269 1 
325 2 340 2 71 1 158 1 327 1 229 1 170 1 2 1 306 1 243 1 307 1 343 1 74 1 56 1 368 1 135 1 35 2 194 2 269 2 
292 1 234 1 299 1 230 1 
336 1 292 1 234 1 299 1 304 1 238 1 379 1 
288 1 152 1 379 1 
336 3 292 1 234 1 103 1 304 1 186 1 238 1 379 3 151 1 299 1 45 1 225 2 
336 2 292 1 234 1 299 1 304 1 265 1 354 1 238 1 379 2 
119 1 336 1 151 1 292 1 43 1 192 1 57 1 361 1 304 1 238 1 379 1 
336 1 151 1 292 1 299 1 304 1 238 1 379 1 
336 1 151 1 234 1 299 2 304 1 238 1 379 1 
336 2 125 1 292 1 18 1 304 2 238 2 379 2 151 1 299 1 289 1 
336 3 234 1 292 2 304 1 265 2 1 1 238 1 379 3 151 1 242 1 220 1 299 1 57 1 
336 2 292 1 234 1 304 1 361 1 265 1 238 1 379 2 142 1 119 2 151 1 190 1 109 1 192 1 299 1 
336 4 24 1 234 1 292 2 304 2 265 2 1 1 238 2 354 1 379 4 151 1 299 1 57 1 
336 1 151 1 292 1 234 1 299 1 304 1 238 1 379 1 
336 4 234 2 292 3 103 1 304 1 186 1 250 1 265 2 1 1 238 1 379 4 299 2 57 1 225 1 
336 2 292 1 234 1 247 1 304 1 265 1 238 1 379 2 151 1 299 1 7 1 260 1 
336 3 292 1 234 1 103 2 304 1 186 1 238 1 379 3 151 1 308 1 299 1 225 2 
241 1 292 2 127 2 40 1 
336 1 151 1 201 1 304 1 238 1 379 1 
336 2 242 1 151 1 292 1 234 1 299 1 304 1 265 1 238 1 379 2 
86 1 
336 1 151 1 292 1 234 1 299 1 304 1 238 1 379 1 
336 3 242 1 151 1 292 1 234 1 299 1 304 1 265 1 225 1 238 1 379 3 
292 1 57 1 250 1 1 1 
292 1 299 1 

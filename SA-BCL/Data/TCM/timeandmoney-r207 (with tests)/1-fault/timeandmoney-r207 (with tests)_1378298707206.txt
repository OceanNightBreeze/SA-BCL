#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (126,137,202) (126,137,202) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 290 1 35 2 218 9 337 4 268 1 355 1 203 1 359 9 360 2 183 2 363 1 44 1 13 1 367 1 118 3 73 6 161 1 229 1 104 1 163 5 347 1 55 2 258 2 84 2 129 1 195 1 332 1 
0 2 290 1 35 2 218 9 337 4 268 1 355 1 203 1 359 9 360 2 183 2 363 1 44 1 13 1 367 1 118 3 73 6 161 1 229 1 104 1 163 5 347 1 55 2 258 2 84 2 129 1 195 1 332 1 
0 2 290 1 35 2 218 10 337 5 268 1 355 1 203 1 359 10 360 2 183 2 363 1 44 1 13 1 367 1 118 4 73 7 161 1 229 1 104 1 163 6 347 1 55 2 258 2 84 2 129 1 195 1 332 1 
0 2 290 1 35 1 218 7 337 3 268 1 355 1 203 1 359 7 360 2 183 2 363 1 13 1 367 1 118 2 73 4 161 1 229 1 104 1 163 4 347 1 55 2 258 2 84 2 129 1 195 1 332 1 
35 2 290 1 73 3 218 4 337 2 268 1 104 1 355 1 163 3 359 4 55 1 360 1 183 1 44 1 84 1 258 1 195 1 118 1 
0 1 90 1 218 2 268 1 104 1 163 1 179 1 359 2 213 1 360 1 183 1 13 1 258 1 84 1 195 1 367 1 
0 1 73 1 218 3 337 1 268 1 104 1 163 2 359 3 360 2 183 2 129 1 195 1 118 1 
0 1 290 1 35 2 198 1 73 7 218 9 337 4 229 1 268 1 104 1 355 1 163 5 55 1 359 9 360 2 183 2 300 1 44 1 84 1 258 1 129 1 195 1 332 1 118 3 
0 1 290 1 35 2 198 1 73 7 218 9 337 4 229 1 268 1 104 1 355 1 163 5 55 1 359 9 360 2 183 2 300 1 44 1 84 1 258 1 129 1 195 1 332 1 118 3 
107 1 327 1 93 1 
107 1 351 1 78 2 
193 2 70 1 281 1 168 2 40 2 132 2 177 2 112 2 
175 2 130 2 91 1 40 3 221 1 132 2 310 1 177 3 112 2 63 1 295 1 297 1 318 1 298 1 154 1 12 1 278 1 70 1 49 1 120 1 281 1 159 1 102 1 251 1 211 1 232 2 193 2 77 1 54 1 30 1 168 2 259 1 194 1 381 2 330 1 196 1 106 2 
193 1 70 1 168 1 40 1 68 1 307 1 132 1 177 1 112 1 47 1 
107 1 369 1 18 1 72 1 40 1 93 1 177 1 356 1 256 1 168 1 148 1 68 1 205 1 136 1 
107 1 369 1 72 1 40 1 132 1 93 1 177 1 112 1 193 1 356 1 256 1 168 1 148 2 68 1 205 2 
324 1 246 1 80 1 148 1 205 1 
107 1 152 1 324 1 80 1 148 2 380 1 205 2 93 1 
324 1 148 1 205 1 
70 1 40 1 307 1 132 1 177 1 112 1 193 1 80 1 317 1 168 1 148 1 68 1 205 1 47 1 
107 1 
107 1 152 1 324 1 80 1 362 1 148 2 205 2 93 1 
107 1 119 1 36 2 324 2 50 1 176 1 93 1 358 1 152 1 308 1 80 2 165 1 379 1 148 5 205 5 274 2 15 2 236 1 89 1 
327 1 281 1 
158 1 265 1 281 2 40 2 132 1 177 2 112 1 193 1 168 2 
208 1 187 1 160 1 
175 1 120 1 281 1 110 1 91 1 40 1 211 1 177 1 295 1 54 1 77 1 259 1 194 1 381 1 330 1 106 1 
175 1 120 1 160 1 91 1 40 2 188 1 132 1 211 1 177 2 112 1 295 1 77 1 54 1 168 1 194 1 259 1 149 1 381 1 330 1 106 1 
158 1 18 1 281 1 40 5 188 2 132 4 177 5 112 4 124 1 193 1 81 1 168 5 169 1 149 1 
247 1 168 2 40 2 68 1 307 1 132 2 177 2 112 2 
193 1 281 1 168 3 40 3 188 1 132 3 177 3 112 3 
168 1 40 1 68 1 307 1 132 1 177 1 112 1 
193 1 158 1 265 1 168 1 40 1 68 1 132 1 177 1 112 1 
175 1 130 2 91 1 40 4 221 1 132 3 310 1 177 4 63 1 112 3 295 1 356 1 297 1 316 1 298 1 12 1 68 1 205 1 278 1 185 1 70 1 369 1 158 1 72 1 120 1 281 1 159 1 102 1 251 1 188 1 211 1 232 1 193 2 77 1 54 1 256 1 168 3 148 1 194 1 259 1 330 1 149 1 381 1 106 1 
124 1 18 1 281 1 168 2 40 2 188 1 132 1 177 2 112 1 
107 1 158 1 369 1 72 1 109 1 40 3 188 2 132 3 177 3 112 3 193 1 356 1 316 1 256 1 168 3 148 1 205 1 68 1 149 1 
208 1 158 1 160 1 40 2 188 1 132 2 177 2 112 2 193 1 168 2 
175 1 120 1 281 1 91 1 40 1 211 1 177 1 295 1 54 1 77 1 259 1 194 1 381 1 330 1 106 1 
175 1 101 1 120 1 281 1 91 1 40 1 211 1 177 1 295 1 54 1 77 1 83 1 259 1 381 1 106 1 
237 1 217 1 130 2 221 1 311 1 357 1 204 1 298 2 134 1 12 1 226 1 278 1 208 2 71 1 280 1 249 1 187 2 159 1 102 1 160 2 251 1 232 4 76 1 196 2 
72 1 247 1 168 1 40 1 68 1 132 1 177 1 112 1 
202 1 368 1 
202 1 368 1 
137 1 42 1 
137 1 42 1 
137 1 42 1 
202 1 92 1 368 1 
202 1 92 1 368 1 
137 1 42 1 202 2 368 2 
126 1 202 1 368 1 
202 1 92 1 368 1 
283 1 202 1 368 1 
283 1 202 1 368 1 
283 1 202 1 368 1 
2 1 240 1 336 1 201 1 202 1 40 2 132 2 177 2 112 2 223 1 10 1 205 1 45 1 368 1 344 1 281 1 141 1 126 1 28 1 168 2 349 1 148 1 147 1 33 1 
107 1 2 2 344 2 61 1 22 1 241 1 202 2 141 3 223 2 364 1 349 2 148 2 46 1 205 2 45 1 341 1 88 2 333 1 368 2 
55 1 84 1 258 1 
213 1 84 1 258 1 
296 1 55 2 213 1 354 1 258 3 4 1 
296 1 41 1 55 1 213 1 354 1 258 2 
296 1 55 1 213 1 354 2 258 2 
107 2 351 1 36 1 108 2 309 1 294 1 93 1 311 1 358 2 152 1 315 1 10 1 184 1 134 1 205 5 274 1 15 1 207 2 71 1 249 1 324 1 289 1 78 3 80 4 234 1 28 1 165 3 379 1 148 5 147 1 85 1 261 2 
107 5 351 3 36 2 108 6 309 1 220 5 131 1 93 1 311 3 358 6 151 1 152 1 315 3 339 1 43 1 246 5 134 3 205 9 274 2 15 2 207 6 71 3 119 1 249 3 324 6 289 2 254 1 78 9 80 7 234 2 165 8 166 1 147 4 148 9 379 1 
107 3 351 2 36 1 108 2 93 1 311 1 358 2 315 1 184 1 134 1 205 3 274 1 15 1 207 2 71 1 119 1 249 1 289 1 78 4 80 2 234 1 165 3 148 3 147 1 85 1 261 1 
107 4 351 3 36 1 108 4 131 1 93 1 311 2 358 4 151 1 315 2 184 1 134 2 205 4 274 1 15 1 207 4 71 2 119 1 249 2 289 1 78 7 234 1 80 3 165 5 166 1 148 4 147 2 85 1 261 2 
327 1 143 1 91 1 
244 1 91 1 
87 1 
77 1 120 1 91 1 
91 1 64 1 
77 1 91 1 
77 1 125 1 143 2 120 1 180 1 91 3 
172 2 249 1 200 1 292 1 122 1 267 1 311 1 232 7 76 2 6 1 298 3 67 1 226 3 32 1 171 1 196 4 277 1 
172 2 249 1 200 1 292 1 122 1 267 1 311 1 232 7 76 2 6 1 298 3 67 1 226 3 32 1 171 1 196 4 277 1 
172 2 249 1 200 1 292 1 122 1 267 1 311 1 232 7 76 2 113 1 6 1 298 3 67 1 226 3 32 1 171 1 277 1 196 4 
172 3 200 2 62 1 292 1 130 2 267 2 221 1 311 4 315 3 6 2 298 15 134 3 67 2 226 10 69 4 277 1 278 1 343 3 71 3 209 1 249 4 159 1 282 1 122 5 372 1 251 1 232 31 253 1 76 5 328 1 57 1 171 1 32 1 196 16 
172 2 200 1 130 4 292 1 267 1 221 2 311 1 312 1 6 1 298 4 67 1 226 4 278 2 277 1 249 1 159 2 122 1 325 1 251 2 232 9 253 1 76 3 171 1 196 5 
0 1 350 1 174 1 175 1 218 2 268 1 4 1 295 1 359 2 224 1 360 1 183 1 365 1 276 1 323 1 73 1 51 1 345 1 104 1 211 1 163 1 75 1 55 1 213 1 84 1 258 2 195 1 170 1 381 1 106 1 
0 1 350 1 175 1 218 3 4 1 295 1 359 3 224 1 360 1 183 1 340 1 365 1 276 1 73 2 51 1 345 1 104 1 53 1 211 1 163 1 75 1 127 1 55 1 213 1 84 1 258 2 195 1 170 1 381 1 106 1 
0 1 175 1 218 2 4 1 295 1 359 2 340 1 365 1 276 1 73 2 51 1 345 1 104 1 211 1 163 1 75 1 127 1 55 1 213 1 258 2 84 1 195 1 170 1 381 1 106 1 
138 1 0 2 175 1 218 1 91 1 74 1 211 1 53 1 295 1 77 1 142 1 75 2 164 1 359 1 360 1 183 1 259 1 381 1 170 2 14 1 276 2 260 1 106 1 
0 1 350 1 175 1 218 1 268 1 4 1 295 1 359 1 224 1 360 1 183 1 340 1 365 1 276 1 323 1 51 1 345 1 211 1 75 1 55 1 213 1 84 1 258 2 170 1 381 1 106 1 
31 1 
107 2 197 1 335 2 5 1 295 1 152 3 114 1 9 2 299 1 205 5 68 1 15 1 301 4 16 1 18 1 72 1 121 1 211 1 77 1 164 1 78 2 165 2 256 1 168 1 259 2 351 2 173 1 36 1 175 2 38 2 91 1 40 1 93 1 177 1 313 2 356 1 358 2 222 1 96 1 225 1 273 2 274 1 136 1 99 2 138 1 369 1 324 6 326 1 289 1 144 1 148 5 379 1 381 2 150 2 106 2 
369 1 18 1 324 2 72 1 121 1 40 1 326 1 5 1 177 1 356 1 152 1 144 1 256 1 362 1 225 1 168 1 148 3 68 1 205 3 136 1 99 1 301 2 
107 1 40 1 177 1 5 1 93 1 356 1 313 1 152 1 225 1 362 1 205 3 68 1 136 1 301 3 369 1 18 1 324 1 72 1 121 1 326 1 144 1 256 1 168 1 148 3 
107 1 38 1 40 1 177 1 5 1 93 1 356 1 313 1 152 1 362 1 225 1 205 3 68 1 136 1 301 3 99 1 369 1 18 1 72 1 324 2 121 1 326 1 144 1 256 1 168 1 148 3 
107 5 60 1 335 2 5 1 152 3 9 2 11 1 299 1 68 1 205 5 15 1 301 6 16 1 18 1 72 1 121 1 256 1 165 1 168 1 262 1 36 1 351 2 38 4 40 1 177 1 93 5 356 1 313 4 358 1 182 1 362 1 225 1 273 2 274 1 136 1 99 4 369 1 324 7 326 1 377 1 144 1 148 5 379 1 150 2 
107 2 335 2 5 1 152 2 114 1 9 2 299 1 68 1 205 4 15 1 301 4 16 1 18 1 72 1 121 1 78 2 256 1 165 1 168 1 36 1 351 2 38 2 40 1 177 1 93 1 356 1 313 2 358 1 225 1 273 2 274 1 136 1 99 2 369 1 324 4 326 1 144 1 148 4 379 1 150 2 
107 1 351 2 36 1 335 2 38 2 40 1 93 1 177 1 5 1 313 2 356 1 358 1 152 2 9 2 182 1 11 1 299 1 225 1 273 2 205 4 68 1 274 1 15 1 136 1 99 2 301 4 16 1 369 1 18 1 324 4 72 1 121 1 326 1 377 1 144 1 165 1 256 1 168 1 148 4 379 1 150 2 
107 1 351 2 36 1 335 2 38 2 40 1 93 1 177 1 5 1 313 2 356 1 358 1 152 2 9 2 182 1 11 1 299 1 225 1 273 2 205 4 68 1 274 1 15 1 136 1 99 2 301 4 16 1 369 1 18 1 324 4 72 1 121 1 326 1 377 1 144 1 165 1 256 1 168 1 148 4 379 1 150 2 
107 1 36 1 38 2 40 1 266 1 93 1 177 1 5 1 313 2 356 1 358 1 152 2 182 1 361 1 299 1 225 1 273 2 205 4 68 1 366 2 274 1 15 1 136 1 99 2 301 4 369 1 18 1 324 4 72 1 121 1 326 1 285 2 78 2 144 1 165 1 256 1 146 1 168 1 148 4 379 1 150 2 
107 1 351 2 36 1 60 1 335 2 38 3 40 1 93 1 177 1 5 1 356 1 313 3 358 1 152 2 9 2 182 1 11 1 299 1 225 1 273 2 205 4 68 1 274 1 15 1 136 1 301 5 99 3 16 1 369 1 18 1 72 1 324 5 121 1 326 1 377 1 144 1 165 1 256 1 168 1 379 1 148 4 150 2 
107 1 351 2 36 1 60 1 335 2 38 3 40 1 93 1 177 1 5 1 356 1 313 3 358 1 152 2 9 2 182 1 11 1 299 1 225 1 273 2 205 4 68 1 274 1 15 1 136 1 301 5 99 3 16 1 369 1 18 1 72 1 324 5 121 1 326 1 377 1 144 1 165 1 256 1 168 1 379 1 148 4 150 2 
107 1 36 1 38 2 40 1 93 1 5 1 177 1 313 2 356 1 358 1 152 2 114 1 361 1 299 1 225 1 273 2 205 4 68 1 366 2 274 1 136 1 15 1 99 2 301 4 369 1 18 1 324 4 72 1 121 1 326 1 285 2 78 2 144 1 165 1 256 1 168 1 379 1 148 4 150 2 
172 1 217 1 130 2 292 1 267 1 221 1 311 1 298 3 12 1 67 1 226 2 277 1 278 1 208 1 249 1 187 1 159 1 281 2 102 1 160 1 251 1 232 6 76 2 327 1 171 1 196 3 
239 1 130 4 221 2 310 1 311 2 314 1 315 2 298 6 12 2 134 1 226 2 69 3 278 2 206 1 343 3 71 2 208 4 49 1 187 11 249 1 281 1 159 2 282 1 102 1 122 1 160 11 251 2 232 14 76 1 27 1 57 1 257 1 196 8 
175 1 352 1 110 1 91 1 130 2 40 2 132 1 221 1 310 1 177 2 112 1 295 1 298 1 12 1 278 1 206 1 17 1 208 1 49 1 120 1 281 1 159 1 102 1 188 1 251 1 211 1 25 1 232 2 77 1 54 1 168 1 194 1 259 1 330 1 381 1 149 1 196 1 106 1 
292 1 112 1 63 2 295 2 153 1 298 10 340 1 12 3 116 2 67 1 117 2 206 1 208 7 71 2 249 3 120 2 159 3 160 7 122 4 251 3 211 2 76 4 77 2 168 1 259 1 171 1 215 2 172 1 175 3 219 1 130 6 91 2 267 1 40 3 221 3 132 1 310 1 177 3 311 3 315 2 134 2 226 8 277 1 278 3 49 1 48 2 187 7 281 2 102 3 188 1 375 1 232 20 54 2 194 2 381 3 149 1 330 2 196 10 106 3 
174 1 217 1 175 8 91 3 130 4 40 1 132 1 221 2 310 1 177 1 112 1 295 2 271 1 298 1 155 1 95 1 340 1 12 2 278 2 138 1 186 1 49 1 304 1 139 1 159 2 102 2 188 1 251 2 211 2 232 2 192 1 77 2 164 1 168 1 30 2 259 2 381 7 196 1 106 8 
130 2 40 1 132 1 221 1 177 1 112 1 311 1 315 1 94 1 298 2 12 1 134 1 226 1 278 1 206 1 208 1 158 1 71 1 187 1 249 1 159 1 102 1 160 1 251 1 232 3 193 1 76 1 168 1 196 1 
208 1 71 1 187 1 217 1 159 1 102 1 122 1 160 1 130 2 251 1 221 1 232 2 311 1 357 1 12 1 226 1 278 1 196 2 
208 1 280 1 187 1 217 1 249 1 159 1 102 1 160 1 130 2 251 1 221 1 232 2 76 1 298 2 12 1 134 1 226 1 278 1 
217 1 130 2 221 1 311 1 315 1 298 2 12 1 134 1 226 2 278 1 71 1 208 2 187 2 249 1 159 1 102 1 160 2 122 1 251 1 232 4 76 1 196 2 
208 1 71 1 187 1 159 1 102 1 122 1 160 1 130 2 251 1 221 1 232 2 311 1 192 1 357 1 12 1 226 1 278 1 196 2 
208 1 280 1 187 1 249 1 159 1 102 1 160 1 130 2 251 1 221 1 232 2 192 1 76 1 298 2 12 1 134 1 226 1 278 1 
130 2 221 1 311 1 315 1 298 2 12 1 134 1 226 2 278 1 71 1 208 2 187 2 249 1 159 1 102 1 160 2 122 1 251 1 232 4 192 1 76 1 196 2 
130 2 221 1 311 1 315 1 298 2 12 1 134 1 226 2 278 1 71 1 208 2 187 2 249 1 159 1 102 1 160 2 122 1 251 1 232 4 76 1 196 2 
175 1 91 1 130 2 40 1 221 1 310 1 177 1 63 1 295 1 298 1 12 1 278 1 49 1 120 1 281 1 159 1 102 1 251 1 211 1 232 2 77 1 54 1 194 1 259 1 330 1 381 1 196 1 106 1 
175 1 91 1 130 2 40 1 221 1 310 1 177 1 295 1 298 1 12 1 227 1 278 1 49 1 120 1 101 1 281 1 159 1 102 1 251 1 211 1 232 2 77 1 54 1 83 1 259 1 381 1 196 1 106 1 
130 2 221 1 311 1 315 1 298 2 12 1 134 1 226 2 278 1 206 1 71 1 208 2 187 2 249 1 159 1 102 1 160 2 122 1 251 1 232 4 76 1 196 2 
174 1 175 1 91 1 130 2 40 1 221 1 177 1 311 1 63 1 295 1 315 1 298 2 134 1 116 1 12 1 226 2 278 1 208 2 71 1 249 1 187 2 120 1 159 1 102 1 122 1 160 2 251 1 211 1 232 4 76 1 54 1 77 1 194 1 330 1 381 1 196 2 106 1 
1 1 130 2 40 1 132 1 221 1 177 1 112 1 311 1 315 1 298 1 134 1 12 1 226 1 278 1 206 1 158 1 71 1 208 1 249 1 187 1 159 1 102 1 122 1 160 1 251 1 232 3 193 1 168 1 196 2 
172 1 292 1 130 6 267 1 221 3 312 1 311 5 65 1 315 4 7 1 298 21 134 4 67 1 226 8 69 4 98 1 342 1 277 1 278 3 343 3 157 1 71 4 249 5 159 3 282 3 370 4 122 4 23 1 103 1 251 3 189 1 24 1 253 1 232 41 287 2 76 4 128 1 82 1 57 1 86 1 171 1 216 1 196 20 
172 1 292 1 130 8 267 1 221 4 312 1 311 5 65 1 315 4 7 1 298 18 134 3 67 1 226 7 69 4 98 1 342 1 277 1 278 4 343 3 157 1 71 4 249 4 159 4 282 3 370 4 122 3 23 1 103 1 251 4 189 1 24 1 253 2 232 38 287 2 76 4 128 1 82 1 57 1 86 1 171 1 216 1 196 20 
172 1 239 2 292 1 130 4 267 1 221 2 312 1 311 8 65 1 315 7 298 25 134 7 67 1 226 14 69 4 98 1 342 1 277 1 278 2 343 4 157 1 71 7 249 8 159 2 282 2 370 4 122 7 23 1 103 1 251 2 24 1 253 1 232 52 287 1 76 7 128 1 82 1 57 2 86 1 171 1 216 1 196 27 
130 4 221 2 312 1 311 3 315 3 7 1 298 10 134 3 226 6 69 2 342 1 278 2 343 1 157 1 71 3 249 3 159 2 282 1 370 2 122 3 251 2 286 1 232 19 287 1 76 3 128 1 57 1 86 1 216 2 196 9 
130 6 221 3 312 1 311 3 65 1 315 3 298 12 134 2 226 4 69 2 98 1 342 1 278 3 343 2 157 2 71 3 249 2 159 3 282 2 122 2 370 4 23 1 251 3 103 1 24 1 253 2 232 26 287 2 76 2 128 1 82 1 86 1 216 1 196 14 
34 1 2 1 344 1 61 1 223 1 202 1 349 1 46 1 341 1 368 1 
126 1 240 1 
2 1 344 1 238 1 223 1 202 1 349 1 284 1 331 1 368 1 
275 1 92 1 
56 1 283 1 338 1 
107 1 2 1 344 1 61 1 22 1 241 1 202 1 141 2 223 1 148 1 349 1 46 1 45 1 205 1 341 1 88 1 333 1 368 1 
107 1 2 1 344 1 61 1 22 1 241 1 202 1 141 2 223 1 148 1 349 1 46 1 45 1 205 1 341 1 88 1 333 1 368 1 
107 1 2 1 344 1 61 1 22 1 241 1 202 1 141 2 223 1 148 1 349 1 46 1 45 1 205 1 341 1 88 1 333 1 368 1 
56 1 275 1 92 1 
56 1 275 1 92 1 
283 1 338 1 
56 1 283 1 338 1 
336 1 201 1 
2 1 240 1 336 1 201 1 40 2 202 1 132 2 177 2 112 2 223 1 10 1 205 1 100 1 368 1 344 1 281 1 22 1 141 1 126 1 80 1 28 1 168 2 148 1 349 1 147 1 33 1 88 1 
175 2 91 1 130 2 40 2 221 1 310 1 177 2 295 1 271 1 66 1 319 1 298 1 12 1 135 1 206 1 278 1 49 1 304 1 159 1 102 1 230 1 251 1 211 1 190 1 232 2 77 1 168 2 30 2 381 2 196 1 106 2 
174 1 175 2 52 1 51 1 211 1 4 1 295 1 288 1 245 1 55 1 213 1 224 1 340 1 365 1 84 1 258 2 381 2 276 1 106 2 
175 1 52 1 51 1 211 1 4 1 295 1 55 1 213 1 224 1 340 1 365 1 84 1 258 2 381 1 235 1 276 1 106 1 
138 1 175 1 91 1 211 1 212 1 295 1 77 1 245 1 164 1 259 1 381 1 276 1 260 1 106 1 
175 1 52 1 51 1 211 1 4 1 295 1 288 1 245 1 55 1 213 1 224 1 340 1 365 1 84 1 258 2 381 1 276 1 106 1 
270 1 
107 1 358 1 327 1 165 1 176 1 93 1 236 1 
107 2 351 1 36 1 335 1 93 1 358 1 152 1 9 1 205 1 274 1 15 1 16 1 324 1 78 1 165 1 379 1 148 1 
107 8 59 2 108 6 64 2 295 4 244 3 152 3 205 5 15 4 207 6 302 2 71 2 249 2 120 3 211 3 346 1 77 3 26 1 78 12 165 9 256 2 29 2 259 1 215 2 263 1 173 1 36 4 351 6 174 1 175 3 39 2 91 10 176 1 269 2 93 2 311 2 358 8 315 2 180 1 134 2 97 2 320 2 274 4 322 2 324 5 228 1 289 2 143 2 58 1 379 4 148 5 381 3 236 1 106 3 
107 5 173 1 36 2 351 3 108 5 39 2 93 2 311 2 358 5 65 1 152 1 315 2 134 2 205 1 69 1 274 2 98 1 15 2 156 1 343 1 302 1 207 5 71 2 324 1 249 2 282 1 103 1 24 1 233 1 289 1 78 6 165 8 82 1 148 1 379 2 
36 1 39 2 292 1 40 1 267 1 132 1 177 1 311 2 112 1 358 2 317 1 67 1 68 1 205 1 274 1 15 1 47 1 302 1 70 1 249 1 307 1 193 1 377 1 165 2 348 1 168 1 379 1 148 1 
107 1 36 1 176 1 93 1 358 1 165 1 379 1 274 1 15 1 236 1 
302 1 207 5 107 5 71 2 351 5 249 2 108 5 39 2 311 2 358 5 315 2 78 10 165 5 134 2 215 1 
107 1 152 1 324 1 148 1 205 1 93 1 
264 1 36 2 173 2 175 4 91 1 295 1 358 2 222 1 152 2 96 1 205 3 274 2 15 2 138 1 119 1 324 4 228 2 211 1 289 2 77 1 164 1 26 1 165 2 379 1 148 3 105 1 259 2 381 4 106 4 
175 1 130 2 91 1 40 3 221 1 132 2 310 1 177 3 112 2 63 1 295 1 297 1 298 1 12 1 278 1 70 1 120 1 281 1 159 1 102 1 251 1 211 1 232 1 193 2 54 1 77 1 168 2 259 1 194 1 381 1 330 1 106 1 
207 2 107 4 172 1 351 2 36 1 173 1 108 2 93 2 289 1 358 2 78 4 165 1 379 1 274 1 15 1 
2 1 344 1 21 1 
2 1 344 1 21 1 
2 1 344 1 61 1 336 1 242 1 
2 1 344 1 21 1 
2 1 344 1 272 1 
2 1 344 1 272 1 
2 1 344 1 272 1 
2 1 344 1 
202 1 368 1 
172 1 130 2 292 1 267 1 221 1 311 1 312 1 298 4 67 1 226 2 69 1 278 1 277 1 343 1 249 1 159 1 282 1 251 1 24 1 232 8 76 2 171 1 196 4 
172 1 292 1 130 4 267 1 221 2 312 1 311 2 315 1 298 5 67 1 226 3 69 2 277 1 278 2 343 1 71 1 249 1 20 1 159 2 282 1 122 1 251 2 24 1 232 11 76 2 57 1 171 1 196 6 
172 1 292 1 130 6 267 1 221 3 312 1 311 3 65 1 315 2 298 10 134 2 67 1 226 4 69 1 98 1 277 1 278 3 343 1 71 2 249 3 20 1 159 3 282 1 122 1 251 3 103 1 24 1 232 19 253 1 76 3 82 1 171 1 196 9 
172 1 292 1 130 6 267 1 221 3 312 1 311 3 65 1 315 2 298 7 134 1 67 1 226 5 69 1 98 1 277 1 278 3 343 1 71 2 249 2 20 1 159 3 282 1 122 2 251 3 103 1 24 1 253 1 232 17 76 3 82 1 171 1 196 10 
172 1 130 2 292 1 267 1 221 1 311 1 312 1 298 4 67 1 226 2 69 1 278 1 277 1 343 1 249 1 159 1 282 1 251 1 24 1 232 8 76 2 171 1 196 4 
130 2 221 1 312 1 311 2 65 1 315 2 298 6 134 2 226 2 69 1 98 1 278 1 343 1 71 2 249 2 159 1 282 1 122 1 251 1 103 1 24 1 232 12 76 1 82 1 196 6 
172 1 292 1 130 8 267 1 221 4 312 1 311 3 65 1 315 2 298 8 134 1 67 1 226 5 69 1 98 1 277 1 278 4 343 1 71 2 249 2 20 1 159 4 282 1 122 2 251 4 103 1 24 1 232 18 253 2 76 3 82 1 171 1 196 10 
130 8 221 4 312 1 311 3 65 1 315 3 7 1 298 7 134 2 226 6 69 1 98 1 278 4 343 1 71 3 249 2 159 4 282 1 122 3 251 4 103 1 24 1 232 16 253 2 76 3 82 1 196 9 
249 1 122 3 292 1 267 3 232 7 311 1 76 3 298 4 67 3 226 6 171 1 277 2 196 3 
172 1 292 1 130 8 267 1 221 4 312 1 311 3 65 1 315 2 7 1 298 8 134 1 67 1 226 4 69 1 98 1 277 1 278 4 343 1 71 2 249 2 159 4 282 1 122 1 251 4 103 1 24 1 232 18 253 2 76 3 82 1 171 1 196 10 
172 1 249 1 159 2 292 1 122 1 130 4 267 1 251 2 221 2 311 1 232 8 253 1 76 2 298 4 67 1 226 3 171 1 196 4 278 2 277 1 
172 1 249 1 292 1 267 1 311 1 232 6 76 2 327 1 298 3 67 1 226 2 171 1 277 1 196 3 
71 1 249 1 20 1 159 1 130 2 122 1 251 1 221 1 311 1 232 4 76 1 315 1 298 2 134 1 226 2 278 1 196 2 
71 1 249 1 282 1 122 1 232 7 311 1 76 1 315 1 298 4 134 1 57 1 226 2 69 2 196 3 343 1 
172 1 239 1 292 1 130 4 267 2 221 2 311 3 315 2 298 12 134 2 133 1 67 2 226 9 69 2 277 1 278 2 343 2 71 2 249 3 159 2 122 4 251 2 232 23 253 2 76 5 27 1 57 1 171 1 196 11 
298 1 69 1 232 1 
196 1 232 1 343 1 
71 1 249 1 20 1 159 1 130 2 122 1 251 1 221 1 232 6 311 1 76 2 315 1 298 3 134 1 226 3 215 1 278 1 196 3 
130 2 221 1 312 1 311 2 65 1 315 2 298 6 134 2 226 2 69 1 98 1 278 1 343 1 71 2 249 2 159 1 282 1 122 1 251 1 103 1 24 1 232 12 76 1 82 1 196 6 
249 1 292 1 122 1 267 1 311 1 232 6 76 1 298 3 67 1 226 2 196 3 
159 1 122 1 130 2 267 1 251 1 221 1 232 3 253 1 76 1 298 2 133 1 67 1 226 2 171 1 196 1 277 1 278 1 
249 2 159 1 130 2 122 2 292 1 267 2 251 1 221 1 312 1 232 10 311 2 76 3 298 5 348 1 67 2 226 5 278 1 196 5 
71 1 159 1 130 2 122 1 251 1 221 1 312 1 311 1 232 2 226 1 278 1 196 2 
71 1 249 1 159 1 130 2 122 1 251 1 221 1 312 1 311 1 232 4 76 1 315 1 298 2 134 1 226 2 278 1 196 2 
159 3 130 6 122 1 267 1 251 3 221 3 253 1 232 3 312 1 76 1 7 1 298 2 133 1 67 1 226 2 278 3 196 1 
172 1 62 1 292 2 130 10 267 3 221 5 312 1 311 5 315 3 7 1 298 18 133 1 134 3 67 3 226 12 69 4 277 1 278 5 343 3 71 3 249 5 20 1 159 5 282 1 122 5 372 1 251 5 253 2 232 34 76 7 328 1 57 1 171 1 196 16 
124 1 18 1 8 1 281 1 168 1 40 1 177 1 
18 1 281 1 40 1 374 1 111 1 243 1 177 1 124 1 8 1 168 1 378 1 248 1 
295 1 138 1 77 1 164 1 327 1 175 1 91 1 259 1 381 1 211 1 106 1 
175 1 120 1 281 1 91 1 40 2 188 1 132 1 211 1 177 2 112 1 295 1 77 1 54 1 168 1 259 1 194 1 381 1 106 1 
72 1 175 1 120 2 281 1 91 3 228 1 40 2 188 1 132 1 211 1 177 2 64 1 112 2 356 1 295 1 77 2 54 1 168 2 320 1 68 1 194 1 381 1 106 1 
175 2 91 3 40 2 132 1 177 2 112 2 64 1 295 1 356 1 68 1 320 1 72 1 101 1 120 2 281 1 228 1 140 1 188 1 211 1 54 1 77 2 168 2 381 2 106 2 
107 1 175 3 324 1 120 1 291 1 228 1 91 4 371 1 140 1 211 1 93 1 64 1 295 1 77 1 244 1 143 1 256 1 148 2 259 1 320 1 205 2 381 3 106 3 
107 1 175 3 324 1 120 1 228 1 91 4 140 1 211 1 93 1 64 1 295 1 77 1 244 1 143 1 256 1 148 2 97 1 259 1 320 1 205 2 381 3 106 3 
295 1 175 1 155 1 381 1 211 1 106 1 
186 1 174 1 304 1 139 1 175 7 120 1 91 3 210 1 211 2 162 1 295 3 77 2 180 1 155 1 95 1 30 1 340 1 214 1 259 2 381 6 106 7 
172 1 174 1 175 1 292 1 91 1 130 4 267 1 40 2 132 1 221 2 177 2 311 1 112 1 63 1 295 1 298 3 66 1 12 2 116 1 67 1 226 2 117 1 277 1 278 2 206 1 208 1 187 1 249 1 120 1 281 2 159 2 102 2 160 1 188 1 251 2 211 1 232 6 76 2 77 1 54 1 168 1 194 1 171 1 381 1 330 1 196 3 106 1 
107 1 59 1 36 2 175 1 91 2 176 1 93 1 358 1 244 1 152 1 97 1 205 3 274 2 15 2 322 1 324 2 26 1 143 1 80 1 165 1 256 1 29 1 379 2 148 3 259 1 381 1 236 1 106 1 
263 1 174 1 175 2 120 1 91 2 211 1 295 2 77 1 143 1 180 1 155 1 381 2 106 2 
138 1 174 1 175 4 91 1 140 1 211 1 178 1 295 1 77 1 164 1 259 1 381 4 106 4 
175 2 120 1 228 1 91 1 375 1 211 1 162 1 295 2 77 1 167 1 214 1 381 2 321 1 106 2 
295 1 175 1 213 1 365 1 84 1 258 1 259 1 381 1 211 1 106 1 
174 1 175 2 304 1 91 1 190 1 211 1 295 1 77 1 340 1 381 2 106 2 
138 1 186 1 174 1 175 5 304 1 228 1 91 3 211 2 178 1 295 2 77 2 164 1 95 1 259 1 381 4 106 5 
138 1 186 1 174 1 175 5 304 1 353 1 228 1 91 3 211 2 178 1 295 2 77 2 164 1 259 1 381 4 106 5 
175 1 120 1 101 1 281 1 91 1 40 2 188 1 132 1 211 1 177 2 112 1 295 1 77 1 54 1 168 1 259 1 381 1 106 1 
175 1 120 1 228 1 91 1 210 1 211 1 162 1 295 2 77 1 180 1 214 1 381 1 106 1 
19 1 115 1 281 1 329 1 255 1 
107 1 369 1 72 1 19 2 305 1 281 1 250 1 3 1 93 1 356 1 115 2 316 1 255 1 80 1 329 2 256 1 148 2 68 1 205 2 
230 1 40 1 177 1 115 1 329 1 255 1 319 1 168 1 135 1 
305 1 255 1 250 1 
163 1 327 1 195 1 104 1 
163 1 359 1 218 1 360 1 183 1 195 1 104 1 
0 1 218 1 170 1 
163 1 359 3 306 1 218 3 360 1 183 1 231 1 13 2 373 1 268 1 195 1 104 1 
163 1 35 1 359 2 73 1 218 2 360 1 183 1 195 1 104 1 
290 1 218 1 337 1 268 1 163 1 359 1 55 1 360 1 183 1 258 1 84 1 
163 1 359 1 218 1 360 1 183 1 268 1 195 1 
359 1 218 1 360 1 183 1 268 1 195 2 104 1 
37 1 218 2 268 1 123 1 252 1 163 1 359 2 360 2 183 2 195 1 
73 2 218 3 337 1 229 1 268 1 104 1 163 2 359 3 360 1 183 1 195 1 332 1 118 1 
73 1 218 2 268 1 104 1 191 1 4 1 163 1 359 2 55 1 213 1 360 1 183 1 258 2 84 1 195 1 
35 1 73 2 218 4 337 1 268 1 104 1 163 2 359 4 360 2 183 2 44 1 195 1 118 1 
163 1 359 1 218 1 360 1 183 1 268 1 195 1 104 1 
73 2 306 1 218 4 337 1 373 1 293 1 104 2 163 3 359 4 360 1 183 1 13 1 195 2 118 1 
163 1 181 1 359 2 73 1 218 2 360 1 183 1 300 1 268 1 195 1 104 1 376 1 
303 1 306 1 218 3 268 1 373 2 104 1 163 1 359 3 360 1 183 1 13 2 195 1 
163 2 279 1 334 1 199 2 
359 1 145 1 218 1 360 1 183 1 268 1 
163 1 359 2 73 1 218 2 360 1 183 1 268 1 195 1 104 1 332 1 
79 1 
163 1 359 1 218 1 360 1 183 1 268 1 195 1 104 1 
163 1 359 3 73 1 218 3 360 1 183 1 13 1 268 1 195 1 104 1 332 1 
163 1 337 1 293 1 118 1 
163 1 195 1 

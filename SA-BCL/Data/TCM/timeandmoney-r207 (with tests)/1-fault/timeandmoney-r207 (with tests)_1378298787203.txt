#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
325 9 357 2 3 1 5 2 251 2 305 2 138 2 141 1 83 1 162 3 306 1 41 1 232 4 235 2 188 6 340 1 119 1 311 9 214 1 240 1 313 1 242 1 151 5 318 1 350 1 51 2 354 1 102 1 
325 9 357 2 3 1 5 2 251 2 138 2 305 2 141 1 83 1 162 3 306 1 41 1 232 4 235 2 188 6 340 1 119 1 311 9 214 1 240 1 313 1 242 1 151 5 318 1 350 1 51 2 354 1 102 1 
325 10 357 2 3 1 5 2 251 2 138 2 305 2 141 1 83 1 162 4 306 1 41 1 232 5 235 2 188 7 340 1 119 1 311 10 214 1 240 1 313 1 242 1 151 6 318 1 350 1 51 2 354 1 102 1 
325 7 357 2 3 1 5 2 251 2 138 2 305 1 141 1 162 2 306 1 41 1 232 3 235 2 188 4 340 1 119 1 311 7 214 1 240 1 313 1 242 1 151 4 318 1 350 1 51 2 354 1 102 1 
162 1 306 1 325 4 232 2 235 1 188 3 340 1 5 1 251 1 311 4 242 1 151 3 318 1 51 1 138 1 305 2 83 1 102 1 
306 1 325 2 357 1 235 1 340 1 5 1 311 2 169 1 60 1 332 1 151 1 242 1 350 1 51 1 138 1 354 1 
162 1 306 1 325 3 357 1 232 1 188 1 340 1 5 2 311 3 242 1 151 2 138 2 141 1 
325 9 357 1 5 2 251 1 138 2 305 2 141 1 83 1 162 3 306 1 42 1 232 4 188 7 235 1 340 1 119 1 311 9 240 1 242 1 151 5 318 1 378 1 51 1 102 1 
325 9 357 1 5 2 251 1 138 2 305 2 141 1 83 1 162 3 306 1 42 1 232 4 188 7 235 1 340 1 119 1 311 9 240 1 242 1 151 5 318 1 378 1 51 1 102 1 
37 1 304 1 178 1 
24 2 221 1 304 1 
84 2 81 2 80 2 231 2 44 1 266 2 323 2 62 1 
0 2 193 1 53 1 54 1 249 1 81 3 80 2 253 1 363 1 203 1 10 1 281 1 280 1 226 1 160 2 62 1 84 3 231 2 116 2 264 2 288 1 44 1 339 1 266 2 45 1 120 1 212 2 147 1 292 1 23 1 319 1 320 1 73 1 294 1 323 2 89 1 91 1 
84 1 81 1 80 1 215 1 231 1 61 1 266 1 93 1 323 1 62 1 
84 1 186 1 372 1 361 1 178 1 80 1 81 1 87 1 8 1 202 1 70 1 61 1 304 1 246 1 
84 1 231 1 372 2 266 1 361 1 178 1 80 1 81 1 87 1 202 1 70 2 61 1 304 1 323 1 246 1 
336 1 70 1 43 1 372 1 157 1 
336 1 70 2 43 1 317 1 372 2 304 1 178 1 95 1 
70 1 43 1 372 1 
84 1 336 1 231 1 372 1 266 1 93 1 80 1 81 1 215 1 70 1 61 1 351 1 62 1 323 1 
304 1 
336 1 70 2 43 1 39 1 372 2 304 1 178 1 95 1 
336 2 57 2 43 2 359 1 276 1 309 1 310 1 372 5 178 1 95 1 148 1 200 1 70 5 227 1 126 2 11 1 304 1 129 2 13 1 
84 3 81 3 80 3 279 1 231 3 44 1 266 1 323 3 
84 1 81 1 80 1 231 1 61 1 93 1 323 1 
84 1 81 1 80 1 231 1 61 1 255 1 266 1 323 1 278 1 
0 1 193 1 53 1 54 1 361 1 278 1 201 1 81 4 80 3 253 1 279 1 202 1 10 1 280 1 61 1 226 1 160 1 40 1 62 1 84 4 231 3 116 2 264 1 288 1 189 1 44 1 339 1 45 1 266 2 372 1 120 1 212 1 87 1 292 1 23 1 70 1 319 1 320 1 73 1 294 1 89 1 323 3 91 1 246 1 
84 2 81 2 80 2 8 1 279 1 231 1 293 1 44 1 323 1 
84 3 231 3 266 1 372 1 361 1 278 1 80 3 81 3 201 1 87 1 202 1 279 2 68 1 70 1 61 1 304 1 40 1 323 3 246 1 
84 1 81 1 80 1 231 1 266 1 323 1 296 1 278 1 
84 1 264 1 288 1 44 1 45 1 212 1 81 1 253 1 23 1 280 1 160 1 73 1 320 1 294 1 89 1 
84 1 264 1 44 1 45 1 212 1 81 1 253 1 280 1 269 1 349 1 160 1 73 1 320 1 294 1 89 1 
0 2 193 2 53 1 54 1 116 2 6 1 120 1 108 1 123 1 121 1 292 1 10 1 315 1 302 1 319 1 296 1 
84 1 81 1 80 1 231 1 61 1 198 1 361 1 323 1 
37 1 44 1 
84 2 231 1 44 2 266 1 278 1 80 2 81 2 255 1 323 1 
19 1 302 1 296 1 
84 1 264 1 288 1 44 1 45 1 79 1 212 1 81 1 253 1 23 1 280 1 160 1 73 1 320 1 294 1 89 1 
84 2 231 1 264 1 288 1 45 1 212 1 80 1 81 2 253 1 279 1 23 1 280 1 160 1 320 1 73 1 294 1 89 1 40 1 323 1 296 1 
84 5 231 4 299 1 44 1 266 1 278 1 80 5 81 5 8 1 279 2 293 1 140 1 323 4 40 1 
84 2 81 2 80 2 231 2 61 1 198 1 93 1 323 2 
144 1 164 1 250 1 
144 1 164 1 291 1 
144 1 164 1 291 1 
144 1 164 1 291 1 
144 1 164 1 
144 1 164 1 
244 1 261 1 
244 1 261 1 
244 1 261 1 
144 1 164 1 250 1 
144 1 164 1 250 1 
144 1 164 1 7 1 
48 1 144 2 164 2 244 1 12 1 261 1 
262 2 154 3 144 2 164 2 77 1 372 2 107 2 329 1 66 1 48 1 170 2 112 2 70 2 316 1 333 1 128 2 304 1 52 1 230 1 
84 2 262 1 154 1 208 1 231 2 144 1 164 1 265 1 44 1 372 1 107 1 301 1 7 1 81 2 80 2 346 1 267 1 70 1 112 1 49 1 333 1 128 1 90 1 323 2 
235 1 51 1 251 1 
235 1 51 1 169 1 
171 1 56 1 51 3 251 2 169 1 67 1 
171 1 56 1 195 1 51 2 251 1 169 1 
171 1 56 2 51 2 251 1 169 1 
247 2 1 1 29 1 248 2 57 1 221 1 359 2 276 1 58 1 178 1 95 1 227 3 282 1 304 2 367 1 18 1 336 4 165 1 43 1 265 1 372 5 46 2 121 1 342 1 267 1 343 1 70 5 315 1 126 1 24 3 129 1 90 1 
356 1 247 6 29 2 298 1 248 6 57 2 221 3 359 6 276 1 58 1 157 5 178 1 95 1 200 1 227 8 114 1 304 5 367 3 143 1 18 3 336 7 165 3 43 6 372 9 239 1 121 3 342 2 216 1 344 5 70 9 315 3 126 2 24 9 129 2 90 4 
247 2 1 1 29 1 57 1 248 2 221 2 359 2 178 1 200 1 227 3 282 1 304 3 367 1 336 2 18 1 165 1 372 3 46 1 121 1 342 1 70 3 315 1 126 1 24 4 129 1 90 1 
247 4 1 1 29 1 298 1 248 4 57 1 221 3 359 4 178 1 200 1 227 5 282 1 304 4 367 2 143 1 336 3 18 2 165 2 372 4 46 2 121 2 342 1 216 1 70 4 315 2 126 1 24 7 129 1 90 2 
253 1 320 1 
253 3 135 1 150 1 320 1 73 1 205 2 
253 1 37 1 205 1 
253 1 358 1 
69 1 
253 1 320 1 73 1 
253 1 272 1 
193 3 367 1 142 1 324 1 0 7 85 1 15 1 104 2 145 1 233 1 341 1 94 1 121 1 331 1 363 4 256 3 229 2 
193 3 367 1 142 1 324 1 0 7 85 1 15 1 104 2 145 1 233 1 341 1 94 1 121 1 331 1 363 4 256 3 229 2 
193 3 367 1 142 1 324 1 0 7 85 1 15 1 104 2 145 1 233 1 341 1 94 1 121 1 331 1 363 4 256 3 229 2 245 1 
193 15 0 31 324 2 53 1 104 5 156 1 275 1 94 1 362 4 96 1 179 1 331 2 363 16 10 1 256 10 229 3 98 1 142 2 367 4 15 1 85 2 18 3 116 2 145 1 118 1 233 1 165 3 234 1 166 3 120 1 341 5 121 4 315 3 319 1 
53 2 0 9 324 1 193 4 104 3 94 1 363 5 331 1 10 2 256 4 257 1 229 2 367 1 142 1 85 1 116 4 145 1 233 1 234 1 146 1 120 2 341 1 121 1 319 2 
325 2 357 1 105 1 222 1 5 1 251 1 223 1 280 1 160 1 138 1 306 1 99 1 17 1 264 1 371 1 188 1 235 1 340 1 45 1 212 1 311 2 169 1 67 1 151 1 242 1 271 1 127 1 51 2 25 1 175 1 
325 3 357 1 105 1 222 1 5 1 251 1 223 1 364 1 280 1 160 1 138 1 306 1 99 1 17 1 264 1 185 1 371 1 235 1 188 2 45 1 212 1 311 3 169 1 67 1 125 1 151 1 242 1 51 2 25 1 175 1 
325 2 357 1 105 1 222 1 251 1 223 1 364 1 280 1 160 1 306 1 99 1 264 1 371 1 188 2 235 1 45 1 212 1 311 2 169 1 67 1 125 1 151 1 242 1 51 2 175 1 
155 1 325 1 274 1 357 2 105 2 196 1 5 1 222 2 253 1 280 1 160 1 82 1 138 1 99 2 264 1 185 1 117 1 45 1 212 1 311 1 152 1 320 1 294 1 
17 1 99 1 325 1 264 1 357 1 105 1 371 1 235 1 340 1 45 1 5 1 222 1 251 1 223 1 311 1 212 1 169 1 67 1 364 1 280 1 160 1 127 1 51 2 175 1 25 1 138 1 
92 1 
57 1 221 2 276 1 133 1 277 4 178 1 95 3 59 1 8 1 280 1 61 1 227 2 181 2 283 2 16 1 337 1 186 1 187 2 63 2 289 2 342 1 191 1 70 5 24 2 243 1 152 1 294 2 353 1 246 1 75 1 196 1 359 2 361 1 80 1 81 1 253 1 35 1 202 1 159 1 160 2 304 2 204 1 84 1 264 2 43 6 167 2 372 5 45 1 212 2 47 2 87 1 126 1 217 1 320 1 129 1 
84 1 186 1 43 2 372 3 277 2 361 1 95 1 87 1 80 1 81 1 202 1 35 1 8 1 191 1 159 1 70 3 61 1 217 1 39 1 181 1 204 1 246 1 
84 1 186 1 43 1 167 1 372 3 277 3 361 1 178 1 95 1 87 1 80 1 81 1 202 1 35 1 8 1 191 1 159 1 70 3 61 1 217 1 39 1 304 1 204 1 246 1 
361 1 277 3 178 1 95 1 81 1 80 1 8 1 35 1 202 1 159 1 61 1 39 1 181 1 304 1 204 1 283 1 84 1 186 1 43 2 167 1 372 3 87 1 191 1 70 3 217 1 246 1 
57 1 2 1 276 1 221 2 277 6 178 5 95 3 8 1 61 1 227 1 181 4 137 1 283 4 186 1 187 2 63 2 289 2 238 1 191 1 70 5 243 1 246 1 75 1 359 1 361 1 81 1 80 1 202 1 35 1 159 1 111 1 39 1 304 5 204 1 84 1 43 7 167 4 372 5 47 2 87 1 217 1 126 1 88 1 129 1 
75 1 57 1 221 2 359 1 276 1 133 1 361 1 277 4 178 1 95 2 80 1 81 1 35 1 8 1 202 1 159 1 61 1 227 1 181 2 304 2 283 2 204 1 84 1 186 1 43 4 187 2 167 2 63 2 289 2 372 4 47 2 87 1 191 1 70 4 126 1 217 1 24 2 243 1 129 1 246 1 
75 1 57 1 2 1 221 2 359 1 276 1 361 1 277 4 178 1 95 2 81 1 80 1 8 1 35 1 202 1 159 1 111 1 61 1 227 1 181 2 304 1 283 2 204 1 84 1 186 1 43 4 187 2 167 2 63 2 289 2 372 4 238 1 47 2 87 1 191 1 70 4 217 1 126 1 243 1 129 1 246 1 
75 1 57 1 2 1 221 2 359 1 276 1 361 1 277 4 178 1 95 2 81 1 80 1 8 1 35 1 202 1 159 1 111 1 61 1 227 1 181 2 304 1 283 2 204 1 84 1 186 1 43 4 187 2 167 2 63 2 289 2 372 4 238 1 47 2 87 1 191 1 70 4 217 1 126 1 243 1 129 1 246 1 
55 1 75 1 57 1 359 1 276 1 360 2 361 1 277 4 178 1 95 2 81 1 80 1 8 1 35 1 202 1 159 1 111 1 61 1 227 1 181 2 304 1 258 2 283 2 204 1 84 1 186 1 86 1 43 4 167 2 63 2 289 2 372 4 87 1 191 1 70 4 100 1 217 1 126 1 24 2 129 1 246 1 
75 1 57 1 2 1 221 2 359 1 276 1 361 1 277 5 178 1 95 2 81 1 80 1 8 1 35 1 202 1 159 1 111 1 61 1 227 1 181 3 137 1 304 1 204 1 283 3 84 1 186 1 187 2 43 5 63 2 167 3 289 2 372 4 238 1 47 2 87 1 191 1 70 4 126 1 217 1 243 1 129 1 246 1 
75 1 57 1 2 1 221 2 359 1 276 1 361 1 277 5 178 1 95 2 81 1 80 1 8 1 35 1 202 1 159 1 111 1 61 1 227 1 181 3 137 1 304 1 204 1 283 3 84 1 186 1 187 2 43 5 63 2 167 3 289 2 372 4 238 1 47 2 87 1 191 1 70 4 126 1 217 1 243 1 129 1 246 1 
75 1 57 1 359 1 276 1 360 2 133 1 361 1 277 4 178 1 95 2 80 1 81 1 35 1 8 1 202 1 159 1 61 1 227 1 181 2 304 1 258 2 283 2 204 1 84 1 186 1 43 4 167 2 63 2 289 2 372 4 87 1 191 1 70 4 126 1 217 1 100 1 24 2 129 1 246 1 
0 2 53 1 367 1 54 1 18 1 116 2 6 1 120 1 292 1 363 2 10 1 345 1 302 1 319 1 296 1 
0 2 53 1 193 2 54 1 116 2 6 1 120 1 123 1 121 1 292 1 10 1 315 1 302 1 319 1 296 1 
0 2 53 1 367 1 54 1 18 1 116 2 165 1 6 1 120 1 292 1 363 2 10 1 302 1 319 1 296 1 
0 2 53 1 367 1 103 1 54 1 18 1 116 2 120 1 292 1 363 2 10 1 345 1 302 1 319 1 296 1 
0 2 53 1 193 2 103 1 54 1 116 2 120 1 123 1 121 1 292 1 10 1 315 1 302 1 319 1 296 1 
0 2 53 1 367 1 103 1 54 1 18 1 116 2 165 1 120 1 292 1 363 2 10 1 302 1 319 1 296 1 
53 1 367 1 0 2 54 1 18 1 116 2 165 1 120 1 292 1 363 2 10 1 302 1 319 1 296 1 
0 2 53 1 193 1 54 1 81 1 253 1 363 1 203 1 10 1 280 1 160 1 84 1 264 1 116 2 288 1 44 1 339 1 45 1 120 1 212 1 292 1 23 1 319 1 320 1 73 1 294 1 89 1 91 1 
0 2 53 1 193 1 54 1 81 1 253 1 363 1 203 1 10 1 280 1 160 1 365 1 84 1 264 1 116 2 44 1 45 1 120 1 212 1 292 1 269 1 349 1 319 1 320 1 73 1 294 1 89 1 91 1 
0 2 53 1 367 1 54 1 18 1 116 2 165 1 120 1 199 1 292 1 363 2 10 1 302 1 319 1 296 1 
0 2 53 1 54 1 81 1 253 1 363 2 10 1 280 1 160 1 302 1 367 1 84 1 18 1 264 1 116 2 165 1 288 1 339 1 45 1 120 1 212 1 292 1 23 1 271 1 319 1 73 1 320 1 89 1 295 1 296 1 
53 1 0 2 54 1 199 1 278 1 80 1 81 1 363 2 10 1 256 1 302 1 84 1 367 1 231 1 18 1 116 2 19 1 165 1 266 1 65 1 120 1 341 1 292 1 319 1 323 1 296 1 
53 1 0 6 193 3 54 1 104 2 6 1 94 1 331 1 363 3 10 1 37 1 256 2 302 1 229 1 367 1 85 1 19 1 116 2 145 1 233 1 44 2 120 1 121 1 292 1 319 1 296 1 
193 3 53 2 0 9 54 2 199 1 362 2 96 1 363 6 10 2 61 1 256 1 302 7 367 2 307 1 18 2 116 4 19 6 165 2 338 1 166 2 44 1 120 2 341 1 190 1 292 1 270 1 377 1 319 2 91 1 296 7 
53 1 193 1 0 2 54 1 4 1 79 1 199 1 81 2 80 1 253 1 279 1 203 1 363 1 10 1 280 1 160 1 40 1 84 2 231 1 264 1 19 1 116 2 288 1 44 1 45 1 120 1 212 1 292 1 23 1 22 1 173 1 319 1 320 1 73 1 294 1 89 1 323 1 91 1 
53 2 0 5 54 2 279 1 10 2 280 1 231 1 18 1 19 1 288 1 339 1 290 1 292 2 23 1 73 1 294 1 295 1 296 2 193 2 194 1 104 1 33 1 199 1 80 1 81 2 110 1 253 1 363 3 256 1 160 1 302 2 40 1 84 2 367 1 264 1 116 4 165 1 45 1 120 2 212 1 319 2 320 1 323 1 89 1 91 1 
53 2 0 2 193 1 103 1 54 2 196 1 6 1 300 1 81 1 80 1 279 1 253 3 364 1 203 1 363 1 10 2 280 2 281 2 97 1 160 8 115 1 303 1 259 1 84 1 231 1 264 8 116 4 45 2 120 2 212 7 292 2 149 1 271 1 319 2 152 1 320 2 294 2 323 1 91 1 
53 1 0 3 193 2 54 1 104 1 31 1 199 1 278 1 80 1 81 1 363 1 10 1 256 1 302 1 84 1 367 1 231 1 18 1 19 1 116 2 165 1 266 1 120 1 121 1 292 1 315 1 319 1 323 1 296 1 
53 2 193 10 0 19 30 2 104 3 297 1 362 2 96 1 36 1 363 9 10 2 256 6 180 1 257 1 285 1 286 1 98 1 367 3 18 3 116 4 165 3 166 1 20 1 120 2 237 2 341 3 121 3 268 1 315 3 319 2 
219 1 193 12 53 3 0 26 30 1 104 2 297 2 362 2 254 1 36 1 363 14 10 3 225 1 256 4 180 1 257 1 285 2 286 1 98 2 367 3 18 3 116 6 165 3 234 2 166 2 120 3 341 2 237 4 122 1 121 2 21 1 315 2 319 3 321 1 
0 41 53 3 219 1 94 1 96 1 331 1 10 3 225 1 180 1 229 1 286 1 285 1 98 3 18 4 145 1 233 1 234 1 20 1 64 1 341 4 237 4 21 1 193 21 30 1 297 2 104 4 362 4 254 1 363 20 36 1 256 8 257 1 367 5 85 1 116 6 165 4 166 3 120 3 121 5 122 1 315 4 319 3 321 1 
219 1 53 4 193 18 0 38 30 1 104 4 297 2 94 1 362 4 254 1 96 1 331 1 36 1 363 20 225 1 10 4 256 7 180 1 257 1 229 1 285 1 286 1 98 3 367 5 85 1 18 4 116 8 145 1 233 1 165 4 234 2 166 3 64 1 20 1 120 4 237 4 341 3 122 1 121 4 21 1 315 3 319 4 321 1 
219 1 53 2 193 25 0 52 30 1 104 7 297 1 94 1 362 4 254 1 96 2 331 1 36 1 363 27 225 1 10 2 256 14 180 1 257 1 229 1 285 1 286 1 98 2 367 8 85 1 18 7 116 4 145 1 233 1 165 7 234 1 338 2 166 4 120 2 237 4 341 7 122 1 121 8 21 1 315 7 319 2 321 1 
262 1 154 2 144 1 164 1 372 1 107 1 329 1 66 1 48 1 170 1 70 1 112 1 316 1 333 1 128 1 304 1 52 1 230 1 
262 1 154 2 144 1 164 1 372 1 107 1 329 1 66 1 48 1 170 1 70 1 112 1 316 1 333 1 128 1 304 1 52 1 230 1 
262 1 154 2 144 1 164 1 372 1 107 1 329 1 66 1 48 1 170 1 70 1 112 1 316 1 333 1 128 1 304 1 52 1 230 1 
12 1 250 1 366 1 
12 1 250 1 366 1 
71 1 291 1 
71 1 12 1 291 1 
346 1 301 1 
154 1 107 1 7 1 301 1 81 2 80 2 112 1 84 2 262 1 336 1 208 1 231 2 144 1 164 1 265 1 44 1 372 1 66 1 170 1 374 1 70 1 267 1 346 1 49 1 128 1 90 1 323 2 
262 1 48 1 369 1 112 1 144 1 164 1 128 1 107 1 52 1 230 1 
49 1 7 1 
287 1 207 1 262 1 112 1 144 1 164 1 128 1 107 1 130 1 
250 1 366 1 
71 1 12 1 291 1 
53 1 0 2 193 1 54 1 326 1 177 1 199 1 328 1 81 2 80 2 253 1 203 1 363 1 10 1 280 1 281 2 160 2 303 1 259 1 84 2 264 2 116 2 45 1 120 1 212 2 292 1 312 1 314 1 319 1 320 1 91 1 
17 1 264 2 371 1 235 1 45 1 222 1 211 1 251 1 212 2 223 1 169 1 67 1 364 1 280 1 160 2 271 1 51 2 101 1 380 1 
17 1 264 1 371 1 235 1 222 1 45 1 327 1 211 1 251 1 212 1 223 1 169 1 67 1 364 1 280 1 160 1 51 2 
155 1 264 1 273 1 196 1 45 1 222 1 212 1 253 1 280 1 160 1 152 1 320 1 294 1 380 1 
17 1 264 1 371 1 235 1 45 1 222 1 211 1 251 1 212 1 223 1 169 1 67 1 364 1 280 1 160 1 51 2 101 1 380 1 
352 1 
148 1 37 1 227 1 359 1 310 1 304 1 178 1 
57 1 43 1 187 1 276 1 359 1 221 1 372 1 178 1 95 1 47 1 70 1 126 1 227 1 24 1 243 1 304 2 129 1 
57 4 276 4 221 6 178 2 95 3 59 1 280 3 227 9 334 2 284 2 14 1 184 2 18 2 290 2 148 1 342 2 70 5 150 1 24 12 73 3 294 1 247 6 74 2 358 3 248 6 32 2 76 1 359 8 78 1 106 2 109 1 34 1 253 10 202 2 160 3 38 2 304 8 205 2 367 2 264 3 43 5 165 2 310 1 45 4 372 5 212 3 168 2 121 2 315 2 126 4 271 1 272 2 320 3 129 4 
219 1 28 1 247 5 248 5 57 2 276 2 221 3 359 5 178 2 95 1 362 1 59 1 254 1 225 1 227 8 304 5 98 1 184 2 367 2 18 2 43 1 165 2 166 1 372 1 168 1 122 1 121 2 342 1 21 1 70 1 348 1 315 2 126 2 24 6 129 2 
57 1 276 1 359 2 93 1 81 1 80 1 331 1 61 1 227 2 62 1 84 1 184 2 367 2 85 1 231 1 209 1 233 1 372 1 266 1 168 1 238 1 121 1 215 1 70 1 126 1 351 1 129 1 323 1 
148 1 57 1 227 1 126 1 359 1 276 1 310 1 304 1 178 1 129 1 
184 2 367 2 247 5 18 2 248 5 165 2 359 5 221 5 290 1 168 1 121 2 315 2 227 5 24 10 304 5 
70 1 43 1 372 1 304 1 178 1 95 1 
57 2 196 1 76 2 276 1 359 2 95 2 200 1 59 2 253 1 280 1 227 2 160 4 14 1 308 1 16 1 264 4 43 4 45 1 372 3 212 4 342 2 70 3 172 1 126 2 152 1 320 1 294 2 353 1 129 2 
0 1 193 1 53 1 54 1 81 3 80 2 253 1 10 1 280 1 226 1 160 1 62 1 84 3 231 2 116 2 264 1 288 1 44 1 339 1 266 2 45 1 120 1 212 1 292 1 23 1 319 1 73 1 320 1 294 1 323 2 89 1 91 1 
247 2 248 2 57 1 221 2 359 2 276 1 178 2 59 1 342 1 126 1 227 1 24 4 304 4 229 1 129 1 
112 1 128 1 218 1 
112 1 228 1 128 1 
112 1 228 1 128 1 
112 1 228 1 128 1 
112 1 128 1 
144 1 164 1 
112 1 128 1 218 1 
112 1 128 1 218 1 
112 1 197 1 128 1 230 1 301 1 
367 1 193 4 0 8 53 2 85 1 116 4 104 2 145 1 233 1 234 1 120 2 341 1 94 1 121 1 363 4 331 1 10 2 256 3 319 2 229 1 
193 3 367 1 0 6 85 1 145 1 104 2 233 1 94 1 121 1 331 1 363 3 37 1 256 2 229 1 
193 2 53 1 367 1 0 4 18 1 116 2 104 1 165 1 210 1 120 1 341 1 121 1 363 2 10 1 315 1 256 2 319 1 
193 4 0 7 367 1 18 1 104 1 165 1 166 1 341 1 362 2 121 1 96 1 363 3 315 1 256 2 98 1 
0 23 193 12 53 2 104 5 94 1 362 2 96 1 331 2 363 11 10 2 256 9 229 1 367 3 85 2 307 1 18 2 116 4 263 1 145 1 233 1 165 2 338 1 234 2 166 2 120 2 341 4 121 3 315 2 319 2 
0 1 193 1 362 1 
0 1 363 1 166 1 
53 1 193 3 0 6 367 1 18 1 116 2 104 2 165 1 210 1 290 1 120 1 341 1 121 1 363 3 10 1 315 1 256 3 319 1 
0 12 193 6 53 1 219 1 104 1 362 1 254 1 363 6 10 1 225 1 256 2 257 1 98 1 367 2 18 2 116 2 165 2 166 1 120 1 341 1 121 2 122 1 21 1 315 2 319 1 
367 1 0 6 193 3 85 1 104 1 233 1 341 1 121 1 363 3 331 1 256 2 
193 2 0 3 53 1 85 1 263 1 116 2 104 1 145 1 234 1 120 1 341 1 94 1 363 1 331 1 10 1 256 2 319 1 
53 1 0 10 193 5 367 2 85 2 116 2 209 1 104 3 233 1 120 1 341 2 121 2 331 2 363 5 10 1 256 5 319 1 257 1 
53 1 367 1 0 2 18 1 116 2 120 1 341 1 363 2 10 1 256 1 319 1 257 1 
193 2 53 1 367 1 0 4 18 1 116 2 104 1 165 1 120 1 341 1 121 1 363 2 10 1 315 1 256 2 319 1 257 1 
193 2 0 3 53 3 85 1 263 1 116 6 104 1 234 1 20 1 120 3 341 1 331 1 363 1 10 3 256 2 319 3 257 1 
193 18 53 5 0 34 104 7 275 1 94 1 362 4 179 1 96 1 331 3 363 16 10 5 256 12 257 1 229 1 98 1 367 5 85 3 18 3 263 1 116 10 145 1 118 1 233 2 165 3 234 2 210 1 166 3 20 1 120 5 341 5 121 5 315 3 319 5 
0 8 193 4 53 1 104 2 94 1 362 1 254 1 363 4 331 1 10 1 256 2 257 1 229 1 98 1 367 1 85 1 116 2 145 1 233 1 166 1 120 1 121 1 319 1 
0 11 193 5 53 2 104 2 94 1 362 2 254 1 96 1 331 1 363 6 10 2 256 3 257 1 229 1 98 1 367 2 85 1 18 1 116 4 145 1 233 1 165 1 210 1 166 1 120 2 341 1 121 1 319 2 
219 1 0 19 193 10 53 3 104 3 94 1 362 1 254 1 331 1 363 9 10 3 225 1 256 4 257 1 229 1 98 1 367 3 85 1 18 2 116 6 145 1 233 1 165 2 234 1 210 1 166 1 120 3 341 1 121 3 122 1 21 1 315 2 319 3 
0 17 193 7 53 3 219 1 104 3 94 1 362 1 254 1 331 1 363 10 10 3 225 1 256 5 257 1 229 1 98 1 367 3 85 1 18 2 116 6 145 1 233 1 165 2 234 1 210 1 166 1 120 3 341 2 121 2 122 1 21 1 315 1 319 3 
0 8 193 4 53 1 104 2 94 1 362 1 254 1 363 4 331 1 10 1 256 2 257 1 229 1 98 1 367 1 85 1 116 2 145 1 233 1 166 1 120 1 121 1 319 1 
0 12 193 6 53 1 219 1 104 1 362 1 254 1 363 6 10 1 225 1 256 2 257 1 98 1 367 2 18 2 116 2 165 2 166 1 120 1 341 1 121 2 122 1 21 1 315 2 319 1 
219 1 0 18 193 8 53 4 104 3 94 1 362 1 254 1 331 1 363 10 10 4 225 1 256 5 257 1 229 1 98 1 367 3 85 1 18 2 116 8 145 1 233 1 165 2 234 2 210 1 166 1 120 4 341 2 122 1 121 2 21 1 315 1 319 4 
219 1 0 16 193 7 53 4 104 3 362 1 254 1 363 9 10 4 225 1 256 6 257 1 98 1 367 3 18 3 116 8 165 3 234 2 166 1 20 1 120 4 341 3 122 1 121 2 21 1 315 2 319 4 
193 4 0 7 367 1 85 3 145 2 104 3 233 1 94 1 341 3 121 1 331 3 363 3 256 6 
219 1 0 18 193 8 53 4 104 3 94 1 362 1 254 1 331 1 363 10 10 4 225 1 256 4 257 1 229 1 98 1 367 3 85 1 18 2 116 8 145 1 233 1 165 2 234 2 166 1 20 1 120 4 341 1 122 1 121 2 21 1 315 1 319 4 
84 1 81 1 80 1 8 1 241 1 293 1 44 1 
84 1 44 1 236 1 80 1 81 1 8 1 9 1 241 1 375 1 293 1 161 1 322 1 
253 1 264 1 280 1 37 1 196 1 160 1 152 1 45 1 320 1 294 1 212 1 
84 2 231 1 264 1 288 1 44 1 45 1 212 1 80 1 81 2 253 1 279 1 280 1 160 1 320 1 73 1 294 1 89 1 323 1 
84 2 231 2 264 1 288 1 76 1 44 1 45 1 106 1 361 1 212 1 87 1 80 2 81 2 253 3 279 1 61 1 280 1 160 1 272 1 320 2 73 2 89 1 323 1 
76 1 106 1 361 1 81 2 80 2 279 1 253 3 280 1 61 1 160 2 206 1 84 2 231 2 264 2 44 1 45 1 212 2 87 1 269 1 272 1 73 2 320 2 323 1 89 1 
206 1 264 3 358 1 43 1 76 1 45 1 372 2 106 1 178 1 212 3 252 1 202 1 253 4 70 2 280 1 160 3 272 1 320 1 73 1 136 1 294 1 304 1 205 1 
206 1 264 3 358 1 43 1 76 1 45 1 372 2 106 1 178 1 212 3 202 1 253 4 70 2 280 1 160 3 272 1 320 1 73 1 334 1 294 1 304 1 205 1 
264 1 149 1 280 1 160 1 45 1 212 1 
264 7 45 3 212 6 300 1 158 1 253 3 364 1 330 1 149 1 124 1 281 1 280 2 150 1 97 1 160 7 271 1 73 1 320 2 115 1 294 2 259 1 
53 2 0 6 54 2 326 1 94 1 279 1 331 1 10 2 280 1 229 1 231 1 19 1 145 1 233 1 288 1 339 1 292 2 23 1 73 1 295 1 296 1 193 3 104 2 199 1 80 1 81 2 110 1 253 1 363 3 256 2 160 1 302 1 84 2 367 1 85 1 264 1 116 4 44 2 45 1 120 2 212 1 121 1 271 1 319 2 320 1 323 1 89 1 
74 1 358 1 57 2 359 1 276 2 178 1 95 1 253 2 202 1 227 1 160 1 38 1 334 1 304 1 284 1 205 1 14 1 336 1 264 1 43 2 310 1 372 3 212 1 148 1 70 3 126 2 294 1 129 2 
253 2 264 2 149 1 280 1 150 1 160 2 271 1 78 1 45 2 320 1 73 1 212 2 205 1 
206 1 264 4 196 1 45 1 212 4 213 1 253 1 280 1 160 4 271 1 152 1 320 1 294 1 
264 2 76 1 45 2 212 2 253 1 330 1 124 1 280 1 113 1 376 1 160 2 73 1 320 1 153 1 
264 1 280 1 371 1 160 1 235 1 45 1 51 1 294 1 212 1 169 1 
253 1 364 1 312 1 264 2 280 1 160 2 271 1 45 1 320 1 259 1 212 2 
264 5 196 1 76 1 45 2 212 4 300 1 213 1 253 3 280 2 160 5 271 1 152 1 320 2 115 1 294 1 259 1 
264 5 196 1 76 1 45 2 212 4 373 1 300 1 213 1 253 3 280 2 160 5 271 1 152 1 320 2 294 1 259 1 
84 2 231 1 264 1 44 1 45 1 212 1 80 1 81 2 253 1 279 1 280 1 269 1 160 1 320 1 73 1 294 1 89 1 323 1 
264 1 76 1 45 2 212 1 158 1 253 1 330 1 124 1 280 1 150 1 160 1 73 1 320 1 
84 1 132 1 177 1 328 1 80 1 81 1 347 1 314 1 260 1 
368 1 347 1 27 1 
347 1 132 1 44 1 139 1 260 1 
368 1 336 1 132 2 44 1 372 2 361 1 178 1 87 1 201 1 202 1 70 2 61 1 347 1 192 1 304 1 139 2 260 2 27 1 246 1 
306 1 37 1 151 1 242 1 
306 1 325 1 151 1 242 1 5 1 138 1 311 1 
357 1 105 1 311 1 
355 1 306 1 325 3 340 1 5 1 311 3 72 1 151 1 242 1 138 1 26 1 354 2 
306 1 325 2 151 1 242 1 188 1 5 1 305 1 138 1 311 2 
325 1 232 1 235 1 340 1 5 1 251 1 311 1 151 1 318 1 51 1 138 1 
325 1 151 1 242 1 340 1 5 1 138 1 311 1 
306 1 325 1 242 2 340 1 5 1 138 1 311 1 
131 1 163 1 325 2 340 1 5 2 311 2 134 1 151 1 242 1 138 2 
162 1 306 1 325 3 232 1 188 2 340 1 119 1 5 1 311 3 240 1 242 1 151 2 138 1 
306 1 325 2 235 1 188 1 340 1 5 1 251 1 311 2 169 1 67 1 151 1 242 1 50 1 51 2 138 1 
162 1 306 1 325 4 232 1 188 2 340 1 5 2 311 4 242 1 151 2 138 2 305 1 83 1 
306 1 325 1 151 1 242 1 340 1 5 1 138 1 311 1 
162 1 306 2 325 4 232 1 188 2 5 1 311 4 72 1 242 2 151 3 182 1 138 1 26 1 354 1 
220 1 42 1 306 1 370 1 325 2 188 1 340 1 5 1 311 2 151 1 242 1 138 1 
306 1 325 3 340 1 5 1 311 3 72 2 151 1 242 1 138 1 26 1 335 1 354 2 
224 1 151 2 174 2 176 1 
325 1 340 1 5 1 138 1 311 1 379 1 
306 1 325 2 151 1 242 1 188 1 119 1 340 1 5 1 138 1 311 2 
183 1 
306 1 325 1 151 1 242 1 340 1 5 1 138 1 311 1 
306 1 325 3 151 1 242 1 188 1 119 1 340 1 5 1 138 1 311 3 354 1 
162 1 151 1 232 1 182 1 
151 1 242 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 242 (178,371) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 242 (178,371) (178,371) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 242 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 242 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 242 (178,371) (178,371) 252 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
331 1 240 1 183 9 27 2 186 2 2 6 215 1 359 1 189 2 190 5 120 1 274 1 103 1 292 3 368 4 65 1 145 1 200 1 203 2 344 1 303 2 43 1 206 1 176 2 151 2 93 9 209 1 353 1 
331 1 240 1 183 9 27 2 186 2 2 6 215 1 359 1 189 2 190 5 120 1 274 1 103 1 292 3 368 4 65 1 145 1 200 1 203 2 344 1 303 2 43 1 176 2 206 1 151 2 93 9 209 1 353 1 
331 1 240 1 183 10 27 2 186 2 2 7 215 1 359 1 189 2 190 6 120 1 274 1 103 1 292 4 368 5 65 1 145 1 200 1 203 2 344 1 303 2 43 1 176 2 206 1 151 2 93 10 209 1 353 1 
331 1 183 7 27 2 186 2 2 4 215 1 359 1 189 1 190 4 120 1 274 1 103 1 292 2 368 3 65 1 145 1 200 1 203 2 344 1 303 2 43 1 176 2 206 1 151 2 93 7 209 1 353 1 
368 2 240 1 27 1 183 4 65 1 186 1 2 3 200 1 203 1 303 1 189 2 190 3 206 1 176 1 120 1 93 4 103 1 292 1 
331 1 183 2 27 1 111 1 65 1 186 1 84 1 203 1 303 1 190 1 233 1 206 1 120 1 151 1 93 2 209 1 
368 1 183 3 65 1 2 1 203 2 344 1 303 2 190 2 206 1 120 1 151 1 93 3 292 1 
183 9 27 1 240 1 186 1 2 7 189 2 190 5 6 1 120 1 122 1 274 1 103 1 292 3 368 4 65 1 200 1 344 1 203 2 303 2 43 1 206 1 176 1 151 1 93 9 
183 9 27 1 240 1 186 1 2 7 189 2 190 5 6 1 120 1 122 1 274 1 103 1 292 3 368 4 65 1 200 1 344 1 203 2 303 2 43 1 206 1 176 1 151 1 93 9 
62 1 334 1 121 1 
121 1 129 2 20 1 
346 1 369 2 370 2 227 2 19 1 343 2 94 2 245 2 
308 1 237 1 110 1 313 1 265 2 287 1 100 1 3 2 245 2 218 1 363 1 80 1 193 1 364 1 194 1 81 1 58 2 248 1 367 1 369 3 370 2 339 2 227 2 299 1 342 2 254 1 67 1 343 2 146 1 346 1 105 1 150 1 327 1 92 1 19 1 329 1 94 3 
369 1 370 1 227 1 371 1 242 1 19 1 343 1 94 1 245 1 
261 1 369 1 227 1 26 1 297 1 340 1 170 1 216 1 247 1 334 1 121 1 210 1 94 1 319 1 
261 1 369 1 370 1 297 2 227 1 26 1 340 1 170 2 343 1 245 1 216 1 334 1 121 1 94 1 319 1 
148 1 73 1 297 1 170 1 128 1 
148 1 311 1 297 2 334 1 170 2 376 1 121 1 128 1 
148 1 297 1 170 1 
369 1 370 1 297 1 371 1 227 1 170 1 242 1 128 1 343 1 245 1 178 1 19 1 94 1 
121 1 
148 1 311 1 297 2 334 1 170 2 121 1 128 1 108 1 
35 1 142 1 212 2 311 1 297 5 98 2 277 1 170 5 324 1 66 1 128 2 345 1 137 1 104 1 54 1 148 2 334 1 121 1 196 2 
346 1 62 1 
369 2 370 1 227 2 321 1 301 1 343 1 245 1 346 2 94 2 
53 1 347 1 230 1 
369 1 299 1 313 1 265 1 342 1 3 1 346 1 363 1 80 1 193 1 327 1 92 1 9 1 248 1 94 1 367 1 
369 5 370 1 227 5 372 1 64 1 321 1 343 4 245 4 346 1 117 1 247 1 249 2 34 1 94 5 
369 1 227 1 242 1 343 1 94 1 245 1 
346 1 369 3 370 1 227 3 343 3 249 1 94 3 245 3 
369 1 227 1 242 1 343 1 94 1 245 1 
261 1 369 1 370 1 227 1 321 1 301 1 343 1 94 1 245 1 
308 1 261 1 237 1 110 1 26 1 313 1 265 1 287 1 100 1 3 1 52 1 245 3 216 1 218 1 80 1 363 1 193 1 272 1 194 1 58 2 248 1 249 1 34 1 367 1 319 1 369 4 370 2 339 1 227 3 297 1 299 1 340 1 321 1 170 1 342 1 67 1 343 3 146 1 346 1 105 1 327 1 92 1 19 1 94 4 
346 1 369 2 247 1 227 2 64 1 343 1 249 1 94 2 245 1 
261 1 369 3 370 1 297 1 227 3 26 1 340 1 321 1 170 1 1 1 343 3 52 1 245 3 216 1 121 1 249 2 34 1 94 3 319 1 
369 2 370 1 227 2 321 1 343 2 230 1 245 2 347 1 249 1 94 2 
369 1 299 1 265 1 313 1 342 1 3 1 346 1 363 1 80 1 193 1 327 1 92 1 248 1 94 1 367 1 
369 1 265 1 313 1 342 1 3 1 87 1 4 1 346 1 363 1 80 1 193 1 92 1 248 1 94 1 367 1 
211 1 308 1 110 1 184 1 312 1 187 1 188 1 53 2 218 2 30 1 194 1 164 1 58 2 339 4 67 1 85 1 230 2 40 1 146 1 348 1 347 2 105 1 329 2 96 1 
261 1 369 1 227 1 340 1 315 1 343 1 94 1 245 1 
369 2 227 1 299 1 313 1 265 1 342 1 343 1 3 1 245 1 347 1 80 1 363 1 193 1 327 1 92 1 248 1 249 1 34 1 367 1 94 2 
28 1 77 1 
28 1 77 1 
31 1 173 1 
31 1 173 1 
31 1 173 1 
191 1 28 1 77 1 
191 1 28 1 77 1 
21 1 28 1 77 1 
31 1 228 1 28 2 77 2 220 1 173 1 
191 1 28 1 77 1 
28 1 77 1 179 1 
28 1 77 1 179 1 
28 1 77 1 179 1 
133 1 21 1 310 1 72 1 0 1 75 1 134 1 28 1 77 1 245 2 369 2 297 1 227 2 373 1 170 1 323 1 343 2 39 1 346 1 17 1 69 1 349 1 132 1 94 2 
133 2 297 2 0 3 373 2 36 1 77 2 28 2 170 2 323 2 160 1 17 2 69 1 166 1 165 2 220 1 121 1 306 1 259 1 167 1 
27 1 176 1 186 1 
233 1 27 1 186 1 
233 1 176 2 27 3 229 1 335 1 50 1 
232 1 233 1 176 1 27 2 229 1 335 1 
233 1 176 1 27 2 335 1 229 2 
211 1 212 1 72 1 98 1 311 1 134 1 241 1 333 1 187 1 289 1 217 2 361 1 164 1 334 1 121 2 338 1 196 1 35 3 297 5 63 1 170 5 66 2 85 1 128 4 129 3 16 2 104 1 283 1 148 1 328 2 132 1 20 1 
211 3 212 2 73 5 311 1 98 2 76 1 241 1 187 3 29 5 54 1 361 2 163 1 273 1 164 3 334 1 121 5 196 2 294 1 35 8 297 9 13 1 63 3 170 9 66 6 85 3 128 7 129 9 16 6 104 1 283 2 148 6 130 1 328 6 132 4 20 3 
211 1 212 1 98 1 333 1 187 1 289 1 217 1 54 1 361 1 334 1 164 1 121 3 196 1 35 3 297 3 63 1 170 3 66 2 85 1 128 2 129 4 16 2 283 1 328 2 132 1 20 2 
211 2 212 1 98 1 76 1 333 1 187 2 289 1 217 2 54 1 361 1 334 1 164 2 121 4 196 1 294 1 35 5 297 4 13 1 63 2 170 4 66 4 85 2 128 3 129 7 16 4 283 1 328 4 132 2 20 3 
260 1 313 1 62 1 
313 1 140 1 
118 1 
193 1 313 1 367 1 
225 1 313 1 
193 1 313 1 
260 2 161 1 193 1 313 3 158 1 367 1 
238 1 184 3 339 7 169 1 14 1 48 1 85 1 187 1 268 1 188 2 136 2 114 1 218 3 175 1 258 1 182 1 329 4 
238 1 184 3 339 7 169 1 14 1 48 1 85 1 187 1 268 1 188 2 136 2 114 1 218 3 175 1 258 1 182 1 329 4 
238 1 184 3 169 1 339 7 14 1 48 1 85 1 187 1 268 1 188 2 136 2 114 1 218 3 175 1 192 1 258 1 182 1 329 4 
211 3 238 5 110 1 184 10 263 4 156 1 48 2 49 1 268 2 187 4 188 5 136 3 114 2 5 3 218 15 55 1 365 1 194 1 164 3 58 2 223 1 169 1 339 31 63 3 14 2 67 1 85 4 175 1 258 1 105 1 45 1 381 1 182 1 329 16 
238 1 97 1 110 2 184 4 48 1 187 1 268 1 188 3 136 2 114 1 218 4 291 1 194 2 58 4 339 9 169 1 14 1 67 2 85 1 175 1 105 2 381 1 329 5 182 1 
22 1 354 1 183 2 27 2 265 1 186 1 314 1 99 1 2 1 50 1 3 1 190 1 101 1 363 1 80 1 120 1 57 1 250 1 342 1 65 1 256 1 203 1 303 1 233 1 176 1 206 1 350 1 151 1 93 2 107 1 
22 1 354 1 183 3 27 2 265 1 186 1 314 1 99 1 2 2 50 1 3 1 270 1 190 1 101 1 363 1 80 1 120 1 57 1 125 1 342 1 65 1 279 1 256 1 203 1 303 1 233 1 176 1 151 1 93 3 107 1 
22 1 183 2 27 2 265 1 314 1 186 1 2 2 50 1 3 1 270 1 190 1 101 1 363 1 80 1 120 1 57 1 125 1 342 1 65 1 256 1 233 1 176 1 151 1 93 2 107 1 
285 1 183 1 265 1 313 1 314 2 3 1 80 1 363 1 193 1 57 2 248 1 276 1 197 1 342 1 279 1 256 2 68 1 203 1 174 1 303 1 205 1 151 2 93 1 
22 1 354 1 183 1 27 2 265 1 186 1 314 1 99 1 50 1 3 1 101 1 363 1 80 1 57 1 125 1 250 1 342 1 256 1 203 1 303 1 233 1 176 1 206 1 151 1 93 1 107 1 
201 1 
98 1 286 2 3 2 247 1 193 1 334 1 8 1 248 2 196 1 197 1 11 2 143 2 297 5 253 2 340 1 342 2 66 2 204 1 104 1 148 6 207 1 208 2 20 2 210 1 261 1 212 1 311 3 26 1 265 2 313 1 155 4 356 2 112 1 216 1 362 1 363 1 80 1 121 2 221 1 366 1 319 1 35 2 369 1 227 1 375 2 170 5 379 1 129 2 174 1 283 1 326 1 89 1 181 1 95 1 94 1 
261 1 11 1 369 1 311 1 297 3 227 1 26 1 340 1 155 2 170 3 379 1 112 1 216 1 204 1 148 2 247 1 89 1 366 1 319 1 210 1 94 1 108 1 
261 1 369 1 143 1 311 1 297 3 227 1 26 1 340 1 155 3 170 3 379 1 112 1 216 1 204 1 148 1 247 1 89 1 334 1 121 1 366 1 319 1 210 1 94 1 108 1 
261 1 311 1 26 1 155 3 356 1 112 1 216 1 247 1 334 1 121 1 366 1 319 1 369 1 11 1 143 1 227 1 297 3 340 1 170 3 379 1 204 1 148 2 89 1 94 1 210 1 108 1 
98 1 286 2 7 1 247 1 334 5 196 1 59 1 11 4 143 4 297 5 340 1 253 2 66 1 204 1 104 1 148 7 207 1 208 2 20 2 210 1 108 1 261 1 212 1 26 1 311 3 155 6 356 4 157 1 112 1 216 1 121 5 366 1 319 1 224 1 35 1 369 1 226 1 227 1 375 2 170 5 379 1 326 1 89 1 94 1 
261 1 212 1 311 2 98 1 26 1 155 4 356 2 286 2 112 1 216 1 247 1 334 1 121 2 221 1 366 1 196 1 319 1 35 1 11 2 369 1 143 2 297 4 227 1 253 2 340 1 375 2 170 4 66 1 379 1 129 2 204 1 104 1 148 4 326 1 89 1 207 1 208 2 20 2 210 1 94 1 
261 1 212 1 311 2 26 1 98 1 155 4 356 2 286 2 112 1 216 1 7 1 247 1 334 1 121 1 366 1 319 1 196 1 224 1 59 1 35 1 11 2 369 1 143 2 227 1 297 4 253 2 340 1 375 2 170 4 66 1 379 1 204 1 104 1 148 4 326 1 89 1 207 1 208 2 20 2 94 1 210 1 
261 1 212 1 311 2 26 1 98 1 155 4 356 2 286 2 112 1 216 1 7 1 247 1 334 1 121 1 366 1 319 1 196 1 224 1 59 1 35 1 11 2 369 1 143 2 227 1 297 4 253 2 340 1 375 2 170 4 66 1 379 1 204 1 104 1 148 4 326 1 89 1 207 1 208 2 20 2 94 1 210 1 
261 1 212 1 311 2 26 1 98 1 264 1 155 4 356 2 286 2 112 1 216 1 246 2 7 1 247 1 334 1 121 1 366 1 319 1 196 1 35 1 11 2 369 1 143 2 251 1 227 1 297 4 340 1 170 4 341 1 378 2 66 1 379 1 129 2 204 1 104 1 148 4 89 1 207 1 208 2 94 1 210 1 
261 1 212 1 311 2 98 1 26 1 155 5 356 3 286 2 112 1 216 1 7 1 247 1 334 1 121 1 366 1 196 1 319 1 59 1 224 1 35 1 369 1 226 1 11 3 143 3 227 1 297 4 253 2 340 1 375 2 170 4 66 1 379 1 204 1 104 1 148 5 326 1 89 1 207 1 208 2 20 2 94 1 210 1 
261 1 212 1 311 2 98 1 26 1 155 5 356 3 286 2 112 1 216 1 7 1 247 1 334 1 121 1 366 1 196 1 319 1 59 1 224 1 35 1 369 1 226 1 11 3 143 3 227 1 297 4 253 2 340 1 375 2 170 4 66 1 379 1 204 1 104 1 148 5 326 1 89 1 207 1 208 2 20 2 94 1 210 1 
261 1 212 1 311 2 98 1 26 1 264 1 155 4 356 2 286 2 112 1 216 1 246 2 247 1 334 1 121 1 221 1 366 1 196 1 319 1 35 1 11 2 369 1 143 2 297 4 227 1 340 1 170 4 378 2 66 1 379 1 129 2 204 1 104 1 148 4 89 1 207 1 208 2 210 1 94 1 
308 1 110 1 184 2 187 1 188 2 136 1 114 1 53 1 218 3 194 1 58 2 169 1 339 6 62 1 14 1 67 1 85 1 230 1 146 1 175 1 346 2 347 1 105 1 182 1 329 3 96 1 
211 1 308 2 238 1 110 2 184 2 263 3 49 1 100 1 187 2 188 1 53 11 5 3 218 6 194 2 164 2 58 4 223 1 295 1 339 14 320 1 278 1 63 2 67 2 302 1 85 1 380 1 230 4 146 1 346 1 347 11 105 2 150 1 329 8 
308 1 110 1 313 1 265 1 100 1 3 1 245 1 218 1 80 1 363 1 193 1 194 1 9 1 58 2 248 1 249 1 34 1 32 1 367 1 369 2 227 1 339 2 299 1 320 1 342 1 67 1 343 1 230 1 146 1 346 1 282 1 105 1 150 1 327 1 92 1 71 1 94 2 329 1 
238 4 184 8 287 2 100 1 3 3 187 3 188 4 245 1 136 1 53 7 193 2 194 3 58 6 248 1 249 1 293 2 339 20 299 2 63 2 14 1 342 3 67 3 343 1 146 3 346 2 347 7 105 3 150 1 211 2 308 3 110 3 265 3 313 2 269 1 114 1 218 10 363 2 80 2 164 2 34 1 318 2 367 2 125 1 369 3 169 1 168 1 227 1 320 1 374 2 85 3 281 2 230 7 175 1 327 2 131 1 92 2 182 1 94 3 329 10 
308 2 330 1 110 2 185 1 313 3 265 8 100 1 3 8 245 1 218 1 80 2 363 2 139 1 193 2 364 2 194 2 58 4 195 1 248 2 249 1 125 1 197 1 369 1 227 1 339 2 171 1 342 7 67 2 126 1 343 1 174 1 146 2 105 2 350 1 150 1 152 1 94 1 329 1 96 1 
211 1 308 1 110 1 184 1 187 1 188 1 245 1 53 1 218 2 194 1 164 1 58 2 102 1 369 1 370 1 227 1 339 3 320 1 63 1 321 1 67 1 85 1 343 1 230 1 146 1 347 1 105 1 94 1 329 1 
308 1 238 1 110 1 184 1 339 2 312 1 67 1 187 1 230 1 146 1 53 1 347 1 105 1 194 1 164 1 58 2 329 2 96 1 
211 1 308 1 110 1 184 1 339 2 67 1 85 1 188 1 230 1 146 1 53 1 218 2 30 1 347 1 105 1 194 1 58 2 96 1 
211 1 308 1 238 1 110 1 184 2 339 4 63 1 67 1 85 1 187 1 188 1 230 2 146 1 53 2 218 2 347 2 105 1 194 1 164 1 58 2 329 2 96 1 
308 1 238 1 110 1 184 1 339 2 312 1 67 1 187 1 230 1 146 1 53 1 347 1 105 1 194 1 164 1 152 1 58 2 329 2 
211 1 308 1 110 1 184 1 339 2 67 1 85 1 188 1 230 1 146 1 53 1 218 2 30 1 347 1 105 1 194 1 152 1 58 2 
211 1 308 1 238 1 110 1 184 2 339 4 63 1 67 1 85 1 187 1 188 1 230 2 146 1 53 2 218 2 347 2 105 1 194 1 164 1 152 1 58 2 329 2 
211 1 308 1 238 1 110 1 184 2 339 4 63 1 67 1 85 1 187 1 188 1 230 2 146 1 53 2 218 2 347 2 105 1 194 1 164 1 58 2 329 2 
308 1 110 1 265 1 313 1 287 1 100 1 3 1 218 1 80 1 363 1 193 1 194 1 58 2 248 1 367 1 369 1 339 2 299 1 342 1 67 1 146 1 346 1 105 1 150 1 327 1 92 1 329 1 94 1 
308 1 110 1 265 1 313 1 100 1 3 1 4 1 218 1 80 1 363 1 193 1 194 1 58 2 248 1 367 1 369 1 12 1 339 2 342 1 67 1 87 1 146 1 346 1 105 1 150 1 92 1 329 1 94 1 
211 1 308 1 238 1 110 1 184 2 339 4 320 1 63 1 67 1 85 1 187 1 188 1 230 2 146 1 53 2 218 2 347 2 105 1 194 1 164 1 58 2 329 2 
211 1 308 1 238 1 110 1 184 2 265 1 313 1 287 1 187 1 3 1 188 1 53 2 218 2 80 1 363 1 193 1 164 1 194 1 58 2 367 1 369 1 339 4 299 1 374 1 63 1 342 1 67 1 85 1 230 2 146 1 347 2 105 1 350 1 327 1 92 1 329 2 94 1 
211 1 308 1 238 1 110 1 184 1 187 1 245 1 53 1 218 1 194 1 164 1 58 2 369 1 370 1 227 1 339 3 320 1 63 1 321 1 322 1 67 1 85 1 343 1 230 1 146 1 347 1 105 1 94 1 329 2 
211 3 236 1 238 3 110 2 74 1 184 6 263 2 49 1 187 3 51 1 188 3 5 1 218 10 119 1 291 1 194 2 164 3 58 4 223 1 82 2 339 19 63 3 67 2 83 1 85 3 147 1 105 2 46 2 329 9 47 1 
211 2 238 2 110 3 184 4 74 1 213 1 263 2 214 1 187 3 188 2 5 2 218 12 119 1 162 1 291 1 194 3 164 3 58 6 223 2 82 1 339 26 63 3 37 1 67 3 85 2 83 2 147 2 105 3 305 1 90 1 46 4 381 2 329 14 47 1 
211 4 236 1 238 4 110 3 213 1 74 1 184 8 263 4 214 1 49 1 187 5 188 4 136 1 114 1 5 3 218 21 119 1 162 1 291 1 194 3 164 4 58 6 223 3 82 1 169 1 339 41 63 4 14 1 37 1 67 3 83 2 85 5 147 1 175 1 105 3 305 1 90 1 284 1 46 4 381 1 182 1 329 20 47 1 
211 3 236 1 238 3 110 4 213 1 74 1 184 7 263 4 214 1 49 1 187 5 188 4 136 1 114 1 5 3 218 18 119 1 162 1 291 1 194 4 164 4 58 8 223 3 82 1 169 1 339 38 63 4 14 1 37 1 67 4 83 2 85 4 147 1 175 1 105 4 305 1 90 1 284 1 46 4 381 2 182 1 329 20 47 1 
211 7 238 7 110 2 213 1 74 1 184 14 263 4 214 1 49 2 187 8 188 7 136 1 114 1 5 4 218 25 119 1 162 1 291 1 194 2 164 7 58 4 223 2 82 1 169 1 339 52 63 7 14 1 37 1 67 2 302 2 83 1 85 8 147 1 175 1 105 2 305 1 90 1 46 4 381 1 182 1 329 27 47 1 
133 1 160 1 373 1 17 1 28 1 77 1 323 1 220 1 259 1 113 1 
21 1 349 1 
60 1 133 1 373 1 17 1 28 1 77 1 70 1 323 1 222 1 
191 1 42 1 
228 1 179 1 202 1 
133 1 297 1 0 2 373 1 36 1 170 1 77 1 28 1 323 1 160 1 69 1 17 1 166 1 165 1 220 1 121 1 306 1 259 1 
133 1 297 1 0 2 373 1 36 1 170 1 77 1 28 1 323 1 160 1 69 1 17 1 166 1 165 1 220 1 121 1 306 1 259 1 
133 1 297 1 0 2 373 1 36 1 170 1 77 1 28 1 323 1 160 1 69 1 17 1 166 1 165 1 220 1 121 1 306 1 259 1 
191 1 42 1 228 1 
191 1 42 1 228 1 
179 1 202 1 
228 1 179 1 202 1 
75 1 39 1 
133 1 21 1 310 1 72 1 0 1 75 1 134 1 28 1 77 1 357 1 245 2 165 1 369 2 297 1 227 2 36 1 373 1 170 1 323 1 128 1 39 1 343 2 346 1 17 1 349 1 132 1 94 2 
308 1 330 1 110 1 313 1 265 2 100 1 3 2 218 1 80 1 363 1 193 1 364 2 219 1 194 1 58 2 141 1 369 2 227 2 339 2 320 1 171 1 342 2 67 1 257 1 146 1 231 1 88 1 105 1 150 1 94 2 329 1 
125 1 22 1 27 2 199 1 265 2 342 2 186 1 314 1 99 1 50 1 38 1 3 2 233 1 176 1 80 1 363 1 350 1 177 1 107 1 
125 1 22 1 27 2 199 1 265 1 342 1 186 1 314 1 99 1 50 1 3 1 159 1 233 1 176 1 363 1 80 1 107 1 
197 1 313 1 265 1 342 1 314 1 68 1 3 1 174 1 80 1 363 1 193 1 177 1 248 1 352 1 
125 1 22 1 27 2 199 1 265 1 342 1 186 1 314 1 99 1 50 1 38 1 3 1 233 1 176 1 80 1 363 1 177 1 107 1 
300 1 
35 1 62 1 334 1 324 1 121 1 66 1 137 1 
212 1 98 1 311 1 334 1 121 2 196 1 35 1 297 1 253 1 375 1 170 1 66 1 129 1 104 1 148 1 326 1 20 1 
98 4 332 1 3 3 187 2 137 1 193 3 334 2 336 1 248 1 140 3 196 4 10 2 297 5 63 2 342 3 66 8 104 4 16 6 148 5 350 1 304 2 20 6 260 2 211 2 23 1 309 2 212 4 311 3 313 10 265 3 216 2 116 1 115 2 80 4 363 3 161 1 316 2 164 2 121 8 124 2 318 2 367 3 35 9 225 2 170 5 324 1 172 2 377 2 85 2 129 12 283 2 41 1 328 6 95 1 
211 2 309 2 212 2 311 1 213 1 98 2 263 1 214 1 187 2 79 1 5 1 162 1 164 2 334 2 121 5 124 1 223 1 196 2 35 8 296 1 297 1 63 2 170 1 66 5 85 2 129 6 16 5 104 2 283 1 148 1 305 1 90 1 328 5 20 3 95 1 
309 2 212 1 98 1 242 1 187 1 245 1 114 1 196 1 59 1 35 2 369 1 370 1 252 1 297 1 371 1 227 1 14 1 170 1 66 1 85 1 343 1 104 1 178 1 19 1 94 1 182 1 
35 1 212 1 98 1 324 1 66 1 137 1 104 1 334 1 121 1 196 1 
211 2 35 5 309 2 63 2 66 5 85 2 187 2 129 10 16 5 164 2 121 5 124 1 328 5 318 1 20 5 
148 1 297 1 311 1 334 1 170 1 121 1 
23 1 212 2 98 2 311 2 313 1 265 4 3 4 116 2 54 1 362 1 80 1 363 1 193 1 8 1 248 2 33 1 196 2 35 2 197 1 297 3 342 4 170 3 66 2 174 1 104 1 283 2 148 4 44 1 95 2 
237 1 308 1 110 1 265 1 313 1 287 1 100 1 3 1 245 2 218 1 363 1 80 1 193 1 194 1 58 2 248 1 367 1 369 3 370 2 339 1 227 2 299 1 342 1 67 1 343 2 146 1 346 1 105 1 327 1 92 1 19 1 94 3 
35 1 212 1 98 1 66 2 129 4 136 1 16 2 104 1 283 1 334 2 121 4 328 2 20 2 196 1 95 1 
239 1 373 1 323 1 
239 1 373 1 323 1 
160 1 373 1 323 1 123 1 39 1 
239 1 373 1 323 1 
373 1 323 1 255 1 
373 1 323 1 255 1 
373 1 323 1 255 1 
373 1 323 1 
28 1 77 1 
238 1 110 2 339 8 184 3 169 1 14 1 67 2 85 1 187 1 188 2 136 1 114 1 218 4 175 1 105 2 194 2 58 4 381 1 182 1 329 4 
169 1 184 2 339 6 62 1 14 1 85 1 187 1 188 2 136 1 114 1 218 3 175 1 182 1 329 3 
211 1 238 1 110 1 184 2 339 4 63 1 67 1 85 1 358 1 187 1 188 1 218 2 105 1 194 1 164 1 58 2 329 2 
211 1 238 1 339 7 184 2 263 2 63 1 85 1 49 1 187 1 188 1 5 1 218 4 164 1 223 1 329 3 
211 2 238 4 110 2 184 9 263 2 49 1 187 3 188 5 136 1 114 2 5 2 218 12 164 2 194 2 58 4 169 1 339 23 63 2 14 2 67 2 85 3 302 1 86 1 380 1 175 1 105 2 381 2 182 1 329 11 
218 1 339 1 263 1 
5 1 339 1 329 1 
211 1 238 1 110 1 339 6 184 3 63 1 67 1 358 1 85 1 187 1 188 2 218 3 105 1 194 1 164 1 58 2 318 1 329 3 
211 2 238 1 110 1 213 1 184 2 263 1 214 1 187 2 188 1 5 1 218 6 162 1 291 1 194 1 164 2 58 2 223 1 339 12 63 2 67 1 85 2 105 1 90 1 305 1 329 6 
238 1 339 6 184 2 14 1 85 1 187 1 188 1 114 1 218 3 182 1 329 3 
238 1 110 1 184 2 169 1 339 3 14 1 67 1 86 1 188 1 114 1 218 2 175 1 105 1 194 1 58 2 381 1 329 1 
238 2 110 1 252 1 184 5 339 10 14 2 67 1 85 2 187 2 188 3 114 2 218 5 105 1 291 1 194 1 58 2 329 5 182 1 
238 1 110 1 339 2 184 1 67 1 187 1 105 1 291 1 194 1 164 1 58 2 329 2 
211 1 238 1 110 1 184 2 339 4 63 1 67 1 85 1 187 1 188 1 218 2 105 1 291 1 194 1 164 1 58 2 329 2 
236 1 238 1 110 3 339 3 184 2 14 1 67 3 86 1 188 1 114 1 218 2 105 3 291 1 194 3 58 6 381 1 329 1 
211 3 236 1 238 5 110 5 184 12 263 4 156 1 358 1 49 1 187 5 188 7 136 1 114 3 5 3 218 18 55 1 365 1 291 1 194 5 164 3 58 10 223 1 169 1 339 34 63 3 14 3 67 5 85 5 86 1 175 1 105 5 381 2 182 2 329 16 
110 1 213 1 184 2 263 1 187 1 188 2 136 1 5 1 114 1 218 4 291 1 194 1 58 2 223 1 339 8 169 1 14 1 67 1 85 1 175 1 105 1 329 4 182 1 
238 1 110 2 213 1 184 3 263 2 358 1 49 1 187 2 188 2 136 1 114 1 5 1 218 5 291 1 194 2 164 1 58 4 223 1 169 1 339 11 63 1 14 1 67 2 85 1 175 1 105 2 182 1 329 6 
211 2 238 1 110 3 213 1 184 4 263 1 214 1 358 1 187 3 188 3 136 1 114 1 5 1 218 10 162 1 291 1 194 3 164 2 58 6 223 1 169 1 339 19 63 2 14 1 67 3 85 3 175 1 105 3 90 1 305 1 381 1 182 1 329 9 
211 1 238 2 110 3 213 1 184 5 263 1 214 1 358 1 187 3 188 3 136 1 114 1 5 1 218 7 162 1 291 1 194 3 164 2 58 6 223 1 169 1 339 17 63 2 14 1 67 3 85 2 175 1 105 3 90 1 305 1 381 1 182 1 329 10 
110 1 213 1 184 2 263 1 187 1 188 2 136 1 5 1 114 1 218 4 291 1 194 1 58 2 223 1 339 8 169 1 14 1 67 1 85 1 175 1 105 1 329 4 182 1 
211 2 238 1 110 1 213 1 184 2 263 1 214 1 187 2 188 1 5 1 218 6 162 1 291 1 194 1 164 2 58 2 223 1 339 12 63 2 67 1 85 2 105 1 90 1 305 1 329 6 
211 1 238 2 110 4 213 1 184 5 263 1 214 1 358 1 187 3 188 3 136 1 114 1 5 1 218 8 162 1 291 1 194 4 164 2 58 8 223 1 169 1 339 18 63 2 14 1 67 4 85 2 175 1 105 4 305 1 90 1 381 2 182 1 329 10 
211 2 236 1 238 3 110 4 213 1 184 6 263 1 214 1 187 3 188 3 5 1 218 7 162 1 291 1 194 4 164 3 58 8 223 1 339 16 63 3 67 4 85 2 105 4 305 1 90 1 381 2 329 9 
238 3 339 7 169 2 184 6 14 3 85 1 187 1 188 3 114 3 218 4 175 1 182 1 329 3 
211 1 236 1 238 1 110 4 213 1 184 4 263 1 214 1 187 3 188 3 136 1 114 1 5 1 218 8 162 1 291 1 194 4 164 2 58 8 223 1 169 1 339 18 63 2 14 1 67 4 85 2 175 1 105 4 305 1 90 1 381 2 182 1 329 10 
346 1 369 1 227 1 247 1 64 1 244 1 94 1 
307 1 369 1 154 1 227 1 64 1 355 1 243 1 244 1 271 1 346 1 247 1 94 1 
197 1 80 1 363 1 193 1 313 1 62 1 265 1 342 1 248 1 3 1 174 1 
369 2 227 1 299 1 313 1 265 1 342 1 343 1 3 1 245 1 346 1 80 1 363 1 193 1 92 1 248 1 249 1 367 1 94 2 
261 1 265 1 313 3 3 1 245 1 116 1 363 1 80 1 193 2 249 1 367 2 319 1 10 1 225 1 369 2 227 2 299 1 340 1 342 1 343 2 346 1 92 1 94 2 
261 1 265 2 313 3 135 1 3 2 245 1 4 1 116 1 363 1 80 1 193 2 249 1 367 2 319 1 10 1 225 1 369 2 227 2 340 1 342 2 343 2 346 1 92 1 94 2 
260 1 225 1 297 2 265 3 313 4 170 2 342 3 135 1 280 1 3 3 216 1 360 1 116 1 148 1 80 1 363 1 193 1 334 1 121 1 248 1 140 1 367 1 10 1 
260 1 225 1 297 2 265 3 313 4 170 2 342 3 135 1 3 3 216 1 116 1 115 1 148 1 80 1 363 1 193 1 334 1 121 1 248 1 140 1 367 1 10 1 
80 1 363 1 185 1 265 1 342 1 3 1 
125 1 185 1 298 1 265 7 313 3 171 1 342 6 126 1 78 1 3 7 161 1 363 2 80 3 139 1 193 2 364 1 350 1 18 1 195 1 248 2 367 1 
308 2 110 2 184 2 313 1 265 1 287 1 187 1 3 1 188 2 245 1 136 1 53 1 114 1 218 3 80 1 363 1 193 1 194 2 58 4 249 1 367 1 293 1 369 2 339 6 169 1 227 1 320 1 374 1 299 1 14 1 342 1 67 2 85 1 343 1 230 1 146 2 231 1 346 2 175 1 347 1 105 2 350 1 327 1 92 1 329 3 182 1 94 2 
260 1 23 1 212 2 98 2 311 1 265 1 313 2 3 1 137 1 216 1 115 1 334 1 121 1 248 1 140 1 196 2 35 1 297 3 342 1 170 3 324 1 172 1 66 1 377 1 128 1 104 2 148 2 304 1 
260 1 185 1 265 2 313 2 342 2 3 2 41 1 161 1 363 1 80 2 193 1 350 1 367 1 
197 1 265 4 313 1 342 4 135 1 3 4 174 1 149 1 80 1 363 1 193 1 350 1 248 1 
298 1 265 2 313 1 342 2 78 1 3 2 288 1 116 1 363 1 80 2 193 1 131 1 367 1 153 1 
22 1 233 1 27 1 80 1 363 1 265 1 342 1 186 1 248 1 3 1 
125 1 80 1 363 1 88 1 193 1 313 1 265 2 350 1 171 1 342 2 3 2 
197 1 265 5 313 3 342 4 171 1 126 1 3 5 174 1 116 1 149 1 363 2 80 2 193 2 350 1 248 1 195 1 
197 1 265 5 144 1 313 3 342 4 171 1 126 1 3 5 174 1 116 1 149 1 363 2 80 2 193 2 350 1 248 1 
369 2 227 1 313 1 265 1 342 1 343 1 3 1 245 1 4 1 346 1 80 1 363 1 193 1 92 1 248 1 249 1 367 1 94 2 
116 1 80 2 363 1 161 1 298 1 193 1 313 1 265 1 18 1 342 1 78 1 3 1 367 1 
141 1 369 1 227 1 61 1 234 1 219 1 351 1 257 1 94 1 
109 1 138 1 234 1 
346 1 61 1 234 1 351 1 325 1 
261 1 109 1 297 2 26 1 340 1 61 2 170 2 128 1 52 1 216 1 325 2 346 1 138 1 234 1 334 1 351 2 91 1 121 1 319 1 
190 1 120 1 62 1 65 1 
190 1 183 1 120 1 65 1 93 1 203 1 303 1 
151 1 256 1 93 1 
190 1 24 1 183 3 206 1 120 1 56 1 65 1 93 3 127 1 209 2 203 1 303 1 
190 1 183 2 120 1 65 1 2 1 93 2 203 1 303 1 189 1 
368 1 183 1 27 1 186 1 200 1 203 1 303 1 190 1 206 1 176 1 93 1 
190 1 183 1 206 1 65 1 93 1 203 1 303 1 
183 1 206 1 120 1 65 2 93 1 203 1 303 1 
190 1 25 1 183 2 206 1 65 1 93 2 235 1 203 2 275 1 303 2 
368 1 183 3 65 1 2 2 203 1 303 1 190 2 43 1 206 1 120 1 93 3 274 1 292 1 
27 2 183 2 65 1 186 1 267 1 2 1 50 1 203 1 303 1 190 1 233 1 206 1 176 1 120 1 93 2 
368 1 183 4 240 1 65 1 2 2 203 2 303 2 189 1 190 2 206 1 120 1 93 4 292 1 
190 1 183 1 206 1 120 1 65 1 93 1 203 1 303 1 
368 1 24 1 183 4 65 2 266 1 2 2 203 1 303 1 190 3 120 2 56 1 93 4 209 1 292 1 
183 2 65 1 2 1 203 1 303 1 15 1 190 1 206 1 120 1 93 2 122 1 180 1 
190 1 24 1 183 3 206 1 120 1 56 2 65 1 93 3 209 2 203 1 303 1 290 1 
190 2 317 1 337 1 106 2 
198 1 183 1 206 1 93 1 203 1 303 1 
190 1 183 2 206 1 120 1 65 1 2 1 93 2 274 1 203 1 303 1 
262 1 
190 1 183 1 206 1 120 1 65 1 93 1 203 1 303 1 
183 3 65 1 2 1 203 1 303 1 190 1 206 1 120 1 93 3 274 1 209 1 
190 1 368 1 266 1 292 1 
190 1 65 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 262 1 190 2 221 1 24 1 3 1 324 1 55 5 200 2 29 1 333 9 77 3 153 2 248 1 371 6 131 2 276 2 13 9 205 1 206 1 39 1 18 1 183 1 255 2 338 4 20 1 376 2 258 1 
188 1 190 2 262 1 221 1 24 1 3 1 324 1 55 5 200 2 29 1 333 9 77 3 153 2 248 1 371 6 131 2 276 2 13 9 205 1 206 1 39 1 18 1 183 1 255 2 338 4 20 1 376 2 258 1 
188 1 190 2 262 1 221 1 24 1 3 1 324 1 55 6 200 2 29 1 333 10 77 4 153 2 248 1 371 7 131 2 276 2 13 10 205 1 206 1 39 1 18 1 183 1 255 2 338 5 20 1 376 2 258 1 
188 1 190 2 262 1 221 1 24 1 3 1 324 1 55 4 200 2 29 1 333 7 77 2 153 2 248 1 371 4 131 1 276 2 13 7 205 1 206 1 39 1 183 1 255 2 338 3 20 1 376 2 258 1 
262 1 190 1 131 2 13 4 205 1 24 1 18 1 183 1 255 1 55 3 200 1 338 2 376 1 77 1 333 4 153 1 248 1 371 3 
188 1 262 1 276 1 13 2 369 1 71 1 183 1 255 1 55 1 200 1 376 1 273 1 333 2 258 1 153 1 248 1 
262 1 276 1 13 3 3 1 183 1 255 2 55 2 338 1 376 2 333 3 77 1 248 1 371 1 
262 1 190 1 3 1 24 1 55 5 200 1 77 3 333 9 153 1 248 1 371 7 131 2 276 1 13 9 205 1 206 1 39 1 236 1 18 1 183 1 255 2 338 4 376 2 216 1 
262 1 190 1 3 1 24 1 55 5 200 1 77 3 333 9 153 1 248 1 371 7 131 2 276 1 13 9 205 1 206 1 39 1 236 1 18 1 183 1 255 2 338 4 376 2 216 1 
31 1 58 1 49 1 
31 1 347 2 15 1 
136 2 101 1 12 2 51 1 231 2 251 2 235 2 96 2 
170 1 293 2 51 1 124 1 96 2 299 1 101 1 99 1 231 2 102 1 149 1 75 1 349 1 76 2 332 1 129 2 274 1 79 1 249 1 157 1 12 3 251 3 233 1 357 1 181 1 235 2 362 1 17 1 136 2 311 1 208 1 162 2 45 1 184 1 167 1 256 2 260 1 
136 1 210 1 12 1 51 1 166 1 231 1 251 1 159 1 235 1 96 1 
31 1 12 1 68 1 141 1 250 1 251 1 159 1 358 1 136 1 126 1 113 1 247 1 49 1 261 1 
31 1 12 1 68 1 141 1 250 2 251 1 159 1 235 1 358 2 96 1 136 1 113 1 231 1 49 1 261 1 
132 1 250 1 278 1 358 1 237 1 
31 1 132 1 191 1 164 1 250 2 278 1 358 2 49 1 
132 1 250 1 358 1 
218 1 12 1 51 1 250 1 278 1 251 1 159 1 358 1 235 1 96 1 136 1 210 1 166 1 231 1 
31 1 
31 1 132 1 191 1 250 2 278 1 358 2 49 1 291 1 
31 1 374 1 59 1 191 1 132 2 193 1 250 5 278 2 279 2 358 5 361 1 182 2 327 1 207 2 313 1 377 1 289 1 152 1 49 1 
101 1 58 1 
372 1 12 2 251 2 235 1 96 1 136 2 101 2 73 1 231 1 
353 1 37 1 320 1 
170 1 249 1 157 1 12 1 293 1 251 1 124 1 357 1 344 1 208 1 101 1 45 1 184 1 256 1 76 1 260 1 
80 1 170 1 157 1 249 1 12 2 293 1 251 2 357 1 124 1 158 1 320 1 235 1 136 1 208 1 45 1 184 1 231 1 256 1 76 1 260 1 
80 2 372 1 12 5 367 1 251 5 158 1 368 1 235 4 96 1 136 5 126 1 101 1 329 1 231 4 
136 2 210 1 12 2 231 2 251 2 159 1 245 1 235 2 
80 1 136 3 101 1 12 3 231 3 251 3 235 3 96 1 
136 1 210 1 12 1 231 1 251 1 159 1 235 1 
136 1 372 1 12 1 73 1 231 1 251 1 159 1 235 1 96 1 
263 1 170 1 293 1 68 1 141 1 51 1 124 1 96 2 101 1 99 1 231 3 75 1 349 1 76 1 129 2 274 1 79 1 80 1 372 1 157 1 249 1 12 4 250 1 251 4 233 1 357 1 158 1 159 1 181 1 235 3 358 1 362 1 17 1 136 3 311 1 208 1 162 1 45 1 285 1 113 1 184 1 256 1 260 1 261 1 
136 2 80 1 126 1 101 1 12 2 329 1 231 1 251 2 235 1 
31 1 80 2 263 1 372 1 12 3 68 1 141 1 250 1 251 3 159 1 158 1 358 1 235 3 96 1 136 3 113 1 74 1 231 3 261 1 
80 1 372 1 12 2 353 1 251 2 320 1 235 2 96 1 136 2 231 2 
170 1 249 1 157 1 12 1 293 1 251 1 124 1 357 1 208 1 101 1 45 1 184 1 256 1 76 1 260 1 
170 1 249 1 157 1 12 1 293 1 251 1 357 1 101 1 271 1 45 1 184 1 46 1 256 1 76 1 260 1 
189 1 341 1 342 1 70 1 295 1 224 1 320 2 99 1 75 1 129 2 150 1 274 1 79 2 10 1 275 1 81 1 353 2 37 2 233 1 181 1 362 1 112 1 162 4 167 2 
136 1 12 1 141 1 231 1 251 1 159 1 245 1 235 1 
229 1 370 1 
229 1 370 1 
69 1 48 1 
69 1 48 1 
69 1 48 1 
92 1 229 1 370 1 
92 1 229 1 370 1 
229 1 370 1 97 1 
229 2 69 1 118 1 48 1 370 2 110 1 
92 1 229 1 370 1 
310 1 229 1 370 1 
310 1 229 1 370 1 
310 1 229 1 370 1 
23 1 268 1 269 1 198 1 97 1 101 1 229 1 231 2 6 1 303 1 370 1 12 2 204 1 250 1 251 2 253 1 38 1 235 2 358 1 136 2 211 1 375 1 257 1 91 1 
31 1 204 3 93 1 319 1 250 2 253 1 268 2 358 2 325 1 211 2 314 2 229 2 375 2 213 1 118 1 348 1 6 2 370 2 9 1 
190 1 200 1 153 1 
200 1 369 1 153 1 
190 2 100 1 200 3 171 1 194 1 369 1 
190 1 200 2 171 1 194 1 88 1 369 1 
190 1 200 2 171 1 194 2 369 1 
189 1 23 1 191 1 294 1 193 1 341 1 197 1 25 1 198 1 345 1 301 1 347 3 5 2 31 2 352 1 275 1 202 2 335 2 132 1 250 5 278 4 15 1 36 1 279 1 358 5 182 1 361 3 112 1 207 1 313 2 49 1 91 1 
66 1 189 3 220 1 191 1 193 1 341 3 244 5 197 2 25 1 174 1 347 9 31 5 352 2 275 3 202 6 335 6 132 6 250 9 278 7 15 3 36 3 279 2 358 9 182 2 361 8 237 5 41 1 112 3 207 2 313 6 377 1 169 1 187 1 91 4 49 1 
189 1 341 1 197 1 301 1 345 1 347 4 5 1 31 3 352 1 275 1 202 2 335 2 250 3 278 2 15 2 36 1 279 1 358 3 182 1 361 3 112 1 207 1 313 2 377 1 49 1 91 1 
66 1 189 2 341 2 197 1 301 1 345 1 174 1 347 7 5 2 31 4 352 1 275 2 202 4 335 4 250 4 278 3 15 3 36 2 279 1 358 4 182 1 361 5 41 1 112 2 207 1 313 4 377 1 49 1 91 2 
45 1 90 1 58 1 
45 1 177 1 
16 1 
45 1 357 1 260 1 
45 1 302 1 
45 1 260 1 
137 1 45 3 176 1 357 1 90 2 260 1 
10 2 275 1 265 1 70 3 84 1 112 1 225 1 162 7 227 1 330 1 272 1 167 4 242 1 79 3 315 1 381 2 364 1 
10 2 275 1 265 1 70 3 84 1 112 1 225 1 162 7 227 1 330 1 272 1 167 4 242 1 79 3 315 1 381 2 364 1 
10 2 275 1 265 1 70 3 84 1 112 1 225 1 282 1 162 7 227 1 272 1 330 1 167 4 242 1 79 3 315 1 381 2 364 1 
189 3 341 3 265 2 70 10 0 1 143 1 225 2 199 1 99 1 227 2 228 3 272 1 330 1 103 1 75 1 129 2 79 15 10 5 275 4 36 3 233 1 234 1 181 1 84 2 112 4 162 31 284 1 167 16 242 1 379 4 63 1 315 1 381 3 364 5 
265 1 70 4 4 1 225 1 99 2 227 1 272 1 103 1 75 2 129 4 151 1 79 4 10 3 275 1 233 2 181 2 84 1 112 1 162 9 167 5 242 1 381 2 315 1 364 1 
190 1 121 1 262 1 317 1 293 1 94 1 369 1 270 1 55 1 100 1 200 2 76 1 333 2 153 1 248 1 371 1 157 1 305 1 276 1 133 1 13 2 60 1 183 1 255 1 240 1 287 1 376 1 184 1 256 1 168 1 
190 1 121 1 317 1 293 1 1 1 369 1 270 1 55 1 100 1 226 1 200 2 76 1 333 3 350 1 153 1 248 1 371 2 157 1 305 1 276 1 13 3 60 1 183 1 255 1 240 1 287 1 376 1 184 1 256 1 168 1 
121 1 190 1 293 1 1 1 369 1 270 1 55 1 100 1 226 1 200 2 76 1 333 2 153 1 248 1 371 2 157 1 276 1 13 2 60 1 183 1 240 1 287 1 184 1 256 1 168 1 
121 2 122 1 293 1 144 1 98 1 76 1 333 1 350 1 249 1 157 1 276 2 13 1 109 1 135 1 255 1 240 2 45 1 184 1 376 1 287 2 256 1 243 1 260 1 
190 1 121 1 262 1 317 1 293 1 369 1 270 1 100 1 226 1 200 2 76 1 333 1 153 1 157 1 305 1 276 1 133 1 13 1 60 1 255 1 240 1 287 1 376 1 184 1 256 1 168 1 
292 1 
140 1 50 2 191 3 293 2 193 1 141 1 195 1 296 1 197 1 145 1 347 2 247 1 8 1 154 1 249 2 157 1 12 1 250 5 252 1 251 1 15 2 159 1 254 1 358 5 61 2 361 2 207 1 19 2 313 2 113 1 114 1 256 2 260 1 261 1 122 1 68 1 326 4 126 1 76 2 31 2 334 2 132 6 83 2 35 1 279 1 280 1 180 2 135 1 182 1 136 1 45 1 184 1 138 2 186 1 49 1 
191 1 68 1 141 1 195 1 296 1 326 2 126 1 247 1 12 1 132 2 250 3 251 1 35 1 159 1 254 1 358 3 61 1 136 1 113 1 114 1 261 1 291 1 
191 1 68 1 141 1 195 1 296 1 326 3 126 1 247 1 31 1 132 1 12 1 83 1 250 3 251 1 35 1 159 1 254 1 358 3 136 1 113 1 114 1 261 1 49 1 291 1 
191 1 50 1 68 1 141 1 195 1 296 1 326 3 126 1 247 1 31 1 12 1 132 2 83 1 250 3 251 1 35 1 159 1 254 1 358 3 61 1 136 1 113 1 114 1 291 1 261 1 49 1 
191 3 50 4 193 1 264 1 68 1 141 1 343 1 195 1 296 1 53 1 145 1 326 6 126 1 247 1 154 1 334 2 31 5 132 7 12 1 83 4 250 5 35 1 251 1 15 2 279 1 159 1 254 1 180 2 358 5 361 1 182 1 61 4 136 1 207 1 19 2 313 1 113 1 114 1 138 2 21 1 64 1 49 5 291 1 261 1 
191 2 50 2 193 1 141 1 195 1 296 1 145 1 347 2 247 1 154 1 12 1 250 4 251 1 15 2 159 1 254 1 358 4 361 1 61 2 207 1 19 2 313 1 113 1 114 1 261 1 68 1 326 4 126 1 334 2 31 2 132 4 83 2 35 1 279 1 180 2 280 1 182 1 136 1 138 2 49 1 
50 2 191 2 264 1 193 1 68 1 141 1 343 1 195 1 296 1 145 1 326 4 126 1 247 1 154 1 31 1 334 2 132 4 12 1 83 2 250 4 251 1 35 1 15 2 159 1 279 1 254 1 180 2 358 4 61 2 361 1 182 1 136 1 207 1 19 2 313 1 113 1 114 1 138 2 21 1 49 1 261 1 
50 2 191 2 264 1 193 1 68 1 141 1 343 1 195 1 296 1 145 1 326 4 126 1 247 1 154 1 31 1 334 2 132 4 12 1 83 2 250 4 251 1 35 1 15 2 159 1 279 1 254 1 180 2 358 4 61 2 361 1 182 1 136 1 207 1 19 2 313 1 113 1 114 1 138 2 21 1 49 1 261 1 
50 2 191 2 193 1 68 1 141 1 343 1 195 1 196 2 296 1 326 4 126 1 347 2 28 2 247 1 154 1 155 1 31 1 132 4 12 1 83 2 250 4 251 1 35 1 34 1 159 1 279 1 254 1 180 2 358 4 61 2 361 1 182 1 136 1 207 1 19 2 313 1 85 1 113 1 114 1 49 1 261 1 
191 2 50 3 193 1 264 1 68 1 141 1 343 1 195 1 296 1 145 1 326 5 126 1 247 1 154 1 31 1 334 2 12 1 132 5 83 3 250 4 251 1 35 1 15 2 279 1 159 1 254 1 180 2 358 4 361 1 182 1 61 3 136 1 207 1 19 2 313 1 113 1 114 1 138 2 21 1 64 1 49 1 261 1 
191 2 50 3 193 1 264 1 68 1 141 1 343 1 195 1 296 1 145 1 326 5 126 1 247 1 154 1 31 1 334 2 12 1 132 5 83 3 250 4 251 1 35 1 15 2 279 1 159 1 254 1 180 2 358 4 361 1 182 1 61 3 136 1 207 1 19 2 313 1 113 1 114 1 138 2 21 1 64 1 49 1 261 1 
191 2 50 2 193 1 141 1 195 1 296 1 196 2 347 2 247 1 155 1 154 1 12 1 250 4 251 1 159 1 254 1 358 4 361 1 61 2 207 1 19 2 313 1 113 1 114 1 261 1 68 1 326 4 126 1 28 2 31 1 132 4 83 2 35 1 279 1 180 2 280 1 182 1 136 1 49 1 
10 2 275 1 81 1 353 1 70 2 37 1 233 1 320 1 181 1 362 1 112 1 225 1 101 2 162 6 99 1 227 1 272 1 167 3 75 1 129 2 242 1 274 1 58 1 381 1 79 3 315 1 
189 2 341 1 70 2 320 11 143 1 101 1 99 2 27 1 228 3 75 2 332 1 129 4 274 2 79 6 10 1 275 1 353 4 37 11 36 2 233 2 181 2 362 1 112 2 311 1 283 1 162 14 284 1 165 1 167 8 379 3 89 1 378 1 364 1 
170 1 293 1 124 1 344 1 146 1 101 1 99 1 231 1 76 1 75 1 129 2 332 1 274 1 79 1 80 1 157 1 249 1 12 2 353 1 251 2 357 1 233 1 158 1 235 1 181 1 362 1 136 1 311 1 208 1 162 2 45 1 184 1 117 1 167 1 256 1 378 1 215 1 260 1 
189 2 293 1 341 2 101 2 99 3 10 4 105 1 249 1 157 2 12 3 353 7 251 3 158 1 357 2 362 3 17 2 112 3 311 1 208 2 162 20 167 10 256 1 119 2 260 2 315 1 364 1 219 2 170 2 70 5 266 2 124 2 320 7 225 1 227 1 272 1 231 1 76 1 75 3 332 1 129 6 274 3 79 10 80 1 275 3 336 2 277 1 37 7 36 2 233 3 181 3 235 1 136 1 45 2 184 2 242 1 378 1 381 1 
122 1 293 8 318 1 94 1 299 2 99 2 226 1 231 1 76 8 75 2 129 4 332 1 274 2 79 1 80 1 81 1 157 2 249 2 12 1 107 1 306 1 251 1 14 1 356 1 233 2 235 1 181 2 135 1 362 2 136 1 311 1 162 2 45 3 184 2 167 1 256 7 380 1 22 1 260 2 
189 1 341 1 70 1 320 1 96 1 99 1 231 1 75 1 129 2 274 1 79 2 10 1 372 1 275 1 12 1 353 1 251 1 37 1 36 1 233 1 235 1 181 1 362 1 136 1 112 1 44 1 162 3 167 1 378 1 
189 1 81 1 353 1 70 1 37 1 233 1 224 1 320 1 181 1 362 1 112 1 162 2 99 1 167 2 75 1 129 2 274 1 364 1 
10 1 81 1 275 1 353 1 341 1 70 1 37 1 233 1 295 1 320 1 181 1 362 1 162 2 99 1 75 1 129 2 274 1 79 2 
189 1 341 1 70 2 320 2 99 1 75 1 129 2 274 1 79 2 10 1 81 1 275 1 353 2 36 1 37 2 233 1 181 1 362 1 112 1 162 4 167 2 364 1 
189 1 353 1 70 1 37 1 233 1 224 1 320 1 181 1 362 1 112 1 162 2 99 1 167 2 75 1 129 2 22 1 274 1 364 1 
10 1 275 1 353 1 341 1 70 1 37 1 233 1 295 1 320 1 181 1 362 1 162 2 99 1 75 1 129 2 22 1 274 1 79 2 
189 1 341 1 70 2 320 2 99 1 75 1 129 2 274 1 79 2 10 1 275 1 353 2 36 1 37 2 233 1 181 1 362 1 112 1 162 4 167 2 22 1 364 1 
189 1 341 1 70 2 320 2 99 1 75 1 129 2 274 1 79 2 10 1 275 1 353 2 36 1 37 2 233 1 181 1 362 1 112 1 162 4 167 2 364 1 
170 1 293 1 124 1 101 1 99 1 76 1 75 1 332 1 129 2 274 1 79 1 157 1 249 1 12 1 251 1 357 1 233 1 181 1 17 1 362 1 311 1 208 1 162 2 45 1 184 1 167 1 256 1 260 1 
170 1 293 1 101 1 99 1 271 1 76 1 75 1 332 1 129 2 274 1 79 1 157 1 249 1 12 1 251 1 357 1 233 1 181 1 362 1 311 1 162 2 45 1 212 1 184 1 167 1 46 1 256 1 260 1 
189 1 341 1 70 2 320 2 99 1 75 1 129 2 274 1 79 2 10 1 275 1 353 2 36 1 37 2 233 1 181 1 362 1 112 1 162 4 167 2 378 1 364 1 
189 1 170 1 293 1 341 1 70 2 124 1 94 1 320 2 99 1 76 1 75 1 129 2 274 1 79 2 10 1 275 1 157 1 12 1 353 2 336 1 251 1 37 2 36 1 357 1 233 1 181 1 17 1 362 1 112 1 208 1 162 4 45 1 184 1 167 2 256 1 260 1 364 1 
189 1 341 1 70 1 320 1 96 1 323 1 99 1 231 1 75 1 129 2 274 1 79 1 372 1 275 1 12 1 353 1 251 1 36 1 37 1 233 1 235 1 181 1 362 1 136 1 112 1 162 3 167 2 378 1 364 1 
189 3 67 1 341 3 70 6 267 1 321 1 95 1 143 1 72 1 99 2 228 1 75 2 129 4 151 1 79 10 10 3 203 2 275 3 36 3 233 2 181 2 112 3 363 2 162 19 163 1 284 1 167 9 379 2 120 1 364 3 
65 1 189 3 192 1 67 2 341 2 70 4 267 2 95 1 143 2 99 3 228 2 103 2 75 3 129 6 151 1 79 12 10 2 203 1 275 2 82 1 33 1 232 1 36 3 233 3 181 3 112 3 363 4 42 1 162 26 163 1 167 14 379 2 120 1 364 2 
189 4 192 1 341 4 95 1 143 3 99 3 103 1 151 1 10 4 203 1 112 5 363 4 162 41 163 1 167 20 315 1 120 1 364 4 65 1 67 2 70 8 267 1 321 1 225 1 228 3 227 1 127 1 272 1 75 3 129 6 79 21 275 5 82 1 33 1 232 1 36 4 233 3 181 3 42 1 284 1 379 4 242 1 381 1 
65 1 189 4 192 1 67 2 341 3 70 7 267 1 321 1 95 1 143 3 225 1 99 4 127 1 227 1 228 3 272 1 103 2 75 4 129 8 151 1 79 18 10 4 203 1 275 4 82 1 33 1 232 1 36 4 233 4 181 4 112 5 42 1 363 4 162 38 163 1 284 1 167 20 242 1 379 4 120 1 381 1 315 1 364 3 
65 1 189 7 192 1 67 1 341 7 70 14 267 1 95 1 143 2 225 1 99 2 227 1 27 2 228 4 272 1 103 1 75 2 129 4 151 1 79 25 10 7 203 1 275 8 82 1 33 1 232 1 36 7 233 2 181 2 112 8 42 1 363 4 162 52 163 1 284 2 167 27 242 1 379 4 120 1 381 1 315 1 364 7 
211 1 375 1 229 1 319 1 213 1 288 1 118 1 6 1 268 1 370 1 
38 1 97 1 
62 1 211 1 328 1 375 1 229 1 6 1 359 1 268 1 370 1 
92 1 11 1 
310 1 26 1 110 1 
31 1 204 2 319 1 250 1 253 1 358 1 268 1 325 1 211 1 314 1 229 1 375 1 213 1 118 1 348 1 6 1 370 1 9 1 
31 1 204 2 319 1 250 1 253 1 358 1 268 1 325 1 211 1 314 1 229 1 375 1 213 1 118 1 348 1 6 1 370 1 9 1 
31 1 204 2 319 1 250 1 253 1 358 1 268 1 325 1 211 1 314 1 229 1 375 1 213 1 118 1 348 1 6 1 370 1 9 1 
92 1 11 1 110 1 
92 1 11 1 110 1 
310 1 26 1 
310 1 26 1 110 1 
269 1 257 1 
23 1 268 1 269 1 325 1 198 1 97 1 101 1 229 1 231 2 6 1 303 1 370 1 12 2 204 1 250 1 251 2 307 1 278 1 38 1 358 1 235 2 136 2 314 1 211 1 375 1 257 1 91 1 
293 2 318 1 298 1 299 2 99 1 148 1 128 1 76 2 75 1 129 2 332 1 274 1 78 1 79 1 157 1 12 2 107 1 251 2 233 1 181 1 362 1 136 2 111 1 311 1 162 2 45 1 184 1 167 1 256 2 378 1 260 1 
190 1 317 1 157 1 293 2 222 1 94 1 60 1 369 1 281 1 312 1 100 1 200 2 226 1 184 1 287 1 256 2 76 2 168 1 153 1 
190 1 317 1 157 1 293 1 60 1 369 1 312 1 100 1 161 1 200 2 226 1 287 1 184 1 256 1 76 1 168 1 153 1 
122 1 157 1 249 1 293 1 178 1 222 1 135 1 98 1 45 1 184 1 287 1 256 1 76 1 260 1 
190 1 317 1 157 1 293 1 222 1 60 1 369 1 281 1 312 1 100 1 200 2 226 1 184 1 287 1 256 1 76 1 168 1 153 1 
106 1 
31 1 374 1 313 1 289 1 58 1 361 1 49 1 
191 1 193 1 145 1 347 1 31 2 334 1 132 1 250 1 15 1 279 1 358 1 361 1 182 1 207 1 313 1 138 1 49 1 
189 2 140 1 293 3 191 3 193 4 341 2 142 1 94 1 197 2 246 2 347 12 302 2 156 2 157 3 249 1 202 6 250 5 15 6 357 3 358 5 361 9 112 2 207 4 209 3 313 8 113 2 256 3 260 3 219 2 365 2 230 1 331 1 177 3 76 3 30 2 31 8 373 1 374 1 275 2 132 5 335 6 36 2 279 4 134 2 182 4 238 2 137 1 43 1 45 10 184 4 339 2 289 1 90 2 49 2 
65 1 189 2 140 1 191 1 193 2 192 1 341 2 197 1 143 1 347 6 228 1 31 5 202 5 275 2 132 1 335 5 33 1 250 1 232 1 15 3 36 2 279 2 358 1 361 8 182 2 238 2 112 2 42 1 209 1 207 2 313 5 116 1 379 1 217 1 49 2 
218 1 193 1 264 1 51 1 96 1 225 1 227 1 231 1 275 1 12 1 250 1 251 1 159 1 279 1 358 1 235 1 182 1 361 2 238 2 112 2 136 1 209 1 207 1 210 1 313 2 86 1 166 1 315 1 
31 1 374 1 193 1 279 1 182 1 361 1 207 1 313 1 289 1 49 1 
31 5 219 1 189 2 202 5 275 2 335 5 341 2 36 2 15 5 361 5 238 2 112 2 209 1 347 10 313 5 
31 1 132 1 191 1 250 1 358 1 49 1 
122 1 140 2 293 4 191 2 193 1 52 1 297 1 197 2 230 2 76 4 157 1 373 1 249 2 132 4 250 3 252 1 279 2 358 3 135 1 182 2 361 2 207 2 45 1 313 2 184 1 377 1 256 4 186 1 260 1 
170 1 293 1 51 1 124 1 96 2 101 1 99 1 231 2 75 1 76 1 349 1 129 2 274 1 79 1 249 1 157 1 12 3 251 3 357 1 233 1 181 1 235 2 17 1 362 1 136 2 311 1 208 1 162 1 45 1 184 1 256 1 260 1 
31 4 202 2 140 1 335 2 193 1 15 2 279 1 182 1 197 1 361 1 207 1 347 4 313 2 381 1 49 2 
375 1 268 1 360 1 
375 1 268 1 360 1 
375 1 319 1 115 1 269 1 268 1 
375 1 268 1 360 1 
375 1 56 1 268 1 
375 1 56 1 268 1 
375 1 56 1 268 1 
375 1 268 1 
229 1 370 1 
10 2 275 1 70 3 233 2 181 2 112 1 225 1 162 8 99 2 227 1 272 1 167 4 103 1 75 2 129 4 242 1 381 1 315 1 79 4 364 1 
10 2 275 1 70 2 225 1 112 1 162 6 227 1 272 1 167 3 242 1 58 1 381 1 79 3 315 1 
10 1 316 1 189 1 275 1 341 1 70 2 36 1 233 1 181 1 112 1 99 1 162 4 167 2 75 1 129 2 79 2 364 1 
10 1 189 1 275 1 341 1 70 2 36 1 143 1 112 1 162 7 228 1 284 1 167 3 379 2 79 4 364 1 
189 2 341 2 70 9 225 2 99 2 227 2 228 2 27 1 272 1 103 2 75 2 129 4 79 12 10 5 275 3 36 2 233 2 309 1 181 2 112 3 162 23 283 1 284 1 167 11 242 1 379 2 381 1 315 1 364 4 
162 1 379 1 79 1 
162 1 228 1 167 1 
10 2 316 1 219 1 189 1 275 1 341 1 70 4 36 1 233 1 181 1 112 1 99 1 162 6 167 3 75 1 129 2 79 3 364 2 
65 1 189 2 192 1 341 2 70 2 143 1 99 1 228 1 75 1 129 2 151 1 79 6 10 1 275 2 33 1 232 1 36 2 233 1 181 1 112 2 42 1 162 12 167 6 379 1 364 1 
10 1 225 1 112 1 275 1 162 6 227 1 70 2 167 3 79 3 315 1 364 1 
10 1 70 2 233 1 309 1 181 1 225 1 162 3 99 1 227 1 272 1 167 1 103 1 75 1 129 2 242 1 79 2 364 1 
10 3 275 2 70 5 233 1 181 1 225 2 112 2 99 1 162 10 227 2 86 1 167 5 75 1 129 2 151 1 79 5 315 1 364 2 
189 1 70 1 233 1 181 1 112 1 99 1 162 2 167 2 75 1 129 2 151 1 364 1 
10 1 189 1 275 1 341 1 70 2 36 1 233 1 181 1 112 1 99 1 162 4 167 2 75 1 129 2 151 1 79 2 364 1 
10 1 70 2 233 3 309 1 321 1 181 3 225 1 162 3 99 3 227 1 167 1 103 1 75 3 129 6 151 1 79 2 364 1 
316 1 189 3 341 3 70 12 0 1 321 1 143 1 225 3 199 1 99 5 227 3 228 3 272 1 103 2 75 5 129 10 151 1 79 18 10 7 275 5 36 3 233 5 309 1 181 5 112 5 162 34 284 1 167 16 242 1 379 4 63 1 381 1 315 2 364 5 
70 2 143 1 225 1 99 1 228 1 227 1 272 1 75 1 129 2 151 1 79 4 10 2 275 1 232 1 233 1 181 1 112 1 162 8 167 4 379 1 242 1 381 1 315 1 
316 1 189 1 70 3 143 1 225 1 99 2 227 1 228 1 272 1 75 2 129 4 151 1 79 5 10 2 275 1 232 1 36 1 233 2 181 2 112 2 162 11 284 1 167 6 242 1 379 2 381 1 315 1 364 1 
65 1 316 1 189 2 192 1 341 2 70 4 143 1 225 1 99 3 227 1 228 1 272 1 103 1 75 3 129 6 151 1 79 10 10 3 275 3 33 1 232 1 36 2 233 3 181 3 112 3 42 1 162 19 167 9 242 1 379 1 381 1 315 1 364 1 
65 1 316 1 189 2 192 1 341 1 70 5 143 1 225 1 99 3 227 1 228 1 272 1 103 1 75 3 129 6 151 1 79 7 10 3 275 2 33 1 232 1 36 2 233 3 181 3 112 3 42 1 162 17 167 10 242 1 379 1 381 1 315 1 364 2 
70 2 143 1 225 1 99 1 228 1 227 1 272 1 75 1 129 2 151 1 79 4 10 2 275 1 232 1 233 1 181 1 112 1 162 8 167 4 379 1 242 1 381 1 315 1 
65 1 189 2 192 1 341 2 70 2 143 1 99 1 228 1 75 1 129 2 151 1 79 6 10 1 275 2 33 1 232 1 36 2 233 1 181 1 112 2 42 1 162 12 167 6 379 1 364 1 
65 1 316 1 189 2 192 1 341 1 70 5 143 1 225 1 99 4 227 1 228 1 272 1 103 2 75 4 129 8 151 1 79 8 10 3 275 2 33 1 232 1 36 2 233 4 181 4 112 3 42 1 162 18 167 10 242 1 379 1 381 1 315 1 364 2 
65 1 189 3 192 1 341 2 70 6 321 1 143 1 99 4 228 1 103 2 75 4 129 8 151 1 79 7 10 3 275 2 33 1 232 1 36 3 233 4 181 4 112 3 42 1 162 16 167 9 379 1 364 3 
10 3 275 1 70 6 225 3 112 1 162 7 227 3 272 2 167 3 242 1 79 4 315 1 364 3 
65 1 189 2 192 1 341 1 70 4 321 1 143 1 225 1 99 4 227 1 228 1 272 1 103 2 75 4 129 8 151 1 79 8 10 3 275 2 33 1 232 1 36 2 233 4 181 4 112 3 42 1 162 18 167 10 242 1 379 1 381 1 315 1 364 1 
136 1 126 1 101 1 12 1 241 1 329 1 251 1 
12 1 354 1 251 1 223 1 172 1 136 1 160 1 126 1 101 1 241 1 329 1 57 1 
122 1 157 1 249 1 45 1 293 1 184 1 256 1 76 1 135 1 58 1 260 1 
80 1 170 1 249 1 157 1 12 2 293 1 251 2 357 1 124 1 235 1 136 1 101 1 45 1 184 1 231 1 256 1 76 1 260 1 
80 1 170 1 157 1 12 2 293 1 141 1 68 1 251 2 159 1 357 2 124 1 235 1 136 2 101 1 302 1 45 3 230 1 339 1 184 1 231 2 256 1 76 1 260 2 
170 1 293 2 68 1 141 1 101 1 271 1 302 1 201 1 230 1 231 2 76 2 80 1 157 1 12 2 251 2 357 2 159 1 235 1 136 2 45 3 184 1 339 1 256 2 260 2 
293 3 322 1 302 1 201 1 230 1 177 1 7 1 76 3 31 1 157 1 249 1 132 1 250 2 357 1 358 2 45 4 113 1 184 1 339 1 256 3 90 1 260 1 49 1 
31 1 249 1 157 1 293 3 132 1 250 2 357 1 134 1 358 2 302 1 45 4 201 1 113 1 230 1 339 1 184 1 256 3 76 3 177 1 90 1 260 1 49 1 
157 1 293 1 184 1 256 1 14 1 76 1 
249 2 157 2 293 7 107 1 306 1 308 1 14 1 356 1 94 1 357 1 299 1 137 1 54 1 226 1 45 3 184 3 256 6 76 7 380 1 185 1 260 2 
170 1 293 1 70 2 266 1 94 1 124 1 320 1 298 1 225 1 101 2 99 2 227 1 272 1 231 1 75 2 76 1 129 4 274 2 79 3 10 2 80 1 275 1 157 1 12 2 353 1 336 1 251 2 37 1 357 1 233 2 235 1 181 2 362 2 17 1 112 1 136 1 208 1 162 6 45 1 184 1 167 3 256 1 242 1 378 1 260 1 381 1 315 1 
293 1 191 1 193 2 246 1 76 1 177 1 30 1 31 1 156 1 374 1 249 1 373 1 132 2 250 3 278 1 279 2 134 1 358 3 361 1 182 2 207 2 313 1 45 2 113 1 289 1 256 1 90 1 49 1 
157 1 293 2 14 1 94 1 357 1 137 1 43 1 45 2 184 2 256 2 76 2 90 1 260 1 
122 1 157 1 249 1 45 1 293 4 201 1 184 1 355 1 256 4 94 1 76 4 135 1 260 1 
304 1 157 1 293 2 366 1 357 1 54 1 45 1 230 1 286 1 184 2 256 2 76 2 185 1 260 1 
157 1 249 1 200 1 293 1 184 1 256 1 76 1 60 1 369 1 153 1 
157 1 293 2 107 1 94 1 226 1 45 1 184 1 256 2 76 2 260 1 78 1 
122 1 249 1 157 2 293 5 107 1 306 1 355 1 356 1 94 1 135 1 45 3 230 1 184 2 256 4 76 5 260 2 
122 1 249 1 157 2 293 5 107 1 306 1 355 1 94 1 135 1 45 3 230 1 184 2 256 4 76 5 139 1 260 2 
80 1 170 1 249 1 157 1 12 2 293 1 251 2 357 1 235 1 136 1 101 1 45 1 271 1 184 1 231 1 256 1 76 1 260 1 
157 1 293 1 308 1 357 1 137 1 54 1 45 1 230 1 184 2 256 1 76 1 185 1 260 1 
101 1 346 1 87 1 40 1 351 1 
31 1 263 1 123 1 141 1 68 1 250 2 278 1 159 1 358 2 40 2 101 1 346 2 175 1 113 1 87 1 290 1 351 2 49 1 261 1 
136 1 111 1 12 1 148 1 251 1 128 1 87 1 40 1 351 1 
175 1 87 1 290 1 
183 1 55 1 58 1 248 1 
183 1 255 1 55 1 376 1 13 1 333 1 248 1 
240 1 276 1 13 1 
188 2 262 1 340 1 108 1 13 3 255 1 183 1 55 1 376 1 47 1 333 3 248 1 
183 1 255 1 55 1 131 1 376 1 13 2 333 2 248 1 371 1 
255 1 190 1 262 1 55 1 200 1 338 1 376 1 13 1 24 1 333 1 153 1 
255 1 262 1 55 1 376 1 13 1 333 1 248 1 
183 1 255 1 262 1 376 1 13 1 333 1 248 2 
300 1 255 2 262 1 239 1 55 1 376 2 13 2 104 1 333 2 248 1 
262 1 13 3 206 1 39 1 183 1 255 1 55 2 338 1 376 1 333 3 77 1 248 1 371 2 
262 1 190 1 13 2 369 1 183 1 255 1 55 1 100 1 200 2 376 1 214 1 333 2 153 1 248 1 371 1 
262 1 131 1 13 4 18 1 183 1 255 2 55 2 338 1 376 2 333 4 77 1 248 1 371 2 
183 1 255 1 262 1 55 1 376 1 13 1 333 1 248 1 
188 1 108 1 13 4 183 2 255 1 337 1 55 3 338 1 376 1 47 1 333 4 77 1 248 2 371 2 
262 1 13 2 179 1 255 1 183 1 55 1 147 1 376 1 333 2 216 1 248 1 371 1 
188 2 262 1 108 1 13 3 255 1 183 1 55 1 376 1 47 2 333 3 259 1 248 1 
32 2 55 2 2 1 173 1 
255 1 262 1 376 1 13 1 130 1 333 1 
183 1 255 1 262 1 55 1 376 1 13 2 206 1 333 2 248 1 371 1 
125 1 
183 1 255 1 262 1 55 1 376 1 13 1 333 1 248 1 
188 1 262 1 13 3 206 1 255 1 183 1 55 1 376 1 333 3 371 1 248 1 
337 1 55 1 338 1 77 1 
55 1 248 1 

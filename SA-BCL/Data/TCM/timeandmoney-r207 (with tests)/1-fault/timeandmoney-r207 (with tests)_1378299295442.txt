#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 204 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
268 1 129 1 73 1 203 6 75 1 76 4 340 1 276 1 57 3 165 9 38 2 37 1 305 2 307 1 208 5 190 9 372 2 230 2 285 1 172 1 355 2 211 1 70 2 376 1 358 1 71 2 240 1 95 1 
268 1 129 1 73 1 203 6 75 1 76 4 340 1 276 1 57 3 165 9 38 2 37 1 305 2 307 1 208 5 190 9 372 2 230 2 285 1 172 1 355 2 211 1 70 2 376 1 358 1 71 2 240 1 95 1 
268 1 129 1 73 1 203 7 75 1 76 5 340 1 276 1 57 4 165 10 38 2 37 1 305 2 307 1 208 6 190 10 372 2 230 2 285 1 172 1 355 2 211 1 70 2 376 1 358 1 71 2 240 1 95 1 
129 1 73 1 203 4 75 1 76 3 340 1 276 1 57 2 165 7 38 2 37 1 305 2 307 1 208 4 190 7 372 2 230 2 285 1 172 1 355 2 211 1 70 2 376 1 358 1 71 1 240 1 95 1 
190 4 268 1 372 1 129 1 230 1 203 3 172 1 76 2 57 1 70 1 38 1 165 4 358 1 305 1 71 2 240 1 307 1 208 3 
190 2 312 1 372 1 172 1 355 1 211 1 376 1 70 1 330 1 58 1 165 2 38 1 305 1 240 1 307 1 208 1 
190 3 372 2 203 1 172 1 76 1 355 1 57 1 70 2 165 3 37 1 240 1 307 1 208 2 
129 1 268 1 73 1 203 7 76 4 340 1 57 3 37 1 165 9 38 1 305 1 307 1 17 1 208 5 190 9 372 2 230 1 172 1 355 1 263 1 70 2 358 1 71 2 240 1 
129 1 268 1 73 1 203 7 76 4 340 1 57 3 37 1 165 9 38 1 305 1 307 1 17 1 208 5 190 9 372 2 230 1 172 1 355 1 263 1 70 2 358 1 71 2 240 1 
48 1 322 1 72 1 
48 1 364 1 33 2 
157 1 158 2 124 2 139 2 235 2 308 2 224 2 195 1 
361 1 152 1 99 1 184 1 337 1 339 1 220 2 131 1 157 1 77 1 221 1 158 3 207 2 223 1 224 3 113 1 282 1 83 1 139 2 308 2 231 1 195 1 309 1 288 2 328 1 374 1 44 2 88 1 124 2 235 2 91 1 26 2 180 1 379 1 293 1 96 1 241 1 
157 1 158 1 79 1 159 1 124 1 139 1 235 1 308 1 55 1 224 1 
48 1 322 1 98 1 102 1 259 1 141 1 140 1 55 1 34 1 158 1 124 1 368 1 224 1 237 1 
48 1 322 1 98 2 139 1 102 1 308 1 259 1 140 1 55 1 34 2 158 1 235 1 124 1 368 1 224 1 
98 1 151 1 100 1 127 1 34 1 
48 1 243 1 322 1 98 2 151 1 100 1 297 1 34 2 
98 1 100 1 34 1 
98 1 151 1 139 1 308 1 55 1 34 1 272 1 157 1 79 1 158 1 159 1 235 1 124 1 224 1 
48 1 
48 1 243 1 322 1 98 2 151 1 100 1 260 1 34 2 
48 1 243 1 322 1 98 5 153 1 151 2 284 2 100 2 270 1 107 1 21 1 119 1 34 5 344 1 13 1 320 2 294 1 81 2 267 1 
324 2 139 4 308 1 20 1 195 1 354 1 366 1 158 5 235 4 124 5 12 1 224 5 319 1 237 1 
158 2 159 1 124 2 139 2 235 2 53 1 55 1 224 2 
361 1 83 1 324 1 139 1 116 1 337 1 231 1 366 1 288 1 221 1 77 1 158 2 235 1 124 1 207 1 91 1 26 1 180 1 224 2 241 1 
72 1 195 1 
139 1 19 1 308 1 195 2 158 2 124 2 235 1 224 2 319 1 
116 1 112 1 287 1 
361 1 83 1 231 1 337 1 195 1 288 1 77 1 221 1 158 1 207 1 91 1 26 1 224 1 180 1 334 1 241 1 
158 3 324 1 124 3 139 3 235 3 308 1 224 3 195 1 
158 1 159 1 124 1 139 1 235 1 55 1 224 1 
158 1 124 1 139 1 235 1 19 1 308 1 55 1 224 1 319 1 
361 1 98 1 152 1 99 1 102 1 55 1 184 1 337 1 339 1 220 2 366 1 34 1 221 1 77 1 157 1 158 4 368 1 207 1 223 1 224 4 319 1 83 1 324 1 139 3 308 2 259 1 140 1 231 1 66 1 195 1 288 1 328 1 374 1 44 1 88 1 124 3 235 3 91 1 26 1 180 1 379 1 96 1 241 1 242 1 
158 2 324 1 124 2 139 1 235 1 12 1 224 2 237 1 195 1 
48 1 98 1 324 2 139 3 102 1 308 1 259 1 140 1 55 1 66 1 34 1 366 1 158 3 235 3 124 3 368 1 224 3 319 1 225 1 
324 1 139 2 116 1 308 1 158 2 235 2 124 2 224 2 112 1 319 1 
361 1 83 1 231 1 337 1 195 1 288 1 77 1 221 1 158 1 207 1 91 1 26 1 224 1 180 1 241 1 
83 1 231 1 337 1 195 1 288 1 77 1 221 1 158 1 147 1 207 1 26 1 224 1 180 1 150 1 241 1 
363 1 99 1 184 1 220 2 250 1 343 1 369 1 162 1 109 1 14 1 223 1 112 2 80 1 82 1 116 2 86 1 261 1 287 2 328 1 88 2 44 4 379 1 293 2 96 1 
158 1 124 1 139 1 235 1 102 1 53 1 55 1 224 1 
161 1 338 1 
161 1 338 1 
87 1 227 1 
87 1 227 1 
87 1 227 1 
134 1 161 1 338 1 
134 1 161 1 338 1 
161 1 94 1 338 1 
87 1 227 1 161 2 52 1 114 1 338 2 
134 1 161 1 338 1 
89 1 161 1 338 1 
89 1 161 1 338 1 
89 1 161 1 338 1 
245 1 130 1 98 1 9 1 338 1 34 1 133 1 158 2 78 1 161 1 224 2 139 2 286 1 195 1 232 1 144 1 264 1 146 1 235 2 124 2 332 1 47 1 125 1 94 1 
48 1 1 1 128 1 98 2 130 3 317 1 9 2 338 2 34 2 23 1 146 2 264 2 345 1 161 2 332 2 125 1 111 2 114 1 281 1 
230 1 38 1 305 1 
312 1 38 1 305 1 
233 1 312 1 230 2 38 3 278 1 349 1 
233 1 244 1 312 1 230 1 38 2 349 1 
233 1 312 1 230 1 38 2 349 2 
245 1 243 1 48 2 295 1 363 1 98 5 151 4 364 1 100 1 315 1 30 1 270 3 31 1 33 3 34 5 250 1 303 1 344 1 369 1 13 2 164 2 14 1 320 1 81 1 18 1 322 1 284 1 232 1 144 1 148 2 291 1 311 2 
48 5 243 1 363 3 98 9 151 7 313 1 364 3 100 6 4 1 30 1 270 8 31 3 33 9 34 9 275 1 250 3 303 2 344 1 369 3 13 6 164 6 60 5 14 3 320 2 81 2 322 1 284 2 171 1 21 1 232 4 46 1 291 2 199 1 311 6 127 5 
48 3 363 1 98 3 151 2 364 2 315 1 270 3 31 1 34 3 33 4 250 1 303 1 369 1 13 2 164 2 14 1 320 1 18 1 81 1 322 1 284 1 21 1 232 1 148 1 291 1 311 2 
48 4 363 2 98 4 151 3 364 3 4 1 315 1 270 5 31 2 33 7 34 4 275 1 250 2 303 1 369 2 13 4 164 4 14 2 320 1 81 1 18 1 322 1 284 1 171 1 21 1 232 2 148 2 291 1 311 4 
83 1 337 1 241 1 
28 1 241 1 
72 1 236 1 241 1 
306 1 241 1 
69 1 
337 1 241 1 
83 1 302 1 236 2 304 1 337 1 241 3 
371 1 193 1 185 1 68 1 108 1 24 1 88 3 343 3 44 7 369 1 251 1 163 2 14 1 347 1 214 1 80 2 293 4 
371 1 193 1 185 1 68 1 108 1 24 1 88 3 343 3 44 7 369 1 251 1 163 2 14 1 347 1 214 1 80 2 293 4 
371 1 193 1 185 1 271 1 68 1 108 1 24 1 88 3 343 3 44 7 369 1 251 1 163 2 14 1 347 1 214 1 80 2 293 4 
363 3 99 1 248 3 249 1 184 1 365 1 185 2 31 3 56 1 220 2 108 1 250 3 343 10 369 4 251 5 163 3 14 4 223 1 347 1 167 1 80 5 371 2 258 1 64 1 209 4 40 1 193 2 68 2 328 1 24 1 88 15 44 31 214 1 293 16 
99 2 154 1 184 2 365 1 185 1 220 4 108 1 301 1 343 4 369 1 251 1 163 2 14 1 223 2 347 1 80 3 371 1 193 1 68 1 328 2 44 9 88 4 214 1 293 5 
312 1 3 1 203 1 186 1 77 1 367 1 342 1 207 1 165 2 38 2 278 1 305 1 254 1 307 1 208 1 137 1 190 2 372 1 350 1 230 1 172 1 196 1 288 1 355 1 70 1 26 1 180 1 292 1 240 1 380 1 
312 1 3 1 203 2 155 1 77 1 367 1 342 1 207 1 165 3 38 2 278 1 305 1 254 1 208 1 190 3 372 1 350 1 230 1 172 1 196 1 288 1 355 1 289 1 123 1 70 1 26 1 180 1 292 1 240 1 380 1 
312 1 3 1 203 2 155 1 77 1 342 1 207 1 165 2 38 2 278 1 305 1 254 1 208 1 190 2 230 1 172 1 196 1 355 1 288 1 123 1 26 1 180 1 292 1 240 1 380 1 
3 2 54 1 74 1 269 1 337 1 77 1 342 2 207 1 165 1 370 1 190 1 372 1 85 1 231 1 288 1 355 2 289 1 70 1 26 1 180 1 198 1 380 2 241 1 
312 1 190 1 372 1 350 1 3 1 230 1 186 1 196 1 155 1 355 1 288 1 77 1 367 1 342 1 70 1 207 1 38 2 165 1 26 1 278 1 180 1 292 1 305 1 254 1 307 1 380 1 
280 1 
48 2 243 3 98 5 202 1 246 1 247 2 100 6 102 1 55 1 337 1 156 1 341 1 158 1 303 1 206 1 344 1 13 2 207 2 115 2 117 2 259 1 353 2 177 2 178 1 124 1 179 1 26 2 359 2 180 1 360 1 364 2 270 2 33 2 34 5 77 1 368 1 370 1 224 1 321 1 320 1 81 1 322 1 284 1 141 1 140 1 231 2 194 2 142 1 288 2 375 1 377 1 198 1 333 4 237 1 241 1 
243 1 98 3 246 1 100 2 102 1 259 1 140 1 141 1 55 1 260 1 34 3 341 1 158 1 177 1 375 1 206 1 124 1 368 1 377 1 224 1 333 2 237 1 
243 1 48 1 322 1 98 3 246 1 100 1 102 1 259 1 140 1 141 1 55 1 260 1 353 1 34 3 341 1 158 1 375 1 206 1 124 1 368 1 377 1 224 1 333 3 237 1 
243 1 48 1 98 3 246 1 100 2 102 1 55 1 34 3 341 1 158 1 206 1 368 1 224 1 322 1 259 1 141 1 140 1 260 1 194 1 353 1 375 1 177 1 124 1 377 1 333 3 237 1 
243 3 48 5 98 5 201 1 246 1 100 7 247 2 102 1 55 1 341 1 158 1 206 1 344 1 13 1 115 2 65 1 259 1 117 2 260 1 353 4 121 1 177 4 178 1 124 1 213 1 359 2 364 2 270 1 32 1 34 5 368 1 224 1 320 1 321 1 81 1 322 5 284 1 140 1 141 1 194 4 375 1 377 1 333 6 237 1 
243 2 48 2 98 4 246 1 247 2 100 4 102 1 55 1 341 1 158 1 206 1 344 1 13 1 115 2 259 1 117 2 353 2 178 1 177 2 124 1 359 2 364 2 270 1 34 4 33 2 368 1 224 1 320 1 321 1 81 1 322 1 284 1 140 1 141 1 194 2 142 1 375 1 377 1 333 4 237 1 
48 1 243 2 98 4 201 1 246 1 100 4 364 2 247 2 102 1 55 1 270 1 32 1 34 4 341 1 158 1 206 1 344 1 368 1 13 1 224 1 115 2 321 1 320 1 81 1 322 1 284 1 117 2 259 1 141 1 140 1 353 2 194 2 177 2 178 1 375 1 124 1 377 1 359 2 213 1 333 4 237 1 
48 1 243 2 98 4 201 1 246 1 100 4 364 2 247 2 102 1 55 1 270 1 32 1 34 4 341 1 158 1 206 1 344 1 368 1 13 1 224 1 115 2 321 1 320 1 81 1 322 1 284 1 117 2 259 1 141 1 140 1 353 2 194 2 177 2 178 1 375 1 124 1 377 1 359 2 213 1 333 4 237 1 
48 1 243 2 98 4 183 1 246 1 100 4 247 2 102 1 104 1 55 1 270 1 33 2 34 4 341 1 158 1 206 1 344 1 368 1 13 1 110 1 224 1 321 1 320 1 81 1 322 1 41 2 284 1 117 2 259 1 141 1 140 1 353 2 194 2 42 2 177 2 375 1 124 1 377 1 213 1 333 4 237 1 
48 1 243 2 201 1 98 4 246 1 364 2 247 2 100 5 102 1 55 1 270 1 32 1 34 4 341 1 158 1 206 1 344 1 368 1 13 1 224 1 115 2 321 1 320 1 81 1 322 1 284 1 117 2 259 1 141 1 140 1 194 3 353 3 121 1 178 1 375 1 177 3 124 1 377 1 359 2 213 1 333 5 237 1 
48 1 243 2 201 1 98 4 246 1 364 2 247 2 100 5 102 1 55 1 270 1 32 1 34 4 341 1 158 1 206 1 344 1 368 1 13 1 224 1 115 2 321 1 320 1 81 1 322 1 284 1 117 2 259 1 141 1 140 1 194 3 353 3 121 1 178 1 375 1 177 3 124 1 377 1 359 2 213 1 333 5 237 1 
243 2 48 1 98 4 246 1 247 2 100 4 102 1 104 1 55 1 341 1 158 1 206 1 344 1 13 1 259 1 117 2 353 2 177 2 124 1 270 1 34 4 33 2 368 1 224 1 320 1 321 1 81 1 322 1 41 2 284 1 140 1 141 1 194 2 142 1 42 2 375 1 377 1 333 4 237 1 
99 1 72 1 184 1 220 2 108 1 343 2 369 1 163 1 223 1 14 1 112 1 347 1 80 2 371 1 116 1 193 1 195 2 261 1 287 1 328 1 44 6 88 3 379 1 214 1 293 3 96 1 
363 1 314 1 99 2 248 3 184 2 339 1 31 2 56 1 220 4 205 1 250 2 343 2 251 1 369 2 223 2 14 1 112 4 113 1 80 1 255 1 258 1 209 3 169 1 116 11 195 1 287 11 328 2 88 6 44 14 90 1 379 2 293 8 96 1 
361 1 99 1 337 1 184 1 339 1 366 1 220 2 221 1 77 1 205 1 158 2 207 1 223 1 224 2 112 1 113 1 348 1 83 1 324 1 139 1 210 1 231 1 195 1 288 1 328 1 327 1 88 1 44 2 124 1 235 1 91 1 26 1 180 1 379 1 334 1 293 1 96 1 241 1 
152 2 99 3 337 2 8 1 339 1 155 1 300 2 108 1 158 3 205 1 250 2 343 8 251 4 207 3 163 1 14 3 347 1 112 7 113 1 257 2 116 7 118 2 22 2 124 1 26 3 180 2 214 1 181 1 361 2 363 2 184 3 31 2 220 6 366 1 77 2 221 2 187 1 369 3 224 3 223 3 80 4 371 1 83 2 324 1 139 1 193 1 231 1 195 2 287 7 288 3 328 3 88 10 44 20 235 1 91 2 379 3 293 10 96 3 241 2 
29 1 2 1 99 2 6 1 184 2 337 2 339 1 155 1 220 4 77 2 158 1 207 7 370 1 224 1 223 2 113 1 137 1 282 2 324 1 139 1 373 1 231 2 173 1 261 1 262 1 288 8 328 2 44 2 88 1 124 1 235 1 290 1 26 8 180 2 198 1 379 2 293 1 96 2 241 3 
363 1 99 1 184 1 31 1 220 2 205 1 158 1 250 1 343 1 369 1 223 1 224 1 14 1 112 1 319 1 80 1 139 1 116 1 308 1 287 1 328 1 44 3 88 2 235 1 124 1 379 1 126 1 293 1 96 1 
82 1 99 1 116 1 184 1 287 1 261 1 220 2 328 1 250 1 343 1 44 2 251 1 369 1 223 1 112 1 379 1 293 2 96 1 
363 1 99 1 116 1 184 1 287 1 261 1 220 2 328 1 343 1 44 2 88 2 162 1 223 1 14 1 112 1 379 1 80 1 96 1 
363 1 99 1 184 1 31 1 220 2 250 1 343 2 369 1 251 1 223 1 14 1 112 2 80 1 116 2 261 1 287 2 328 1 44 4 88 2 379 1 293 2 96 1 
82 1 99 1 116 1 373 1 184 1 287 1 220 2 328 1 250 1 343 1 44 2 251 1 369 1 223 1 112 1 379 1 293 2 96 1 
363 1 99 1 116 1 373 1 184 1 287 1 220 2 328 1 343 1 44 2 88 2 162 1 223 1 14 1 112 1 379 1 80 1 96 1 
363 1 99 1 184 1 31 1 220 2 250 1 343 2 369 1 251 1 223 1 14 1 112 2 80 1 116 2 373 1 287 2 328 1 44 4 88 2 379 1 293 2 96 1 
363 1 99 1 184 1 31 1 220 2 250 1 343 2 369 1 251 1 223 1 14 1 112 2 80 1 116 2 287 2 328 1 44 4 88 2 379 1 293 2 96 1 
361 1 152 1 99 1 337 1 184 1 339 1 220 2 221 1 77 1 158 1 207 1 224 1 223 1 113 1 83 1 231 1 195 1 288 1 328 1 44 2 88 1 91 1 26 1 180 1 379 1 293 1 96 1 241 1 
99 1 337 1 184 1 339 1 220 2 221 1 77 1 158 1 207 1 224 1 223 1 113 1 83 1 231 1 195 1 288 1 328 1 43 1 44 2 147 1 88 1 26 1 180 1 379 1 150 1 293 1 96 1 241 1 
363 1 99 1 184 1 31 1 220 2 205 1 250 1 343 2 369 1 251 1 223 1 14 1 112 2 80 1 116 2 287 2 328 1 44 4 88 2 379 1 293 2 96 1 
361 1 363 1 152 1 99 1 337 1 184 1 31 1 220 2 221 1 77 1 158 1 250 1 343 2 251 1 369 1 207 1 14 1 224 1 223 1 112 2 80 1 137 1 83 1 116 2 118 1 287 2 288 1 328 1 88 2 44 4 91 1 26 1 180 1 379 1 293 2 96 1 241 1 
363 1 99 1 184 1 31 1 220 2 205 1 158 1 250 1 343 1 251 1 369 1 14 1 223 1 224 1 319 1 112 1 139 1 116 1 308 1 287 1 328 1 88 1 44 3 235 1 124 1 92 1 379 1 293 2 96 1 
0 1 248 3 154 1 99 3 5 2 105 1 296 4 56 1 299 1 108 1 250 4 343 8 251 4 163 1 14 5 347 1 166 1 256 1 258 3 209 4 352 1 174 1 214 1 363 4 184 3 365 1 31 4 220 6 274 1 369 5 223 3 189 1 80 4 279 1 191 1 371 1 228 1 193 1 328 3 44 41 88 21 238 1 293 20 
0 1 363 3 99 4 154 1 248 3 5 2 105 1 365 2 296 4 184 4 31 4 299 1 56 1 220 8 108 1 274 1 250 4 343 7 369 5 251 3 163 1 189 1 223 4 14 4 166 1 347 1 80 4 279 1 256 1 371 1 191 1 258 3 209 4 228 1 193 1 352 1 174 1 328 4 88 18 44 38 238 1 214 1 293 20 
0 1 363 7 314 2 99 2 154 1 248 4 5 1 365 1 296 4 184 2 31 7 299 1 56 2 220 4 108 1 274 1 250 7 343 14 369 8 251 7 163 1 223 2 14 8 166 1 347 1 80 7 279 1 256 1 371 1 191 1 258 2 209 4 228 1 193 1 352 1 174 1 328 2 88 25 44 52 238 1 214 1 293 27 
0 1 363 3 99 2 154 1 248 1 101 1 5 1 296 2 184 2 31 3 299 1 56 1 220 4 274 2 250 3 343 6 369 3 251 3 189 1 223 2 14 3 166 1 80 3 279 1 258 1 209 2 328 2 88 10 44 19 293 9 
0 1 363 2 99 3 154 1 248 2 5 2 365 2 296 4 184 3 31 3 299 1 220 6 274 1 250 3 343 4 251 2 369 3 14 2 223 3 166 1 80 2 279 2 256 1 258 2 191 1 209 2 228 1 352 1 174 1 328 3 88 12 44 26 238 1 293 14 
134 1 11 1 
89 1 52 1 266 1 
128 1 264 1 146 1 332 1 161 1 317 1 114 1 16 1 9 1 338 1 
286 1 94 1 
35 1 264 1 146 1 149 1 332 1 161 1 9 1 338 1 63 1 
48 1 1 1 128 1 98 1 130 2 317 1 9 1 338 1 34 1 23 1 146 1 264 1 345 1 161 1 332 1 125 1 111 1 114 1 
48 1 1 1 128 1 98 1 130 2 317 1 9 1 338 1 34 1 23 1 146 1 264 1 345 1 161 1 332 1 125 1 111 1 114 1 
48 1 1 1 128 1 98 1 130 2 317 1 9 1 338 1 34 1 23 1 146 1 264 1 345 1 161 1 332 1 125 1 111 1 114 1 
134 1 11 1 52 1 
134 1 11 1 52 1 
89 1 266 1 
89 1 52 1 266 1 
133 1 47 1 
1 1 245 1 98 1 130 1 151 1 9 1 338 1 34 1 133 1 158 2 78 1 161 1 224 2 111 1 139 2 286 1 195 1 232 1 144 1 264 1 146 1 235 2 124 2 212 1 332 1 47 1 94 1 
217 1 99 1 6 1 336 1 337 1 184 1 339 1 220 2 77 1 205 1 158 2 207 2 223 1 224 2 62 1 113 1 282 2 262 1 288 2 328 1 44 2 88 1 124 2 26 2 180 1 379 1 200 1 293 1 335 1 96 1 241 1 
312 1 323 1 230 1 229 1 155 1 288 2 77 1 367 1 342 1 207 2 38 2 26 2 278 1 180 1 292 1 27 1 305 1 254 1 137 1 
312 1 323 1 50 1 230 1 155 1 288 1 77 1 367 1 342 1 207 1 38 2 26 1 278 1 180 1 292 1 305 1 254 1 
85 1 337 1 231 1 288 1 77 1 342 1 346 1 207 1 26 1 370 1 180 1 198 1 27 1 241 1 
312 1 323 1 230 1 229 1 155 1 288 1 77 1 367 1 342 1 207 1 38 2 26 1 278 1 180 1 292 1 27 1 305 1 254 1 
239 1 
48 1 322 1 153 1 72 1 13 1 270 1 107 1 
48 2 243 1 98 1 364 1 100 1 270 1 33 1 34 1 344 1 13 1 115 1 320 1 81 1 322 1 284 1 178 1 359 1 
243 3 48 8 98 5 153 1 100 5 337 1 106 1 107 1 300 2 156 1 204 1 302 1 250 2 303 2 344 4 207 3 13 8 164 6 14 2 253 2 306 3 175 2 265 2 357 1 26 3 180 2 311 6 216 1 363 2 364 6 219 2 270 9 31 2 34 5 33 12 77 1 369 2 320 4 137 1 81 4 322 2 83 1 284 4 84 2 140 2 325 1 231 1 288 3 236 2 378 2 241 6 97 2 
243 1 48 5 98 1 363 2 100 1 364 3 248 1 270 8 31 2 34 1 33 6 156 1 250 2 303 1 344 2 369 2 13 5 164 5 14 2 168 1 320 2 81 2 258 1 191 1 322 2 209 1 351 1 284 2 228 1 352 1 174 1 175 2 238 1 311 5 97 1 
201 1 98 1 55 1 270 2 34 1 272 1 108 1 157 1 158 1 79 1 159 1 344 1 369 2 13 2 224 1 14 1 320 1 81 1 371 1 139 1 284 1 308 1 193 1 175 2 235 1 124 1 93 1 97 1 
48 1 322 1 153 1 284 1 270 1 107 1 344 1 13 1 320 1 81 1 
48 5 363 2 364 5 270 5 31 2 300 1 33 10 175 2 250 2 369 2 13 5 164 5 14 2 311 5 97 1 
48 1 243 1 322 1 98 1 100 1 34 1 
243 2 98 3 202 1 100 4 337 1 106 1 270 2 34 3 77 1 156 2 303 2 344 1 207 4 13 2 370 1 61 1 320 2 81 2 284 2 231 2 21 1 288 4 120 1 26 4 180 1 198 1 360 1 216 2 241 1 
361 1 152 1 99 1 184 1 337 1 339 1 220 2 157 1 77 1 221 1 158 3 207 1 224 3 223 1 83 1 139 2 308 2 231 1 195 1 288 1 328 1 374 1 44 1 88 1 124 2 235 2 91 1 26 1 180 1 379 1 96 1 241 1 
48 4 322 2 364 2 284 1 270 1 33 4 156 1 303 1 344 1 13 2 163 1 164 2 311 2 320 1 81 1 
234 1 332 1 9 1 
234 1 332 1 9 1 
133 1 128 1 135 1 332 1 9 1 
234 1 332 1 9 1 
332 1 170 1 9 1 
332 1 170 1 9 1 
332 1 170 1 9 1 
332 1 9 1 
161 1 338 1 
248 1 99 1 154 1 184 1 220 2 108 1 343 2 369 1 163 1 14 1 223 1 347 1 80 2 258 1 191 1 371 1 209 1 193 1 328 1 44 8 88 4 214 1 293 4 
154 1 99 2 248 1 184 2 31 1 56 1 220 4 108 1 250 1 343 3 369 2 251 1 163 1 14 1 223 2 347 1 80 2 371 1 258 1 191 1 209 2 193 1 328 2 145 1 44 11 88 5 214 1 293 6 
363 2 248 1 99 3 154 1 184 3 365 1 31 2 220 6 108 1 250 2 343 4 251 1 369 3 163 1 223 3 14 3 347 1 80 3 371 1 258 1 191 1 209 1 228 1 193 1 352 1 174 1 328 3 145 1 44 19 88 10 238 1 214 1 293 9 
363 1 248 1 99 3 154 1 365 1 184 3 31 2 220 6 108 1 250 2 343 5 251 2 369 3 163 1 223 3 14 2 347 1 80 3 371 1 258 1 191 1 209 1 228 1 193 1 352 1 174 1 328 3 145 1 44 17 88 7 238 1 214 1 293 10 
248 1 99 1 154 1 184 1 220 2 108 1 343 2 369 1 163 1 14 1 223 1 347 1 80 2 258 1 191 1 371 1 209 1 193 1 328 1 44 8 88 4 214 1 293 4 
363 2 248 1 99 1 154 1 184 1 31 2 220 2 250 2 343 2 251 1 369 2 223 1 14 2 80 1 258 1 191 1 209 1 228 1 352 1 174 1 328 1 44 12 88 6 238 1 293 6 
363 1 99 4 154 1 248 1 184 4 365 2 31 2 220 8 108 1 250 2 343 5 251 2 369 3 163 1 223 4 14 2 347 1 80 3 371 1 258 1 191 1 209 1 228 1 193 1 352 1 174 1 328 4 145 1 44 18 88 8 238 1 214 1 293 10 
363 2 154 1 99 4 248 1 184 4 365 2 31 3 220 8 250 3 343 6 251 3 369 3 223 4 189 1 14 2 80 3 258 1 191 1 209 1 228 1 352 1 174 1 328 4 44 16 88 7 238 1 293 9 
371 3 193 3 108 1 88 4 44 7 343 6 251 3 369 1 14 1 347 2 214 1 80 3 293 3 
363 1 154 1 99 4 248 1 184 4 365 2 31 2 220 8 108 1 250 2 343 4 251 1 369 3 163 1 223 4 189 1 14 2 347 1 80 3 371 1 258 1 191 1 209 1 228 1 193 1 352 1 174 1 328 4 44 18 88 8 238 1 214 1 293 10 
371 1 99 2 193 1 184 2 365 1 220 4 108 1 328 2 88 4 44 8 343 3 369 1 251 1 163 1 14 1 223 2 347 1 214 1 293 4 80 2 
371 1 72 1 193 1 108 1 88 3 343 2 44 6 369 1 163 1 14 1 347 1 214 1 80 2 293 3 
363 1 99 1 184 1 31 1 220 2 328 1 145 1 250 1 88 2 343 2 44 4 369 1 251 1 14 1 223 1 80 1 293 2 
363 1 258 1 209 2 248 1 31 1 56 1 250 1 88 4 44 7 343 2 369 1 251 1 14 1 80 1 293 3 
363 2 248 2 314 1 99 2 365 2 184 2 31 2 56 1 220 4 108 1 250 2 343 9 188 1 251 4 369 3 163 1 14 3 223 2 347 1 80 5 371 2 209 2 169 1 193 2 328 2 44 23 88 12 214 1 293 11 
209 1 44 1 88 1 
44 1 248 1 293 1 
363 1 99 1 184 1 31 1 220 2 300 1 328 1 145 1 250 1 88 3 44 6 343 3 369 1 251 1 223 1 14 1 293 3 80 2 
363 2 248 1 99 1 154 1 184 1 31 2 220 2 250 2 343 2 251 1 369 2 223 1 14 2 80 1 258 1 191 1 209 1 228 1 352 1 174 1 328 1 44 12 88 6 238 1 293 6 
371 1 193 1 108 1 44 6 88 3 343 2 369 1 251 1 14 1 293 3 80 1 
371 1 99 1 193 1 365 1 184 1 220 2 328 1 343 2 88 2 44 3 188 1 251 1 223 1 347 1 214 1 293 1 80 1 
371 2 99 1 154 1 193 2 184 1 220 2 328 1 108 1 343 5 44 10 88 5 251 2 369 2 223 1 14 2 93 1 80 3 293 5 
154 1 99 1 184 1 220 2 328 1 250 1 44 2 343 1 369 1 251 1 223 1 293 2 
363 1 154 1 99 1 184 1 31 1 220 2 328 1 250 1 88 2 343 2 44 4 369 1 251 1 14 1 223 1 80 1 293 2 
371 1 154 1 99 3 193 1 365 1 184 3 220 6 328 3 88 2 44 3 343 2 188 1 251 1 189 1 223 3 80 1 293 1 
363 3 99 5 154 1 248 3 249 1 365 2 184 5 31 3 56 1 220 10 108 2 250 3 343 12 188 1 369 5 251 5 163 1 189 1 223 5 14 5 347 1 80 7 371 3 258 1 64 1 209 4 40 1 193 3 328 5 145 1 88 18 44 34 214 1 293 16 
158 1 283 1 124 1 12 1 224 1 237 1 195 1 
283 1 138 1 195 1 298 1 273 1 158 1 45 1 124 1 12 1 36 1 224 1 237 1 
83 1 324 1 139 1 337 1 231 1 195 1 288 1 221 1 77 1 158 2 235 1 124 1 207 1 26 1 180 1 224 2 150 1 241 1 
192 1 83 1 337 1 288 1 77 1 329 1 302 1 356 1 207 1 26 1 180 2 216 1 241 1 
77 1 72 1 207 1 370 1 26 1 180 1 198 1 337 1 231 1 241 1 288 1 
361 1 83 1 324 1 139 1 337 1 231 1 195 1 288 1 221 1 77 1 158 2 235 1 124 1 207 1 26 1 180 1 224 2 241 1 
361 1 49 1 83 2 324 1 139 2 102 1 259 1 55 1 337 2 195 1 288 1 221 1 77 1 158 2 235 1 124 2 207 1 26 1 180 1 224 2 28 1 241 3 216 1 
49 1 102 1 55 1 337 2 132 1 77 1 221 1 158 2 207 2 224 2 83 2 324 1 139 2 259 1 195 1 288 2 124 2 235 1 26 2 180 1 150 1 28 1 216 1 241 3 
48 1 98 1 55 1 34 1 272 1 157 1 79 1 158 1 159 1 207 1 224 1 306 1 322 1 39 1 139 1 308 1 288 1 235 1 124 1 26 1 241 1 216 1 
48 1 98 1 55 1 34 1 272 1 157 1 79 1 158 1 159 1 207 1 224 1 253 1 306 1 322 1 139 1 308 1 288 1 235 1 124 1 26 1 241 1 216 1 
77 1 290 1 207 1 26 1 180 1 288 1 
192 1 29 1 2 1 83 1 6 1 231 2 337 2 173 1 155 1 288 7 77 2 329 1 302 1 290 1 356 1 207 6 26 7 180 3 282 1 137 1 241 3 
152 1 99 2 337 1 108 1 158 2 205 1 343 2 207 1 163 1 14 1 112 1 347 1 62 1 257 1 116 1 118 1 124 1 26 1 180 1 214 1 361 1 184 2 220 4 77 1 221 1 369 1 224 2 223 2 80 2 137 1 371 1 83 1 324 1 139 1 193 1 195 2 287 1 288 1 328 2 44 6 88 3 235 1 91 1 379 2 293 3 96 2 241 1 
48 1 243 1 98 3 153 1 151 1 100 2 219 1 106 1 270 1 107 1 34 3 344 2 13 1 207 1 253 1 320 2 306 1 81 2 322 1 284 2 140 1 231 1 288 1 265 1 26 1 236 1 378 1 241 2 
83 1 337 1 288 2 77 1 302 1 290 1 207 2 357 1 236 1 26 2 180 2 137 1 241 2 
231 1 337 1 132 1 288 4 77 1 25 1 207 4 26 4 370 1 180 1 198 1 137 1 241 1 
83 1 7 1 337 1 8 1 288 2 77 1 329 1 356 1 207 2 252 1 26 2 180 2 216 1 241 1 
312 1 77 1 207 1 38 1 26 1 180 1 231 1 305 1 254 1 288 1 
6 1 337 1 155 1 288 2 77 1 207 2 26 2 180 1 335 1 137 1 241 1 
2 1 29 1 6 1 231 1 337 2 288 5 77 2 25 1 207 4 370 1 26 5 198 1 180 2 216 1 137 1 241 3 
29 1 6 1 231 1 337 2 67 1 288 5 77 2 25 1 207 4 370 1 26 5 198 1 180 2 216 1 137 1 241 3 
277 1 326 1 195 1 182 1 136 1 
48 1 362 1 322 1 98 2 151 1 102 1 259 1 218 1 140 1 55 1 326 2 66 1 195 1 34 2 197 1 368 1 277 2 182 1 136 2 
217 1 336 1 326 1 158 1 124 1 224 1 200 1 182 1 136 1 
362 1 218 1 182 1 
72 1 172 1 240 1 208 1 
190 1 372 1 70 1 165 1 172 1 240 1 208 1 
3 1 165 1 355 1 
190 3 176 1 372 1 10 1 376 2 70 1 165 3 172 1 226 1 240 1 307 1 208 1 
190 2 372 1 70 1 165 2 203 1 172 1 71 1 240 1 208 1 
190 1 129 1 372 1 70 1 230 1 38 1 165 1 305 1 76 1 307 1 208 1 
190 1 372 1 70 1 165 1 240 1 307 1 208 1 
190 1 372 1 70 1 165 1 172 1 240 2 307 1 
190 2 372 2 318 1 122 1 70 2 331 1 165 2 240 1 307 1 208 1 
190 3 372 1 73 1 203 2 172 1 76 1 340 1 57 1 70 1 165 3 240 1 307 1 208 2 
312 1 190 2 372 1 230 1 203 1 172 1 70 1 160 1 38 2 165 2 278 1 305 1 240 1 307 1 208 1 
190 4 372 2 268 1 203 2 172 1 76 1 57 1 70 2 165 4 71 1 240 1 307 1 208 2 
190 1 372 1 70 1 165 1 172 1 240 1 307 1 208 1 
190 4 372 1 316 1 203 2 172 2 76 1 176 1 57 1 376 1 70 1 165 4 226 1 240 2 208 3 
190 2 372 1 203 1 172 1 143 1 70 1 165 2 15 1 240 1 307 1 208 1 17 1 
190 3 372 1 103 1 172 1 176 1 70 1 376 2 165 3 226 2 307 1 240 1 208 1 
310 1 51 1 222 2 208 2 
190 1 372 1 70 1 165 1 215 1 307 1 
190 2 372 1 70 1 73 1 165 2 203 1 172 1 240 1 307 1 208 1 
59 1 
190 1 372 1 70 1 165 1 172 1 240 1 307 1 208 1 
190 3 372 1 376 1 70 1 73 1 165 3 203 1 172 1 240 1 307 1 208 1 
57 1 316 1 76 1 208 1 
240 1 208 1 

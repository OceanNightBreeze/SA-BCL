#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
55 1 358 2 25 1 62 2 190 1 159 1 4 2 3 4 42 1 221 1 302 2 250 5 367 1 45 1 12 1 251 3 372 1 75 6 146 1 129 1 209 9 151 2 16 2 230 1 138 2 381 1 53 9 113 1 
55 1 358 2 25 1 62 2 190 1 159 1 4 2 3 4 42 1 221 1 250 5 302 2 367 1 45 1 12 1 251 3 372 1 75 6 146 1 129 1 209 9 151 2 16 2 230 1 138 2 381 1 53 9 113 1 
55 1 358 2 25 1 62 2 190 1 159 1 4 2 3 5 42 1 221 1 250 6 302 2 367 1 45 1 12 1 251 4 372 1 75 7 146 1 129 1 209 10 151 2 16 2 230 1 138 2 381 1 53 10 113 1 
55 1 358 2 25 1 62 2 190 1 159 1 4 2 3 3 42 1 221 1 250 4 302 1 367 1 45 1 251 2 372 1 75 4 146 1 129 1 209 7 151 2 16 2 230 1 138 2 381 1 53 7 113 1 
75 3 372 1 358 1 129 1 209 4 62 1 151 1 4 1 3 2 221 1 302 2 250 3 138 1 53 4 45 1 251 1 12 1 113 1 
146 1 358 1 129 1 209 2 62 1 25 1 329 1 16 1 4 1 248 1 250 1 138 1 53 2 45 1 113 1 201 1 
55 1 75 1 358 2 129 1 209 3 62 2 16 1 3 1 250 2 53 3 45 1 251 1 113 1 
55 1 218 1 372 1 75 7 358 2 129 1 209 9 62 2 151 1 16 1 4 1 42 1 3 4 221 1 309 1 302 2 250 5 138 1 367 1 53 9 45 1 12 1 251 3 113 1 
55 1 218 1 372 1 75 7 358 2 129 1 209 9 62 2 151 1 16 1 4 1 42 1 3 4 221 1 309 1 302 2 250 5 138 1 367 1 53 9 45 1 12 1 251 3 113 1 
18 1 305 1 242 1 
305 1 240 1 322 2 
346 2 256 2 219 2 261 2 238 1 71 2 21 1 91 2 
56 2 219 2 188 1 237 1 267 1 327 1 238 1 24 2 61 1 90 1 119 1 26 1 91 2 362 1 244 1 7 2 71 2 10 1 168 1 170 1 169 1 256 3 261 2 51 1 150 1 229 1 104 2 308 1 346 3 39 1 214 1 185 1 152 1 349 1 21 1 110 2 264 1 
346 1 256 1 58 1 219 1 261 1 71 1 21 1 15 1 11 1 91 1 
227 1 256 1 219 1 339 1 1 1 325 1 304 1 305 1 15 1 183 1 346 1 18 1 93 1 41 1 
256 1 219 1 1 2 339 1 261 1 304 2 305 1 15 1 91 1 183 1 346 1 18 1 93 1 71 1 41 1 
1 1 304 1 178 1 210 1 252 1 
18 1 1 2 304 2 305 1 78 1 224 1 210 1 252 1 
1 1 304 1 210 1 
58 1 256 1 219 1 116 1 1 1 261 1 304 1 15 1 91 1 346 1 21 1 71 1 11 1 252 1 
305 1 
18 1 1 2 304 2 305 1 380 1 78 1 210 1 252 1 
23 1 303 2 258 1 1 5 47 1 374 2 205 1 304 5 305 1 177 1 78 1 210 2 18 1 232 1 124 1 137 1 22 1 139 2 252 2 
238 1 242 1 
256 2 87 1 219 2 261 1 238 2 91 1 346 2 71 1 384 1 
67 1 89 1 102 1 
56 1 256 1 114 1 188 1 237 1 238 1 24 1 90 1 51 1 26 1 346 1 214 1 185 1 152 1 7 1 264 1 
56 1 256 2 219 1 188 1 237 1 24 1 90 1 51 1 26 1 91 1 67 1 346 2 212 1 214 1 185 1 152 1 7 1 71 1 264 1 186 1 
227 1 256 5 87 1 76 1 219 5 261 1 238 1 35 1 91 4 346 5 212 1 272 1 71 4 186 2 
100 1 346 2 256 2 219 2 71 2 15 1 11 1 91 2 
346 3 256 3 219 3 261 1 238 1 71 3 186 1 91 3 
346 1 256 1 219 1 71 1 15 1 11 1 91 1 
346 1 256 1 87 1 219 1 261 1 71 1 15 1 384 1 91 1 
56 1 87 1 219 3 188 1 1 1 237 1 267 1 238 1 24 1 61 1 90 1 26 1 91 3 362 1 244 1 93 1 7 1 71 3 168 1 170 1 169 1 256 4 339 1 261 2 341 1 304 1 51 1 150 1 15 1 229 1 183 1 104 1 346 4 212 1 214 1 185 1 152 1 349 1 21 1 110 2 264 1 109 1 186 1 41 1 
227 1 346 2 256 2 76 1 219 2 238 1 71 1 186 1 91 1 
256 3 87 1 219 3 1 1 339 1 261 1 304 1 305 1 15 1 91 3 183 1 346 3 212 1 93 1 71 3 186 2 109 1 41 1 254 1 
256 2 87 1 219 2 89 1 261 1 91 2 346 2 67 1 71 2 186 1 
56 1 256 1 188 1 237 1 238 1 24 1 90 1 51 1 26 1 346 1 214 1 185 1 152 1 7 1 264 1 
56 1 256 1 188 1 237 1 282 1 238 1 24 1 90 1 51 1 26 1 81 1 346 1 214 1 7 1 264 1 
89 2 267 1 362 1 67 2 161 1 196 1 364 1 68 1 247 1 365 1 168 1 169 1 170 2 202 1 102 2 36 1 150 1 229 1 104 4 39 2 213 1 153 1 290 1 110 2 
346 1 256 1 100 1 219 1 71 1 15 1 91 1 183 1 
189 1 217 1 
189 1 217 1 
171 1 330 1 
171 1 330 1 
171 1 330 1 
189 1 206 1 217 1 
189 1 206 1 217 1 
189 1 217 1 271 1 
171 1 162 1 189 2 217 2 293 1 330 1 
189 1 206 1 217 1 
189 1 217 1 73 1 
189 1 217 1 73 1 
189 1 217 1 73 1 
86 1 155 1 219 2 189 1 1 1 238 1 60 1 268 1 91 2 271 1 314 1 164 1 71 2 226 1 256 2 46 1 172 1 204 1 48 1 304 1 37 1 346 2 288 1 217 1 
155 3 204 2 189 2 1 2 207 1 304 2 305 1 60 2 307 1 268 2 299 1 66 1 162 1 273 1 133 2 288 2 291 1 217 2 226 1 
4 1 138 1 151 1 
4 1 248 1 138 1 
32 1 4 3 173 1 324 1 248 1 151 2 
32 1 4 2 324 1 248 1 239 1 151 1 
32 1 4 2 324 2 248 1 151 1 
88 1 1 5 240 1 194 2 161 1 164 1 247 1 70 1 275 1 316 1 252 4 278 2 46 1 303 1 338 2 258 3 374 1 48 1 304 5 305 2 77 1 78 1 210 1 213 1 18 1 232 1 233 1 216 1 290 1 22 2 139 1 322 3 
85 1 88 1 1 9 240 3 270 1 194 6 161 3 5 1 247 3 275 3 316 2 252 7 200 1 278 6 368 1 371 1 303 2 258 8 47 1 374 2 48 4 208 5 304 9 305 5 178 5 78 1 210 6 213 3 18 1 232 1 233 2 290 3 22 6 139 2 322 9 
1 3 240 2 194 2 161 1 247 1 275 1 316 1 252 2 278 2 303 1 338 1 258 3 374 1 47 1 48 1 304 3 305 3 77 1 213 1 18 1 233 1 216 1 290 1 22 2 139 1 322 4 
85 1 1 4 240 3 194 4 161 2 247 2 5 1 275 2 316 1 252 3 278 4 368 1 303 1 338 2 258 5 374 1 47 1 48 2 304 4 305 4 77 1 213 2 18 1 233 1 216 1 290 2 22 4 139 1 322 7 
51 1 242 1 285 1 
51 1 158 1 
352 1 
188 1 51 1 26 1 
51 1 98 1 
188 1 51 1 
101 1 188 1 350 1 51 3 285 2 26 1 
170 3 236 1 360 1 344 1 36 2 191 1 104 7 184 1 213 1 39 4 143 2 20 1 125 1 153 3 290 1 353 1 292 1 
170 3 236 1 360 1 344 1 36 2 191 1 104 7 184 1 213 1 39 4 143 2 20 1 125 1 153 3 290 1 353 1 292 1 
170 3 236 1 175 1 360 1 344 1 36 2 191 1 104 7 184 1 213 1 39 4 143 2 20 1 125 1 153 3 290 1 353 1 292 1 
140 1 236 5 360 2 191 1 362 1 195 1 161 3 143 3 247 3 125 2 275 3 276 3 30 1 169 1 170 15 373 1 176 1 344 1 36 5 150 1 79 4 229 1 104 31 184 2 39 16 213 4 20 1 153 10 82 1 290 4 110 2 353 1 321 1 292 2 
236 1 156 1 360 1 328 1 191 1 362 2 143 2 125 1 169 2 170 4 373 1 36 3 150 2 229 2 104 9 184 1 213 1 39 5 20 1 153 4 290 1 110 4 353 1 292 1 
0 1 56 1 323 1 358 1 359 1 24 1 62 1 90 1 160 1 4 2 248 1 250 1 7 1 366 1 45 1 255 1 75 1 173 1 228 1 129 1 209 2 149 1 151 1 345 1 16 1 215 1 214 1 138 1 53 2 113 1 
0 1 56 1 355 1 323 1 358 1 359 1 24 1 62 1 90 1 160 1 4 2 248 1 250 1 7 1 366 1 8 1 96 1 173 1 75 2 228 1 129 1 209 3 151 1 345 1 16 1 215 1 214 1 138 1 53 3 113 1 
0 1 56 1 355 1 359 1 24 1 90 1 4 2 248 1 250 1 7 1 366 1 96 1 75 2 173 1 228 1 129 1 209 2 345 1 151 1 16 1 215 1 214 1 138 1 53 2 113 1 
0 2 56 1 187 1 234 1 188 1 358 1 237 1 359 2 24 1 142 1 90 1 62 1 7 1 8 1 209 1 51 1 284 1 345 2 16 2 318 1 214 1 53 1 112 1 
0 1 56 1 355 1 323 1 358 1 359 1 24 1 62 1 90 1 160 1 4 2 248 1 7 1 366 1 45 1 173 1 228 1 209 1 149 1 151 1 345 1 16 1 215 1 214 1 138 1 53 1 
300 1 
187 1 188 1 1 5 237 2 325 1 296 2 240 2 90 1 192 1 93 1 249 2 7 2 334 1 144 1 99 2 337 2 14 1 256 1 303 1 258 2 339 1 304 5 305 2 148 2 51 1 15 1 210 6 346 1 214 1 18 1 19 1 351 1 22 2 112 1 54 1 56 2 312 2 219 1 24 2 64 2 27 1 123 1 29 1 316 1 223 1 227 1 279 4 374 1 78 3 183 1 232 1 320 1 139 1 322 2 41 1 
219 1 1 3 325 1 192 1 64 1 123 1 93 1 144 1 256 1 227 1 14 1 279 2 339 1 304 3 78 1 15 1 210 2 183 1 346 1 19 1 380 1 41 1 
219 1 1 3 325 1 192 1 123 1 93 1 144 1 99 1 256 1 227 1 14 1 279 3 339 1 304 3 305 1 78 1 15 1 210 1 183 1 346 1 19 1 18 1 380 1 41 1 
219 1 1 3 325 1 296 1 192 1 64 1 123 1 93 1 144 1 99 1 256 1 227 1 14 1 279 3 339 1 304 3 305 1 78 1 15 1 210 2 183 1 346 1 19 1 18 1 380 1 41 1 
1 5 325 1 296 4 240 2 241 1 192 1 93 1 94 1 249 2 334 1 144 1 99 4 256 1 14 1 337 2 303 1 258 1 339 1 304 5 305 5 148 2 262 1 15 1 210 7 346 1 19 1 18 5 348 1 22 1 312 2 219 1 64 4 123 1 29 1 227 1 279 6 374 1 78 3 183 1 232 1 380 1 319 1 139 1 41 1 
1 4 325 1 296 2 240 2 192 1 93 1 249 2 334 1 144 1 99 2 256 1 14 1 337 2 303 1 258 1 339 1 304 4 305 2 148 2 15 1 210 4 346 1 19 1 18 1 22 1 312 2 219 1 64 2 123 1 29 1 227 1 279 4 374 1 78 2 183 1 232 1 320 1 139 1 322 2 41 1 
312 2 219 1 1 4 325 1 296 2 240 2 241 1 192 1 64 2 123 1 93 1 249 2 29 1 334 1 144 1 99 2 337 2 256 1 227 1 14 1 279 4 303 1 258 1 374 1 339 1 304 4 305 1 148 2 78 2 15 1 210 4 183 1 346 1 18 1 19 1 232 1 319 1 348 1 22 1 139 1 41 1 
312 2 219 1 1 4 325 1 296 2 240 2 241 1 192 1 64 2 123 1 93 1 249 2 29 1 334 1 144 1 99 2 337 2 256 1 227 1 14 1 279 4 303 1 258 1 374 1 339 1 304 4 305 1 148 2 78 2 15 1 210 4 183 1 346 1 18 1 19 1 232 1 319 1 348 1 22 1 139 1 41 1 
219 1 1 4 325 1 296 2 297 1 192 1 64 2 123 1 93 1 249 2 29 1 126 2 144 1 99 2 253 2 337 2 256 1 227 1 14 1 279 4 303 1 258 1 374 1 339 1 304 4 305 1 78 2 15 1 210 4 183 1 346 1 105 1 18 1 19 1 232 1 106 1 348 1 22 1 139 1 322 2 41 1 
312 2 219 1 1 4 325 1 296 3 240 2 241 1 192 1 64 3 123 1 93 1 94 1 249 2 29 1 334 1 144 1 99 3 337 2 256 1 227 1 14 1 303 1 279 5 258 1 374 1 339 1 304 4 305 1 148 2 78 2 15 1 210 5 183 1 346 1 18 1 19 1 232 1 319 1 348 1 22 1 139 1 41 1 
312 2 219 1 1 4 325 1 296 3 240 2 241 1 192 1 64 3 123 1 93 1 94 1 249 2 29 1 334 1 144 1 99 3 337 2 256 1 227 1 14 1 303 1 279 5 258 1 374 1 339 1 304 4 305 1 148 2 78 2 15 1 210 5 183 1 346 1 18 1 19 1 232 1 319 1 348 1 22 1 139 1 41 1 
1 4 325 1 296 2 297 1 192 1 93 1 249 2 144 1 99 2 253 2 256 1 14 1 337 2 303 1 258 1 339 1 304 4 305 1 15 1 210 4 346 1 19 1 18 1 22 1 219 1 64 2 123 1 29 1 126 2 227 1 279 4 374 1 78 2 183 1 232 1 320 1 139 1 322 2 41 1 
170 3 169 1 89 1 267 1 238 2 102 1 36 2 242 1 150 1 191 1 229 1 362 1 104 6 67 1 39 3 213 1 196 1 143 1 20 1 125 1 153 2 290 1 110 2 353 1 292 1 168 1 
236 1 89 4 267 1 238 1 362 2 195 1 67 11 161 2 247 1 275 2 276 3 30 1 31 1 168 2 170 6 169 2 370 1 203 1 340 1 283 1 36 1 102 11 150 2 79 3 229 2 104 14 308 1 39 8 213 2 153 2 349 1 290 1 110 4 
56 1 114 1 219 1 188 1 89 1 237 1 267 1 238 1 24 1 90 1 26 1 91 1 362 1 7 1 71 1 168 1 169 1 170 1 256 2 369 1 283 1 51 1 150 1 229 1 104 2 346 2 308 1 212 1 214 1 39 1 185 1 152 1 378 1 287 1 349 1 264 1 186 1 110 2 
236 4 188 2 89 7 237 1 238 2 90 2 191 1 91 1 244 2 332 2 143 1 247 2 95 1 7 3 256 3 306 2 51 2 102 7 150 3 104 20 308 1 346 3 212 1 214 2 213 3 152 2 20 1 153 8 349 1 110 6 264 2 353 1 56 3 355 1 219 1 356 2 267 3 24 3 120 1 26 2 362 3 67 7 161 2 125 1 275 2 71 1 168 3 170 10 169 3 283 1 36 4 80 1 229 3 39 10 185 2 135 2 290 3 186 1 292 1 
56 7 187 1 355 1 219 1 188 2 237 2 267 2 24 8 90 2 119 2 91 1 362 2 196 1 315 1 197 1 274 1 7 8 71 1 168 2 255 1 169 2 170 1 256 1 33 1 34 1 375 1 51 3 150 2 229 2 286 1 104 2 346 1 308 1 214 2 39 1 349 1 186 1 110 4 112 1 
87 1 219 1 89 1 267 1 91 1 362 1 67 1 161 1 247 1 275 1 71 1 168 1 169 1 170 2 256 1 261 1 283 1 147 1 36 1 102 1 150 1 229 1 104 3 346 1 213 1 39 1 153 1 290 1 110 2 
169 1 236 1 89 1 267 1 102 1 150 1 229 1 362 1 104 2 67 1 161 1 196 1 213 1 39 2 68 1 153 1 110 2 168 1 
169 1 170 2 202 1 89 1 267 1 36 1 102 1 150 1 229 1 362 1 104 2 67 1 196 1 247 1 153 1 290 1 110 2 168 1 
236 1 89 2 267 1 362 1 67 2 161 1 196 1 247 1 275 1 168 1 169 1 170 2 102 2 36 1 150 1 229 1 104 4 39 2 213 1 153 2 290 1 110 2 
169 1 236 1 89 1 267 1 102 1 150 1 229 1 362 1 104 2 67 1 161 1 315 1 213 1 39 2 68 1 153 1 110 2 168 1 
169 1 170 2 202 1 89 1 267 1 36 1 102 1 150 1 229 1 362 1 104 2 67 1 315 1 247 1 153 1 290 1 110 2 168 1 
236 1 89 2 267 1 362 1 67 2 161 1 315 1 247 1 275 1 168 1 169 1 170 2 102 2 36 1 150 1 229 1 104 4 39 2 213 1 153 2 290 1 110 2 
170 2 169 1 236 1 89 2 267 1 36 1 102 2 150 1 229 1 362 1 104 4 67 2 161 1 213 1 39 2 247 1 153 2 275 1 290 1 110 2 168 1 
56 1 188 1 237 1 267 1 238 1 24 1 90 1 26 1 362 1 244 1 7 1 168 1 169 1 170 1 256 1 51 1 150 1 229 1 104 2 308 1 346 1 39 1 214 1 185 1 152 1 349 1 264 1 110 2 
56 1 188 1 326 1 237 1 267 1 238 1 24 1 90 1 26 1 362 1 7 1 168 1 169 1 170 1 256 1 282 1 51 1 150 1 229 1 104 2 81 1 308 1 346 1 39 1 214 1 349 1 264 1 110 2 
236 1 89 2 267 1 362 1 67 2 161 1 247 1 275 1 168 1 169 1 170 2 283 1 102 2 36 1 150 1 229 1 104 4 39 2 213 1 153 2 290 1 110 2 
56 1 236 1 89 2 188 1 267 1 24 1 90 1 26 1 362 1 67 2 244 1 161 1 332 1 247 1 7 1 275 1 168 1 170 2 255 1 169 1 256 1 51 1 36 1 102 2 150 1 229 1 104 4 346 1 39 2 213 1 214 1 185 1 152 1 153 2 290 1 264 1 110 2 
87 1 236 1 219 1 89 1 267 1 91 1 362 1 67 1 161 1 247 1 275 1 71 1 168 1 170 1 169 1 256 1 261 1 283 1 102 1 150 1 180 1 229 1 104 3 346 1 213 1 39 2 153 1 290 1 110 2 
235 1 236 3 118 2 328 1 362 2 195 1 245 1 28 1 161 3 163 1 247 3 165 1 275 3 276 1 30 1 169 2 170 10 317 1 36 3 377 1 150 2 181 2 79 2 229 2 104 19 39 9 213 3 153 6 290 3 110 4 
236 2 118 4 298 1 328 1 65 1 362 3 245 2 28 1 363 1 161 3 247 2 165 1 275 3 276 2 30 2 170 12 169 3 373 2 317 1 342 1 376 1 36 2 377 2 150 3 181 1 229 3 79 2 104 26 52 1 39 14 213 3 153 4 290 2 110 6 
236 4 118 4 298 1 328 1 191 1 65 1 362 3 195 1 245 1 363 1 28 1 161 4 163 1 143 1 247 4 125 1 165 1 275 4 276 3 335 1 30 3 169 3 170 21 373 1 317 1 376 1 342 1 36 4 377 2 150 3 181 1 79 4 229 3 104 41 52 1 39 20 213 5 20 1 153 8 290 5 110 6 353 1 292 1 
236 3 118 4 298 1 328 1 191 1 65 1 362 4 195 1 245 1 363 1 28 1 161 4 163 1 143 1 247 3 125 1 165 1 275 4 276 3 335 1 30 3 169 4 170 18 373 2 317 1 376 1 342 1 36 4 377 2 150 4 181 1 79 4 229 4 104 38 52 1 39 20 213 5 20 1 153 7 290 4 110 8 353 1 292 1 
236 7 118 4 298 1 328 1 191 1 65 1 362 2 195 2 245 1 363 1 28 1 161 7 143 1 247 7 125 1 165 1 275 7 276 4 30 2 31 2 169 2 170 25 373 1 317 1 376 1 342 1 36 7 377 1 150 2 181 1 79 4 229 2 104 52 52 1 39 27 213 8 20 1 153 14 290 8 110 4 353 1 292 1 
204 1 189 1 259 1 60 1 268 1 288 1 72 1 217 1 225 1 84 1 
86 1 271 1 
246 1 204 1 141 1 189 1 131 1 60 1 288 1 268 1 217 1 
206 1 211 1 
63 1 73 1 293 1 
155 2 204 1 1 1 189 1 207 1 304 1 305 1 60 1 268 1 299 1 66 1 162 1 273 1 133 1 288 1 291 1 217 1 226 1 
155 2 204 1 1 1 189 1 207 1 304 1 305 1 60 1 268 1 299 1 66 1 162 1 273 1 133 1 288 1 291 1 217 1 226 1 
155 2 204 1 1 1 189 1 207 1 304 1 305 1 60 1 268 1 299 1 66 1 162 1 273 1 133 1 288 1 291 1 217 1 226 1 
206 1 293 1 211 1 
206 1 293 1 211 1 
63 1 73 1 
63 1 73 1 293 1 
314 1 172 1 
86 1 155 1 219 2 1 1 189 1 238 1 60 1 268 1 91 2 299 1 271 1 314 1 164 1 71 2 252 1 256 2 46 1 172 1 204 1 48 1 304 1 37 1 346 2 133 1 310 1 288 1 217 1 
56 2 219 2 188 1 267 1 24 2 90 1 157 1 119 2 362 1 274 1 7 2 168 1 169 1 170 1 256 2 128 1 283 1 51 1 150 1 229 1 286 1 104 2 346 2 308 1 38 1 214 1 39 1 107 1 349 1 110 2 83 1 
56 2 255 1 173 1 355 1 127 1 323 1 228 1 24 2 90 1 361 1 151 1 345 1 4 2 214 1 215 1 248 1 7 2 138 1 382 1 
56 1 173 1 355 1 323 1 228 1 24 1 90 1 361 1 151 1 345 1 4 2 43 1 215 1 214 1 248 1 7 1 138 1 
56 1 187 1 234 1 127 1 188 1 237 1 24 1 90 1 51 1 345 1 214 1 7 1 112 1 199 1 
56 1 173 1 355 1 127 1 323 1 228 1 24 1 90 1 361 1 151 1 345 1 4 2 215 1 214 1 248 1 7 1 138 1 382 1 
295 1 
258 1 18 1 124 1 137 1 305 1 22 1 242 1 
312 1 1 1 240 1 334 1 303 1 258 1 374 1 304 1 305 2 148 1 78 1 210 1 18 1 232 1 22 1 139 1 322 1 
188 3 1 5 237 1 240 6 90 4 194 6 2 2 247 2 7 3 333 1 9 2 98 2 255 1 13 1 101 1 303 4 258 9 260 1 304 5 305 8 306 2 51 10 210 5 17 1 214 3 213 2 18 2 108 2 22 8 154 2 56 3 115 1 24 3 158 3 26 3 121 2 27 1 161 2 124 1 167 2 275 2 316 2 278 6 174 2 374 4 78 3 285 2 182 2 232 4 137 1 290 2 139 4 322 12 41 2 
265 1 1 1 240 3 298 1 194 5 27 1 363 1 161 2 247 2 275 2 276 1 316 1 30 1 278 5 303 2 174 2 258 8 374 2 304 1 305 5 342 1 376 1 78 1 210 1 79 1 103 1 52 1 213 2 18 2 232 2 290 2 22 5 154 1 139 2 322 6 
58 1 219 1 116 1 1 1 241 1 193 1 91 1 125 1 71 1 11 1 256 1 303 1 174 2 258 2 374 1 261 1 304 1 15 1 346 1 213 2 232 1 20 1 290 1 21 1 22 2 154 1 139 1 292 1 
303 1 258 1 374 1 305 1 18 1 232 1 137 1 124 1 22 1 139 1 
174 2 258 5 305 5 240 5 306 1 194 5 161 2 213 2 247 2 275 2 290 2 22 5 154 1 322 10 278 5 
18 1 1 1 304 1 305 1 78 1 210 1 
56 4 187 1 57 1 188 1 1 3 237 2 24 4 90 1 27 2 7 4 316 2 280 1 303 2 258 2 260 2 47 1 374 2 304 3 51 1 78 2 210 4 17 1 214 1 232 1 351 1 22 2 139 2 112 1 54 1 
56 1 219 2 188 1 237 1 267 1 238 1 24 1 61 1 90 1 91 2 26 1 362 1 244 1 7 1 71 2 168 1 170 1 169 1 256 3 261 2 51 1 150 1 229 1 104 1 346 3 214 1 185 1 152 1 349 1 21 1 110 2 264 1 
303 1 258 1 374 1 305 4 240 2 194 2 27 1 18 2 143 1 232 1 22 2 316 1 139 1 322 4 278 2 
60 1 288 1 269 1 
60 1 288 1 269 1 
314 1 207 1 222 1 60 1 288 1 
60 1 288 1 269 1 
122 1 60 1 288 1 
122 1 60 1 288 1 
122 1 60 1 288 1 
60 1 288 1 
189 1 217 1 
170 4 169 2 236 1 373 1 36 2 150 2 191 1 229 2 362 2 104 8 213 1 39 4 143 1 20 1 125 1 153 3 290 1 110 4 353 1 292 1 
170 3 242 1 36 2 191 1 104 6 213 1 39 3 143 1 125 1 20 1 153 2 290 1 353 1 292 1 
170 2 169 1 236 1 117 1 36 1 150 1 229 1 362 1 104 4 161 1 213 1 39 2 247 1 153 2 275 1 290 1 110 2 
170 4 236 1 36 1 79 2 195 1 104 7 161 1 39 3 213 1 247 1 153 2 275 1 290 1 276 1 30 1 
236 4 191 1 195 1 362 2 161 2 143 1 247 2 125 2 275 2 276 2 31 1 170 12 169 2 370 1 373 2 36 5 150 2 79 2 229 2 104 23 213 3 39 11 20 1 379 1 153 9 290 3 110 4 353 1 292 2 
104 1 170 1 79 1 
104 1 39 1 276 1 
169 1 170 3 236 1 117 1 306 1 36 2 150 1 362 1 229 1 104 6 161 1 213 1 39 3 247 1 153 3 275 1 290 1 110 2 
236 1 328 1 298 1 362 1 363 1 161 2 247 2 275 2 276 1 30 1 170 6 169 1 342 1 376 1 36 1 150 1 79 1 229 1 104 12 39 6 213 2 52 1 153 2 290 2 110 2 
170 3 236 1 36 1 104 6 213 1 39 3 20 1 125 1 153 2 290 1 292 1 
170 2 169 1 236 1 373 1 36 1 191 1 150 1 229 1 362 1 104 3 39 1 125 1 379 1 153 2 110 2 353 1 292 1 
169 1 170 5 236 2 328 1 36 3 150 1 193 1 362 1 229 1 104 10 39 5 213 2 125 2 20 1 153 5 290 2 110 2 292 2 
169 1 236 1 328 1 150 1 229 1 362 1 104 2 161 1 213 1 39 2 153 1 110 2 
170 2 169 1 236 1 328 1 36 1 150 1 229 1 362 1 104 4 161 1 213 1 39 2 247 1 153 2 275 1 290 1 110 2 
170 2 169 3 236 1 373 1 328 1 36 1 150 3 229 3 362 3 104 3 163 1 39 1 379 1 125 1 153 2 110 6 292 1 
140 1 236 5 117 1 328 1 191 1 362 5 195 1 161 3 163 1 143 1 247 3 125 3 275 3 276 3 30 1 170 18 169 5 373 2 176 1 36 7 150 5 79 4 229 5 104 34 39 16 213 5 20 2 379 1 153 12 82 1 290 5 110 10 353 1 292 3 
328 1 191 1 362 1 363 1 143 1 125 1 276 1 30 1 170 4 169 1 36 2 150 1 79 1 229 1 104 8 213 1 39 4 20 1 153 2 290 1 110 2 353 1 292 1 
236 1 117 1 328 1 191 1 362 2 195 1 363 1 161 1 143 1 125 1 275 1 276 1 30 1 170 5 169 2 36 2 150 2 79 2 229 2 104 11 39 6 213 2 20 1 153 3 290 1 110 4 353 1 292 1 
236 1 117 1 328 1 298 1 191 1 362 3 363 1 161 2 143 1 247 2 125 1 275 2 276 1 30 1 170 10 169 3 373 1 342 1 376 1 36 3 150 3 79 1 229 3 104 19 52 1 39 9 213 3 20 1 153 4 290 3 110 6 353 1 292 1 
236 2 117 1 328 1 298 1 191 1 362 3 363 1 161 2 143 1 247 1 125 1 275 2 276 1 30 1 170 7 169 3 373 1 342 1 376 1 36 3 150 3 79 1 229 3 104 17 39 10 213 3 52 1 20 1 153 5 290 2 110 6 353 1 292 1 
328 1 191 1 362 1 363 1 143 1 125 1 276 1 30 1 170 4 169 1 36 2 150 1 79 1 229 1 104 8 213 1 39 4 20 1 153 2 290 1 110 2 353 1 292 1 
236 1 328 1 298 1 362 1 363 1 161 2 247 2 275 2 276 1 30 1 170 6 169 1 342 1 376 1 36 1 150 1 79 1 229 1 104 12 39 6 213 2 52 1 153 2 290 2 110 2 
236 2 117 1 298 1 328 1 191 1 362 4 363 1 161 2 143 1 247 1 125 1 275 2 276 1 30 1 170 8 169 4 373 2 342 1 376 1 36 3 150 4 79 1 229 4 104 18 52 1 39 10 213 3 20 1 153 5 290 2 110 8 353 1 292 1 
236 3 298 1 328 1 362 4 363 1 161 3 163 1 247 2 275 3 276 1 30 1 170 7 169 4 373 2 342 1 376 1 36 3 150 4 79 1 229 4 104 16 52 1 39 9 213 3 153 6 290 2 110 8 
170 4 236 3 36 3 191 2 104 7 213 1 39 3 125 3 20 1 153 6 290 1 353 1 292 3 
236 1 298 1 328 1 191 1 362 4 363 1 161 2 163 1 143 1 247 1 125 1 275 2 276 1 30 1 170 8 169 4 373 2 342 1 376 1 36 3 150 4 79 1 229 4 104 18 52 1 39 10 213 3 20 1 153 4 290 2 110 8 353 1 292 1 
346 1 256 1 227 1 219 1 76 1 238 1 383 1 
336 1 74 1 227 1 256 1 76 1 219 1 357 1 281 1 238 1 346 1 166 1 383 1 
187 1 56 1 214 1 188 1 237 1 24 1 7 1 90 1 51 1 242 1 112 1 
56 1 256 2 219 1 188 1 237 1 238 1 24 1 90 1 51 1 26 1 91 1 346 2 214 1 152 1 7 1 71 1 264 1 186 1 
56 1 219 2 188 2 238 1 24 1 90 1 91 1 26 2 121 1 7 1 71 2 98 1 256 2 260 1 339 1 51 3 15 1 183 1 346 2 214 1 152 1 186 1 264 1 
56 2 219 2 188 2 238 1 24 2 90 1 91 1 26 2 121 1 7 2 71 2 98 1 256 2 260 1 339 1 51 3 15 1 183 1 81 1 346 2 214 1 186 1 264 1 111 1 
56 3 188 1 1 2 260 1 237 1 304 2 305 1 24 3 90 1 51 4 158 1 26 1 210 1 285 1 121 1 214 1 18 1 69 1 7 3 40 1 98 1 111 1 41 1 
56 3 188 1 1 2 260 1 237 1 304 2 305 1 24 3 90 1 51 4 158 1 26 1 210 1 285 1 121 1 214 1 18 1 7 3 167 1 98 1 111 1 41 1 
56 1 214 1 197 1 24 1 7 1 90 1 
255 1 56 6 101 1 145 1 355 1 33 1 188 2 34 1 237 2 220 1 375 1 24 7 90 3 51 3 119 1 26 1 286 1 331 1 214 2 197 1 7 7 
89 1 188 1 238 2 90 1 191 1 91 1 244 1 332 1 143 1 7 1 255 1 256 2 51 1 102 1 150 2 104 6 346 2 214 1 213 1 152 1 20 1 153 2 110 4 264 1 353 1 56 1 219 1 267 2 24 1 157 1 26 1 362 2 67 1 125 1 71 1 168 2 169 2 170 3 283 1 36 2 229 2 39 3 185 1 135 1 290 1 186 1 292 1 
56 1 1 3 237 1 24 1 158 1 2 1 124 1 7 1 167 1 9 1 252 1 303 2 258 1 374 2 304 3 305 1 51 2 78 1 210 2 285 1 17 1 18 1 232 2 137 1 108 1 22 1 139 2 41 1 
255 1 56 2 13 1 101 1 188 1 24 2 90 2 51 2 285 1 26 1 214 1 197 1 7 2 
56 4 255 1 187 1 188 1 237 1 24 4 90 1 51 1 214 1 136 1 7 4 111 1 112 1 
56 2 145 1 188 1 260 1 220 1 24 2 90 2 51 1 120 1 26 1 92 1 214 1 198 1 7 2 
56 1 4 1 214 1 215 1 237 1 248 1 24 1 7 1 138 1 90 1 
255 1 56 2 355 1 188 1 24 2 90 1 51 1 286 1 214 1 7 2 83 1 
187 1 56 4 255 1 188 2 260 1 237 1 34 1 24 5 375 1 90 2 51 3 286 1 214 2 136 1 7 5 112 1 
187 1 56 4 255 1 188 2 260 1 237 1 34 1 24 5 90 2 51 3 286 1 214 2 136 1 7 5 289 1 112 1 
56 1 256 2 219 1 188 1 237 1 238 1 24 1 90 1 51 1 26 1 91 1 81 1 346 2 214 1 7 1 71 1 264 1 186 1 
56 1 101 1 145 1 188 1 260 1 220 1 24 1 90 2 51 1 26 1 331 1 214 1 7 1 
257 1 301 1 238 1 179 1 44 1 
257 2 339 1 1 2 130 1 49 1 304 2 238 1 305 1 179 1 15 1 183 1 18 1 263 1 301 2 93 1 109 1 44 2 252 1 41 1 
346 1 256 1 38 1 219 1 257 1 128 1 301 1 107 1 179 1 
263 1 49 1 179 1 
129 1 250 1 242 1 113 1 
358 1 129 1 250 1 209 1 62 1 53 1 113 1 
0 1 53 1 16 1 
146 2 358 1 129 1 209 3 343 1 50 1 62 1 250 1 53 3 45 1 277 1 113 1 
75 1 358 1 129 1 250 1 302 1 209 2 62 1 53 2 113 1 
4 1 3 1 372 1 358 1 250 1 209 1 138 1 62 1 53 1 45 1 151 1 
358 1 129 1 250 1 209 1 62 1 53 1 45 1 
358 1 129 2 209 1 62 1 53 1 45 1 113 1 
358 2 129 1 313 1 266 1 209 2 62 2 132 1 250 1 53 2 45 1 
75 2 358 1 129 1 209 3 62 1 42 1 3 1 250 2 367 1 53 3 45 1 251 1 113 1 
173 1 75 1 358 1 129 1 209 2 62 1 151 1 4 2 248 1 250 1 138 1 53 2 97 1 45 1 113 1 
3 1 75 2 358 2 129 1 250 2 302 1 209 4 62 2 53 4 45 1 251 1 12 1 113 1 
358 1 129 1 250 1 209 1 62 1 53 1 45 1 113 1 
75 2 146 1 358 1 129 2 343 1 209 4 62 1 3 1 250 3 53 4 311 1 277 1 251 1 113 2 
218 1 75 1 358 1 129 1 209 2 62 1 243 1 250 1 53 2 45 1 354 1 113 1 
294 1 146 2 358 1 129 1 209 3 343 2 62 1 250 1 53 3 45 1 277 1 113 1 
231 1 134 2 250 2 347 1 
59 1 358 1 209 1 62 1 53 1 45 1 
42 1 75 1 358 1 129 1 250 1 209 2 62 1 53 2 45 1 113 1 
6 1 
358 1 129 1 250 1 209 1 62 1 53 1 45 1 113 1 
42 1 75 1 146 1 358 1 129 1 250 1 209 3 62 1 53 3 45 1 113 1 
3 1 250 1 311 1 251 1 
129 1 250 1 

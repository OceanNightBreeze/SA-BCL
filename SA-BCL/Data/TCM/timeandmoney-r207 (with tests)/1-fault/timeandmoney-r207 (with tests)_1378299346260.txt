#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 136 160 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
332 1 94 2 54 2 194 1 55 3 310 1 197 2 31 1 10 1 362 1 33 1 219 9 241 1 81 9 37 2 16 2 41 1 181 1 224 1 252 2 274 1 162 6 67 1 377 1 298 4 351 1 50 2 166 5 
332 1 94 2 194 1 54 2 55 3 310 1 197 2 31 1 10 1 362 1 33 1 219 9 241 1 81 9 37 2 16 2 41 1 181 1 224 1 252 2 274 1 162 6 67 1 377 1 298 4 351 1 50 2 166 5 
332 1 94 2 194 1 54 2 55 4 310 1 197 2 31 1 10 1 362 1 33 1 219 10 241 1 81 10 37 2 16 2 41 1 181 1 224 1 252 2 274 1 162 7 67 1 377 1 298 5 351 1 50 2 166 6 
332 1 94 2 194 1 54 1 55 2 310 1 197 2 31 1 10 1 362 1 33 1 219 7 241 1 81 7 37 2 16 2 41 1 181 1 252 2 274 1 162 4 67 1 377 1 298 3 351 1 50 2 166 4 
181 1 54 2 224 1 252 1 162 3 55 1 197 1 377 1 298 2 362 1 33 1 219 4 50 1 241 1 81 4 166 3 37 1 16 1 
181 1 93 1 94 1 274 1 95 1 310 1 197 1 33 1 219 2 22 1 50 1 241 1 166 1 81 2 37 1 16 1 
181 1 332 1 94 1 162 1 55 1 197 2 298 1 33 1 219 3 241 1 81 3 166 2 16 2 
332 1 94 1 54 2 55 3 197 2 10 1 362 1 33 1 219 9 241 1 81 9 37 1 295 1 16 2 41 1 181 1 224 1 252 1 162 7 298 4 377 1 50 1 166 5 188 1 
332 1 94 1 54 2 55 3 197 2 10 1 362 1 33 1 219 9 241 1 81 9 37 1 295 1 16 2 41 1 181 1 224 1 252 1 162 7 298 4 377 1 50 1 166 5 188 1 
322 1 293 1 56 1 
293 1 308 1 87 2 
217 2 84 2 240 1 207 2 288 2 215 1 263 2 179 2 
193 1 331 1 306 1 285 1 288 2 215 1 28 1 263 2 199 2 5 2 217 3 266 1 240 1 102 1 242 1 126 1 153 1 14 1 106 1 179 3 344 1 155 1 109 1 84 2 368 2 367 1 207 2 273 1 161 2 182 1 255 1 378 2 379 1 167 1 118 1 119 1 51 1 
217 1 84 1 207 1 288 1 215 1 263 1 320 1 290 1 142 1 179 1 
204 1 84 1 206 1 374 1 56 1 217 1 47 1 293 1 277 1 152 1 191 1 179 1 142 1 365 1 
204 1 84 1 206 1 207 1 288 1 263 1 56 1 217 1 47 1 293 1 277 1 191 2 179 1 142 1 365 2 
172 1 136 1 191 1 365 1 
172 1 293 1 85 1 380 1 191 2 309 1 56 1 365 2 
191 1 309 1 365 1 
84 1 207 1 356 1 215 1 288 1 263 1 290 1 217 1 172 1 191 1 320 1 142 1 179 1 365 1 
293 1 
229 1 172 1 293 1 380 1 191 2 309 1 56 1 365 2 
214 2 72 1 147 1 110 1 297 2 196 1 309 2 56 1 172 2 293 1 49 1 79 1 380 1 34 1 280 1 301 2 191 5 354 1 365 5 
322 1 240 1 
169 1 84 2 207 1 288 1 263 1 217 2 173 1 240 2 179 2 
192 1 302 1 257 1 
155 1 109 1 306 1 3 1 161 1 182 1 199 1 5 1 217 1 240 1 379 1 167 1 126 1 153 1 118 1 179 1 
192 1 155 1 109 1 306 1 84 1 207 1 288 1 161 1 182 1 199 1 5 1 327 1 217 2 8 1 379 1 167 1 126 1 153 1 118 1 179 2 
235 1 84 5 207 4 288 4 374 1 289 1 263 1 29 1 327 2 217 5 8 1 173 1 240 1 179 5 
217 2 84 2 207 2 288 2 320 1 321 1 142 1 179 2 
327 1 217 3 84 3 240 1 207 3 288 3 263 1 179 3 
217 1 84 1 207 1 288 1 320 1 142 1 179 1 
169 1 217 1 84 1 173 1 207 1 288 1 263 1 142 1 179 1 
193 1 331 1 306 1 285 1 288 3 215 1 28 1 263 2 199 1 5 1 217 4 8 1 173 1 266 1 240 1 102 1 242 1 126 1 153 1 179 4 365 1 344 1 155 1 204 1 109 1 84 3 368 2 206 1 207 3 273 1 161 1 182 1 327 1 47 1 277 1 378 1 379 1 167 1 329 1 191 1 118 1 51 1 142 1 92 1 
235 1 217 2 327 1 84 2 240 1 207 1 288 1 374 1 179 2 
204 1 84 3 335 1 206 1 207 3 288 3 263 1 327 2 217 3 8 1 47 1 173 1 293 1 277 1 191 1 142 1 179 3 365 1 92 1 
192 1 84 2 207 2 288 2 263 1 327 1 217 2 173 1 257 1 179 2 
155 1 109 1 306 1 161 1 182 1 199 1 5 1 217 1 240 1 379 1 167 1 126 1 153 1 118 1 179 1 
155 1 109 1 306 1 43 1 161 1 182 1 199 1 5 1 217 1 240 1 379 1 153 1 24 1 118 1 179 1 
192 2 331 1 53 1 28 1 77 1 102 1 242 1 60 1 203 1 106 2 294 1 269 1 39 1 344 1 156 1 368 2 366 1 273 2 113 1 378 4 70 1 302 2 257 2 51 1 
217 1 47 1 84 1 207 1 288 1 142 1 179 1 321 1 
100 1 139 1 
100 1 139 1 
148 1 353 1 
148 1 353 1 
148 1 353 1 
115 1 100 1 139 1 
115 1 100 1 139 1 
270 1 100 1 139 1 
121 1 98 1 100 2 148 1 139 2 353 1 
115 1 100 1 139 1 
230 1 100 1 139 1 
230 1 100 1 139 1 
230 1 100 1 139 1 
334 1 357 1 288 2 217 2 361 1 100 1 58 1 240 1 124 1 105 1 104 1 179 2 365 1 270 1 84 2 207 2 68 1 165 1 116 1 211 1 90 1 139 1 191 1 328 1 
334 1 369 1 158 1 357 2 163 1 360 1 314 1 98 1 293 1 174 1 376 2 116 2 100 2 165 3 90 2 139 2 105 2 191 2 365 2 
50 1 252 1 37 1 
50 1 22 1 37 1 
40 1 9 1 22 1 252 2 296 1 37 3 
9 1 22 1 252 1 296 1 37 2 228 1 
9 2 22 1 252 1 296 1 37 2 
214 1 308 1 1 1 309 1 123 1 264 1 56 1 96 2 7 1 172 4 293 2 34 2 203 1 269 1 248 2 365 5 323 1 297 1 110 1 87 3 113 1 68 1 133 2 49 3 211 1 380 1 281 1 70 1 301 1 191 5 328 1 233 1 
172 2 136 1 160 1 208 1 191 2 365 2 143 1 
214 1 308 2 1 1 123 1 56 1 96 2 7 1 172 2 293 3 79 1 34 2 203 1 269 1 365 3 248 2 323 1 297 1 87 4 113 1 133 1 49 3 301 1 70 1 191 3 328 1 233 1 
214 1 305 1 308 3 1 1 123 1 56 1 96 4 7 1 172 3 293 4 79 1 103 1 34 4 203 2 269 2 248 4 365 4 323 2 297 1 87 7 113 2 133 2 210 1 49 5 301 1 70 2 191 4 328 2 233 1 
322 1 306 1 352 1 
306 1 59 1 
189 1 
155 1 306 1 118 1 
306 1 35 1 
155 1 306 1 
155 1 261 1 306 3 19 1 352 2 118 1 
120 1 53 2 366 3 273 3 75 1 326 1 113 1 300 1 256 1 378 7 243 1 282 2 38 1 268 1 106 4 213 1 269 1 
120 1 53 2 366 3 273 3 75 1 326 1 113 1 300 1 256 1 378 7 243 1 282 2 38 1 268 1 106 4 213 1 269 1 
120 1 53 2 366 3 273 3 75 1 326 1 216 1 113 1 256 1 300 1 378 7 243 1 282 2 38 1 268 1 106 4 213 1 269 1 
120 2 260 1 26 1 53 5 122 1 75 2 28 1 175 4 102 1 242 1 243 1 83 1 203 3 268 1 38 2 106 16 269 4 344 1 271 1 323 3 368 2 366 10 159 1 273 15 65 1 326 5 113 4 256 1 300 2 378 31 70 3 282 3 141 3 213 1 
120 1 344 2 26 1 53 3 366 4 368 4 273 4 149 1 75 1 28 2 326 1 113 1 256 1 300 1 378 9 102 2 242 2 243 1 282 2 38 1 106 5 246 1 213 1 269 1 
94 1 197 1 198 1 5 1 199 1 339 1 33 1 219 2 241 1 81 2 37 2 153 1 244 1 16 1 40 1 249 1 181 1 324 1 252 1 225 1 347 1 162 1 161 1 299 1 349 1 50 1 22 1 379 1 166 1 303 1 
94 1 197 1 30 1 198 1 5 1 199 1 339 1 33 1 219 3 241 1 201 1 81 3 37 2 153 1 244 1 16 1 40 1 249 1 324 1 252 1 347 1 161 1 162 2 348 1 299 1 349 1 50 1 22 1 379 1 166 1 
94 1 30 1 5 1 199 1 339 1 33 1 219 2 241 1 201 1 81 2 37 2 153 1 244 1 40 1 249 1 252 1 347 1 161 1 162 2 299 1 349 1 22 1 50 1 379 1 166 1 
155 1 168 1 306 1 333 1 94 2 145 1 347 2 161 1 348 1 182 1 197 1 199 1 5 1 185 1 349 2 219 1 379 1 81 1 153 1 127 1 244 2 15 1 16 1 
94 1 197 1 198 1 5 1 199 1 339 1 219 1 201 1 81 1 37 2 153 1 244 1 16 1 40 1 249 1 181 1 324 1 252 1 347 1 161 1 299 1 349 1 50 1 22 1 379 1 303 1 
150 1 
144 1 0 4 145 1 56 1 291 2 199 2 5 2 293 2 341 1 152 1 342 1 153 1 15 1 155 1 204 1 17 2 205 1 206 1 110 1 297 1 161 2 111 1 112 1 301 1 212 1 214 1 306 1 73 2 170 2 308 2 358 2 74 1 309 6 123 1 217 1 34 2 267 2 179 1 365 5 84 1 87 2 374 1 182 2 375 2 186 1 89 1 47 1 277 1 48 1 49 2 379 1 380 3 191 5 140 1 142 1 
0 2 170 1 309 2 217 1 152 1 179 1 365 3 204 1 84 1 206 1 374 1 111 1 186 1 229 1 89 1 47 1 277 1 380 1 212 1 191 3 140 1 142 1 
0 3 309 1 56 1 217 1 293 1 152 1 179 1 365 3 204 1 84 1 17 1 206 1 374 1 111 1 186 1 229 1 89 1 47 1 277 1 380 1 212 1 191 3 140 1 142 1 
0 3 170 1 309 2 56 1 217 1 293 1 152 1 267 1 179 1 365 3 204 1 84 1 17 1 206 1 374 1 111 1 229 1 186 1 89 1 47 1 277 1 380 1 212 1 191 3 140 1 142 1 
0 6 56 5 291 2 293 5 340 1 99 1 152 1 342 1 247 1 204 1 17 4 205 1 206 1 110 1 297 1 111 1 301 1 212 1 304 1 214 1 73 2 170 4 308 2 358 2 309 7 217 1 34 1 267 4 179 1 365 5 84 1 131 1 374 1 375 2 229 1 186 1 89 1 47 1 277 1 49 1 380 3 191 5 140 1 142 1 
0 4 56 1 291 2 293 2 342 1 152 1 204 1 205 1 17 2 206 1 110 1 297 1 111 1 301 1 212 1 214 1 73 2 308 2 170 2 358 2 309 4 217 1 34 1 267 2 179 1 365 4 84 1 374 1 87 2 375 2 186 1 89 1 47 1 277 1 49 1 48 1 380 2 191 4 140 1 142 1 
214 1 73 2 0 4 170 2 308 2 358 2 309 4 56 1 291 2 217 1 293 1 99 1 342 1 152 1 34 1 267 2 179 1 365 4 204 1 17 2 205 1 84 1 206 1 131 1 297 1 110 1 374 1 111 1 375 2 186 1 89 1 47 1 277 1 49 1 380 2 301 1 212 1 191 4 140 1 142 1 304 1 
214 1 73 2 0 4 170 2 308 2 358 2 309 4 56 1 291 2 217 1 293 1 99 1 342 1 152 1 34 1 267 2 179 1 365 4 204 1 17 2 205 1 84 1 206 1 131 1 297 1 110 1 374 1 111 1 375 2 186 1 89 1 47 1 277 1 49 1 380 2 301 1 212 1 191 4 140 1 142 1 304 1 
214 1 73 2 0 4 170 2 355 1 309 4 171 1 56 1 97 2 217 1 293 1 152 1 34 1 267 2 179 1 365 4 204 1 17 2 205 1 84 1 206 1 131 1 297 1 64 1 110 1 87 2 374 1 111 1 375 2 186 1 89 1 47 1 277 1 49 1 380 2 301 1 212 1 191 4 140 1 91 2 142 1 
214 1 73 2 0 5 308 2 170 3 358 2 309 5 56 1 291 2 217 1 293 1 99 1 340 1 342 1 152 1 34 1 267 3 179 1 365 4 204 1 205 1 84 1 17 3 206 1 131 1 297 1 110 1 374 1 111 1 375 2 186 1 89 1 47 1 277 1 49 1 380 2 301 1 212 1 191 4 140 1 142 1 304 1 
214 1 73 2 0 5 308 2 170 3 358 2 309 5 56 1 291 2 217 1 293 1 99 1 340 1 342 1 152 1 34 1 267 3 179 1 365 4 204 1 205 1 84 1 17 3 206 1 131 1 297 1 110 1 374 1 111 1 375 2 186 1 89 1 47 1 277 1 49 1 380 2 301 1 212 1 191 4 140 1 142 1 304 1 
0 4 56 1 97 2 293 1 152 1 204 1 205 1 17 2 206 1 110 1 297 1 111 1 301 1 212 1 214 1 73 2 170 2 309 4 171 1 217 1 34 1 267 2 179 1 365 4 84 1 374 1 87 2 375 2 186 1 89 1 47 1 277 1 49 1 48 1 380 2 191 4 140 1 142 1 91 2 
192 1 120 1 331 1 53 2 28 1 102 1 240 2 242 1 60 1 243 1 38 1 106 3 269 1 344 1 322 1 368 2 366 2 273 3 113 1 256 1 378 6 282 1 302 1 257 1 213 1 51 1 
284 1 192 11 260 1 193 1 52 1 331 2 53 1 28 2 175 3 240 1 102 2 242 2 203 1 106 8 269 1 344 2 271 1 323 2 222 1 366 2 368 4 345 1 273 6 326 1 113 2 21 1 378 14 70 2 302 11 257 4 119 1 141 3 51 1 
193 1 306 1 331 1 3 1 288 1 28 1 5 1 199 1 217 2 8 1 240 1 102 1 242 1 126 1 153 1 319 1 178 1 106 1 179 2 155 1 344 1 109 1 84 1 345 1 368 2 207 1 273 1 161 1 182 1 327 1 378 2 379 1 167 1 279 1 118 1 257 1 119 1 51 1 
192 7 193 1 331 3 53 4 285 2 288 1 5 3 199 3 8 1 240 2 102 3 201 1 242 3 343 1 243 1 153 2 203 2 106 10 344 3 155 2 109 2 345 1 207 1 161 3 113 3 256 1 167 2 70 2 302 7 118 2 257 7 119 1 213 1 120 1 306 2 28 3 217 3 315 2 125 2 126 2 38 1 179 3 269 3 180 1 323 2 84 1 42 2 368 6 366 8 372 1 273 10 182 1 326 4 327 1 378 20 379 2 282 1 51 3 330 2 
193 1 306 3 331 2 145 1 288 1 28 2 5 8 199 7 217 1 265 1 102 2 201 1 13 1 242 2 60 1 153 2 106 1 179 1 15 1 344 2 155 2 62 1 129 1 84 1 368 4 367 2 207 1 225 1 273 1 161 8 182 2 184 1 327 1 134 1 135 1 378 2 379 2 119 1 51 2 
192 1 331 1 53 1 288 1 263 1 28 1 217 1 173 1 102 1 242 1 203 1 106 1 179 1 269 1 344 1 323 1 84 1 366 1 368 2 345 1 207 1 273 2 113 1 132 1 378 3 70 1 302 1 257 1 51 1 
192 1 344 1 331 1 366 1 368 2 28 1 326 1 113 1 378 2 102 1 242 1 70 1 302 1 60 1 257 1 106 2 51 1 294 1 
192 1 344 1 331 1 53 1 156 1 366 1 368 2 273 2 28 1 378 2 102 1 242 1 302 1 60 1 203 1 257 1 51 1 269 1 
192 2 331 1 53 1 28 1 102 1 242 1 60 1 203 1 106 2 269 1 344 1 323 1 368 2 366 2 273 2 326 1 113 1 378 4 70 1 302 2 257 2 51 1 
192 1 344 1 331 1 366 1 368 2 28 1 326 1 113 1 378 2 135 1 102 1 242 1 70 1 302 1 257 1 106 2 51 1 294 1 
192 1 344 1 331 1 53 1 156 1 366 1 368 2 273 2 28 1 378 2 135 1 102 1 242 1 302 1 203 1 257 1 51 1 269 1 
192 2 331 1 53 1 28 1 102 1 242 1 203 1 106 2 269 1 344 1 323 1 368 2 366 2 273 2 326 1 113 1 135 1 378 4 70 1 302 2 257 2 51 1 
192 2 331 1 53 1 28 1 102 1 242 1 203 1 106 2 269 1 344 1 323 1 368 2 366 2 273 2 326 1 113 1 378 4 70 1 302 2 257 2 51 1 
193 1 306 1 331 1 285 1 28 1 5 1 199 1 217 1 240 1 102 1 242 1 126 1 153 1 106 1 179 1 155 1 344 1 109 1 368 2 273 1 161 1 182 1 378 2 379 1 167 1 118 1 119 1 51 1 
193 1 306 1 331 1 28 1 5 1 199 1 217 1 240 1 102 1 242 1 153 1 106 1 179 1 155 1 344 1 109 1 368 2 43 1 273 1 161 1 254 1 182 1 378 2 379 1 118 1 24 1 119 1 51 1 
192 2 331 1 53 1 28 1 102 1 242 1 203 1 106 2 269 1 344 1 323 1 368 2 345 1 366 2 273 2 326 1 113 1 378 4 70 1 302 2 257 2 51 1 
192 2 306 1 331 1 53 1 285 1 28 1 5 1 199 1 217 1 102 1 242 1 125 1 126 1 203 1 153 1 106 2 179 1 269 1 155 1 344 1 109 1 323 1 366 2 368 2 225 1 273 2 161 1 326 1 113 1 378 4 379 1 70 1 167 1 302 2 257 2 118 1 51 1 
192 1 331 1 288 1 263 1 28 1 338 1 217 1 173 1 102 1 242 1 203 1 106 2 179 1 269 1 344 1 323 1 84 1 366 1 368 2 345 1 207 1 273 1 326 1 113 1 378 3 70 1 302 1 257 1 51 1 
260 1 53 3 27 1 28 2 175 2 102 2 242 2 82 1 203 3 246 1 106 9 107 2 269 3 344 2 271 1 323 3 130 2 368 4 366 6 371 1 373 1 273 10 326 3 46 1 113 3 350 1 378 19 71 1 70 3 141 1 
26 2 53 2 27 1 195 1 28 3 175 2 101 1 102 3 242 3 82 1 203 2 246 1 106 14 107 4 269 2 344 3 271 2 323 3 130 1 63 1 366 4 368 6 371 2 346 1 273 12 326 2 113 3 164 1 350 1 378 26 71 2 23 1 70 3 141 2 
53 4 195 1 101 1 102 3 242 3 243 1 203 4 106 20 246 1 107 4 344 3 63 1 346 1 113 5 164 1 256 1 350 1 70 4 71 2 23 1 117 1 213 1 120 1 260 1 26 1 27 1 28 3 175 4 82 1 38 1 269 5 271 3 323 4 130 1 366 8 368 6 371 1 373 1 273 21 326 4 378 41 282 1 141 3 
120 1 260 1 26 2 53 4 27 1 195 1 28 4 175 4 101 1 102 4 242 4 82 1 243 1 203 3 38 1 246 1 106 20 107 4 269 4 344 4 271 3 323 4 130 1 63 1 368 8 366 7 346 1 371 1 373 1 273 18 326 3 113 5 164 1 256 1 350 1 378 38 23 1 71 2 70 4 282 1 117 1 141 3 213 1 
120 1 260 2 26 1 53 7 27 1 195 1 28 2 175 4 101 1 102 2 242 2 82 1 243 1 203 7 38 1 246 1 106 27 107 4 269 8 344 2 271 2 323 7 130 1 63 1 368 4 366 14 346 1 371 1 273 25 326 7 113 8 164 1 256 1 21 2 350 1 378 52 23 1 71 1 70 7 282 1 141 4 213 1 
314 1 98 1 307 1 100 1 116 1 90 1 357 1 105 1 139 1 163 1 
270 1 124 1 
250 1 231 1 100 1 116 1 90 1 357 1 105 1 139 1 183 1 
115 1 76 1 
121 1 230 1 364 1 
334 1 158 1 357 1 163 1 360 1 314 1 98 1 293 1 174 1 376 1 116 1 100 1 165 2 90 1 191 1 139 1 105 1 365 1 
334 1 158 1 357 1 163 1 360 1 314 1 98 1 293 1 174 1 376 1 116 1 100 1 165 2 90 1 191 1 139 1 105 1 365 1 
334 1 158 1 357 1 163 1 360 1 314 1 98 1 293 1 174 1 376 1 116 1 100 1 165 2 90 1 191 1 139 1 105 1 365 1 
121 1 115 1 76 1 
121 1 115 1 76 1 
230 1 364 1 
121 1 230 1 364 1 
58 1 104 1 
357 1 288 2 360 1 217 2 361 1 172 1 100 1 58 1 240 1 124 1 105 1 104 1 179 2 365 1 270 1 84 2 207 2 44 1 376 1 68 1 116 1 165 1 211 1 90 1 191 1 139 1 328 1 
193 1 306 1 331 1 2 1 336 1 28 1 5 2 199 2 217 2 265 1 102 1 242 1 318 1 153 1 106 1 179 2 155 1 344 1 129 1 84 2 345 1 368 2 367 2 273 1 161 2 20 1 275 1 378 2 379 1 119 1 51 1 
40 1 324 1 252 1 225 1 347 1 161 2 199 2 5 2 339 1 299 1 50 1 22 1 200 1 379 1 201 1 37 2 317 1 36 1 153 1 
40 1 324 1 252 1 347 1 161 1 199 1 5 1 339 1 238 1 299 1 50 1 22 1 379 1 201 1 37 2 36 1 153 1 
155 1 168 1 306 1 145 1 347 1 161 1 182 1 199 1 5 1 379 1 80 1 317 1 153 1 15 1 
40 1 324 1 252 1 347 1 161 1 199 1 5 1 339 1 299 1 50 1 22 1 200 1 379 1 201 1 37 2 317 1 36 1 153 1 
363 1 
322 1 293 1 49 1 34 1 280 1 56 1 354 1 
214 1 308 1 358 1 309 1 56 1 291 1 293 2 342 1 34 1 365 1 297 1 110 1 87 1 49 1 380 1 301 1 191 1 
337 1 56 2 199 3 5 3 96 6 293 8 11 2 59 3 202 2 153 3 203 2 245 2 248 6 155 3 61 1 19 1 110 4 297 4 161 3 112 1 113 2 69 2 352 2 301 4 70 2 118 3 354 1 214 4 306 10 308 6 359 1 309 5 123 2 176 2 34 8 35 2 365 5 269 2 323 2 370 1 225 1 87 12 182 1 277 2 49 9 278 2 379 4 137 2 380 3 280 1 190 1 191 5 330 2 234 2 
214 2 308 3 236 1 195 1 262 1 309 1 123 1 56 2 96 5 175 1 293 5 11 1 101 1 34 5 202 2 203 2 365 1 248 5 269 2 271 1 323 2 63 1 346 1 297 2 110 2 87 6 112 1 113 2 49 8 380 1 23 1 301 2 70 2 191 1 141 1 
120 1 214 1 356 1 215 1 288 1 263 1 290 1 217 1 99 1 11 1 239 1 34 2 202 2 243 1 38 1 320 1 179 1 365 1 269 1 84 1 207 1 297 1 110 1 113 2 49 2 301 1 191 1 142 1 
214 1 110 1 297 1 56 1 293 1 49 1 301 1 280 1 34 1 354 1 
323 2 308 5 87 10 96 5 113 2 293 5 49 5 11 1 70 2 34 5 202 2 203 2 330 1 248 5 269 2 
293 1 380 1 191 1 309 1 56 1 365 1 
214 2 306 1 144 1 145 1 74 1 359 2 309 4 123 2 5 4 199 4 79 1 34 2 153 1 177 1 15 1 365 3 155 1 61 1 297 2 110 1 161 4 182 2 112 2 49 2 379 1 380 2 138 1 301 2 191 3 
193 1 306 1 331 1 285 1 288 2 215 1 28 1 263 2 5 1 199 1 217 3 266 1 240 1 102 1 242 1 126 1 153 1 179 3 344 1 155 1 109 1 84 2 368 2 207 2 273 1 161 1 182 1 378 1 379 1 167 1 118 1 51 1 
214 1 308 2 110 1 297 1 87 4 123 1 56 2 112 1 96 2 293 4 49 1 34 2 301 1 282 1 248 2 
253 1 357 1 105 1 
253 1 357 1 105 1 
314 1 58 1 357 1 105 1 220 1 
253 1 357 1 105 1 
86 1 357 1 105 1 
86 1 357 1 105 1 
86 1 357 1 105 1 
357 1 105 1 
100 1 139 1 
344 2 120 1 26 1 53 2 366 3 368 4 273 4 28 2 326 1 113 1 256 1 378 8 102 2 242 2 282 1 243 1 38 1 106 4 213 1 269 1 
120 1 322 1 53 2 366 2 273 3 113 1 256 1 378 6 282 1 243 1 38 1 106 3 213 1 269 1 
344 1 323 1 53 1 366 2 368 2 273 2 28 1 326 1 113 1 378 4 102 1 242 1 70 1 203 1 128 1 106 2 269 1 
271 1 260 1 323 1 53 1 366 2 273 4 326 1 113 1 175 2 378 7 70 1 203 1 141 1 106 3 269 1 
120 2 284 1 260 1 26 2 53 5 28 2 175 2 102 2 242 2 243 1 203 2 38 2 106 11 269 3 344 2 323 2 366 9 368 4 273 12 227 1 326 4 113 3 256 1 21 1 378 23 70 2 282 1 141 2 213 1 
175 1 378 1 273 1 
378 1 106 1 141 1 
344 1 323 1 53 2 368 2 366 3 273 3 28 1 326 1 113 1 378 6 102 1 242 1 70 1 203 1 128 1 106 3 330 1 269 1 
344 1 271 1 323 2 53 1 63 1 195 1 366 2 368 2 346 1 273 6 28 1 326 1 113 2 175 1 101 1 378 12 102 1 242 1 70 2 23 1 203 2 106 6 246 1 141 1 269 2 
120 1 53 1 366 2 273 3 326 1 113 1 378 6 243 1 38 1 106 3 269 1 
120 1 344 1 26 1 53 1 366 2 368 2 273 2 28 1 227 1 326 1 256 1 378 3 102 1 242 1 38 1 106 1 213 1 
344 1 120 2 53 3 368 2 366 5 273 5 28 1 326 2 113 2 239 1 378 10 102 1 242 1 243 1 38 2 246 1 106 5 269 2 
344 1 368 2 366 1 28 1 326 1 113 1 378 2 102 1 242 1 70 1 246 1 106 2 
344 1 323 1 53 1 366 2 368 2 273 2 28 1 326 1 113 1 378 4 102 1 242 1 70 1 203 1 246 1 106 2 269 1 
344 3 120 1 26 1 53 1 368 6 366 2 373 1 273 2 28 3 227 1 326 1 378 3 102 3 242 3 38 1 246 1 106 1 
120 3 260 1 26 2 53 7 28 5 175 4 102 5 242 5 243 2 83 1 203 3 38 3 128 1 246 1 106 16 269 5 344 5 271 1 323 3 368 10 366 12 159 1 373 1 273 18 65 1 227 1 326 5 113 5 256 1 378 34 70 3 282 1 141 3 213 1 
120 1 53 2 28 1 175 1 102 1 242 1 243 1 38 1 246 1 106 4 269 1 344 1 271 1 368 2 366 2 273 4 113 1 256 1 378 8 23 1 282 1 141 1 213 1 
120 1 260 1 53 2 28 2 175 2 102 2 242 2 243 1 38 1 246 1 128 1 106 6 269 1 344 2 271 1 323 1 368 4 366 3 273 5 326 1 113 2 256 1 378 11 23 1 70 1 282 1 141 1 213 1 
120 1 26 1 53 3 195 1 28 3 175 1 101 1 102 3 242 3 243 1 203 2 38 1 128 1 246 1 106 9 269 3 344 3 271 1 323 2 63 1 368 6 366 4 346 1 273 10 326 1 113 3 256 1 378 19 23 1 70 2 282 1 141 1 213 1 
120 1 26 1 53 3 195 1 28 3 175 1 101 1 102 3 242 3 243 1 203 1 38 1 128 1 246 1 106 10 269 2 344 3 271 1 323 2 63 1 368 6 366 5 346 1 273 7 326 2 113 3 256 1 378 17 23 1 70 2 282 1 141 1 213 1 
120 1 53 2 28 1 175 1 102 1 242 1 243 1 38 1 246 1 106 4 269 1 344 1 271 1 368 2 366 2 273 4 113 1 256 1 378 8 23 1 282 1 141 1 213 1 
344 1 271 1 323 2 53 1 63 1 195 1 366 2 368 2 346 1 273 6 28 1 326 1 113 2 175 1 101 1 378 12 102 1 242 1 70 2 23 1 203 2 106 6 246 1 141 1 269 2 
120 1 26 2 53 3 195 1 28 4 175 1 101 1 102 4 242 4 243 1 203 1 38 1 128 1 246 1 106 10 269 2 344 4 271 1 323 2 63 1 368 8 366 5 346 1 273 8 326 2 113 3 256 1 378 18 23 1 70 2 282 1 141 1 213 1 
26 2 53 3 195 1 28 4 175 1 101 1 102 4 242 4 203 2 246 1 106 9 269 2 344 4 271 1 323 3 63 1 368 8 366 6 346 1 373 1 273 7 326 3 113 3 378 16 23 1 70 3 141 1 
120 3 53 3 366 6 273 4 326 3 113 1 256 2 378 7 243 1 38 3 106 3 213 1 269 1 
120 1 26 2 53 3 195 1 28 4 175 1 101 1 102 4 242 4 243 1 203 1 38 1 246 1 106 10 269 2 344 4 271 1 323 2 63 1 368 8 366 4 346 1 373 1 273 8 326 1 113 3 256 1 378 18 23 1 70 2 282 1 141 1 213 1 
217 1 235 1 84 1 223 1 240 1 374 1 179 1 
235 1 84 1 157 1 223 1 374 1 45 1 217 1 316 1 240 1 221 1 179 1 259 1 
155 1 5 1 199 1 322 1 306 1 145 1 379 1 153 1 161 1 182 1 15 1 
155 1 109 1 306 1 84 1 207 1 288 1 161 1 182 1 199 1 5 1 327 1 217 2 240 1 379 1 126 1 153 1 118 1 179 2 
306 3 288 1 359 1 5 1 199 1 217 2 176 1 240 1 126 1 35 1 153 1 179 2 155 2 204 1 109 1 84 2 207 2 161 1 327 1 47 1 379 1 118 2 142 1 
306 3 288 1 359 1 5 2 199 2 313 1 217 2 176 1 240 1 35 1 153 1 179 2 155 2 204 1 109 1 84 2 207 2 161 2 327 1 47 1 379 1 24 1 118 2 142 1 
155 1 306 4 146 1 359 1 161 3 309 1 182 1 226 1 56 1 199 3 5 3 313 1 293 1 277 1 176 1 379 1 59 1 352 1 35 1 191 2 153 1 118 1 365 2 
155 1 306 4 359 1 161 3 309 1 182 1 56 1 199 3 5 3 313 1 293 1 277 1 176 1 379 1 59 1 352 1 35 1 191 2 153 1 118 1 365 2 234 1 
5 1 199 1 62 1 379 1 153 1 161 1 
155 2 62 1 306 3 367 1 19 1 225 1 161 7 182 2 184 1 292 1 199 6 5 7 114 1 265 1 134 1 151 1 379 3 201 1 13 1 153 2 118 1 
192 1 331 2 285 1 53 2 336 1 288 1 5 1 199 1 102 2 240 2 242 2 243 1 153 1 106 3 344 2 155 1 109 1 345 1 207 1 161 1 113 1 256 1 167 1 302 1 257 1 118 1 213 1 120 1 306 1 28 2 217 2 315 1 125 1 126 1 38 1 179 2 269 1 84 1 368 4 366 2 225 1 273 3 327 1 378 6 379 1 282 1 51 2 
214 2 306 2 309 2 56 1 199 1 5 1 172 1 293 1 59 1 34 1 245 1 365 3 61 1 297 2 110 2 161 1 182 1 277 1 49 1 278 1 137 1 352 1 380 1 280 1 301 2 191 3 354 1 234 1 
155 1 62 1 306 2 19 1 225 1 161 2 199 2 5 2 379 2 352 1 190 1 153 1 118 1 
155 1 5 4 199 4 313 1 306 1 145 1 379 1 225 1 153 1 161 4 182 1 15 1 57 1 
155 1 306 1 359 1 161 2 292 1 199 2 5 2 151 1 12 1 379 2 343 1 283 1 153 1 118 1 
339 1 5 1 199 1 50 1 22 1 379 1 37 1 153 1 161 1 182 1 
155 1 306 1 225 1 161 2 20 1 199 2 5 2 265 1 379 1 201 1 153 1 
155 2 306 3 145 1 225 1 359 1 161 5 182 1 57 1 184 1 199 4 5 5 265 1 379 2 13 1 153 2 15 1 
155 2 306 3 145 1 225 1 359 1 161 5 182 1 66 1 57 1 199 4 5 5 265 1 379 2 13 1 153 2 15 1 
155 1 109 1 306 1 84 1 207 1 288 1 161 1 182 1 199 1 5 1 327 1 217 2 240 1 379 1 153 1 118 1 24 1 179 2 
155 1 306 1 19 1 359 1 161 1 292 1 199 1 5 1 114 1 151 1 379 2 153 1 118 1 
88 1 18 1 240 1 287 1 237 1 
204 1 18 2 206 1 287 2 237 1 209 1 56 1 88 2 78 1 47 1 172 1 293 1 277 1 240 1 191 2 232 1 142 1 365 2 92 1 
217 1 84 1 18 1 2 1 318 1 287 1 237 1 179 1 275 1 
78 1 209 1 237 1 
322 1 33 1 241 1 166 1 
33 1 219 1 241 1 166 1 81 1 16 1 197 1 
94 1 349 1 219 1 
272 1 181 1 325 1 310 2 197 1 6 1 219 3 33 1 241 1 166 1 81 3 16 1 
33 1 54 1 219 2 241 1 166 1 81 2 162 1 16 1 197 1 
298 1 377 1 181 1 219 1 50 1 252 1 166 1 81 1 37 1 16 1 197 1 
181 1 219 1 241 1 166 1 81 1 16 1 197 1 
181 1 33 1 219 1 241 2 81 1 16 1 197 1 
181 1 251 1 197 2 312 1 218 1 219 2 241 1 166 1 81 2 16 2 
41 1 181 1 162 2 55 1 197 1 298 1 10 1 33 1 219 3 241 1 81 3 166 2 16 1 
40 1 181 1 252 1 162 1 197 1 311 1 33 1 219 2 22 1 50 1 241 1 166 1 81 2 37 2 16 1 
181 1 54 1 224 1 162 2 55 1 197 2 298 1 33 1 219 4 241 1 81 4 166 2 16 2 
181 1 33 1 219 1 241 1 166 1 81 1 16 1 197 1 
325 1 162 2 55 1 310 1 276 1 197 1 6 1 298 1 33 2 219 4 241 2 81 4 166 3 16 1 
154 1 181 1 286 1 162 1 197 1 219 2 33 1 241 1 166 1 81 2 188 1 16 1 
181 1 325 2 310 2 197 1 6 1 219 3 33 1 241 1 166 1 81 3 258 1 16 1 
32 2 166 2 4 1 108 1 
25 1 181 1 219 1 81 1 16 1 197 1 
41 1 181 1 33 1 219 2 241 1 166 1 81 2 162 1 16 1 197 1 
187 1 
181 1 33 1 219 1 241 1 166 1 81 1 16 1 197 1 
41 1 181 1 33 1 219 3 241 1 166 1 81 3 162 1 310 1 16 1 197 1 
298 1 166 1 55 1 276 1 
241 1 166 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
61 1 161 2 320 5 300 4 162 1 205 1 280 2 135 1 281 1 82 1 209 9 111 1 327 6 302 9 283 2 256 1 257 1 13 1 350 2 333 1 214 1 356 2 263 2 146 1 147 2 336 3 151 1 27 1 
61 1 161 2 320 5 300 4 162 1 205 1 135 1 280 2 281 1 82 1 209 9 111 1 327 6 283 2 302 9 256 1 257 1 13 1 350 2 333 1 214 1 356 2 263 2 146 1 147 2 336 3 151 1 27 1 
61 1 161 2 320 6 300 5 162 1 205 1 135 1 280 2 281 1 82 1 209 10 111 1 327 7 283 2 302 10 256 1 257 1 13 1 350 2 333 1 214 1 356 2 263 2 146 1 147 2 336 4 151 1 27 1 
61 1 161 2 320 4 300 3 162 1 205 1 135 1 280 1 281 1 82 1 209 7 111 1 327 4 283 2 302 7 256 1 257 1 13 1 350 2 333 1 214 1 356 2 263 2 146 1 147 2 336 2 151 1 
256 1 350 1 61 1 161 1 320 3 214 1 300 2 263 1 205 1 336 1 147 1 280 2 281 1 209 4 327 3 27 1 302 4 283 1 
127 1 256 1 350 1 362 1 320 1 61 1 161 1 215 1 356 1 263 1 146 1 135 1 147 1 281 1 209 2 302 2 
256 1 257 1 350 2 61 1 161 2 320 2 300 1 356 1 336 1 281 1 209 3 327 1 302 3 
61 1 161 2 320 5 300 4 205 1 109 1 280 2 281 1 82 1 136 1 209 9 111 1 327 7 302 9 283 1 257 1 256 1 350 2 214 1 356 1 263 1 336 3 147 1 27 1 
61 1 161 2 320 5 300 4 205 1 109 1 280 2 281 1 82 1 136 1 209 9 111 1 327 7 302 9 283 1 257 1 256 1 350 2 214 1 356 1 263 1 336 3 147 1 27 1 
58 1 319 1 21 1 
358 1 64 2 319 1 
50 2 163 2 130 1 25 2 150 2 213 2 353 1 19 2 
1 1 219 1 130 1 361 2 243 2 278 1 104 1 298 1 321 1 107 1 108 1 163 2 346 1 206 1 226 2 229 1 112 1 137 1 187 1 84 1 259 1 119 1 213 2 285 1 353 1 19 2 193 1 143 2 90 1 50 2 379 1 265 2 338 1 234 1 25 3 150 3 216 1 
50 1 163 1 130 1 288 1 25 1 150 1 213 1 175 1 223 1 19 1 
138 1 373 1 319 1 21 1 163 1 248 1 71 1 381 1 25 1 289 1 150 1 175 1 200 1 349 1 
138 1 373 1 213 1 319 1 19 1 21 1 50 1 163 1 71 2 381 1 25 1 289 2 150 1 175 1 200 1 
313 1 71 1 148 1 289 1 77 1 
80 1 313 1 71 2 148 1 289 2 319 1 35 1 21 1 
313 1 71 1 289 1 
130 1 213 1 223 1 19 1 204 1 50 1 163 1 148 1 71 1 288 1 289 1 25 1 150 1 175 1 
319 1 
80 1 313 1 71 2 148 1 289 2 319 1 21 1 254 1 
14 1 33 2 69 1 308 1 277 1 88 1 296 2 319 1 37 2 21 1 91 1 377 1 80 1 148 2 71 5 313 2 289 5 267 1 153 1 
58 1 353 1 
369 1 372 1 213 1 353 2 19 1 50 1 163 2 25 2 150 2 
124 1 70 1 45 1 
1 1 219 1 307 1 243 1 353 1 278 1 193 1 321 1 143 1 265 1 338 1 206 1 25 1 234 1 150 1 216 1 
1 1 219 1 87 1 243 1 213 1 278 1 193 1 321 1 143 1 124 1 50 1 163 1 265 1 338 1 206 1 234 1 25 2 347 1 150 2 216 1 
368 1 372 1 221 1 87 1 213 4 353 1 19 1 50 4 163 5 248 1 25 5 347 2 150 5 10 1 
50 2 163 2 239 1 25 2 150 2 213 2 175 1 223 1 
50 3 163 3 25 3 347 1 150 3 213 3 353 1 19 1 
50 1 163 1 25 1 150 1 213 1 175 1 223 1 
369 1 50 1 163 1 372 1 25 1 150 1 213 1 175 1 19 1 
1 1 238 1 219 1 130 1 361 2 243 1 278 1 298 1 321 1 183 1 163 3 346 1 206 1 226 1 347 1 112 1 137 1 138 1 187 1 372 1 84 1 259 1 87 1 373 1 119 1 213 3 353 1 193 1 19 2 143 1 90 1 50 3 379 1 265 1 338 1 71 1 381 1 234 1 25 4 289 1 150 4 175 1 216 1 200 1 
50 1 163 2 248 1 221 1 25 2 150 2 213 1 347 1 353 1 
138 1 238 1 372 1 87 1 373 1 213 3 19 1 319 1 50 3 163 3 71 1 381 1 289 1 25 3 347 2 150 3 175 1 200 1 28 1 
372 1 45 1 213 2 19 1 124 1 50 2 163 2 25 2 347 1 150 2 
1 1 219 1 243 1 353 1 278 1 193 1 321 1 143 1 265 1 338 1 206 1 25 1 234 1 150 1 216 1 
1 1 243 1 353 1 278 1 193 1 143 1 145 1 265 1 338 1 206 1 25 1 234 1 150 1 26 1 216 1 
99 1 32 1 343 1 361 2 298 1 38 1 78 1 108 2 79 1 346 1 226 4 66 1 187 1 259 1 332 1 45 2 119 1 90 1 124 2 173 1 379 2 70 2 380 1 174 1 
50 1 163 1 239 1 373 1 25 1 150 1 213 1 175 1 
195 1 117 1 
195 1 117 1 
230 1 317 1 
230 1 317 1 
230 1 317 1 
195 1 114 1 117 1 
195 1 114 1 117 1 
195 1 114 1 117 1 
195 1 117 1 250 1 
113 1 195 2 230 1 117 2 317 1 269 1 
195 1 117 1 171 1 
195 1 117 1 171 1 
195 1 117 1 171 1 
50 1 163 1 25 1 150 1 213 1 184 1 
271 1 30 1 128 1 291 1 130 1 160 1 223 1 204 1 324 1 163 1 251 1 184 1 210 1 117 1 213 1 16 1 19 1 310 1 195 1 50 1 71 1 288 1 25 1 289 1 150 1 175 1 152 1 
263 1 147 1 283 1 
215 1 263 1 147 1 
215 1 22 1 147 3 222 1 334 1 283 2 
215 1 22 1 2 1 147 2 222 1 283 1 
215 1 22 2 147 2 222 1 283 1 
342 1 101 1 33 1 343 1 296 1 277 1 319 2 37 1 38 1 366 2 134 2 80 1 110 1 64 3 304 1 232 1 375 1 260 1 21 1 377 3 173 1 198 1 339 1 313 1 71 5 148 4 174 1 289 5 358 1 236 2 153 2 341 1 
75 1 342 2 31 1 101 1 33 2 343 3 57 1 159 5 77 5 277 1 296 2 319 5 37 2 38 3 247 1 366 6 80 1 64 9 304 4 88 1 260 2 287 1 21 1 377 8 173 3 339 3 313 6 71 9 148 7 174 3 289 9 358 3 217 1 236 6 153 6 
342 1 33 1 343 1 296 1 319 3 37 1 38 1 134 1 366 2 64 4 304 1 88 1 260 1 21 1 377 3 173 1 198 1 148 2 71 3 339 1 289 3 174 1 358 2 341 1 153 2 236 2 
342 1 31 1 33 1 343 2 57 1 296 1 319 4 37 1 38 2 366 4 134 2 64 7 304 2 88 1 260 1 21 1 377 5 173 2 198 1 71 4 148 3 339 2 289 4 174 2 358 3 217 1 236 4 341 1 153 4 
322 1 1 1 58 1 
1 1 348 1 
244 1 
1 1 234 1 216 1 
1 1 190 1 
1 1 216 1 
322 2 48 1 1 3 92 1 234 1 216 1 
167 1 273 1 44 1 129 1 6 2 354 1 38 1 286 1 173 1 379 3 108 4 79 3 62 1 149 1 226 7 164 1 66 2 
167 1 273 1 44 1 129 1 6 2 354 1 38 1 286 1 173 1 379 3 108 4 79 3 62 1 149 1 226 7 164 1 66 2 
167 1 273 1 44 1 129 1 335 1 6 2 354 1 38 1 286 1 173 1 379 3 108 4 79 3 62 1 149 1 226 7 164 1 66 2 
273 1 129 1 293 1 343 3 361 2 103 1 59 1 6 3 298 1 38 4 108 16 79 10 62 1 226 31 326 3 164 2 66 5 167 1 187 1 44 5 86 1 118 1 119 1 354 2 286 2 90 1 194 1 173 4 196 1 379 15 339 3 149 2 174 3 97 4 
273 1 361 4 6 2 298 2 38 1 7 1 108 5 79 4 62 1 226 9 164 1 66 3 255 1 187 2 167 1 44 1 118 1 119 2 354 1 286 1 90 2 173 1 379 4 149 1 
74 1 100 1 180 1 203 1 76 1 276 1 243 1 278 1 320 1 61 1 161 1 39 1 281 1 209 2 327 1 283 1 302 2 166 1 305 1 256 1 350 1 334 1 193 1 143 1 215 1 356 1 263 1 265 1 147 2 54 1 
74 1 100 1 180 1 158 1 276 1 243 1 278 1 320 1 61 1 161 1 39 1 281 1 209 3 327 2 283 1 302 3 166 1 305 1 350 1 334 1 121 1 193 1 143 1 215 1 356 1 263 1 265 1 147 2 54 1 177 1 
74 1 180 1 158 1 276 1 243 1 278 1 320 1 61 1 39 1 281 1 209 2 327 2 302 2 283 1 166 1 305 1 334 1 193 1 143 1 215 1 356 1 263 1 265 1 147 2 177 1 
1 1 74 2 180 2 241 1 350 1 351 1 243 1 278 1 121 1 193 1 161 1 143 1 39 2 356 2 378 1 265 1 206 1 40 1 209 1 95 1 216 1 302 1 154 1 
74 1 100 1 180 1 203 1 158 1 276 1 243 1 278 1 161 1 39 1 209 1 283 1 302 1 166 1 305 1 256 1 350 1 334 1 193 1 143 1 215 1 356 1 263 1 265 1 147 2 54 1 
122 1 
1 1 243 2 296 1 163 1 248 1 206 2 208 4 64 2 67 2 253 1 349 1 211 2 168 2 169 1 212 1 352 2 260 1 123 1 261 1 21 1 265 2 313 6 71 5 25 1 175 1 358 2 216 1 220 1 360 1 33 1 182 2 364 1 277 1 278 1 131 1 319 2 37 1 80 3 138 1 330 1 374 1 373 1 193 1 143 2 377 2 53 2 93 2 381 1 289 5 150 1 95 1 96 1 200 1 153 2 154 1 
138 1 373 1 182 1 364 1 131 1 261 1 123 1 163 1 248 1 80 1 313 2 71 3 381 1 208 2 289 3 25 1 150 1 175 1 200 1 96 1 254 1 349 1 
364 1 131 1 319 1 163 1 248 1 80 1 208 3 349 1 254 1 138 1 373 1 352 1 123 1 261 1 21 1 313 1 71 3 381 1 25 1 289 3 150 1 175 1 96 1 200 1 
182 1 364 1 131 1 319 1 163 1 248 1 80 1 208 3 254 1 349 1 138 1 211 1 373 1 352 1 123 1 261 1 21 1 71 3 313 2 381 1 25 1 289 3 150 1 175 1 96 1 200 1 
296 1 163 1 248 1 208 6 67 2 254 1 349 1 211 4 168 2 212 1 352 4 261 1 123 1 21 5 71 5 313 7 25 1 175 1 358 2 179 1 33 1 360 1 182 4 364 1 131 1 277 1 319 5 37 1 80 3 227 1 138 1 139 1 373 1 377 1 53 2 93 2 381 1 289 5 150 1 200 1 96 1 55 1 201 1 153 1 
296 1 163 1 248 1 208 4 64 2 67 2 349 1 211 2 168 2 212 1 352 2 261 1 123 1 21 1 71 4 313 4 25 1 175 1 358 2 33 1 360 1 182 2 364 1 277 1 131 1 319 2 37 1 80 2 138 1 373 1 374 1 377 1 53 2 93 2 381 1 289 4 150 1 200 1 96 1 153 1 
179 1 360 1 33 1 182 2 364 1 131 1 277 1 296 1 319 1 37 1 163 1 248 1 80 2 208 4 227 1 67 2 349 1 138 1 211 2 168 2 212 1 373 1 352 2 123 1 261 1 21 1 377 1 53 2 313 4 93 2 71 4 381 1 25 1 289 4 150 1 175 1 358 2 55 1 96 1 200 1 153 1 
179 1 360 1 33 1 182 2 364 1 131 1 277 1 296 1 319 1 37 1 163 1 248 1 80 2 208 4 227 1 67 2 349 1 138 1 211 2 168 2 212 1 373 1 352 2 123 1 261 1 21 1 377 1 53 2 313 4 93 2 71 4 381 1 25 1 289 4 150 1 175 1 358 2 55 1 96 1 200 1 153 1 
73 1 156 2 292 2 360 1 33 1 182 2 364 1 131 1 365 1 277 1 296 1 319 1 37 1 163 1 248 1 80 2 208 4 64 2 349 1 138 1 211 2 168 2 373 1 352 2 123 1 261 1 21 1 377 1 337 1 313 4 93 2 71 4 381 1 25 1 289 4 150 1 175 1 55 1 96 1 200 1 153 1 
179 1 360 1 33 1 182 3 364 1 296 1 277 1 131 1 319 1 37 1 163 1 248 1 80 2 208 5 227 1 67 2 349 1 138 1 211 3 168 2 212 1 373 1 352 3 123 1 261 1 21 1 377 1 53 2 93 2 71 4 313 5 381 1 25 1 289 4 150 1 175 1 358 2 55 1 96 1 200 1 153 1 201 1 
179 1 360 1 33 1 182 3 364 1 296 1 277 1 131 1 319 1 37 1 163 1 248 1 80 2 208 5 227 1 67 2 349 1 138 1 211 3 168 2 212 1 373 1 352 3 123 1 261 1 21 1 377 1 53 2 93 2 71 4 313 5 381 1 25 1 289 4 150 1 175 1 358 2 55 1 96 1 200 1 153 1 201 1 
156 2 292 2 296 1 163 1 248 1 208 4 64 2 349 1 211 2 168 2 352 2 261 1 123 1 21 1 71 4 313 4 25 1 175 1 33 1 360 1 182 2 364 1 277 1 131 1 319 1 37 1 80 2 138 1 373 1 374 1 377 1 337 1 93 2 381 1 289 4 150 1 200 1 96 1 153 1 
273 1 361 2 58 1 6 1 298 1 38 1 108 3 79 2 62 1 346 1 226 6 66 2 187 1 167 1 259 1 45 1 119 1 353 2 354 1 286 1 124 1 90 1 173 1 379 3 70 1 380 1 
98 1 293 1 343 1 361 4 103 1 104 1 36 1 298 2 38 1 108 8 79 2 346 2 226 14 326 3 65 1 66 1 137 1 187 2 44 1 259 1 45 4 119 2 142 1 353 1 90 2 124 11 197 1 173 2 379 6 70 11 339 2 174 2 97 3 
1 1 98 1 219 1 361 2 243 1 278 1 104 1 321 1 298 1 163 1 108 1 346 1 206 1 226 2 347 1 228 1 137 1 43 1 187 1 259 1 307 1 45 1 87 1 119 1 213 1 353 1 193 1 143 1 90 1 50 1 379 1 265 1 338 1 234 1 25 2 340 1 150 2 216 1 
98 1 1 2 158 1 240 2 343 2 243 3 344 1 6 1 104 1 298 3 163 1 108 10 62 1 346 3 206 1 347 1 112 2 66 4 167 1 259 3 213 1 119 3 353 2 18 2 354 1 124 7 173 3 70 7 265 3 25 3 174 2 314 1 216 2 273 1 219 2 361 6 278 2 321 2 279 2 38 3 79 8 226 20 137 1 187 3 284 1 44 4 87 1 45 7 193 2 286 1 143 3 90 3 50 1 379 10 52 2 338 2 339 2 234 2 150 3 
237 1 155 1 1 3 316 1 76 1 158 1 361 4 243 8 278 2 104 1 298 2 163 1 108 1 346 2 206 2 226 2 347 1 137 1 187 2 258 1 170 1 116 1 259 2 213 1 119 2 285 2 193 2 143 7 90 2 50 1 379 1 265 8 380 1 25 1 150 1 235 1 95 1 216 2 154 1 
98 1 343 1 361 2 298 1 38 1 163 1 108 1 79 1 346 1 226 3 66 1 187 1 372 1 259 1 45 1 213 1 119 1 19 1 124 1 90 1 144 1 50 1 173 1 70 1 379 2 339 1 25 1 174 1 150 1 
187 1 99 1 44 1 259 1 45 1 361 2 119 1 298 1 124 1 90 1 173 1 70 1 108 2 79 1 380 1 346 1 226 2 174 1 
187 1 259 1 343 1 45 1 361 2 119 1 298 1 78 1 38 1 124 1 90 1 70 1 379 2 79 1 380 1 346 1 226 2 66 1 
343 1 361 2 298 1 38 1 108 2 79 2 346 1 226 4 66 1 187 1 44 1 259 1 45 2 119 1 90 1 124 2 173 1 70 2 379 2 339 1 380 1 174 1 
187 1 99 1 44 1 259 1 45 1 361 2 119 1 298 1 124 1 90 1 173 1 70 1 108 2 79 1 346 1 226 2 174 1 235 1 
187 1 259 1 343 1 45 1 361 2 119 1 298 1 78 1 38 1 124 1 90 1 70 1 379 2 79 1 346 1 226 2 235 1 66 1 
343 1 361 2 298 1 38 1 108 2 79 2 346 1 226 4 66 1 187 1 44 1 259 1 45 2 119 1 90 1 124 2 173 1 70 2 379 2 339 1 174 1 235 1 
187 1 44 1 259 1 343 1 45 2 361 2 119 1 298 1 38 1 124 2 90 1 173 1 379 2 70 2 108 2 79 2 346 1 339 1 174 1 226 4 66 1 
1 1 219 1 361 2 243 1 278 1 104 1 321 1 298 1 108 1 346 1 206 1 226 2 112 1 137 1 187 1 259 1 119 1 353 1 193 1 143 1 90 1 379 1 265 1 338 1 234 1 25 1 150 1 216 1 
1 1 361 2 243 1 278 1 104 1 60 1 298 1 108 1 346 1 206 1 226 2 137 1 187 1 259 1 119 1 353 1 193 1 143 1 90 1 145 1 379 1 265 1 338 1 234 1 25 1 26 1 150 1 216 1 
98 1 343 1 361 2 298 1 38 1 108 2 79 2 346 1 226 4 66 1 187 1 44 1 259 1 45 2 119 1 90 1 124 2 173 1 70 2 379 2 339 1 174 1 
1 1 219 1 76 1 343 1 361 2 243 1 278 1 321 1 298 1 38 1 108 2 79 2 346 1 226 4 112 1 66 1 187 1 44 1 259 1 45 2 119 1 193 1 18 1 143 1 124 2 90 1 173 1 379 2 70 2 265 1 338 1 339 1 174 1 234 1 25 1 150 1 216 1 
98 1 343 1 361 2 295 1 298 1 38 1 163 1 108 2 79 1 346 1 226 3 187 1 44 1 372 1 259 1 45 1 213 1 119 1 19 1 90 1 124 1 50 1 173 1 379 1 70 1 339 1 25 1 174 1 150 1 
3 1 293 1 343 4 103 3 6 1 298 3 246 1 108 20 62 1 8 1 9 1 12 1 66 4 255 1 167 1 118 1 119 3 309 1 355 4 354 1 20 1 173 5 125 1 174 4 72 1 273 1 361 6 363 1 38 5 79 8 81 1 226 41 326 3 187 3 44 4 191 1 286 1 90 3 376 2 49 1 379 21 339 4 97 4 
273 1 3 1 293 1 343 3 361 8 363 1 103 3 6 1 246 1 298 4 38 4 108 20 79 7 62 1 81 1 9 1 8 1 226 38 326 3 66 4 12 1 255 1 167 1 187 4 44 3 191 1 118 2 119 4 309 1 354 1 355 4 286 1 20 1 376 2 90 4 49 1 125 1 173 5 379 18 339 4 174 4 97 4 72 1 
273 1 3 1 293 2 343 7 361 4 103 2 6 1 36 2 246 1 298 2 38 8 108 27 79 14 62 1 81 1 8 1 226 52 326 4 66 7 12 1 255 1 167 1 187 2 44 7 191 1 118 1 119 2 309 1 354 1 355 4 286 1 20 1 376 1 90 2 49 1 125 1 173 8 379 25 339 7 174 7 97 4 72 1 
293 1 343 3 361 4 363 1 103 1 298 2 38 3 108 9 79 6 81 1 226 19 326 1 66 3 12 1 255 1 187 2 44 3 191 1 119 2 355 2 376 1 90 2 49 2 173 3 379 10 357 1 339 3 174 3 97 2 72 1 
3 1 343 2 361 6 103 2 298 3 246 1 38 2 108 14 79 4 81 2 8 1 226 26 326 2 66 2 12 1 255 1 187 3 44 2 191 1 118 2 119 3 309 1 355 4 20 1 376 2 90 3 49 1 125 1 173 3 379 12 339 3 174 3 72 1 97 2 
271 1 195 1 328 1 291 1 231 1 117 1 251 1 382 1 269 1 152 1 
188 1 250 1 
271 1 195 1 224 1 291 1 56 1 117 1 249 1 251 1 152 1 
114 1 120 1 
113 1 218 1 171 1 
128 1 30 1 130 1 213 1 16 1 160 1 223 1 19 1 310 1 204 1 50 1 324 1 163 1 288 1 25 1 150 1 175 1 184 1 210 1 
128 1 30 1 130 1 213 1 16 1 160 1 223 1 19 1 310 1 204 1 50 1 324 1 163 1 288 1 25 1 150 1 175 1 184 1 210 1 
128 1 30 1 130 1 213 1 16 1 160 1 223 1 19 1 310 1 204 1 50 1 324 1 163 1 288 1 25 1 150 1 175 1 184 1 210 1 
113 1 114 1 120 1 
113 1 114 1 120 1 
218 1 171 1 
113 1 218 1 171 1 
0 1 105 1 
271 1 0 1 30 1 128 1 291 1 160 1 105 1 163 2 251 1 250 1 185 1 304 1 188 1 232 1 117 1 213 2 353 1 375 1 195 1 50 2 71 1 148 1 25 2 289 1 150 2 152 1 359 1 
1 1 98 1 316 1 361 2 34 1 243 2 278 1 104 1 298 1 133 1 163 2 108 1 346 1 226 2 137 1 187 1 258 1 259 1 119 1 285 2 17 1 193 1 143 2 90 1 51 1 379 1 265 2 25 2 150 2 266 1 216 1 
166 1 100 1 180 1 76 1 158 1 276 1 243 2 15 1 334 1 278 1 193 1 47 1 143 2 215 1 263 1 147 2 265 2 282 1 283 1 
166 1 100 1 180 1 294 1 158 1 276 1 243 1 15 1 334 1 278 1 193 1 143 1 215 1 263 1 147 2 265 1 283 1 
1 1 180 1 243 1 278 1 46 1 193 1 143 1 265 1 206 1 40 1 95 1 216 1 282 1 154 1 
166 1 100 1 180 1 158 1 276 1 243 1 15 1 334 1 278 1 193 1 47 1 143 1 215 1 263 1 147 2 265 1 282 1 283 1 
181 1 
377 1 14 1 308 1 58 1 319 1 153 1 21 1 
33 1 296 1 277 1 319 2 37 1 80 1 64 1 67 1 212 1 21 1 377 1 53 1 313 1 71 1 289 1 358 1 153 1 
1 10 157 2 240 2 343 2 243 3 296 4 206 1 63 2 64 12 348 3 11 2 68 1 14 1 115 2 308 1 260 2 21 2 311 2 173 2 265 3 313 5 71 5 174 2 216 3 358 6 270 1 220 1 76 1 33 4 278 3 277 4 319 8 37 4 38 2 322 2 366 6 80 3 83 2 370 2 85 1 371 2 190 2 193 4 143 3 377 9 92 1 233 1 339 2 381 2 94 1 234 3 289 5 236 6 153 8 
3 1 220 1 157 2 33 2 343 2 103 1 296 2 277 2 319 5 246 1 37 2 38 2 366 5 80 1 8 1 63 1 326 1 64 6 140 1 309 1 260 1 20 1 21 2 377 8 312 1 173 2 71 1 313 1 339 2 289 1 174 2 358 3 236 5 97 1 153 5 
157 2 33 1 130 1 223 1 296 1 277 1 37 1 299 1 38 1 204 1 163 1 227 1 63 1 167 1 213 1 19 1 354 1 286 1 377 2 173 2 50 1 71 1 288 1 25 1 289 1 150 1 175 1 153 2 
14 1 33 1 308 1 277 1 296 1 319 1 37 1 21 1 377 1 153 1 
157 2 240 1 343 2 319 5 38 2 366 5 377 5 173 2 339 2 174 2 63 1 64 10 358 5 153 5 236 5 
80 1 71 1 313 1 289 1 319 1 21 1 
1 1 220 2 33 2 243 4 278 1 296 2 277 1 37 2 80 2 206 2 207 1 253 1 306 1 330 1 88 1 193 1 260 2 143 4 377 2 265 4 233 2 313 4 71 3 289 3 95 1 216 1 153 2 270 1 154 1 
1 1 219 1 130 1 361 2 243 1 278 1 321 1 298 1 163 2 346 1 206 1 226 1 112 1 137 1 187 1 84 1 259 1 119 1 213 2 353 1 19 2 193 1 143 1 90 1 50 2 379 1 265 1 338 1 25 3 234 1 150 3 216 1 
220 1 33 1 277 1 296 1 6 1 260 1 319 4 37 1 21 2 366 2 377 1 358 2 64 4 236 2 153 2 
271 1 251 1 262 1 
271 1 251 1 262 1 
271 1 251 1 262 1 
0 1 271 1 242 1 251 1 382 1 
271 1 199 1 251 1 
271 1 199 1 251 1 
271 1 199 1 251 1 
271 1 251 1 
195 1 117 1 
273 1 361 2 103 1 6 1 246 1 298 1 38 1 108 4 79 2 62 1 226 8 326 1 66 2 255 1 187 1 167 1 119 1 354 1 286 1 90 1 173 1 379 4 97 1 
273 1 293 1 361 4 103 1 6 1 246 1 298 2 38 1 108 6 79 3 62 1 226 11 326 1 41 1 66 2 255 1 167 1 187 2 44 1 119 2 354 1 286 1 90 2 173 2 379 5 339 1 174 1 97 2 
273 1 3 1 343 2 361 6 103 1 6 1 246 1 298 3 38 3 108 9 79 4 62 1 8 1 226 19 326 1 41 1 66 3 255 1 167 1 187 3 44 1 118 1 119 3 309 1 354 1 286 1 20 1 90 3 173 3 379 10 339 2 174 2 97 1 
273 1 3 1 343 1 361 6 103 1 6 1 246 1 298 3 38 2 108 10 79 5 62 1 8 1 226 17 326 1 41 1 66 3 255 1 167 1 187 3 44 2 118 1 119 3 309 1 354 1 286 1 20 1 90 3 173 3 379 7 339 2 174 2 97 1 
273 1 361 2 103 1 6 1 246 1 298 1 38 1 108 4 79 2 62 1 226 8 326 1 66 2 255 1 187 1 167 1 119 1 354 1 286 1 90 1 173 1 379 4 97 1 
3 1 343 2 361 2 103 1 246 1 298 1 38 2 108 6 79 2 8 1 226 12 326 1 66 1 255 1 187 1 44 1 119 1 309 1 20 1 90 1 173 2 379 6 339 2 174 2 97 1 
273 1 3 1 343 1 361 8 103 1 6 1 246 1 298 4 38 2 108 10 79 5 62 1 8 1 226 18 326 1 41 1 66 3 255 1 167 1 187 4 44 2 118 2 119 4 309 1 354 1 286 1 20 1 90 4 173 3 379 8 339 2 174 2 97 1 
3 1 343 2 361 8 363 1 103 1 246 1 298 4 38 2 108 9 79 6 8 1 226 16 326 1 66 3 255 1 187 4 44 3 118 2 119 4 309 1 20 1 90 4 173 3 379 7 339 3 174 3 97 1 
273 1 167 1 44 3 354 3 38 1 286 3 173 1 379 4 108 3 79 6 62 2 226 7 66 3 
273 1 3 1 343 1 361 8 363 1 103 1 6 1 246 1 298 4 38 2 108 10 79 4 62 1 8 1 226 18 326 1 66 3 255 1 167 1 187 4 44 1 118 2 119 4 309 1 354 1 286 1 20 1 90 4 173 3 379 8 339 2 174 2 97 1 
167 1 187 2 273 1 44 1 361 4 118 1 119 2 6 1 298 2 354 1 38 1 286 1 90 2 173 1 379 4 108 4 79 3 62 1 226 8 66 2 
173 1 167 1 273 1 379 3 108 3 79 2 62 1 226 6 58 1 6 1 66 2 354 1 38 1 286 1 
187 1 44 1 343 1 361 2 119 1 298 1 38 1 90 1 173 1 379 2 108 2 79 2 339 1 174 1 226 4 41 1 66 1 
44 1 293 1 343 1 103 1 38 1 173 1 379 4 108 3 79 2 339 1 226 7 174 1 326 1 66 1 97 2 
273 1 293 1 343 2 361 4 6 1 36 1 298 2 38 3 108 11 79 9 62 1 226 23 326 2 66 5 167 1 187 2 44 4 118 2 119 2 142 1 192 1 354 2 286 2 90 2 173 3 379 12 339 2 174 2 97 2 
379 1 226 1 97 1 
108 1 226 1 326 1 
187 1 44 1 240 1 343 1 361 2 119 1 298 1 38 1 90 1 173 1 379 3 108 3 79 3 339 1 226 6 174 1 41 1 66 2 
3 1 343 2 361 2 103 1 246 1 298 1 38 2 108 6 79 2 8 1 226 12 326 1 66 1 255 1 187 1 44 1 119 1 309 1 20 1 90 1 173 2 379 6 339 2 174 2 97 1 
167 1 44 1 354 1 38 1 286 1 173 1 379 3 108 3 79 2 226 6 66 1 
187 1 273 1 44 1 361 2 118 1 119 1 192 1 354 1 298 1 286 1 90 1 379 2 108 1 79 2 62 1 226 3 66 1 
187 1 167 1 44 2 361 2 119 1 298 1 354 2 299 1 286 2 38 2 90 1 173 2 379 5 108 5 79 5 226 10 66 3 255 1 
187 1 44 1 361 2 119 1 298 1 90 1 173 1 108 2 79 1 174 1 226 2 255 1 
187 1 44 1 343 1 361 2 119 1 298 1 38 1 90 1 173 1 379 2 108 2 79 2 339 1 174 1 226 4 66 1 255 1 
187 3 44 1 361 6 118 1 363 1 119 3 192 1 298 3 354 1 286 1 90 3 379 2 108 1 79 2 226 3 66 1 255 1 
273 1 293 1 343 3 361 10 363 1 103 1 59 1 6 1 298 5 38 5 108 16 79 12 62 1 226 34 326 3 41 1 66 7 255 1 167 2 187 5 44 5 86 1 118 2 119 5 192 1 354 3 286 3 90 5 196 1 173 5 379 18 339 3 174 3 97 4 
163 1 248 1 264 1 221 1 25 1 150 1 353 1 
42 1 163 1 4 1 248 1 264 1 221 1 325 1 25 1 5 1 150 1 353 1 268 1 
1 1 265 1 206 1 243 1 95 1 58 1 278 1 216 1 193 1 154 1 143 1 
1 1 219 1 243 1 213 1 353 1 278 1 193 1 143 1 50 1 163 1 265 1 338 1 206 1 234 1 25 2 347 1 150 2 216 1 
1 3 219 1 243 1 278 1 163 2 347 1 371 1 190 1 373 1 213 1 353 1 193 1 143 1 50 2 265 1 233 1 338 1 25 2 234 2 150 2 175 1 216 2 200 1 
1 3 243 2 278 1 163 2 347 1 371 1 190 1 141 1 373 1 213 1 353 1 193 1 143 2 50 2 145 1 265 2 233 1 338 1 25 2 234 2 150 2 175 1 216 2 200 1 
1 4 190 1 371 1 141 1 243 3 172 1 278 1 319 1 193 1 21 1 143 3 322 1 106 1 265 3 71 2 233 1 313 1 206 1 381 1 234 1 289 2 216 1 348 1 
1 4 190 1 371 1 115 1 141 1 243 3 278 1 319 1 193 1 21 1 143 3 322 1 265 3 71 2 233 1 313 1 206 1 381 1 234 1 289 2 216 1 348 1 
155 1 265 1 243 1 278 1 193 1 143 1 
237 1 155 1 1 3 316 1 170 1 116 1 76 1 158 1 243 7 285 1 345 1 245 1 278 2 193 3 143 6 24 1 265 7 92 1 206 2 234 1 216 2 
273 1 1 1 98 1 219 1 76 1 361 4 243 1 278 1 6 1 298 2 321 1 38 1 133 1 108 3 163 1 79 2 62 1 346 2 226 6 347 1 112 1 66 2 167 1 187 2 259 2 45 1 119 2 213 1 353 2 193 1 18 1 354 1 286 1 143 1 124 1 90 2 173 1 50 1 70 1 379 3 52 1 265 1 338 1 234 1 25 2 150 2 216 1 
1 2 33 2 243 1 296 2 277 2 319 1 37 2 322 1 80 1 206 1 83 1 348 1 370 1 14 1 115 1 308 1 21 1 143 1 311 1 377 1 265 1 71 3 148 1 313 2 381 1 289 3 153 1 270 1 
155 1 1 2 85 1 76 1 243 2 278 1 193 2 143 2 322 1 265 2 92 1 234 1 216 1 
1 1 76 1 141 1 243 4 278 1 193 1 132 1 143 4 265 4 206 1 95 1 216 1 154 1 
272 1 1 1 202 1 243 2 344 1 245 1 278 1 193 2 143 2 24 1 265 2 233 1 234 1 216 1 
215 1 263 1 147 1 265 1 276 1 206 1 243 1 278 1 193 1 143 1 
1 1 316 1 76 1 158 1 243 2 34 1 278 1 193 1 143 2 265 2 216 1 
1 3 316 1 76 1 116 1 170 1 243 5 278 2 193 2 132 1 143 4 265 5 233 1 206 1 95 1 216 2 154 1 
1 3 316 1 76 1 170 1 243 5 278 2 193 2 132 1 143 4 265 5 233 1 206 1 95 1 216 2 154 1 367 1 
1 1 243 1 213 1 353 1 278 1 193 1 143 1 50 1 145 1 163 1 265 1 338 1 206 1 234 1 25 2 347 1 150 2 216 1 
1 1 243 1 345 1 245 1 278 1 193 2 143 1 24 1 265 1 92 1 233 1 234 1 216 1 
178 1 323 1 274 1 353 1 297 1 
178 2 138 1 238 1 274 1 373 1 331 1 275 1 353 1 319 1 297 2 21 1 323 2 148 1 71 2 381 1 289 2 175 1 252 1 200 1 
178 1 323 1 51 1 163 1 274 1 25 1 150 1 266 1 17 1 
274 1 275 1 252 1 
281 1 58 1 320 1 61 1 
281 1 350 1 209 1 320 1 61 1 302 1 161 1 
356 1 74 1 302 1 
256 1 350 1 320 1 161 1 61 1 225 1 135 2 281 1 209 3 176 1 165 1 302 3 
280 1 281 1 350 1 209 2 327 1 320 1 61 1 302 2 161 1 
256 1 350 1 161 1 320 1 300 1 263 1 205 1 147 1 209 1 302 1 283 1 
256 1 350 1 209 1 320 1 61 1 302 1 161 1 
256 1 281 1 350 1 209 1 61 2 302 1 161 1 
303 1 329 1 256 1 350 2 318 1 320 1 61 1 161 2 209 2 302 2 
256 1 350 1 61 1 161 1 320 2 300 1 336 1 281 1 82 1 209 3 111 1 327 2 302 3 
256 1 350 1 334 1 320 1 61 1 161 1 215 1 263 1 147 2 281 1 209 2 327 1 302 2 29 1 283 1 
256 1 350 2 61 1 161 2 320 2 300 1 280 1 336 1 281 1 209 4 327 2 302 4 27 1 
256 1 281 1 350 1 209 1 320 1 61 1 302 1 161 1 
186 1 350 1 61 2 161 1 320 3 300 1 135 1 336 1 281 2 209 4 165 1 176 1 327 2 302 4 
256 1 350 1 102 1 89 1 320 1 61 1 161 1 281 1 136 1 209 2 327 1 302 2 
256 1 350 1 320 1 161 1 61 1 135 2 281 1 209 3 176 1 165 2 302 3 290 1 
315 1 189 2 301 1 320 2 
23 1 256 1 350 1 209 1 302 1 161 1 
256 1 281 1 82 1 350 1 209 2 327 1 320 1 61 1 302 2 161 1 
126 1 
256 1 281 1 350 1 209 1 320 1 61 1 302 1 161 1 
256 1 135 1 82 1 281 1 350 1 209 3 327 1 320 1 61 1 302 3 161 1 
186 1 300 1 336 1 320 1 
320 1 61 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 376 335 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
69 1 206 2 3 2 341 1 147 1 342 1 168 6 209 2 258 1 235 1 155 1 99 1 156 5 8 3 183 9 11 2 103 1 241 1 349 2 219 1 280 1 375 2 199 2 284 1 136 1 249 9 63 4 338 1 
69 1 206 2 3 2 341 1 147 1 342 1 168 6 209 2 258 1 235 1 155 1 99 1 156 5 8 3 183 9 11 2 103 1 241 1 349 2 219 1 280 1 375 2 199 2 284 1 136 1 249 9 63 4 338 1 
69 1 206 2 3 2 341 1 147 1 342 1 168 7 209 2 258 1 235 1 155 1 99 1 156 6 8 4 183 10 11 2 103 1 241 1 349 2 219 1 280 1 375 2 199 2 284 1 136 1 249 10 63 5 338 1 
69 1 206 2 3 2 341 1 147 1 342 1 168 4 209 2 258 1 235 1 99 1 156 4 8 2 183 7 11 2 103 1 241 1 349 1 219 1 280 1 375 2 199 2 284 1 136 1 249 7 63 3 338 1 
349 2 69 1 219 1 206 1 3 1 280 1 168 3 209 1 199 1 235 1 155 1 156 3 249 4 63 2 8 1 183 4 11 1 103 1 
69 1 219 1 206 1 280 1 375 1 209 1 197 1 199 1 284 1 156 1 99 1 249 2 286 1 183 2 228 1 11 1 
69 1 219 1 280 1 168 1 375 1 199 2 156 2 249 3 63 1 8 1 183 3 338 1 11 2 
69 1 206 1 3 1 341 1 147 1 168 7 209 1 176 1 235 1 156 5 155 1 8 3 183 9 11 2 103 1 349 2 219 1 372 1 280 1 375 1 199 2 63 4 249 9 338 1 
69 1 206 1 3 1 341 1 147 1 168 7 209 1 176 1 235 1 156 5 155 1 8 3 183 9 11 2 103 1 349 2 219 1 372 1 280 1 375 1 199 2 63 4 249 9 338 1 
20 1 152 1 346 1 
217 2 152 1 298 1 
166 2 128 2 76 2 58 2 64 1 80 2 102 1 56 2 
166 2 145 1 271 1 207 1 256 1 6 1 363 1 149 1 175 1 315 1 366 1 237 2 317 2 347 1 102 1 74 1 321 1 56 3 57 1 128 2 16 1 76 3 58 2 351 1 60 2 352 1 80 2 161 1 194 1 195 1 84 1 200 2 306 1 64 1 116 1 336 1 141 2 
105 1 166 1 128 1 76 1 58 1 120 1 64 1 191 1 80 1 56 1 
58 1 76 1 77 1 159 1 31 1 371 1 191 1 81 1 294 1 329 1 222 1 152 1 346 1 56 1 
166 1 128 1 58 1 76 1 77 1 159 1 371 2 80 1 191 1 81 2 329 1 222 1 152 1 346 1 56 1 
48 1 72 1 107 1 371 1 81 1 
48 1 87 1 152 1 358 1 107 1 371 2 346 1 81 2 
107 1 371 1 81 1 
105 1 48 1 166 1 128 1 58 1 76 1 120 1 371 1 191 1 80 1 81 1 178 1 64 1 56 1 
152 1 
48 1 152 1 358 1 129 1 107 1 371 2 346 1 81 2 
118 1 27 1 48 2 358 1 288 1 311 1 107 2 371 5 81 5 41 1 162 1 152 1 153 1 54 2 344 1 44 2 346 1 23 2 187 1 
20 1 102 1 
13 1 166 1 128 1 58 2 76 2 80 1 112 1 102 2 56 2 
53 1 134 1 70 1 
57 1 76 1 351 1 60 1 6 1 330 1 195 1 84 1 315 1 237 1 102 1 116 1 74 1 141 1 321 1 56 1 
57 1 128 1 58 1 76 2 70 1 351 1 60 1 80 1 6 1 195 1 196 1 84 1 315 1 237 1 212 1 116 1 74 1 141 1 321 1 56 2 
166 1 128 3 76 3 58 3 212 1 80 3 102 1 56 3 
105 1 128 1 76 1 58 1 191 1 80 1 56 1 
13 1 166 1 128 1 76 1 58 1 191 1 80 1 56 1 112 1 
166 2 271 1 207 1 363 1 6 1 175 1 315 1 124 1 366 1 211 1 237 1 317 2 212 1 347 1 102 1 74 1 321 1 56 4 57 1 128 3 16 1 76 4 58 3 77 1 351 1 159 1 60 1 371 1 80 3 191 1 81 1 161 1 194 1 329 1 112 1 195 1 196 1 222 1 84 1 200 1 64 1 116 1 336 1 141 1 
128 1 76 2 58 2 31 1 212 1 273 1 80 1 102 1 56 2 
166 1 128 3 77 1 58 3 76 3 159 1 371 1 191 1 80 3 81 1 112 1 329 1 196 1 222 1 124 1 152 1 212 2 73 1 56 3 
166 1 128 2 53 1 76 2 58 2 70 1 212 1 80 2 56 2 112 1 
57 1 76 1 351 1 60 1 6 1 195 1 84 1 315 1 237 1 102 1 116 1 74 1 141 1 321 1 56 1 
278 1 76 1 351 1 60 1 6 1 84 1 315 1 237 1 102 1 116 1 74 1 141 1 381 1 321 1 56 1 
70 2 271 1 207 1 313 1 175 1 53 2 366 1 317 2 259 1 347 1 185 1 322 1 352 2 373 1 194 1 376 1 246 1 200 3 134 2 225 1 65 1 25 1 336 1 
222 1 128 1 76 1 58 1 191 1 80 1 100 1 56 1 
104 1 166 1 128 4 58 5 76 5 31 1 273 1 80 4 112 1 196 1 265 1 212 2 102 1 56 5 
105 1 128 2 76 2 58 2 100 1 191 1 80 2 56 2 
320 1 117 1 
320 1 117 1 
92 1 380 1 
92 1 380 1 
92 1 380 1 
216 1 320 1 117 1 
216 1 320 1 117 1 
348 1 320 1 117 1 
205 1 92 1 213 1 320 2 380 1 117 2 
216 1 320 1 117 1 
368 1 320 1 117 1 
368 1 320 1 117 1 
368 1 320 1 117 1 
14 1 309 1 269 2 243 2 205 1 324 1 370 1 326 3 130 2 371 2 81 2 148 1 62 1 152 1 22 2 202 1 115 2 320 2 117 2 
339 1 269 1 301 1 128 2 1 1 243 1 76 2 58 2 324 1 360 1 326 1 371 1 130 1 232 1 80 2 81 1 177 1 151 1 115 1 102 1 348 1 320 1 117 1 56 2 
209 1 206 1 3 1 
209 1 206 1 228 1 
29 1 206 3 122 1 3 2 304 1 228 1 
29 1 206 2 122 1 3 1 228 1 245 1 
29 2 206 2 3 1 122 1 228 1 
47 2 48 4 255 1 118 2 358 1 360 1 71 2 5 1 313 1 177 1 234 1 153 2 152 2 54 1 276 1 298 1 346 1 187 1 369 1 301 1 217 3 107 1 371 5 81 5 376 1 225 1 334 2 378 1 44 1 23 1 335 1 
47 6 48 7 255 2 118 5 358 1 360 4 167 1 292 1 50 5 172 1 313 3 234 2 153 6 152 5 54 2 72 5 298 3 346 1 262 1 187 1 369 1 217 9 107 6 371 9 81 9 376 3 162 1 332 1 225 3 334 6 114 1 44 2 23 2 335 3 
47 2 48 2 255 1 118 2 360 1 71 1 5 1 313 1 234 1 152 3 153 2 54 1 276 1 298 2 346 1 217 4 371 3 81 3 376 1 162 1 225 1 334 2 44 1 23 1 335 1 
47 4 255 1 118 3 48 3 360 2 71 2 5 1 172 1 313 2 234 1 152 4 153 4 54 1 276 1 298 3 346 1 262 1 217 7 371 4 81 4 376 2 162 1 225 2 334 4 114 1 44 1 23 1 335 2 
84 1 20 1 297 1 
84 1 253 1 
9 1 
84 1 321 1 
84 3 297 2 116 1 227 1 131 1 321 1 
84 1 116 1 321 1 
84 1 42 1 
322 3 350 1 289 1 352 4 373 2 305 2 313 1 150 1 266 1 200 7 347 3 268 1 101 1 299 1 251 1 308 1 66 1 
322 3 350 1 289 1 352 4 373 2 305 2 313 1 150 1 266 1 200 7 347 3 268 1 101 1 299 1 251 1 308 1 66 1 
322 3 350 1 289 1 303 1 352 4 373 2 305 2 313 1 150 1 266 1 200 7 347 3 268 1 101 1 299 1 251 1 308 1 66 1 
91 1 271 1 230 3 289 1 291 1 293 1 313 4 174 1 295 1 175 1 150 2 366 1 317 2 347 12 319 4 101 1 299 2 322 10 350 1 352 16 132 1 305 3 373 5 194 1 376 3 266 1 200 28 225 3 268 2 251 1 335 3 165 1 66 2 308 5 
2 1 271 2 289 1 313 1 174 1 175 2 150 1 366 2 317 4 180 1 347 4 101 1 299 1 322 4 352 5 305 2 373 3 194 2 200 9 266 1 268 1 251 1 66 1 308 1 
356 1 254 1 69 1 49 1 206 2 3 1 168 1 209 1 315 1 97 1 154 1 156 1 237 1 182 1 183 2 261 1 74 1 11 1 219 1 60 1 190 1 304 1 280 1 221 1 375 1 199 1 201 1 249 2 141 1 228 1 
356 1 254 1 68 1 69 1 49 1 206 2 3 1 168 2 209 1 34 1 315 1 97 1 154 1 156 1 237 1 182 1 183 3 261 1 74 1 11 1 60 1 190 1 304 1 280 1 375 1 247 1 199 1 249 3 141 1 228 1 
254 1 68 1 69 1 49 1 206 2 3 1 168 2 209 1 315 1 154 1 156 1 237 1 182 1 183 2 261 1 74 1 60 1 190 1 304 1 280 1 375 1 247 1 249 2 141 1 228 1 
28 1 49 2 121 1 60 1 190 2 6 1 111 1 283 1 375 2 34 1 84 1 315 1 199 1 333 1 237 1 249 1 182 2 74 1 183 1 141 1 321 1 163 1 11 1 
356 1 254 1 49 1 206 2 3 1 209 1 315 1 97 1 154 1 237 1 182 1 183 1 261 1 74 1 11 1 219 1 60 1 190 1 304 1 375 1 247 1 199 1 201 1 249 1 141 1 228 1 
46 1 
0 4 6 2 294 1 152 2 153 2 54 1 298 2 346 1 214 1 10 1 56 1 15 2 217 2 58 1 107 6 159 1 19 2 60 2 109 2 110 1 111 1 160 1 222 1 354 1 21 1 23 1 26 2 118 2 28 1 358 3 31 1 272 1 123 2 315 1 234 1 275 1 37 1 237 2 74 1 321 1 187 1 39 2 76 1 77 1 371 5 191 1 81 5 329 1 84 1 198 1 44 1 204 2 337 1 287 1 141 2 
0 2 358 1 31 1 272 1 123 1 294 1 214 1 56 1 76 1 58 1 77 1 129 1 159 1 107 2 371 3 191 1 110 1 81 3 329 1 222 1 354 1 337 1 
0 3 358 1 31 1 272 1 294 1 152 1 346 1 214 1 56 1 76 1 58 1 77 1 129 1 107 1 159 1 371 3 191 1 110 1 81 3 329 1 222 1 354 1 204 1 337 1 
0 3 358 1 31 1 272 1 123 1 294 1 152 1 346 1 214 1 56 1 76 1 58 1 77 1 129 1 159 1 107 2 371 3 191 1 110 1 81 3 329 1 222 1 354 1 204 1 337 1 26 1 
118 1 0 6 270 1 310 1 358 3 31 1 272 1 123 4 294 1 153 1 152 5 54 1 298 2 277 1 346 5 214 1 187 1 56 1 15 2 157 1 39 2 58 1 76 1 77 1 129 1 107 7 159 1 19 2 371 5 109 2 191 1 110 1 81 5 160 1 329 1 222 1 85 1 354 1 21 1 44 1 23 1 204 4 337 1 26 4 
0 4 294 1 153 1 152 2 54 1 298 2 346 1 214 1 56 1 15 2 217 2 58 1 159 1 107 4 19 2 110 1 109 2 160 1 222 1 354 1 21 1 23 1 26 2 118 1 358 2 31 1 272 1 123 2 187 1 77 1 76 1 39 2 371 4 191 1 81 4 329 1 198 1 44 1 204 2 337 1 
118 1 0 4 358 2 270 1 31 1 272 1 123 2 294 1 152 1 153 1 54 1 298 2 346 1 214 1 187 1 56 1 15 2 157 1 39 2 76 1 58 1 77 1 107 4 159 1 19 2 371 4 109 2 191 1 110 1 81 4 160 1 329 1 222 1 85 1 354 1 21 1 44 1 23 1 204 2 26 2 337 1 
118 1 0 4 358 2 270 1 31 1 272 1 123 2 294 1 152 1 153 1 54 1 298 2 346 1 214 1 187 1 56 1 15 2 157 1 39 2 76 1 58 1 77 1 107 4 159 1 19 2 371 4 109 2 191 1 110 1 81 4 160 1 329 1 222 1 85 1 354 1 21 1 44 1 23 1 204 2 26 2 337 1 
118 1 0 4 144 1 358 2 31 1 272 1 123 2 294 1 314 2 152 1 153 1 54 1 346 1 214 1 75 1 187 1 56 1 217 2 39 2 76 1 58 1 77 1 279 1 107 4 159 1 19 2 371 4 191 1 110 1 81 4 160 1 329 1 222 1 43 2 85 1 354 1 44 1 23 1 204 2 26 2 337 1 
118 1 0 5 358 2 270 1 310 1 31 1 272 1 123 3 294 1 152 1 153 1 54 1 298 2 346 1 214 1 187 1 56 1 15 2 157 1 39 2 76 1 58 1 77 1 159 1 107 5 19 2 371 4 109 2 191 1 110 1 81 4 160 1 329 1 222 1 85 1 354 1 21 1 44 1 23 1 204 3 337 1 26 3 
118 1 0 5 358 2 270 1 310 1 31 1 272 1 123 3 294 1 152 1 153 1 54 1 298 2 346 1 214 1 187 1 56 1 15 2 157 1 39 2 76 1 58 1 77 1 159 1 107 5 19 2 371 4 109 2 191 1 110 1 81 4 160 1 329 1 222 1 85 1 354 1 21 1 44 1 23 1 204 3 337 1 26 3 
0 4 294 1 153 1 152 1 54 1 346 1 214 1 56 1 217 2 58 1 159 1 107 4 19 2 110 1 160 1 222 1 354 1 23 1 26 2 118 1 358 2 31 1 272 1 123 2 314 2 187 1 77 1 76 1 39 2 279 1 371 4 191 1 81 4 329 1 43 2 198 1 44 1 204 2 337 1 
70 1 271 1 207 1 289 1 313 1 175 1 53 1 150 1 366 1 317 2 347 3 101 1 102 2 322 2 352 3 373 2 305 1 194 1 20 1 266 1 200 6 134 1 65 1 268 1 251 1 336 1 
70 11 271 2 207 1 312 1 230 3 256 1 313 2 175 2 53 4 366 2 317 4 347 5 319 3 102 1 186 1 322 2 78 1 352 8 132 1 82 1 373 1 161 1 194 2 376 1 200 13 134 11 225 2 140 1 335 2 336 2 308 1 165 1 
207 1 312 1 271 1 256 1 6 1 171 1 175 1 315 1 53 1 366 1 237 1 317 2 212 1 347 1 102 1 74 1 321 1 188 1 56 2 57 1 128 1 76 2 58 1 351 1 60 1 80 1 352 1 193 1 194 1 161 1 195 1 330 1 196 1 84 1 200 2 116 1 336 1 141 1 
207 3 290 1 289 1 256 1 6 1 94 2 52 2 150 1 53 7 212 1 347 8 102 2 101 1 56 3 57 2 58 1 351 2 60 3 59 2 352 10 305 1 161 1 266 1 225 2 268 1 116 2 308 4 70 7 271 3 312 1 363 2 313 3 175 3 315 2 366 3 237 3 317 6 74 2 321 2 322 8 128 1 76 3 80 1 373 4 328 1 194 3 196 1 195 2 376 2 84 2 247 1 200 18 134 7 203 1 251 1 335 2 336 3 141 3 89 2 
28 1 271 2 207 2 256 1 6 2 175 2 96 1 315 2 366 2 237 8 126 1 317 4 318 1 212 1 347 1 74 2 321 2 56 1 128 1 76 1 58 1 79 1 60 8 80 1 352 1 111 1 221 1 194 2 161 1 84 3 247 1 224 1 264 1 200 2 113 1 306 2 65 1 336 2 141 7 
166 1 70 1 271 1 207 1 312 1 313 1 175 1 53 1 366 1 345 1 317 2 347 1 56 1 322 1 128 1 58 1 76 1 80 1 352 1 373 1 194 1 112 1 376 1 200 2 225 1 134 1 335 1 336 1 
322 1 70 1 207 1 271 1 352 2 194 1 313 1 175 1 53 1 200 2 134 1 366 1 225 1 317 2 65 1 336 1 185 1 308 1 
322 1 70 1 207 1 271 1 373 1 194 1 376 1 175 1 246 1 53 1 200 1 134 1 366 1 317 2 65 1 347 1 336 1 
322 2 70 2 207 1 271 1 352 2 373 1 194 1 313 1 376 1 175 1 53 2 200 3 134 2 366 1 225 1 317 2 347 1 65 1 335 1 336 1 308 1 
322 1 70 1 207 1 271 1 352 2 194 1 313 1 175 1 53 1 200 2 134 1 366 1 225 1 113 1 317 2 336 1 185 1 308 1 
322 1 70 1 207 1 271 1 373 1 194 1 376 1 175 1 246 1 53 1 200 1 134 1 366 1 113 1 317 2 347 1 336 1 
322 2 70 2 207 1 271 1 352 2 373 1 194 1 313 1 376 1 175 1 53 2 200 3 134 2 366 1 225 1 113 1 317 2 347 1 335 1 336 1 308 1 
322 2 70 2 207 1 271 1 352 2 373 1 194 1 313 1 376 1 175 1 53 2 200 3 134 2 366 1 225 1 317 2 347 1 335 1 336 1 308 1 
207 1 271 1 256 1 363 1 6 1 175 1 315 1 366 1 237 1 317 2 347 1 102 1 74 1 321 1 56 1 57 1 76 1 351 1 60 1 352 1 194 1 161 1 195 1 84 1 200 2 116 1 336 1 141 1 
207 1 271 1 256 1 6 1 364 1 175 1 315 1 366 1 237 1 317 2 347 1 102 1 74 1 321 1 56 1 278 1 76 1 351 1 60 1 352 1 194 1 161 1 84 1 200 2 116 1 336 1 381 1 141 1 
322 2 70 2 312 1 207 1 271 1 352 2 373 1 194 1 313 1 376 1 175 1 53 2 200 3 134 2 366 1 225 1 317 2 347 1 335 1 336 1 308 1 
70 2 207 1 271 1 363 1 313 1 175 1 315 1 53 2 366 1 237 1 317 2 347 1 74 1 321 1 56 1 322 2 57 1 76 1 351 1 59 1 60 1 352 2 373 1 221 1 194 1 376 1 195 1 84 1 200 3 134 2 225 1 116 1 335 1 336 1 141 1 308 1 
166 1 70 1 271 1 207 1 312 1 233 1 313 1 175 1 53 1 366 1 317 2 347 1 56 1 128 1 58 1 76 1 80 1 352 2 194 1 112 1 376 1 200 3 225 1 134 1 335 1 336 1 
2 1 271 2 230 1 208 1 274 2 313 3 173 1 175 2 125 2 366 2 7 1 317 4 239 1 319 2 347 7 322 6 352 9 220 1 132 1 373 3 194 2 376 3 200 16 225 3 250 1 24 1 335 3 165 1 308 3 
2 1 271 3 230 2 208 2 274 1 313 3 174 2 175 3 125 4 366 3 7 1 317 6 239 1 347 10 319 2 260 1 12 1 322 4 218 1 352 14 132 2 373 2 194 3 376 2 133 1 200 24 225 3 250 2 24 1 226 1 335 3 308 2 307 1 
2 1 271 3 230 3 289 1 208 2 274 1 313 5 173 1 174 1 175 3 150 1 125 4 366 3 7 1 317 6 239 1 319 4 347 17 101 1 260 1 12 1 322 8 218 1 158 1 352 20 132 3 305 1 373 4 194 3 376 4 133 1 266 1 200 37 225 4 250 1 268 1 24 1 251 1 226 1 335 4 307 1 165 1 308 4 
2 1 271 4 230 3 289 1 208 2 274 1 313 5 173 1 174 2 175 4 150 1 125 4 366 4 7 1 317 8 239 1 319 4 347 15 101 1 260 1 12 1 322 7 218 1 158 1 352 20 132 3 305 1 373 4 194 4 376 3 133 1 266 1 200 35 225 4 250 1 268 1 24 1 251 1 226 1 335 4 307 1 165 1 308 3 
2 1 271 2 230 4 289 1 208 1 274 1 313 8 174 1 175 2 150 1 125 4 366 2 7 1 317 4 239 1 319 4 347 18 101 1 260 1 12 1 322 14 218 1 352 27 132 2 305 1 373 7 194 2 376 7 133 1 266 1 200 45 225 7 140 2 250 1 268 1 24 1 251 1 226 1 335 7 307 1 165 2 308 7 
14 1 269 1 343 1 243 1 205 1 202 1 115 1 130 1 320 1 117 1 
339 1 348 1 
269 1 243 1 115 1 130 1 257 1 88 1 55 1 320 1 117 1 
14 1 309 1 269 1 243 1 205 1 324 1 370 1 326 2 371 1 130 1 81 1 62 1 152 1 22 1 202 1 115 1 320 1 117 1 
14 1 309 1 269 1 243 1 205 1 324 1 370 1 326 2 371 1 130 1 81 1 62 1 152 1 22 1 202 1 115 1 320 1 117 1 
14 1 309 1 269 1 243 1 205 1 324 1 370 1 326 2 371 1 130 1 81 1 62 1 152 1 22 1 202 1 115 1 320 1 117 1 
216 1 35 1 213 1 
216 1 35 1 213 1 
40 1 368 1 
40 1 368 1 213 1 
151 1 232 1 
269 1 339 1 48 1 1 1 360 1 232 1 177 1 151 1 102 1 320 1 348 1 56 2 301 1 128 2 243 1 76 2 58 2 370 1 326 1 302 1 371 1 130 1 80 2 81 1 22 1 115 1 117 1 
216 1 35 1 
40 1 368 1 213 1 
119 1 207 1 312 1 271 1 256 1 175 1 315 1 366 1 237 2 296 1 317 2 347 1 74 1 321 1 56 2 76 2 58 2 79 1 60 2 61 1 352 1 194 1 161 1 84 1 331 1 264 1 200 2 267 1 306 2 336 1 141 2 
356 1 254 1 206 2 60 2 3 1 304 1 32 1 244 1 221 1 209 1 315 1 86 1 247 1 237 2 182 1 74 1 261 1 228 1 141 2 
356 1 254 1 206 2 60 1 3 1 304 1 362 1 244 1 209 1 315 1 247 1 237 1 182 1 261 1 74 1 228 1 141 1 
28 1 18 1 60 1 6 1 111 1 84 1 315 1 86 1 333 1 237 1 182 1 74 1 141 1 321 1 
356 1 254 1 206 2 60 1 3 1 304 1 32 1 244 1 209 1 315 1 86 1 247 1 237 1 182 1 261 1 74 1 228 1 141 1 
240 1 
118 1 27 1 20 1 152 1 153 1 288 1 346 1 
118 1 358 1 153 1 152 2 54 1 298 1 346 1 187 1 15 1 217 1 107 1 371 1 109 1 81 1 21 1 44 1 23 1 
47 6 288 1 6 1 94 2 152 8 153 8 54 4 297 2 298 6 346 2 217 12 107 5 60 3 221 1 225 2 23 4 116 3 164 2 27 1 118 7 358 3 359 2 313 2 315 4 316 2 234 2 237 3 38 2 181 1 74 3 321 3 187 4 189 2 77 2 371 5 81 5 192 1 131 1 42 2 376 2 84 10 135 2 334 6 138 1 137 1 44 4 139 1 379 2 335 2 252 2 287 1 141 3 253 3 
47 5 118 6 358 1 359 2 30 1 230 1 313 2 95 1 234 1 152 5 153 5 54 2 298 3 319 1 346 2 260 1 187 2 217 6 218 1 107 1 371 1 81 1 132 1 376 2 133 1 225 2 334 5 379 1 44 2 23 2 226 1 335 2 287 1 307 1 
118 2 166 1 359 2 270 1 120 1 313 2 178 1 150 1 153 2 54 1 101 1 187 1 56 1 105 1 128 1 76 1 58 1 371 1 191 1 80 1 81 1 374 1 266 1 379 1 44 1 64 1 268 1 23 1 
27 1 118 1 288 1 153 1 152 1 54 1 44 1 23 1 346 1 187 1 
47 5 118 3 217 10 359 2 94 1 313 2 376 2 153 5 152 5 225 2 334 5 379 1 298 5 335 2 
152 1 358 1 107 1 371 1 346 1 81 1 
118 2 28 1 357 1 358 2 6 2 315 1 275 1 234 2 153 2 54 2 37 1 237 4 238 1 181 2 74 1 321 1 187 1 107 4 60 4 371 3 81 3 111 1 162 1 84 1 138 1 44 2 23 2 141 4 287 2 
166 2 271 1 207 1 6 1 363 1 175 1 315 1 366 1 237 1 317 2 347 1 102 1 74 1 321 1 56 3 57 1 128 2 16 1 76 3 58 2 351 1 60 1 80 2 161 1 194 1 195 1 84 1 200 1 64 1 116 1 336 1 141 1 
47 2 118 1 217 4 305 1 234 1 153 2 152 4 54 1 334 2 44 1 298 2 23 1 346 2 287 1 187 1 
243 1 36 1 115 1 
243 1 36 1 115 1 
14 1 243 1 115 1 232 1 142 1 
243 1 36 1 115 1 
243 1 115 1 282 1 
243 1 115 1 282 1 
243 1 115 1 282 1 
243 1 115 1 
320 1 117 1 
322 3 271 2 289 1 352 4 305 1 373 2 194 2 313 1 174 1 175 2 150 1 266 1 200 8 366 2 317 4 347 4 268 1 101 1 251 1 308 1 
322 2 289 1 352 3 305 1 373 2 313 1 20 1 150 1 266 1 200 6 347 3 268 1 251 1 101 1 
322 2 323 1 271 1 352 2 373 1 194 1 313 1 376 1 175 1 200 3 366 1 225 1 317 2 347 1 335 1 308 1 
322 2 230 1 352 3 132 1 373 1 313 1 376 1 200 6 225 1 319 2 347 3 335 1 165 1 308 1 
230 2 271 2 289 1 313 3 174 2 175 2 150 2 366 2 317 4 347 10 319 2 101 1 322 9 78 1 325 1 352 11 305 1 373 5 194 2 376 2 266 1 200 21 225 2 140 1 268 2 251 1 335 2 308 4 165 1 
200 1 347 1 319 1 
200 1 230 1 352 1 
322 3 323 1 271 1 352 3 373 2 194 1 94 1 313 1 376 1 175 1 200 5 366 1 225 1 317 2 347 2 335 1 308 1 
2 1 230 1 271 1 313 2 175 1 366 1 317 2 347 4 319 1 260 1 322 2 218 1 352 6 132 1 373 1 194 1 376 2 133 1 200 10 225 2 335 2 226 1 307 1 308 1 
322 2 352 3 373 1 313 1 150 1 266 1 200 6 347 3 268 1 101 1 308 1 
322 2 325 1 271 1 289 1 352 1 373 1 194 1 174 1 175 1 150 1 200 3 366 1 317 2 268 1 347 2 251 1 308 1 
322 5 2 1 271 1 352 5 373 3 194 1 374 1 313 2 175 1 150 2 200 10 266 1 366 1 317 2 268 2 347 5 101 2 308 2 
322 1 2 1 271 1 352 2 194 1 313 1 175 1 200 2 366 1 225 1 317 2 308 1 
322 2 2 1 271 1 352 2 373 1 194 1 313 1 376 1 175 1 200 3 366 1 225 1 317 2 347 1 335 1 308 1 
322 2 325 1 2 1 271 3 352 1 373 1 194 3 174 1 173 1 175 3 150 1 200 3 366 3 317 6 347 2 268 1 308 1 
91 1 2 1 271 5 230 3 289 1 293 1 313 5 174 2 173 1 295 1 175 5 150 3 366 5 317 10 347 15 319 4 101 2 322 12 323 1 325 1 352 16 132 1 305 1 373 7 194 5 376 3 266 2 200 31 225 3 268 3 251 1 335 3 165 1 308 5 
2 1 230 1 271 1 289 1 313 1 175 1 150 1 366 1 317 2 347 4 319 1 101 1 322 2 218 1 352 4 132 1 305 1 373 2 194 1 200 8 266 1 268 1 251 1 
2 1 271 2 230 1 289 1 313 2 175 2 150 1 366 2 317 4 347 5 319 2 101 1 322 3 323 1 218 1 352 6 132 1 305 1 373 2 194 2 266 1 200 11 225 1 268 1 251 1 335 1 165 1 308 1 
2 1 230 1 271 3 289 1 313 3 174 1 175 3 150 1 366 3 317 6 347 8 319 1 101 1 260 1 322 4 323 1 218 1 352 9 132 1 305 1 373 3 194 3 376 2 133 1 266 1 200 17 225 2 268 1 251 1 335 2 226 1 308 1 307 1 
2 1 230 1 271 3 289 1 313 3 174 1 175 3 150 1 366 3 317 6 347 6 319 1 101 1 260 1 322 5 323 1 218 1 352 10 132 1 305 1 373 3 194 3 376 1 133 1 266 1 200 16 225 2 268 1 251 1 335 2 226 1 307 1 308 2 
2 1 230 1 271 1 289 1 313 1 175 1 150 1 366 1 317 2 347 4 319 1 101 1 322 2 218 1 352 4 132 1 305 1 373 2 194 1 200 8 266 1 268 1 251 1 
2 1 230 1 271 1 313 2 175 1 366 1 317 2 347 4 319 1 260 1 322 2 218 1 352 6 132 1 373 1 194 1 376 2 133 1 200 10 225 2 335 2 226 1 307 1 308 1 
2 1 271 4 230 1 289 1 313 3 174 2 175 4 150 1 366 4 317 8 347 7 319 1 101 1 260 1 322 5 323 1 218 1 352 10 132 1 305 1 373 3 194 4 376 1 133 1 266 1 200 17 225 2 268 1 251 1 335 2 226 1 308 2 307 1 
2 1 271 4 230 1 313 3 173 1 174 2 175 4 366 4 317 8 347 5 319 1 260 1 322 6 218 1 352 9 132 1 373 3 194 4 376 2 133 1 200 14 225 3 335 3 226 1 308 3 307 1 
322 6 289 2 352 3 373 3 313 1 150 3 200 7 266 1 347 4 268 3 101 1 251 1 308 3 
2 1 271 4 230 1 289 1 313 3 173 1 174 2 175 4 150 1 366 4 317 8 347 7 319 1 101 1 260 1 322 4 218 1 352 10 132 1 305 1 373 3 194 4 376 1 133 1 266 1 200 17 225 2 268 1 251 1 335 2 226 1 308 1 307 1 
76 1 58 1 31 1 273 1 361 1 102 1 56 1 
58 1 76 1 146 1 340 1 31 1 361 1 273 1 170 1 169 1 102 1 127 1 56 1 
84 1 20 1 315 1 28 1 237 1 60 1 6 1 74 1 111 1 141 1 321 1 
128 1 58 1 76 2 351 1 60 1 80 1 6 1 195 1 84 1 315 1 237 1 212 1 102 1 116 1 74 1 141 1 321 1 56 2 
315 1 237 1 212 1 102 1 181 1 74 1 321 2 56 2 128 2 76 2 58 2 351 1 159 1 60 1 80 1 191 1 42 1 195 1 222 1 84 3 116 2 141 1 164 1 
4 1 315 1 237 2 212 1 102 1 181 1 74 1 321 2 56 2 278 1 128 2 76 2 58 2 351 1 159 1 60 2 80 1 191 1 42 1 222 1 84 3 116 2 141 2 164 1 
4 1 6 1 315 1 152 1 367 1 237 3 297 1 346 1 181 1 74 1 321 1 77 1 107 1 60 3 371 2 81 2 42 1 84 4 377 1 116 1 141 3 253 1 164 1 
77 1 107 1 60 3 4 1 371 2 6 1 81 2 42 1 84 4 315 1 316 1 152 1 237 3 297 1 346 1 116 1 181 1 74 1 141 3 321 1 164 1 253 1 
315 1 237 1 60 1 318 1 74 1 141 1 
17 1 79 1 60 7 6 2 131 1 221 1 84 3 96 1 315 3 247 1 224 1 237 7 248 1 306 1 126 1 318 1 116 1 74 2 141 6 321 2 67 1 
207 2 289 1 53 1 150 1 296 1 212 1 347 3 101 1 102 2 56 2 57 1 58 1 351 1 59 1 60 1 352 3 305 1 221 1 266 1 268 1 116 1 70 1 271 2 312 1 363 1 313 1 175 2 315 1 366 2 237 1 317 4 74 1 321 1 322 2 128 1 76 2 80 1 373 2 194 2 195 1 84 1 200 6 134 1 251 1 336 2 141 1 89 1 
118 1 27 1 48 1 358 1 288 1 6 1 316 1 152 1 153 1 54 2 237 1 38 1 297 1 346 1 187 2 77 1 107 2 60 1 371 3 81 3 84 2 135 1 138 1 44 2 23 2 252 1 141 1 253 1 
60 2 131 1 221 1 84 2 315 2 237 2 137 1 297 1 318 1 116 1 74 1 141 2 321 1 
28 1 60 4 4 1 231 1 6 1 111 1 221 1 84 1 315 1 237 4 74 1 141 4 321 1 
17 1 229 1 60 2 290 1 84 1 315 2 285 1 237 2 181 1 116 1 74 1 141 2 321 1 67 1 
209 1 254 1 315 1 206 1 237 1 60 1 6 1 74 1 228 1 141 1 
84 1 315 1 247 1 119 1 79 1 237 2 60 2 74 1 141 2 321 1 221 1 
28 1 79 1 60 5 231 1 6 1 111 1 221 1 84 3 315 2 224 1 237 5 126 1 181 1 74 2 141 4 321 2 
90 1 28 1 79 1 60 5 231 1 6 1 111 1 221 1 84 3 315 2 237 5 126 1 181 1 74 2 141 4 321 2 
278 1 128 1 58 1 76 2 351 1 60 1 80 1 6 1 84 1 315 1 237 1 212 1 102 1 116 1 74 1 141 1 321 1 56 2 
17 1 60 1 131 1 84 1 315 2 237 1 248 1 181 1 116 1 74 1 141 1 321 1 67 1 
223 1 242 1 236 1 102 1 51 1 
215 1 48 1 242 2 77 1 159 1 371 2 191 1 81 2 281 1 51 2 329 1 222 1 223 1 124 1 152 1 236 2 98 1 346 1 102 1 
223 1 331 1 242 1 76 1 58 1 267 1 61 1 51 1 56 1 
223 1 98 1 281 1 
20 1 69 1 156 1 280 1 
199 1 69 1 156 1 249 1 280 1 183 1 11 1 
375 1 190 1 183 1 
106 1 219 1 69 1 280 1 353 1 199 1 156 1 99 2 249 3 183 3 184 1 11 1 
349 1 199 1 69 1 156 1 249 2 280 1 183 2 168 1 11 1 
209 1 199 1 235 1 219 1 206 1 156 1 63 1 249 1 3 1 183 1 11 1 
199 1 219 1 156 1 249 1 280 1 183 1 11 1 
199 1 69 1 219 1 249 1 280 2 183 1 11 1 
219 1 263 1 108 1 280 1 199 2 156 1 249 2 183 2 143 1 11 2 
69 1 219 1 341 1 147 1 280 1 168 2 199 1 156 2 249 3 63 1 8 1 183 3 11 1 
69 1 219 1 206 2 3 1 304 1 280 1 83 1 168 1 209 1 199 1 156 1 249 2 183 2 228 1 11 1 
349 1 69 1 219 1 280 1 168 2 199 2 155 1 156 2 249 4 63 1 8 1 183 4 11 2 
199 1 69 1 219 1 156 1 249 1 280 1 183 1 11 1 
106 1 69 2 280 2 168 2 199 1 99 1 156 3 249 4 63 1 8 1 184 1 183 4 300 1 11 1 
219 1 69 1 280 1 168 1 365 1 176 1 199 1 156 1 179 1 249 2 183 2 11 1 
106 1 219 1 69 1 280 1 93 1 199 1 156 1 99 2 249 3 183 3 184 2 11 1 
156 2 45 2 33 1 355 1 
199 1 219 1 249 1 327 1 183 1 11 1 
199 1 69 1 219 1 156 1 249 2 147 1 280 1 183 2 168 1 11 1 
210 1 
199 1 69 1 219 1 156 1 249 1 280 1 183 1 11 1 
199 1 69 1 219 1 156 1 99 1 249 3 147 1 280 1 183 3 168 1 11 1 
156 1 63 1 8 1 300 1 
156 1 280 1 

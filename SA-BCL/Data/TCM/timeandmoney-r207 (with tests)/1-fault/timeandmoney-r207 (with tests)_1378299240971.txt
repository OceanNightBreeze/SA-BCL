#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 348 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 1 237 9 31 1 114 2 137 1 5 2 97 1 345 9 317 1 215 1 35 2 365 1 241 2 82 2 265 1 264 1 126 1 39 1 332 4 194 5 196 1 127 2 251 2 252 6 71 1 94 1 111 1 231 3 
358 1 237 9 31 1 114 2 137 1 5 2 97 1 345 9 317 1 215 1 35 2 365 1 82 2 241 2 265 1 264 1 126 1 39 1 332 4 194 5 196 1 127 2 251 2 252 6 71 1 94 1 111 1 231 3 
358 1 237 10 31 1 114 2 137 1 5 2 97 1 345 10 317 1 215 1 35 2 365 1 82 2 241 2 265 1 264 1 126 1 39 1 332 5 194 6 196 1 127 2 251 2 252 7 71 1 94 1 111 1 231 4 
358 1 237 7 31 1 114 2 5 2 97 1 345 7 317 1 215 1 35 2 365 1 82 2 241 1 265 1 264 1 126 1 39 1 332 3 194 4 196 1 127 2 251 2 252 4 71 1 94 1 111 1 231 2 
264 1 39 1 237 4 114 1 137 1 5 1 332 2 194 3 196 1 345 4 251 1 252 3 35 1 365 1 82 1 241 2 71 1 231 1 
126 1 39 1 237 2 114 1 5 1 194 1 196 1 345 2 127 1 257 1 251 1 363 1 365 1 94 1 82 1 83 1 
39 1 237 3 114 2 332 1 194 2 196 1 345 3 127 1 251 2 252 1 365 1 111 1 231 1 
358 1 237 9 31 1 114 2 5 1 137 1 345 9 292 1 35 1 365 1 241 2 82 1 264 1 39 1 332 4 194 5 196 1 127 1 251 2 252 7 172 1 71 1 111 1 231 3 
358 1 237 9 31 1 114 2 5 1 137 1 345 9 292 1 35 1 365 1 241 2 82 1 264 1 39 1 332 4 194 5 196 1 127 1 251 2 252 7 172 1 71 1 111 1 231 3 
303 1 309 1 232 1 
303 1 301 1 124 2 
184 2 375 2 208 1 34 1 192 2 323 2 76 2 173 2 
340 1 208 1 209 1 49 1 282 1 313 1 76 2 286 1 98 1 213 2 184 3 320 1 118 2 34 1 323 2 295 1 160 1 125 2 146 1 349 1 38 1 37 1 58 1 191 1 192 2 331 1 19 1 198 1 372 1 375 3 154 1 23 2 307 1 338 1 173 2 381 1 176 2 
233 1 184 1 375 1 208 1 192 1 217 1 323 1 76 1 308 1 173 1 
73 1 359 1 64 1 258 1 303 1 375 1 184 1 8 1 110 1 217 1 323 1 70 1 174 1 309 1 
73 1 359 1 192 1 76 1 64 2 258 1 303 1 375 1 184 1 8 2 217 1 323 1 70 1 173 1 309 1 
8 1 109 1 202 1 9 1 64 1 
303 1 8 2 109 1 48 1 9 1 342 1 64 2 309 1 
8 1 109 1 64 1 
233 1 208 1 192 1 76 1 64 1 8 1 375 1 184 1 9 1 217 1 275 1 308 1 323 1 173 1 
303 1 
303 1 8 2 109 1 48 1 9 1 64 2 309 1 65 1 
190 1 220 1 242 1 48 1 157 1 87 2 17 1 270 1 64 5 335 2 303 1 8 5 362 1 91 2 109 2 9 2 276 1 309 1 218 1 
349 1 38 1 37 1 209 1 49 1 191 1 282 1 192 1 32 1 76 1 213 1 375 2 184 2 168 1 118 1 307 1 293 1 323 1 338 1 176 1 
34 1 232 1 
14 1 192 1 76 1 375 2 184 2 34 2 323 2 173 1 84 1 
32 1 219 1 175 1 
349 1 38 1 37 1 209 1 49 1 191 1 282 1 213 1 152 1 184 1 375 1 118 1 34 1 307 1 338 1 176 1 
184 3 375 3 168 1 34 1 192 3 323 3 76 3 173 1 
233 1 184 1 375 1 192 1 217 1 323 1 76 1 
184 1 375 1 14 1 192 1 217 1 323 1 76 1 173 1 84 1 
73 1 209 1 208 1 49 1 282 1 359 1 180 1 76 3 98 1 213 1 258 1 184 4 8 1 320 1 118 1 34 1 217 1 323 3 293 1 160 1 347 1 125 1 84 1 146 1 349 1 38 1 37 1 58 1 191 1 192 3 331 1 64 1 198 1 372 1 375 4 154 1 168 1 23 2 307 1 70 1 338 1 173 2 381 1 176 1 
287 1 184 2 375 2 168 1 34 1 192 1 323 2 76 1 174 1 
73 1 1 1 359 1 192 3 180 1 76 3 64 1 258 1 303 1 8 1 375 3 184 3 168 2 217 1 293 1 323 3 70 1 173 1 84 1 
192 2 32 1 76 2 375 2 184 2 168 1 323 2 173 1 219 1 84 1 
349 1 37 1 38 1 209 1 49 1 191 1 282 1 213 1 184 1 375 1 118 1 34 1 307 1 338 1 176 1 
349 1 37 1 38 1 357 1 191 1 282 1 255 1 213 1 184 1 375 1 118 1 34 1 307 1 338 1 176 1 
29 1 32 2 182 1 320 1 160 2 219 2 125 4 146 1 58 1 224 1 351 1 19 2 197 1 198 1 372 1 154 1 170 1 23 2 45 1 24 1 25 1 355 1 175 2 278 1 
184 1 375 1 73 1 192 1 217 1 323 1 76 1 164 1 
206 1 235 1 192 4 76 4 287 1 375 5 184 5 168 2 34 1 323 5 293 1 173 1 174 1 84 1 
233 1 184 2 375 2 192 2 217 1 323 2 76 2 164 1 
259 1 377 1 
259 1 377 1 
80 1 148 1 
80 1 148 1 
80 1 148 1 
259 1 86 1 377 1 
259 1 86 1 377 1 
259 1 253 1 377 1 
259 2 80 1 148 1 326 1 377 2 277 1 
259 1 86 1 377 1 
102 1 259 1 377 1 
102 1 259 1 377 1 
102 1 259 1 377 1 
369 2 147 2 210 2 268 1 88 1 64 2 106 1 373 1 199 1 303 1 259 2 8 2 346 1 377 2 216 1 277 1 156 2 133 3 112 2 
207 1 253 1 76 2 212 1 181 1 259 1 8 1 184 2 34 1 323 2 147 1 369 1 328 1 192 2 247 1 88 1 64 1 374 1 375 2 377 1 133 1 156 1 379 1 112 1 
5 1 35 1 82 1 
5 1 82 1 83 1 
162 1 74 1 246 1 35 2 82 3 83 1 
162 1 246 1 35 1 82 2 26 1 83 1 
162 2 246 1 35 1 82 2 83 1 
29 1 207 1 72 2 48 1 33 2 139 2 99 1 182 1 8 5 362 3 9 4 364 1 124 3 242 1 87 1 270 2 247 1 301 1 64 5 197 1 374 1 153 1 335 1 20 1 42 1 303 2 91 1 109 1 354 1 132 1 24 1 309 1 
29 3 205 1 72 6 157 1 48 1 179 1 139 6 99 2 182 3 8 9 362 8 9 7 124 9 242 1 87 2 270 6 247 4 89 1 301 3 64 9 129 1 197 3 249 1 250 1 153 3 335 2 20 2 303 5 91 2 109 6 202 5 274 5 132 1 24 3 309 1 
29 1 72 2 157 1 33 1 139 2 99 1 182 1 8 3 362 3 9 2 364 1 124 4 87 1 270 2 247 1 301 2 64 3 197 1 335 1 20 1 153 1 303 3 91 1 354 1 24 1 309 1 
29 2 72 4 157 1 179 1 33 2 139 4 99 1 182 2 8 4 362 5 9 3 364 1 124 7 87 1 270 4 247 2 89 1 301 3 64 4 197 2 129 1 335 1 20 1 153 2 303 4 91 1 354 1 24 2 309 1 
38 1 229 1 232 1 
38 1 122 1 
315 1 
349 1 38 1 
279 1 349 1 38 3 79 1 229 2 282 1 
349 1 38 1 282 1 
368 1 38 1 
245 1 115 1 66 2 19 4 182 1 271 1 201 1 376 1 92 1 353 1 291 1 45 2 24 1 355 3 160 3 125 7 177 1 
245 1 115 1 66 2 19 4 182 1 271 1 201 1 376 1 92 1 353 1 291 1 45 2 24 1 355 3 160 3 125 7 177 1 
245 1 115 1 66 2 19 4 182 1 271 1 201 1 376 1 92 1 353 1 291 1 45 2 24 1 355 3 160 3 123 1 177 1 125 7 
29 3 283 1 115 2 214 1 182 4 319 1 291 1 12 1 160 15 125 31 146 1 297 3 325 1 245 2 58 1 195 1 198 1 19 16 66 3 197 3 372 1 153 3 271 2 201 2 304 1 376 5 92 1 353 1 378 4 23 2 45 5 24 4 355 10 177 1 
115 1 182 1 262 1 160 4 125 9 146 2 58 2 245 1 195 1 198 2 19 5 66 2 372 2 271 1 201 1 376 1 353 1 92 1 23 4 45 3 24 1 230 1 355 4 177 1 
96 1 74 1 237 2 136 1 114 1 5 1 341 1 213 1 345 2 361 1 118 1 35 1 365 1 263 1 82 2 83 1 37 1 267 1 59 1 39 1 191 1 194 1 196 1 127 1 128 1 251 1 108 1 252 1 134 1 176 1 
310 1 74 1 96 1 237 3 136 1 114 1 5 1 341 1 213 1 345 3 361 1 118 1 35 1 365 1 263 1 82 2 83 1 37 1 267 1 59 1 191 1 371 1 194 1 196 1 127 1 128 1 251 1 167 1 252 2 176 1 
310 1 96 1 74 1 237 2 136 1 341 1 5 1 213 1 345 2 361 1 118 1 35 1 365 1 263 1 82 2 83 1 37 1 59 1 191 1 194 1 196 1 127 1 167 1 252 2 176 1 
237 1 136 2 114 1 341 2 52 1 213 1 345 1 7 1 118 1 263 2 56 1 349 1 38 1 37 1 191 1 300 1 371 1 127 2 251 1 305 1 306 1 338 1 176 1 
310 1 96 1 74 1 237 1 136 1 114 1 5 1 341 1 213 1 345 1 361 1 118 1 35 1 263 1 82 2 83 1 37 1 267 1 59 1 39 1 191 1 127 1 128 1 251 1 108 1 176 1 
4 1 
2 2 48 3 236 4 178 1 344 1 7 1 8 5 184 1 290 1 185 2 55 2 349 1 242 1 191 1 350 2 301 2 62 1 248 1 64 5 18 1 67 1 20 1 303 2 305 1 109 6 155 2 110 1 70 1 356 1 309 1 73 1 359 1 316 1 213 2 256 2 258 1 362 2 118 2 261 1 217 1 159 1 323 1 124 2 38 1 37 1 327 1 87 1 270 2 226 2 335 1 375 1 91 1 338 2 174 1 176 2 
73 1 236 2 2 1 48 1 359 1 316 1 258 1 184 1 8 3 290 1 261 1 217 1 323 1 64 3 18 1 65 1 375 1 109 2 110 1 70 1 174 1 356 1 
73 1 236 3 48 1 359 1 316 1 256 1 258 1 184 1 8 3 290 1 261 1 217 1 323 1 64 3 18 1 65 1 375 1 303 1 109 1 110 1 70 1 174 1 356 1 309 1 
73 1 48 1 236 3 2 1 359 1 316 1 256 1 258 1 184 1 8 3 290 1 261 1 217 1 323 1 64 3 18 1 65 1 375 1 303 1 109 2 155 1 110 1 70 1 174 1 356 1 309 1 
2 4 236 6 48 3 184 1 8 5 290 1 185 2 10 1 55 2 242 1 350 2 62 1 301 2 151 1 64 5 18 1 65 1 303 5 109 7 155 4 110 1 70 1 356 1 309 5 73 1 359 1 254 1 316 1 256 4 258 1 362 1 261 1 217 1 323 1 222 1 327 1 87 1 269 1 270 1 226 2 335 1 375 1 91 1 174 1 
236 4 48 2 2 2 344 1 184 1 8 4 290 1 185 2 55 2 242 1 350 2 62 1 301 2 64 4 18 1 303 2 109 4 155 2 110 1 70 1 356 1 309 1 73 1 359 1 316 1 256 2 258 1 362 1 261 1 217 1 323 1 124 2 327 1 87 1 270 1 226 2 335 1 375 1 91 1 174 1 
73 1 2 2 48 2 236 4 359 1 254 1 316 1 256 2 258 1 184 1 8 4 362 1 290 1 185 2 55 2 261 1 217 1 323 1 222 1 242 1 327 1 87 1 269 1 350 2 270 1 301 2 62 1 64 4 226 2 18 1 335 1 303 1 375 1 91 1 109 4 155 2 110 1 70 1 174 1 356 1 309 1 
73 1 2 2 48 2 236 4 359 1 254 1 316 1 256 2 258 1 184 1 8 4 362 1 290 1 185 2 55 2 261 1 217 1 323 1 222 1 242 1 327 1 87 1 269 1 350 2 270 1 301 2 62 1 64 4 226 2 18 1 335 1 303 1 375 1 91 1 109 4 155 2 110 1 70 1 174 1 356 1 309 1 
73 1 46 1 2 2 48 2 236 4 135 1 75 2 359 1 316 1 256 2 258 1 184 1 8 4 362 1 290 1 185 2 120 2 261 1 217 1 323 1 124 2 222 1 242 1 87 1 350 2 270 1 62 1 64 4 18 1 335 1 303 1 375 1 91 1 109 4 155 2 93 1 110 1 70 1 174 1 356 1 309 1 
73 1 48 2 236 5 2 3 359 1 254 1 316 1 256 3 258 1 184 1 8 4 362 1 290 1 185 2 10 1 55 2 261 1 217 1 323 1 222 1 242 1 327 1 87 1 269 1 350 2 270 1 301 2 62 1 64 4 226 2 18 1 335 1 303 1 375 1 91 1 109 5 155 3 110 1 70 1 174 1 356 1 309 1 
73 1 48 2 236 5 2 3 359 1 254 1 316 1 256 3 258 1 184 1 8 4 362 1 290 1 185 2 10 1 55 2 261 1 217 1 323 1 222 1 242 1 327 1 87 1 269 1 350 2 270 1 301 2 62 1 64 4 226 2 18 1 335 1 303 1 375 1 91 1 109 5 155 3 110 1 70 1 174 1 356 1 309 1 
46 1 236 4 48 2 2 2 344 1 184 1 8 4 290 1 185 2 242 1 350 2 62 1 64 4 18 1 303 1 109 4 155 2 110 1 70 1 356 1 309 1 73 1 359 1 75 2 316 1 256 2 258 1 362 1 261 1 120 2 217 1 323 1 124 2 87 1 270 1 335 1 375 1 91 1 174 1 
32 1 182 1 320 1 34 2 219 1 160 3 125 6 146 1 58 1 224 1 198 1 19 3 66 1 372 1 271 1 201 1 154 1 353 1 92 1 23 2 45 2 24 1 355 2 232 1 175 1 177 1 
29 2 95 1 238 1 32 11 286 1 77 1 182 1 320 1 34 1 160 6 219 4 125 14 146 2 297 3 325 1 58 2 105 1 198 2 19 8 197 1 372 2 153 2 376 1 154 2 304 1 169 1 378 3 23 4 45 1 24 2 381 1 355 2 175 11 
209 1 49 1 282 1 314 1 238 1 76 1 286 1 213 1 184 2 320 1 118 1 34 1 323 1 293 1 219 1 160 1 125 2 146 1 349 1 38 1 37 1 58 1 191 1 192 1 329 1 152 1 198 1 19 1 372 1 375 2 273 1 154 1 168 1 23 2 307 1 338 1 381 1 176 1 
49 2 282 2 238 1 286 1 98 2 182 3 184 3 143 2 293 1 145 2 146 3 349 2 298 1 58 3 191 2 192 1 66 1 198 3 19 10 197 2 302 2 153 2 201 1 154 3 353 1 22 2 23 6 307 2 24 3 355 8 310 1 29 2 209 2 211 1 32 7 76 1 213 3 320 3 118 3 34 2 323 1 160 10 219 7 125 20 37 2 38 2 90 1 372 3 271 1 375 3 376 4 168 1 92 1 45 4 338 1 381 1 176 3 175 7 177 1 
310 1 281 1 280 1 76 1 286 1 213 8 7 1 184 1 320 2 118 7 187 1 323 1 36 1 295 2 160 1 125 2 146 2 349 2 37 2 38 3 58 2 191 2 192 1 224 1 198 2 19 1 372 2 375 1 154 2 305 1 168 1 21 1 23 4 131 1 337 1 338 2 134 1 381 1 176 8 
29 1 32 1 238 1 76 1 51 1 182 1 184 1 320 1 323 1 219 1 160 2 84 1 125 3 146 1 58 1 192 1 198 1 19 1 197 1 372 1 153 1 375 1 154 1 23 2 45 1 24 1 173 1 355 1 175 1 
146 1 29 1 58 1 32 1 224 1 351 1 198 1 19 2 372 1 376 1 154 1 320 1 23 2 24 1 355 1 219 1 175 1 125 2 
146 1 58 1 32 1 224 1 198 1 197 1 372 1 182 1 154 1 320 1 170 1 23 2 45 1 355 1 219 1 175 1 160 2 125 2 
29 1 32 2 182 1 320 1 219 2 160 2 125 4 146 1 58 1 224 1 19 2 198 1 197 1 153 1 372 1 154 1 376 1 23 2 45 1 24 1 355 2 175 2 
146 1 29 1 280 1 58 1 32 1 351 1 198 1 19 2 372 1 376 1 154 1 320 1 23 2 24 1 355 1 219 1 175 1 125 2 
146 1 280 1 58 1 32 1 198 1 197 1 372 1 182 1 154 1 320 1 170 1 23 2 45 1 355 1 219 1 175 1 160 2 125 2 
29 1 280 1 32 2 182 1 320 1 219 2 160 2 125 4 146 1 58 1 19 2 198 1 197 1 153 1 372 1 154 1 376 1 23 2 45 1 24 1 355 2 175 2 
29 1 32 2 182 1 320 1 219 2 160 2 125 4 146 1 58 1 19 2 198 1 197 1 153 1 372 1 154 1 376 1 23 2 45 1 24 1 355 2 175 2 
209 1 49 1 282 1 286 1 98 1 213 1 184 1 320 1 118 1 34 1 160 1 125 2 146 1 349 1 37 1 38 1 58 1 191 1 19 1 198 1 372 1 375 1 154 1 23 2 307 1 338 1 381 1 176 1 
357 1 282 1 255 1 286 1 213 1 184 1 320 1 118 1 34 1 160 1 125 2 146 1 349 1 161 1 37 1 38 1 58 1 191 1 19 1 198 1 372 1 375 1 154 1 23 2 307 1 338 1 381 1 176 1 
29 1 238 1 32 2 182 1 320 1 219 2 160 2 125 4 146 1 58 1 19 2 198 1 197 1 153 1 372 1 154 1 376 1 23 2 45 1 24 1 355 2 175 2 
29 1 209 1 49 1 282 1 32 2 98 1 213 1 182 1 184 1 320 1 118 1 160 2 219 2 125 4 146 1 349 1 37 1 38 1 58 1 191 1 197 1 19 2 198 1 302 1 372 1 153 1 375 1 376 1 154 1 23 2 45 1 24 1 307 1 134 1 355 2 175 2 176 1 
29 1 238 1 32 1 76 1 182 1 184 1 320 1 323 1 57 1 160 1 219 1 84 1 125 3 146 1 58 1 192 1 197 1 198 1 19 2 372 1 153 1 375 1 376 1 154 1 23 2 24 1 173 1 355 1 175 1 
29 3 78 2 183 1 182 3 81 1 366 2 160 10 125 19 146 2 297 1 325 1 58 2 16 1 333 1 198 2 19 9 197 3 372 2 153 3 107 1 304 1 376 3 378 2 203 1 23 4 45 3 24 3 380 1 230 1 355 6 
29 3 343 1 78 1 182 2 81 2 188 1 366 4 160 12 189 1 125 26 146 3 297 2 58 3 325 2 16 1 223 1 333 2 195 2 198 3 19 14 197 2 227 1 372 3 153 3 376 2 378 2 203 1 23 6 45 2 24 3 380 1 230 1 355 4 28 1 
29 4 3 1 343 1 78 1 182 5 81 1 188 1 366 4 189 1 160 21 125 41 146 3 297 3 325 3 58 3 16 1 223 1 333 2 195 1 66 1 198 3 19 20 197 4 227 1 372 3 153 4 271 1 107 1 201 1 304 1 376 4 92 1 353 1 378 4 203 1 23 6 45 4 24 5 380 1 230 1 355 8 177 1 28 1 
29 4 3 1 343 1 78 1 182 4 81 1 188 1 366 4 189 1 160 18 125 38 146 4 297 3 325 3 58 4 16 1 223 1 333 2 195 2 66 1 198 4 19 20 197 3 227 1 372 4 153 4 271 1 107 1 201 1 304 1 376 3 92 1 353 1 378 4 203 1 23 8 45 4 24 5 380 1 230 1 355 7 177 1 28 1 
29 7 343 1 78 1 182 8 81 1 188 1 366 4 189 1 160 25 125 52 146 2 297 4 325 2 58 2 16 1 223 1 333 1 195 1 66 1 198 2 19 27 197 7 227 1 372 2 153 7 271 1 201 1 304 2 376 7 92 1 353 1 169 2 378 4 203 1 23 4 45 7 24 8 380 1 230 1 355 14 177 1 28 1 
147 1 259 1 369 1 268 1 104 1 377 1 277 1 156 1 106 1 112 1 
253 1 328 1 
296 1 147 1 259 1 369 1 377 1 156 1 165 1 27 1 112 1 
369 1 147 1 210 1 268 1 88 1 64 1 106 1 373 1 303 1 8 1 259 1 346 1 377 1 216 1 277 1 156 1 133 2 112 1 
369 1 147 1 210 1 268 1 88 1 64 1 106 1 373 1 303 1 8 1 259 1 346 1 377 1 216 1 277 1 156 1 133 2 112 1 
369 1 147 1 210 1 268 1 88 1 64 1 106 1 373 1 303 1 8 1 259 1 346 1 377 1 216 1 277 1 156 1 133 2 112 1 
326 1 244 1 86 1 
326 1 244 1 86 1 
102 1 141 1 
102 1 141 1 326 1 
181 1 212 1 
207 1 253 1 210 1 212 1 76 2 158 1 181 1 184 2 8 1 259 1 34 1 9 1 323 2 147 1 369 1 328 1 192 2 247 1 64 1 373 1 374 1 375 2 377 1 156 1 133 1 379 1 112 1 
244 1 86 1 
102 1 141 1 326 1 
238 1 286 1 213 2 184 2 186 1 320 1 144 1 118 2 323 2 36 1 295 2 160 1 125 2 146 1 349 1 37 1 38 1 243 1 85 1 58 1 191 1 198 1 19 1 372 1 375 2 154 1 166 1 23 2 337 1 381 1 176 2 
234 1 310 1 37 1 74 1 96 1 191 1 5 1 50 1 6 1 213 2 128 1 361 1 118 2 35 1 263 1 82 2 134 1 83 1 176 2 
234 1 310 1 15 1 37 1 74 1 96 1 191 1 5 1 213 1 128 1 361 1 118 1 35 1 263 1 82 2 83 1 176 1 
349 1 37 1 38 1 149 1 191 1 6 1 213 1 7 1 305 1 118 1 306 1 338 1 263 1 176 1 
234 1 310 1 37 1 74 1 96 1 191 1 5 1 50 1 6 1 213 1 128 1 361 1 118 1 35 1 263 1 82 2 83 1 176 1 
63 1 
190 1 220 1 303 1 362 1 270 1 309 1 232 1 
48 1 8 1 362 1 55 1 124 1 242 1 327 1 87 1 270 1 301 1 64 1 226 1 335 1 303 2 91 1 109 1 309 1 
279 1 0 2 48 3 178 1 282 3 284 2 139 6 53 2 182 2 8 5 239 1 143 2 11 2 190 1 349 3 242 4 191 4 301 6 64 5 197 2 20 2 153 2 303 8 109 5 204 2 24 2 309 2 29 2 72 6 359 2 360 1 213 3 362 9 118 3 119 2 122 3 367 1 124 12 220 1 368 2 37 3 38 10 87 4 370 2 270 8 335 4 272 2 91 4 43 1 229 2 171 1 338 1 134 1 176 3 
29 2 72 5 48 1 178 1 138 1 343 1 139 5 182 2 8 1 362 8 188 1 11 2 124 6 189 1 297 1 242 2 325 1 87 2 223 1 270 5 163 1 301 3 64 1 197 2 20 1 227 1 335 2 153 2 303 5 91 2 109 1 378 1 204 1 24 2 309 2 
233 1 208 1 254 1 76 1 182 1 184 1 8 1 362 2 117 1 217 1 323 1 11 2 242 1 87 1 192 1 270 2 64 1 335 1 375 1 271 1 201 1 91 1 92 1 204 1 24 2 275 1 308 1 173 1 
220 1 190 1 242 1 87 1 270 1 335 1 303 1 91 1 362 1 309 1 
29 2 72 5 270 5 301 5 139 5 197 2 153 2 182 2 303 5 362 5 143 1 204 1 24 2 11 2 124 10 
303 1 8 1 109 1 48 1 64 1 309 1 
157 1 48 2 113 1 178 2 213 4 7 1 8 3 362 2 239 2 142 1 118 4 159 1 367 1 349 1 37 1 38 1 242 1 191 1 87 2 270 2 64 3 67 1 335 2 20 2 91 2 305 1 109 4 338 2 176 4 
208 1 209 1 49 1 282 1 76 2 98 1 213 1 184 3 320 1 118 1 34 1 323 2 160 1 125 1 146 1 349 1 37 1 38 1 58 1 191 1 192 2 331 1 198 1 372 1 375 3 154 1 23 2 307 1 338 1 173 2 381 1 176 1 
72 2 242 1 87 1 178 1 270 2 301 2 139 2 66 1 335 1 20 1 303 4 91 1 362 1 124 4 309 2 
312 1 147 1 156 1 
312 1 147 1 156 1 
147 1 30 1 212 1 156 1 106 1 
312 1 147 1 156 1 
147 1 285 1 156 1 
147 1 285 1 156 1 
147 1 285 1 156 1 
147 1 156 1 
259 1 377 1 
146 2 58 2 195 1 66 1 19 4 198 2 182 1 372 2 271 1 201 1 376 1 92 1 353 1 23 4 45 2 24 1 355 3 160 4 125 8 177 1 
66 1 19 3 182 1 271 1 201 1 353 1 92 1 45 2 24 1 355 2 160 3 232 1 177 1 125 6 
146 1 29 1 58 1 197 1 198 1 19 2 182 1 372 1 153 1 288 1 376 1 23 2 45 1 24 1 355 2 160 2 125 4 
297 1 29 1 325 1 197 1 19 3 182 1 153 1 304 1 376 1 378 2 45 1 24 1 355 2 160 4 125 7 
29 2 140 1 182 3 160 12 125 23 297 2 146 2 58 2 105 1 195 2 66 1 19 11 197 2 198 2 153 2 372 2 271 2 201 2 376 4 304 1 92 1 353 1 378 2 169 1 23 4 45 5 24 3 355 9 177 1 
378 1 160 1 125 1 
297 1 125 1 19 1 
146 1 29 1 58 1 198 1 19 3 197 1 372 1 153 1 182 1 288 1 376 1 143 1 23 2 45 2 24 1 355 3 160 3 125 6 
29 2 343 1 182 2 188 1 160 6 189 1 125 12 297 1 146 1 325 1 58 1 223 1 198 1 19 6 197 2 372 1 153 2 227 1 376 1 378 1 23 2 45 1 24 2 230 1 355 2 
19 3 182 1 271 1 201 1 376 1 92 1 45 1 24 1 355 2 160 3 125 6 
146 1 58 1 195 1 19 1 140 1 198 1 372 1 271 1 201 1 376 1 353 1 23 2 45 1 355 2 160 2 177 1 125 3 
146 1 58 1 198 1 19 5 372 1 182 2 271 2 201 2 376 2 117 1 92 1 23 2 45 3 24 2 230 1 355 5 160 5 125 10 
146 1 29 1 58 1 198 1 19 2 372 1 376 1 23 2 24 1 230 1 355 1 125 2 
146 1 29 1 58 1 197 1 198 1 19 2 182 1 372 1 153 1 376 1 23 2 45 1 24 1 230 1 355 2 160 2 125 4 
146 3 58 3 195 1 140 1 198 3 19 1 372 3 271 1 107 1 201 1 376 1 23 6 45 1 230 1 355 2 160 2 125 3 
29 3 140 1 214 1 182 5 288 1 319 1 12 1 160 18 125 34 146 5 297 3 325 1 58 5 195 2 66 1 198 5 19 16 197 3 372 5 153 3 271 3 201 3 107 1 304 1 376 5 92 2 353 1 378 4 23 10 45 7 24 5 230 1 355 12 177 1 
343 1 182 1 160 4 125 8 297 1 146 1 325 1 58 1 66 1 198 1 19 4 372 1 271 1 201 1 378 1 353 1 92 1 23 2 45 2 24 1 230 1 355 2 177 1 
29 1 343 1 182 1 288 1 160 5 125 11 146 2 297 1 325 1 58 2 66 1 198 2 19 6 372 2 153 1 271 1 201 1 304 1 376 1 92 1 353 1 378 2 23 4 45 2 24 2 230 1 355 3 177 1 
29 2 343 1 182 3 288 1 188 1 160 10 189 1 125 19 297 1 146 3 325 1 58 3 223 1 195 1 66 1 198 3 19 9 197 2 372 3 153 2 227 1 271 1 201 1 376 1 92 1 353 1 378 1 23 6 45 3 24 3 230 1 355 4 177 1 
29 2 343 1 182 2 288 1 188 1 160 7 189 1 125 17 297 1 146 3 325 1 58 3 223 1 195 1 66 1 198 3 19 10 197 1 372 3 153 2 227 1 271 1 201 1 376 2 92 1 353 1 378 1 23 6 45 3 24 3 230 1 355 5 177 1 
343 1 182 1 160 4 125 8 297 1 146 1 325 1 58 1 66 1 198 1 19 4 372 1 271 1 201 1 378 1 353 1 92 1 23 2 45 2 24 1 230 1 355 2 177 1 
29 2 343 1 182 2 188 1 160 6 189 1 125 12 297 1 146 1 325 1 58 1 223 1 198 1 19 6 197 2 372 1 153 2 227 1 376 1 378 1 23 2 45 1 24 2 230 1 355 2 
29 2 343 1 182 2 288 1 188 1 160 8 189 1 125 18 146 4 297 1 325 1 58 4 223 1 195 2 66 1 198 4 19 10 197 1 227 1 372 4 153 2 271 1 201 1 376 2 92 1 353 1 378 1 23 8 45 3 24 3 230 1 355 5 177 1 
29 3 343 1 182 2 188 1 160 7 189 1 125 16 146 4 297 1 325 1 58 4 223 1 195 2 198 4 19 9 197 2 227 1 372 4 153 3 107 1 376 3 378 1 23 8 45 3 24 3 230 1 355 6 
19 3 182 1 271 3 201 3 376 3 353 1 92 1 45 3 24 1 355 6 160 4 125 7 177 2 
29 2 343 1 182 2 188 1 160 8 189 1 125 18 146 4 297 1 325 1 58 4 223 1 195 2 66 1 198 4 19 10 197 1 227 1 372 4 153 2 271 1 201 1 107 1 376 1 92 1 353 1 378 1 23 8 45 3 24 3 230 1 355 4 177 1 
184 1 375 1 287 1 34 1 323 1 174 1 41 1 
311 1 324 1 41 1 287 1 375 1 184 1 318 1 34 1 130 1 323 1 294 1 174 1 
349 1 37 1 38 1 305 1 191 1 118 1 338 1 213 1 232 1 176 1 7 1 
349 1 38 1 37 1 209 1 191 1 282 1 192 1 76 1 213 1 375 2 184 2 168 1 118 1 34 1 307 1 323 1 338 1 176 1 
368 1 0 1 349 2 73 1 38 3 37 1 209 1 191 1 282 2 192 2 76 1 213 1 375 2 184 2 168 1 239 1 118 1 34 1 217 1 70 1 307 1 323 2 176 1 
0 1 73 1 282 2 255 1 76 1 213 2 184 2 239 1 240 1 118 2 34 1 217 1 323 2 368 1 349 2 37 1 38 3 191 1 192 2 375 2 168 1 307 1 70 1 176 2 
0 1 282 1 359 1 213 3 289 1 8 2 239 1 240 1 118 3 100 1 122 1 368 1 349 1 37 1 38 4 191 1 64 2 303 1 109 1 229 1 338 1 176 3 309 1 
368 1 349 1 0 1 38 4 37 1 191 1 359 1 282 1 213 3 64 2 303 1 8 2 239 1 109 1 229 1 240 1 118 3 119 1 338 1 122 1 309 1 176 3 
37 1 191 1 118 1 131 1 213 1 176 1 
279 1 310 1 349 2 281 1 38 3 37 2 191 3 282 1 213 7 200 1 21 1 118 6 44 1 187 1 69 1 131 1 337 1 338 2 134 1 295 1 176 7 
49 1 282 1 238 1 98 1 182 1 184 2 145 1 146 2 349 1 243 1 58 2 191 1 192 1 198 2 19 3 66 1 302 1 201 1 154 2 353 1 23 4 307 1 24 1 355 2 209 1 32 1 76 1 213 1 320 2 118 1 34 2 323 1 219 1 160 3 125 6 37 1 38 1 372 2 375 2 271 1 168 1 92 1 45 2 134 1 176 1 175 1 177 1 
48 1 359 1 284 1 213 1 8 3 362 1 118 1 9 1 119 1 122 1 367 1 190 1 220 1 242 2 38 2 87 2 370 1 270 1 64 3 335 2 303 1 91 2 272 1 109 2 229 1 338 1 309 1 176 1 
279 1 349 1 38 2 37 1 191 2 282 1 213 2 43 1 229 1 118 2 131 1 134 1 176 2 
349 1 38 1 37 1 191 1 213 4 7 1 305 1 240 1 118 4 336 1 338 1 134 1 176 4 
349 1 38 1 37 1 298 1 191 2 282 1 225 1 213 2 228 1 200 1 239 1 118 2 69 1 176 2 
37 1 96 1 191 1 118 1 5 1 338 1 82 1 213 1 83 1 176 1 
310 1 349 1 38 1 37 1 191 1 213 2 118 2 144 1 337 1 134 1 176 2 
349 2 38 3 37 2 191 2 213 5 7 1 305 1 239 1 21 1 118 4 336 1 187 1 337 1 338 1 134 1 176 5 
349 2 38 3 37 2 191 2 213 5 7 1 305 1 239 1 118 4 336 1 187 1 121 1 337 1 338 1 134 1 176 5 
349 1 38 1 37 1 191 1 282 1 192 1 255 1 76 1 213 1 375 2 184 2 168 1 118 1 34 1 307 1 323 1 338 1 176 1 
279 1 349 1 38 1 37 1 191 2 282 1 213 1 200 1 239 1 118 1 44 1 69 1 176 1 
116 1 184 1 375 1 85 1 166 1 186 1 323 1 60 1 334 1 
258 1 116 1 73 1 47 1 359 1 322 1 180 1 217 1 70 1 60 1 334 1 348 1 
116 1 47 1 34 1 60 1 334 1 
8 1 322 1 9 1 61 1 64 1 334 1 348 1 
365 1 194 1 196 1 232 1 
251 1 237 1 114 1 365 1 194 1 196 1 345 1 
237 1 136 1 127 1 
266 1 39 1 237 3 114 1 40 1 194 1 345 3 196 1 251 1 352 1 365 1 94 2 
251 1 237 2 114 1 252 1 365 1 241 1 194 1 196 1 345 2 
251 1 39 1 237 1 114 1 5 1 35 1 332 1 82 1 71 1 194 1 345 1 
251 1 39 1 237 1 114 1 194 1 196 1 345 1 
251 1 39 1 237 1 114 1 365 1 196 2 345 1 
39 1 237 2 114 2 330 1 194 1 196 1 345 2 251 2 321 1 101 1 
39 1 358 1 237 3 31 1 114 1 332 1 194 2 196 1 345 3 251 1 252 2 365 1 231 1 
39 1 74 1 237 2 114 1 5 1 194 1 196 1 345 2 251 1 54 1 35 1 252 1 365 1 82 2 83 1 
39 1 237 4 114 2 137 1 332 1 194 2 196 1 345 4 251 2 252 2 365 1 241 1 231 1 
251 1 39 1 237 1 114 1 365 1 194 1 196 1 345 1 
221 1 266 1 237 4 114 1 40 1 332 1 194 3 196 2 345 4 251 1 252 2 365 2 94 1 231 1 
39 1 237 2 114 1 193 1 194 1 196 1 345 2 251 1 68 1 252 1 365 1 172 1 
266 1 39 1 299 1 237 3 114 1 40 2 194 1 345 3 196 1 251 1 365 1 94 2 
103 2 150 1 339 1 194 2 
251 1 39 1 260 1 237 1 114 1 345 1 
251 1 358 1 39 1 237 2 114 1 252 1 365 1 194 1 196 1 345 2 
13 1 
251 1 39 1 237 1 114 1 365 1 194 1 196 1 345 1 
251 1 358 1 39 1 237 3 114 1 252 1 365 1 94 1 194 1 196 1 345 3 
221 1 332 1 194 1 231 1 
194 1 196 1 

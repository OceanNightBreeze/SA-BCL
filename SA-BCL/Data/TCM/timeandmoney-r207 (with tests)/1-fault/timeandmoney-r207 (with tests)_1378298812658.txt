#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
238 5 312 1 1 1 241 2 65 2 91 9 95 2 271 2 349 1 227 1 10 1 120 1 143 2 203 1 12 1 126 1 14 1 128 1 76 1 375 1 299 2 152 1 210 6 211 9 334 1 359 2 154 3 237 4 
238 5 312 1 1 1 241 2 65 2 91 9 95 2 271 2 349 1 227 1 10 1 120 1 143 2 203 1 12 1 126 1 14 1 128 1 76 1 375 1 299 2 152 1 210 6 211 9 334 1 359 2 154 3 237 4 
238 6 312 1 1 1 241 2 65 2 91 10 95 2 271 2 349 1 227 1 10 1 120 1 143 2 203 1 12 1 126 1 14 1 128 1 76 1 375 1 299 2 152 1 210 7 211 10 334 1 359 2 154 4 237 5 
238 4 312 1 1 1 241 2 65 2 91 7 95 1 271 2 349 1 227 1 10 1 120 1 143 2 203 1 12 1 126 1 14 1 128 1 375 1 299 2 152 1 210 4 211 7 334 1 359 2 154 2 237 3 
238 3 12 1 1 1 128 1 76 1 375 1 299 1 65 1 91 4 210 3 211 4 95 2 359 1 271 1 154 1 10 1 237 2 143 1 
238 1 12 1 100 1 14 1 128 1 241 1 375 1 90 1 65 1 91 2 19 1 211 2 271 1 359 1 120 1 143 1 
238 2 12 1 128 1 241 1 375 1 91 3 210 1 211 3 334 1 271 2 154 1 237 1 143 2 
238 5 1 1 241 1 266 1 65 1 91 9 95 2 271 2 349 1 227 1 10 1 143 2 12 1 128 1 76 1 375 1 299 1 210 7 211 9 334 1 359 1 154 3 61 1 237 4 
238 5 1 1 241 1 266 1 65 1 91 9 95 2 271 2 349 1 227 1 10 1 143 2 12 1 128 1 76 1 375 1 299 1 210 7 211 9 334 1 359 1 154 3 61 1 237 4 
4 1 149 1 53 1 
170 2 4 1 225 1 
110 2 117 2 239 1 277 2 379 2 263 1 243 2 44 2 
84 1 365 1 239 1 286 1 87 1 289 1 243 2 92 1 44 3 136 1 94 1 117 2 139 1 371 1 96 1 140 1 31 1 30 2 373 1 142 2 122 1 48 2 326 2 329 1 277 2 52 2 148 1 279 1 181 1 300 1 182 1 356 1 110 3 379 2 214 1 262 1 263 1 
340 1 110 1 117 1 239 1 277 1 379 1 130 1 243 1 150 1 44 1 
204 1 145 1 340 1 277 1 206 1 4 1 149 1 332 1 44 1 35 1 245 1 110 1 323 1 350 1 
204 2 145 1 340 1 277 1 4 1 149 1 243 1 332 1 44 1 35 1 245 1 117 1 110 1 379 1 350 2 
338 1 204 1 292 1 320 1 350 1 
204 2 292 1 320 1 4 1 149 1 26 1 350 2 218 1 
204 1 292 1 350 1 
204 1 340 1 239 1 277 1 130 1 150 1 243 1 44 1 117 1 110 1 320 1 379 1 226 1 350 1 
4 1 
204 2 292 1 320 1 4 1 149 1 342 1 350 2 218 1 
204 5 147 2 4 1 149 1 56 1 180 1 42 2 66 1 57 1 292 2 261 1 320 2 22 1 156 1 381 1 38 1 350 5 218 1 39 2 
53 1 263 1 
277 2 151 1 243 1 303 1 44 2 110 2 117 1 379 1 263 2 
202 1 186 1 189 1 
48 1 286 1 87 1 52 1 148 1 279 1 300 1 44 1 6 1 94 1 110 1 96 1 140 1 30 1 214 1 263 1 
48 1 286 1 277 1 87 1 52 1 148 1 279 1 300 1 44 2 94 1 117 1 110 2 96 1 186 1 140 1 379 1 322 1 30 1 214 1 215 1 
110 3 117 3 277 3 379 3 322 1 243 1 263 1 44 3 
340 1 110 1 117 1 277 1 379 1 130 1 44 1 
340 1 110 1 117 1 277 1 379 1 151 1 243 1 303 1 44 1 
340 1 286 1 239 1 87 1 289 1 243 2 92 1 44 4 245 1 94 1 137 1 117 3 139 1 371 1 96 1 140 1 31 1 322 1 30 1 373 1 350 1 142 1 122 1 204 1 48 1 326 2 145 1 329 1 277 3 148 1 52 1 279 1 300 1 356 1 303 1 332 1 35 1 110 4 379 3 214 1 262 1 215 1 263 1 216 1 
110 2 117 1 205 1 277 2 206 1 379 1 322 1 263 1 44 2 
204 1 340 1 145 1 277 3 4 1 243 1 164 1 303 1 332 1 44 3 35 1 245 1 117 3 110 3 379 3 322 2 215 1 350 1 216 1 
202 1 110 2 117 2 277 2 186 1 379 2 322 1 243 1 303 1 44 2 
48 1 286 1 87 1 52 1 148 1 279 1 300 1 44 1 94 1 110 1 96 1 140 1 30 1 214 1 263 1 
275 1 48 1 87 1 52 1 279 1 300 1 44 1 94 1 110 1 96 1 140 1 30 1 37 1 214 1 263 1 
365 2 2 1 289 1 267 1 367 1 139 1 371 2 31 1 142 4 122 1 202 2 326 2 327 1 103 1 329 1 106 1 207 1 252 1 356 1 234 1 186 2 213 1 189 2 363 1 
340 1 145 1 110 1 117 1 277 1 231 1 379 1 44 1 
205 1 277 5 206 1 243 1 303 1 44 5 257 1 117 4 110 5 379 4 360 1 322 2 215 1 263 1 
340 1 110 2 117 2 277 2 231 1 379 2 130 1 44 2 
72 1 307 1 
72 1 307 1 
259 1 21 1 
259 1 21 1 
259 1 21 1 
72 1 34 1 307 1 
72 1 34 1 307 1 
72 1 357 1 307 1 
72 2 259 1 21 1 283 1 256 1 307 2 
72 1 34 1 307 1 
72 1 250 1 307 1 
72 1 250 1 307 1 
72 1 250 1 307 1 
72 2 123 2 204 2 89 1 25 1 4 1 114 2 16 1 183 1 269 3 223 1 307 2 131 2 319 2 247 1 283 1 176 2 248 1 350 2 
265 1 114 1 344 1 269 1 44 2 117 2 319 1 350 1 228 1 123 1 72 1 204 1 277 2 251 1 16 1 357 1 307 1 305 1 131 1 110 2 379 2 235 1 263 1 336 1 
359 1 299 1 65 1 
100 1 359 1 65 1 
118 1 100 1 352 1 359 3 299 2 5 1 
118 1 198 1 100 1 359 2 299 1 5 1 
118 1 100 1 359 2 299 1 5 2 
221 2 285 1 313 1 265 1 2 1 267 1 4 2 162 1 42 1 170 3 46 1 292 1 320 4 225 1 175 2 350 5 204 5 50 1 207 1 147 1 149 1 251 1 75 1 254 1 56 3 261 2 213 1 156 1 336 1 187 2 39 1 218 1 
221 6 338 5 285 1 265 4 2 3 267 3 3 1 4 5 162 2 42 2 170 9 46 3 292 6 320 7 225 3 350 9 204 9 50 2 13 1 296 1 207 3 147 2 149 1 15 1 180 1 56 8 18 1 261 6 213 3 309 5 156 1 187 6 188 1 218 1 39 2 
221 2 313 1 265 1 2 1 267 1 4 3 162 1 42 1 170 4 46 1 320 2 225 2 175 1 350 3 204 3 50 1 147 1 207 1 149 1 254 1 180 1 56 3 261 2 213 1 187 2 39 1 
221 4 313 1 265 2 2 2 267 2 4 4 162 1 42 1 170 7 46 2 320 3 225 3 175 2 350 4 204 4 50 1 296 1 147 1 207 2 149 1 180 1 254 1 56 5 18 1 261 4 213 2 187 4 188 1 39 1 
318 1 53 1 214 1 
214 1 63 1 
233 1 
94 1 214 1 
94 1 318 2 96 1 214 2 233 1 133 1 98 1 
94 1 96 1 214 1 
214 1 178 1 
124 1 327 3 365 4 2 1 106 2 297 1 345 1 222 1 7 1 8 1 172 1 371 3 213 1 141 1 70 1 81 2 142 7 
124 1 327 3 365 4 2 1 106 2 297 1 345 1 222 1 7 1 8 1 172 1 371 3 213 1 141 1 70 1 81 2 142 7 
124 1 327 3 365 4 2 1 106 2 297 1 345 1 222 1 7 1 8 1 172 1 371 3 213 1 141 1 70 1 310 1 81 2 142 7 
365 16 341 1 289 1 288 1 2 4 267 3 345 1 222 2 317 1 7 1 197 1 172 2 8 5 371 15 46 3 141 2 70 1 11 1 142 31 294 1 122 1 124 1 326 2 74 3 327 10 329 1 51 4 207 3 106 5 297 2 356 1 304 1 213 4 81 3 
365 5 341 1 2 1 289 2 345 1 222 1 316 1 7 1 8 1 172 1 371 4 141 1 70 1 142 9 122 2 274 1 326 4 327 4 329 2 106 3 297 1 356 2 213 1 81 2 
238 1 85 1 314 1 241 1 163 1 65 1 91 2 167 1 195 1 93 1 271 1 140 1 30 1 200 1 325 1 143 1 48 1 12 1 295 1 100 1 352 1 128 1 52 1 375 1 299 1 300 1 210 1 211 2 79 1 359 2 
238 1 85 1 314 1 241 1 163 1 65 1 91 3 167 1 195 1 271 1 140 1 30 1 200 1 249 1 143 1 48 1 295 1 100 1 352 1 128 1 52 1 375 1 299 1 55 1 300 1 210 2 211 3 79 1 359 2 219 1 
238 1 85 1 241 1 163 1 65 1 91 2 167 1 195 1 140 1 30 1 200 1 249 1 48 1 295 1 100 1 352 1 128 1 52 1 375 1 299 1 300 1 210 2 211 2 359 2 219 1 
85 2 190 1 87 1 241 2 91 1 291 1 167 2 195 2 94 1 293 1 28 1 140 1 271 1 30 1 143 1 48 1 354 1 52 1 55 1 300 1 108 1 211 1 214 1 
85 1 314 1 241 1 163 1 65 1 91 1 167 1 195 1 271 1 140 1 30 1 200 1 325 1 143 1 48 1 12 1 295 1 100 1 352 1 52 1 299 1 300 1 211 1 79 1 359 2 219 1 
306 1 
190 1 86 2 340 1 87 2 135 4 4 2 192 1 42 1 244 1 44 1 245 1 94 1 45 1 292 6 140 1 350 5 144 1 204 5 48 2 145 1 206 1 147 1 52 2 149 1 253 1 56 2 300 1 358 1 110 1 308 2 261 2 156 1 214 1 311 2 218 3 364 1 24 2 162 1 165 1 170 2 270 1 171 1 372 2 28 1 225 2 30 2 174 1 323 1 125 2 277 1 332 1 35 1 78 1 378 2 39 1 
340 1 135 2 342 1 44 1 245 1 171 1 45 1 292 2 174 1 323 1 350 3 204 3 145 1 277 1 206 1 253 1 332 1 35 1 110 1 78 1 308 1 218 1 
340 1 86 1 135 3 4 1 342 1 44 1 245 1 171 1 45 1 292 1 174 1 323 1 350 3 204 3 145 1 277 1 206 1 149 1 253 1 332 1 35 1 110 1 78 1 218 1 
340 1 86 1 135 3 24 1 342 1 4 1 44 1 245 1 171 1 45 1 292 2 174 1 323 1 350 3 204 3 145 1 277 1 206 1 149 1 253 1 332 1 35 1 110 1 78 1 308 1 218 1 
340 1 86 4 135 6 342 1 4 5 192 1 42 1 44 1 245 1 45 1 292 7 350 5 204 5 144 1 145 1 102 1 206 1 147 1 107 1 149 5 253 1 56 1 110 1 308 4 261 1 156 1 362 1 311 2 218 3 24 4 369 1 171 1 372 2 174 1 225 2 323 1 125 2 277 1 278 1 332 1 35 1 78 1 378 2 39 1 
340 1 86 2 135 4 192 1 4 2 42 1 44 1 245 1 45 1 292 4 350 4 204 4 144 1 145 1 206 1 147 1 149 1 253 1 56 1 110 1 261 1 308 2 156 1 311 2 218 2 364 1 24 2 170 2 171 1 372 2 174 1 225 2 323 1 125 2 277 1 332 1 35 1 78 1 378 2 39 1 
86 2 340 1 24 2 135 4 4 1 192 1 42 1 44 1 245 1 171 1 45 1 292 4 372 2 225 2 174 1 323 1 350 4 125 2 144 1 204 4 145 1 277 1 102 1 206 1 147 1 149 1 278 1 253 1 56 1 332 1 35 1 110 1 78 1 308 2 378 2 261 1 156 1 311 2 362 1 218 2 39 1 
86 2 340 1 24 2 135 4 4 1 192 1 42 1 44 1 245 1 171 1 45 1 292 4 372 2 225 2 174 1 323 1 350 4 125 2 144 1 204 4 145 1 277 1 102 1 206 1 147 1 149 1 278 1 253 1 56 1 332 1 35 1 110 1 78 1 308 2 378 2 261 1 156 1 311 2 362 1 218 2 39 1 
86 2 340 1 240 2 24 2 135 4 4 1 42 1 166 2 44 1 245 1 170 2 171 1 224 1 45 1 292 4 174 1 323 1 350 4 125 2 144 1 204 4 145 1 277 1 206 1 147 1 149 1 278 1 253 1 56 1 255 1 332 1 35 1 110 1 78 1 308 2 378 2 261 1 361 1 156 1 218 2 39 1 
340 1 86 3 135 5 24 3 4 1 192 1 42 1 44 1 369 1 245 1 171 1 45 1 372 2 292 5 225 2 174 1 323 1 350 4 125 2 144 1 204 4 145 1 102 1 277 1 206 1 147 1 149 1 278 1 253 1 56 1 332 1 35 1 110 1 78 1 378 2 261 1 308 3 156 1 311 2 362 1 218 2 39 1 
340 1 86 3 135 5 24 3 4 1 192 1 42 1 44 1 369 1 245 1 171 1 45 1 372 2 292 5 225 2 174 1 323 1 350 4 125 2 144 1 204 4 145 1 102 1 277 1 206 1 147 1 149 1 278 1 253 1 56 1 332 1 35 1 110 1 78 1 378 2 261 1 308 3 156 1 311 2 362 1 218 2 39 1 
340 1 86 2 240 2 135 4 4 1 42 1 44 1 245 1 45 1 292 4 350 4 204 4 144 1 145 1 206 1 147 1 149 1 253 1 56 1 255 1 110 1 261 1 308 2 156 1 218 2 364 1 24 2 166 2 170 2 171 1 174 1 323 1 125 2 277 1 332 1 35 1 78 1 378 2 39 1 
202 1 365 3 327 2 326 2 329 1 2 1 289 1 106 2 53 1 297 1 367 1 345 1 356 1 7 1 139 1 172 1 371 3 186 1 213 1 31 1 70 1 263 2 81 1 189 1 142 6 122 1 
23 1 365 8 289 2 2 2 267 1 41 1 92 1 197 1 8 1 139 1 371 6 46 2 31 2 177 1 142 14 122 2 202 4 327 2 326 4 74 3 329 2 51 3 106 1 207 2 182 1 376 1 356 2 304 1 186 11 380 1 213 1 263 1 189 11 
365 1 286 1 87 1 289 1 92 1 44 2 6 1 94 1 117 1 348 1 139 1 96 1 371 1 140 1 30 1 31 1 322 1 177 1 142 2 122 1 202 1 48 1 326 2 329 1 277 1 148 1 52 1 279 1 300 1 356 1 209 1 182 1 110 2 379 1 214 1 215 1 236 1 263 1 
286 2 87 1 289 3 2 3 345 1 92 1 44 3 7 1 94 2 138 1 139 3 8 4 96 2 46 2 140 2 47 2 142 20 202 7 48 3 101 2 106 4 52 3 148 2 207 2 297 1 300 2 356 3 110 3 213 3 215 1 262 2 214 2 263 2 219 1 112 1 365 10 267 2 117 1 172 1 68 1 371 10 69 2 30 3 322 1 31 3 70 1 177 1 122 3 326 6 327 8 277 1 329 3 279 2 182 1 185 2 186 7 379 1 81 1 189 7 
190 1 264 1 365 1 87 2 289 2 88 1 367 1 92 1 44 1 93 1 94 2 117 1 139 2 371 1 28 1 140 2 321 1 322 1 30 8 31 2 142 2 229 1 122 2 48 8 230 1 326 4 277 1 329 2 52 7 129 1 300 2 181 2 356 2 182 1 110 1 379 1 214 3 132 1 219 1 
365 1 289 1 2 1 267 1 243 1 44 1 117 1 139 1 46 1 371 2 31 1 177 1 142 3 122 1 202 1 327 1 326 2 329 1 277 1 106 1 207 1 303 1 356 1 184 1 110 1 186 1 379 1 213 1 189 1 
202 1 327 1 326 2 365 2 329 1 289 1 2 1 207 1 367 1 356 1 234 1 8 1 139 1 186 1 31 1 189 1 142 2 122 1 
202 1 327 1 326 2 329 1 103 1 289 1 106 1 267 1 367 1 356 1 139 1 371 2 186 1 213 1 31 1 189 1 142 2 122 1 
365 2 2 1 289 1 267 1 367 1 139 1 8 1 46 1 371 2 31 1 142 4 122 1 202 2 326 2 327 2 329 1 207 1 106 1 356 1 186 2 213 1 189 2 
202 1 327 1 326 2 365 2 329 1 289 1 2 1 207 1 356 1 234 1 8 1 139 1 186 1 321 1 31 1 189 1 142 2 122 1 
202 1 327 1 326 2 329 1 103 1 289 1 106 1 267 1 356 1 139 1 371 2 186 1 321 1 213 1 31 1 189 1 142 2 122 1 
365 2 2 1 289 1 267 1 139 1 8 1 46 1 371 2 321 1 31 1 142 4 122 1 202 2 326 2 327 2 329 1 207 1 106 1 356 1 186 2 213 1 189 2 
202 2 327 2 326 2 365 2 329 1 289 1 2 1 106 1 207 1 267 1 356 1 8 1 139 1 371 2 46 1 186 2 213 1 31 1 189 2 142 4 122 1 
365 1 286 1 87 1 289 1 92 1 44 1 94 1 139 1 96 1 371 1 140 1 30 1 31 1 142 2 122 1 48 1 326 2 329 1 148 1 52 1 279 1 300 1 182 1 356 1 110 1 262 1 214 1 263 1 
365 1 87 1 289 1 92 1 44 1 168 1 94 1 139 1 96 1 371 1 140 1 30 1 31 1 142 2 122 1 275 1 48 1 326 2 329 1 52 1 279 1 300 1 182 1 356 1 110 1 37 1 214 1 263 1 
365 2 2 1 289 1 267 1 139 1 8 1 46 1 371 2 31 1 177 1 142 4 122 1 202 2 326 2 327 2 329 1 207 1 106 1 356 1 186 2 213 1 189 2 
365 2 286 1 2 1 289 1 267 1 44 1 93 1 94 1 8 1 139 1 371 2 96 1 46 1 140 1 30 1 31 1 47 1 142 4 122 1 202 2 48 1 327 2 326 2 329 1 106 1 207 1 148 1 52 1 279 1 300 1 356 1 110 1 186 2 213 1 262 1 214 1 189 2 
365 2 289 1 2 1 267 1 243 1 44 1 117 1 8 1 139 1 371 1 46 1 31 1 177 1 142 3 122 1 202 1 327 1 326 2 329 1 277 1 207 1 303 1 356 1 110 1 186 1 213 1 379 1 217 1 189 1 
365 9 289 2 2 3 267 3 368 1 347 1 370 1 197 1 8 3 371 10 46 3 142 19 122 2 274 1 73 2 326 4 74 1 327 6 329 2 51 2 106 3 207 3 355 1 356 2 304 1 333 2 213 3 80 1 82 1 134 1 
113 1 365 14 366 1 287 1 341 2 289 3 2 3 267 2 368 1 370 2 8 2 371 12 46 3 142 26 122 3 274 1 73 4 327 4 326 6 74 2 33 1 146 1 329 3 374 1 51 2 106 2 207 3 355 2 356 3 304 2 333 1 213 2 82 1 134 1 
113 1 365 20 366 1 287 1 341 1 289 3 2 5 267 4 345 1 368 1 347 1 370 1 7 1 197 1 172 1 8 4 371 21 46 4 70 1 142 41 122 3 274 1 73 4 99 1 326 6 74 3 327 8 146 1 33 1 329 3 374 1 51 4 106 4 207 4 297 1 355 2 356 3 304 3 333 1 213 5 81 1 82 1 134 1 
113 1 365 20 366 1 287 1 341 2 289 4 2 5 267 3 345 1 368 1 347 1 370 1 7 1 197 1 172 1 8 3 371 18 46 4 70 1 142 38 122 4 274 1 73 4 99 1 326 8 74 3 327 7 146 1 33 1 329 4 374 1 51 4 106 4 207 4 297 1 355 2 356 4 304 3 333 1 213 4 81 1 82 1 134 1 
23 2 113 1 365 27 366 1 287 1 341 1 289 2 2 8 267 7 345 1 368 1 370 1 7 1 197 2 172 1 8 7 371 25 46 7 70 1 142 52 122 2 274 1 73 4 326 4 74 4 327 14 146 1 33 1 329 2 374 1 51 4 106 7 207 7 297 1 355 1 356 2 304 2 333 1 213 8 81 1 82 1 134 1 
123 1 72 1 131 1 104 1 319 1 25 1 247 1 114 1 283 1 307 1 
344 1 357 1 
123 1 72 1 131 1 49 1 319 1 114 1 298 1 201 1 307 1 
72 1 123 1 204 1 25 1 4 1 114 1 16 1 183 1 269 2 223 1 307 1 131 1 319 1 247 1 283 1 176 1 248 1 350 1 
72 1 123 1 204 1 25 1 4 1 114 1 16 1 183 1 269 2 223 1 307 1 131 1 319 1 247 1 283 1 176 1 248 1 350 1 
72 1 123 1 204 1 25 1 4 1 114 1 16 1 183 1 269 2 223 1 307 1 131 1 319 1 247 1 283 1 176 1 248 1 350 1 
34 1 157 1 256 1 
34 1 157 1 256 1 
250 1 115 1 
250 1 256 1 115 1 
235 1 228 1 
265 1 161 1 114 1 344 1 269 1 44 2 223 1 117 2 320 1 319 1 176 1 350 1 228 1 123 1 72 1 204 1 277 2 251 1 357 1 307 1 305 1 131 1 110 2 379 2 235 1 263 1 336 1 
34 1 157 1 
250 1 256 1 115 1 
339 1 264 1 365 1 289 1 343 1 92 1 194 1 44 2 94 1 139 1 371 1 140 1 30 2 31 1 177 1 142 2 122 1 48 2 230 1 326 2 329 1 277 2 52 2 300 1 181 2 356 1 182 1 377 1 110 2 214 1 155 1 
48 2 85 1 100 1 352 1 314 1 52 2 330 1 163 1 299 1 65 1 300 1 93 1 359 2 140 1 30 2 153 1 200 1 351 1 219 1 
48 1 85 1 100 1 352 1 314 1 52 1 330 1 163 1 299 1 65 1 300 1 109 1 359 2 140 1 30 1 200 1 219 1 
48 1 85 1 190 1 87 1 52 1 300 1 94 1 293 1 28 1 140 1 30 1 214 1 337 1 351 1 
48 1 85 1 100 1 352 1 314 1 52 1 330 1 163 1 299 1 65 1 300 1 359 2 140 1 30 1 153 1 200 1 351 1 219 1 
173 1 
261 1 4 1 149 1 53 1 56 1 381 1 38 1 
192 1 4 2 42 1 170 1 372 1 292 1 225 1 350 1 204 1 147 1 149 1 56 1 261 1 156 1 311 1 39 1 218 1 
87 1 2 2 4 8 346 2 42 4 245 2 93 1 196 1 94 3 96 3 292 5 46 2 140 4 350 5 98 1 48 3 204 5 147 4 52 3 207 2 149 2 56 9 300 3 301 2 20 2 258 2 261 8 213 2 60 1 214 10 156 4 63 3 218 3 221 6 315 2 267 2 162 2 165 1 170 12 318 2 69 2 30 3 225 6 178 2 272 2 273 2 32 2 276 1 281 1 381 1 38 1 284 1 187 6 39 4 
221 5 113 1 366 1 2 2 4 5 267 2 162 1 42 2 165 1 170 6 292 1 46 2 97 1 225 3 350 1 273 1 204 1 74 1 33 1 146 1 374 1 51 1 147 2 207 2 149 2 56 8 304 1 258 2 261 5 213 2 156 2 187 5 158 1 218 1 39 2 
340 1 239 1 2 2 345 1 42 1 243 1 44 1 117 1 172 1 226 1 350 1 273 1 204 1 102 1 277 1 147 1 297 1 130 1 56 2 150 1 280 1 110 1 258 2 261 2 213 1 379 1 156 1 39 1 
147 1 149 1 4 1 42 1 56 1 261 1 156 1 38 1 381 1 39 1 
221 5 2 2 207 2 4 5 267 2 56 5 170 10 258 2 46 2 69 1 261 5 213 2 225 5 187 5 273 1 
204 1 292 1 4 1 149 1 350 1 218 1 
190 1 87 2 162 2 42 2 244 1 165 2 94 1 270 1 196 1 292 4 28 1 140 1 30 4 350 3 48 4 204 3 232 1 147 2 52 4 302 1 180 1 300 1 56 2 281 2 261 2 214 1 156 1 39 2 218 2 
239 1 286 1 87 1 289 1 243 2 92 1 44 3 94 1 117 2 139 1 371 1 96 1 140 1 30 1 31 1 373 1 142 1 122 1 48 1 326 2 277 2 329 1 52 1 148 1 279 1 300 1 356 1 110 3 379 2 262 1 214 1 263 1 
221 2 147 1 149 2 4 4 162 1 42 1 56 1 165 1 170 4 261 2 225 2 156 1 187 2 81 1 39 1 
123 1 131 1 353 1 
123 1 131 1 353 1 
123 1 131 1 25 1 331 1 228 1 
123 1 131 1 353 1 
123 1 131 1 43 1 
123 1 131 1 43 1 
123 1 131 1 43 1 
123 1 131 1 
72 1 307 1 
365 4 327 3 326 4 329 2 341 1 2 1 289 2 106 2 297 1 345 1 356 2 7 1 8 1 172 1 371 4 213 1 70 1 81 1 142 8 122 2 
327 2 365 3 2 1 106 2 53 1 297 1 345 1 7 1 172 1 371 3 213 1 70 1 81 1 142 6 
327 2 326 2 365 2 329 1 289 1 2 1 106 1 207 1 267 1 356 1 8 1 371 2 46 1 213 1 119 1 142 4 122 1 
74 1 365 3 327 2 51 2 2 1 106 1 207 1 267 1 304 1 197 1 8 1 371 4 46 1 213 1 142 7 
23 1 365 11 341 2 2 3 289 2 267 2 345 1 41 1 7 1 197 1 172 2 8 4 46 2 371 12 70 1 142 23 122 2 327 9 74 2 326 4 329 2 51 2 207 2 106 5 297 2 356 2 36 1 213 3 81 1 
371 1 51 1 142 1 
365 1 74 1 142 1 
326 2 365 3 327 3 329 1 289 1 2 1 207 1 106 2 267 1 356 1 8 1 371 3 46 1 69 1 213 1 119 1 142 6 122 1 
365 6 113 1 366 1 289 1 2 2 267 2 8 1 371 6 46 2 142 12 122 1 274 1 74 1 326 2 327 2 33 1 146 1 329 1 51 1 374 1 207 2 106 1 356 1 304 1 213 2 
365 3 327 2 2 1 106 1 297 1 345 1 172 1 8 1 371 3 213 1 142 6 
365 1 327 2 326 2 341 1 329 1 289 1 106 1 297 1 356 1 36 1 7 1 8 1 172 1 371 2 70 1 142 3 122 1 
326 2 327 5 365 5 329 1 289 1 2 2 106 3 297 2 345 1 356 1 280 1 172 2 8 2 371 5 213 2 142 10 122 1 274 1 
326 2 365 2 327 1 329 1 289 1 2 1 207 1 356 1 8 1 142 2 274 1 122 1 
327 2 326 2 365 2 329 1 289 1 2 1 106 1 207 1 267 1 356 1 8 1 371 2 46 1 213 1 142 4 274 1 122 1 
326 6 327 2 365 1 341 1 329 3 289 3 106 1 297 1 356 3 347 1 36 1 172 1 8 1 371 2 142 3 274 1 122 3 
365 16 341 2 289 5 2 5 267 3 345 2 347 1 317 1 7 1 197 1 172 3 8 5 371 18 46 3 70 1 11 1 119 1 294 1 142 34 122 5 274 1 326 10 74 3 327 12 329 5 51 4 207 3 106 7 297 3 356 5 304 1 36 1 213 5 81 1 
365 4 2 1 289 1 345 1 7 1 172 1 371 4 70 1 142 8 122 1 274 1 74 1 326 2 327 2 33 1 329 1 51 1 106 2 297 1 356 1 304 1 213 1 81 1 
365 6 289 2 2 2 345 1 7 1 197 1 172 1 8 1 371 5 46 1 70 1 119 1 142 11 274 1 122 2 326 4 74 1 327 3 33 1 329 2 51 2 106 2 207 1 297 1 356 2 304 1 213 1 81 1 
113 1 365 9 366 1 341 1 289 3 2 3 267 2 345 1 7 1 172 1 8 1 371 10 46 2 70 1 119 1 142 19 122 3 274 1 74 1 326 6 327 4 33 1 146 1 329 3 51 1 374 1 207 2 106 3 297 1 356 3 304 1 213 3 81 1 
365 10 113 1 366 1 341 1 289 3 2 3 267 1 345 1 7 1 172 1 8 2 371 7 46 2 70 1 119 1 142 17 122 3 274 1 74 1 326 6 327 5 33 1 146 1 329 3 51 1 374 1 207 2 106 3 297 1 356 3 304 1 213 2 81 1 
365 4 2 1 289 1 345 1 7 1 172 1 371 4 70 1 142 8 122 1 274 1 74 1 326 2 327 2 33 1 329 1 51 1 106 2 297 1 356 1 304 1 213 1 81 1 
365 6 113 1 366 1 289 1 2 2 267 2 8 1 371 6 46 2 142 12 122 1 274 1 74 1 326 2 327 2 33 1 146 1 329 1 51 1 374 1 207 2 106 1 356 1 304 1 213 2 
113 1 365 10 366 1 341 2 289 4 2 3 267 1 345 1 7 1 172 1 8 2 371 8 46 2 70 1 119 1 142 18 122 4 274 1 326 8 74 1 327 5 33 1 146 1 329 4 374 1 51 1 207 2 106 3 297 1 356 4 304 1 213 2 81 1 
113 1 365 9 366 1 341 2 289 4 2 3 267 2 347 1 8 3 371 7 46 3 142 16 274 1 122 4 326 8 74 1 327 6 33 1 146 1 329 4 374 1 51 1 207 3 106 3 356 4 304 1 213 2 
327 6 365 3 2 1 106 3 297 3 345 1 7 1 172 3 8 3 371 4 213 1 70 2 142 7 
113 1 365 10 366 1 341 2 289 4 2 3 267 1 345 1 347 1 7 1 172 1 8 1 371 8 46 2 70 1 142 18 274 1 122 4 326 8 74 1 327 4 33 1 146 1 329 4 374 1 51 1 207 2 106 3 297 1 356 4 304 1 213 2 81 1 
110 1 277 1 205 1 206 1 105 1 263 1 44 1 
191 1 205 1 277 1 206 1 105 1 17 1 44 1 169 1 27 1 110 1 263 1 62 1 
94 1 190 1 48 1 87 1 28 1 52 1 140 1 53 1 30 1 214 1 300 1 
48 1 286 1 277 1 87 1 52 1 279 1 300 1 44 2 94 1 117 1 110 2 96 1 140 1 379 1 322 1 30 1 214 1 263 1 
48 1 340 1 145 1 286 1 277 2 52 1 279 1 301 1 300 1 35 1 44 2 94 2 117 1 110 2 281 1 96 2 140 1 379 2 322 1 30 1 214 3 263 1 178 1 
340 1 44 2 94 2 117 1 96 2 140 1 30 2 322 1 178 1 275 1 48 2 145 1 277 2 52 2 279 1 300 1 301 1 35 1 77 1 110 2 281 1 379 2 214 3 263 1 
64 1 87 1 4 1 245 1 94 1 318 1 292 1 96 1 140 1 30 3 350 2 178 1 48 3 204 2 52 3 149 1 300 1 301 1 77 1 281 1 214 4 159 1 63 1 
204 2 48 3 87 1 52 3 4 1 149 1 301 1 300 1 245 1 20 1 77 1 94 1 318 1 281 1 96 1 292 1 140 1 30 3 214 4 350 2 178 1 63 1 
48 1 52 1 140 1 129 1 30 1 300 1 
160 1 48 7 230 1 87 2 88 1 52 6 129 1 208 1 181 1 300 2 93 1 94 2 9 1 96 1 140 3 30 7 214 3 132 1 219 1 229 1 98 1 
365 3 286 1 2 1 289 2 345 1 44 2 93 1 7 1 94 1 117 1 172 1 139 2 371 3 96 1 140 1 31 2 322 1 30 1 70 1 177 1 47 1 142 6 122 2 202 1 48 1 327 2 326 4 329 2 277 1 106 2 52 1 148 1 297 1 279 1 300 1 356 2 185 1 377 1 110 2 186 1 213 1 379 1 214 1 262 1 263 2 81 1 189 1 
87 1 4 1 315 1 42 2 245 1 196 1 318 1 292 2 320 1 30 1 350 3 272 1 48 1 204 3 32 1 52 1 147 2 149 1 56 1 20 1 261 1 156 2 214 2 381 1 38 1 39 2 63 1 218 1 
48 2 52 2 129 1 300 1 93 1 94 1 318 1 96 1 140 2 30 2 60 1 214 2 98 1 
48 4 190 1 87 1 52 4 300 1 93 1 77 1 94 1 28 1 29 1 140 1 30 4 214 1 
160 1 48 2 52 2 300 1 94 1 138 1 281 1 9 1 58 1 96 1 140 2 30 2 214 1 121 1 
48 1 100 1 87 1 52 1 359 1 140 1 30 1 163 1 65 1 300 1 
93 1 94 1 48 2 230 1 339 1 52 2 140 1 30 2 214 1 300 1 219 1 
190 1 48 5 230 1 87 1 52 4 88 1 300 2 93 1 94 2 281 1 28 1 29 1 140 2 30 5 214 3 132 1 
190 1 48 5 230 1 87 1 127 1 52 4 88 1 300 2 93 1 94 2 281 1 28 1 29 1 140 2 30 5 214 3 
275 1 48 1 277 1 87 1 52 1 279 1 300 1 44 2 94 1 117 1 110 2 96 1 140 1 379 1 322 1 30 1 214 1 263 1 
160 1 48 1 52 1 208 1 300 1 94 1 281 1 9 1 96 1 140 2 30 1 214 1 98 1 
40 1 242 1 268 1 54 1 263 1 
204 2 340 1 145 1 0 1 40 2 4 1 149 1 242 1 54 2 268 2 332 1 35 1 245 1 282 1 320 1 263 1 350 2 216 1 220 1 
40 1 277 1 242 1 343 1 54 1 194 1 44 1 110 1 155 1 
282 1 242 1 220 1 
238 1 128 1 53 1 375 1 
238 1 211 1 128 1 271 1 375 1 91 1 143 1 
211 1 241 1 167 1 
111 1 238 1 12 1 128 1 375 1 91 3 116 1 211 3 246 1 271 1 120 2 143 1 
238 1 211 2 95 1 128 1 271 1 375 1 91 2 210 1 143 1 
238 1 12 1 299 1 65 1 91 1 211 1 271 1 359 1 10 1 237 1 143 1 
238 1 211 1 12 1 271 1 375 1 91 1 143 1 
211 1 12 1 128 1 271 1 375 2 91 1 143 1 
238 1 211 2 12 1 260 1 271 2 375 1 290 1 91 2 71 1 143 2 
238 2 12 1 128 1 375 1 91 3 210 2 211 3 271 1 349 1 154 1 227 1 237 1 143 1 
238 1 12 1 100 1 352 1 179 1 128 1 375 1 299 1 65 1 91 2 210 1 211 2 359 2 271 1 143 1 
238 2 12 1 128 1 76 1 375 1 91 4 210 2 211 4 95 1 271 2 154 1 237 1 143 2 
238 1 211 1 12 1 128 1 271 1 375 1 91 1 143 1 
238 3 128 2 375 2 91 4 210 2 116 1 211 4 246 1 59 1 271 1 154 1 120 1 237 1 143 1 
238 1 211 2 12 1 128 1 199 1 212 1 271 1 61 1 375 1 91 2 210 1 143 1 
238 1 12 1 128 1 375 1 91 3 116 1 211 3 246 2 67 1 271 1 120 2 143 1 
238 2 328 2 324 1 83 1 
211 1 12 1 335 1 271 1 91 1 143 1 
238 1 211 2 12 1 128 1 271 1 375 1 227 1 91 2 210 1 143 1 
193 1 
238 1 211 1 12 1 128 1 271 1 375 1 91 1 143 1 
238 1 211 3 12 1 128 1 271 1 227 1 375 1 91 3 120 1 210 1 143 1 
238 1 59 1 154 1 237 1 
238 1 375 1 

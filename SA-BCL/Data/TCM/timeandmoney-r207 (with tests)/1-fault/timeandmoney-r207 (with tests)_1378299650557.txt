#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 85 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 5 162 3 244 4 276 1 117 1 321 2 71 1 100 2 125 1 101 1 280 1 229 9 58 2 83 1 15 2 233 2 106 6 136 2 154 1 157 1 19 1 160 1 161 1 20 1 271 2 294 1 212 1 295 9 
25 5 162 3 244 4 276 1 117 1 321 2 71 1 100 2 125 1 101 1 280 1 229 9 58 2 83 1 15 2 233 2 106 6 136 2 154 1 157 1 19 1 160 1 161 1 20 1 271 2 294 1 212 1 295 9 
25 6 162 4 244 5 276 1 117 1 321 2 71 1 100 2 125 1 101 1 280 1 229 10 58 2 83 1 15 2 233 2 106 7 136 2 154 1 157 1 19 1 160 1 161 1 20 1 271 2 294 1 212 1 295 10 
25 4 162 2 244 3 276 1 117 1 321 2 71 1 100 2 125 1 101 1 280 1 229 7 58 1 15 2 233 2 106 4 136 2 154 1 157 1 19 1 160 1 161 1 20 1 271 2 294 1 212 1 295 7 
25 3 162 1 58 2 244 2 83 1 15 1 106 3 321 1 136 1 157 1 71 1 100 1 160 1 20 1 280 1 271 1 229 4 295 4 
25 1 129 1 318 1 276 1 15 1 233 1 136 1 157 1 60 1 71 1 19 1 100 1 280 1 271 1 229 2 295 2 
25 2 162 1 244 1 233 1 106 1 136 2 154 1 157 1 71 1 280 1 271 2 229 3 295 3 
25 5 162 3 244 4 321 1 71 1 100 1 101 1 370 1 280 1 229 9 58 2 83 1 15 1 233 1 106 7 42 1 136 2 154 1 157 1 160 1 20 1 271 2 294 1 295 9 
25 5 162 3 244 4 321 1 71 1 100 1 101 1 370 1 280 1 229 9 58 2 83 1 15 1 233 1 106 7 42 1 136 2 154 1 157 1 160 1 20 1 271 2 294 1 295 9 
186 1 177 1 207 1 
148 1 264 2 186 1 
80 2 277 2 102 2 109 2 27 2 38 2 40 1 121 1 
115 1 334 1 214 1 246 2 27 2 49 1 191 1 121 1 123 1 251 1 277 2 192 1 33 2 72 1 301 1 224 1 225 2 279 2 226 1 369 1 198 1 305 1 78 1 256 1 80 3 102 2 131 2 104 1 38 2 17 1 40 1 328 1 265 1 109 3 272 1 293 1 379 1 
80 1 277 1 102 1 109 1 27 1 38 1 40 1 368 1 284 1 380 1 
35 1 64 1 186 1 177 1 80 1 165 1 232 1 284 1 236 1 86 1 277 1 109 1 7 1 211 1 
35 1 186 1 177 1 102 1 80 1 165 2 27 1 232 2 38 1 284 1 86 1 277 1 109 1 7 1 211 1 
98 1 165 1 232 1 75 1 333 1 
299 1 186 1 177 1 98 1 165 2 232 2 197 1 333 1 
165 1 232 1 333 1 
102 1 80 1 165 1 232 1 27 1 38 1 40 1 3 1 284 1 98 1 277 1 109 1 368 1 380 1 
186 1 
299 1 186 1 177 1 98 1 283 1 165 2 232 2 333 1 
186 1 177 1 142 2 165 5 215 2 232 5 363 1 319 1 340 1 120 1 299 1 30 1 98 2 46 1 124 2 146 1 23 1 199 1 333 2 
308 1 102 1 80 2 214 1 131 1 133 1 38 1 17 1 191 1 123 1 265 1 312 1 277 1 192 1 109 2 33 1 301 1 225 1 305 1 293 1 
207 1 121 1 
80 2 102 1 27 1 38 1 121 2 277 2 109 2 140 1 147 1 
133 1 88 1 107 1 
80 1 131 1 214 1 17 1 191 1 121 1 123 1 265 1 192 1 109 1 33 1 301 1 225 1 305 1 293 1 326 1 
308 2 64 1 102 4 80 5 27 1 38 4 121 1 312 1 99 1 277 5 109 5 21 1 287 1 147 1 
80 2 277 2 102 2 297 1 109 2 38 2 284 1 380 1 
308 1 80 3 277 3 102 3 109 3 27 1 38 3 121 1 
80 1 277 1 102 1 109 1 38 1 284 1 380 1 
80 1 277 1 102 1 109 1 27 1 38 1 140 1 147 1 284 1 
115 1 214 1 246 1 165 1 27 2 49 1 191 1 121 1 123 1 251 1 277 3 192 1 33 1 72 1 301 1 224 1 7 1 225 1 279 2 198 1 147 1 305 1 78 1 308 1 35 1 80 4 102 3 82 1 131 1 232 1 38 3 17 1 40 1 328 1 284 1 265 1 86 1 312 1 109 4 111 1 272 1 293 1 211 1 379 1 
308 1 64 1 99 1 80 2 277 2 102 1 109 2 38 1 121 1 
35 1 308 2 186 1 102 3 80 3 82 1 165 1 27 1 232 1 38 3 284 1 86 1 312 1 277 3 109 3 193 1 7 1 147 1 211 1 
308 1 102 2 80 2 27 1 133 1 38 2 277 2 109 2 88 1 147 1 
80 1 131 1 214 1 17 1 191 1 121 1 123 1 265 1 192 1 109 1 33 1 301 1 225 1 305 1 293 1 
80 1 131 1 214 1 17 1 191 1 121 1 123 1 265 1 109 1 33 1 225 1 74 1 184 1 305 1 293 1 
246 4 95 1 168 1 49 1 251 1 72 1 224 1 279 2 366 1 198 2 77 1 78 1 256 2 150 1 133 2 373 1 107 2 328 1 180 1 314 1 110 1 88 2 242 1 182 1 
80 1 277 1 102 1 297 1 109 1 38 1 284 1 211 1 
93 1 116 1 
93 1 116 1 
289 1 311 1 
289 1 311 1 
289 1 311 1 
93 1 141 1 116 1 
93 1 141 1 116 1 
93 1 163 1 116 1 
93 2 260 1 116 2 289 1 311 1 67 1 
93 1 141 1 116 1 
93 1 116 1 216 1 
93 1 116 1 216 1 
93 1 116 1 216 1 
24 1 93 1 335 1 163 1 165 1 116 1 47 1 4 1 121 1 277 2 194 1 57 1 127 1 200 1 348 1 102 2 80 2 351 1 232 1 38 2 376 1 234 1 158 1 109 2 
348 1 36 1 186 1 93 2 260 1 351 3 165 2 116 2 232 2 376 2 2 1 4 2 158 2 342 1 365 2 266 1 286 1 346 1 127 2 
100 1 15 1 321 1 
129 1 100 1 15 1 
129 1 100 3 320 1 321 2 22 1 325 1 
129 1 100 2 320 1 321 1 105 1 325 1 
129 1 100 2 321 1 320 1 325 2 
335 1 186 2 142 1 215 1 165 5 168 1 68 2 219 1 5 2 299 1 98 4 124 1 345 1 366 1 57 1 146 1 199 2 200 1 148 1 177 1 130 1 132 1 150 1 103 1 232 5 135 2 180 1 264 3 46 3 183 1 333 1 114 1 
186 5 142 2 165 9 215 2 168 3 218 5 68 6 219 2 97 1 5 6 299 1 30 1 278 1 98 7 300 1 124 2 345 2 8 1 366 3 57 4 146 1 75 5 228 1 199 6 148 3 177 1 150 3 103 3 232 9 180 3 264 9 46 8 333 6 90 1 114 1 
186 3 142 1 215 1 165 3 168 1 219 1 68 2 5 2 30 1 98 2 124 1 345 1 57 1 366 1 199 2 148 2 177 1 130 1 132 1 103 1 150 1 232 3 135 1 180 1 264 4 46 3 
186 4 142 1 215 1 165 4 168 2 68 4 219 1 5 4 30 1 278 1 98 3 124 1 345 1 8 1 57 2 366 2 228 1 199 4 148 3 177 1 130 1 132 1 103 2 150 2 232 4 135 2 180 2 264 7 46 5 
372 1 207 1 293 1 
59 1 293 1 
323 1 
17 1 293 1 123 1 
149 1 293 1 
17 1 293 1 
45 1 372 2 189 1 17 1 293 3 123 1 
309 1 246 7 150 1 338 1 203 1 155 2 180 1 238 1 343 1 110 3 10 1 242 2 198 3 273 1 175 1 296 1 256 4 
309 1 246 7 150 1 338 1 203 1 155 2 180 1 238 1 343 1 110 3 10 1 242 2 198 3 273 1 175 1 296 1 256 4 
309 1 164 1 246 7 150 1 338 1 203 1 155 2 180 1 238 1 343 1 110 3 10 1 242 2 198 3 273 1 175 1 296 1 256 4 
246 31 338 2 168 3 343 2 72 1 224 1 10 2 279 2 366 3 198 15 175 1 78 1 256 16 282 1 257 1 309 1 103 3 150 4 203 1 263 1 328 1 205 1 155 3 180 4 238 5 159 3 137 4 110 10 112 1 242 5 331 1 273 2 296 1 63 1 
246 9 338 1 169 1 343 1 72 2 253 1 224 2 279 4 10 1 198 4 78 2 256 5 309 1 150 1 203 1 328 2 155 2 180 1 238 1 110 4 242 3 273 1 63 1 296 1 
25 1 247 1 321 1 167 1 191 1 51 1 71 1 171 1 32 1 100 2 33 1 225 1 280 1 229 2 129 1 81 1 131 1 15 1 106 1 233 1 136 1 157 1 18 1 265 1 237 1 138 1 22 1 89 1 271 1 295 2 
25 1 118 1 247 1 321 1 167 1 191 1 51 1 71 1 32 1 100 2 33 1 225 1 306 1 229 3 129 1 131 1 37 1 15 1 233 1 106 2 136 1 157 1 18 1 265 1 237 1 138 1 22 1 89 1 271 1 295 3 
25 1 118 1 321 1 167 1 191 1 51 1 71 1 32 1 100 2 33 1 225 1 306 1 229 2 129 1 131 1 15 1 233 1 106 2 157 1 18 1 265 1 237 1 138 1 22 1 295 2 
350 1 37 1 131 1 339 1 233 2 17 1 167 2 136 1 191 1 221 1 18 2 265 1 33 1 138 2 378 1 225 1 303 1 271 1 174 1 305 1 293 1 229 1 295 1 
118 1 247 1 321 1 167 1 191 1 51 1 171 1 32 1 100 2 33 1 225 1 280 1 229 1 129 1 131 1 15 1 233 1 136 1 18 1 265 1 237 1 138 1 22 1 89 1 271 1 295 1 
134 1 
186 2 142 1 94 2 191 1 299 3 345 1 56 1 7 1 302 1 303 1 146 1 305 2 199 2 148 2 310 1 353 1 16 2 17 1 206 2 264 2 265 1 108 1 208 1 109 1 211 1 64 1 26 1 165 5 215 1 166 2 66 2 277 1 124 1 33 2 225 2 73 1 227 4 128 1 371 1 35 1 177 1 231 2 80 1 131 2 232 5 284 1 43 2 236 1 86 1 181 1 46 2 378 1 333 6 293 1 185 1 
35 1 64 1 80 1 283 1 165 3 232 3 206 1 284 1 299 1 86 1 108 1 208 1 236 1 181 1 277 1 109 1 7 1 128 1 227 2 333 2 185 1 211 1 
64 1 186 1 165 3 299 1 277 1 7 1 227 3 128 1 35 1 80 1 177 1 283 1 232 3 16 1 284 1 236 1 208 1 108 1 86 1 181 1 109 1 333 1 185 1 211 1 
64 1 186 1 165 3 166 1 299 1 277 1 7 1 227 3 128 1 35 1 80 1 177 1 283 1 232 3 16 1 206 1 284 1 236 1 208 1 108 1 86 1 181 1 109 1 185 1 333 2 211 1 
186 5 142 1 188 1 337 1 94 2 299 3 7 1 146 1 304 1 199 1 148 2 353 1 16 4 153 1 206 4 108 1 208 1 109 1 211 1 64 1 165 5 215 1 166 4 66 2 277 1 124 1 128 1 227 6 371 1 35 1 80 1 177 5 231 2 283 1 232 5 284 1 285 1 43 2 86 1 236 1 181 1 46 1 333 7 185 1 
186 2 142 1 94 2 299 2 7 1 146 1 199 1 148 2 353 1 310 1 16 2 206 2 108 1 208 1 264 2 109 1 211 1 64 1 165 4 215 1 166 2 66 2 277 1 124 1 128 1 227 4 371 1 35 1 80 1 231 2 177 1 232 4 284 1 43 2 86 1 236 1 181 1 46 1 185 1 333 4 
64 1 186 1 188 1 142 1 94 2 215 1 165 4 337 1 166 2 66 2 299 2 277 1 124 1 7 1 146 1 227 4 128 1 304 1 371 1 199 1 148 2 35 1 177 1 231 2 80 1 353 1 232 4 16 2 206 2 284 1 43 2 236 1 208 1 108 1 86 1 181 1 46 1 109 1 333 4 185 1 211 1 
64 1 186 1 188 1 142 1 94 2 215 1 165 4 337 1 166 2 66 2 299 2 277 1 124 1 7 1 146 1 227 4 128 1 304 1 371 1 199 1 148 2 35 1 177 1 231 2 80 1 353 1 232 4 16 2 206 2 284 1 43 2 236 1 208 1 108 1 86 1 181 1 46 1 109 1 333 4 185 1 211 1 
35 1 64 1 80 1 165 2 232 2 85 1 284 1 86 1 108 1 208 1 236 1 181 1 277 1 109 1 7 1 128 1 227 2 185 1 211 1 
64 1 186 1 188 1 142 1 94 2 215 1 165 4 337 1 166 3 66 2 299 2 277 1 124 1 7 1 146 1 304 1 227 5 128 1 371 1 199 1 148 2 35 1 177 1 231 2 80 1 353 1 232 4 16 3 153 1 206 3 284 1 43 2 236 1 208 1 108 1 86 1 181 1 46 1 109 1 185 1 333 5 211 1 
64 1 186 1 188 1 142 1 94 2 215 1 165 4 337 1 166 3 66 2 299 2 277 1 124 1 7 1 146 1 304 1 227 5 128 1 371 1 199 1 148 2 35 1 177 1 231 2 80 1 353 1 232 4 16 3 153 1 206 3 284 1 43 2 236 1 208 1 108 1 86 1 181 1 46 1 109 1 185 1 333 5 211 1 
64 1 186 1 142 1 215 1 165 4 166 2 66 2 299 2 277 1 124 1 7 1 126 2 196 1 146 1 227 4 128 1 371 1 199 1 35 1 177 1 231 2 80 1 310 1 232 4 16 2 206 2 284 1 264 2 236 1 208 1 108 1 86 1 181 1 46 1 109 1 61 2 333 4 185 1 211 1 
246 6 49 1 121 2 251 1 72 1 224 1 279 2 10 1 198 3 78 1 256 3 309 1 150 1 133 1 203 1 107 1 328 1 207 1 155 1 180 1 314 1 110 2 88 1 242 2 273 1 296 1 
92 1 246 14 298 1 168 1 49 2 121 1 52 1 251 1 72 2 224 2 279 4 366 2 369 1 198 6 254 1 78 2 256 8 282 1 103 2 150 2 133 11 107 11 328 2 205 1 180 1 238 1 137 3 159 3 110 2 360 1 88 4 242 1 272 1 
214 1 246 2 298 1 191 1 49 1 121 1 170 1 123 1 54 1 251 1 277 1 192 1 33 1 301 1 72 1 224 1 225 1 279 2 369 1 198 1 305 1 78 1 326 1 256 1 308 1 80 2 102 1 131 1 38 1 17 1 328 1 265 1 312 1 313 1 109 2 88 1 272 1 293 1 
336 2 246 20 298 1 49 3 191 2 251 3 192 2 301 2 10 1 198 10 305 1 256 10 349 1 308 1 201 2 102 1 309 1 103 2 150 3 17 2 203 1 107 7 155 1 357 2 265 2 312 1 109 3 110 8 273 1 272 1 115 2 214 2 118 1 168 2 322 2 121 2 123 2 277 1 33 3 72 3 34 1 224 3 225 3 279 6 366 2 369 1 78 3 80 3 131 3 133 7 38 1 375 1 328 3 180 3 238 4 88 7 242 4 293 2 296 1 
334 2 245 1 246 2 118 1 191 2 49 2 341 1 277 1 251 2 223 1 33 7 72 2 224 2 225 8 279 4 303 1 369 1 198 1 305 2 78 2 307 1 256 1 308 1 81 1 80 1 102 1 131 8 262 1 38 1 17 2 328 2 265 2 44 1 330 1 314 1 109 1 378 1 272 1 293 3 
246 3 27 1 298 1 168 1 49 1 251 1 277 1 72 1 224 1 279 2 366 1 147 1 198 2 78 1 256 1 102 1 80 1 103 1 150 1 133 1 38 1 107 1 328 1 180 1 109 1 110 1 288 1 88 1 242 1 
246 2 150 1 133 1 107 1 328 1 49 1 238 1 251 1 314 1 110 1 72 1 224 1 88 1 279 2 366 1 182 1 78 1 256 2 
246 2 133 1 107 1 168 1 328 1 49 1 180 1 251 1 314 1 110 1 72 1 224 1 88 1 279 2 242 1 198 2 78 1 77 1 
246 4 103 1 150 1 133 2 107 2 168 1 328 1 49 1 180 1 238 1 251 1 314 1 110 2 72 1 224 1 88 2 279 2 366 1 242 1 198 2 78 1 256 2 
246 2 150 1 133 1 107 1 328 1 49 1 44 1 238 1 251 1 110 1 72 1 224 1 88 1 279 2 366 1 182 1 78 1 256 2 
246 2 133 1 107 1 168 1 328 1 49 1 44 1 180 1 251 1 110 1 72 1 224 1 88 1 279 2 242 1 198 2 78 1 77 1 
246 4 103 1 150 1 133 2 107 2 168 1 328 1 49 1 180 1 44 1 238 1 251 1 110 2 72 1 224 1 88 2 279 2 366 1 242 1 198 2 78 1 256 2 
246 4 103 1 150 1 133 2 107 2 168 1 328 1 49 1 180 1 238 1 251 1 110 2 72 1 224 1 88 2 279 2 366 1 242 1 198 2 78 1 256 2 
115 1 214 1 246 2 191 1 49 1 121 1 123 1 251 1 192 1 33 1 301 1 72 1 224 1 225 1 279 2 369 1 198 1 305 1 78 1 256 1 80 1 131 1 17 1 328 1 265 1 109 1 272 1 293 1 
214 1 246 2 191 1 49 1 121 1 123 1 251 1 33 1 72 1 224 1 225 1 74 1 279 2 369 1 198 1 305 1 78 1 256 1 80 1 131 1 17 1 328 1 265 1 209 1 109 1 184 1 272 1 293 1 
246 4 103 1 150 1 133 2 107 2 168 1 298 1 328 1 49 1 180 1 238 1 251 1 110 2 72 1 224 1 88 2 279 2 366 1 242 1 198 2 78 1 256 2 
115 1 214 1 246 4 168 1 191 1 322 1 49 1 123 1 251 1 192 1 33 1 301 1 72 1 224 1 225 1 279 2 366 1 198 2 78 1 256 2 81 1 80 1 131 1 150 1 103 1 133 2 17 1 107 2 328 1 180 1 265 1 238 1 109 1 110 2 88 2 242 1 293 1 
246 3 27 1 168 1 298 1 49 1 222 1 251 1 277 1 72 1 224 1 279 2 366 1 198 1 147 1 78 1 256 2 102 1 80 1 103 1 150 1 133 1 38 1 107 1 328 1 180 1 238 1 109 1 110 1 88 1 
246 41 1 4 190 1 168 4 169 1 55 1 144 1 344 1 72 3 224 3 10 1 279 6 366 4 11 2 198 21 76 1 78 3 256 20 202 1 282 3 309 1 178 1 103 4 150 5 203 1 328 3 205 1 155 1 235 1 377 1 180 5 238 4 239 1 137 4 159 3 110 8 267 1 290 1 139 1 242 4 273 1 296 1 63 1 
246 38 1 4 190 1 168 3 169 1 55 1 144 1 344 1 72 4 224 4 10 1 279 8 366 4 11 2 198 18 76 1 78 4 256 20 202 1 282 3 309 1 178 1 103 4 150 5 203 1 328 4 205 1 155 1 235 1 377 1 180 4 238 3 239 1 137 4 159 3 110 7 267 1 290 1 139 1 242 4 273 1 296 1 63 2 
246 52 1 4 190 1 168 7 169 1 52 2 55 1 144 1 344 1 72 2 224 2 10 1 279 4 366 7 11 1 198 25 78 2 256 27 202 1 282 2 309 1 178 1 103 7 150 8 203 1 328 2 205 2 155 1 235 1 377 1 180 8 238 7 137 4 159 4 110 14 267 1 290 1 139 1 242 7 273 1 296 1 63 1 
246 19 1 2 190 1 168 3 169 1 144 1 72 2 224 2 279 4 366 3 11 1 281 1 198 10 78 2 256 9 282 1 178 1 103 3 150 3 328 2 205 1 377 1 180 3 238 3 239 1 137 2 159 1 110 6 290 2 242 3 
246 26 1 4 190 2 168 2 169 1 55 1 144 1 344 1 72 3 224 3 279 6 366 3 11 2 198 12 78 3 256 14 202 1 282 2 178 1 103 3 150 3 328 3 235 1 180 2 377 1 238 2 137 2 159 2 110 4 267 1 290 1 139 1 242 2 63 2 
36 1 93 1 260 1 266 1 116 1 376 1 127 1 4 1 122 1 158 1 
24 1 163 1 
93 1 116 1 145 1 241 1 376 1 127 1 4 1 12 1 158 1 
141 1 362 1 
216 1 291 1 67 1 
348 1 36 1 186 1 93 1 260 1 351 2 165 1 116 1 232 1 376 1 4 1 158 1 342 1 365 1 266 1 286 1 346 1 127 1 
348 1 36 1 186 1 93 1 260 1 351 2 165 1 116 1 232 1 376 1 4 1 158 1 342 1 365 1 266 1 286 1 346 1 127 1 
348 1 36 1 186 1 93 1 260 1 351 2 165 1 116 1 232 1 376 1 4 1 158 1 342 1 365 1 266 1 286 1 346 1 127 1 
141 1 362 1 67 1 
141 1 362 1 67 1 
216 1 291 1 
216 1 291 1 67 1 
47 1 234 1 
24 1 93 1 335 1 163 1 165 1 116 1 47 1 4 1 121 1 342 1 365 1 98 1 277 2 194 1 57 1 127 1 200 1 80 2 102 2 351 1 232 1 38 2 376 1 234 1 158 1 329 1 109 2 
334 2 246 2 298 1 191 1 49 1 251 1 277 2 223 1 33 2 72 1 224 1 225 2 279 2 369 1 198 1 255 1 78 1 256 1 80 2 131 2 84 1 17 1 327 1 328 1 265 1 330 1 359 1 109 2 317 1 272 1 293 1 
129 1 81 1 131 2 15 1 118 1 321 1 355 1 191 1 156 1 18 1 265 1 237 1 100 2 32 1 33 2 225 2 22 1 89 1 113 1 
129 1 131 1 65 1 15 1 118 1 321 1 156 1 191 1 18 1 265 1 237 1 100 2 32 1 33 1 225 1 22 1 89 1 
79 1 131 1 17 1 355 1 191 1 18 1 221 1 265 1 33 1 378 1 225 1 303 1 305 1 293 1 
129 1 131 1 15 1 118 1 321 1 355 1 156 1 191 1 18 1 265 1 237 1 100 2 32 1 33 1 225 1 22 1 89 1 113 1 
324 1 
186 1 177 1 46 1 340 1 207 1 23 1 199 1 
186 2 142 1 215 1 94 1 165 1 299 1 124 1 146 1 199 1 148 1 177 1 353 1 232 1 43 1 264 1 46 1 333 1 
186 8 142 4 340 1 191 3 5 6 299 3 252 1 345 2 302 1 9 1 146 4 305 1 199 8 347 1 148 6 13 2 14 2 149 2 103 2 150 2 17 3 59 3 204 1 356 2 357 2 265 4 264 12 23 1 361 2 215 4 165 5 168 2 68 6 364 2 123 3 124 4 33 3 173 2 225 3 367 1 366 2 35 2 176 2 81 1 177 2 131 3 372 2 232 5 179 2 180 2 45 1 46 9 293 10 333 5 
186 5 142 2 165 1 215 2 168 2 68 5 364 2 220 1 5 5 299 1 55 1 124 2 344 1 345 1 302 1 366 2 146 2 199 5 148 3 282 1 177 2 14 1 103 2 150 2 232 1 152 1 235 1 264 6 180 2 137 1 159 1 46 8 267 1 139 1 333 1 
142 1 215 1 165 1 27 1 3 1 364 2 29 1 277 1 124 1 10 1 146 1 368 1 304 1 199 2 80 1 102 1 14 1 150 2 232 1 38 1 40 1 284 1 180 1 109 1 46 2 273 1 380 1 296 1 
177 1 186 1 142 1 215 1 340 1 124 1 46 1 146 1 23 1 199 1 
148 5 186 5 14 1 103 2 150 2 168 2 68 5 364 2 357 1 5 5 264 10 180 2 46 5 366 2 199 5 
299 1 186 1 177 1 165 1 232 1 333 1 
142 2 215 2 165 3 191 1 299 2 31 1 30 1 124 2 33 4 252 2 345 2 56 1 225 4 302 2 73 1 303 1 367 1 146 1 305 2 199 2 131 4 232 3 17 1 265 1 87 1 46 2 378 1 293 1 333 4 
115 1 214 1 246 1 27 2 191 1 49 1 121 1 123 1 277 2 251 1 192 1 33 1 301 1 72 1 224 1 225 1 279 2 198 1 305 1 78 1 80 3 102 2 131 1 38 2 17 1 40 1 328 1 265 1 109 3 272 1 293 1 379 1 
148 2 177 2 186 4 142 1 215 1 68 2 155 1 5 2 264 4 124 1 46 1 345 1 302 1 146 1 199 2 
6 1 376 1 158 1 
6 1 376 1 158 1 
36 1 210 1 47 1 376 1 158 1 
6 1 376 1 158 1 
268 1 376 1 158 1 
268 1 376 1 158 1 
268 1 376 1 158 1 
376 1 158 1 
93 1 116 1 
246 8 169 1 344 1 72 1 224 1 279 2 10 1 198 4 78 1 256 4 282 1 309 1 150 1 203 1 328 1 155 1 180 1 159 1 137 1 110 2 242 2 273 1 296 1 
246 11 48 1 169 1 344 1 72 2 224 2 10 1 279 4 366 1 198 5 78 2 256 6 282 1 309 1 103 1 150 2 203 1 328 2 205 1 155 1 180 1 238 1 137 2 159 1 110 3 242 2 273 1 296 1 
246 19 168 2 48 1 169 1 55 1 344 1 72 3 224 3 10 1 279 6 366 2 198 10 78 3 256 9 282 1 309 1 103 2 150 3 203 1 328 3 155 1 235 1 180 3 238 1 159 1 137 1 110 4 267 1 139 1 242 3 273 1 296 1 63 1 
246 17 168 1 48 1 169 1 55 1 344 1 72 3 224 3 10 1 279 6 366 2 198 7 78 3 256 10 282 1 309 1 103 2 150 3 203 1 328 3 155 1 235 1 180 2 238 2 159 1 137 1 110 5 267 1 139 1 242 3 273 1 296 1 63 1 
246 8 169 1 344 1 72 1 224 1 279 2 10 1 198 4 78 1 256 4 282 1 309 1 150 1 203 1 328 1 155 1 180 1 159 1 137 1 110 2 242 2 273 1 296 1 
246 12 168 2 169 1 55 1 344 1 72 1 224 1 279 2 366 2 198 6 78 1 256 6 282 1 103 2 150 2 328 1 235 1 180 2 238 1 159 1 137 1 110 2 267 1 139 1 242 1 
246 18 168 1 48 1 169 1 55 1 344 1 72 4 224 4 10 1 279 8 366 2 198 8 78 4 256 10 282 1 309 1 103 2 150 3 203 1 328 4 155 1 235 1 180 2 238 2 137 1 159 1 110 5 267 1 139 1 242 3 273 1 296 1 63 2 
246 16 168 2 169 1 55 1 344 1 72 4 224 4 279 8 366 3 198 7 78 4 256 9 282 1 103 3 150 3 328 4 235 1 180 2 238 3 137 1 239 1 159 1 110 6 267 1 139 1 242 3 63 2 
309 1 246 7 150 1 203 2 180 1 238 3 110 6 10 3 242 3 198 4 273 3 296 1 256 3 
246 18 168 1 169 1 55 1 344 1 72 4 224 4 10 1 279 8 366 2 198 8 78 4 256 10 282 1 309 1 103 2 150 3 203 1 328 4 155 1 235 1 180 2 238 1 137 1 239 1 159 1 110 4 267 1 139 1 242 3 273 1 296 1 63 2 
309 1 246 8 150 1 203 1 328 2 155 1 180 1 238 1 110 3 72 2 224 2 279 4 10 1 242 2 198 4 273 1 78 2 296 1 256 4 63 1 
309 1 246 6 150 1 203 1 155 1 207 1 180 1 110 2 10 1 242 2 198 3 273 1 296 1 256 3 
246 4 103 1 150 1 168 1 48 1 328 1 180 1 238 1 110 2 72 1 224 1 279 2 366 1 242 1 198 2 78 1 256 2 
282 1 246 7 103 1 150 1 168 1 205 1 180 1 238 1 137 2 159 1 110 2 366 1 242 1 198 4 256 3 
246 23 168 2 52 1 72 2 224 2 10 2 279 4 366 2 198 12 254 1 78 2 256 11 309 1 150 3 103 2 203 1 374 1 205 1 328 2 155 1 180 3 238 4 159 2 137 2 110 9 242 5 273 2 296 1 63 2 
137 1 246 1 198 1 
159 1 246 1 256 1 
246 6 103 1 150 1 168 1 328 1 48 1 357 1 180 1 238 1 110 3 72 1 224 1 279 2 366 1 242 2 198 3 78 1 256 3 
246 12 168 2 169 1 55 1 344 1 72 1 224 1 279 2 366 2 198 6 78 1 256 6 282 1 103 2 150 2 328 1 235 1 180 2 238 1 159 1 137 1 110 2 267 1 139 1 242 1 
246 6 150 1 180 1 238 1 110 2 10 1 242 1 198 3 273 1 296 1 256 3 
309 1 246 3 203 1 374 1 328 1 238 1 110 2 72 1 224 1 10 1 279 2 242 1 198 2 273 1 78 1 256 1 63 1 
246 10 150 2 328 1 169 1 29 1 180 2 238 2 110 5 72 1 224 1 279 2 10 2 242 3 198 5 273 2 78 1 256 5 296 1 
246 2 150 1 328 1 169 1 238 1 110 1 72 1 224 1 279 2 366 1 78 1 256 2 
246 4 103 1 150 1 168 1 328 1 169 1 180 1 238 1 110 2 72 1 224 1 279 2 366 1 242 1 198 2 78 1 256 2 
246 3 374 1 328 3 169 1 238 1 239 1 110 2 72 3 224 3 279 6 10 1 242 1 198 2 273 1 78 3 63 1 256 1 
246 34 168 3 48 1 169 1 72 5 224 5 10 3 279 10 366 3 198 18 78 5 256 16 282 1 309 1 103 3 150 5 203 1 374 1 263 1 328 5 205 1 155 1 180 5 238 5 137 4 239 1 159 3 110 12 112 1 331 1 242 7 273 3 296 2 63 2 
64 1 80 1 277 1 99 1 172 1 109 1 121 1 
230 1 64 1 258 1 80 1 143 1 96 1 121 1 99 1 277 1 172 1 109 1 270 1 
265 1 131 1 33 1 378 1 17 1 225 1 303 1 191 1 207 1 305 1 293 1 
308 1 102 1 80 2 214 1 131 1 38 1 17 1 191 1 121 1 123 1 265 1 277 1 109 2 33 1 301 1 225 1 305 1 293 1 
214 1 191 1 121 1 123 2 277 2 33 1 252 1 301 1 225 1 308 1 176 1 80 2 102 2 131 1 149 1 38 1 17 2 284 1 265 1 86 1 109 2 293 3 211 1 
214 1 191 1 121 1 123 2 277 2 33 2 252 1 225 2 308 1 176 1 80 2 102 2 131 2 149 1 38 1 17 2 284 1 265 1 86 1 240 1 109 2 184 1 293 3 211 1 
35 1 176 1 186 1 177 1 131 3 165 2 352 1 149 1 372 1 232 2 17 1 59 1 191 1 123 1 265 1 53 1 240 1 33 3 252 1 225 3 305 1 293 4 333 1 
35 1 176 1 186 1 177 1 131 3 165 2 149 1 372 1 232 2 179 1 17 1 59 1 191 1 123 1 265 1 240 1 33 3 252 1 225 3 305 1 293 4 333 1 
265 1 131 1 33 1 225 1 191 1 307 1 
274 1 334 1 213 1 81 1 245 1 131 7 262 1 118 1 17 2 191 2 341 1 123 1 265 3 45 1 250 1 223 1 33 6 225 7 305 2 293 3 307 1 
115 1 214 1 336 1 246 6 298 1 191 1 49 2 322 1 121 2 123 1 251 2 277 1 192 1 33 1 72 2 301 1 224 2 225 1 10 1 279 4 198 3 78 2 256 3 308 1 80 2 102 1 81 1 309 1 131 1 150 1 133 1 38 1 17 1 107 1 203 1 327 1 328 2 155 1 180 1 265 1 109 2 110 2 88 1 242 2 273 1 293 1 296 1 
186 1 142 2 215 2 165 3 340 1 299 1 98 1 33 1 124 2 225 1 173 1 367 1 146 2 305 1 199 1 35 1 177 1 131 1 372 1 232 3 179 1 59 1 356 1 46 1 23 1 293 2 333 2 361 1 
81 1 131 2 372 1 17 1 191 1 123 1 265 2 45 1 33 2 225 2 293 2 307 1 347 1 
81 1 131 4 17 1 191 1 265 1 240 1 33 4 378 1 225 4 303 1 292 1 305 1 293 1 
91 1 213 1 131 2 17 1 375 1 191 1 123 1 265 2 358 1 250 1 33 2 252 1 225 2 293 1 
265 1 129 1 100 1 32 1 131 1 33 1 15 1 225 1 191 1 305 1 
81 1 131 2 118 1 84 1 17 1 191 1 265 1 33 2 223 1 225 2 293 1 
81 1 131 5 262 1 17 2 191 2 341 1 265 2 33 4 223 1 252 1 378 1 225 5 303 1 292 1 305 1 293 3 
81 1 131 5 259 1 17 2 191 2 341 1 265 2 33 4 223 1 252 1 378 1 225 5 303 1 292 1 305 1 293 3 
308 1 102 1 80 2 214 1 131 1 38 1 17 1 191 1 121 1 123 1 265 1 277 1 109 2 33 1 225 1 184 1 305 1 293 1 
274 1 213 1 131 1 17 1 191 1 123 1 265 2 45 1 250 1 33 1 252 1 225 1 293 1 
315 1 119 1 50 1 121 1 62 1 
35 1 186 1 177 1 82 1 275 1 165 2 232 2 119 2 69 1 50 2 121 1 284 1 86 1 98 1 315 2 7 1 269 1 62 1 211 1 
80 1 50 1 277 1 359 1 109 1 315 1 317 1 62 1 255 1 
269 1 69 1 62 1 
25 1 71 1 157 1 207 1 
25 1 71 1 136 1 271 1 157 1 295 1 229 1 
138 1 233 1 295 1 
25 1 0 1 39 1 136 1 157 1 19 2 71 1 280 1 271 1 243 1 229 3 295 3 
25 1 58 1 71 1 106 1 136 1 271 1 157 1 295 2 229 2 
25 1 244 1 15 1 321 1 136 1 100 1 20 1 280 1 271 1 229 1 295 1 
25 1 136 1 271 1 280 1 157 1 295 1 229 1 
71 1 136 1 271 1 280 1 157 2 295 1 229 1 
25 1 187 1 261 1 136 2 28 1 157 1 280 1 271 2 229 2 295 2 
25 2 162 1 244 1 106 2 136 1 157 1 71 1 101 1 280 1 271 1 294 1 229 3 295 3 
25 1 129 1 15 1 321 1 106 1 136 1 157 1 249 1 71 1 100 2 22 1 280 1 271 1 229 2 295 2 
25 2 162 1 58 1 244 1 83 1 106 2 136 2 157 1 71 1 280 1 271 2 229 4 295 4 
25 1 71 1 136 1 271 1 280 1 157 1 295 1 229 1 
25 3 162 1 244 1 0 1 106 2 39 1 136 1 157 2 248 1 19 1 71 2 271 1 229 4 295 4 
25 1 71 1 151 1 106 1 217 1 136 1 370 1 271 1 280 1 157 1 295 2 229 2 
25 1 0 1 39 2 41 1 136 1 157 1 19 2 71 1 280 1 271 1 229 3 295 3 
25 2 316 2 195 1 332 1 
70 1 136 1 271 1 280 1 295 1 229 1 
25 1 71 1 106 1 101 1 136 1 271 1 280 1 157 1 295 2 229 2 
354 1 
25 1 71 1 136 1 271 1 280 1 157 1 295 1 229 1 
25 1 71 1 19 1 106 1 101 1 136 1 271 1 280 1 157 1 295 3 229 3 
25 1 162 1 244 1 248 1 
25 1 157 1 

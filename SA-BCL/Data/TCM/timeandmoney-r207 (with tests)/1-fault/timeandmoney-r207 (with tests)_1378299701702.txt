#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 334 (46,259,345) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 2 235 6 127 1 312 9 195 1 290 9 27 1 240 1 358 1 88 1 268 1 365 2 366 1 367 1 271 4 138 2 199 3 116 1 90 1 94 1 96 2 210 1 279 5 230 1 280 2 74 1 305 2 215 2 
76 2 235 6 127 1 312 9 195 1 290 9 27 1 240 1 358 1 88 1 268 1 365 2 366 1 367 1 271 4 138 2 199 3 116 1 90 1 94 1 96 2 210 1 279 5 230 1 280 2 74 1 305 2 215 2 
76 2 235 7 127 1 312 10 195 1 290 10 27 1 240 1 358 1 88 1 268 1 365 2 366 1 367 1 271 5 138 2 199 4 116 1 90 1 94 1 96 2 210 1 279 6 230 1 280 2 74 1 305 2 215 2 
76 2 235 4 127 1 312 7 195 1 290 7 27 1 240 1 358 1 88 1 268 1 365 2 366 1 367 1 271 3 138 2 199 2 116 1 90 1 94 1 96 2 210 1 279 4 280 1 74 1 305 2 215 2 
199 1 138 1 235 3 76 1 127 1 312 4 195 1 96 1 290 4 240 1 210 1 279 3 230 1 280 2 88 1 365 1 215 1 271 2 
35 1 138 1 90 1 127 1 312 2 195 1 96 1 290 2 279 1 240 1 362 1 305 1 365 1 192 1 367 1 215 1 
199 1 116 1 235 1 127 1 312 3 195 1 96 2 290 3 240 1 279 2 305 1 215 2 271 1 
235 7 76 1 127 1 312 9 195 1 290 9 27 1 240 1 88 1 365 1 271 4 199 3 138 1 116 1 157 1 343 1 96 2 279 5 210 1 280 2 230 1 74 1 305 1 215 2 
235 7 76 1 127 1 312 9 195 1 290 9 27 1 240 1 88 1 365 1 271 4 199 3 138 1 116 1 157 1 343 1 96 2 279 5 210 1 280 2 230 1 74 1 305 1 215 2 
198 1 219 1 160 1 
261 2 371 1 219 1 
37 1 349 2 187 1 203 2 128 2 293 2 170 2 110 2 
168 1 310 1 24 1 128 3 129 1 170 2 174 1 4 1 153 1 5 1 9 2 293 2 270 1 37 1 274 1 41 1 203 3 92 2 323 1 207 1 226 1 302 1 303 1 209 1 121 2 185 2 326 1 374 1 347 1 161 1 141 1 349 2 250 1 187 1 190 1 352 2 110 2 
156 1 37 1 349 1 360 1 361 1 203 1 128 1 293 1 170 1 110 1 
224 1 23 1 287 1 342 1 203 1 128 1 118 1 219 1 79 1 160 1 80 1 361 1 33 1 293 1 
224 1 23 1 287 2 203 1 128 1 118 2 170 1 219 1 160 1 80 1 349 1 361 1 33 1 293 1 110 1 
328 1 11 1 154 1 287 1 118 1 
255 1 328 1 11 1 287 2 169 1 118 2 219 1 160 1 
11 1 287 1 118 1 
156 1 37 1 287 1 203 1 118 1 128 1 170 1 328 1 360 1 349 1 361 1 293 1 110 1 319 1 
219 1 
63 1 255 1 328 1 11 1 287 2 118 2 219 1 160 1 
53 1 255 1 66 2 234 1 38 1 11 2 287 5 78 1 118 5 1 1 219 1 97 1 313 1 160 1 282 1 328 2 376 2 292 1 109 2 
187 1 198 1 
332 1 203 2 128 2 170 1 278 1 349 1 187 2 293 2 110 1 
120 1 214 1 98 1 
41 1 203 1 128 1 323 1 302 1 174 1 121 1 185 1 374 1 4 1 153 1 347 1 250 1 187 1 9 1 18 1 
41 1 203 2 323 1 128 2 2 1 302 1 174 1 121 1 185 1 374 1 347 1 153 1 4 1 58 1 250 1 349 1 9 1 293 1 214 1 110 1 
58 1 349 3 187 1 203 3 128 3 170 1 293 3 110 3 
156 1 349 1 361 1 203 1 128 1 293 1 110 1 
278 1 349 1 361 1 332 1 203 1 128 1 293 1 170 1 110 1 
168 1 23 1 332 1 310 1 287 1 24 1 128 4 2 1 170 2 174 1 80 1 153 1 4 1 5 1 58 1 361 1 9 1 33 1 293 3 270 1 340 1 37 1 137 1 224 1 41 1 203 4 92 2 323 1 118 1 302 1 226 1 303 1 209 1 121 1 185 1 326 1 374 1 347 1 161 1 250 1 349 3 187 1 352 1 110 3 
58 1 349 1 187 1 342 1 203 2 128 2 158 1 293 2 110 1 
272 1 224 1 23 1 332 1 287 1 203 3 118 1 128 3 2 1 170 1 219 1 80 1 58 2 349 3 361 1 33 1 293 3 110 3 340 1 
332 1 203 2 128 2 120 1 170 1 58 1 349 2 293 2 110 2 214 1 
41 1 203 1 128 1 323 1 302 1 121 1 185 1 174 1 374 1 4 1 153 1 347 1 250 1 187 1 9 1 
41 1 203 1 128 1 323 1 93 1 121 1 185 1 174 1 374 1 4 1 347 1 250 1 187 1 9 1 75 1 
168 1 331 1 310 1 150 1 24 1 82 1 5 1 10 1 267 1 296 1 370 1 92 2 120 2 303 2 227 1 209 1 98 2 326 1 252 1 190 2 352 4 381 1 214 2 164 1 
349 1 361 1 115 1 203 1 128 1 293 1 110 1 80 1 
332 1 217 1 342 1 203 5 128 5 158 1 2 1 170 1 314 1 58 2 349 4 187 1 293 5 110 4 
156 1 349 2 361 1 115 1 203 2 128 2 293 2 110 2 
46 1 294 1 
46 1 294 1 
334 1 259 1 
334 1 259 1 
334 1 259 1 
46 1 327 1 294 1 
46 1 327 1 294 1 
46 1 294 1 345 1 
46 1 334 1 259 1 294 1 
46 1 327 1 294 1 
46 1 106 1 294 1 
46 1 106 1 294 1 
46 1 106 1 294 1 
182 2 341 1 322 1 276 1 287 2 118 2 95 1 219 1 241 1 46 2 73 2 71 3 103 2 176 1 15 1 244 2 304 2 17 1 294 2 
287 1 0 1 128 2 289 1 85 1 244 1 264 1 294 1 293 2 65 1 223 1 182 1 203 2 118 1 95 1 345 1 46 1 71 1 73 1 349 2 103 1 187 1 107 1 110 2 
138 1 76 1 365 1 
138 1 362 1 365 1 
138 3 262 1 76 2 236 1 362 1 119 1 
138 2 262 1 76 1 362 1 194 1 119 1 
138 2 262 2 76 1 362 1 119 1 
307 1 255 1 354 2 166 1 331 1 287 5 150 1 55 1 219 2 313 3 261 3 84 2 85 1 264 1 10 1 66 1 223 1 38 1 11 1 371 1 118 5 160 1 281 1 163 2 282 2 328 4 142 1 376 1 14 1 148 1 109 1 381 1 
255 1 166 2 331 3 287 9 150 3 55 1 219 5 313 8 261 9 84 6 154 5 132 1 264 4 155 1 246 1 10 3 66 2 38 1 369 1 201 5 11 6 371 3 12 1 118 9 97 1 160 1 163 6 282 6 328 7 142 3 376 2 148 2 254 1 109 2 381 3 
307 1 166 1 354 1 331 1 287 3 150 1 219 3 313 3 261 4 84 2 264 1 10 1 66 1 371 2 118 3 97 1 160 1 328 2 282 2 163 2 376 1 142 1 14 1 148 1 109 1 381 1 
307 1 166 1 354 2 331 2 287 4 150 2 219 4 313 5 261 7 84 4 264 2 246 1 10 2 66 1 371 3 12 1 118 4 97 1 160 1 163 4 328 3 282 4 376 1 142 2 14 1 148 1 254 1 109 1 381 2 
198 1 232 1 174 1 
174 1 184 1 
67 1 
323 1 174 1 
347 1 213 1 364 1 323 1 232 2 174 3 
347 1 323 1 174 1 
269 1 174 1 
150 1 238 2 303 3 227 3 172 1 228 1 211 1 329 1 145 1 190 4 49 1 10 1 352 7 266 1 60 1 296 2 306 1 
150 1 238 2 303 3 227 3 172 1 228 1 211 1 329 1 145 1 190 4 49 1 10 1 352 7 266 1 60 1 296 2 306 1 
150 1 238 2 303 3 227 3 172 1 228 1 211 1 329 1 145 1 190 4 49 1 10 1 352 7 266 1 60 1 296 2 306 1 62 1 
331 3 308 1 310 1 150 4 24 1 238 3 171 1 172 2 5 1 336 3 337 1 10 4 266 5 60 1 296 5 222 4 225 1 139 1 92 2 303 15 227 10 209 1 228 1 211 2 102 1 329 1 142 3 145 2 231 1 190 16 49 1 352 31 306 2 381 3 
167 1 308 1 310 2 150 1 24 2 238 2 172 1 5 2 10 1 266 1 60 1 296 3 92 4 208 1 303 4 227 4 209 2 228 1 211 1 145 1 190 5 49 1 352 9 306 1 
285 1 216 1 235 1 76 1 236 1 127 1 312 2 195 1 290 2 240 1 315 1 197 1 9 1 362 1 365 1 138 2 41 1 91 1 300 1 96 1 99 1 185 1 121 1 374 1 279 1 47 1 375 1 305 1 233 1 215 1 
285 1 216 1 76 1 235 2 236 1 127 1 312 3 290 3 240 1 315 1 197 1 9 1 362 1 365 1 135 1 138 2 41 1 300 1 96 1 99 1 185 1 121 1 374 1 279 1 100 1 375 1 147 1 305 1 233 1 215 1 
216 1 235 2 76 1 236 1 127 1 312 2 290 2 240 1 315 1 197 1 9 1 362 1 365 1 135 1 138 2 41 1 300 1 99 1 185 1 121 1 374 1 279 1 375 1 147 1 305 1 
353 1 22 1 216 2 41 1 323 1 312 1 159 1 96 1 344 1 174 1 290 1 121 1 185 1 99 2 374 1 100 1 4 1 315 2 29 1 9 1 305 2 61 1 215 1 
285 1 216 1 76 1 236 1 312 1 195 1 290 1 315 1 197 1 9 1 362 1 365 1 135 1 138 2 41 1 91 1 300 1 96 1 99 1 185 1 121 1 374 1 375 1 305 1 233 1 215 1 
180 1 
287 5 4 2 6 2 9 2 293 1 338 4 66 1 11 6 342 1 203 1 118 5 205 1 68 2 247 1 160 1 121 2 348 1 70 1 16 1 255 3 353 1 23 1 128 1 26 2 219 2 260 1 79 1 313 2 174 1 81 2 80 1 261 2 28 1 316 2 29 1 361 1 131 1 177 1 265 1 33 1 34 1 136 2 38 1 224 1 371 2 41 1 323 1 42 1 185 2 374 1 282 2 376 1 148 1 378 2 109 1 
255 1 23 1 287 3 128 1 79 1 80 1 81 1 28 1 361 1 177 1 33 1 293 1 338 2 63 1 224 1 11 2 203 1 342 1 118 3 247 1 70 1 16 1 
255 1 23 1 287 3 128 1 79 1 219 1 80 1 28 1 6 1 361 1 177 1 33 1 293 1 338 3 63 1 224 1 11 1 203 1 342 1 118 3 247 1 160 1 70 1 16 1 
255 1 23 1 287 3 128 1 26 1 79 1 219 1 80 1 81 1 28 1 6 1 361 1 177 1 33 1 293 1 338 3 63 1 224 1 11 2 203 1 342 1 118 3 247 1 160 1 70 1 16 1 
287 5 6 4 338 6 293 1 63 1 66 1 11 7 203 1 342 1 118 5 247 1 68 2 160 5 70 1 16 1 255 3 23 1 128 1 26 4 79 1 219 5 313 1 81 4 80 1 28 1 316 2 175 1 361 1 131 1 177 1 265 1 33 1 136 2 224 1 38 1 321 1 371 2 372 1 186 1 101 1 282 1 376 1 378 2 109 1 
255 2 23 1 287 4 128 1 26 2 219 2 79 1 313 1 81 2 80 1 261 2 28 1 316 2 6 2 361 1 131 1 177 1 265 1 33 1 293 1 338 4 34 1 136 2 66 1 38 1 224 1 11 4 371 2 342 1 203 1 118 4 68 2 247 1 160 1 70 1 282 1 376 1 16 1 378 2 109 1 
255 2 23 1 287 4 128 1 26 2 219 1 79 1 313 1 81 2 80 1 28 1 316 2 6 2 131 1 361 1 177 1 265 1 33 1 293 1 338 4 136 2 66 1 224 1 38 1 11 4 371 2 321 1 203 1 342 1 118 4 68 2 247 1 372 1 160 1 70 1 101 1 282 1 376 1 16 1 378 2 109 1 
255 2 23 1 287 4 128 1 26 2 219 1 79 1 313 1 81 2 80 1 28 1 316 2 6 2 131 1 361 1 177 1 265 1 33 1 293 1 338 4 136 2 66 1 224 1 38 1 11 4 371 2 321 1 203 1 342 1 118 4 68 2 247 1 372 1 160 1 70 1 101 1 282 1 376 1 16 1 378 2 109 1 
255 2 23 1 77 2 287 4 128 1 26 2 219 1 79 1 313 1 81 2 80 1 261 2 242 1 28 1 316 2 6 2 361 1 177 1 265 1 33 1 293 1 338 4 66 1 224 1 38 1 200 1 11 4 321 1 203 1 342 1 118 4 68 2 247 1 160 1 70 1 282 1 376 1 144 1 330 2 16 1 109 1 
255 2 23 1 287 4 128 1 26 3 219 1 79 1 313 1 80 1 81 3 28 1 316 2 175 1 6 3 131 1 361 1 177 1 265 1 33 1 293 1 338 5 136 2 66 1 38 1 224 1 11 5 371 2 321 1 203 1 342 1 118 4 68 2 247 1 372 1 160 1 70 1 101 1 282 1 376 1 16 1 378 2 109 1 
255 2 23 1 287 4 128 1 26 3 219 1 79 1 313 1 80 1 81 3 28 1 316 2 175 1 6 3 131 1 361 1 177 1 265 1 33 1 293 1 338 5 136 2 66 1 38 1 224 1 11 5 371 2 321 1 203 1 342 1 118 4 68 2 247 1 372 1 160 1 70 1 101 1 282 1 376 1 16 1 378 2 109 1 
287 4 6 2 338 4 293 1 66 1 200 1 11 4 203 1 342 1 118 4 247 1 68 2 160 1 70 1 16 1 255 2 23 1 77 2 128 1 26 2 79 1 219 1 313 1 80 1 81 2 261 2 28 1 316 2 361 1 177 1 265 1 33 1 34 1 224 1 38 1 282 1 376 1 330 2 109 1 
168 1 310 1 150 1 24 1 238 1 5 1 198 1 10 1 60 1 296 2 370 1 92 2 120 1 227 2 303 3 209 1 98 1 326 1 228 1 145 1 187 2 190 3 49 1 352 6 214 1 306 1 
168 2 112 1 331 2 310 2 288 1 150 1 24 2 171 1 5 2 336 3 10 2 266 1 270 1 296 1 222 3 274 1 39 1 225 1 92 4 69 1 120 4 227 2 303 6 209 2 98 11 326 1 142 2 187 1 283 1 190 8 352 14 214 11 381 1 
168 1 310 1 128 2 24 1 2 1 174 1 153 1 4 1 58 1 5 1 9 1 293 1 270 1 273 1 274 1 41 1 203 2 323 1 92 2 302 1 120 1 303 1 185 1 121 1 209 1 374 1 326 1 347 1 212 1 250 1 349 1 187 1 283 1 190 1 352 2 18 1 380 1 110 1 
331 2 150 3 238 1 2 1 196 1 4 1 291 2 153 2 5 3 58 1 9 3 245 2 10 3 60 1 293 1 296 4 202 2 203 3 302 2 120 7 303 10 121 3 209 3 346 2 347 2 72 1 349 1 250 2 352 20 306 1 214 7 168 3 310 3 24 3 128 3 174 2 266 4 135 1 270 1 274 1 41 2 92 6 323 2 226 2 227 8 185 3 98 7 228 1 326 3 374 2 142 2 187 2 145 1 283 1 190 10 49 1 108 1 110 1 381 2 
353 1 168 2 310 2 128 1 24 2 174 3 4 2 58 1 5 2 29 1 9 8 317 1 133 1 135 1 293 1 270 1 274 1 370 1 140 1 41 2 203 1 92 4 323 2 206 1 207 2 303 1 185 8 121 7 209 2 374 2 326 2 47 1 162 1 48 1 349 1 105 1 190 1 352 2 110 1 
168 1 331 1 332 1 310 1 150 1 24 1 128 1 170 1 5 1 10 1 293 1 296 1 203 1 92 2 248 1 120 1 227 1 303 2 98 1 209 1 326 1 349 1 142 1 283 1 190 1 352 3 214 1 110 1 381 1 
370 1 168 1 331 1 310 1 92 2 24 1 120 1 227 1 98 1 209 1 326 1 82 1 5 1 190 2 352 2 10 1 266 1 214 1 
370 1 168 1 310 1 150 1 92 2 24 1 120 1 227 1 303 2 98 1 209 1 326 1 5 1 352 2 267 1 296 1 214 1 381 1 
168 1 331 1 310 1 150 1 24 1 5 1 10 1 266 1 296 1 370 1 92 2 120 2 227 2 303 2 209 1 98 2 326 1 142 1 190 2 352 4 214 2 381 1 
168 1 331 1 310 1 92 2 24 1 120 1 227 1 98 1 209 1 326 1 82 1 5 1 190 2 317 1 352 2 10 1 266 1 214 1 
168 1 310 1 150 1 92 2 24 1 120 1 227 1 303 2 98 1 209 1 326 1 5 1 317 1 352 2 267 1 296 1 214 1 381 1 
168 1 331 1 310 1 150 1 24 1 5 1 317 1 10 1 266 1 296 1 92 2 120 2 227 2 303 2 209 1 98 2 326 1 142 1 190 2 352 4 214 2 381 1 
168 1 331 1 310 1 150 1 24 1 5 1 10 1 266 1 296 1 92 2 120 2 227 2 303 2 209 1 98 2 326 1 142 1 190 2 352 4 214 2 381 1 
168 1 310 1 128 1 24 1 174 1 153 1 4 1 5 1 9 1 270 1 274 1 41 1 203 1 323 1 92 2 302 1 226 1 303 1 185 1 121 1 209 1 374 1 326 1 347 1 250 1 187 1 190 1 352 2 
168 1 310 1 128 1 24 1 174 1 4 1 5 1 9 1 270 1 274 1 41 1 203 1 323 1 92 2 93 1 277 1 303 1 185 1 121 1 209 1 374 1 326 1 347 1 250 1 187 1 190 1 352 2 75 1 
168 1 331 1 310 1 150 1 24 1 5 1 10 1 266 1 296 1 92 2 120 2 227 2 303 2 209 1 98 2 326 1 142 1 283 1 190 2 352 4 214 2 381 1 
168 1 331 1 310 1 150 1 128 1 24 1 174 1 153 1 291 1 5 1 9 1 10 1 266 1 296 1 41 1 203 1 323 1 92 2 120 2 302 1 226 1 303 2 227 2 98 2 185 1 121 1 209 1 374 1 326 1 347 1 47 1 250 1 142 1 190 2 352 4 381 1 214 2 
168 1 331 1 332 1 310 1 150 1 24 1 128 1 170 1 5 1 10 1 266 1 293 1 368 1 203 1 92 2 120 1 303 1 227 1 209 1 98 1 326 1 349 1 142 1 283 1 190 2 352 3 381 1 110 1 214 1 
54 1 286 1 331 4 150 5 238 1 5 3 336 3 10 5 60 1 296 4 339 1 303 21 209 3 123 1 13 1 352 41 306 1 167 1 308 1 257 1 310 3 24 3 171 3 357 1 359 1 263 1 266 4 89 1 222 4 225 1 275 2 92 6 324 4 227 8 45 1 228 1 142 4 145 1 190 20 377 1 49 1 381 4 284 1 
286 1 54 1 167 1 308 2 331 4 257 1 310 4 150 4 238 1 24 4 171 3 357 1 5 4 263 1 359 1 336 3 10 5 266 3 60 1 339 1 89 1 296 4 222 4 225 1 275 2 92 8 324 4 45 1 303 18 227 7 209 4 228 1 123 1 142 4 145 1 13 1 190 20 49 1 377 1 352 38 306 1 284 1 381 3 
54 1 167 1 308 1 112 2 331 7 257 1 310 2 150 8 238 1 24 2 171 2 357 1 5 2 359 1 336 4 10 8 266 7 60 1 339 1 89 1 296 7 222 4 225 2 275 1 92 4 324 4 45 1 303 25 227 14 209 2 228 1 123 1 142 7 145 1 13 1 190 27 49 1 377 1 352 52 306 1 284 1 381 7 
286 1 54 1 167 1 331 3 310 2 258 1 150 3 24 2 171 1 5 2 336 1 10 3 266 3 339 1 296 3 222 2 225 1 275 1 92 4 324 2 45 1 303 10 227 6 209 2 123 2 142 3 13 1 190 9 352 19 381 3 
54 1 167 1 308 2 331 3 257 1 310 3 150 2 24 3 171 2 357 1 5 3 359 1 336 2 10 3 266 2 339 1 89 1 296 2 222 2 275 2 92 6 324 4 227 4 303 12 45 1 209 3 123 1 142 3 13 2 190 14 377 1 352 26 284 1 381 2 
46 1 73 1 182 1 103 1 15 1 244 1 322 1 17 1 191 1 294 1 
0 1 345 1 
46 1 73 1 182 1 103 1 244 1 189 1 333 1 294 1 173 1 
182 1 341 1 322 1 287 1 118 1 95 1 219 1 241 1 46 1 73 1 71 2 103 1 176 1 15 1 244 1 304 1 17 1 294 1 
182 1 341 1 322 1 287 1 118 1 95 1 219 1 241 1 46 1 73 1 71 2 103 1 176 1 15 1 244 1 304 1 17 1 294 1 
182 1 341 1 322 1 287 1 118 1 95 1 219 1 241 1 46 1 73 1 71 2 103 1 176 1 15 1 244 1 304 1 17 1 294 1 
327 1 21 1 114 1 
327 1 21 1 114 1 
143 1 106 1 
21 1 143 1 106 1 
65 1 289 1 
287 1 0 1 128 2 289 1 85 1 176 1 244 1 264 1 294 1 293 2 65 1 223 1 298 1 182 1 203 2 118 1 345 1 46 1 73 1 71 1 328 1 103 1 349 2 187 1 304 1 107 1 110 2 
327 1 114 1 
21 1 143 1 106 1 
168 1 309 1 310 1 128 2 24 1 174 1 83 1 5 1 59 1 9 2 293 2 270 1 274 1 117 1 41 1 203 2 323 1 92 2 207 2 303 1 185 2 209 1 121 2 374 1 326 1 162 1 48 1 283 1 253 1 190 1 352 2 
138 2 285 1 216 1 76 1 181 1 236 1 41 1 300 1 121 2 185 2 374 1 373 1 47 1 197 1 104 1 362 1 9 2 365 1 135 1 
138 2 285 1 216 1 76 1 236 1 41 1 204 1 300 1 121 1 185 1 374 1 197 1 104 1 362 1 9 1 365 1 135 1 
216 1 353 1 181 1 41 1 323 1 159 1 174 1 121 1 185 1 374 1 4 1 29 1 9 1 179 1 
138 2 285 1 216 1 76 1 181 1 236 1 41 1 300 1 121 1 185 1 373 1 374 1 197 1 104 1 362 1 9 1 365 1 135 1 
146 1 
234 1 282 1 198 1 292 1 219 1 313 1 160 1 
255 1 66 1 38 1 11 1 371 1 287 1 118 1 219 2 160 1 313 1 261 1 282 1 376 1 131 1 378 1 109 1 136 1 
234 1 331 2 287 5 150 2 151 1 239 2 57 2 4 1 243 2 9 3 10 2 292 1 64 1 66 4 11 5 299 2 202 2 118 5 249 2 160 2 121 3 348 1 347 3 163 6 124 2 255 3 219 8 313 9 174 10 261 12 84 6 30 2 87 1 364 1 32 2 33 2 269 2 38 4 41 4 371 6 323 3 184 3 185 3 374 3 47 1 282 8 376 4 142 2 188 1 148 2 232 2 379 1 109 4 381 2 
255 1 331 2 149 1 257 1 287 1 150 2 237 1 171 1 219 5 313 8 57 1 261 6 359 1 84 5 30 2 336 1 10 2 89 1 222 1 66 2 38 2 11 1 371 3 118 1 160 2 348 1 163 5 282 5 376 2 142 2 377 1 148 1 109 2 284 1 381 2 
20 1 287 1 150 1 128 1 170 1 313 2 57 1 30 2 360 1 361 1 10 2 293 1 319 1 156 1 37 1 66 1 38 1 203 1 118 1 228 1 101 1 282 2 376 1 349 1 145 1 109 1 306 1 110 1 
66 1 38 1 234 1 219 1 160 1 313 1 282 1 376 1 292 1 109 1 
331 2 371 5 202 1 150 2 219 5 313 5 57 1 261 10 84 5 282 5 163 5 30 2 142 2 10 2 381 2 
255 1 11 1 287 1 118 1 219 1 160 1 
255 2 353 1 218 1 126 1 287 3 151 1 260 1 174 1 313 2 4 2 29 1 9 4 66 2 38 1 11 4 41 1 323 1 42 1 118 3 97 1 185 4 121 4 374 1 348 2 282 2 376 2 188 2 148 2 109 2 
168 1 310 1 24 1 128 3 170 2 174 1 4 1 153 1 5 1 9 1 293 2 270 1 37 1 41 1 203 3 92 2 323 1 226 1 302 1 303 1 185 1 121 1 209 1 374 1 326 1 347 1 161 1 349 2 250 1 187 1 352 1 110 2 
66 1 38 1 371 2 238 1 219 4 313 1 160 2 261 4 348 1 84 2 163 2 282 2 376 1 148 1 109 1 
182 1 244 1 152 1 
182 1 244 1 152 1 
182 1 15 1 244 1 355 1 289 1 
182 1 244 1 152 1 
182 1 244 1 31 1 
182 1 244 1 31 1 
182 1 244 1 31 1 
182 1 244 1 
46 1 294 1 
167 1 310 1 150 1 238 1 24 1 171 1 5 1 336 1 10 1 60 1 296 2 222 1 92 2 303 4 227 2 209 1 228 1 145 1 190 4 49 1 352 8 284 1 306 1 
167 1 331 1 310 2 150 1 238 1 24 2 171 1 5 2 336 1 10 2 266 1 60 1 296 2 222 2 225 1 92 4 303 5 227 3 209 2 228 1 142 1 145 1 251 1 190 6 49 1 352 11 306 1 284 1 
167 1 331 2 308 1 257 1 310 3 150 3 238 1 24 3 171 1 5 3 359 1 336 1 10 3 266 1 60 1 89 1 296 3 222 1 92 6 303 10 227 4 209 3 228 1 142 2 145 1 251 1 190 9 49 1 377 1 352 19 306 1 284 1 381 2 
167 1 308 1 331 2 257 1 310 3 150 2 238 1 24 3 171 1 5 3 359 1 336 1 10 3 266 2 60 1 296 3 89 1 222 1 92 6 303 7 227 5 209 3 228 1 142 2 145 1 251 1 190 10 49 1 377 1 352 17 306 1 284 1 381 1 
167 1 310 1 150 1 238 1 24 1 171 1 5 1 336 1 10 1 60 1 296 2 222 1 92 2 303 4 227 2 209 1 228 1 145 1 190 4 49 1 352 8 284 1 306 1 
167 1 331 2 257 1 310 1 150 2 24 1 171 1 5 1 359 1 336 1 10 2 266 1 296 1 89 1 222 1 92 2 303 6 227 2 209 1 142 2 190 6 377 1 352 12 284 1 381 2 
167 1 331 2 308 2 257 1 310 4 150 2 238 1 24 4 171 1 5 4 359 1 336 1 10 3 266 2 60 1 89 1 296 3 222 1 92 8 303 8 227 5 209 4 228 1 142 2 145 1 251 1 190 10 49 1 377 1 352 18 306 1 284 1 381 1 
286 1 167 1 331 3 308 2 257 1 310 4 150 2 24 4 171 1 5 4 359 1 336 1 10 3 266 3 89 1 296 3 222 1 92 8 303 7 227 6 209 4 142 3 190 9 377 1 352 16 284 1 381 2 
150 1 303 4 227 6 228 1 145 3 190 3 49 2 352 7 10 1 266 3 60 1 306 3 296 3 
286 1 167 1 331 2 308 2 257 1 310 4 150 2 238 1 24 4 171 1 5 4 359 1 336 1 10 3 266 1 60 1 89 1 296 3 222 1 92 8 303 8 227 4 209 4 228 1 142 2 145 1 190 10 49 1 377 1 352 18 306 1 284 1 381 1 
308 1 310 2 150 1 238 1 92 4 24 2 303 4 227 3 209 2 228 1 5 2 145 1 190 4 49 1 10 1 352 8 266 1 60 1 296 2 306 1 
150 1 238 1 303 3 227 2 228 1 145 1 198 1 190 3 49 1 10 1 352 6 60 1 306 1 296 2 
331 1 310 1 150 1 92 2 24 1 303 2 227 2 209 1 5 1 142 1 251 1 190 2 10 1 352 4 266 1 296 1 381 1 
331 1 225 1 150 1 171 1 303 4 227 2 142 1 336 1 190 3 352 7 10 1 266 1 296 1 381 1 222 2 
331 2 112 1 308 2 310 2 288 1 150 3 238 1 24 2 5 2 336 2 10 3 266 4 60 1 296 5 222 2 225 1 92 4 227 9 303 12 209 2 325 1 228 1 142 2 145 2 190 11 49 1 352 23 306 2 381 2 
352 1 303 1 222 1 
336 1 190 1 352 1 
331 1 310 1 202 1 150 1 24 1 92 2 303 3 227 3 209 1 5 1 142 1 251 1 190 3 352 6 10 1 266 1 381 1 296 2 
167 1 331 2 257 1 310 1 150 2 24 1 171 1 5 1 359 1 336 1 10 2 266 1 296 1 89 1 222 1 92 2 303 6 227 2 209 1 142 2 190 6 377 1 352 12 284 1 381 2 
150 1 303 3 227 2 228 1 145 1 190 3 10 1 352 6 266 1 306 1 296 1 
308 1 310 1 92 2 24 1 227 2 303 2 325 1 209 1 5 1 145 1 190 1 49 1 352 3 266 1 60 1 296 1 306 1 
20 1 167 1 310 1 150 2 24 1 92 2 227 5 303 5 209 1 228 1 5 1 145 2 190 5 352 10 10 2 266 2 306 2 296 3 
167 1 331 1 310 1 92 2 24 1 227 1 209 1 5 1 190 2 10 1 352 2 266 1 
167 1 331 1 310 1 150 1 92 2 24 1 303 2 227 2 209 1 5 1 142 1 190 2 10 1 352 4 266 1 296 1 381 1 
286 1 167 1 308 1 310 3 92 6 24 3 303 2 227 2 325 1 209 3 5 3 145 1 190 1 352 3 266 1 306 1 296 1 
286 1 167 1 308 2 331 3 310 5 150 5 238 1 24 5 171 1 5 5 336 3 10 5 266 5 60 1 296 7 222 4 139 1 225 1 92 10 303 18 227 12 325 1 209 5 228 2 102 1 142 3 145 3 251 1 231 1 190 16 49 1 352 34 306 3 381 3 
36 1 187 1 203 1 342 1 128 1 158 1 293 1 
36 1 256 1 342 1 203 1 128 1 301 1 158 1 122 1 187 1 295 1 293 1 19 1 
4 1 353 1 29 1 41 1 9 1 198 1 323 1 174 1 185 1 121 1 374 1 
41 1 203 2 323 1 128 2 174 1 121 1 185 1 374 1 347 1 4 1 153 1 58 1 250 1 349 1 187 1 9 1 293 1 110 1 
128 2 174 3 80 1 153 1 58 1 361 1 9 1 293 2 269 1 224 1 41 1 203 2 323 2 185 1 121 1 374 1 347 2 349 2 250 1 187 1 124 1 188 1 110 1 
128 2 174 3 80 1 58 1 361 1 9 2 293 2 269 1 224 1 41 1 203 2 43 1 323 2 93 1 185 2 121 2 374 1 347 2 349 2 250 1 187 1 124 1 188 1 110 1 
287 2 219 1 174 4 4 1 130 1 9 3 33 1 221 1 269 1 11 1 41 1 43 1 118 2 323 1 184 1 185 3 121 3 160 1 374 1 347 1 124 1 188 1 232 1 
11 1 41 1 287 2 43 1 323 1 118 2 249 1 219 1 160 1 121 3 185 3 184 1 174 4 374 1 4 1 347 1 124 1 9 3 188 1 33 1 232 1 269 1 
105 1 41 1 9 1 185 1 121 1 374 1 
297 1 140 1 41 3 323 2 206 1 207 1 121 6 185 7 174 3 229 1 374 2 4 2 347 1 47 1 162 1 105 1 8 1 9 7 364 1 133 1 135 1 
150 1 238 1 153 1 291 1 5 2 58 1 9 1 10 1 293 1 60 1 296 2 203 2 120 1 302 1 303 3 121 1 209 2 346 1 347 1 349 1 250 1 253 1 352 6 306 1 214 1 168 2 310 2 24 2 128 2 174 1 41 1 92 4 323 1 226 1 227 2 185 1 98 1 326 2 374 1 228 1 47 1 283 1 145 1 187 2 190 3 49 1 110 1 
255 1 234 1 287 3 151 1 239 1 219 1 313 1 174 2 4 1 243 1 9 1 292 1 33 1 66 2 38 2 11 2 299 1 118 3 249 1 160 1 185 1 121 1 184 1 282 1 328 1 376 2 232 1 109 2 
64 1 41 2 323 1 121 2 185 2 174 2 374 1 347 1 47 1 105 1 9 2 364 1 232 1 
353 1 320 1 41 1 43 1 323 1 121 4 185 4 174 1 374 1 4 1 47 1 29 1 9 4 
41 2 323 1 113 1 196 1 121 2 185 2 174 1 229 1 374 1 347 1 8 1 9 2 188 1 51 1 
4 1 138 1 362 1 41 1 9 1 300 1 365 1 185 1 121 1 374 1 
309 1 41 1 323 1 121 2 185 2 174 1 374 1 47 1 162 1 9 2 135 1 
353 1 320 1 140 1 41 2 323 2 206 1 121 4 185 5 174 3 374 2 4 1 47 1 29 1 162 1 9 5 188 1 
353 1 111 1 320 1 41 2 323 2 206 1 121 4 185 5 174 3 374 2 4 1 47 1 29 1 162 1 9 5 188 1 
41 1 203 2 323 1 128 2 93 1 174 1 121 1 185 1 374 1 347 1 4 1 58 1 250 1 349 1 187 1 9 1 293 1 110 1 
297 1 41 2 323 1 121 1 185 1 174 1 229 1 374 1 347 1 8 1 9 1 188 1 364 1 
187 1 125 1 134 1 311 1 56 1 
224 1 23 1 287 2 311 1 118 2 219 1 160 1 56 2 80 1 328 1 86 1 187 1 361 1 125 2 134 2 33 1 318 1 52 1 340 1 
83 1 59 1 117 1 125 1 203 1 128 1 311 1 293 1 56 1 
86 1 311 1 52 1 
279 1 240 1 198 1 127 1 
279 1 240 1 127 1 312 1 96 1 290 1 215 1 
315 1 305 1 290 1 
165 1 127 1 312 3 195 1 96 1 356 1 290 3 279 1 240 1 178 1 215 1 367 2 
279 1 240 1 280 1 235 1 127 1 312 2 96 1 290 2 215 1 
279 1 210 1 138 1 76 1 365 1 312 1 96 1 195 1 290 1 271 1 215 1 
279 1 127 1 312 1 96 1 195 1 290 1 215 1 
240 1 127 2 312 1 96 1 195 1 290 1 215 1 
279 1 335 1 183 1 350 1 127 1 312 2 96 2 195 1 290 2 215 2 
199 1 235 2 127 1 312 3 195 1 96 1 290 3 27 1 240 1 279 2 74 1 215 1 271 1 
138 2 76 1 235 1 236 1 127 1 25 1 312 2 195 1 96 1 290 2 279 1 240 1 362 1 365 1 215 1 
199 1 235 2 127 1 312 4 195 1 96 2 290 4 240 1 279 2 230 1 280 1 215 2 271 1 
279 1 240 1 127 1 312 1 96 1 195 1 290 1 215 1 
165 1 199 1 235 2 127 2 312 4 96 1 290 4 240 2 279 3 351 1 178 1 367 1 215 1 271 1 
235 1 127 1 343 1 44 1 312 2 195 1 96 1 290 2 279 1 240 1 7 1 215 1 
165 1 127 1 312 3 195 1 96 1 290 3 279 1 240 1 50 1 178 2 215 1 367 2 
279 2 193 1 40 2 220 1 
363 1 312 1 96 1 195 1 290 1 215 1 
279 1 240 1 74 1 235 1 127 1 312 2 96 1 195 1 290 2 215 1 
3 1 
279 1 240 1 127 1 312 1 96 1 195 1 290 1 215 1 
279 1 240 1 74 1 235 1 127 1 312 3 96 1 195 1 290 3 367 1 215 1 
279 1 199 1 351 1 271 1 
279 1 127 1 

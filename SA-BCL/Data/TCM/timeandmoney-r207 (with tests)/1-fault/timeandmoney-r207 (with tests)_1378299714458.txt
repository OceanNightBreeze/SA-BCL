#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
328 1 192 6 358 1 294 2 81 1 360 1 330 9 2 1 106 2 107 1 277 1 83 2 152 2 7 1 85 5 132 1 34 2 301 2 206 4 345 1 37 2 167 9 304 3 211 1 289 1 142 1 69 1 292 1 
328 1 192 6 358 1 294 2 81 1 360 1 330 9 2 1 106 2 107 1 277 1 83 2 152 2 7 1 85 5 132 1 34 2 301 2 206 4 345 1 37 2 167 9 304 3 211 1 289 1 142 1 69 1 292 1 
328 1 192 7 358 1 294 2 81 1 360 1 330 10 2 1 106 2 107 1 277 1 83 2 152 2 7 1 85 6 132 1 34 2 301 2 206 5 345 1 37 2 167 10 304 4 211 1 289 1 142 1 69 1 292 1 
328 1 192 4 358 1 294 2 81 1 360 1 330 7 2 1 106 2 107 1 277 1 83 2 152 2 85 4 132 1 34 2 301 2 206 3 345 1 37 1 167 7 304 2 211 1 289 1 142 1 69 1 292 1 
192 3 328 1 301 1 206 2 294 1 37 2 360 1 330 4 106 1 304 1 83 1 167 4 289 1 152 1 7 1 142 1 85 3 132 1 
60 1 301 1 294 1 358 1 360 1 330 2 167 2 83 1 289 1 152 1 85 1 246 1 231 1 132 1 69 1 34 1 
192 1 206 1 294 2 360 1 330 3 167 3 304 1 289 1 152 2 85 2 132 1 34 1 292 1 
192 7 328 1 294 2 27 1 360 1 330 9 2 1 106 1 83 1 152 2 7 1 85 5 132 1 34 1 301 1 206 4 345 1 37 2 304 3 167 9 289 1 142 1 325 1 292 1 
192 7 328 1 294 2 27 1 360 1 330 9 2 1 106 1 83 1 152 2 7 1 85 5 132 1 34 1 301 1 206 4 345 1 37 2 304 3 167 9 289 1 142 1 325 1 292 1 
164 1 280 1 187 1 
164 1 238 2 366 1 
215 2 185 2 363 2 155 2 222 1 133 1 303 2 346 2 
191 1 173 1 123 1 222 1 103 2 104 1 28 1 332 1 278 2 258 1 31 1 363 2 155 2 133 1 281 1 58 1 15 1 266 1 162 1 185 3 163 1 62 1 303 2 287 2 39 2 137 1 322 1 346 2 214 1 44 2 67 1 215 3 245 1 21 1 98 1 247 1 382 1 
343 1 215 1 185 1 363 1 311 1 155 1 222 1 303 1 11 1 346 1 
185 1 164 1 311 1 221 1 312 1 303 1 1 1 189 1 279 1 215 1 118 1 53 1 280 1 87 1 
185 1 164 1 311 1 312 1 303 1 1 1 346 1 279 1 363 1 215 1 53 2 118 1 155 1 280 1 87 2 
178 1 96 1 53 1 357 1 87 1 
96 1 164 1 53 2 45 1 357 1 280 1 87 2 183 1 
96 1 53 1 87 1 
343 1 185 1 311 1 357 1 222 1 303 1 276 1 346 1 363 1 215 1 53 1 155 1 87 1 11 1 
164 1 
96 1 164 1 53 2 357 1 280 1 125 1 87 2 183 1 
72 2 194 1 205 2 274 1 164 1 357 2 209 2 126 1 82 1 127 1 335 1 296 1 96 2 52 1 53 5 130 1 280 1 87 5 183 1 
15 1 266 1 162 1 185 2 123 1 103 1 303 1 287 1 332 1 258 1 278 1 31 1 214 1 42 1 363 1 215 2 317 1 155 1 247 1 9 1 
133 1 187 1 
185 2 303 2 314 1 346 1 215 2 363 1 169 1 155 1 133 2 
317 1 223 1 146 1 
15 1 266 1 185 1 162 1 123 1 103 1 287 1 332 1 278 1 258 1 212 1 31 1 214 1 215 1 247 1 133 1 
42 1 215 3 185 3 363 3 155 3 133 1 303 3 346 1 
343 1 215 1 185 1 363 1 311 1 155 1 303 1 
215 1 185 1 363 1 311 1 155 1 169 1 303 1 314 1 346 1 
191 1 311 1 123 1 312 1 222 1 103 1 104 1 1 1 225 1 332 1 258 1 278 1 31 1 279 1 363 3 53 1 155 3 9 1 133 1 87 1 281 1 58 1 15 1 266 1 162 1 185 4 163 1 240 1 62 1 303 3 287 1 39 2 137 1 346 2 214 1 42 1 44 1 67 1 215 4 118 1 169 1 21 1 98 1 247 1 
42 1 189 1 219 1 215 2 185 2 363 1 155 1 133 1 303 2 
185 3 164 1 311 1 312 1 240 1 303 3 1 1 346 1 42 2 279 1 363 3 215 3 53 1 118 1 169 1 155 3 143 1 9 1 87 1 
185 2 303 2 346 1 42 1 363 2 215 2 169 1 155 2 317 1 146 1 
266 1 15 1 185 1 162 1 123 1 103 1 287 1 332 1 278 1 258 1 31 1 214 1 215 1 247 1 133 1 
101 1 266 1 61 1 15 1 185 1 162 1 311 1 123 1 103 1 287 1 332 1 278 1 258 1 214 1 215 1 133 1 381 1 
173 2 25 1 223 2 224 1 177 1 3 1 317 2 318 1 281 1 111 1 58 1 91 1 163 1 373 1 239 1 186 1 39 2 137 1 67 1 44 4 98 1 21 2 253 1 146 2 
279 1 215 1 185 1 363 1 311 1 77 1 155 1 303 1 
219 1 185 5 303 5 346 1 42 2 349 1 189 1 363 4 215 5 155 4 169 1 216 1 9 1 133 1 
343 1 215 2 185 2 363 2 77 1 311 1 155 2 303 2 
114 1 17 1 
114 1 17 1 
313 1 217 1 
313 1 217 1 
313 1 217 1 
271 1 114 1 17 1 
271 1 114 1 17 1 
339 1 114 1 17 1 
316 1 174 1 313 1 114 2 217 1 17 2 
271 1 114 1 17 1 
293 1 114 1 17 1 
293 1 114 1 17 1 
293 1 114 1 17 1 
174 1 75 2 79 1 164 1 356 1 36 1 38 1 242 2 321 3 114 2 17 2 139 2 32 1 5 2 43 1 68 2 53 2 87 2 88 1 
75 1 356 1 5 1 363 2 339 1 53 1 155 2 131 1 133 1 87 1 365 1 185 2 303 2 321 1 242 1 114 1 17 1 243 1 41 1 215 2 68 1 141 1 380 1 23 1 
301 1 106 1 83 1 
301 1 231 1 83 1 
218 1 301 3 329 1 231 1 375 1 106 2 
301 2 329 1 231 1 375 1 106 1 257 1 
301 2 329 1 231 1 375 2 106 1 
353 1 72 1 194 1 274 3 357 4 50 2 335 2 338 1 53 5 153 1 280 1 87 5 365 1 366 1 111 1 183 1 368 1 205 1 112 1 164 2 373 1 238 3 209 1 186 1 138 1 243 1 96 1 291 2 23 1 351 1 253 1 171 2 
353 1 72 2 194 1 220 1 274 8 357 7 50 6 29 5 335 6 178 5 338 2 130 1 53 9 153 2 54 1 280 1 87 9 366 3 111 3 183 1 160 1 370 1 205 2 164 5 373 3 238 9 208 1 209 2 186 3 138 3 96 6 291 6 23 4 120 1 253 3 
72 1 274 3 357 2 50 2 335 2 338 1 53 3 130 1 153 1 280 1 87 3 366 2 111 1 205 1 164 3 112 1 373 1 238 4 209 1 186 1 138 1 291 2 23 1 351 1 253 1 171 1 
72 1 220 1 274 5 357 3 50 4 335 4 338 1 53 4 130 1 153 1 280 1 87 4 366 3 111 2 160 1 205 1 164 4 112 1 373 2 238 7 208 1 209 1 186 2 138 2 291 4 23 2 351 1 253 2 171 2 
15 1 344 1 187 1 
15 1 298 1 
352 1 
15 1 162 1 
15 3 344 2 162 1 302 1 123 1 136 1 
15 1 162 1 123 1 
15 1 259 1 
326 1 48 1 173 4 355 1 26 1 373 1 186 1 177 3 297 1 8 2 129 1 44 7 154 1 21 3 181 1 145 1 318 2 
326 1 48 1 173 4 355 1 26 1 373 1 186 1 177 3 297 1 8 2 129 1 44 7 154 1 21 3 181 1 145 1 318 2 
326 1 48 1 173 4 355 1 26 1 373 1 186 1 177 3 84 1 297 1 8 2 129 1 44 7 154 1 21 3 181 1 145 1 318 2 
326 2 48 2 173 16 355 1 26 2 196 1 197 1 177 10 151 1 336 4 297 2 129 1 8 3 154 1 181 5 318 5 111 3 281 1 59 1 163 1 373 4 319 3 186 4 39 2 137 1 138 3 116 1 44 31 98 1 21 15 22 1 145 1 253 3 100 1 
326 1 48 1 173 5 163 2 26 1 373 1 186 1 177 4 137 2 39 4 116 1 297 1 129 1 8 2 44 9 154 1 20 1 21 4 98 2 181 1 249 1 145 1 318 3 281 2 
218 1 192 1 103 1 294 1 80 1 360 1 330 2 106 1 83 1 295 1 278 1 51 1 334 1 258 1 152 1 337 1 228 1 85 1 231 1 132 1 109 1 34 1 301 2 371 1 287 1 167 2 168 1 289 1 140 1 214 1 
218 1 192 2 103 1 294 1 80 1 360 1 330 3 106 1 83 1 295 1 278 1 51 1 334 1 258 1 152 1 180 1 85 1 231 1 132 1 109 1 34 1 301 2 371 1 16 1 287 1 94 1 167 3 168 1 140 1 214 1 
218 1 192 2 103 1 80 1 360 1 330 2 106 1 295 1 83 1 278 1 334 1 258 1 85 1 231 1 132 1 109 1 34 1 301 2 371 1 16 1 287 1 94 1 167 2 168 1 214 1 
49 1 103 1 294 1 124 1 330 1 258 1 278 1 152 1 180 1 109 2 34 2 266 1 15 1 236 1 162 1 371 2 374 1 287 1 166 1 167 1 168 2 214 1 19 1 
218 1 103 1 294 1 80 1 330 1 106 1 83 1 295 1 278 1 51 1 334 1 258 1 152 1 337 1 231 1 109 1 34 1 301 2 371 1 287 1 94 1 167 1 168 1 289 1 140 1 214 1 
6 1 
150 2 194 1 195 2 103 2 1 1 256 2 199 1 258 1 335 2 338 1 53 5 156 2 12 4 266 2 15 1 162 1 205 1 164 2 209 1 303 1 269 2 214 1 19 1 215 1 118 1 119 1 70 1 354 1 121 1 72 1 274 2 311 1 221 1 312 1 124 1 359 1 278 2 279 1 230 1 280 1 182 1 87 5 366 2 90 2 183 3 234 1 369 1 185 1 285 1 372 1 238 2 287 2 96 6 189 1 47 2 
354 1 311 1 195 1 221 1 312 1 1 1 359 1 125 1 199 1 279 1 53 3 87 3 12 2 183 1 185 1 285 1 303 1 96 2 189 1 215 1 118 1 70 1 
354 1 311 1 221 1 312 1 1 1 359 1 125 1 199 1 279 1 53 3 156 1 280 1 87 3 12 3 183 1 185 1 285 1 164 1 303 1 96 1 189 1 215 1 118 1 70 1 
354 1 311 1 195 1 221 1 312 1 125 1 1 1 359 1 256 1 199 1 279 1 53 3 156 1 280 1 87 3 12 3 183 1 185 1 285 1 164 1 303 1 96 2 189 1 215 1 118 1 70 1 
354 1 150 2 72 1 194 1 274 1 311 1 195 4 175 1 221 1 312 1 125 1 1 1 359 1 256 4 199 1 335 1 201 1 279 1 53 5 340 1 156 4 182 1 280 5 87 5 366 2 12 6 299 1 90 2 183 3 369 1 205 1 185 1 164 5 285 1 92 1 209 1 303 1 269 2 96 7 189 1 215 1 118 1 70 1 47 2 
150 2 194 1 195 2 1 1 256 2 199 1 335 1 53 4 156 2 12 4 205 1 164 2 303 1 209 1 269 2 215 1 118 1 70 1 119 1 354 1 72 1 311 1 274 1 312 1 221 1 359 1 279 1 182 1 280 1 87 4 366 2 90 2 183 2 369 1 185 1 285 1 238 2 96 4 189 1 47 2 
354 1 150 2 72 1 194 1 195 2 274 1 311 1 221 1 312 1 175 1 1 1 359 1 256 2 199 1 335 1 279 1 53 4 156 2 340 1 280 1 182 1 87 4 366 2 12 4 299 1 183 2 90 2 369 1 185 1 205 1 164 1 285 1 303 1 209 1 269 2 96 4 189 1 215 1 118 1 70 1 47 2 
354 1 150 2 72 1 194 1 195 2 274 1 311 1 221 1 312 1 175 1 1 1 359 1 256 2 199 1 335 1 279 1 53 4 156 2 340 1 280 1 182 1 87 4 366 2 12 4 299 1 183 2 90 2 369 1 185 1 205 1 164 1 285 1 303 1 209 1 269 2 96 4 189 1 215 1 118 1 70 1 47 2 
354 1 72 1 122 1 194 1 195 2 274 1 311 1 221 1 312 1 1 1 359 1 176 2 256 2 199 1 335 1 279 1 53 4 156 2 340 1 280 1 182 1 87 4 12 4 183 2 90 2 185 1 205 1 164 1 285 1 238 2 286 2 303 1 209 1 269 2 96 4 189 1 215 1 118 1 170 1 70 1 147 1 
354 1 150 2 72 1 194 1 274 1 311 1 195 3 221 1 312 1 175 1 1 1 359 1 256 3 199 1 335 1 201 1 279 1 53 4 340 1 156 3 280 1 182 1 87 4 366 2 12 5 299 1 183 2 90 2 369 1 205 1 185 1 164 1 285 1 209 1 303 1 269 2 96 5 189 1 215 1 118 1 70 1 47 2 
354 1 150 2 72 1 194 1 274 1 311 1 195 3 221 1 312 1 175 1 1 1 359 1 256 3 199 1 335 1 201 1 279 1 53 4 340 1 156 3 280 1 182 1 87 4 366 2 12 5 299 1 183 2 90 2 369 1 205 1 185 1 164 1 285 1 209 1 303 1 269 2 96 5 189 1 215 1 118 1 70 1 47 2 
194 1 195 2 1 1 256 2 199 1 335 1 53 4 156 2 12 4 205 1 164 1 303 1 209 1 269 2 215 1 118 1 70 1 119 1 354 1 72 1 311 1 274 1 312 1 221 1 359 1 176 2 279 1 182 1 280 1 87 4 90 2 183 2 185 1 285 1 286 2 238 2 96 4 189 1 147 1 
91 1 58 1 173 3 326 1 48 1 163 1 373 1 223 1 186 1 187 1 177 2 137 1 39 2 8 1 129 1 44 6 67 1 154 1 317 1 21 3 98 1 133 2 145 1 318 2 146 1 281 1 
173 8 0 1 73 1 104 1 223 11 177 2 28 1 336 3 317 11 229 1 181 1 133 1 318 1 281 2 111 2 59 1 58 1 163 2 373 1 319 3 186 2 39 4 137 2 138 2 67 2 44 14 350 1 309 1 21 6 98 2 22 1 146 4 253 1 
71 1 173 1 73 1 123 1 103 1 104 1 332 1 128 1 28 1 258 1 278 1 31 1 363 1 155 1 86 1 9 1 133 1 281 1 58 1 15 1 266 1 162 1 185 2 163 1 287 1 303 1 137 1 39 2 212 1 214 1 42 1 67 1 215 2 44 2 98 1 21 1 247 1 146 1 
191 2 326 1 48 1 148 2 103 3 104 1 332 2 258 2 8 1 154 1 155 1 9 1 111 2 58 3 266 1 15 2 162 2 163 3 303 1 66 2 214 2 215 3 67 3 21 10 173 10 73 1 123 2 223 7 177 8 28 1 278 3 31 2 129 1 363 1 317 7 181 4 133 2 35 1 318 4 281 3 185 3 373 3 320 1 287 3 186 3 94 1 377 1 39 6 137 3 138 2 42 1 379 2 44 20 98 3 247 2 46 2 145 1 146 7 253 2 
173 1 103 7 124 1 104 1 28 1 258 2 278 8 363 1 228 1 155 1 157 1 110 1 281 2 91 1 58 2 15 3 266 2 235 1 161 1 185 1 162 2 163 2 303 1 287 8 210 1 94 1 39 4 137 2 322 2 214 2 42 1 19 1 215 1 67 2 44 2 97 1 98 2 21 1 99 1 
173 1 73 1 78 1 223 1 177 1 363 1 317 1 155 1 318 1 281 1 111 1 58 1 185 1 163 1 373 1 303 1 186 1 39 2 137 1 346 1 138 1 67 1 215 1 44 3 169 1 98 1 21 2 146 1 253 1 
91 1 58 1 25 1 173 2 163 1 223 1 186 1 177 1 137 1 39 2 44 2 67 1 317 1 98 1 181 1 146 1 281 1 111 1 
91 1 58 1 163 1 373 1 223 1 177 1 137 1 39 2 224 1 44 2 67 1 317 1 98 1 21 2 318 1 146 1 253 1 281 1 
173 2 223 2 177 2 317 2 181 1 318 1 111 1 281 1 58 1 91 1 163 1 373 1 186 1 39 2 137 1 138 1 67 1 44 4 98 1 21 2 146 2 253 1 
58 1 25 1 173 2 163 1 223 1 186 1 177 1 137 1 39 2 44 2 67 1 97 1 317 1 98 1 181 1 146 1 281 1 111 1 
58 1 163 1 373 1 223 1 177 1 137 1 39 2 224 1 44 2 67 1 97 1 317 1 98 1 21 2 318 1 146 1 253 1 281 1 
173 2 223 2 177 2 317 2 181 1 318 1 111 1 281 1 58 1 163 1 373 1 186 1 39 2 137 1 138 1 67 1 44 4 97 1 98 1 21 2 146 2 253 1 
173 2 223 2 177 2 317 2 181 1 318 1 111 1 281 1 58 1 163 1 373 1 186 1 39 2 137 1 138 1 44 4 67 1 98 1 21 2 146 2 253 1 
191 1 173 1 123 1 103 1 104 1 28 1 332 1 258 1 278 1 31 1 133 1 281 1 58 1 266 1 15 1 162 1 185 1 163 1 287 1 137 1 39 2 214 1 44 2 215 1 67 1 98 1 21 1 247 1 
101 1 311 1 123 1 103 1 104 1 332 1 258 1 278 1 133 1 281 1 58 1 61 1 266 1 15 1 162 1 185 1 163 1 287 1 137 1 39 2 214 1 117 1 44 1 215 1 67 1 98 1 21 1 381 1 
173 2 73 1 223 2 177 2 317 2 181 1 318 1 111 1 281 1 58 1 163 1 373 1 186 1 39 2 137 1 138 1 67 1 44 4 98 1 21 2 146 2 253 1 
191 1 173 2 123 1 103 1 223 2 177 2 332 1 258 1 278 1 31 1 228 1 317 2 181 1 318 1 111 1 281 1 58 1 15 1 162 1 185 1 163 1 373 1 287 1 186 1 137 1 39 2 138 1 66 1 214 1 44 4 215 1 67 1 21 2 98 1 247 1 253 1 146 2 
173 2 73 1 223 1 177 1 363 1 155 1 317 1 181 1 281 1 111 1 58 1 185 1 163 1 373 1 303 1 186 1 39 2 137 1 346 1 138 1 188 1 67 1 215 1 44 3 169 1 21 1 98 1 253 1 146 1 
173 9 74 2 177 6 260 1 336 2 203 1 181 3 263 1 318 3 281 2 111 3 59 1 282 1 267 2 163 2 373 3 319 1 207 1 186 3 376 1 39 4 137 2 138 3 348 1 44 19 98 2 21 10 22 1 249 1 253 3 
173 14 74 1 275 1 177 4 315 1 260 1 336 2 181 2 318 2 264 1 281 3 111 3 282 1 59 2 14 1 267 4 163 3 373 2 319 2 207 2 186 3 376 1 39 6 137 3 138 3 95 1 348 2 115 1 116 2 44 26 21 12 98 3 249 1 253 2 
48 1 326 1 336 4 260 1 8 1 154 1 263 1 264 1 111 4 59 3 14 1 267 4 163 3 207 2 65 1 348 1 115 1 116 1 21 21 22 1 173 20 74 1 275 1 177 8 315 1 129 1 181 4 318 4 281 3 282 1 373 5 319 3 186 5 137 3 39 6 376 1 138 4 95 1 44 41 98 3 249 1 145 1 253 4 
326 1 48 1 173 20 74 1 275 1 177 7 315 1 260 1 336 4 8 1 129 1 154 1 181 3 263 1 318 4 264 1 281 4 111 4 14 1 59 3 282 1 267 4 163 4 373 4 319 3 207 2 186 5 65 1 376 1 39 8 137 4 138 4 95 1 115 1 348 1 116 2 44 38 98 4 21 18 22 1 249 1 145 1 253 3 
326 1 48 1 173 27 0 2 74 1 275 1 177 14 315 1 260 1 336 4 8 1 129 1 154 1 181 7 318 7 264 1 281 2 111 7 14 1 59 2 282 1 267 4 163 2 373 8 319 4 207 1 186 8 376 1 39 4 137 2 138 7 95 1 115 1 348 1 116 1 44 52 98 2 21 25 22 2 249 1 145 1 253 7 
5 1 174 1 75 1 79 1 68 1 88 1 272 1 242 1 114 1 17 1 
339 1 380 1 
367 1 290 1 5 1 75 1 68 1 144 1 242 1 114 1 17 1 
174 1 75 1 79 1 164 1 356 1 36 1 38 1 242 1 321 2 114 1 17 1 139 1 5 1 43 1 53 1 68 1 87 1 88 1 
174 1 75 1 79 1 164 1 356 1 36 1 38 1 242 1 321 2 114 1 17 1 139 1 5 1 43 1 53 1 68 1 87 1 88 1 
174 1 75 1 79 1 164 1 356 1 36 1 38 1 242 1 321 2 114 1 17 1 139 1 5 1 43 1 53 1 68 1 87 1 88 1 
316 1 271 1 331 1 
316 1 271 1 331 1 
293 1 56 1 
316 1 293 1 56 1 
41 1 141 1 
75 1 357 1 5 1 339 1 363 2 53 1 155 2 131 1 133 1 87 1 134 1 365 1 185 2 36 1 303 2 242 1 321 1 114 1 17 1 243 1 139 1 41 1 215 2 68 1 141 1 380 1 23 1 
271 1 331 1 
316 1 293 1 56 1 
173 1 73 1 103 2 104 1 4 1 28 1 258 1 278 2 30 1 261 1 281 1 58 1 15 1 162 1 185 2 163 1 287 2 303 2 210 1 137 1 39 2 322 2 214 1 18 1 67 1 215 2 44 2 98 1 21 1 252 1 99 1 
218 1 301 2 103 2 63 1 80 1 287 2 106 1 94 1 83 1 258 1 278 2 51 1 334 1 214 1 244 1 362 1 228 1 231 1 109 1 
218 1 301 2 103 1 80 1 287 1 106 1 94 1 83 1 278 1 51 1 334 1 258 1 214 1 362 1 231 1 232 1 109 1 
15 1 266 1 162 1 374 1 103 1 124 1 287 1 258 1 278 1 214 1 244 1 19 1 109 1 265 1 
218 1 301 2 103 1 63 1 80 1 287 1 106 1 94 1 83 1 258 1 278 1 51 1 334 1 214 1 244 1 362 1 231 1 109 1 
270 1 
335 1 52 1 274 1 164 1 280 1 126 1 187 1 
369 1 150 1 72 1 194 1 205 1 164 2 274 1 238 1 209 1 335 1 96 1 53 1 280 1 87 1 47 1 366 1 183 1 
102 2 194 4 103 3 255 1 50 6 200 2 258 4 335 8 259 2 338 2 52 1 53 5 298 3 111 2 342 1 15 10 266 1 162 3 205 4 344 2 164 8 302 1 209 4 165 2 113 2 305 2 214 3 72 4 274 9 123 3 312 2 126 1 278 3 228 1 280 2 87 5 366 6 89 2 183 3 234 1 184 1 238 12 373 2 241 1 287 3 186 2 378 2 138 2 323 1 96 5 250 2 46 2 291 6 253 2 
72 2 194 2 275 1 274 8 50 5 315 1 335 5 336 1 338 1 53 1 262 1 280 2 87 1 158 1 366 3 264 1 89 1 111 2 183 1 234 1 59 1 14 1 205 2 164 5 238 6 373 2 319 1 209 2 186 2 378 2 138 2 115 1 96 1 291 5 253 2 
326 1 48 1 72 1 194 1 311 1 274 2 222 1 276 1 335 2 363 1 53 1 155 1 87 1 11 1 89 1 299 1 283 1 343 1 185 1 205 1 373 1 209 1 303 1 186 2 378 2 346 1 215 1 145 1 
72 1 194 1 205 1 164 1 274 1 209 1 126 1 335 1 52 1 280 1 
164 5 274 5 238 10 373 2 186 2 378 2 50 5 138 2 335 5 46 1 291 5 366 5 253 2 89 1 111 2 
96 1 164 1 53 1 280 1 87 1 183 1 
273 1 121 1 72 2 194 1 274 2 103 4 124 1 258 1 278 4 335 2 338 2 130 1 53 3 87 3 13 1 183 2 234 2 15 1 266 2 184 2 162 1 205 2 372 1 241 1 209 2 287 4 214 1 96 4 19 1 
191 1 222 1 123 1 103 1 104 1 332 1 278 1 258 1 31 1 363 2 155 2 133 1 281 1 58 1 266 1 15 1 185 3 162 1 163 1 62 1 287 1 303 2 39 2 137 1 346 2 214 1 44 1 215 3 67 1 21 1 98 1 247 1 
234 1 72 1 194 1 205 1 274 1 164 4 238 4 209 1 50 2 335 2 338 1 8 1 291 2 280 2 366 2 
5 1 149 1 68 1 
5 1 149 1 68 1 
5 1 79 1 141 1 68 1 248 1 
5 1 149 1 68 1 
5 1 68 1 57 1 
5 1 68 1 57 1 
5 1 68 1 57 1 
5 1 68 1 
114 1 17 1 
173 4 48 1 326 1 163 2 373 1 186 1 177 3 137 2 39 4 116 1 8 1 129 1 44 8 154 1 21 4 98 2 181 1 145 1 318 2 281 2 
48 1 326 1 173 3 373 1 187 1 186 1 177 2 8 1 129 1 44 6 154 1 21 3 145 1 318 2 
173 2 163 1 373 1 186 1 177 2 137 1 39 2 138 1 44 4 21 2 98 1 181 1 341 1 318 1 253 1 281 1 111 1 
59 1 173 3 373 1 319 1 186 1 177 2 138 1 336 2 44 7 21 4 22 1 181 1 318 1 253 1 111 1 
326 2 48 2 173 11 0 1 177 9 336 2 8 1 129 1 154 1 181 4 318 5 111 2 281 2 163 2 373 3 319 2 186 3 137 2 39 4 138 2 116 2 44 23 309 1 21 12 98 2 22 1 145 1 253 2 24 1 
336 1 44 1 21 1 
173 1 44 1 319 1 
173 3 163 1 373 1 186 1 39 2 137 1 177 3 138 1 44 6 98 1 21 3 181 1 46 1 341 1 318 2 253 1 281 1 111 1 
173 6 275 1 177 2 315 1 336 1 181 1 318 1 264 1 281 1 111 2 59 1 14 1 163 1 373 2 319 1 186 2 39 2 137 1 138 2 115 1 44 12 21 6 98 1 249 1 253 2 
173 3 48 1 326 1 373 1 186 1 177 2 44 6 21 3 181 1 145 1 318 1 
173 1 326 1 48 1 163 1 177 2 137 1 39 2 116 1 129 1 44 3 154 1 21 2 98 1 181 1 318 1 24 1 281 1 
283 1 48 2 326 2 173 5 163 1 373 2 186 2 39 2 137 1 177 5 44 10 98 1 21 5 181 2 249 1 145 1 318 3 281 1 
173 2 163 1 186 1 137 1 39 2 177 1 44 2 98 1 181 1 249 1 281 1 111 1 
173 2 163 1 373 1 186 1 177 2 137 1 39 2 138 1 44 4 21 2 98 1 181 1 249 1 318 1 253 1 281 1 111 1 
48 1 326 1 173 1 163 3 137 3 39 6 177 2 116 1 44 3 21 2 98 3 181 1 249 1 263 1 318 1 24 1 281 3 
326 3 48 3 173 16 197 1 177 12 151 1 336 4 8 1 129 1 154 1 181 5 263 1 341 1 318 7 281 5 111 3 59 1 163 5 373 5 319 3 186 5 39 10 137 5 138 3 116 2 44 34 21 18 98 5 22 1 249 1 145 2 253 3 24 1 100 1 
173 4 48 1 326 1 177 2 315 1 336 1 8 1 129 1 154 1 318 2 281 1 59 1 163 1 373 1 319 1 186 1 39 2 137 1 44 8 21 4 98 1 249 1 145 1 
326 1 48 1 173 6 177 3 315 1 336 2 8 1 129 1 154 1 181 1 341 1 318 2 281 2 111 1 59 1 163 2 373 1 319 1 186 2 39 4 137 2 138 1 44 11 21 5 98 2 22 1 249 1 145 1 
326 1 48 1 173 9 275 1 177 4 315 1 336 1 8 1 129 1 154 1 181 1 341 1 318 3 264 1 281 3 111 2 59 1 14 1 163 3 373 3 319 1 186 3 39 6 137 3 138 2 115 1 116 1 44 19 21 10 98 3 249 1 145 1 253 2 
326 1 48 1 173 10 275 1 177 5 315 1 336 1 8 1 129 1 154 1 181 2 341 1 318 3 264 1 281 3 111 2 59 1 14 1 163 3 373 2 319 1 186 3 39 6 137 3 138 2 115 1 116 1 44 17 21 7 98 3 249 1 145 1 253 1 
173 4 48 1 326 1 177 2 315 1 336 1 8 1 129 1 154 1 318 2 281 1 59 1 163 1 373 1 319 1 186 1 39 2 137 1 44 8 21 4 98 1 249 1 145 1 
173 6 275 1 177 2 315 1 336 1 181 1 318 1 264 1 281 1 111 2 59 1 14 1 163 1 373 2 319 1 186 2 39 2 137 1 138 2 115 1 44 12 21 6 98 1 249 1 253 2 
326 1 48 1 173 10 275 1 177 5 315 1 336 1 8 1 129 1 154 1 181 2 341 1 318 3 264 1 281 4 111 2 59 1 14 1 163 4 373 2 319 1 186 3 39 8 137 4 138 2 115 1 116 2 44 18 21 8 98 4 249 1 145 1 253 1 
173 9 275 1 177 6 315 1 336 1 181 3 263 1 318 3 264 1 281 4 111 3 59 1 14 1 163 4 373 2 319 1 186 3 39 8 137 4 138 3 115 1 116 2 44 16 21 7 98 4 249 1 253 2 
48 3 326 3 173 3 373 1 186 1 177 6 129 1 44 7 154 2 21 4 181 3 145 1 318 3 
326 1 48 1 173 10 275 1 177 4 315 1 336 1 8 1 129 1 154 1 181 1 263 1 318 3 264 1 281 4 111 2 59 1 14 1 163 4 373 2 319 1 186 3 39 8 137 4 138 2 115 1 116 2 44 18 21 8 98 4 249 1 145 1 253 1 
189 1 219 1 193 1 215 1 185 1 133 1 303 1 
327 1 193 1 219 1 185 1 268 1 93 1 303 1 306 1 189 1 215 1 133 1 159 1 
214 1 15 1 266 1 19 1 162 1 124 1 103 1 287 1 187 1 258 1 278 1 
15 1 266 1 162 1 185 2 123 1 103 1 303 1 287 1 332 1 258 1 278 1 214 1 42 1 363 1 215 2 155 1 247 1 133 1 
15 3 184 1 162 2 185 2 311 1 123 2 103 1 1 1 303 2 287 1 332 1 258 1 278 1 305 1 259 1 214 1 42 1 279 1 363 2 215 2 155 1 247 1 133 1 
101 1 311 2 123 2 103 1 1 1 332 1 278 1 258 1 259 1 279 1 363 2 155 1 133 1 15 3 184 1 185 2 162 2 287 1 303 2 305 1 214 1 42 1 215 2 381 1 
123 1 312 1 103 3 278 3 258 1 259 1 33 1 361 1 53 2 55 1 280 1 87 2 298 1 15 4 266 1 184 1 344 1 162 1 164 1 287 3 305 1 214 1 96 1 
266 1 15 4 184 1 162 1 344 1 164 1 312 1 123 1 103 3 287 3 258 1 278 3 305 1 259 1 214 1 33 1 96 1 53 2 280 1 250 1 87 2 298 1 
214 1 103 1 287 1 110 1 258 1 278 1 
310 1 266 2 15 3 235 1 161 1 162 2 302 1 123 1 103 6 287 7 94 1 322 1 278 7 258 3 214 2 179 1 228 1 157 1 324 1 110 1 99 1 
191 1 173 3 326 1 48 1 73 1 123 1 103 1 223 1 177 2 332 1 258 1 278 1 30 1 31 1 8 1 129 1 363 1 154 1 228 1 317 1 155 1 133 2 318 2 281 2 58 2 15 1 162 1 185 2 163 2 373 1 303 1 287 1 186 1 137 2 39 4 66 1 214 1 42 1 379 1 44 6 67 2 215 2 21 3 98 2 247 1 145 1 146 1 
72 2 194 2 274 1 357 1 312 1 103 1 126 1 200 1 278 1 335 1 52 1 53 3 280 1 87 3 298 1 183 1 266 1 15 2 205 2 344 1 164 1 241 1 209 2 287 1 165 1 113 1 96 2 250 1 
342 1 15 2 344 1 162 1 302 1 123 1 103 2 287 2 278 2 258 2 214 1 228 1 110 1 
266 1 15 1 162 1 103 4 124 1 287 4 258 1 278 4 214 1 33 1 19 1 228 1 190 1 
310 1 15 1 184 1 162 1 123 1 103 2 287 2 278 2 258 2 214 1 204 1 324 1 35 1 233 1 
214 1 266 1 301 1 103 1 231 1 80 1 287 1 83 1 258 1 278 1 
214 1 15 1 18 1 162 1 228 1 103 2 287 2 94 1 99 1 258 1 278 2 
266 1 15 3 184 1 162 2 235 1 124 1 103 4 287 5 278 5 258 2 214 2 19 1 228 1 157 1 190 1 99 1 
266 1 15 3 184 1 162 2 235 1 124 1 103 4 287 5 278 5 288 1 258 2 214 2 19 1 228 1 190 1 99 1 
101 1 311 1 123 1 103 1 332 1 278 1 258 1 363 1 155 1 133 1 266 1 15 1 185 2 162 1 287 1 303 1 214 1 42 1 215 2 381 1 
310 1 15 1 184 1 162 1 302 1 123 1 103 1 287 1 278 1 258 2 214 1 179 1 324 1 
308 1 133 1 64 1 172 1 227 1 
164 1 311 1 312 1 357 1 240 1 1 1 198 1 64 2 226 1 227 1 279 1 308 2 53 2 118 1 280 1 133 1 87 2 254 1 172 2 
215 1 185 1 308 1 261 1 303 1 64 1 252 1 227 1 4 1 
198 1 226 1 227 1 
85 1 132 1 360 1 187 1 
152 1 85 1 294 1 132 1 360 1 330 1 167 1 
371 1 34 1 330 1 
213 1 289 1 152 1 300 1 85 1 294 1 10 1 132 1 360 1 69 2 330 3 167 3 
152 1 192 1 85 1 294 1 132 1 37 1 360 1 330 2 167 2 
289 1 152 1 328 1 301 1 206 1 85 1 294 1 330 1 106 1 83 1 167 1 
289 1 152 1 85 1 294 1 132 1 330 1 167 1 
289 1 152 1 294 1 132 2 360 1 330 1 167 1 
289 1 152 2 237 1 76 1 85 1 294 2 132 1 330 2 135 1 167 2 
192 2 206 1 345 1 294 1 360 1 330 3 2 1 167 3 304 1 289 1 152 1 85 2 132 1 
218 1 192 1 301 2 294 1 360 1 330 2 106 1 167 2 83 1 40 1 289 1 152 1 85 1 231 1 132 1 
192 2 206 1 294 2 37 1 360 1 330 4 167 4 304 1 289 1 152 2 7 1 85 2 132 1 
289 1 152 1 85 1 294 1 132 1 360 1 330 1 167 1 
300 1 192 2 206 1 294 1 360 2 330 4 167 4 304 1 213 1 347 1 152 1 85 3 132 2 69 1 
192 1 294 1 330 2 360 1 167 2 289 1 152 1 202 1 85 1 132 1 251 1 325 1 
300 2 294 1 330 3 360 1 167 3 333 1 213 1 289 1 152 1 85 1 132 1 69 2 
307 1 108 2 85 2 364 1 
289 1 152 1 294 1 105 1 330 1 167 1 
289 1 152 1 192 1 85 1 345 1 294 1 132 1 360 1 330 2 167 2 
284 1 
289 1 152 1 85 1 294 1 132 1 360 1 330 1 167 1 
192 1 345 1 294 1 330 3 360 1 167 3 289 1 152 1 85 1 132 1 69 1 
347 1 206 1 85 1 304 1 
85 1 132 1 

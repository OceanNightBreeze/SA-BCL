#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
173 1 248 2 174 2 133 5 304 1 43 1 61 6 331 1 65 1 179 9 332 1 108 1 48 1 280 9 68 1 372 2 313 1 147 2 113 2 189 4 149 2 265 1 54 1 355 1 239 3 78 1 17 2 327 1 
173 1 248 2 174 2 133 5 304 1 43 1 61 6 331 1 65 1 179 9 332 1 108 1 48 1 280 9 68 1 372 2 313 1 113 2 147 2 189 4 149 2 265 1 54 1 355 1 239 3 78 1 17 2 327 1 
173 1 248 2 174 2 133 6 304 1 43 1 61 7 331 1 65 1 179 10 332 1 108 1 48 1 280 10 68 1 372 2 313 1 113 2 147 2 189 5 149 2 265 1 54 1 355 1 239 4 78 1 17 2 327 1 
173 1 248 2 174 2 133 4 304 1 43 1 61 4 331 1 179 7 332 1 108 1 48 1 280 7 68 1 372 2 313 1 113 2 147 1 189 3 149 2 265 1 54 1 355 1 239 2 78 1 17 2 327 1 
174 1 248 1 133 3 43 1 113 1 147 2 61 3 189 2 331 1 149 1 65 1 179 4 355 1 239 1 280 4 17 1 68 1 327 1 
165 1 248 1 174 1 133 1 43 1 113 1 149 1 179 2 264 1 54 1 48 1 355 1 280 2 234 1 68 1 372 1 
248 2 133 2 43 1 113 2 61 1 189 1 179 3 355 1 239 1 78 1 280 3 68 1 372 1 
173 1 248 2 174 1 133 5 61 7 43 1 331 1 179 9 65 1 275 1 280 9 68 1 372 1 113 2 147 2 189 4 149 1 265 1 352 1 355 1 239 3 78 1 17 1 327 1 
173 1 248 2 174 1 133 5 61 7 43 1 331 1 179 9 65 1 275 1 280 9 68 1 372 1 113 2 147 2 189 4 149 1 265 1 352 1 355 1 239 3 78 1 17 1 327 1 
271 1 182 1 251 1 
271 1 3 1 45 2 
21 2 193 2 138 2 243 2 259 1 325 1 49 2 94 2 
0 1 130 1 131 1 360 1 1 2 246 1 228 2 63 2 47 1 83 2 21 2 335 1 276 1 180 1 66 1 23 1 338 2 138 2 233 1 259 1 371 1 49 3 50 1 6 1 8 1 261 1 345 1 284 1 188 1 115 1 148 1 94 2 193 2 241 1 268 1 243 3 325 1 
21 1 378 1 321 1 193 1 138 1 243 1 99 1 325 1 49 1 94 1 
378 1 271 1 285 1 272 1 216 1 202 1 22 1 75 1 193 1 277 1 182 1 77 1 243 1 49 1 
378 1 271 1 285 1 216 1 94 1 21 1 202 1 75 2 193 1 277 2 182 1 138 1 77 1 243 1 49 1 
75 1 277 1 204 1 309 1 235 1 
350 1 75 2 76 1 271 1 277 2 182 1 309 1 235 1 
75 1 277 1 235 1 
378 1 247 1 94 1 21 1 75 1 321 1 193 1 277 1 309 1 138 1 99 1 243 1 325 1 49 1 
271 1 
350 1 75 2 380 1 271 1 277 2 182 1 309 1 235 1 
7 1 344 1 9 2 166 1 29 1 271 1 11 2 59 1 350 1 351 1 75 5 221 1 291 1 353 1 277 5 182 1 309 2 139 2 235 2 
259 1 251 1 
262 1 94 1 21 1 193 2 267 1 138 1 243 2 259 2 49 2 
301 1 19 1 383 1 
6 1 360 1 1 1 261 1 345 1 228 1 63 1 148 1 335 1 366 1 276 1 233 1 241 1 243 1 259 1 49 1 
6 1 360 1 261 1 1 1 345 1 19 1 330 1 228 1 33 1 63 1 148 1 94 1 335 1 276 1 193 1 233 1 138 1 241 1 243 2 49 2 
262 1 347 1 330 1 33 2 94 4 229 1 95 1 21 1 22 1 193 5 138 4 243 5 259 1 49 5 
378 1 321 1 193 2 138 2 243 2 46 1 49 2 94 2 
21 1 193 3 138 3 243 3 259 1 33 1 49 3 94 3 
378 1 321 1 193 1 138 1 243 1 49 1 94 1 
21 1 378 1 262 1 193 1 267 1 138 1 243 1 49 1 94 1 
131 1 360 1 1 1 246 1 330 1 228 1 63 1 47 1 83 2 20 1 21 2 202 1 335 1 276 1 23 1 277 1 66 1 338 1 233 1 138 3 259 1 371 1 49 4 6 1 8 1 261 1 378 1 262 1 345 1 111 1 284 1 188 1 285 1 115 1 216 1 148 1 33 1 94 3 75 1 193 3 77 1 241 1 243 4 325 1 
95 1 22 1 193 2 138 1 243 2 259 1 33 1 49 2 94 1 
378 1 262 1 271 1 285 1 330 1 216 1 93 1 33 2 94 3 20 1 21 1 202 1 75 1 193 3 277 1 138 3 77 1 243 3 49 3 
301 1 262 1 19 1 33 1 94 2 21 1 193 2 138 2 243 2 49 2 
6 1 360 1 1 1 261 1 345 1 228 1 63 1 148 1 335 1 276 1 233 1 241 1 243 1 259 1 49 1 
26 1 6 1 360 1 1 1 261 1 345 1 228 1 63 1 335 1 276 1 356 1 233 1 243 1 259 1 49 1 
0 2 301 2 131 1 56 1 246 1 19 2 177 1 306 1 83 2 137 1 338 4 371 1 8 1 188 1 284 2 91 1 215 1 115 1 263 1 320 1 266 1 383 2 122 1 196 1 
378 1 193 1 77 1 138 1 243 1 49 1 94 1 46 1 
375 1 155 1 
375 1 155 1 
245 1 242 1 
245 1 242 1 
245 1 242 1 
375 1 53 1 155 1 
375 1 96 1 155 1 
375 2 14 1 245 1 155 2 242 1 341 1 
375 1 53 1 155 1 
375 1 53 1 155 1 
375 1 155 1 211 1 
375 1 155 1 211 1 
375 1 155 1 211 1 
129 1 153 1 57 1 155 1 5 1 178 1 158 1 254 1 277 1 138 2 340 1 67 1 259 1 49 2 375 1 283 1 214 1 318 1 94 2 75 1 96 1 193 2 243 2 127 1 
41 1 171 1 129 2 155 2 247 1 4 1 5 1 21 1 158 2 253 1 254 2 277 2 310 1 138 1 340 2 49 1 375 2 378 1 31 1 318 2 116 1 94 1 75 2 321 1 193 1 243 1 99 1 324 1 325 1 
174 1 17 1 149 1 
264 1 174 1 149 1 
264 1 174 3 227 1 17 2 44 1 312 1 
264 1 107 1 174 2 17 1 44 1 312 1 
264 1 174 2 17 1 44 2 312 1 
153 1 57 1 3 1 271 2 58 2 132 1 177 1 306 1 45 3 307 1 277 5 309 4 182 1 139 1 369 2 185 1 235 1 25 1 9 1 30 2 29 1 11 1 263 1 350 1 75 5 351 3 151 1 39 1 322 1 353 2 122 1 127 1 
299 1 3 3 271 5 58 6 132 1 177 3 306 3 45 9 277 9 204 5 309 7 182 1 368 1 139 2 235 6 87 1 25 3 9 2 109 1 30 6 29 1 11 2 263 3 290 5 350 1 75 9 351 8 221 1 151 2 97 1 322 2 353 6 122 3 127 4 297 1 
271 3 3 2 58 2 177 1 306 1 45 4 307 1 277 3 182 1 309 2 139 1 369 1 25 1 9 1 30 2 11 1 263 1 75 3 351 3 221 1 151 1 39 1 322 1 353 2 122 1 127 1 
299 1 271 4 3 3 58 4 177 2 306 2 45 7 307 1 277 4 182 1 309 3 139 1 369 2 87 1 25 2 9 1 30 4 11 1 263 2 75 4 351 5 221 1 151 1 97 1 39 1 322 1 353 4 122 2 127 2 
110 1 345 1 251 1 
345 1 35 1 
364 1 
335 1 345 1 276 1 
345 1 125 1 
335 1 345 1 
110 2 335 1 345 3 276 1 198 1 98 1 
314 1 0 4 207 1 209 1 284 3 177 1 105 1 218 1 306 1 319 1 13 1 320 3 230 1 338 7 40 2 196 2 326 1 
314 1 0 4 207 1 209 1 284 3 177 1 105 1 218 1 306 1 319 1 13 1 320 3 230 1 338 7 40 2 196 2 326 1 
314 1 0 4 207 1 209 1 197 1 284 3 177 1 105 1 218 1 306 1 319 1 13 1 320 3 230 1 338 7 40 2 196 2 326 1 
0 16 225 3 131 1 246 1 105 2 177 4 306 4 83 2 85 1 230 2 336 4 338 31 371 1 25 3 373 1 260 1 314 5 207 1 8 1 209 1 144 1 284 15 112 1 263 3 218 1 319 2 13 2 191 1 320 10 122 3 357 1 40 3 196 5 326 1 
224 1 0 5 131 2 246 2 177 1 105 1 306 1 83 4 230 1 338 9 186 1 371 2 314 1 207 1 8 2 209 1 284 4 218 1 13 1 191 1 319 1 320 4 40 2 196 3 
128 1 1 1 248 1 174 2 227 1 133 1 61 1 43 1 228 1 63 1 179 2 134 1 160 1 279 1 280 2 68 1 141 1 372 1 6 1 261 1 317 1 113 1 34 1 36 1 149 1 192 1 264 1 355 1 17 1 295 1 
128 1 1 1 248 1 174 2 227 1 133 1 61 2 228 1 63 1 179 3 84 1 134 1 160 1 280 3 68 1 141 1 372 1 6 1 236 1 72 1 261 1 113 1 34 1 36 1 149 1 192 1 264 1 355 1 17 1 295 1 
128 1 1 1 174 2 227 1 133 1 61 2 228 1 63 1 179 2 84 1 134 1 280 2 68 1 141 1 372 1 6 1 72 1 261 1 36 1 149 1 192 1 264 1 355 1 295 1 17 1 
360 1 1 1 302 1 248 1 228 1 63 1 179 1 134 2 335 1 231 1 255 1 232 1 280 1 141 2 69 1 372 2 6 1 236 1 261 1 345 1 113 1 192 2 117 1 
128 1 1 1 248 1 174 2 227 1 43 1 228 1 63 1 179 1 134 1 160 1 280 1 141 1 372 1 6 1 72 1 261 1 317 1 113 1 34 1 36 1 149 1 192 1 264 1 17 1 295 1 
163 1 
270 1 1 2 271 2 3 2 272 1 228 2 45 2 274 2 334 1 335 1 277 5 182 1 232 1 139 1 183 2 235 6 49 1 6 1 9 1 345 1 285 1 11 1 346 1 350 3 351 2 151 1 193 1 353 2 16 2 243 1 359 4 360 2 303 1 157 2 63 2 365 1 106 1 252 1 202 1 22 1 255 1 261 1 378 1 73 1 167 2 29 1 315 1 114 1 216 1 75 5 120 1 77 1 123 2 80 2 79 1 
73 1 378 1 285 1 272 1 216 1 114 1 365 1 106 1 252 1 350 1 202 1 75 3 22 1 380 1 193 1 277 3 77 1 16 1 243 1 235 2 359 2 49 1 
73 1 378 1 271 1 285 1 272 1 216 1 114 1 365 1 106 1 252 1 350 1 202 1 75 3 22 1 380 1 193 1 277 3 182 1 77 1 243 1 80 1 235 1 359 3 49 1 
271 1 272 1 252 1 106 1 365 1 202 1 22 1 277 3 182 1 235 2 49 1 378 1 73 1 167 1 285 1 114 1 216 1 350 1 75 3 380 1 193 1 77 1 243 1 16 1 80 1 359 3 
154 1 3 2 271 5 272 1 157 2 363 1 252 1 106 1 365 1 274 2 202 1 22 1 277 5 182 5 139 1 183 2 235 7 70 1 49 1 377 1 9 1 378 1 73 1 29 1 167 4 315 1 285 1 11 1 114 1 216 1 350 3 351 1 75 5 380 1 193 1 353 1 77 1 123 2 243 1 16 4 79 1 80 4 170 1 359 6 
3 2 271 2 272 1 45 2 274 2 277 4 182 1 139 1 183 2 235 4 49 1 9 1 285 1 11 1 346 1 350 2 351 1 193 1 353 1 243 1 16 2 359 4 157 2 365 1 106 1 252 1 202 1 22 1 73 1 378 1 29 1 167 2 315 1 216 1 114 1 75 4 77 1 123 2 79 1 80 2 
271 1 3 2 272 1 157 2 363 1 252 1 106 1 365 1 274 2 202 1 22 1 277 4 182 1 139 1 183 2 235 4 70 1 49 1 9 1 378 1 73 1 167 2 29 1 315 1 285 1 11 1 114 1 216 1 350 2 351 1 75 4 193 1 353 1 77 1 123 2 16 2 243 1 80 2 79 1 359 4 170 1 
271 1 3 2 272 1 157 2 363 1 252 1 106 1 365 1 274 2 202 1 22 1 277 4 182 1 139 1 183 2 235 4 70 1 49 1 9 1 378 1 73 1 167 2 29 1 315 1 285 1 11 1 114 1 216 1 350 2 351 1 75 4 193 1 353 1 77 1 123 2 16 2 243 1 80 2 79 1 359 4 170 1 
271 1 272 1 45 2 252 1 106 1 365 1 274 2 202 1 22 1 277 4 182 1 139 1 235 4 161 2 70 1 49 1 9 1 378 1 73 1 167 2 29 1 315 1 285 1 11 1 114 1 216 1 217 1 238 1 350 2 351 1 75 4 193 1 194 1 353 1 294 2 77 1 123 2 16 2 243 1 80 2 359 4 
154 1 271 1 3 2 272 1 157 2 363 1 252 1 106 1 365 1 274 2 202 1 22 1 277 4 182 1 139 1 183 2 235 5 70 1 49 1 9 1 378 1 73 1 29 1 167 3 315 1 285 1 11 1 114 1 216 1 350 2 351 1 75 4 193 1 353 1 77 1 123 2 243 1 16 3 79 1 80 3 170 1 359 5 
154 1 271 1 3 2 272 1 157 2 363 1 252 1 106 1 365 1 274 2 202 1 22 1 277 4 182 1 139 1 183 2 235 5 70 1 49 1 9 1 378 1 73 1 29 1 167 3 315 1 285 1 11 1 114 1 216 1 350 2 351 1 75 4 193 1 353 1 77 1 123 2 243 1 16 3 79 1 80 3 170 1 359 5 
271 1 272 1 45 2 252 1 106 1 365 1 274 2 202 1 22 1 277 4 182 1 139 1 235 4 161 2 49 1 9 1 378 1 73 1 167 2 29 1 315 1 285 1 11 1 346 1 114 1 216 1 217 1 350 2 351 1 75 4 193 1 353 1 294 2 77 1 123 2 16 2 243 1 80 2 359 4 
301 1 0 3 131 1 246 1 19 1 251 1 105 1 177 1 306 1 83 2 338 6 259 2 371 1 207 1 8 1 209 1 188 1 284 3 215 1 115 1 218 1 319 1 320 2 383 1 40 1 196 2 
130 1 0 8 301 4 81 1 131 2 225 3 246 2 19 11 177 2 306 1 47 1 83 4 85 1 336 3 338 14 259 1 371 2 25 2 314 1 376 1 8 2 284 6 188 2 115 1 263 1 379 1 118 1 320 2 383 11 122 2 357 1 196 1 358 1 
301 1 130 1 0 1 360 1 131 1 1 1 246 1 176 1 330 1 228 1 63 1 83 2 47 1 335 1 276 1 366 1 233 1 138 1 338 2 259 1 371 1 49 2 6 1 208 1 8 1 261 1 345 1 188 1 284 1 115 1 148 1 33 1 94 1 119 1 193 1 241 1 243 2 358 1 
130 1 0 10 131 3 1 3 330 1 228 3 177 3 47 1 83 6 335 2 136 2 276 2 86 1 138 1 338 20 233 2 89 1 49 3 6 2 8 3 345 2 284 10 188 3 145 2 148 2 190 1 94 1 193 1 241 2 243 3 196 4 358 1 301 7 360 1 246 3 19 7 105 1 63 3 306 3 201 2 23 2 256 2 259 2 371 3 25 2 314 4 207 1 72 1 209 1 261 2 115 3 263 2 218 1 33 1 319 1 320 8 383 7 122 2 40 1 
130 1 0 1 360 2 131 2 1 7 246 2 228 8 63 8 83 4 47 1 135 1 335 2 203 1 255 1 367 1 232 1 279 1 138 1 338 2 142 1 49 1 371 2 6 2 8 2 72 1 261 2 345 3 210 1 188 2 284 1 215 1 115 2 33 1 94 1 150 1 193 1 243 1 268 2 298 1 
301 1 0 1 131 1 246 1 19 1 177 1 306 1 83 2 21 1 138 1 257 1 338 3 371 1 49 1 25 1 8 1 262 1 188 1 284 2 115 1 263 1 94 1 320 1 193 1 383 1 122 1 243 1 196 1 358 1 
314 1 301 1 0 2 131 1 8 1 56 1 246 1 188 1 19 1 215 1 115 1 177 1 83 2 320 1 338 2 383 1 122 1 371 1 
301 1 131 1 8 1 246 1 188 1 284 2 19 1 215 1 115 1 263 1 306 1 83 2 320 1 266 1 338 2 383 1 196 1 371 1 
0 2 301 2 131 1 246 1 19 2 177 1 306 1 83 2 338 4 25 1 371 1 314 1 8 1 188 1 284 2 215 1 115 1 263 1 320 2 122 1 383 2 196 1 
314 1 301 1 0 2 131 1 8 1 56 1 246 1 188 1 19 1 115 1 177 1 83 2 320 1 203 1 338 2 383 1 122 1 371 1 
301 1 131 1 8 1 246 1 188 1 284 2 19 1 115 1 263 1 306 1 83 2 320 1 266 1 203 1 338 2 383 1 196 1 371 1 
0 2 301 2 131 1 246 1 19 2 177 1 306 1 83 2 203 1 338 4 25 1 371 1 314 1 8 1 188 1 284 2 115 1 263 1 320 2 122 1 383 2 196 1 
0 2 301 2 131 1 246 1 19 2 177 1 306 1 83 2 338 4 25 1 371 1 314 1 8 1 188 1 284 2 115 1 263 1 320 2 122 1 383 2 196 1 
0 1 130 1 360 1 131 1 1 1 246 1 228 1 63 1 83 2 47 1 335 1 276 1 23 1 338 2 233 1 259 1 49 1 371 1 6 1 8 1 261 1 345 1 188 1 284 1 115 1 148 1 241 1 243 1 
0 1 130 1 360 1 131 1 1 1 246 1 228 1 63 1 83 2 47 1 335 1 276 1 338 2 233 1 259 1 49 1 371 1 6 1 26 1 8 1 261 1 143 1 345 1 188 1 284 1 115 1 356 1 243 1 
0 2 301 2 131 1 246 1 19 2 177 1 306 1 83 2 338 4 25 1 371 1 314 1 8 1 188 1 284 2 115 1 263 1 320 2 122 1 383 2 196 1 358 1 
301 2 0 2 131 1 1 1 246 1 19 2 228 1 177 1 63 1 306 1 201 1 83 2 335 1 276 1 23 1 338 4 233 1 279 1 49 1 371 1 25 1 314 1 6 1 8 1 261 1 345 1 284 2 188 1 115 1 263 1 148 1 320 2 383 2 122 1 241 1 243 1 196 1 
0 2 301 1 131 1 246 1 19 1 177 1 306 1 83 2 21 1 138 1 338 3 88 1 371 1 49 1 25 1 314 1 8 1 262 1 284 1 188 1 115 1 263 1 94 1 320 1 193 1 122 1 383 1 243 1 358 1 
224 1 0 9 131 2 225 1 362 1 246 2 250 2 177 3 306 3 83 4 85 1 336 2 181 1 338 19 371 2 25 3 90 1 314 3 8 2 71 1 284 10 92 1 263 3 32 1 320 6 292 1 122 3 357 1 195 2 196 3 
224 1 0 14 131 3 225 2 329 1 246 3 226 1 175 1 60 1 250 4 200 1 177 3 306 2 83 6 85 2 336 2 181 1 338 26 371 3 25 3 90 1 314 2 8 3 71 1 284 12 92 2 263 2 219 1 191 2 320 4 292 2 122 3 195 1 196 2 
224 1 0 20 225 3 131 3 329 1 226 1 175 1 273 1 177 5 83 6 85 3 336 4 181 1 338 41 90 1 8 3 284 21 92 2 191 1 292 1 357 1 196 4 195 1 362 1 246 3 60 1 250 4 200 1 105 1 306 5 25 4 371 3 314 4 207 1 71 1 209 1 263 4 219 1 218 1 319 1 320 8 122 4 40 1 
224 1 0 20 131 4 225 3 362 1 329 1 226 1 246 4 175 1 60 1 273 1 200 1 250 4 105 1 177 5 306 4 83 8 85 3 336 4 181 1 338 38 371 4 25 4 90 1 314 3 207 1 8 4 71 1 209 1 284 18 92 2 263 3 218 1 219 1 319 1 191 2 320 7 292 1 122 4 357 1 40 1 195 1 196 4 
224 1 0 27 131 2 225 4 329 1 226 1 246 2 175 1 60 1 200 1 250 4 105 1 177 8 306 8 83 4 85 2 336 4 181 1 338 52 371 2 25 7 90 1 314 7 207 1 8 2 71 1 209 1 284 25 92 1 263 7 218 1 219 1 379 2 319 1 191 1 320 14 292 1 122 7 357 2 40 1 195 1 196 7 
129 1 375 1 158 1 2 1 155 1 254 1 82 1 318 1 341 1 100 1 
96 1 178 1 
172 1 129 1 375 1 158 1 155 1 254 1 323 1 318 1 348 1 
53 1 213 1 
14 1 42 1 211 1 
41 1 171 1 129 1 155 1 247 1 4 1 5 1 21 1 158 1 253 1 254 1 277 1 310 1 138 1 340 2 49 1 375 1 378 1 31 1 318 1 116 1 94 1 75 1 321 1 193 1 243 1 99 1 324 1 325 1 
41 1 171 1 129 1 155 1 247 1 4 1 5 1 21 1 158 1 253 1 254 1 277 1 310 1 138 1 340 2 49 1 375 1 378 1 31 1 318 1 116 1 94 1 75 1 321 1 193 1 243 1 99 1 324 1 325 1 
41 1 171 1 129 1 155 1 247 1 4 1 5 1 21 1 158 1 253 1 254 1 277 1 310 1 138 1 340 2 49 1 375 1 378 1 31 1 318 1 116 1 94 1 75 1 321 1 193 1 243 1 99 1 324 1 325 1 
14 1 53 1 213 1 
14 1 53 1 213 1 
42 1 211 1 
14 1 42 1 211 1 
214 1 67 1 
129 1 153 1 57 1 155 1 178 1 158 1 253 1 254 1 277 1 310 1 309 1 138 2 340 1 67 1 259 1 49 2 375 1 283 1 214 1 74 1 318 1 94 2 75 1 96 1 193 2 243 2 127 1 
130 1 0 1 131 1 1 2 246 1 103 1 228 2 63 2 83 2 47 1 335 1 367 1 338 2 140 1 342 1 49 2 371 1 6 1 8 1 261 1 345 1 210 1 188 1 284 1 115 1 12 1 381 1 193 2 243 2 268 2 358 1 
55 1 128 1 6 1 261 1 72 1 1 2 174 2 227 1 228 2 63 2 34 1 36 1 149 1 264 1 308 1 279 1 17 1 141 1 162 1 
55 1 128 1 6 1 72 1 1 1 261 1 174 2 227 1 228 1 63 1 34 1 36 1 149 1 264 1 17 1 141 1 384 1 
6 1 360 1 261 1 1 1 345 1 52 1 228 1 63 1 117 1 308 1 335 1 255 1 232 1 141 1 
55 1 128 1 6 1 261 1 72 1 1 1 174 2 227 1 228 1 63 1 34 1 36 1 149 1 264 1 308 1 17 1 141 1 162 1 
374 1 
351 1 7 1 344 1 271 1 353 1 182 1 251 1 
3 1 271 2 157 1 45 1 277 1 182 1 139 1 183 1 235 1 9 1 29 1 11 1 350 1 351 1 75 1 353 1 79 1 
1 3 3 6 271 8 228 3 177 2 45 12 334 1 333 2 335 3 136 2 276 3 277 5 182 2 339 1 279 1 139 4 235 5 343 2 6 3 7 1 344 1 9 4 345 10 146 2 11 4 288 2 350 3 351 9 151 2 353 8 98 1 300 2 360 1 58 6 199 1 62 1 63 3 306 2 202 2 159 2 25 2 261 4 164 1 110 2 29 4 30 6 263 2 35 3 220 2 75 5 169 1 382 2 122 2 125 2 
361 1 225 1 329 1 226 1 3 3 271 5 58 5 60 1 200 1 177 2 306 2 45 6 85 1 334 1 333 2 336 1 277 1 182 2 139 2 235 1 25 2 9 2 30 5 29 2 11 2 263 2 219 1 349 1 220 1 350 1 75 1 351 8 151 1 353 5 122 2 
247 1 105 1 177 2 306 1 21 1 333 2 277 1 138 1 139 1 49 1 378 1 9 1 209 1 29 1 11 1 94 1 319 1 220 1 75 1 351 2 321 1 193 1 15 1 353 2 243 1 99 1 325 1 170 1 
344 1 7 1 9 1 29 1 271 1 11 1 351 1 353 1 182 1 139 1 
30 5 3 5 271 5 58 5 263 2 177 2 306 2 45 10 220 1 333 2 351 5 136 1 353 5 122 2 25 2 
350 1 75 1 271 1 277 1 182 1 235 1 
360 2 1 4 303 1 104 1 228 4 62 1 63 4 334 2 335 1 277 3 255 1 232 1 339 2 139 2 235 4 6 1 261 1 9 2 345 1 29 1 286 1 11 2 350 2 351 2 75 3 221 1 120 1 151 2 353 2 
360 1 131 1 1 1 246 1 228 1 63 1 47 1 83 2 21 2 335 1 276 1 66 1 23 1 338 1 138 2 233 1 259 1 371 1 49 3 6 1 8 1 261 1 345 1 284 1 188 1 115 1 148 1 94 2 193 2 241 1 243 3 325 1 
9 1 30 2 29 1 3 2 271 4 58 2 11 1 45 4 351 1 334 1 151 1 353 2 182 2 139 1 40 1 
129 1 158 1 184 1 
129 1 158 1 214 1 82 1 289 1 
129 1 158 1 184 1 
129 1 158 1 184 1 
129 1 158 1 293 1 
129 1 158 1 293 1 
129 1 158 1 293 1 
129 1 158 1 
375 1 155 1 
314 1 0 4 207 1 131 2 8 2 209 1 246 2 284 4 177 1 218 1 105 1 306 1 83 4 191 1 319 1 320 3 338 8 40 1 196 2 371 2 
319 1 0 3 207 1 209 1 320 2 284 3 338 6 40 1 177 1 196 2 105 1 218 1 251 1 306 1 
314 1 0 2 131 1 8 1 246 1 284 2 263 1 177 1 306 1 83 2 320 2 338 4 122 1 269 1 196 1 371 1 25 1 
314 1 0 3 225 1 284 4 263 1 177 1 306 1 85 1 320 2 336 2 338 7 122 1 357 1 196 1 25 1 
0 11 225 2 131 2 246 2 105 2 177 3 306 3 83 4 336 2 338 23 25 2 371 2 314 4 207 1 8 2 209 1 284 12 263 2 218 1 379 1 319 2 191 2 118 1 320 9 122 2 357 1 40 1 196 5 152 1 
284 1 336 1 338 1 
0 1 225 1 338 1 
314 1 0 3 8 1 131 1 246 1 284 3 263 1 177 1 306 1 83 2 320 3 136 1 338 6 122 1 269 1 196 2 371 1 25 1 
224 1 0 6 225 1 131 1 329 1 246 1 226 1 60 1 200 1 177 2 306 2 83 2 85 1 336 1 338 12 371 1 25 2 314 1 8 1 284 6 263 2 219 1 320 2 122 2 196 1 
314 1 0 3 209 1 284 3 177 1 105 1 306 1 319 1 320 2 338 6 196 1 
314 1 0 1 207 1 131 1 8 1 246 1 284 2 105 1 218 1 83 2 319 1 191 1 320 2 338 3 196 1 152 1 371 1 
224 1 314 2 0 5 8 1 131 1 209 1 246 1 284 5 105 2 177 2 306 2 83 2 319 2 320 5 15 1 338 10 196 3 371 1 
224 1 314 1 0 2 131 1 8 1 246 1 177 1 83 2 320 1 338 2 122 1 371 1 
224 1 314 1 0 2 131 1 8 1 246 1 284 2 263 1 177 1 306 1 83 2 320 2 338 4 122 1 196 1 371 1 25 1 
224 1 314 1 0 1 131 3 8 3 362 1 246 3 284 2 105 1 83 6 191 1 319 1 320 2 338 3 152 1 196 1 371 3 
224 1 0 16 131 5 225 3 362 1 246 5 105 3 177 5 306 5 83 10 85 1 336 4 338 34 260 1 373 1 371 5 25 3 314 5 207 1 8 5 209 2 284 18 112 1 263 3 218 1 319 3 191 2 320 12 122 3 357 1 40 1 269 1 152 1 196 7 
224 1 0 4 225 1 131 1 246 1 200 1 177 1 105 1 306 1 83 2 85 1 336 1 338 8 371 1 207 1 8 1 209 1 284 4 218 1 319 1 320 2 40 1 196 2 
224 1 0 6 131 2 225 1 246 2 200 1 105 1 177 2 306 1 83 4 85 1 336 2 338 11 371 2 25 1 314 1 207 1 8 2 209 1 284 5 218 1 319 1 320 3 122 1 357 1 40 1 269 1 196 2 
224 1 0 9 225 1 131 3 329 1 246 3 226 1 60 1 200 1 105 1 177 3 306 3 83 6 85 1 336 1 338 19 371 3 25 2 314 1 207 1 8 3 209 1 284 10 263 2 218 1 219 1 319 1 191 1 320 4 122 2 40 1 269 1 196 3 
224 1 0 10 225 1 131 3 329 1 246 3 226 1 60 1 200 1 105 1 177 3 306 2 83 6 85 1 336 1 338 17 371 3 25 2 314 2 207 1 8 3 209 1 284 7 263 1 218 1 219 1 319 1 191 1 320 5 122 2 40 1 269 1 196 3 
224 1 0 4 225 1 131 1 246 1 200 1 177 1 105 1 306 1 83 2 85 1 336 1 338 8 371 1 207 1 8 1 209 1 284 4 218 1 319 1 320 2 40 1 196 2 
224 1 0 6 225 1 131 1 329 1 246 1 226 1 60 1 200 1 177 2 306 2 83 2 85 1 336 1 338 12 371 1 25 2 314 1 8 1 284 6 263 2 219 1 320 2 122 2 196 1 
224 1 0 10 131 4 225 1 329 1 246 4 226 1 60 1 200 1 105 1 177 3 306 2 83 8 85 1 336 1 338 18 371 4 25 2 314 2 207 1 8 4 209 1 284 8 263 1 218 1 219 1 319 1 191 2 320 5 122 2 40 1 269 1 196 3 
224 1 0 9 131 4 225 1 362 1 329 1 246 4 226 1 60 1 200 1 177 3 306 2 83 8 85 1 336 1 338 16 371 4 25 3 314 3 8 4 284 7 263 2 219 1 191 2 320 6 122 3 196 3 
314 3 207 1 0 3 209 1 284 4 218 2 105 3 177 1 306 1 319 3 320 6 338 7 196 3 
224 1 0 10 131 4 225 1 362 1 329 1 246 4 226 1 60 1 200 1 105 1 177 3 306 2 83 8 85 1 336 1 338 18 371 4 25 2 314 1 207 1 8 4 209 1 284 8 263 1 218 1 219 1 319 1 191 2 320 4 122 2 40 1 196 3 
95 1 22 1 222 1 193 1 243 1 259 1 49 1 
28 1 102 1 95 1 22 1 222 1 193 1 278 1 243 1 124 1 259 1 244 1 49 1 
6 1 360 1 261 1 1 1 335 1 345 1 255 1 232 1 228 1 251 1 63 1 
6 1 360 1 261 1 1 1 345 1 228 1 33 1 63 1 94 1 335 1 276 1 193 1 233 1 138 1 241 1 243 2 259 1 49 2 
6 1 378 1 261 1 1 1 345 3 216 1 228 1 33 1 63 1 94 2 335 2 276 2 382 1 193 2 77 1 233 1 138 1 339 1 241 1 243 2 125 1 259 1 49 2 
1 2 228 2 63 2 335 2 276 2 339 1 138 1 233 1 311 1 259 1 49 2 6 1 261 1 378 1 345 3 216 1 33 1 94 2 193 2 382 1 356 1 77 1 243 2 125 1 
360 1 1 3 271 1 228 3 63 3 202 1 335 1 276 1 277 2 182 1 339 1 311 1 235 1 6 1 261 1 110 1 345 4 212 1 168 1 35 1 75 2 382 1 125 1 
300 1 6 1 360 1 261 1 1 3 110 1 345 4 271 1 228 3 63 3 35 1 202 1 75 2 335 1 276 1 382 1 277 2 182 1 339 1 311 1 125 1 235 1 
6 1 261 1 1 1 135 1 228 1 63 1 
6 2 360 2 72 1 1 6 261 3 345 3 228 7 63 7 150 1 135 1 335 2 276 1 367 1 279 1 98 1 268 1 296 1 142 1 206 1 370 1 298 1 
0 3 131 2 1 1 228 1 177 1 83 4 335 1 276 1 279 1 138 1 233 1 338 6 140 1 49 2 6 1 8 2 345 1 145 1 188 2 284 3 148 1 94 1 193 1 241 1 243 2 196 2 358 1 301 1 246 2 19 1 63 1 105 1 201 1 306 1 23 1 259 2 371 2 207 1 261 1 209 1 115 2 33 1 218 1 319 1 320 2 383 1 40 1 
300 1 360 1 1 1 271 1 228 1 62 1 63 1 202 1 159 1 277 3 182 1 309 1 139 2 235 2 343 1 7 1 344 1 9 2 110 1 29 2 345 2 146 1 11 2 35 1 350 1 351 1 75 3 353 1 
6 1 1 2 261 2 110 1 345 2 199 1 228 2 63 2 135 1 335 1 276 1 279 1 98 1 
6 1 360 1 261 1 1 4 345 1 305 1 228 4 63 4 335 1 255 1 232 1 279 1 311 1 
6 1 1 2 261 2 345 1 316 1 228 2 63 2 335 1 276 1 339 1 86 1 126 1 206 1 370 1 
264 1 128 1 6 1 360 1 261 1 1 1 174 1 228 1 63 1 149 1 
6 1 261 1 72 1 1 2 335 1 345 1 381 1 367 1 279 1 228 2 63 2 
6 2 360 1 1 4 261 2 345 3 305 1 228 5 63 5 150 1 335 2 255 1 232 1 367 1 339 1 279 1 298 1 
6 2 360 1 1 4 261 2 345 3 305 1 228 5 63 5 150 1 335 2 255 1 232 1 367 1 339 1 279 1 258 1 
6 1 360 1 261 1 1 1 345 1 228 1 33 1 63 1 94 1 335 1 276 1 193 1 233 1 138 1 356 1 243 2 259 1 49 2 
6 1 1 1 261 2 345 1 228 1 63 1 335 1 276 1 339 1 98 1 296 1 206 1 370 1 
27 1 101 1 121 1 281 1 259 1 
378 1 328 1 27 2 271 1 101 2 285 1 216 1 64 1 20 1 202 1 75 2 277 2 182 1 309 1 77 1 121 1 281 2 259 1 205 1 
27 1 12 1 103 1 193 1 121 1 243 1 281 1 342 1 49 1 
121 1 205 1 64 1 
355 1 133 1 68 1 251 1 
179 1 248 1 355 1 133 1 113 1 280 1 68 1 
192 1 179 1 372 1 
179 3 38 1 10 1 51 1 248 1 48 2 355 1 133 1 113 1 43 1 280 3 68 1 
179 2 248 1 355 1 133 1 61 1 147 1 113 1 280 2 68 1 
179 1 174 1 248 1 133 1 113 1 43 1 17 1 189 1 280 1 331 1 149 1 
179 1 248 1 355 1 133 1 113 1 43 1 280 1 
179 1 248 1 355 2 113 1 43 1 280 1 68 1 
248 2 249 1 133 1 43 1 113 2 179 2 355 1 240 1 354 1 280 2 
173 1 248 1 133 2 43 1 113 1 61 2 189 1 179 3 265 1 355 1 239 1 280 3 68 1 
174 2 248 1 227 1 133 1 43 1 113 1 61 1 149 1 264 1 179 2 355 1 280 2 17 1 68 1 282 1 
248 2 133 2 43 1 113 2 147 1 61 2 189 1 179 4 65 1 355 1 239 1 280 4 68 1 
179 1 248 1 355 1 133 1 113 1 43 1 280 1 68 1 
51 1 248 1 287 1 133 3 61 2 113 1 189 1 179 4 38 1 48 1 355 2 239 1 280 4 68 2 
248 1 156 1 133 1 43 1 113 1 61 1 179 2 37 1 352 1 355 1 280 2 68 1 
179 3 38 1 51 2 223 1 248 1 48 2 355 1 133 1 113 1 43 1 280 3 68 1 
237 1 337 1 24 2 133 2 
179 1 18 1 248 1 113 1 43 1 280 1 
179 2 265 1 248 1 355 1 133 1 61 1 113 1 43 1 280 2 68 1 
187 1 
179 1 248 1 355 1 133 1 113 1 43 1 280 1 68 1 
248 1 133 1 61 1 43 1 113 1 179 3 265 1 48 1 355 1 280 3 68 1 
287 1 239 1 133 1 189 1 
355 1 133 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 4 96 2 28 1 173 9 202 2 32 9 338 1 229 1 205 1 206 1 318 1 207 5 105 2 259 1 283 2 211 1 38 3 237 1 160 1 267 2 326 1 119 1 328 1 221 2 196 1 147 2 168 6 246 1 
200 4 96 2 28 1 173 9 202 2 32 9 338 1 229 1 205 1 206 1 318 1 207 5 105 2 259 1 283 2 211 1 38 3 237 1 160 1 267 2 326 1 119 1 328 1 221 2 196 1 147 2 168 6 246 1 
200 5 96 2 28 1 173 10 202 2 32 10 338 1 229 1 205 1 206 1 318 1 207 6 105 2 259 1 283 2 211 1 38 4 237 1 160 1 267 2 326 1 119 1 328 1 221 2 196 1 147 2 168 7 246 1 
200 3 96 2 173 7 202 2 32 7 338 1 229 1 205 1 206 1 318 1 207 4 105 2 259 1 283 2 211 1 38 2 237 1 160 1 267 2 326 1 119 1 328 1 221 2 196 1 147 1 168 4 246 1 
200 2 237 1 96 1 28 1 173 4 202 1 32 4 229 1 205 1 318 1 221 1 207 3 105 1 283 1 147 2 168 3 38 1 246 1 
237 1 96 1 248 1 19 1 173 2 202 1 32 2 140 1 267 1 229 1 205 1 206 1 207 1 105 1 259 1 283 1 
200 1 237 1 96 2 173 3 32 3 338 1 267 1 229 1 205 1 207 2 105 2 168 1 38 1 
200 4 96 2 28 1 173 9 202 1 32 9 338 1 279 1 229 1 205 1 318 1 207 5 105 2 283 1 38 3 237 1 86 1 267 1 328 1 221 1 196 1 147 2 168 7 246 1 
200 4 96 2 28 1 173 9 202 1 32 9 338 1 279 1 229 1 205 1 318 1 207 5 105 2 283 1 38 3 237 1 86 1 267 1 328 1 221 1 196 1 147 2 168 7 246 1 
282 1 313 1 352 1 
17 1 265 2 313 1 
366 1 21 2 315 2 369 2 74 1 331 2 278 2 303 2 
1 2 5 1 249 1 294 1 278 3 125 1 101 1 82 1 315 2 12 2 320 1 62 2 110 1 158 1 366 1 16 2 369 2 114 1 216 1 350 1 266 1 138 1 303 2 217 1 42 1 270 2 289 1 142 1 21 3 22 1 74 1 167 1 44 1 331 2 223 1 244 1 380 1 
366 1 21 1 298 1 315 1 369 1 97 1 331 1 208 1 278 1 303 1 
113 1 239 1 313 1 278 1 53 1 352 1 126 1 21 1 298 1 23 1 357 1 331 1 146 1 381 1 
369 1 113 1 239 2 313 1 278 1 303 1 352 1 21 1 315 1 298 1 23 1 357 1 331 1 146 1 381 2 
102 1 239 1 132 1 37 1 381 1 
102 1 239 2 313 1 189 1 37 1 352 1 235 1 381 2 
239 1 37 1 381 1 
366 1 97 1 369 1 371 1 239 1 278 1 303 1 102 1 21 1 298 1 315 1 331 1 208 1 381 1 
313 1 
102 1 281 1 239 2 313 1 37 1 352 1 235 1 381 2 
26 1 247 1 185 1 301 2 239 5 313 1 89 1 188 1 52 1 90 1 352 1 268 1 102 2 363 1 378 2 273 2 37 2 235 1 381 5 
16 1 369 1 294 1 278 2 138 1 303 1 336 1 101 1 270 1 306 1 21 2 22 1 167 1 223 1 331 1 320 1 62 1 158 1 110 1 94 1 
74 1 282 1 
369 1 278 2 303 1 21 2 315 1 154 1 74 2 331 2 95 1 
231 1 356 1 336 1 
77 1 16 1 294 1 278 1 138 1 101 1 270 1 21 1 22 1 74 1 167 1 223 1 62 1 320 1 110 1 158 1 
369 4 112 1 278 5 303 4 53 1 71 1 80 1 306 2 21 5 315 1 154 1 74 1 331 5 94 1 
92 1 21 2 298 1 369 2 331 2 208 1 278 2 303 2 
306 1 21 3 315 1 369 3 74 1 331 3 278 3 303 3 
21 1 298 1 369 1 331 1 208 1 278 1 303 1 
21 1 298 1 315 1 369 1 154 1 331 1 278 1 303 1 95 1 
48 1 1 2 249 1 294 1 278 4 125 1 101 1 82 1 315 2 298 1 154 1 12 1 320 1 62 1 158 1 110 1 65 1 366 1 16 1 369 3 113 1 239 1 350 1 266 1 138 1 303 3 217 1 42 1 289 1 270 1 142 1 306 1 21 4 22 1 23 1 74 1 357 1 167 1 223 1 331 3 244 1 146 1 94 1 381 1 
80 1 306 1 21 2 369 1 74 1 331 2 278 2 303 1 53 1 
123 1 369 3 113 1 239 1 313 1 278 3 303 3 306 2 21 3 315 1 298 1 154 1 23 1 357 1 331 3 146 1 65 1 94 1 381 1 
369 2 278 2 303 2 336 1 306 1 21 2 315 1 356 1 154 1 331 2 
16 1 294 1 278 1 138 1 101 1 270 1 21 1 22 1 74 1 167 1 223 1 62 1 320 1 110 1 158 1 
16 1 278 1 138 1 362 1 270 1 21 1 22 1 74 1 181 1 167 1 223 1 62 1 320 1 110 1 158 1 
1 2 78 1 5 2 249 1 125 1 336 2 280 1 82 1 231 2 152 1 12 4 299 1 84 1 15 1 109 1 321 1 134 1 350 1 266 1 42 1 141 1 142 2 356 2 224 1 
21 1 92 1 298 1 369 1 331 1 278 1 146 1 303 1 
365 1 372 1 
365 1 372 1 
322 1 234 1 
322 1 234 1 
322 1 234 1 
365 1 372 1 46 1 
365 1 372 1 46 1 
340 1 365 1 372 1 
322 1 365 2 372 2 234 1 47 1 305 1 
365 1 372 1 46 1 
59 1 365 1 372 1 
59 1 365 1 372 1 
59 1 365 1 372 1 
0 1 277 1 278 2 150 1 314 1 340 1 365 1 104 1 13 1 66 1 346 1 213 1 369 2 372 1 136 1 88 1 239 1 303 2 21 2 74 1 307 1 331 2 145 1 381 1 
372 2 49 1 136 3 88 2 239 2 313 1 305 1 163 1 116 2 314 2 11 1 365 2 343 1 307 2 332 1 145 2 75 1 381 2 66 1 
221 1 202 1 283 1 
248 1 202 1 283 1 
27 1 248 1 221 2 202 3 209 1 133 1 
122 1 248 1 221 1 202 2 209 1 133 1 
248 1 221 1 202 2 209 1 133 2 
0 1 26 2 277 1 175 2 296 2 313 2 102 4 152 1 257 1 342 1 299 1 106 1 84 1 37 1 235 1 17 1 213 1 185 3 265 3 301 1 239 5 302 2 219 1 268 1 352 1 144 1 355 1 224 1 378 1 273 1 381 5 276 1 
26 6 175 6 296 6 313 5 337 1 102 7 363 1 152 3 10 1 129 1 183 1 342 1 299 3 84 3 132 5 37 6 212 1 235 1 17 3 286 1 213 4 185 8 265 9 301 2 239 9 352 1 268 1 144 3 355 2 243 5 224 3 378 2 273 2 381 9 276 2 
26 2 175 2 313 3 296 2 102 2 363 1 152 1 257 1 299 1 106 1 84 1 17 2 213 1 185 3 265 4 301 1 239 3 302 1 352 1 144 1 355 1 378 1 224 1 273 1 381 3 276 1 
26 4 175 4 313 4 296 4 337 1 102 3 363 1 152 2 257 1 10 1 183 1 299 2 106 1 84 2 17 3 213 2 185 5 265 7 301 1 239 4 302 2 352 1 144 2 355 1 378 1 224 2 273 1 381 4 276 1 
81 1 167 1 282 1 
167 1 233 1 
45 1 
22 1 167 1 320 1 
167 1 148 1 
167 1 320 1 
81 2 22 1 167 3 320 1 139 1 198 1 
367 1 78 2 4 1 5 4 149 1 91 1 142 3 72 1 316 1 12 7 84 1 224 1 121 1 131 1 321 3 93 1 24 2 
367 1 78 2 4 1 5 4 149 1 91 1 142 3 72 1 316 1 12 7 84 1 224 1 121 1 131 1 321 3 93 1 24 2 
367 1 78 2 4 1 5 4 149 1 178 1 91 1 142 3 72 1 316 1 12 7 84 1 224 1 121 1 131 1 321 3 93 1 24 2 
1 2 78 5 4 2 5 16 311 1 149 2 7 1 82 1 152 3 316 5 127 1 12 31 299 3 84 4 131 1 321 10 367 1 323 3 240 1 350 1 266 1 69 4 162 1 42 1 220 1 91 2 142 15 72 1 144 3 121 1 224 4 93 2 292 1 24 3 
1 4 78 3 4 1 5 5 149 1 82 2 316 1 127 1 12 9 84 1 321 4 131 1 367 1 68 1 350 2 266 2 41 1 42 2 91 1 142 4 224 1 121 1 93 1 24 2 
27 1 96 1 170 1 248 1 173 2 202 2 312 1 295 1 32 2 251 1 229 1 205 1 103 1 207 1 105 1 62 1 107 1 110 1 283 1 184 1 237 1 16 1 238 1 67 1 267 1 270 1 117 1 221 1 223 1 168 1 
27 1 96 1 170 1 248 1 173 3 228 1 6 1 202 2 312 1 295 1 32 3 251 1 205 1 103 1 207 1 105 1 62 1 107 1 110 1 283 1 184 1 210 1 237 1 16 1 267 1 270 1 117 1 221 1 223 1 168 2 
27 1 170 1 248 1 173 2 228 1 6 1 202 2 312 1 32 2 251 1 205 1 103 1 207 1 62 1 107 1 110 1 184 1 283 1 237 1 16 1 267 1 270 1 221 1 223 1 168 2 
2 1 96 1 173 1 312 2 32 1 8 1 103 2 105 1 62 1 320 1 110 1 210 1 184 2 347 1 236 1 16 1 138 1 267 2 190 1 270 1 167 1 223 1 360 1 
27 1 96 1 170 1 248 1 173 1 6 1 202 2 312 1 295 1 32 1 251 1 229 1 103 1 105 1 62 1 107 1 110 1 283 1 184 1 16 1 67 1 267 1 270 1 117 1 221 1 223 1 
161 1 
334 1 2 1 3 1 53 1 8 1 151 4 298 1 61 1 62 2 110 1 345 1 16 2 17 2 20 1 265 2 301 1 113 1 218 2 352 1 269 2 268 1 270 2 354 2 21 1 355 1 23 1 357 1 167 1 223 1 274 1 273 1 25 1 26 2 172 1 361 2 31 2 313 2 278 1 126 1 320 1 37 6 235 3 185 2 135 2 239 5 138 2 288 1 191 1 327 2 143 1 43 1 331 1 378 1 146 1 381 5 
334 1 172 1 278 1 53 1 126 1 151 2 298 1 281 1 37 2 235 1 113 1 239 3 288 1 269 1 143 1 21 1 43 1 23 1 357 1 331 1 146 1 381 3 
334 1 172 1 278 1 313 1 53 1 126 1 151 3 298 1 281 1 37 1 235 1 113 1 135 1 239 3 288 1 352 1 143 1 21 1 43 1 23 1 357 1 331 1 146 1 381 3 
334 1 172 1 278 1 313 1 53 1 126 1 151 3 298 1 281 1 37 2 235 1 113 1 135 1 239 3 288 1 269 1 352 1 143 1 354 1 21 1 43 1 23 1 357 1 331 1 146 1 381 3 
334 1 3 1 53 1 339 1 151 6 298 1 61 1 348 1 17 2 301 1 113 1 218 2 269 4 352 5 268 1 354 4 21 1 23 1 357 1 273 1 26 1 172 1 361 2 31 2 278 1 313 5 126 1 281 1 83 1 35 1 37 7 235 3 185 1 135 4 239 5 288 1 143 1 327 2 43 1 329 1 331 1 378 1 146 1 381 5 
334 1 3 1 53 1 151 4 298 1 61 1 17 2 265 2 301 1 113 1 218 2 268 1 269 2 352 1 354 2 21 1 23 1 357 1 273 1 274 1 26 1 172 1 361 2 31 2 278 1 313 2 126 1 37 4 235 2 185 1 135 2 239 4 288 1 143 1 327 2 43 1 331 1 378 1 146 1 381 4 
26 1 334 1 3 1 172 1 361 2 31 2 313 1 278 1 53 1 126 1 151 4 298 1 61 1 83 1 37 4 235 2 348 1 17 2 185 1 301 1 135 2 113 1 239 4 218 2 352 1 269 2 288 1 268 1 354 2 327 2 143 1 21 1 43 1 329 1 23 1 357 1 331 1 378 1 146 1 273 1 381 4 
26 1 334 1 3 1 172 1 361 2 31 2 313 1 278 1 53 1 126 1 151 4 298 1 61 1 83 1 37 4 235 2 348 1 17 2 185 1 301 1 135 2 113 1 239 4 218 2 352 1 269 2 288 1 268 1 354 2 327 2 143 1 21 1 43 1 329 1 23 1 357 1 331 1 378 1 146 1 273 1 381 4 
334 1 97 1 53 1 151 2 298 2 61 1 155 1 208 1 64 1 348 1 265 2 301 1 113 1 303 1 218 2 268 1 352 1 21 2 23 1 357 1 120 2 273 1 275 2 26 1 172 1 278 2 313 1 126 1 315 1 37 2 235 2 366 1 369 1 185 1 187 1 371 1 239 4 288 1 143 1 327 2 43 1 331 2 378 1 146 1 381 4 
26 1 334 1 3 1 172 1 361 2 31 2 313 1 278 1 53 1 126 1 151 5 298 1 61 1 83 1 35 1 37 5 235 2 348 1 17 2 185 1 301 1 113 1 135 3 239 4 218 2 352 1 268 1 288 1 269 3 327 2 143 1 354 3 21 1 329 1 43 1 23 1 357 1 331 1 378 1 273 1 146 1 381 4 
26 1 334 1 3 1 172 1 361 2 31 2 313 1 278 1 53 1 126 1 151 5 298 1 61 1 83 1 35 1 37 5 235 2 348 1 17 2 185 1 301 1 113 1 135 3 239 4 218 2 352 1 268 1 288 1 269 3 327 2 143 1 354 3 21 1 329 1 43 1 23 1 357 1 331 1 378 1 273 1 146 1 381 4 
26 1 334 1 172 1 278 1 53 1 126 1 151 2 298 1 61 1 155 1 37 1 235 1 185 1 265 1 301 1 113 1 239 3 218 1 288 1 268 1 327 1 143 1 21 1 43 1 23 1 357 1 120 1 331 1 378 1 274 1 273 1 146 1 275 1 381 3 
1 2 78 2 4 1 5 3 249 1 336 1 125 1 82 1 231 1 12 6 282 1 84 1 321 2 131 1 367 1 134 1 350 1 266 1 42 1 142 3 356 1 74 2 121 1 224 1 93 1 24 1 
1 4 78 1 5 8 249 2 311 1 50 1 125 1 336 11 316 1 82 2 231 11 152 2 60 1 128 1 12 14 156 1 299 1 84 1 321 2 323 3 114 1 87 1 350 2 266 2 162 1 69 3 42 2 142 6 144 2 356 4 74 1 244 1 224 2 
77 1 1 2 5 1 294 1 249 1 278 2 125 1 101 1 100 1 180 1 82 1 128 1 12 2 320 1 62 1 158 1 110 1 16 1 369 1 114 1 138 1 266 1 350 1 303 1 42 1 270 1 142 1 306 1 21 2 22 1 356 1 74 1 167 1 223 1 331 1 244 1 94 1 333 1 
1 6 4 1 5 10 6 1 249 3 294 2 336 7 101 2 57 1 152 2 258 1 12 20 62 3 299 2 260 2 110 2 158 2 159 2 264 1 16 3 18 2 114 1 350 3 266 3 303 1 270 3 306 1 21 3 22 2 356 7 74 2 167 2 223 2 121 1 224 3 24 1 78 4 278 3 125 3 82 3 231 7 316 4 128 1 320 2 84 3 131 1 321 8 367 1 369 1 373 2 138 1 42 3 289 2 142 10 144 2 331 1 244 1 93 1 94 1 
1 4 309 1 2 1 5 1 6 1 249 2 278 1 125 2 55 1 8 1 82 2 58 1 317 1 12 2 62 8 320 2 110 2 134 1 16 7 238 1 369 1 40 1 114 1 216 2 138 2 350 2 266 2 303 1 42 2 270 8 142 1 306 1 21 1 330 1 167 3 197 1 331 1 223 2 244 1 
1 2 78 1 5 1 249 1 278 1 336 1 125 1 231 1 315 1 82 1 152 1 154 1 128 1 12 3 299 1 84 1 321 1 369 1 350 1 266 1 303 1 42 1 142 2 21 1 144 1 356 1 195 1 331 1 224 1 
1 2 134 1 5 2 249 1 266 1 350 1 336 1 125 1 42 1 280 1 316 1 231 1 82 1 152 1 356 1 12 2 224 1 321 1 
1 2 134 1 78 1 249 1 266 1 350 1 336 1 125 1 42 1 142 2 231 1 82 1 356 1 12 2 299 1 15 1 84 1 321 1 
1 2 78 1 5 2 249 1 125 1 336 2 152 1 82 1 231 2 316 1 12 4 299 1 84 1 321 2 134 1 350 1 266 1 42 1 142 2 144 1 356 2 224 1 
1 2 5 2 249 1 266 1 350 1 336 1 125 1 42 1 280 1 316 1 231 1 82 1 152 1 356 1 317 1 12 2 224 1 321 1 
1 2 78 1 249 1 266 1 350 1 336 1 125 1 42 1 142 2 231 1 82 1 356 1 317 1 12 2 299 1 15 1 84 1 321 1 
1 2 78 1 5 2 249 1 125 1 336 2 152 1 82 1 231 2 316 1 317 1 12 4 299 1 84 1 321 2 350 1 266 1 42 1 142 2 144 1 356 2 224 1 
1 2 78 1 5 2 249 1 266 1 350 1 336 2 125 1 42 1 142 2 316 1 231 2 82 1 144 1 152 1 356 2 12 4 299 1 84 1 224 1 321 2 
1 2 5 1 294 1 249 1 278 1 125 1 101 1 82 1 12 2 320 1 62 1 158 1 110 1 16 1 114 1 138 1 266 1 350 1 42 1 289 1 270 1 142 1 21 1 22 1 74 1 167 1 223 1 244 1 
1 2 5 1 249 1 362 1 278 1 125 1 82 1 181 1 12 2 320 1 130 1 62 1 158 1 110 1 16 1 114 1 138 1 266 1 350 1 42 1 270 1 142 1 21 1 22 1 74 1 167 1 223 1 244 1 
1 2 78 1 5 2 249 1 125 1 336 2 152 1 82 1 231 2 316 1 128 1 12 4 299 1 84 1 321 2 350 1 266 1 42 1 142 2 144 1 356 2 224 1 
1 2 78 1 5 2 294 1 249 1 278 1 336 2 125 1 101 1 316 1 231 2 152 1 82 1 12 4 299 1 62 1 320 1 84 1 321 2 158 1 110 1 16 1 18 1 238 1 266 1 350 1 42 1 289 1 270 1 142 2 21 1 144 1 356 2 22 1 167 1 223 1 224 1 
1 2 124 1 5 2 249 1 278 1 125 1 336 1 316 1 315 1 82 1 152 1 231 1 154 1 128 1 12 3 299 1 84 1 321 1 369 1 350 1 266 1 303 1 42 1 142 1 21 1 144 1 356 1 331 1 224 1 
293 2 76 1 1 4 78 3 5 9 30 1 311 1 176 1 79 1 82 2 152 3 316 3 9 2 12 19 299 3 157 1 84 3 321 6 323 1 137 1 350 2 266 2 41 1 69 2 162 1 42 2 142 10 144 3 166 1 224 3 
293 1 76 2 1 6 78 2 5 14 30 1 176 1 79 2 316 2 82 3 152 3 33 1 127 2 9 4 12 26 108 1 299 2 84 2 321 4 261 1 323 2 137 1 350 3 266 3 41 1 374 1 162 2 69 2 42 3 142 12 164 1 144 3 224 3 225 1 
293 1 76 2 1 6 78 4 4 1 5 20 30 1 311 1 176 1 79 1 82 3 152 4 316 4 33 1 127 1 9 4 12 41 108 1 299 4 84 5 131 1 321 8 261 1 262 1 367 1 323 3 137 1 350 3 266 3 374 1 41 1 69 4 162 3 42 3 142 21 164 1 144 4 166 1 121 1 224 5 93 1 24 1 225 1 
293 1 76 2 1 8 78 4 4 1 5 20 30 1 311 1 176 1 79 1 82 4 152 4 316 3 33 1 127 2 9 4 12 38 108 1 299 3 84 4 131 1 321 7 261 1 262 1 367 1 323 3 137 1 350 4 266 4 374 1 41 1 69 4 162 3 42 4 142 18 164 1 144 4 166 1 121 1 224 5 93 1 24 1 225 1 
293 1 76 1 1 4 78 7 4 1 5 27 30 1 311 2 176 1 79 1 82 2 152 7 316 7 33 1 127 1 9 4 60 2 12 52 108 1 299 7 84 8 131 1 321 14 261 1 367 1 323 4 137 1 350 2 266 2 374 1 41 1 69 4 162 2 42 2 142 25 164 1 144 7 121 1 224 8 93 1 24 1 225 1 
314 1 365 1 372 1 307 1 332 1 145 1 88 1 75 1 305 1 169 1 
340 1 104 1 
314 1 203 1 201 1 29 1 365 1 372 1 307 1 145 1 88 1 
250 1 46 1 
59 1 215 1 47 1 
372 1 49 1 136 2 239 1 88 1 313 1 305 1 163 1 116 1 314 1 11 1 365 1 307 1 332 1 145 1 75 1 66 1 381 1 
372 1 49 1 136 2 239 1 88 1 313 1 305 1 163 1 116 1 314 1 11 1 365 1 307 1 332 1 145 1 75 1 66 1 381 1 
372 1 49 1 136 2 239 1 88 1 313 1 305 1 163 1 116 1 314 1 11 1 365 1 307 1 332 1 145 1 75 1 66 1 381 1 
250 1 47 1 46 1 
250 1 47 1 46 1 
59 1 215 1 
59 1 215 1 47 1 
13 1 346 1 
0 1 277 1 278 2 335 1 150 1 102 1 314 1 340 1 365 1 104 1 13 1 346 1 213 1 369 2 372 1 136 1 239 1 88 1 303 2 116 1 163 1 21 2 74 1 307 1 331 2 145 1 381 1 
1 2 227 1 5 1 249 1 278 2 125 1 55 1 82 1 256 1 58 1 128 1 12 2 320 1 62 2 110 1 16 2 114 1 216 2 266 1 350 1 42 1 270 2 142 1 21 2 272 1 194 1 167 1 223 1 222 1 331 2 244 1 
27 1 16 2 248 1 170 1 238 1 6 1 202 2 295 1 297 1 270 2 221 1 223 1 62 2 377 1 107 1 110 1 283 1 184 1 199 1 
27 1 16 1 248 1 170 1 186 1 6 1 202 2 295 1 270 1 221 1 223 1 62 1 377 1 107 1 110 1 283 1 184 1 
236 1 16 1 2 1 138 1 297 1 270 1 241 1 8 1 167 1 223 1 320 1 62 1 110 1 184 1 
27 1 16 1 248 1 170 1 6 1 202 2 295 1 297 1 270 1 221 1 223 1 62 1 377 1 107 1 110 1 283 1 184 1 199 1 
370 1 
26 1 247 1 185 1 282 1 313 1 90 1 352 1 
26 1 3 1 361 1 31 1 313 2 37 1 235 1 17 1 185 1 265 1 301 1 239 1 268 1 352 1 378 1 273 1 381 1 
247 1 296 6 152 2 153 2 62 3 299 2 63 1 110 3 263 1 111 2 16 3 17 6 265 12 301 4 113 2 352 2 268 4 270 3 355 2 22 3 167 10 358 2 223 4 308 2 224 2 273 4 26 8 175 6 313 8 81 2 232 2 233 3 320 3 84 2 36 2 37 5 235 3 284 1 368 1 238 1 185 9 287 2 373 2 239 5 138 1 90 1 191 1 192 1 144 2 242 2 378 4 148 2 198 1 381 5 
26 5 175 5 296 5 313 5 152 2 33 1 153 1 108 1 299 2 84 2 261 1 37 1 235 1 111 2 323 1 17 3 185 8 265 6 301 2 239 1 374 1 304 1 69 1 162 1 268 2 352 2 191 1 118 1 144 2 355 1 378 2 224 2 273 2 381 1 225 1 
26 2 4 1 97 1 278 1 298 1 315 1 153 1 182 1 208 1 84 1 131 1 366 1 111 2 185 2 369 1 301 1 371 1 239 1 303 1 268 1 21 1 329 1 331 1 378 1 224 2 93 1 273 1 381 1 
247 1 26 1 185 1 301 1 313 1 90 1 268 1 352 1 378 1 273 1 
26 5 111 2 17 5 185 5 265 10 373 1 175 5 296 5 313 5 144 2 152 2 153 1 299 2 224 2 84 2 
239 1 313 1 37 1 352 1 381 1 235 1 
26 2 2 1 171 1 363 1 8 1 320 1 62 4 110 1 37 4 235 2 284 2 349 1 16 4 368 1 20 1 185 2 301 2 239 3 138 2 268 1 270 4 191 2 355 2 167 1 223 1 378 2 273 2 25 1 381 3 
1 2 294 1 249 1 278 3 125 1 101 1 82 1 315 2 12 1 62 1 320 1 110 1 158 1 366 1 16 1 369 2 350 1 138 1 266 1 303 2 217 1 42 1 270 1 289 1 142 1 21 3 22 1 74 1 167 1 331 2 223 1 244 1 
26 2 17 2 185 1 265 4 301 1 175 2 296 2 313 4 268 1 352 2 191 1 355 1 378 1 273 1 24 1 
307 1 145 1 51 1 
307 1 145 1 51 1 
13 1 307 1 145 1 75 1 70 1 
307 1 145 1 51 1 
98 1 307 1 145 1 
98 1 307 1 145 1 
98 1 307 1 145 1 
307 1 145 1 
365 1 372 1 
1 4 367 1 78 2 4 1 5 4 266 2 350 2 42 2 142 4 316 1 82 2 127 1 12 8 84 1 224 1 121 1 131 1 321 3 93 1 24 1 
367 1 78 2 4 1 5 3 142 3 12 6 282 1 121 1 224 1 84 1 93 1 321 2 131 1 24 1 
1 2 78 1 5 2 266 1 350 1 42 1 142 2 230 1 82 1 144 1 152 1 316 1 12 4 299 1 84 1 224 1 321 2 
323 1 78 1 5 3 311 1 162 1 69 2 142 4 144 1 152 1 316 1 12 7 299 1 84 1 224 1 321 2 
1 4 78 5 4 2 5 11 311 1 316 4 152 2 82 2 127 2 60 1 12 23 156 1 299 2 84 3 131 1 321 9 367 1 323 2 266 2 350 2 69 2 42 2 142 12 144 2 376 1 121 1 224 3 93 2 24 1 
142 1 12 1 69 1 
323 1 5 1 12 1 
1 2 78 2 5 3 373 1 350 1 266 1 42 1 142 3 230 1 82 1 144 1 152 1 316 1 12 6 299 1 224 1 84 1 321 3 
1 2 78 1 5 6 316 1 82 1 152 2 33 1 12 12 108 1 299 2 84 2 321 2 261 1 323 1 350 1 266 1 41 1 374 1 69 1 162 1 42 1 142 6 144 2 224 2 225 1 
78 1 4 1 5 3 142 3 316 1 12 6 224 1 84 1 131 1 93 1 321 2 
1 2 367 1 78 1 4 1 5 1 266 1 350 1 42 1 142 2 316 1 82 1 376 1 127 1 12 3 121 1 321 2 93 1 
1 2 78 3 4 2 5 5 350 1 266 1 41 1 42 1 142 5 82 1 316 2 182 1 12 10 224 2 84 2 93 2 321 5 131 1 
1 2 5 2 266 1 350 1 41 1 42 1 82 1 152 1 316 1 12 2 224 1 321 1 
1 2 78 1 5 2 266 1 350 1 41 1 42 1 142 2 82 1 144 1 152 1 316 1 12 4 299 1 84 1 224 1 321 2 
1 6 78 1 4 1 5 1 266 3 350 3 41 1 42 3 142 2 82 3 316 1 166 1 127 1 376 1 12 3 93 1 321 2 
1 10 78 7 4 3 5 16 311 1 7 1 230 1 82 5 152 3 316 5 127 2 12 34 299 3 84 5 131 2 321 12 367 1 323 3 240 1 350 5 266 5 41 1 69 4 162 1 42 5 142 18 144 3 166 1 376 1 121 1 224 5 93 3 292 1 24 1 
1 2 78 2 4 1 5 4 82 1 12 8 84 1 321 2 131 1 367 1 323 1 350 1 266 1 41 1 69 1 162 1 42 1 142 4 224 1 121 1 93 1 24 1 225 1 
1 4 78 2 4 1 5 6 311 1 230 1 82 2 152 1 316 1 12 11 84 1 131 1 321 3 367 1 323 1 350 2 266 2 41 1 69 2 162 1 42 2 142 5 144 1 121 1 224 2 93 1 24 1 225 1 
1 6 78 3 4 1 5 9 230 1 316 1 82 3 152 2 33 1 127 1 12 19 108 1 299 2 84 3 131 1 321 4 261 1 367 1 323 1 350 3 266 3 41 1 374 1 69 1 162 1 42 3 142 10 144 2 121 1 224 3 93 1 24 1 225 1 
1 6 78 3 4 1 5 10 230 1 316 2 82 3 152 2 33 1 127 1 12 17 108 1 299 1 84 2 131 1 321 5 261 1 367 1 323 1 350 3 266 3 41 1 374 1 69 1 162 1 42 3 142 7 144 2 121 1 224 3 93 1 24 1 225 1 
1 2 78 2 4 1 5 4 82 1 12 8 84 1 321 2 131 1 367 1 323 1 350 1 266 1 41 1 69 1 162 1 42 1 142 4 224 1 121 1 93 1 24 1 225 1 
1 2 78 1 5 6 316 1 82 1 152 2 33 1 12 12 108 1 299 2 84 2 321 2 261 1 323 1 350 1 266 1 41 1 374 1 69 1 162 1 42 1 142 6 144 2 224 2 225 1 
1 8 78 3 4 1 5 10 230 1 316 2 82 4 152 2 33 1 127 2 12 18 108 1 299 1 84 2 131 1 321 5 261 1 367 1 323 1 350 4 266 4 41 1 374 1 69 1 162 1 42 4 142 8 144 2 121 1 224 3 93 1 24 1 225 1 
1 8 78 3 5 9 316 3 82 4 152 3 33 1 127 2 12 16 108 1 299 2 84 2 321 6 261 1 323 1 350 4 266 4 41 1 374 1 69 1 162 1 42 4 142 7 144 3 166 1 224 3 225 1 
367 1 78 3 4 3 5 3 142 4 316 3 12 7 84 1 121 2 224 1 93 3 321 6 131 1 
1 8 78 3 4 1 5 10 316 1 82 4 152 2 33 1 127 2 12 18 108 1 299 1 84 2 131 1 321 4 261 1 367 1 323 1 350 4 266 4 41 1 374 1 69 1 162 1 42 4 142 8 144 2 166 1 121 1 224 3 93 1 24 1 225 1 
179 1 80 1 21 1 74 1 331 1 278 1 53 1 
226 1 278 1 115 1 53 1 179 1 80 1 21 1 73 1 74 1 319 1 331 1 344 1 
270 1 2 1 16 1 8 1 167 1 223 1 282 1 320 1 62 1 138 1 110 1 
16 1 369 1 294 1 278 2 138 1 303 1 270 1 306 1 21 2 22 1 74 1 167 1 223 1 331 1 320 1 62 1 158 1 110 1 
294 1 278 2 298 1 62 1 320 2 110 1 158 1 284 1 16 1 369 2 287 1 303 1 270 1 306 1 21 2 22 2 74 1 357 1 167 3 331 2 223 1 146 1 148 1 
362 1 278 2 54 1 298 1 62 2 320 2 110 1 158 1 284 1 16 2 369 2 287 1 303 1 270 2 306 1 21 2 22 2 74 1 357 1 167 3 331 2 223 1 146 1 148 1 
313 1 54 1 254 1 81 1 233 1 62 3 320 1 110 1 37 1 284 1 16 3 287 1 113 1 239 2 138 1 352 1 270 3 271 1 22 1 167 4 223 1 148 1 381 2 
284 1 16 3 287 1 113 1 239 2 138 1 313 1 54 1 352 1 270 3 81 1 22 1 167 4 223 1 320 1 62 3 308 1 233 1 110 1 148 1 37 1 381 2 
270 1 16 1 223 1 197 1 62 1 110 1 
309 1 16 6 238 1 6 1 324 1 40 1 216 1 138 2 177 1 99 1 55 1 270 7 330 1 22 1 167 3 197 1 223 3 62 7 320 2 110 2 198 1 
1 4 4 1 5 3 294 1 249 2 336 1 101 1 12 6 62 1 110 1 158 1 159 1 16 1 18 1 350 2 266 2 303 1 270 1 306 1 21 2 356 1 22 1 74 2 167 1 223 1 121 1 224 1 24 1 78 2 278 2 125 2 82 2 231 1 128 1 320 1 84 1 321 2 131 1 367 1 238 1 369 1 42 2 289 1 142 3 194 1 331 1 93 1 
26 1 247 1 313 1 102 1 81 1 232 1 62 1 233 1 36 1 37 2 235 1 16 1 368 1 185 1 301 2 113 1 239 3 138 1 90 1 352 1 268 2 270 1 167 2 358 1 308 1 378 2 273 2 381 3 
270 2 16 2 81 1 238 1 22 1 167 2 223 2 197 1 320 1 62 2 110 1 198 1 263 1 
300 1 16 4 2 1 238 1 138 1 54 1 270 4 8 1 167 1 223 1 62 4 320 1 110 1 
284 1 16 2 324 1 99 1 351 1 270 2 258 1 22 1 167 1 223 2 62 2 320 1 359 1 110 1 
270 1 16 1 248 1 170 1 202 1 223 1 62 1 138 1 110 1 283 1 
16 2 238 1 6 1 270 2 55 1 256 1 167 1 223 1 62 2 320 1 110 1 
284 1 300 1 2 1 16 4 309 1 238 1 40 1 138 1 270 5 55 1 8 1 167 3 223 2 62 5 320 2 110 2 
284 1 300 1 2 1 16 4 309 1 238 1 138 1 270 5 55 1 204 1 8 1 167 3 223 2 62 5 320 2 110 2 
16 1 369 1 278 2 138 1 362 1 303 1 270 1 306 1 21 2 22 1 74 1 167 1 223 1 331 1 320 1 62 1 158 1 110 1 
284 1 16 1 324 1 177 1 99 1 270 1 22 1 167 1 223 2 62 1 320 1 110 1 198 1 
56 1 74 1 214 1 364 1 14 1 
214 2 113 1 239 2 313 1 352 1 253 1 102 1 56 2 298 1 193 1 34 1 23 1 74 1 357 1 364 1 14 2 146 1 65 1 381 2 
227 1 214 1 278 1 272 1 21 1 364 1 222 1 331 1 14 1 
193 1 34 1 364 1 
237 1 205 1 207 1 282 1 
237 1 96 1 205 1 173 1 207 1 105 1 32 1 
103 1 173 1 267 1 
310 1 237 1 96 1 173 3 174 1 32 3 229 1 205 1 206 2 207 1 105 1 245 1 
237 1 96 1 205 1 173 2 207 1 105 1 32 2 147 1 168 1 
200 1 96 1 173 1 202 1 32 1 229 1 318 1 221 1 207 1 105 1 283 1 
237 1 96 1 229 1 173 1 207 1 105 1 32 1 
237 2 96 1 229 1 205 1 173 1 105 1 32 1 
237 1 96 2 173 2 32 2 255 1 229 1 165 1 291 1 207 1 105 2 
200 1 237 1 96 1 173 3 32 3 229 1 205 1 328 1 196 1 207 2 105 1 168 2 38 1 
27 1 237 1 248 1 96 1 285 1 173 2 202 2 32 2 229 1 205 1 221 1 207 1 105 1 283 1 168 1 
200 1 237 1 96 2 28 1 173 4 32 4 229 1 205 1 207 2 105 2 147 1 168 2 38 1 
237 1 96 1 229 1 205 1 173 1 207 1 105 1 32 1 
200 1 237 2 96 1 174 1 173 4 32 4 205 2 290 1 206 1 207 3 105 1 245 1 168 2 38 1 
375 1 237 1 96 1 229 1 205 1 173 2 207 1 105 1 32 2 279 1 168 1 379 1 
237 1 96 1 229 1 205 1 206 2 174 2 173 3 207 1 105 1 32 3 245 1 325 1 
353 1 341 1 207 2 252 2 
96 1 229 1 173 1 39 1 105 1 32 1 
237 1 96 1 229 1 205 1 173 2 207 1 196 1 105 1 32 2 168 1 
85 1 
237 1 96 1 229 1 205 1 173 1 207 1 105 1 32 1 
237 1 96 1 229 1 205 1 206 1 173 3 196 1 207 1 105 1 32 3 168 1 
200 1 290 1 207 1 38 1 
237 1 207 1 

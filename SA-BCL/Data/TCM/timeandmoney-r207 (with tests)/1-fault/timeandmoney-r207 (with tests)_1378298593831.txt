#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
91 1 187 1 96 1 295 2 275 1 251 3 232 1 345 1 166 1 235 2 77 4 136 2 214 1 329 6 349 1 216 1 172 1 351 1 12 2 173 1 243 2 83 2 178 5 223 1 85 9 44 1 268 9 293 2 
91 1 187 1 96 1 295 2 275 1 251 3 232 1 345 1 235 2 166 1 77 4 136 2 214 1 329 6 349 1 216 1 172 1 351 1 12 2 173 1 243 2 83 2 178 5 223 1 85 9 44 1 268 9 293 2 
91 1 187 1 96 1 295 2 275 1 251 4 232 1 345 1 235 2 166 1 77 5 136 2 214 1 329 7 349 1 216 1 172 1 351 1 12 2 173 1 243 2 83 2 178 6 223 1 85 10 44 1 268 10 293 2 
187 1 96 1 295 2 275 1 251 2 232 1 345 1 235 2 166 1 77 3 136 1 214 1 329 4 349 1 216 1 172 1 351 1 12 2 173 1 243 2 83 2 178 4 223 1 85 7 44 1 268 7 293 2 
91 1 172 1 351 1 12 1 173 1 243 1 251 1 83 1 178 3 223 1 85 4 268 4 345 1 77 2 235 1 136 2 293 1 329 3 
187 1 351 1 93 1 12 1 173 1 295 1 243 1 275 1 324 1 178 1 83 1 130 1 85 2 268 2 345 1 293 1 
351 1 173 1 295 1 243 2 251 1 178 2 85 3 268 3 232 1 345 1 77 1 293 2 329 1 
91 1 295 1 251 3 232 1 345 1 77 4 135 1 235 1 136 2 329 7 349 1 216 1 172 1 351 1 12 1 332 1 173 1 243 2 178 5 83 1 223 1 85 9 268 9 293 2 
91 1 295 1 251 3 232 1 345 1 77 4 135 1 235 1 136 2 329 7 349 1 216 1 172 1 351 1 12 1 332 1 173 1 243 2 178 5 83 1 223 1 85 9 268 9 293 2 
160 1 129 1 238 1 
342 1 160 1 276 2 
134 2 280 2 24 1 236 2 137 2 205 1 40 2 375 2 
294 1 123 2 52 1 323 1 24 1 54 1 343 2 100 1 298 1 229 2 131 1 102 1 278 1 134 2 280 2 256 1 236 3 137 2 305 1 6 2 370 1 113 1 205 1 244 1 39 1 40 3 245 1 375 2 315 1 43 1 17 1 119 2 320 1 67 1 339 1 152 1 340 1 
124 1 134 1 280 1 236 1 137 1 205 1 159 1 40 1 194 1 375 1 
110 1 240 1 312 1 159 1 160 1 40 1 266 1 129 1 14 1 134 1 236 1 380 1 32 1 284 1 
110 2 240 1 312 1 159 1 160 1 40 1 266 1 375 1 129 1 280 1 134 1 137 1 236 1 380 1 284 2 
92 1 110 1 285 1 175 1 284 1 
15 1 92 1 110 2 285 1 59 1 160 1 129 1 284 2 
110 1 285 1 284 1 
92 1 110 1 124 1 205 1 159 1 194 1 40 1 375 1 299 1 280 1 134 1 137 1 236 1 284 1 
160 1 
92 1 110 2 285 1 219 1 59 1 160 1 129 1 284 2 
92 2 154 1 110 5 22 1 188 1 285 2 209 1 25 1 160 1 129 1 196 1 133 2 46 1 346 2 59 1 35 2 283 1 364 1 284 5 
94 1 123 1 52 1 323 1 343 1 40 2 375 1 131 1 231 1 280 1 134 1 256 1 236 2 119 1 305 1 67 1 370 1 339 1 141 1 340 1 
24 1 238 1 
24 2 40 2 375 1 212 1 134 2 280 1 199 1 236 2 137 1 
239 1 231 1 181 1 
371 1 123 1 52 1 323 1 24 1 343 1 40 1 131 1 256 1 236 1 119 1 305 1 67 1 370 1 339 1 340 1 
94 2 310 1 24 1 220 1 40 5 375 4 14 1 212 1 280 4 134 5 120 1 236 5 137 1 141 1 
124 1 134 2 280 2 236 2 348 1 159 1 40 2 375 2 
94 1 134 3 280 3 24 1 137 1 236 3 40 3 375 3 
124 1 134 1 280 1 236 1 159 1 40 1 375 1 
212 1 134 1 280 1 199 1 236 1 137 1 159 1 40 1 375 1 
294 1 94 1 123 1 323 1 52 1 24 1 54 1 159 1 343 1 100 1 298 1 229 2 131 1 278 1 211 1 212 1 134 3 280 3 256 1 137 2 236 4 305 1 6 1 370 1 141 1 284 1 110 1 240 1 312 1 205 1 39 1 40 4 266 1 245 1 375 3 43 1 84 1 17 1 119 1 67 1 380 1 339 1 152 1 340 1 
14 1 94 1 134 2 280 1 24 1 120 1 236 2 40 2 375 1 
110 1 94 2 240 1 312 1 159 1 160 1 40 3 266 1 375 3 211 1 212 1 280 3 134 3 378 1 137 1 236 3 380 1 141 1 284 1 
94 1 239 1 40 2 375 2 212 1 231 1 280 2 134 2 137 1 236 2 
123 1 52 1 323 1 24 1 343 1 40 1 131 1 256 1 236 1 119 1 305 1 67 1 339 1 370 1 340 1 
123 1 52 1 271 1 24 1 343 1 40 1 131 1 256 1 236 1 119 1 305 1 67 1 370 1 109 1 340 1 
294 1 95 1 1 1 2 1 157 1 54 1 100 1 298 1 229 2 253 1 231 2 6 4 259 1 239 2 373 1 38 1 39 2 222 1 43 1 336 1 181 2 17 1 320 2 338 1 
134 1 280 1 236 1 348 1 159 1 266 1 40 1 375 1 
151 1 69 1 
151 1 69 1 
334 1 158 1 
334 1 158 1 
334 1 158 1 
125 1 151 1 69 1 
125 1 151 1 69 1 
97 1 151 1 69 1 
75 1 334 1 158 1 151 2 34 1 69 2 
125 1 151 1 69 1 
151 1 252 1 69 1 
151 1 252 1 69 1 
151 1 252 1 69 1 
23 1 189 1 97 1 24 1 156 1 128 1 28 1 198 1 280 2 134 2 233 1 200 1 236 2 284 1 9 1 110 1 40 2 375 2 206 1 226 1 319 1 362 1 151 1 69 1 
110 2 189 1 23 3 174 1 264 1 374 1 160 1 128 2 99 1 75 1 163 2 198 2 226 2 200 2 379 1 337 1 151 2 69 2 284 2 
12 1 235 1 83 1 
12 1 324 1 83 1 
235 2 192 1 330 1 324 1 83 3 356 1 
365 1 235 1 330 1 324 1 83 2 356 1 
235 1 330 2 324 1 83 2 356 1 
92 4 50 2 22 2 95 1 342 1 160 2 57 1 129 1 73 1 276 3 196 3 133 1 233 1 29 1 346 1 59 1 168 1 35 1 9 1 284 5 110 5 143 2 36 1 285 1 373 1 38 1 353 1 359 2 336 1 46 1 362 1 249 1 
92 7 22 6 95 3 209 1 190 1 342 3 160 5 129 1 73 2 276 9 74 1 196 8 133 2 29 2 346 2 59 1 168 1 35 2 80 1 284 9 110 9 143 6 331 1 144 1 285 6 373 3 175 5 38 3 177 1 359 6 336 3 46 1 362 4 321 5 249 3 
92 2 50 1 22 2 95 1 209 1 342 2 160 3 129 1 73 1 276 4 196 3 133 1 29 1 346 1 35 1 284 3 110 3 36 1 143 2 373 1 38 1 353 1 359 2 336 1 362 1 249 1 
50 2 92 3 22 4 95 2 209 1 342 3 160 4 129 1 73 1 276 7 74 1 196 5 133 1 29 1 346 1 35 1 284 4 110 4 143 4 36 1 331 1 144 1 373 2 38 2 353 1 359 4 336 2 362 2 249 2 
269 1 370 1 238 1 
191 1 370 1 
260 1 
370 1 131 1 340 1 
122 1 370 1 
370 1 131 1 
269 2 182 1 63 1 370 3 131 1 340 1 
261 1 95 1 218 1 4 1 115 1 157 2 38 1 39 3 265 1 354 1 253 3 301 1 234 1 320 4 6 7 306 1 142 2 
261 1 95 1 218 1 4 1 115 1 157 2 38 1 39 3 265 1 354 1 253 3 301 1 234 1 320 4 6 7 306 1 142 2 
261 1 95 1 218 1 367 1 4 1 115 1 157 2 38 1 39 3 265 1 354 1 253 3 301 1 234 1 320 4 6 7 306 1 142 2 
95 4 4 1 157 5 228 4 100 1 298 1 229 2 253 10 301 1 279 1 234 1 302 1 165 1 6 31 306 2 142 3 261 2 218 2 61 1 114 1 373 3 115 5 38 4 265 1 39 15 354 2 43 1 179 1 118 3 357 1 336 3 17 1 320 16 249 3 
95 1 4 1 157 3 100 2 298 2 229 4 253 4 301 1 254 1 165 1 6 9 306 1 142 2 261 1 218 1 112 1 115 1 38 1 39 4 265 1 354 1 43 2 17 2 320 5 
123 1 295 1 192 1 343 1 193 1 324 1 197 1 345 1 235 1 303 1 256 1 305 1 329 1 351 1 11 1 12 1 262 1 173 1 243 1 149 1 221 1 314 1 178 1 83 2 85 2 268 2 119 1 208 1 293 1 381 1 
123 1 295 1 192 1 343 1 193 1 324 1 197 1 345 1 235 1 303 1 256 1 305 1 329 2 7 1 351 1 12 1 262 1 243 1 149 1 221 1 246 1 314 1 178 1 83 2 85 3 268 3 361 1 119 1 293 1 381 1 
123 1 295 1 192 1 343 1 193 1 324 1 197 1 345 1 303 1 235 1 256 1 305 1 329 2 7 1 351 1 12 1 262 1 221 1 314 1 178 1 83 2 85 2 268 2 361 1 119 1 
123 1 52 1 295 2 243 1 221 2 343 1 193 2 246 1 65 1 131 1 207 1 277 1 85 1 197 2 268 1 360 1 327 1 256 1 119 1 305 1 370 1 293 1 184 1 
123 1 295 1 192 1 343 1 193 1 324 1 197 1 235 1 303 1 256 1 305 1 11 1 12 1 262 1 173 1 243 1 149 1 221 1 314 1 83 2 85 1 268 1 361 1 119 1 293 1 381 1 
326 1 
52 2 3 4 342 2 343 2 159 1 160 2 161 1 346 1 256 1 305 1 59 3 60 1 171 2 170 1 309 1 110 5 311 1 312 1 263 2 313 2 266 1 14 1 227 2 119 2 183 2 184 1 186 1 123 2 21 1 22 2 366 1 129 1 276 2 131 1 196 2 133 1 134 1 29 1 236 1 281 2 32 1 33 1 370 1 35 1 284 5 240 1 241 2 285 6 147 1 242 1 40 1 207 1 86 1 46 1 380 1 
186 1 110 3 240 1 311 1 312 1 219 1 285 2 3 2 159 1 266 1 40 1 161 1 14 1 86 1 134 1 236 1 183 1 380 1 59 1 33 1 32 1 284 3 
186 1 3 3 159 1 160 1 129 1 161 1 134 1 236 1 32 1 33 1 59 1 284 3 110 3 240 1 311 1 312 1 285 1 219 1 263 1 40 1 266 1 14 1 86 1 380 1 
186 1 3 3 159 1 160 1 129 1 161 1 134 1 236 1 59 1 32 1 33 1 284 3 110 3 240 1 311 1 312 1 219 1 285 2 263 1 40 1 266 1 14 1 86 1 227 1 380 1 183 1 
186 1 21 1 22 1 3 6 342 2 159 1 160 5 129 5 161 1 196 1 133 1 164 1 134 1 346 1 236 1 281 2 32 1 59 3 33 1 60 1 35 1 171 2 284 5 111 1 110 5 240 1 311 1 312 1 241 2 285 7 219 1 263 4 313 2 40 1 266 1 355 1 14 1 86 1 46 1 47 1 227 4 380 1 183 4 153 1 
3 4 342 2 159 1 160 2 161 1 346 1 59 2 60 1 171 2 309 1 110 4 311 1 312 1 263 2 313 2 266 1 14 1 227 2 183 2 186 1 22 1 21 1 129 1 276 2 196 1 133 1 134 1 236 1 281 2 33 1 32 1 35 1 284 4 240 1 241 2 285 4 40 1 86 1 46 1 380 1 
186 1 21 1 22 1 3 4 342 2 159 1 160 1 129 1 161 1 196 1 164 1 133 1 134 1 346 1 236 1 281 2 59 2 32 1 33 1 60 1 35 1 171 2 284 4 110 4 240 1 311 1 312 1 285 4 241 2 263 2 313 2 40 1 266 1 14 1 86 1 47 1 46 1 227 2 183 2 380 1 153 1 
186 1 21 1 22 1 3 4 342 2 159 1 160 1 129 1 161 1 196 1 164 1 133 1 134 1 346 1 236 1 281 2 59 2 32 1 33 1 60 1 35 1 171 2 284 4 110 4 240 1 311 1 312 1 285 4 241 2 263 2 313 2 40 1 266 1 14 1 86 1 47 1 46 1 227 2 183 2 380 1 153 1 
186 1 270 1 21 1 22 1 3 4 159 1 160 1 129 1 101 2 276 2 161 1 196 1 133 1 134 1 346 1 236 1 281 2 59 2 138 1 32 1 33 1 35 1 284 4 110 4 240 1 311 1 312 1 285 4 241 2 263 2 40 1 266 1 117 1 14 1 86 1 46 1 227 2 183 2 380 1 185 2 153 1 
186 1 21 1 22 1 3 5 342 2 159 1 160 1 129 1 161 1 196 1 133 1 164 1 134 1 346 1 236 1 281 2 59 2 32 1 33 1 60 1 35 1 171 2 284 4 110 4 111 1 240 1 311 1 312 1 241 2 285 5 263 3 313 2 40 1 266 1 14 1 86 1 46 1 47 1 227 3 380 1 183 3 153 1 
186 1 21 1 22 1 3 5 342 2 159 1 160 1 129 1 161 1 196 1 133 1 164 1 134 1 346 1 236 1 281 2 59 2 32 1 33 1 60 1 35 1 171 2 284 4 110 4 111 1 240 1 311 1 312 1 241 2 285 5 263 3 313 2 40 1 266 1 14 1 86 1 46 1 47 1 227 3 380 1 183 3 153 1 
3 4 159 1 160 1 101 2 161 1 346 1 59 2 309 1 110 4 311 1 312 1 263 2 266 1 14 1 227 2 183 2 185 2 186 1 22 1 21 1 129 1 276 2 196 1 133 1 134 1 236 1 281 2 138 1 33 1 32 1 35 1 284 4 240 1 241 2 285 4 40 1 86 1 46 1 380 1 
294 1 95 1 24 2 4 1 157 2 54 1 100 1 298 1 229 2 253 2 301 1 231 1 6 6 306 1 238 1 142 1 239 1 259 1 218 1 38 1 265 1 39 3 43 1 181 1 17 1 320 3 
294 1 95 1 24 1 157 1 228 3 54 2 100 2 298 2 229 4 253 2 231 11 302 1 304 1 6 14 282 1 239 4 61 1 115 1 373 2 38 2 39 6 315 1 43 2 118 3 66 1 181 11 336 1 17 2 320 8 89 1 152 1 49 1 249 2 
294 1 123 1 94 1 341 1 323 1 52 1 24 1 343 1 54 1 298 1 100 1 229 2 131 1 134 1 280 1 256 1 236 2 305 1 202 1 6 2 370 1 282 1 141 1 371 1 239 1 333 1 40 2 39 1 375 1 315 1 43 1 119 1 17 1 67 1 320 1 339 1 152 1 340 1 
294 3 94 1 95 3 52 1 4 1 157 4 343 3 54 3 56 1 100 3 298 3 253 8 301 1 256 2 305 2 6 20 5 2 306 1 218 1 115 4 265 1 315 1 361 1 181 7 119 3 17 3 67 2 320 10 19 2 322 2 123 3 323 2 24 2 229 6 131 2 278 2 231 7 280 1 134 1 236 3 282 1 370 2 141 1 142 1 203 1 372 1 239 7 373 2 38 3 39 10 40 3 375 1 43 3 377 2 336 2 339 2 152 1 249 2 340 2 
294 2 94 1 123 8 52 2 343 8 54 2 100 2 298 2 229 4 103 1 131 2 134 1 280 1 256 2 236 1 305 2 347 1 167 1 6 2 370 3 259 1 113 2 64 1 40 1 39 1 375 1 116 1 82 1 315 1 43 2 207 1 318 1 361 1 208 1 119 7 17 2 320 1 152 1 184 1 
294 1 95 1 26 1 157 1 54 1 100 1 298 1 229 2 253 1 231 1 212 1 280 1 134 1 137 1 236 1 6 3 282 1 239 1 373 1 38 1 40 1 39 2 375 1 43 1 181 1 336 1 17 1 320 1 249 1 
294 1 239 1 259 1 1 1 115 1 373 1 54 1 38 1 298 1 100 1 229 2 43 1 253 1 231 1 181 1 17 1 320 2 6 2 
294 1 239 1 259 1 95 1 157 1 54 1 39 2 298 1 100 1 229 2 43 1 253 1 231 1 181 1 336 1 17 1 338 1 6 2 
294 1 95 1 157 1 54 1 100 1 298 1 229 2 253 2 231 2 6 4 259 1 239 2 373 1 115 1 38 1 39 2 43 1 181 2 336 1 17 1 320 2 249 1 
294 1 239 1 1 1 115 1 373 1 54 1 38 1 116 1 298 1 100 1 229 2 43 1 253 1 231 1 181 1 17 1 320 2 6 2 
294 1 239 1 95 1 157 1 54 1 39 2 116 1 298 1 100 1 229 2 43 1 253 1 231 1 181 1 336 1 17 1 338 1 6 2 
294 1 95 1 157 1 54 1 100 1 298 1 229 2 253 2 231 2 6 4 239 2 373 1 115 1 38 1 39 2 116 1 43 1 181 2 336 1 17 1 320 2 249 1 
294 1 95 1 157 1 54 1 100 1 298 1 229 2 253 2 231 2 6 4 239 2 373 1 115 1 38 1 39 2 43 1 181 2 336 1 17 1 320 2 249 1 
294 1 123 1 323 1 52 1 24 1 343 1 54 1 298 1 100 1 229 2 131 1 278 1 256 1 236 1 305 1 6 2 370 1 40 1 39 1 315 1 43 1 119 1 17 1 320 1 67 1 339 1 152 1 340 1 
294 1 123 1 271 1 52 1 24 1 343 1 54 1 298 1 100 1 229 2 131 1 256 1 236 1 305 1 237 1 6 2 370 1 109 1 40 1 39 1 315 1 43 1 119 1 17 1 320 1 67 1 152 1 340 1 
294 1 95 1 157 1 54 1 100 1 298 1 229 2 253 2 231 2 6 4 282 1 239 2 373 1 115 1 38 1 39 2 43 1 181 2 336 1 17 1 320 2 249 1 
294 1 123 1 95 1 323 1 157 1 343 1 54 1 298 1 100 1 229 2 131 1 253 2 278 1 231 2 256 1 236 1 305 1 6 4 370 1 239 2 115 1 373 1 38 1 39 2 40 1 43 1 377 1 336 1 181 2 119 1 208 1 17 1 320 2 67 1 339 1 249 1 340 1 
294 1 95 1 54 1 100 1 298 1 229 2 253 1 212 1 231 1 280 1 134 1 137 1 236 1 6 3 282 1 369 1 239 1 115 1 373 1 38 1 39 1 40 1 375 1 43 1 336 1 181 1 17 1 320 2 249 1 
155 1 95 5 53 1 4 1 157 4 298 3 100 3 253 8 301 1 105 2 302 1 165 1 344 1 58 1 6 41 257 4 306 1 307 1 308 1 61 3 218 1 112 1 115 4 265 1 118 3 180 1 17 3 320 20 20 1 228 4 229 6 230 1 368 1 79 1 142 1 146 1 373 4 38 5 39 21 43 3 336 4 292 1 249 4 
155 1 95 4 4 1 53 1 157 4 228 4 100 4 298 4 230 1 229 8 253 7 301 1 105 2 344 1 165 2 368 1 302 1 58 1 257 4 6 38 79 1 306 1 142 1 308 1 307 1 218 1 61 3 112 1 146 1 373 4 115 3 38 5 265 1 39 18 43 4 118 3 180 1 336 3 17 4 292 1 320 20 20 1 249 4 
155 1 95 8 4 1 53 1 157 7 228 4 100 2 298 2 230 1 229 4 253 14 301 1 105 1 165 1 368 1 302 2 304 2 58 1 257 4 6 52 79 1 306 1 142 1 308 1 307 1 218 1 61 2 112 1 146 1 373 7 115 7 38 8 265 1 39 25 43 2 118 4 180 1 336 7 17 2 292 1 320 27 249 7 
95 3 157 3 228 2 100 2 298 2 229 4 253 6 105 1 368 1 302 1 257 2 6 19 79 1 61 1 112 1 146 1 373 3 115 3 38 3 39 10 43 2 118 1 180 2 336 3 247 1 17 2 292 1 320 9 20 1 249 3 
155 1 95 2 53 1 157 2 228 2 100 3 298 3 230 1 229 6 253 4 105 2 165 2 368 1 58 1 257 4 6 26 79 1 308 1 307 1 61 2 112 1 146 1 115 2 373 3 38 3 39 12 43 3 118 2 180 1 336 2 17 3 292 2 320 14 249 3 
75 1 198 1 226 1 200 1 174 1 290 1 264 1 151 1 128 1 69 1 
97 1 156 1 
198 1 226 1 272 1 273 1 200 1 151 1 128 1 258 1 69 1 
125 1 296 1 
335 1 34 1 252 1 
110 1 189 1 23 2 174 1 264 1 374 1 160 1 128 1 75 1 163 1 198 1 226 1 200 1 379 1 337 1 151 1 284 1 69 1 
110 1 189 1 23 2 174 1 264 1 374 1 160 1 128 1 75 1 163 1 198 1 226 1 200 1 379 1 337 1 151 1 284 1 69 1 
110 1 189 1 23 2 174 1 264 1 374 1 160 1 128 1 75 1 163 1 198 1 226 1 200 1 379 1 337 1 151 1 284 1 69 1 
125 1 296 1 34 1 
125 1 296 1 34 1 
335 1 252 1 
335 1 34 1 252 1 
28 1 206 1 
92 1 23 1 97 1 24 1 156 1 128 1 163 1 28 1 198 1 233 1 280 2 134 2 236 2 200 1 284 1 9 1 110 1 374 1 40 2 375 2 206 1 16 1 226 1 319 1 362 1 151 1 69 1 
294 1 123 2 343 2 54 1 298 1 100 1 229 2 131 1 132 1 134 2 256 1 236 2 305 1 347 1 6 2 370 1 282 1 81 1 113 2 40 2 39 1 82 1 315 1 43 1 317 1 17 1 119 2 121 1 320 1 88 1 152 1 
51 1 123 2 12 1 262 1 192 1 343 2 221 1 324 1 83 2 235 1 361 1 303 1 256 1 119 2 208 1 305 1 291 1 381 1 68 1 
51 1 123 1 12 1 262 1 192 1 343 1 221 1 324 1 83 2 235 1 361 1 303 1 256 1 119 1 213 1 305 1 381 1 
123 1 52 1 343 1 221 1 131 1 207 1 325 1 360 1 256 1 119 1 305 1 291 1 370 1 184 1 
51 1 123 1 12 1 262 1 192 1 343 1 221 1 324 1 83 2 235 1 361 1 303 1 256 1 119 1 305 1 291 1 381 1 68 1 
37 1 
196 1 22 1 25 1 160 1 129 1 238 1 364 1 
22 1 342 1 160 2 129 1 276 1 196 1 133 1 346 1 59 1 60 1 35 1 171 1 284 1 110 1 285 1 313 1 46 1 
95 2 52 1 250 1 342 6 55 1 343 3 98 1 160 8 256 3 346 4 106 2 305 4 59 3 170 1 110 5 312 2 62 2 352 1 316 2 359 6 119 3 182 1 269 2 122 2 19 2 364 1 123 3 22 8 25 1 191 3 127 2 195 2 129 2 276 12 131 3 196 9 27 2 133 4 29 2 201 2 370 10 35 4 140 2 284 5 143 6 285 5 373 2 38 2 289 1 336 2 46 4 208 1 249 2 340 3 
0 1 155 1 22 5 95 2 342 3 53 1 127 2 228 1 160 5 129 2 276 6 196 8 133 2 29 1 346 2 58 1 59 1 35 2 170 1 308 1 284 1 307 1 110 1 143 5 61 1 285 1 62 1 373 2 38 2 42 1 118 1 359 5 336 2 46 2 249 2 
124 1 22 2 95 1 4 1 159 1 127 2 194 1 299 1 196 2 133 1 164 1 280 1 134 1 346 1 236 1 137 1 306 1 35 1 284 1 110 1 218 1 62 1 205 1 38 2 40 1 375 1 45 1 46 1 
22 1 25 1 160 1 129 1 196 1 133 1 46 1 346 1 35 1 364 1 
22 5 143 5 95 2 62 1 373 2 342 5 127 2 38 2 160 5 276 10 196 5 359 5 336 2 19 1 249 2 
110 1 285 1 59 1 160 1 129 1 284 1 
123 4 22 2 52 2 250 2 209 1 55 1 343 4 131 1 196 2 133 2 29 2 256 1 346 2 107 1 305 1 59 2 370 1 35 2 170 2 284 3 110 3 285 4 147 1 242 1 207 1 150 1 46 1 119 4 184 1 
294 1 123 1 52 1 323 1 24 1 343 1 54 1 100 1 298 1 229 2 131 1 278 1 134 2 280 2 256 1 236 3 137 2 305 1 6 1 370 1 205 1 39 1 40 3 245 1 375 2 43 1 17 1 119 1 67 1 339 1 152 1 340 1 
143 2 22 2 342 2 160 4 129 2 276 4 196 1 359 2 133 1 29 1 46 1 346 1 35 1 142 1 170 1 
376 1 198 1 128 1 
376 1 198 1 128 1 
198 1 174 1 72 1 128 1 206 1 
376 1 198 1 128 1 
224 1 198 1 128 1 
224 1 198 1 128 1 
224 1 198 1 128 1 
198 1 128 1 
151 1 69 1 
155 1 95 1 4 1 157 2 228 1 100 1 298 1 229 2 253 2 301 1 6 8 306 1 142 1 61 1 218 1 112 1 38 1 39 4 265 1 43 1 118 1 17 1 320 4 
155 1 95 1 4 1 157 2 228 2 126 1 100 2 298 2 229 4 253 3 301 1 302 1 6 11 306 1 142 1 218 1 61 1 112 1 373 1 115 1 38 2 265 1 39 5 43 2 118 1 17 2 320 6 249 1 
155 1 95 3 4 1 53 1 157 3 126 1 228 1 100 3 298 3 229 6 253 4 301 1 165 1 58 1 6 19 306 1 142 1 307 1 308 1 218 1 61 1 112 1 115 1 373 2 38 3 265 1 39 10 43 3 118 1 336 2 17 3 320 9 249 2 
155 1 95 2 4 1 53 1 157 3 126 1 228 1 100 3 298 3 229 6 253 5 301 1 165 1 58 1 6 17 306 1 142 1 307 1 308 1 218 1 61 1 112 1 115 2 373 2 38 3 265 1 39 7 43 3 118 1 336 1 17 3 320 10 249 2 
155 1 95 1 4 1 157 2 228 1 100 1 298 1 229 2 253 2 301 1 6 8 306 1 142 1 61 1 218 1 112 1 38 1 39 4 265 1 43 1 118 1 17 1 320 4 
155 1 95 2 53 1 157 1 228 1 100 1 298 1 229 2 253 2 58 1 6 12 307 1 308 1 61 1 112 1 115 1 373 2 38 2 39 6 43 1 118 1 336 2 17 1 320 6 249 2 
155 1 95 2 4 1 53 1 157 3 228 1 126 1 100 4 298 4 229 8 253 5 301 1 165 2 58 1 6 18 306 1 142 1 308 1 307 1 218 1 61 1 112 1 115 2 373 2 38 3 265 1 39 8 43 4 118 1 336 1 17 4 320 10 249 2 
155 1 95 2 53 1 157 3 228 1 100 4 298 4 229 8 253 6 165 2 58 1 6 16 308 1 307 1 61 1 112 1 115 3 373 3 38 3 39 7 43 4 118 1 336 2 17 4 320 9 20 1 249 3 
95 1 218 3 115 3 4 1 157 3 38 1 39 4 265 1 253 6 301 2 320 3 6 7 306 3 
155 1 95 2 4 1 53 1 157 3 228 1 100 4 298 4 229 8 253 4 301 1 165 2 58 1 6 18 306 1 142 1 308 1 307 1 218 1 61 1 112 1 115 1 373 2 38 3 265 1 39 8 43 4 118 1 336 1 17 4 320 10 20 1 249 2 
95 1 218 1 4 1 115 1 157 2 38 1 39 4 265 1 298 2 100 2 229 4 43 2 253 3 301 1 165 1 17 2 320 4 6 8 306 1 142 1 
218 1 95 1 4 1 157 2 38 1 39 3 265 1 253 2 301 1 320 3 6 6 306 1 238 1 142 1 
95 1 373 1 115 1 157 1 126 1 38 1 39 2 298 1 100 1 229 2 43 1 253 2 336 1 17 1 320 2 6 4 249 1 
95 1 61 1 373 1 115 1 157 1 228 2 38 1 39 4 118 1 253 2 336 1 302 1 320 3 6 7 249 1 
95 3 4 1 274 1 157 5 228 2 298 2 100 2 229 4 253 9 301 1 302 1 165 2 304 1 6 23 306 2 142 1 218 2 115 4 373 2 38 3 265 1 39 12 43 2 118 2 336 2 17 2 320 11 49 1 249 2 
6 1 228 1 39 1 
320 1 6 1 118 1 
95 1 373 1 115 1 157 2 126 1 38 1 39 3 100 1 298 1 229 2 43 1 253 3 336 1 17 1 320 3 6 6 19 1 249 1 
155 1 95 2 53 1 157 1 228 1 100 1 298 1 229 2 253 2 58 1 6 12 307 1 308 1 61 1 112 1 115 1 373 2 38 2 39 6 43 1 118 1 336 2 17 1 320 6 249 2 
95 1 218 1 4 1 115 1 157 1 38 1 39 3 253 2 320 3 6 6 306 1 
218 1 115 1 274 1 157 1 39 2 265 1 298 1 100 1 229 2 43 1 253 2 301 1 165 1 17 1 320 1 6 3 306 1 
218 2 95 2 112 1 115 2 4 1 157 3 38 2 39 5 100 1 298 1 229 2 43 1 253 5 45 1 17 1 320 5 6 10 306 2 
112 1 373 1 115 1 38 1 298 1 100 1 229 2 43 1 253 1 17 1 320 2 6 2 
95 1 112 1 373 1 115 1 157 1 38 1 39 2 298 1 100 1 229 2 43 1 253 2 336 1 17 1 320 2 6 4 249 1 
218 1 112 1 274 1 115 1 157 1 39 2 298 3 100 3 229 6 43 3 253 2 165 1 17 3 320 1 6 3 306 1 20 1 
95 5 4 2 274 1 157 7 228 4 126 1 100 5 298 5 229 10 253 12 301 1 279 1 165 2 302 1 6 34 306 3 142 1 218 3 61 1 112 1 114 1 373 3 115 5 38 5 265 1 39 18 43 5 118 3 357 1 336 3 17 5 320 16 20 1 249 3 
14 1 134 1 24 1 236 1 120 1 40 1 169 1 
286 1 24 1 287 1 40 1 13 1 14 1 87 1 134 1 48 1 120 1 236 1 169 1 
123 1 52 1 256 1 119 1 305 1 343 1 370 1 184 1 238 1 131 1 207 1 
94 1 123 1 52 1 24 1 343 1 40 2 375 1 131 1 280 1 134 1 256 1 236 2 119 1 305 1 67 1 370 1 339 1 340 1 
123 1 94 1 24 1 250 1 343 1 159 1 131 2 134 2 280 1 256 1 236 2 305 1 201 1 370 3 240 1 40 2 266 1 375 2 119 1 67 1 122 1 339 1 340 2 
123 2 94 1 271 1 24 1 250 1 343 2 159 1 131 2 134 2 280 1 256 1 236 2 305 1 201 1 370 3 240 1 40 2 266 1 375 2 358 1 119 2 67 1 122 1 340 2 
110 2 123 3 10 1 52 1 312 1 285 1 250 1 191 1 343 3 160 1 129 1 131 1 358 1 30 1 256 1 119 3 201 1 305 1 122 1 269 1 370 4 340 1 284 2 
110 2 123 3 52 1 312 1 285 1 250 1 191 1 343 3 160 1 129 1 131 1 358 1 256 1 119 3 201 1 305 1 122 1 269 1 370 4 140 1 340 1 284 2 
123 1 318 1 256 1 119 1 305 1 343 1 
123 7 113 1 52 2 64 1 343 7 297 1 82 1 103 1 131 2 318 1 361 1 255 1 256 2 208 1 119 6 305 3 182 1 167 1 370 3 108 1 340 1 
294 2 94 1 123 1 95 1 323 1 24 2 4 1 157 2 54 2 343 1 298 2 100 2 229 4 131 1 253 2 278 1 301 1 231 1 134 1 280 1 256 1 236 2 305 1 6 6 370 1 282 1 306 1 142 1 239 1 218 1 38 1 39 3 265 1 40 2 375 1 43 2 377 1 181 1 17 2 208 1 119 1 320 3 67 1 88 1 339 1 322 1 340 1 
92 1 123 1 22 1 52 1 25 1 191 1 55 1 343 1 160 1 195 1 129 1 196 1 27 1 133 2 346 2 59 1 370 2 35 2 140 1 284 3 110 3 312 1 285 2 316 1 46 2 119 1 269 1 364 1 
123 2 343 2 98 1 131 1 318 1 256 1 208 1 119 2 305 2 269 1 182 1 370 2 340 1 
358 1 123 4 70 1 52 1 256 1 208 1 119 4 305 1 343 4 370 1 184 1 131 1 207 1 
372 1 123 2 250 1 343 2 131 1 255 1 256 1 119 2 305 2 370 1 139 1 350 1 108 1 340 1 
123 1 12 1 52 1 303 1 256 1 119 1 305 1 343 1 324 1 83 1 
123 2 343 2 82 1 131 1 361 1 256 1 208 1 119 2 305 1 121 1 370 1 
123 5 70 1 52 1 250 1 343 5 82 1 207 1 131 2 103 1 256 2 119 4 208 1 305 2 167 1 370 3 184 1 
123 5 70 1 52 1 250 1 343 5 82 1 207 1 131 2 103 1 256 2 119 4 208 1 305 2 90 1 370 3 184 1 
94 1 123 1 52 1 271 1 24 1 343 1 40 2 375 1 131 1 280 1 134 1 256 1 236 2 119 1 305 1 67 1 370 1 340 1 
123 1 250 1 343 1 297 1 131 1 255 1 256 1 119 1 305 2 182 1 370 1 108 1 340 1 
267 1 217 1 24 1 41 1 8 1 
92 1 110 2 240 1 217 1 312 1 24 1 159 1 160 1 266 1 41 2 129 1 267 2 211 1 18 1 328 1 380 1 248 1 8 2 284 2 
81 1 217 1 41 1 40 1 132 1 267 1 317 1 134 1 236 1 
217 1 328 1 248 1 
351 1 345 1 178 1 238 1 
85 1 351 1 268 1 345 1 243 1 293 1 178 1 
197 1 268 1 295 1 
187 2 85 3 351 1 268 3 345 1 78 1 173 1 243 1 215 1 293 1 210 1 178 1 
85 2 351 1 268 2 345 1 136 1 243 1 329 1 293 1 178 1 
172 1 85 1 12 1 268 1 235 1 77 1 173 1 243 1 293 1 83 1 178 1 
85 1 268 1 345 1 173 1 243 1 293 1 178 1 
85 1 351 1 268 1 345 2 173 1 243 1 293 1 
204 1 71 1 173 1 243 2 176 1 178 1 85 2 268 2 345 1 293 2 
351 1 173 1 243 1 251 1 178 2 85 3 268 3 345 1 77 1 293 1 329 2 349 1 216 1 
351 1 12 1 173 1 243 1 192 1 324 1 178 1 83 2 300 1 85 2 268 2 345 1 235 1 293 1 329 1 
91 1 351 1 173 1 243 2 251 1 178 2 85 4 268 4 345 1 77 1 136 1 293 2 329 2 
85 1 351 1 268 1 345 1 173 1 243 1 293 1 178 1 
187 1 351 2 243 1 251 1 178 3 85 4 268 4 104 1 78 1 345 2 77 1 215 1 329 2 293 1 
351 1 145 1 173 1 243 1 178 1 85 2 225 1 268 2 345 1 135 1 293 1 329 1 
187 2 85 3 351 1 268 3 345 1 78 2 173 1 243 1 215 1 293 1 178 1 162 1 
288 1 148 2 363 1 178 2 
85 1 268 1 31 1 173 1 243 1 293 1 
85 2 351 1 268 2 345 1 173 1 243 1 329 1 293 1 216 1 178 1 
76 1 
85 1 351 1 268 1 345 1 173 1 243 1 293 1 178 1 
187 1 351 1 173 1 243 1 178 1 85 3 268 3 345 1 329 1 293 1 216 1 
104 1 77 1 251 1 178 1 
345 1 178 1 

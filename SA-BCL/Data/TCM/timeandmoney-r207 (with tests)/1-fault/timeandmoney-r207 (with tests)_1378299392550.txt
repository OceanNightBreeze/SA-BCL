#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 338 221 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
316 9 238 1 4 1 89 1 168 5 239 9 172 2 319 3 43 1 370 1 177 1 144 2 301 1 300 1 253 2 305 1 99 4 78 2 151 6 104 1 200 2 351 1 378 1 325 2 81 1 284 1 327 2 288 1 
316 9 238 1 4 1 89 1 168 5 239 9 172 2 319 3 43 1 370 1 177 1 144 2 301 1 300 1 253 2 305 1 99 4 151 6 78 2 104 1 200 2 351 1 378 1 325 2 81 1 284 1 327 2 288 1 
316 10 238 1 4 1 89 1 168 6 239 10 172 2 319 4 43 1 370 1 177 1 144 2 301 1 300 1 253 2 305 1 99 5 151 7 78 2 104 1 200 2 351 1 378 1 325 2 81 1 284 1 327 2 288 1 
316 7 238 1 4 1 89 1 168 4 239 7 172 2 319 2 43 1 370 1 177 1 144 2 301 1 300 1 253 2 305 1 99 3 151 4 78 1 104 1 200 2 378 1 325 2 81 1 284 1 327 2 288 1 
316 4 253 1 238 1 99 2 89 1 78 2 151 3 168 3 239 4 200 1 351 1 319 1 325 1 81 1 284 1 327 1 43 1 144 1 
160 1 316 2 305 1 238 1 331 1 168 1 89 1 239 2 172 1 200 1 374 1 378 1 325 1 284 1 327 1 144 1 
316 3 238 1 99 1 4 1 89 1 168 2 151 1 239 3 172 1 319 1 284 1 327 2 144 2 
316 9 238 1 4 1 89 1 168 5 239 9 172 1 319 3 43 1 144 2 300 1 253 1 372 1 99 4 151 7 78 2 104 1 51 1 200 1 351 1 325 1 81 1 284 1 327 2 
316 9 238 1 4 1 89 1 168 5 239 9 172 1 319 3 43 1 144 2 300 1 253 1 372 1 99 4 151 7 78 2 104 1 51 1 200 1 351 1 325 1 81 1 284 1 327 2 
332 1 373 1 169 1 
95 2 44 1 373 1 
259 2 36 2 123 2 39 1 232 2 61 2 171 2 159 1 
313 1 0 1 162 1 188 1 87 1 359 1 88 1 5 1 30 2 29 1 294 1 171 2 67 1 36 2 39 1 251 1 16 1 124 1 123 2 146 1 194 2 48 1 77 1 197 1 198 2 232 3 259 2 24 1 217 1 282 1 264 2 354 1 185 1 82 1 61 3 159 1 236 2 
299 1 350 1 259 1 36 1 123 1 70 1 232 1 61 1 171 1 159 1 
299 1 270 1 212 1 207 1 116 1 373 1 169 1 232 1 259 1 265 1 266 1 186 1 380 1 61 1 
299 1 123 1 270 1 212 1 116 2 207 1 373 1 169 1 232 1 171 1 259 1 36 1 265 1 266 2 61 1 
23 1 266 1 356 1 116 1 71 1 
266 2 356 1 368 1 116 2 373 1 169 1 341 1 71 1 
266 1 116 1 71 1 
299 1 123 1 116 1 232 1 171 1 350 1 259 1 36 1 132 1 266 1 356 1 70 1 61 1 159 1 
373 1 
266 2 356 1 368 1 116 2 347 1 373 1 169 1 71 1 
114 1 266 2 165 1 338 1 356 1 119 1 116 2 226 1 221 1 
39 1 332 1 
251 1 313 1 16 1 279 1 123 1 162 1 194 1 359 1 77 1 29 1 232 2 213 1 259 1 36 1 264 1 106 1 185 1 82 1 61 2 236 1 
123 1 232 2 171 1 259 2 224 1 36 1 352 1 39 2 61 2 
6 1 213 1 273 1 
251 1 16 1 313 1 162 1 194 1 359 1 101 1 29 1 77 1 232 1 264 1 39 1 185 1 61 1 82 1 236 1 
259 3 279 1 36 3 123 3 39 1 232 3 171 1 61 3 
299 1 350 1 259 1 36 1 123 1 232 1 61 1 
299 1 259 1 224 1 36 1 123 1 352 1 232 1 61 1 171 1 
313 1 0 1 162 1 188 1 270 1 87 1 359 1 88 1 5 1 207 1 116 1 30 2 29 1 171 2 334 1 36 3 39 1 122 1 251 1 299 1 16 1 124 1 123 3 279 1 194 1 212 1 48 1 77 1 197 1 198 1 232 4 259 3 217 1 282 1 352 1 264 1 106 1 265 1 266 1 185 1 82 1 61 4 159 1 236 1 
259 2 343 1 36 1 123 1 279 1 39 1 186 1 232 2 61 2 
299 1 279 2 123 3 270 1 212 1 116 1 207 1 373 1 232 3 171 1 259 3 36 3 139 1 352 1 106 1 265 1 266 1 61 3 122 1 
279 1 123 2 6 1 232 2 171 1 213 1 259 2 36 2 352 1 61 2 
251 1 16 1 313 1 162 1 194 1 359 1 29 1 77 1 232 1 264 1 39 1 185 1 61 1 82 1 236 1 
251 1 16 1 194 1 181 1 359 1 29 1 77 1 232 1 264 1 156 1 39 1 185 1 61 1 82 1 236 1 
222 1 135 1 115 1 188 1 87 1 237 1 88 2 6 2 30 2 295 1 66 1 273 2 124 1 197 1 130 1 198 4 213 2 24 2 217 1 282 1 353 1 109 1 80 1 235 1 
299 1 259 1 36 1 123 1 265 1 317 1 232 1 61 1 
343 1 279 2 123 4 129 1 232 5 171 1 259 5 36 4 352 1 106 1 39 1 186 1 61 5 60 1 
299 1 350 1 259 2 36 2 123 2 317 1 232 2 61 2 
166 1 57 1 
166 1 57 1 
98 1 323 1 
98 1 323 1 
98 1 323 1 
166 1 57 1 136 1 
166 1 57 1 136 1 
166 1 57 1 26 1 
98 1 166 2 57 2 323 1 103 1 199 1 
166 1 57 1 136 1 
1 1 166 1 57 1 
1 1 166 1 57 1 
1 1 166 1 57 1 
321 1 166 2 116 2 137 1 103 1 373 1 170 2 348 3 244 2 37 1 157 1 218 2 25 1 266 2 220 2 57 2 108 2 158 1 176 1 
84 1 166 1 116 1 170 1 33 1 296 1 333 1 36 2 244 1 140 1 39 1 92 1 123 2 153 1 348 1 232 2 259 2 157 1 218 1 266 1 220 1 57 1 61 2 26 1 
253 1 325 1 200 1 
325 1 331 1 200 1 
335 1 302 1 253 2 79 1 331 1 200 3 
308 1 302 1 253 1 79 1 331 1 200 2 
253 1 302 1 79 2 331 1 200 2 
204 2 314 1 84 1 115 1 114 1 165 1 237 1 116 5 169 1 296 1 242 1 91 1 364 1 337 2 368 1 226 1 44 1 92 1 71 1 15 1 192 3 95 3 255 2 257 1 182 2 373 2 128 1 266 5 109 1 356 4 187 1 235 1 
115 3 114 2 165 2 237 3 167 1 116 9 169 1 242 3 91 1 337 6 119 1 368 1 226 2 44 3 92 4 71 6 15 2 192 8 95 9 344 1 97 1 255 6 182 6 373 5 128 2 23 5 375 1 262 1 266 9 109 3 356 7 233 1 110 5 187 1 235 3 
204 1 314 1 114 1 115 1 165 1 237 1 116 3 169 1 242 1 364 1 337 2 119 1 226 1 44 2 92 1 15 1 192 3 95 4 255 2 373 3 128 1 182 2 266 3 109 1 356 2 235 1 
204 2 314 1 114 1 115 2 165 1 237 2 116 4 169 1 242 2 364 1 337 4 119 1 226 1 44 3 92 2 15 1 192 5 95 7 97 1 255 4 373 4 182 4 128 1 375 1 262 1 266 4 109 2 356 3 235 2 
49 1 332 1 82 1 
2 1 82 1 
329 1 
185 1 82 1 
359 1 219 1 174 1 185 1 49 2 82 3 
359 1 185 1 82 1 
82 1 74 1 
278 1 135 2 115 1 346 1 88 3 293 1 195 2 127 1 66 3 198 7 90 1 281 1 24 4 40 1 326 1 267 1 109 1 
278 1 135 2 115 1 346 1 88 3 293 1 195 2 127 1 66 3 198 7 90 1 281 1 24 4 40 1 326 1 267 1 109 1 
278 1 135 2 115 1 346 1 88 3 293 1 195 2 127 1 66 3 198 7 90 1 281 1 24 4 40 1 326 1 267 1 109 1 339 1 
135 5 115 4 164 1 237 3 88 15 30 2 293 5 66 10 90 2 242 3 40 1 276 1 208 1 124 1 278 2 346 2 303 1 127 1 195 3 152 3 256 4 197 1 22 1 198 31 154 1 215 1 281 2 217 1 24 16 282 1 326 1 267 1 109 4 235 3 
135 3 115 1 88 4 30 4 293 1 66 4 90 1 40 1 94 1 124 2 278 1 303 1 346 1 195 2 197 2 198 9 281 1 217 2 282 2 263 1 24 5 267 1 326 1 109 1 
316 2 205 1 238 1 331 1 168 1 89 1 29 1 65 1 239 2 172 1 335 1 118 1 320 1 277 1 144 1 228 1 253 1 194 1 151 1 102 1 77 1 50 1 200 2 52 1 264 1 325 1 284 1 327 1 286 1 236 1 
316 3 205 1 331 1 168 1 89 1 29 1 239 3 172 1 335 1 118 1 12 1 320 1 250 1 144 1 228 1 253 1 194 1 151 2 102 1 77 1 50 1 200 2 52 1 264 1 325 1 56 1 284 1 327 1 286 1 236 1 
316 2 205 1 331 1 168 1 89 1 29 1 239 2 172 1 335 1 118 1 12 1 253 1 194 1 151 2 102 1 77 1 50 1 200 2 52 1 264 1 325 1 56 1 284 1 286 1 236 1 
316 1 63 1 9 1 29 1 239 1 172 2 118 2 173 1 249 1 250 1 144 1 120 1 16 1 194 1 304 1 77 1 52 2 264 1 327 1 185 1 286 2 82 1 236 1 
316 1 205 1 238 1 331 1 29 1 239 1 172 1 335 1 118 1 12 1 320 1 277 1 144 1 228 1 253 1 194 1 102 1 77 1 50 1 200 2 52 1 264 1 325 1 327 1 286 1 236 1 
189 1 
62 2 114 1 63 1 165 1 116 5 207 1 169 1 117 1 247 2 175 4 71 6 342 1 299 1 16 2 178 2 179 1 304 1 212 1 255 2 77 1 128 1 259 1 261 2 264 2 310 1 265 1 266 5 185 1 186 1 312 1 82 1 270 1 31 2 29 1 360 1 91 1 365 1 368 3 226 1 227 2 44 2 141 1 192 2 93 1 95 2 229 2 194 2 149 1 100 1 373 2 232 1 380 1 203 1 61 1 236 2 
270 1 207 1 116 3 365 1 368 1 227 1 175 2 71 2 93 1 299 1 212 1 100 1 347 1 232 1 259 1 310 1 265 1 266 3 186 1 380 1 61 1 203 1 
270 1 207 1 116 3 169 1 365 1 368 1 175 3 71 1 93 1 299 1 178 1 212 1 100 1 347 1 373 1 232 1 259 1 310 1 265 1 266 3 186 1 380 1 61 1 203 1 
270 1 207 1 116 3 169 1 365 1 368 1 227 1 175 3 71 2 93 1 299 1 178 1 229 1 212 1 100 1 347 1 373 1 232 1 259 1 310 1 265 1 266 3 186 1 380 1 61 1 203 1 
62 2 114 1 165 1 207 1 116 5 169 5 10 1 117 1 248 1 247 2 175 6 71 7 299 1 178 4 212 1 20 1 255 1 347 1 259 1 261 2 265 1 310 1 266 5 186 1 270 1 31 2 91 1 365 1 367 1 368 3 226 1 227 4 141 1 44 2 93 1 192 1 229 4 100 1 231 1 373 5 232 1 380 1 61 1 203 1 
62 2 114 1 165 1 207 1 116 4 169 1 117 1 247 2 175 4 71 4 299 1 178 2 212 1 255 1 259 1 261 2 265 1 310 1 266 4 186 1 270 1 31 2 91 1 365 1 368 2 226 1 141 1 44 2 227 2 93 1 192 1 95 2 229 2 149 1 100 1 373 2 232 1 380 1 61 1 203 1 
62 2 114 1 270 1 165 1 207 1 116 4 31 2 169 1 117 1 91 1 365 1 368 2 247 2 248 1 226 1 227 2 44 2 141 1 175 4 71 4 192 1 93 1 299 1 178 2 229 2 20 1 212 1 100 1 255 1 231 1 373 1 232 1 259 1 261 2 310 1 265 1 266 4 186 1 380 1 61 1 203 1 
62 2 114 1 270 1 165 1 207 1 116 4 31 2 169 1 117 1 91 1 365 1 368 2 247 2 248 1 226 1 227 2 44 2 141 1 175 4 71 4 192 1 93 1 299 1 178 2 229 2 20 1 212 1 100 1 255 1 231 1 373 1 232 1 259 1 261 2 310 1 265 1 266 4 186 1 380 1 61 1 203 1 
62 2 315 1 114 1 270 1 165 1 207 1 116 4 31 2 169 1 318 2 117 1 91 1 365 1 366 1 368 2 226 1 227 2 175 4 71 4 73 1 192 1 93 1 299 1 95 2 178 2 229 2 20 1 212 1 100 1 255 1 373 1 232 1 184 2 259 1 310 1 265 1 266 4 186 1 380 1 61 1 203 1 
62 2 114 1 165 1 270 1 207 1 116 4 31 2 169 1 117 1 91 1 365 1 367 1 368 2 247 2 248 1 226 1 44 2 141 1 227 3 175 5 71 5 192 1 93 1 299 1 178 3 229 3 20 1 212 1 100 1 255 1 231 1 373 1 232 1 259 1 261 2 310 1 265 1 266 4 186 1 380 1 61 1 203 1 
62 2 114 1 165 1 270 1 207 1 116 4 31 2 169 1 117 1 91 1 365 1 367 1 368 2 247 2 248 1 226 1 44 2 141 1 227 3 175 5 71 5 192 1 93 1 299 1 178 3 229 3 20 1 212 1 100 1 255 1 231 1 373 1 232 1 259 1 261 2 310 1 265 1 266 4 186 1 380 1 61 1 203 1 
62 2 114 1 165 1 207 1 116 4 169 1 117 1 175 4 71 4 299 1 178 2 212 1 255 1 184 2 259 1 265 1 310 1 266 4 186 1 270 1 31 2 318 2 91 1 365 1 366 1 368 2 226 1 227 2 93 1 192 1 95 2 229 2 149 1 100 1 373 1 232 1 380 1 61 1 203 1 
135 2 115 1 188 1 87 1 6 1 88 3 332 1 30 2 66 2 90 1 273 1 40 1 39 2 124 1 346 1 195 1 197 1 130 1 198 6 213 1 217 1 282 1 24 3 267 1 326 1 109 1 
135 1 357 1 115 2 188 2 64 1 164 1 87 1 237 2 88 6 6 4 293 1 30 4 294 1 66 2 273 11 242 2 39 1 42 1 340 1 143 1 124 2 48 1 256 3 152 3 197 2 22 1 198 14 213 11 217 2 282 2 24 8 109 1 235 1 
313 1 162 1 188 1 64 1 359 1 87 1 6 1 88 1 29 1 30 2 294 1 36 1 39 1 251 1 16 1 123 1 279 1 124 1 18 1 194 1 101 1 48 1 77 1 197 1 232 2 198 2 214 1 216 1 259 1 264 1 217 1 282 1 24 1 106 1 185 1 82 1 61 2 236 1 
162 2 115 3 64 1 237 2 5 2 6 7 293 4 294 1 66 8 297 1 242 2 12 1 251 2 16 1 124 3 123 1 346 1 21 2 77 2 213 7 259 1 307 1 264 3 217 3 24 10 267 1 185 2 83 2 82 2 313 2 135 4 188 3 87 3 359 2 223 2 88 10 30 6 29 2 90 1 273 7 35 1 362 2 36 1 39 2 40 1 279 1 194 3 48 1 195 1 197 3 232 3 198 20 282 3 106 1 326 1 109 3 235 2 61 3 236 3 
188 2 63 1 358 1 87 2 88 1 29 2 30 4 294 1 65 1 32 1 36 1 12 1 371 1 16 2 123 1 279 1 124 2 76 1 194 8 146 2 304 1 48 1 77 2 183 1 130 1 197 2 280 1 232 1 198 2 259 1 264 7 217 2 282 2 24 1 59 1 185 2 61 1 82 3 236 8 
135 1 115 1 188 1 64 1 87 1 237 1 6 1 88 2 30 2 66 1 171 1 273 1 242 1 36 1 123 1 124 1 96 1 197 1 232 1 198 3 213 1 259 1 352 1 217 1 282 1 24 1 109 1 235 1 61 1 
124 1 115 1 188 1 87 1 237 1 6 1 293 1 30 2 130 1 197 1 66 1 198 2 213 1 273 1 282 1 217 1 24 2 353 1 
124 1 135 1 188 1 87 1 6 1 88 2 30 2 130 1 197 1 66 1 198 2 213 1 273 1 282 1 217 1 80 1 109 1 235 1 
135 1 115 1 188 1 237 1 87 1 6 2 88 2 30 2 293 1 66 2 273 2 242 1 124 1 197 1 130 1 198 4 213 2 24 2 217 1 282 1 109 1 235 1 
124 1 115 1 188 1 87 1 237 1 6 1 293 1 30 2 197 1 66 1 198 2 213 1 273 1 282 1 217 1 24 2 353 1 371 1 
124 1 135 1 188 1 87 1 6 1 88 2 30 2 197 1 66 1 198 2 213 1 273 1 282 1 217 1 80 1 109 1 371 1 235 1 
135 1 115 1 188 1 237 1 87 1 6 2 88 2 30 2 293 1 66 2 273 2 242 1 371 1 124 1 197 1 198 4 213 2 24 2 217 1 282 1 109 1 235 1 
135 1 115 1 188 1 237 1 87 1 6 2 88 2 30 2 293 1 66 2 273 2 242 1 124 1 197 1 198 4 213 2 24 2 217 1 282 1 109 1 235 1 
313 1 162 1 188 1 359 1 87 1 5 1 88 1 29 1 30 2 294 1 39 1 251 1 16 1 124 1 194 1 48 1 77 1 197 1 198 2 232 1 24 1 264 1 282 1 217 1 185 1 82 1 61 1 236 1 
188 1 359 1 87 1 88 1 29 1 30 2 294 1 361 1 39 1 251 1 16 1 124 1 194 1 181 1 48 1 77 1 197 1 198 2 232 1 24 1 156 1 264 1 282 1 217 1 185 1 82 1 61 1 236 1 
135 1 115 1 188 1 64 1 237 1 87 1 6 2 88 2 30 2 293 1 66 2 273 2 242 1 124 1 197 1 198 4 213 2 24 2 217 1 282 1 109 1 235 1 
313 1 135 1 115 1 162 1 188 1 237 1 359 1 87 1 223 1 88 2 6 2 5 1 293 1 29 1 30 2 65 1 66 2 273 2 242 1 251 1 124 1 194 1 77 1 197 1 198 4 232 1 213 2 24 2 264 1 282 1 217 1 109 1 185 1 235 1 82 1 61 1 236 1 
115 1 188 1 64 1 87 1 237 1 88 1 6 1 293 1 30 2 66 1 171 1 273 1 242 1 36 1 123 1 124 1 197 1 232 1 198 3 213 1 324 1 259 1 352 1 217 1 282 1 24 2 109 1 235 1 61 1 
112 1 289 1 111 1 115 5 164 1 237 4 292 1 293 4 66 8 240 1 242 4 298 1 72 1 124 3 303 1 346 1 180 2 256 4 22 3 24 20 263 1 217 3 267 1 268 4 135 4 88 21 30 6 90 1 138 1 40 1 45 1 46 1 193 1 47 1 195 1 152 3 197 3 198 41 282 3 326 1 109 5 285 1 235 4 
111 1 289 1 112 1 135 4 115 5 164 1 292 1 237 4 88 18 30 8 293 3 66 7 90 1 240 1 242 4 138 1 40 1 298 1 45 1 72 1 46 1 124 4 193 1 346 1 303 2 47 1 180 2 195 1 256 4 152 3 197 4 22 3 198 38 217 4 282 4 263 1 24 20 326 1 267 1 109 4 268 4 285 1 235 3 
111 1 289 1 112 1 135 7 115 8 164 2 237 7 88 25 30 4 293 7 66 14 90 1 240 1 242 7 138 1 40 1 42 2 298 1 45 1 72 1 46 1 124 2 193 1 346 1 303 1 47 1 180 1 195 1 256 4 152 4 197 2 22 2 198 52 217 2 282 2 263 1 24 27 326 1 267 1 109 8 268 4 235 7 
289 1 112 1 135 3 115 3 164 1 292 1 237 3 88 10 30 4 293 3 66 6 242 3 138 1 298 1 72 2 252 1 124 2 180 1 256 2 152 1 197 2 22 1 198 19 217 2 282 2 263 1 24 9 109 3 268 2 235 3 
289 2 112 1 111 1 135 2 115 3 237 3 88 12 293 2 30 6 66 4 240 1 242 3 138 1 298 1 45 1 72 1 46 1 124 3 193 1 303 2 47 1 180 2 256 2 152 2 197 3 198 26 22 2 217 3 282 3 263 1 24 14 109 2 268 4 235 2 
244 1 37 1 69 1 218 1 220 1 166 1 57 1 137 1 103 1 170 1 
140 1 26 1 
290 1 244 1 218 1 41 1 220 1 166 1 57 1 170 1 134 1 
321 1 166 1 116 1 137 1 103 1 373 1 170 1 348 2 244 1 37 1 157 1 218 1 25 1 266 1 220 1 57 1 108 1 176 1 
321 1 166 1 116 1 137 1 103 1 373 1 170 1 348 2 244 1 37 1 157 1 218 1 25 1 266 1 220 1 57 1 108 1 176 1 
321 1 166 1 116 1 137 1 103 1 373 1 170 1 348 2 244 1 37 1 157 1 218 1 25 1 266 1 220 1 57 1 108 1 176 1 
136 1 234 1 199 1 
136 1 234 1 199 1 
1 1 28 1 
1 1 28 1 199 1 
333 1 153 1 
84 1 166 1 116 1 170 1 33 1 296 1 333 1 244 1 36 2 140 1 39 1 13 1 92 1 176 1 123 2 153 1 348 1 232 2 259 2 218 1 266 1 220 1 108 1 356 1 57 1 61 2 26 1 
136 1 234 1 
1 1 28 1 199 1 
188 1 64 1 87 1 88 1 29 1 30 2 294 1 241 1 275 1 124 1 76 1 194 2 146 2 48 1 77 1 183 1 197 1 232 2 198 2 260 1 259 2 105 1 282 1 217 1 24 1 264 2 379 1 185 1 82 1 61 2 236 2 
161 1 253 1 194 2 205 1 331 1 77 1 29 1 102 1 65 1 200 2 335 1 131 1 264 2 325 1 118 1 12 1 320 1 191 1 236 2 
253 1 194 1 205 1 254 1 331 1 102 1 29 1 77 1 200 2 335 1 264 1 325 1 118 1 12 1 320 1 191 1 236 1 
16 1 194 1 304 1 63 1 77 1 29 1 131 1 264 1 118 1 173 1 185 1 287 1 82 1 236 1 
161 1 253 1 194 1 205 1 331 1 77 1 102 1 29 1 200 2 335 1 131 1 264 1 325 1 118 1 12 1 320 1 191 1 236 1 
27 1 
192 1 328 1 206 1 255 1 332 1 373 1 169 1 
114 1 165 1 116 1 169 1 91 1 247 1 368 1 226 1 44 1 141 1 71 1 192 1 95 1 255 1 373 2 261 1 266 1 
114 4 115 2 165 4 2 3 237 2 206 1 116 5 7 2 65 1 169 2 242 2 245 1 336 2 337 6 71 5 74 2 210 2 16 1 125 1 21 2 77 4 255 8 128 2 182 6 264 3 266 5 219 1 185 3 82 10 270 2 359 3 29 3 360 1 363 2 91 4 225 2 38 2 368 3 226 4 44 6 192 9 95 12 145 1 194 3 49 2 150 2 373 8 53 2 283 1 109 2 328 1 202 1 235 2 236 3 
111 1 114 2 115 2 165 2 237 2 116 1 360 1 169 2 240 1 242 2 243 1 363 2 91 2 38 1 337 5 368 1 226 2 44 3 369 1 46 1 71 1 192 8 95 6 193 1 47 1 255 5 256 1 152 1 128 1 182 5 373 5 22 1 266 1 109 2 235 2 
114 1 115 2 165 1 116 1 8 1 90 1 171 1 363 2 36 1 91 1 38 1 248 1 70 1 226 1 299 1 192 2 123 1 346 1 255 2 232 1 350 1 259 1 132 1 266 1 326 1 109 1 61 1 159 1 
192 1 114 1 165 1 206 1 255 1 169 1 373 1 91 1 328 1 226 1 
192 5 95 10 115 2 237 2 21 1 255 5 182 5 373 5 242 2 363 2 38 1 337 5 109 2 44 5 235 2 
266 1 116 1 368 1 373 1 169 1 71 1 
114 2 165 2 63 1 116 3 29 1 360 2 91 1 119 1 368 2 226 2 71 4 342 1 192 2 16 2 75 1 145 2 179 1 194 4 304 1 77 1 255 2 128 2 258 1 264 4 266 3 185 1 202 1 82 1 236 4 
313 1 0 1 162 1 188 1 359 1 87 1 88 1 5 1 30 2 29 1 171 2 36 2 39 1 251 1 16 1 124 1 123 2 194 1 48 1 77 1 197 1 198 1 232 3 259 2 217 1 264 1 282 1 185 1 61 3 82 1 236 1 159 1 
192 1 95 4 114 1 165 1 195 1 255 2 360 1 182 2 128 1 169 2 373 4 91 1 337 2 226 1 44 2 
220 1 170 1 269 1 
220 1 170 1 269 1 
333 1 220 1 137 1 170 1 121 1 
220 1 170 1 269 1 
107 1 220 1 170 1 
107 1 220 1 170 1 
107 1 220 1 170 1 
220 1 170 1 
166 1 57 1 
111 1 135 2 115 1 88 4 30 2 66 2 90 1 40 1 124 1 346 1 195 1 152 1 256 1 197 1 198 8 22 1 217 1 282 1 263 1 24 4 267 1 326 1 109 1 
111 1 135 2 115 2 164 1 237 1 88 5 30 4 293 1 66 3 90 1 242 1 40 1 124 2 346 1 195 1 256 2 152 1 197 2 198 11 22 1 263 1 217 2 282 2 24 6 326 1 267 1 109 1 355 1 
111 1 135 3 115 3 237 2 88 10 293 1 30 6 66 4 90 1 240 1 242 2 40 1 46 1 124 3 193 1 346 1 47 1 303 1 195 1 152 1 256 1 197 3 198 19 22 1 217 3 282 3 263 1 24 9 326 1 267 1 355 1 109 3 235 2 
111 1 135 3 115 3 237 2 88 7 293 2 30 6 66 5 90 1 240 1 242 2 40 1 46 1 124 3 193 1 346 1 303 1 47 1 195 1 152 1 256 1 197 3 198 17 22 1 217 3 282 3 263 1 24 10 326 1 267 1 355 1 109 2 235 1 
111 1 135 2 115 1 88 4 30 2 66 2 90 1 40 1 124 1 346 1 195 1 152 1 256 1 197 1 198 8 22 1 217 1 282 1 263 1 24 4 267 1 326 1 109 1 
111 1 135 1 115 2 237 2 88 6 293 1 30 2 66 2 240 1 242 2 46 1 124 1 193 1 47 1 152 1 256 1 197 1 198 12 22 1 217 1 282 1 263 1 24 6 109 2 235 2 
111 1 135 3 115 3 237 2 88 8 293 2 30 8 66 5 90 1 240 1 242 2 40 1 46 1 124 4 193 1 346 1 47 1 303 2 195 1 256 1 152 1 197 4 198 18 22 1 217 4 282 4 263 1 24 10 326 1 267 1 355 1 109 2 235 1 
111 1 135 3 115 3 292 1 237 3 88 7 293 3 30 8 66 6 240 1 242 3 46 1 124 4 193 1 47 1 303 2 256 1 152 1 197 4 198 16 22 1 263 1 217 4 282 4 24 9 109 2 235 2 
135 3 346 3 115 1 88 4 293 3 198 7 66 6 90 3 24 3 40 1 267 2 326 1 109 1 
111 1 135 3 115 3 292 1 237 2 88 8 293 1 30 8 66 4 90 1 240 1 242 2 40 1 46 1 124 4 193 1 346 1 47 1 303 2 195 1 256 1 152 1 197 4 198 18 22 1 263 1 217 4 282 4 24 10 326 1 267 1 109 2 235 1 
124 2 135 2 115 1 303 1 346 1 88 4 195 1 293 1 30 4 197 2 198 8 66 3 90 1 24 4 282 2 217 2 40 1 326 1 267 1 109 1 
135 2 346 1 115 1 88 3 195 1 332 1 66 2 198 6 90 1 24 3 40 1 267 1 326 1 109 1 
124 1 135 1 115 1 237 1 88 2 30 2 293 1 197 1 66 2 198 4 242 1 282 1 217 1 24 2 109 1 355 1 235 1 
135 1 115 1 164 1 237 1 88 4 293 1 256 2 152 1 22 1 198 7 66 2 242 1 24 3 109 1 235 1 
135 5 115 3 164 1 237 2 88 12 293 4 30 4 66 9 90 2 242 2 40 1 340 1 42 1 124 2 346 2 303 2 322 1 195 1 152 2 256 2 197 2 198 23 24 11 282 2 217 2 326 1 267 1 109 3 235 2 
88 1 256 1 198 1 
24 1 152 1 198 1 
124 1 135 2 115 1 237 1 21 1 88 3 30 2 293 1 197 1 198 6 66 3 242 1 217 1 282 1 24 3 355 1 109 1 235 1 
111 1 135 1 115 2 237 2 88 6 293 1 30 2 66 2 240 1 242 2 46 1 124 1 193 1 47 1 152 1 256 1 197 1 198 12 22 1 217 1 282 1 263 1 24 6 109 2 235 2 
135 1 115 1 346 1 88 3 293 1 198 6 66 2 90 1 24 3 326 1 109 1 
124 1 135 1 346 1 303 1 322 1 88 2 293 1 30 2 197 1 66 2 198 3 90 1 24 1 282 1 217 1 40 1 267 1 
124 1 135 3 346 2 115 2 88 5 30 2 8 1 293 2 197 1 66 5 198 10 90 2 217 1 282 1 263 1 24 5 326 1 109 2 
124 1 115 1 237 1 30 2 293 1 197 1 198 2 66 1 263 1 282 1 217 1 24 2 
124 1 135 1 115 1 237 1 88 2 30 2 293 1 197 1 66 2 198 4 242 1 263 1 282 1 217 1 24 2 109 1 235 1 
124 3 135 1 303 1 346 1 322 1 292 1 88 2 30 6 293 1 197 3 198 3 66 2 90 1 263 1 282 3 217 3 24 1 
135 7 115 5 164 1 292 1 237 3 88 18 30 10 293 5 66 12 90 3 242 3 40 1 208 1 124 5 346 3 303 2 322 1 195 1 256 4 152 3 197 5 154 1 22 1 198 34 215 1 217 5 282 5 263 1 24 16 326 2 267 1 355 1 109 5 235 3 
259 1 343 1 39 1 55 1 186 1 232 1 61 1 
343 1 345 1 85 1 330 1 190 1 232 1 259 1 377 1 39 1 55 1 186 1 61 1 
16 1 264 1 194 1 63 1 304 1 185 1 77 1 29 1 332 1 82 1 236 1 
251 1 16 1 313 1 279 1 123 1 194 1 359 1 77 1 29 1 232 2 259 1 36 1 264 1 39 1 185 1 82 1 61 2 236 1 
299 1 251 1 313 1 279 1 123 1 145 1 194 1 212 1 359 2 77 1 29 1 232 2 259 2 36 2 264 1 225 1 265 1 39 1 185 2 74 1 82 3 61 2 236 1 
299 1 251 1 279 1 123 1 145 1 194 2 212 1 359 2 77 1 29 1 232 2 259 2 36 2 264 2 156 1 225 1 265 1 39 1 185 2 142 1 74 1 82 3 61 2 236 2 
16 1 145 1 194 3 270 1 359 1 2 1 116 2 77 1 49 1 29 1 373 1 169 1 264 3 225 1 266 2 185 1 311 1 142 1 74 1 82 4 71 1 209 1 236 3 
16 1 145 1 194 3 270 1 359 1 2 1 116 2 77 1 49 1 29 1 373 1 169 1 264 3 336 1 225 1 266 2 185 1 142 1 74 1 82 4 71 1 236 3 
264 1 194 1 77 1 29 1 32 1 236 1 
16 2 146 1 194 7 358 1 359 1 126 1 29 2 77 3 183 1 65 1 32 1 280 1 349 1 306 1 264 6 219 1 12 1 59 1 185 2 82 3 236 7 
162 1 115 1 64 1 6 1 5 1 65 1 66 2 251 1 124 2 123 1 346 1 77 1 213 1 259 1 260 1 264 1 217 2 24 3 267 1 185 1 83 1 82 1 313 1 135 2 188 2 87 2 359 1 223 1 88 3 30 4 29 1 90 1 273 1 36 1 40 1 39 2 279 1 194 1 195 1 197 2 232 2 198 6 282 2 326 1 109 1 61 2 236 1 
114 2 165 2 270 1 2 1 206 1 116 3 7 1 169 1 91 2 336 1 368 1 226 2 71 2 210 1 192 1 16 1 194 1 255 1 49 1 373 1 264 1 53 1 266 3 356 1 328 1 202 1 82 2 236 1 
194 2 125 1 359 1 49 1 29 1 77 2 65 1 32 1 264 2 219 1 185 1 82 2 236 2 
16 1 194 4 304 1 63 1 77 1 29 1 65 1 264 4 185 1 142 1 14 1 82 1 236 4 
145 1 194 2 359 1 126 1 29 1 77 2 272 1 201 1 349 1 35 1 264 2 185 1 82 1 236 2 
16 1 264 1 194 1 325 1 205 1 331 1 77 1 29 1 200 1 236 1 
194 2 29 1 77 1 65 1 183 1 241 1 264 2 12 1 185 1 82 1 236 2 
16 1 145 1 194 5 63 1 304 1 29 2 77 2 65 1 183 1 280 1 264 4 185 2 59 1 14 1 82 3 236 5 
16 1 145 1 194 5 63 1 304 1 29 2 77 2 65 1 183 1 264 4 309 1 185 2 59 1 14 1 82 3 236 5 
251 1 16 1 279 1 123 1 194 1 359 1 77 1 29 1 232 2 259 1 36 1 264 1 156 1 39 1 185 1 82 1 61 2 236 1 
145 1 194 1 359 1 126 1 29 1 77 2 349 1 306 1 264 1 219 1 185 1 82 1 236 1 
291 1 196 1 232 1 259 1 105 1 246 1 379 1 275 1 61 1 
155 1 58 1 196 1 
11 1 39 1 246 1 291 1 196 1 
299 1 270 1 212 1 291 2 116 2 207 1 196 1 373 1 169 1 155 1 54 1 11 2 265 1 266 2 39 1 246 2 356 1 58 1 122 1 
284 1 168 1 89 1 332 1 
316 1 284 1 327 1 168 1 89 1 239 1 144 1 
52 1 239 1 172 1 
316 3 147 1 238 1 230 1 168 1 89 1 239 3 274 1 378 2 327 1 284 1 144 1 
316 2 284 1 327 1 168 1 89 1 151 1 78 1 239 2 144 1 
316 1 253 1 238 1 99 1 168 1 239 1 200 1 325 1 81 1 327 1 144 1 
316 1 238 1 284 1 327 1 168 1 239 1 144 1 
316 1 238 1 284 2 327 1 89 1 239 1 144 1 
316 2 86 1 238 1 168 1 239 2 376 1 68 1 284 1 327 2 144 2 
316 3 300 1 238 1 99 1 89 1 151 2 168 2 239 3 104 1 319 1 284 1 327 1 144 1 
316 2 253 1 331 1 238 1 168 1 89 1 151 1 239 2 200 2 34 1 335 1 325 1 284 1 327 1 144 1 
316 4 238 1 99 1 89 1 78 1 151 2 168 2 239 4 351 1 319 1 284 1 327 2 144 2 
316 1 238 1 284 1 327 1 168 1 89 1 239 1 144 1 
316 4 147 1 148 1 99 1 230 1 89 2 151 2 168 3 239 4 319 1 378 1 284 2 327 1 144 1 
17 1 316 2 211 1 238 1 168 1 151 1 89 1 239 2 51 1 284 1 327 1 144 1 
316 3 147 1 238 1 3 1 230 2 168 1 89 1 239 3 378 2 327 1 284 1 144 1 
113 1 163 2 133 1 168 2 
316 1 271 1 238 1 327 1 239 1 144 1 
300 1 316 2 238 1 284 1 327 1 168 1 89 1 151 1 239 2 144 1 
19 1 
316 1 238 1 284 1 327 1 168 1 89 1 239 1 144 1 
316 3 300 1 238 1 151 1 89 1 168 1 239 3 378 1 327 1 284 1 144 1 
319 1 148 1 99 1 168 1 
284 1 168 1 

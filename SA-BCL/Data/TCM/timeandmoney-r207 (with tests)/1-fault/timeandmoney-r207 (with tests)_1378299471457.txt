#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) (28,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) (28,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (110,165,274,343) (110,165,274,343) (110,165,274,343) 194 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
321 1 132 1 158 1 
321 1 87 2 230 1 
200 2 349 1 209 2 300 2 13 1 326 2 62 2 113 2 
128 1 209 2 129 1 191 1 152 1 289 1 57 2 318 1 58 1 319 2 118 1 215 1 61 1 217 1 62 2 180 1 298 1 199 2 136 1 200 2 245 1 268 1 300 3 249 2 13 1 205 1 69 1 323 1 349 1 141 1 306 1 142 2 326 3 208 1 113 2 231 1 52 1 
200 1 20 1 209 1 300 1 13 1 339 1 297 1 326 1 62 1 113 1 
200 1 321 1 300 1 267 1 39 1 132 1 317 1 47 1 23 1 244 1 339 1 326 1 91 1 327 1 
200 1 209 1 321 1 300 1 267 1 39 1 132 1 317 2 47 2 244 1 339 1 62 1 326 1 113 1 91 1 
317 1 281 1 47 1 18 1 44 1 
317 2 321 1 281 1 47 2 18 1 132 1 150 1 163 1 
317 1 281 1 47 1 
200 1 209 1 300 1 98 1 13 1 18 1 20 1 317 1 47 1 339 1 297 1 62 1 326 1 113 1 
321 1 
317 2 321 1 281 1 47 2 331 1 18 1 132 1 150 1 
342 1 321 1 96 1 281 2 269 2 285 2 332 1 287 2 18 2 31 1 132 1 133 1 174 1 317 5 335 1 22 1 47 5 232 1 150 1 
349 1 158 1 
200 2 209 1 300 2 349 2 185 1 326 2 62 1 113 1 187 1 
292 1 90 1 24 1 
300 1 129 1 249 1 191 1 69 1 323 1 349 1 318 1 319 1 118 1 58 1 134 1 217 1 326 1 208 1 199 1 
200 5 233 2 349 1 209 4 300 5 283 1 77 1 23 1 30 1 99 1 62 1 326 5 113 4 187 1 
200 2 209 2 300 2 2 1 339 1 297 1 326 2 113 2 
200 1 233 1 209 1 129 1 300 2 249 1 191 1 99 1 69 1 323 1 318 1 58 1 118 1 319 1 90 1 217 1 208 1 326 2 113 1 199 1 
200 3 233 1 349 1 209 3 300 3 62 1 326 3 113 3 
200 1 209 1 300 1 339 1 297 1 326 1 113 1 
200 1 209 1 300 1 185 1 339 1 326 1 62 1 113 1 187 1 
128 1 233 1 209 3 129 1 286 1 191 1 99 1 152 1 57 2 318 1 317 1 58 1 118 1 319 1 215 1 244 1 339 1 217 1 62 2 180 1 298 1 199 1 200 3 245 1 268 1 300 4 267 1 39 1 249 1 13 1 69 1 323 1 349 1 141 1 306 1 21 1 142 1 47 1 208 1 326 4 113 3 91 1 52 1 187 1 
200 2 233 1 349 1 209 1 300 2 23 1 30 1 326 2 113 1 
200 3 233 2 209 3 321 1 267 1 300 3 282 1 39 1 286 1 99 1 317 1 47 1 244 1 339 1 62 1 326 3 113 3 91 1 187 1 
200 2 233 1 209 2 300 2 90 1 62 1 326 2 113 2 24 1 187 1 
300 1 129 1 249 1 191 1 69 1 323 1 349 1 318 1 319 1 118 1 58 1 217 1 326 1 208 1 199 1 
300 1 129 1 249 1 3 1 191 1 69 1 239 1 349 1 319 1 118 1 58 1 217 1 326 1 208 1 199 1 
128 1 213 1 152 1 289 2 57 2 292 2 242 1 176 1 180 1 101 1 122 1 245 1 268 2 183 1 346 1 107 1 306 1 144 1 142 4 90 2 255 1 325 1 24 2 52 1 
200 1 209 1 300 1 2 1 244 1 339 1 326 1 113 1 
324 1 83 1 
324 1 83 1 
169 1 33 1 
169 1 33 1 
169 1 33 1 
329 1 324 1 83 1 
329 1 324 1 83 1 
324 1 250 1 83 1 
169 1 64 1 347 1 324 2 33 1 83 2 
329 1 324 1 83 1 
324 1 74 1 83 1 
324 1 74 1 83 1 
324 1 74 1 83 1 
151 1 209 2 32 1 173 1 317 1 117 1 83 1 121 1 200 2 85 1 220 1 300 2 125 1 104 1 66 1 250 1 67 1 349 1 324 1 47 1 326 2 113 2 51 1 25 1 
64 1 85 2 321 1 220 1 201 1 302 1 78 1 32 2 227 1 317 2 294 1 79 1 324 2 307 2 47 2 121 2 83 2 25 2 51 3 
189 1 137 1 172 1 
189 1 137 1 106 1 
189 3 344 1 106 1 345 1 225 1 172 2 
189 2 171 1 106 1 345 1 225 1 172 1 
189 2 106 1 345 1 225 2 172 1 
234 1 281 1 284 2 285 1 332 1 287 1 132 1 117 1 195 2 317 5 174 3 87 3 321 2 269 1 222 1 12 1 125 1 303 1 16 1 251 1 67 1 18 4 346 1 107 1 144 1 22 2 47 5 108 1 255 1 145 2 230 1 150 1 
234 1 281 6 284 6 285 2 332 1 287 2 132 1 195 6 317 9 174 8 218 1 63 1 10 5 87 9 321 5 269 2 125 4 12 2 203 1 16 3 126 1 251 2 206 1 18 7 44 5 346 3 107 3 164 1 144 3 22 6 47 9 255 3 230 3 232 1 150 1 
284 2 285 1 287 1 132 1 317 3 174 3 195 2 321 3 87 4 222 1 269 1 12 1 125 1 16 1 251 1 18 2 346 1 107 1 144 1 47 3 22 2 108 1 145 1 255 1 230 2 232 1 
284 4 285 1 287 1 132 1 195 4 317 4 174 5 321 4 87 7 269 1 222 1 12 1 125 2 203 1 16 2 126 1 251 1 206 1 18 3 346 2 107 2 144 2 47 4 22 4 108 1 145 2 255 2 230 3 232 1 
129 1 223 1 158 1 
129 1 94 1 
277 1 
129 1 58 1 69 1 
219 1 129 1 
129 1 58 1 
129 3 58 1 223 2 320 1 69 1 207 1 
122 3 159 1 268 3 54 1 212 1 346 1 289 4 273 1 242 2 243 1 216 2 142 7 109 1 59 1 255 1 312 1 313 1 
122 3 159 1 268 3 54 1 212 1 346 1 289 4 273 1 242 2 243 1 216 2 142 7 109 1 59 1 255 1 312 1 313 1 
122 3 159 1 268 3 43 1 54 1 212 1 346 1 289 4 273 1 242 2 243 1 216 2 142 7 109 1 59 1 255 1 312 1 313 1 
128 1 260 3 54 1 212 2 4 1 152 1 57 2 289 16 290 1 242 5 337 1 216 3 243 2 59 2 264 4 266 1 122 10 159 1 268 15 16 3 107 3 346 4 273 1 306 1 142 31 144 3 109 1 48 1 255 4 310 1 312 5 276 1 313 2 52 1 
128 2 122 4 159 1 268 4 246 1 54 1 212 1 346 1 5 1 152 2 273 1 289 5 57 4 242 3 306 2 243 1 216 2 142 9 59 1 255 1 310 1 312 1 313 1 52 2 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 157 1 
28 1 189 2 314 1 172 1 319 1 118 1 7 1 177 1 35 1 340 1 199 1 341 1 299 2 102 1 36 1 137 1 41 1 343 2 249 1 344 1 106 1 308 1 110 2 208 1 147 1 
165 1 274 1 110 1 157 1 
165 1 274 1 110 1 194 1 
139 1 
256 1 129 1 211 2 132 1 174 2 317 5 58 1 319 2 100 2 217 2 321 2 267 1 269 1 271 1 322 2 22 2 23 1 186 1 111 2 326 1 230 2 327 1 26 2 150 3 281 6 330 1 285 1 332 1 287 1 193 1 238 1 118 1 336 1 119 1 80 1 244 1 155 1 339 1 34 1 84 1 199 2 200 1 87 2 300 1 124 1 39 1 249 2 251 1 253 4 45 2 254 2 47 5 89 1 208 1 91 1 
200 1 256 1 281 2 267 1 300 1 39 1 271 1 331 1 253 2 238 1 317 3 336 1 119 1 100 1 47 3 244 1 23 1 339 1 326 1 91 1 327 1 150 1 
256 1 281 1 331 1 238 1 132 1 317 3 119 1 336 1 244 1 339 1 200 1 300 1 267 1 321 1 39 1 271 1 253 3 47 3 23 1 326 1 111 1 91 1 327 1 150 1 
256 1 281 2 331 1 238 1 132 1 317 3 119 1 336 1 100 1 244 1 339 1 200 1 300 1 267 1 321 1 39 1 271 1 253 3 45 1 47 3 23 1 326 1 111 1 91 1 327 1 150 1 
256 1 211 2 315 1 55 1 132 5 317 5 174 1 100 4 60 1 267 1 321 5 269 1 271 1 322 2 22 1 23 1 326 1 111 4 230 2 327 1 150 3 26 2 281 7 285 1 331 1 332 1 287 1 238 1 336 1 119 1 244 1 339 1 200 1 300 1 160 1 124 1 39 1 253 6 162 1 45 4 254 2 47 5 89 1 91 1 
256 1 211 2 132 1 317 4 174 1 100 2 267 1 321 2 269 1 271 1 322 2 22 1 23 1 326 1 111 2 230 2 327 1 26 2 150 2 281 4 285 1 332 1 287 1 238 1 336 1 119 1 244 1 339 1 84 1 200 1 300 1 87 2 124 1 39 1 253 4 45 2 254 2 89 1 47 4 91 1 
256 1 281 4 285 1 211 2 332 1 287 1 55 1 238 1 132 1 174 1 317 4 119 1 336 1 100 2 244 1 60 1 339 1 200 1 321 1 300 1 267 1 124 1 269 1 39 1 271 1 322 2 253 4 162 1 45 2 254 2 22 1 89 1 47 4 23 1 111 2 326 1 230 2 91 1 327 1 150 2 26 2 
256 1 281 4 285 1 211 2 332 1 287 1 55 1 238 1 132 1 174 1 317 4 119 1 336 1 100 2 244 1 60 1 339 1 200 1 321 1 300 1 267 1 124 1 269 1 39 1 271 1 322 2 253 4 162 1 45 2 254 2 22 1 89 1 47 4 23 1 111 2 326 1 230 2 91 1 327 1 150 2 26 2 
256 1 281 4 285 1 332 1 287 1 55 1 261 1 238 1 132 1 174 1 317 4 263 2 295 1 119 1 336 1 100 2 244 1 339 1 200 1 321 1 87 2 300 1 267 1 124 1 269 1 39 1 271 1 304 2 322 2 253 4 45 2 46 1 22 1 47 4 23 1 111 2 326 1 91 1 327 1 150 2 26 2 
256 1 281 5 285 1 211 2 332 1 315 1 287 1 55 1 238 1 132 1 174 1 317 4 119 1 336 1 100 3 244 1 60 1 339 1 200 1 321 1 300 1 267 1 124 1 269 1 39 1 271 1 322 2 253 5 162 1 45 3 254 2 22 1 89 1 47 4 23 1 326 1 111 3 230 2 91 1 327 1 150 2 26 2 
256 1 281 5 285 1 211 2 332 1 315 1 287 1 55 1 238 1 132 1 174 1 317 4 119 1 336 1 100 3 244 1 60 1 339 1 200 1 321 1 300 1 267 1 124 1 269 1 39 1 271 1 322 2 253 5 162 1 45 3 254 2 22 1 89 1 47 4 23 1 326 1 111 3 230 2 91 1 327 1 150 2 26 2 
256 1 132 1 317 4 174 1 263 2 100 2 267 1 321 1 269 1 271 1 322 2 22 1 23 1 326 1 111 2 327 1 26 2 150 2 281 4 285 1 332 1 287 1 238 1 295 1 336 1 119 1 244 1 339 1 84 1 200 1 300 1 87 2 124 1 39 1 304 2 253 4 45 2 47 4 91 1 
128 1 122 2 245 1 159 1 268 3 54 1 212 1 346 1 152 1 289 3 57 2 273 1 292 1 349 2 242 2 306 1 216 1 142 6 90 1 255 1 325 1 180 1 24 1 52 1 158 1 313 1 
128 2 116 1 260 3 152 2 57 4 289 8 290 1 291 1 292 11 242 1 337 1 198 1 264 3 180 2 122 2 245 1 268 6 221 1 16 2 205 1 107 2 346 1 349 1 141 1 306 2 142 14 144 1 90 11 255 2 312 1 75 1 24 4 52 2 
128 1 233 1 209 1 129 1 191 1 99 1 152 1 57 2 289 1 318 1 58 1 118 1 319 1 197 1 217 1 134 1 180 1 199 1 200 1 245 1 300 2 268 1 221 1 249 1 15 1 205 1 69 1 323 1 349 1 306 1 141 1 142 2 73 1 208 1 326 2 113 1 24 1 52 1 
0 1 128 3 209 1 129 2 97 1 54 1 99 1 212 1 57 6 318 2 319 3 58 2 216 1 215 2 217 1 265 2 180 3 268 10 65 2 221 1 224 2 16 2 69 2 107 2 273 1 323 2 141 1 142 20 144 2 326 3 113 1 147 1 24 7 233 1 191 2 152 3 289 10 292 7 242 4 118 2 199 3 200 1 122 8 159 1 245 3 300 3 40 2 249 3 205 1 346 3 349 2 306 3 90 7 49 1 255 3 208 2 312 4 313 1 52 3 
27 1 128 2 233 1 209 1 129 3 190 1 193 1 152 2 57 4 289 1 196 1 118 2 319 8 58 2 155 1 217 2 180 2 199 7 200 1 245 2 123 1 300 1 268 1 270 1 42 1 249 8 205 1 306 2 141 1 229 1 142 2 325 1 326 1 208 2 113 1 147 1 231 2 95 1 52 2 
128 1 209 1 152 1 57 2 289 1 292 1 242 1 156 1 62 1 180 1 200 1 122 1 245 1 300 1 268 2 221 1 16 1 107 1 346 1 306 1 142 3 144 1 90 1 255 1 326 1 113 1 24 1 187 1 52 1 
128 1 122 1 245 1 107 1 152 1 57 2 289 2 292 1 306 1 176 1 142 2 90 1 325 1 255 1 312 1 180 1 24 1 52 1 
128 1 122 1 245 1 268 2 183 1 346 1 152 1 57 2 292 1 242 1 306 1 142 2 144 1 90 1 325 1 180 1 24 1 52 1 
128 1 152 1 289 2 57 2 292 2 242 1 180 1 122 2 245 1 268 2 16 1 107 1 346 1 306 1 142 4 144 1 90 2 255 1 325 1 312 1 24 2 52 1 
128 1 122 1 245 1 190 1 107 1 152 1 57 2 289 2 292 1 306 1 176 1 142 2 90 1 255 1 312 1 180 1 24 1 52 1 
128 1 122 1 245 1 268 2 190 1 183 1 346 1 152 1 57 2 292 1 242 1 306 1 142 2 144 1 90 1 180 1 24 1 52 1 
128 1 190 1 152 1 289 2 57 2 292 2 242 1 180 1 122 2 245 1 268 2 16 1 107 1 346 1 306 1 142 4 144 1 90 2 255 1 312 1 24 2 52 1 
128 1 152 1 289 2 57 2 292 2 242 1 180 1 122 2 245 1 268 2 16 1 107 1 346 1 306 1 142 4 144 1 90 2 255 1 312 1 24 2 52 1 
128 1 129 1 191 1 152 1 289 1 57 2 318 1 58 1 118 1 319 1 215 1 217 1 180 1 199 1 245 1 300 1 268 1 249 1 205 1 69 1 323 1 349 1 306 1 141 1 142 2 208 1 326 1 52 1 
128 1 129 1 191 1 3 1 214 1 152 1 289 1 57 2 239 1 58 1 118 1 319 1 217 1 180 1 199 1 245 1 300 1 268 1 249 1 205 1 69 1 349 1 306 1 141 1 142 2 208 1 326 1 52 1 
128 1 152 1 289 2 57 2 292 2 242 1 180 1 122 2 245 1 268 2 221 1 16 1 107 1 346 1 306 1 142 4 144 1 90 2 255 1 312 1 24 2 52 1 
128 1 129 1 191 1 152 1 289 2 57 2 292 2 318 1 242 1 118 1 319 1 58 1 215 1 180 1 199 1 122 2 245 1 268 2 65 1 300 1 249 1 16 1 69 1 346 1 107 1 323 1 306 1 144 1 142 4 229 1 90 2 255 1 208 1 326 1 312 1 24 2 52 1 
128 1 258 1 209 1 152 1 57 2 289 2 292 1 62 1 180 1 200 1 122 1 245 1 268 1 300 1 221 1 16 1 346 1 107 1 306 1 144 1 142 3 90 1 255 1 326 1 113 1 312 1 24 1 187 1 52 1 
128 3 260 3 54 1 212 1 5 1 57 6 216 1 8 1 264 4 178 1 268 21 16 4 107 4 273 1 228 1 144 4 142 41 146 1 280 1 333 1 152 3 289 20 290 3 240 1 293 1 242 4 337 1 122 8 159 1 202 1 248 1 161 4 88 1 346 5 348 1 306 3 167 1 255 5 310 1 312 4 93 2 52 3 313 1 
128 4 280 1 260 3 54 1 212 1 333 1 152 4 5 1 57 8 289 20 290 3 240 1 293 1 242 4 337 1 216 1 8 1 264 4 178 1 122 7 159 1 268 18 202 1 248 1 161 4 16 4 88 1 107 4 346 4 273 1 348 1 228 1 306 4 142 38 144 3 167 1 255 5 310 2 146 1 312 3 93 2 313 1 52 4 
128 2 280 1 260 4 54 1 212 1 333 1 152 2 5 1 57 4 289 27 290 2 240 1 293 1 242 7 337 2 216 1 264 4 178 1 122 14 159 1 268 25 202 1 248 1 161 4 16 7 88 1 107 7 346 8 273 1 348 1 306 2 142 52 144 7 167 1 255 8 310 1 146 1 75 2 312 7 93 1 313 1 52 2 
128 2 279 1 260 1 152 2 5 1 57 4 289 9 290 1 240 1 242 3 337 1 264 2 178 1 122 6 268 10 202 2 248 1 161 2 16 3 107 3 346 3 228 1 306 2 142 19 144 3 255 3 146 1 312 3 93 1 52 2 
128 3 280 1 260 2 333 1 152 3 5 1 57 6 289 14 290 2 240 1 293 1 242 2 264 2 178 1 122 4 268 12 202 1 248 2 161 4 16 3 88 1 346 2 107 3 348 1 306 3 142 26 144 2 167 1 255 3 310 2 146 1 312 2 93 2 52 3 
64 1 85 1 294 1 201 1 324 1 83 1 121 1 328 1 25 1 32 1 
104 1 250 1 
262 1 1 1 85 1 324 1 179 1 83 1 121 1 25 1 32 1 
329 1 184 1 
347 1 296 1 74 1 
64 1 85 1 321 1 220 1 201 1 302 1 78 1 32 1 317 1 294 1 79 1 324 1 307 1 47 1 121 1 83 1 25 1 51 2 
64 1 85 1 321 1 220 1 201 1 302 1 78 1 32 1 317 1 294 1 79 1 324 1 307 1 47 1 121 1 83 1 25 1 51 2 
64 1 85 1 321 1 220 1 201 1 302 1 78 1 32 1 317 1 294 1 79 1 324 1 307 1 47 1 121 1 83 1 25 1 51 2 
329 1 347 1 184 1 
329 1 347 1 184 1 
296 1 74 1 
347 1 296 1 74 1 
151 1 173 1 
151 1 209 2 32 1 173 1 317 1 117 1 83 1 121 1 200 2 85 1 300 2 302 1 125 1 104 1 66 1 250 1 18 1 67 1 349 1 324 1 307 1 71 1 47 1 326 2 113 2 25 1 51 1 
128 1 235 1 257 1 129 1 152 1 57 2 289 1 118 1 58 1 319 2 6 1 180 1 199 2 200 2 245 1 300 2 268 1 221 1 270 1 42 1 247 1 249 2 205 1 306 1 141 1 142 2 208 1 326 2 275 1 231 2 52 1 
341 1 189 2 137 1 36 1 301 1 249 2 344 1 314 1 106 1 17 1 237 1 172 1 118 1 319 2 229 1 338 1 208 1 147 1 199 2 
341 1 189 2 137 1 36 1 301 1 29 1 249 1 344 1 314 1 106 1 237 1 172 1 319 1 118 1 208 1 147 1 199 1 
129 1 36 1 249 1 17 1 193 1 118 1 58 1 319 1 155 1 217 1 208 1 82 1 135 1 199 1 
341 1 189 2 137 1 36 1 301 1 249 1 344 1 314 1 106 1 17 1 237 1 172 1 118 1 319 1 338 1 208 1 147 1 199 1 
76 1 
133 1 174 1 321 1 335 1 22 1 132 1 158 1 
281 1 285 1 211 1 332 1 287 1 132 1 174 1 317 1 87 1 321 2 269 1 254 1 22 1 89 1 47 1 230 1 150 1 
129 10 210 2 316 1 56 1 132 2 133 1 174 9 317 5 58 3 319 3 217 1 265 2 219 2 11 1 267 2 321 8 269 4 103 1 223 2 16 2 69 3 107 2 140 1 229 1 22 8 144 2 186 1 230 6 150 3 278 2 188 2 281 5 284 6 285 4 332 4 192 2 287 4 334 2 195 6 335 1 118 4 199 3 86 2 87 12 249 3 204 2 251 2 207 1 346 2 47 5 166 2 255 2 208 3 94 3 
188 2 280 1 281 1 130 1 284 5 285 2 332 2 260 1 287 2 333 1 132 2 290 1 317 1 195 5 174 8 293 1 81 1 264 1 87 6 321 5 269 2 204 1 16 2 251 1 107 2 346 2 348 1 47 1 22 5 144 2 167 1 186 1 255 2 230 3 150 1 
188 2 209 1 98 1 285 1 332 1 54 1 287 1 212 1 317 1 174 2 339 1 297 1 62 1 200 1 300 1 269 1 204 1 13 1 162 1 346 1 20 1 127 1 47 1 22 2 255 2 326 1 113 1 313 1 
321 1 269 1 285 1 332 1 287 1 132 1 133 1 174 1 335 1 22 1 
188 2 87 10 321 5 284 5 204 1 16 2 107 2 346 2 195 5 174 5 22 5 144 2 265 1 255 2 230 5 
317 1 321 1 281 1 47 1 132 1 150 1 
129 1 281 4 330 1 285 2 332 1 287 2 193 1 316 1 174 2 317 3 175 1 118 1 58 1 319 4 155 1 217 2 34 1 199 4 269 2 103 2 249 4 251 2 226 1 22 2 47 3 186 2 208 1 232 1 150 2 
128 1 209 2 129 1 191 1 152 1 57 2 318 1 319 1 118 1 58 1 215 1 217 1 62 2 180 1 199 1 298 1 200 2 245 1 268 1 300 3 249 1 13 1 69 1 323 1 349 1 141 1 306 1 142 1 326 3 208 1 113 2 52 1 
87 4 321 4 269 1 284 2 285 1 332 1 287 1 251 1 132 2 195 2 174 1 216 1 22 2 186 1 230 2 
170 1 25 1 32 1 
170 1 25 1 32 1 
151 1 241 1 201 1 25 1 32 1 
170 1 25 1 32 1 
105 1 25 1 32 1 
105 1 25 1 32 1 
105 1 25 1 32 1 
25 1 32 1 
324 1 83 1 
128 1 260 1 54 1 212 1 152 1 5 1 57 2 289 4 290 1 242 2 216 1 264 1 122 2 159 1 268 4 346 1 273 1 306 1 142 8 167 1 255 1 52 1 313 1 
128 2 260 1 54 1 212 1 5 1 152 2 57 4 289 6 290 1 242 2 337 1 216 1 264 2 122 3 159 1 268 5 16 1 346 1 107 1 273 1 306 2 142 11 167 1 255 2 148 1 312 1 313 1 52 2 
128 3 280 1 260 1 54 1 212 1 333 1 152 3 5 1 57 6 289 9 290 1 293 1 242 3 216 1 264 1 122 4 159 1 268 10 16 2 107 2 346 3 273 1 348 1 306 3 142 19 144 2 167 1 255 3 310 1 148 1 312 1 313 1 52 3 
128 3 280 1 260 1 54 1 212 1 333 1 152 3 5 1 57 6 289 10 290 1 293 1 242 3 216 1 264 1 122 5 159 1 268 7 16 2 107 2 346 2 273 1 348 1 306 3 142 17 144 1 167 1 255 3 310 1 148 1 312 2 313 1 52 3 
128 1 260 1 54 1 212 1 152 1 5 1 57 2 289 4 290 1 242 2 216 1 264 1 122 2 159 1 268 4 346 1 273 1 306 1 142 8 167 1 255 1 52 1 313 1 
128 1 280 1 260 1 333 1 152 1 5 1 57 2 289 6 290 1 293 1 242 1 264 1 122 2 268 6 16 2 107 2 346 2 348 1 306 1 142 12 144 2 167 1 255 2 312 1 52 1 
128 4 280 1 260 1 54 1 212 1 333 1 152 4 5 1 57 8 289 10 290 1 293 1 242 3 216 1 264 1 122 5 159 1 268 8 16 2 107 2 346 2 273 1 348 1 306 4 142 18 144 1 167 1 255 3 310 2 312 2 148 1 313 1 52 4 
128 4 280 1 260 1 333 1 5 1 152 4 57 8 289 9 290 1 293 1 242 3 264 1 122 6 268 7 16 3 107 3 346 2 348 1 306 4 228 1 142 16 144 2 167 1 255 3 310 2 312 3 52 4 
122 6 159 2 268 4 54 1 212 3 346 1 273 1 289 3 242 3 142 7 255 1 312 3 313 3 
128 4 280 1 260 1 54 1 212 1 333 1 5 1 152 4 57 8 289 10 290 1 293 1 242 3 216 1 264 1 122 4 159 1 268 8 16 2 107 2 346 2 273 1 348 1 306 4 228 1 142 18 144 1 167 1 255 3 310 2 312 1 313 1 52 4 
128 2 122 3 159 1 268 4 54 1 212 1 346 1 152 2 289 4 57 4 273 1 242 2 306 2 216 1 142 8 255 1 310 1 312 1 52 2 313 1 
122 2 159 1 268 3 54 1 212 1 346 1 273 1 289 3 242 2 216 1 142 6 255 1 158 1 313 1 
128 1 122 2 268 2 16 1 346 1 107 1 152 1 57 2 289 2 242 1 306 1 144 1 142 4 255 1 148 1 312 1 52 1 
122 2 268 4 260 1 16 1 346 1 107 1 289 3 290 1 242 1 337 1 144 1 142 7 264 2 255 1 312 1 
128 2 260 2 116 1 54 1 212 2 152 2 289 11 57 4 242 5 337 1 216 1 264 2 122 9 159 1 268 12 14 1 16 2 107 2 346 3 273 1 306 2 142 23 144 2 255 3 310 2 312 4 75 1 313 2 52 2 
268 1 142 1 264 1 
289 1 142 1 260 1 
128 1 122 3 268 3 16 1 107 1 346 1 152 1 57 2 289 3 242 2 306 1 142 6 144 1 265 1 255 1 148 1 312 1 52 1 
128 1 280 1 260 1 333 1 152 1 5 1 57 2 289 6 290 1 293 1 242 1 264 1 122 2 268 6 16 2 107 2 346 2 348 1 306 1 142 12 144 2 167 1 255 2 312 1 52 1 
122 2 268 3 54 1 212 1 346 1 289 3 242 1 142 6 255 1 312 1 313 1 
128 1 122 2 159 1 268 2 14 1 212 1 152 1 289 1 57 2 273 1 242 1 306 1 142 3 310 1 312 1 313 1 52 1 
128 1 122 5 268 5 54 1 212 2 346 2 152 1 5 1 57 2 289 5 127 1 242 3 306 1 142 10 255 2 312 2 52 1 313 2 
128 1 122 1 107 1 5 1 152 1 57 2 289 2 306 1 142 2 255 1 312 1 52 1 
128 1 122 2 268 2 16 1 346 1 107 1 5 1 152 1 57 2 289 2 242 1 306 1 144 1 142 4 255 1 312 1 52 1 
128 3 122 2 268 2 14 1 212 1 5 1 152 3 57 6 289 1 242 1 228 1 306 3 142 3 310 1 312 1 52 3 313 1 
128 5 260 3 54 2 212 3 4 1 152 5 5 1 57 10 289 16 290 1 242 7 337 1 216 1 264 4 266 1 122 12 159 1 268 18 14 1 16 3 107 3 346 5 273 1 228 1 306 5 142 34 144 3 48 1 255 5 310 2 148 1 312 5 313 3 52 5 
200 1 349 1 300 1 272 1 23 1 30 1 326 1 
200 1 114 1 349 1 300 1 115 1 272 1 23 1 30 1 309 1 326 1 50 1 9 1 
129 1 118 1 58 1 319 1 249 1 155 1 217 1 208 1 193 1 199 1 158 1 
200 1 233 1 209 1 129 1 300 2 249 1 191 1 69 1 323 1 349 1 58 1 118 1 319 1 217 1 326 2 208 1 113 1 199 1 
200 2 233 1 219 1 209 2 129 3 300 2 103 1 249 1 192 1 191 1 69 2 323 1 349 1 58 2 118 1 319 1 244 1 339 1 326 2 208 1 113 1 91 1 199 1 
233 1 209 2 129 3 3 1 191 1 192 1 319 2 118 1 58 2 244 1 339 1 199 2 182 1 200 2 219 1 300 2 103 1 249 2 69 2 349 1 208 1 326 2 113 1 91 1 
182 1 219 1 321 1 267 1 129 4 281 1 103 1 249 3 223 1 192 1 69 1 132 1 153 1 317 2 58 1 118 1 319 3 47 2 143 1 217 1 208 1 199 3 94 1 
182 1 219 1 86 1 321 1 267 1 129 4 281 1 103 1 249 3 223 1 192 1 69 1 132 1 317 2 58 1 118 1 319 3 47 2 217 1 208 1 199 3 94 1 
118 1 319 1 249 1 208 1 199 1 95 1 
27 1 123 1 129 3 42 1 249 7 69 1 138 1 207 1 196 1 319 7 58 2 118 3 229 1 217 2 168 1 208 2 231 1 147 1 199 6 95 1 149 1 
128 2 233 1 257 1 209 1 129 1 191 1 54 1 212 1 152 2 289 3 57 4 292 1 318 1 242 2 58 1 118 1 319 1 216 1 215 1 180 2 199 1 200 1 122 2 159 1 245 2 268 3 300 2 65 1 221 1 249 1 224 1 69 1 346 1 273 1 323 1 349 2 306 2 142 6 229 1 90 1 255 1 208 1 326 2 113 1 24 1 313 1 52 2 
129 2 281 2 285 2 210 1 332 2 287 2 316 1 132 1 133 1 334 1 174 1 317 3 335 1 319 1 217 1 199 1 86 1 321 1 267 1 269 2 249 1 223 1 18 1 22 1 47 3 166 1 94 1 150 1 
129 2 249 2 223 1 69 1 207 1 140 1 319 2 58 1 118 2 229 1 208 1 199 2 95 1 
182 1 129 1 249 4 193 1 118 1 319 4 58 1 229 1 155 1 217 1 208 1 181 1 199 4 
0 1 129 1 103 1 249 2 305 1 288 1 69 1 138 1 319 2 58 1 118 2 208 1 199 2 149 1 
341 1 189 1 137 1 118 1 319 1 249 1 217 1 106 1 208 1 199 1 
235 1 129 1 42 1 249 2 319 2 58 1 118 1 229 1 208 1 147 1 199 2 
123 1 129 3 103 1 42 1 249 5 193 1 196 1 319 5 58 2 118 2 229 1 155 1 217 1 208 2 181 1 199 4 
129 3 103 1 42 1 249 5 193 1 196 1 319 5 58 2 118 2 229 1 155 1 217 1 112 1 208 2 181 1 199 4 
200 1 233 1 209 1 129 1 300 2 249 1 191 1 3 1 69 1 349 1 58 1 118 1 319 1 217 1 326 2 208 1 113 1 199 1 
129 1 103 1 249 1 69 1 138 1 207 1 319 1 58 1 118 2 168 1 208 1 199 1 149 1 
349 1 236 1 120 1 259 1 311 1 
321 1 267 1 236 2 39 1 259 1 286 1 18 1 68 1 132 1 154 1 349 1 317 2 72 1 47 2 120 2 244 1 339 1 311 2 91 1 
200 1 300 1 236 1 6 1 247 1 259 1 326 1 311 1 275 1 
154 1 259 1 68 1 
41 1 308 1 35 1 158 1 
165 1 274 1 110 1 
299 1 7 1 340 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
165 1 131 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
189 1 165 1 274 1 110 1 106 1 194 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
299 1 38 1 165 1 343 1 274 1 110 2 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
41 2 53 1 252 1 92 2 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
37 1 
165 1 274 1 110 1 194 1 
165 1 274 1 110 1 194 1 
70 1 38 1 41 1 19 1 
41 1 308 1 

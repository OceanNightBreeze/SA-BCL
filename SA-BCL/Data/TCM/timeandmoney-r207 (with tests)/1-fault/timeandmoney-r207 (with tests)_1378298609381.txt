#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
232 1 207 1 187 2 76 2 335 1 360 1 294 2 138 3 315 1 363 1 8 1 142 1 191 9 169 1 101 1 102 2 37 1 175 2 325 1 155 9 38 5 222 1 285 1 108 1 331 2 203 2 183 4 308 6 
232 1 207 1 187 2 76 2 335 1 360 1 294 2 138 3 315 1 363 1 8 1 142 1 191 9 169 1 101 1 102 2 37 1 175 2 325 1 155 9 38 5 222 1 285 1 108 1 331 2 203 2 183 4 308 6 
232 1 207 1 187 2 76 2 335 1 360 1 294 2 138 4 315 1 363 1 8 1 142 1 191 10 169 1 101 1 102 2 37 1 175 2 325 1 155 10 38 6 222 1 285 1 108 1 331 2 203 2 183 5 308 7 
232 1 207 1 187 2 76 1 360 1 294 2 138 2 315 1 363 1 8 1 142 1 191 7 169 1 101 1 102 2 37 1 175 2 325 1 155 7 38 4 222 1 285 1 108 1 331 2 203 2 183 3 308 4 
207 1 187 1 76 2 335 1 294 1 175 1 325 1 138 1 155 4 38 3 285 1 8 1 331 1 142 1 203 1 191 4 308 3 183 2 
207 1 187 1 220 1 101 1 102 1 294 1 155 2 38 1 285 1 6 1 8 1 331 1 158 1 191 2 203 1 169 1 
207 1 187 2 102 1 37 1 155 3 138 1 38 2 285 1 8 1 331 2 191 3 183 1 308 1 
207 1 187 2 76 2 335 1 360 1 294 1 138 3 316 1 8 1 142 1 191 9 102 1 37 1 257 1 175 1 325 1 155 9 38 5 285 1 108 1 331 2 203 1 183 4 308 7 
207 1 187 2 76 2 335 1 360 1 294 1 138 3 316 1 8 1 142 1 191 9 102 1 37 1 257 1 175 1 325 1 155 9 38 5 285 1 108 1 331 2 203 1 183 4 308 7 
268 1 192 1 79 1 
235 1 216 2 79 1 
43 2 157 2 234 1 201 1 116 2 105 2 369 2 184 2 
230 2 44 1 43 3 161 1 206 1 234 1 359 1 312 1 26 1 77 1 30 1 60 1 365 1 366 1 116 3 369 2 64 1 98 1 66 1 12 1 254 1 150 1 123 2 69 1 374 1 103 1 17 1 105 2 279 1 259 1 284 2 157 2 226 2 201 1 182 1 184 2 380 2 
27 1 274 1 43 1 157 1 234 1 116 1 194 1 105 1 369 1 184 1 
43 1 13 1 277 1 79 1 27 1 327 1 297 1 192 1 81 1 116 1 118 1 119 1 369 1 33 1 
43 1 13 1 105 1 79 1 27 1 327 1 297 2 157 1 192 1 81 2 116 1 118 1 184 1 369 1 33 1 
297 1 51 1 332 1 39 1 81 1 
186 1 297 2 51 1 269 1 192 1 332 1 81 2 79 1 
297 1 332 1 81 1 
274 1 43 1 234 1 51 1 105 1 27 1 297 1 157 1 214 1 81 1 116 1 194 1 184 1 369 1 
79 1 
297 2 51 1 269 1 192 1 332 1 81 2 293 1 79 1 
252 1 89 1 266 1 51 2 176 1 280 1 79 1 283 2 267 1 297 5 330 2 202 1 269 1 286 1 192 1 81 5 332 2 227 2 247 1 
147 1 43 2 206 1 100 1 359 1 254 1 150 1 123 1 69 1 374 1 17 1 323 1 77 1 157 1 60 1 226 1 116 2 184 1 369 1 380 1 
268 1 201 1 
43 2 104 1 105 1 157 1 329 1 201 2 116 2 369 2 184 1 
147 1 273 1 160 1 
43 1 206 1 359 1 254 1 123 1 150 1 69 1 374 1 17 1 77 1 262 1 226 1 60 1 201 1 116 1 380 1 
43 5 100 2 277 1 347 1 323 1 104 1 70 1 105 1 221 1 157 4 201 1 116 5 184 4 369 5 
27 1 274 1 43 2 157 2 116 2 319 1 369 2 184 2 
43 3 157 3 100 1 201 1 116 3 105 1 369 3 184 3 
27 1 274 1 43 1 157 1 116 1 369 1 184 1 
27 1 43 1 157 1 329 1 116 1 104 1 105 1 369 1 184 1 
230 1 44 1 43 4 161 1 206 1 359 1 234 1 312 1 26 1 77 1 27 1 297 1 30 1 60 1 365 1 141 1 143 1 81 1 366 1 116 4 118 1 369 3 33 1 12 1 13 1 100 1 254 1 150 1 123 1 69 1 374 1 103 1 17 1 323 1 104 1 105 2 327 1 284 2 157 3 226 1 201 1 182 1 184 3 380 1 
43 2 157 1 100 1 201 1 277 1 116 2 70 1 369 2 184 1 
43 3 13 1 100 2 323 1 104 1 105 1 79 1 188 1 27 1 327 1 297 1 157 3 141 1 81 1 116 3 118 1 184 3 369 3 33 1 
147 1 43 2 157 2 100 1 160 1 116 2 104 1 105 1 369 2 184 2 
43 1 206 1 359 1 123 1 150 1 254 1 69 1 374 1 17 1 77 1 226 1 60 1 201 1 116 1 380 1 
43 1 206 1 359 1 123 1 150 1 254 1 151 1 69 1 17 1 77 1 125 1 226 1 201 1 116 1 380 1 
112 1 44 1 230 4 161 1 312 1 26 1 30 2 364 1 168 1 365 1 10 1 31 1 273 2 147 2 272 1 36 1 103 1 326 1 259 2 284 2 109 1 160 2 129 1 40 1 
27 1 43 1 157 1 116 1 118 1 319 1 369 1 184 1 
15 1 94 1 
15 1 94 1 
174 1 229 1 
174 1 229 1 
174 1 229 1 
353 1 15 1 94 1 
353 1 15 1 94 1 
15 1 94 1 379 1 
15 2 82 1 271 1 174 1 229 1 94 2 
353 1 15 1 94 1 
15 1 117 1 94 1 
15 1 117 1 94 1 
15 1 117 1 94 1 
43 2 94 1 297 1 189 1 238 1 298 1 243 1 299 1 81 1 270 1 116 2 251 1 369 2 97 1 63 1 14 1 15 1 172 1 157 2 378 1 201 1 23 1 379 1 184 2 
371 1 172 2 15 2 82 1 16 1 94 2 362 1 79 1 297 2 189 1 126 1 59 1 5 2 298 2 378 2 243 3 81 2 228 1 251 2 
203 1 294 1 175 1 
220 1 203 1 294 1 
87 1 224 1 220 1 175 2 294 3 131 1 
87 1 139 1 220 1 175 1 294 2 131 1 
87 1 220 1 175 1 294 2 131 2 
290 1 266 1 51 4 235 1 135 1 79 2 267 2 297 5 364 1 168 1 341 1 299 1 269 1 245 1 270 1 81 5 192 1 31 1 216 3 218 1 303 2 195 2 36 1 351 1 124 1 280 3 283 1 330 1 332 1 333 2 227 1 23 1 
43 1 234 1 51 2 209 1 210 1 79 1 27 1 297 2 214 1 81 2 192 1 116 1 194 1 369 1 274 1 105 1 157 1 332 1 39 1 22 1 184 1 
290 1 51 2 235 2 135 1 79 3 297 3 267 2 364 1 168 1 341 1 192 1 81 3 31 1 216 4 218 1 303 1 252 1 195 2 36 1 351 1 280 3 283 1 330 1 227 1 23 1 333 2 
290 2 51 3 235 3 135 1 79 4 297 4 267 4 364 2 242 1 168 2 341 1 192 1 81 4 31 2 216 7 218 1 303 2 195 4 252 1 36 2 351 1 280 5 283 1 107 1 330 1 159 1 333 4 227 1 23 2 
111 1 254 1 268 1 
4 1 254 1 
120 1 
254 1 150 1 17 1 
254 1 246 1 
254 1 17 1 
111 2 254 3 150 1 17 1 197 1 78 1 
230 7 2 2 208 1 311 1 36 1 50 1 313 1 154 1 326 2 259 4 30 3 178 1 71 1 31 1 249 1 40 3 41 1 
230 7 2 2 208 1 311 1 36 1 50 1 313 1 154 1 326 2 259 4 30 3 178 1 71 1 31 1 249 1 40 3 41 1 
230 7 2 2 208 1 311 1 36 1 50 1 313 1 53 1 154 1 326 2 259 4 30 3 178 1 71 1 31 1 249 1 40 3 41 1 
290 3 204 1 44 1 230 31 161 1 2 3 208 1 311 1 3 3 50 1 92 1 312 1 26 1 313 2 30 15 364 3 168 3 342 1 301 1 31 4 144 4 249 2 219 1 36 4 152 1 154 2 177 1 326 5 259 16 284 2 178 1 71 5 40 10 41 2 
44 2 230 9 161 2 2 2 311 1 208 1 50 1 312 2 163 1 26 2 313 1 30 4 31 1 249 1 36 1 152 1 154 1 282 1 326 3 259 5 284 4 71 1 40 4 41 1 
206 1 207 1 187 1 337 1 294 2 8 1 191 2 370 1 171 1 196 1 220 1 322 1 123 1 102 1 69 1 175 1 376 1 155 2 198 1 38 1 156 1 285 1 224 1 226 1 331 1 225 1 203 1 72 1 308 1 380 1 
206 1 207 1 233 1 187 1 337 1 294 2 54 1 211 1 191 3 171 1 196 1 220 1 322 1 123 1 102 1 69 1 175 1 376 1 155 3 198 1 38 1 285 1 224 1 226 1 331 1 225 1 203 1 72 1 308 2 380 1 
206 1 207 1 233 1 294 2 211 1 191 2 171 1 196 1 220 1 322 1 123 1 102 1 69 1 175 1 376 1 155 2 198 1 38 1 285 1 224 1 226 1 225 1 203 1 308 2 380 1 
265 1 206 1 90 1 171 2 187 1 254 1 322 2 123 1 102 2 69 1 17 1 77 1 376 2 55 1 54 1 155 1 237 1 331 1 226 1 300 1 191 1 380 1 185 1 
206 1 187 1 337 1 294 2 211 1 8 1 191 1 370 1 171 1 196 1 220 1 322 1 123 1 102 1 69 1 175 1 376 1 155 1 198 1 224 1 226 1 331 1 225 1 203 1 72 1 380 1 
1 1 
0 1 231 1 43 1 90 1 133 1 235 2 297 5 240 1 339 2 192 1 99 1 149 1 305 1 13 1 67 4 254 1 69 1 349 1 17 1 106 2 261 2 266 1 206 1 77 2 361 1 79 2 27 1 267 2 80 1 269 3 81 5 115 2 216 2 116 1 170 2 118 1 218 1 119 1 369 1 33 1 34 2 123 2 277 1 278 2 280 2 283 1 327 1 223 1 330 1 226 2 332 6 288 1 227 1 380 2 185 1 
43 1 231 1 293 1 27 1 297 3 240 1 269 1 81 3 116 1 170 1 118 1 119 1 369 1 33 1 99 1 149 1 13 1 67 2 277 1 327 1 288 1 332 2 
43 1 231 1 293 1 79 1 27 1 297 3 240 1 269 1 81 3 192 1 116 1 115 1 118 1 119 1 369 1 33 1 99 1 149 1 13 1 67 3 277 1 327 1 332 1 288 1 
43 1 231 1 293 1 79 1 27 1 297 3 240 1 269 1 81 3 192 1 116 1 115 1 170 1 118 1 119 1 369 1 33 1 99 1 149 1 13 1 67 3 34 1 277 1 327 1 288 1 332 2 
43 1 231 1 133 1 235 2 293 1 297 5 239 1 240 1 339 2 192 5 99 1 149 1 13 1 67 6 106 2 261 2 21 1 266 1 361 1 79 5 27 1 267 1 269 3 81 5 116 1 115 4 170 4 118 1 119 1 369 1 33 1 34 4 321 1 173 1 277 1 278 2 280 1 327 1 283 1 330 1 332 7 288 1 227 1 289 1 
0 1 43 1 231 1 133 1 235 2 297 4 240 1 339 2 192 1 99 1 149 1 13 1 67 4 106 2 261 2 266 1 361 1 79 2 27 1 267 1 269 2 81 4 116 1 216 2 115 2 170 2 118 1 119 1 369 1 33 1 34 2 277 1 278 2 280 1 327 1 283 1 330 1 288 1 332 4 227 1 
43 1 231 1 266 1 133 1 235 2 361 1 79 1 27 1 267 1 297 4 239 1 240 1 339 2 269 2 192 1 81 4 115 2 116 1 170 2 118 1 119 1 369 1 33 1 99 1 149 1 13 1 34 2 67 4 173 1 277 1 278 2 106 2 280 1 327 1 283 1 261 2 330 1 332 4 288 1 21 1 227 1 
43 1 231 1 266 1 133 1 235 2 361 1 79 1 27 1 267 1 297 4 239 1 240 1 339 2 269 2 192 1 81 4 115 2 116 1 170 2 118 1 119 1 369 1 33 1 99 1 149 1 13 1 34 2 67 4 173 1 277 1 278 2 106 2 280 1 327 1 283 1 261 2 330 1 332 4 288 1 21 1 227 1 
43 1 231 1 266 1 133 1 79 1 27 1 28 2 57 1 267 1 297 4 240 1 339 2 269 2 192 1 81 4 115 2 216 2 116 1 170 2 248 2 118 1 119 1 368 1 369 1 33 1 99 1 149 1 13 1 34 2 67 4 277 1 278 2 280 1 153 1 327 1 283 1 330 1 332 4 288 1 21 1 227 1 
43 1 231 1 266 1 133 1 235 2 361 1 79 1 27 1 267 1 297 4 239 1 240 1 339 2 269 2 192 1 81 4 116 1 115 3 170 3 118 1 119 1 369 1 33 1 99 1 149 1 13 1 67 5 321 1 34 3 173 1 277 1 278 2 106 2 280 1 283 1 327 1 261 2 330 1 288 1 332 5 21 1 227 1 
43 1 231 1 266 1 133 1 235 2 361 1 79 1 27 1 267 1 297 4 239 1 240 1 339 2 269 2 192 1 81 4 116 1 115 3 170 3 118 1 119 1 369 1 33 1 99 1 149 1 13 1 67 5 321 1 34 3 173 1 277 1 278 2 106 2 280 1 283 1 327 1 261 2 330 1 288 1 332 5 21 1 227 1 
0 1 43 1 231 1 133 1 297 4 240 1 339 2 192 1 248 2 99 1 149 1 13 1 67 4 266 1 79 1 27 1 28 2 267 1 269 2 81 4 116 1 216 2 115 2 170 2 118 1 119 1 368 1 369 1 33 1 34 2 277 1 278 2 280 1 327 1 283 1 330 1 288 1 332 4 227 1 
44 1 230 6 161 1 2 1 311 1 208 1 50 1 312 1 26 1 30 3 268 1 365 1 10 1 31 1 147 1 273 1 36 1 103 1 154 1 326 2 259 3 284 2 160 1 201 2 40 2 41 1 
290 2 334 1 44 2 230 14 161 2 3 3 92 1 312 2 26 2 30 6 364 2 168 1 365 2 301 1 11 1 31 1 144 3 145 1 64 1 273 11 147 11 36 2 256 1 103 1 326 1 259 8 284 4 71 1 201 1 182 1 160 4 128 1 40 2 
43 2 44 1 230 2 206 1 161 1 359 1 312 1 336 1 26 1 77 1 30 1 60 1 365 1 116 2 369 1 64 1 100 1 254 1 150 1 123 1 69 1 374 1 17 1 103 1 323 1 258 1 259 1 284 2 262 1 157 1 328 1 226 1 201 1 160 1 182 1 128 1 380 1 184 1 
290 2 44 3 43 3 230 20 2 1 50 1 60 2 64 1 147 7 148 2 12 2 100 1 150 2 254 2 69 2 350 1 103 3 17 2 154 1 259 10 157 1 71 4 201 2 160 7 25 2 161 3 206 2 208 1 311 1 359 2 162 1 312 3 26 3 77 1 211 1 212 1 30 10 167 2 364 2 168 2 365 3 31 3 116 3 369 1 273 7 123 3 36 3 374 2 323 1 83 2 326 4 284 6 226 3 182 1 128 1 40 8 41 1 380 3 184 1 
43 1 44 2 230 2 206 2 161 2 90 1 312 2 26 2 164 1 77 2 211 1 165 1 30 1 213 1 365 2 10 1 116 1 369 1 64 1 98 2 346 1 100 1 254 3 123 7 68 1 69 2 103 2 17 2 259 1 284 4 260 1 156 1 157 1 226 8 287 1 182 1 184 1 380 8 185 1 
74 1 290 1 44 1 43 1 230 3 161 1 312 1 26 1 364 1 30 2 168 1 365 1 116 1 31 1 369 1 147 1 273 1 36 1 103 1 104 1 105 1 326 1 259 1 284 2 157 1 160 1 128 1 40 1 184 1 
147 1 273 1 112 1 230 2 44 1 161 1 36 1 312 1 103 1 26 1 259 2 284 2 364 1 71 1 160 1 365 1 10 1 40 1 
147 1 273 1 230 2 44 1 161 1 312 1 103 1 26 1 326 1 284 2 30 2 168 1 160 1 365 1 10 1 31 1 129 1 40 1 
147 2 273 2 290 1 230 4 44 1 161 1 36 1 312 1 103 1 26 1 326 1 259 2 284 2 30 2 364 1 71 1 168 1 160 2 365 1 10 1 31 1 40 2 
147 1 273 1 112 1 230 2 44 1 161 1 36 1 312 1 164 1 103 1 26 1 259 2 284 2 364 1 71 1 160 1 365 1 40 1 
147 1 273 1 230 2 44 1 161 1 312 1 164 1 103 1 26 1 326 1 284 2 30 2 168 1 160 1 365 1 31 1 129 1 40 1 
147 2 273 2 290 1 230 4 44 1 161 1 36 1 312 1 164 1 103 1 26 1 326 1 259 2 284 2 30 2 364 1 71 1 168 1 160 2 365 1 31 1 40 2 
147 2 273 2 290 1 44 1 230 4 161 1 36 1 312 1 103 1 26 1 326 1 259 2 284 2 30 2 364 1 71 1 168 1 160 2 365 1 31 1 40 2 
230 2 43 1 44 1 206 1 161 1 359 1 312 1 26 1 77 1 30 1 60 1 365 1 116 1 64 1 12 1 150 1 123 1 254 1 69 1 374 1 17 1 103 1 259 1 284 2 226 1 201 1 182 1 380 1 
230 2 43 1 44 1 206 1 161 1 359 1 312 1 26 1 77 1 30 1 365 1 116 1 64 1 35 1 150 1 123 1 254 1 151 1 69 1 17 1 103 1 125 1 259 1 284 2 226 1 201 1 182 1 380 1 
147 2 273 2 290 1 230 4 44 1 161 1 36 1 312 1 103 1 26 1 326 1 259 2 284 2 30 2 364 1 71 1 168 1 160 2 365 1 31 1 128 1 40 2 
290 1 230 4 43 1 44 1 206 1 161 1 359 1 312 1 26 1 30 2 364 1 167 1 168 1 60 1 365 1 31 1 116 1 147 2 273 2 12 1 36 1 150 1 123 1 254 1 69 1 374 1 17 1 103 1 326 1 259 2 284 2 156 1 71 1 226 1 160 2 40 2 380 1 
290 1 44 1 43 1 230 3 161 1 312 1 26 1 30 1 364 1 168 1 365 1 31 1 116 1 369 1 273 1 147 1 36 1 255 1 103 1 104 1 105 1 259 2 284 2 71 1 157 1 160 1 128 1 40 1 184 1 
290 4 230 41 44 3 46 1 134 1 2 1 3 3 49 1 92 1 50 1 136 1 301 3 193 1 144 4 250 1 65 1 152 1 154 1 259 20 71 4 309 4 110 2 264 1 161 3 311 1 208 1 312 3 26 3 364 4 30 21 168 4 31 5 275 1 122 1 36 5 375 1 281 1 282 1 326 4 284 6 179 1 40 8 41 1 
290 4 264 1 44 4 230 38 46 1 161 4 2 1 134 1 208 1 311 1 49 1 3 3 50 1 92 1 312 4 26 4 136 1 30 18 364 4 168 3 301 3 31 4 193 1 250 1 144 4 65 1 275 1 122 1 36 5 375 1 152 2 154 1 281 1 326 4 282 1 259 20 284 8 179 1 71 3 309 4 40 7 41 1 110 2 
290 7 264 1 44 2 230 52 46 1 161 2 2 1 134 1 208 1 311 1 49 1 3 4 50 1 92 2 312 2 26 2 136 1 30 25 364 7 168 7 11 2 301 2 31 8 193 1 144 4 275 1 122 1 36 8 375 1 152 1 154 1 281 1 326 7 282 1 259 27 284 4 179 1 71 7 309 4 40 14 41 1 110 1 
290 3 264 1 44 2 230 19 161 2 49 1 3 1 92 1 312 2 26 2 136 1 30 10 364 3 168 3 301 1 31 3 144 2 65 1 122 1 36 3 375 2 326 3 282 1 259 9 199 1 284 4 71 3 309 2 40 6 110 1 
290 3 264 1 44 3 230 26 161 3 46 1 134 1 49 1 3 2 312 3 26 3 136 2 30 12 364 3 168 2 31 2 301 2 193 1 144 2 275 1 122 1 36 3 375 1 152 2 281 1 326 2 282 1 259 14 284 6 179 1 71 2 309 4 40 4 110 2 
166 1 378 1 15 1 298 1 172 1 82 1 228 1 251 1 94 1 362 1 
14 1 379 1 
354 1 378 1 15 1 298 1 172 1 251 1 94 1 295 1 73 1 
353 1 62 1 
271 1 117 1 263 1 
172 1 15 1 82 1 16 1 94 1 362 1 79 1 189 1 297 1 126 1 59 1 5 1 298 1 378 1 243 2 81 1 228 1 251 1 
172 1 15 1 82 1 16 1 94 1 362 1 79 1 189 1 297 1 126 1 59 1 5 1 298 1 378 1 243 2 81 1 228 1 251 1 
172 1 15 1 82 1 16 1 94 1 362 1 79 1 189 1 297 1 126 1 59 1 5 1 298 1 378 1 243 2 81 1 228 1 251 1 
353 1 271 1 62 1 
353 1 271 1 62 1 
117 1 263 1 
271 1 117 1 263 1 
238 1 97 1 
43 2 51 1 94 1 297 1 238 1 5 1 59 1 298 1 243 1 299 1 81 1 270 1 116 2 251 1 97 1 369 2 63 1 14 1 15 1 172 1 324 1 157 2 378 1 201 1 23 1 379 1 184 2 
43 2 44 1 230 2 206 1 161 1 312 1 26 1 56 1 30 1 365 1 116 2 343 1 344 1 369 2 64 1 98 2 346 1 121 1 254 1 123 2 69 1 17 1 103 1 18 1 259 1 284 2 226 2 287 1 182 1 128 1 380 2 
206 1 220 1 123 2 322 1 69 1 175 1 294 2 211 1 198 1 29 1 156 1 190 1 224 1 226 2 225 1 244 1 203 1 72 1 380 2 
206 1 276 1 220 1 123 1 322 1 69 1 175 1 294 2 211 1 198 1 29 1 224 1 226 1 225 1 203 1 72 1 380 1 
206 1 90 1 254 1 123 1 322 1 69 1 17 1 77 1 237 1 226 1 244 1 380 1 345 1 185 1 
206 1 220 1 123 1 322 1 69 1 175 1 294 2 211 1 198 1 29 1 190 1 224 1 226 1 225 1 244 1 203 1 72 1 380 1 
47 1 
267 1 89 1 268 1 202 1 192 1 280 1 79 1 
266 1 235 1 361 1 79 2 267 1 297 1 269 1 81 1 192 1 216 1 106 1 280 1 283 1 261 1 330 1 332 1 227 1 
42 1 290 2 89 1 48 2 91 2 93 2 292 2 235 6 296 1 297 5 4 3 192 2 61 2 246 2 195 6 148 2 307 2 254 10 150 3 69 4 348 1 17 3 19 1 156 1 202 1 111 2 205 2 206 3 266 4 77 1 78 1 79 8 267 8 364 2 317 1 168 2 269 3 81 5 216 12 31 2 218 2 33 2 123 3 36 2 372 2 280 9 283 4 223 1 330 4 226 3 332 5 227 4 333 6 380 3 
290 2 46 1 266 2 134 1 48 2 3 1 114 1 235 3 79 5 297 1 267 5 364 2 168 2 269 1 81 1 192 2 216 6 301 1 31 2 193 1 144 1 218 1 195 5 275 1 307 1 36 2 84 1 280 8 281 1 283 2 223 1 330 2 332 1 333 5 227 2 
43 1 266 1 48 2 208 1 234 1 52 1 27 1 297 1 267 2 214 1 81 1 116 1 31 1 194 1 369 1 274 1 307 1 36 2 173 1 105 1 154 1 280 2 283 1 157 1 330 1 227 1 41 1 184 1 
89 1 266 1 280 1 79 1 283 1 267 1 330 1 202 1 192 1 227 1 
290 2 195 5 148 1 307 1 48 2 36 2 235 5 280 5 79 5 267 5 364 2 168 2 333 5 216 10 31 2 
297 1 269 1 192 1 81 1 332 1 79 1 
206 1 266 1 90 1 77 2 267 2 297 3 80 1 317 2 269 2 81 3 367 1 218 2 252 1 305 1 254 1 123 4 69 1 352 1 17 1 19 1 280 2 283 2 223 2 330 2 226 4 332 4 227 2 380 4 185 1 
230 1 44 1 43 3 206 1 161 1 234 1 359 1 312 1 26 1 77 1 30 1 60 1 365 1 366 1 116 3 369 2 12 1 123 1 150 1 254 1 69 1 374 1 17 1 103 1 105 2 284 2 157 2 226 1 201 1 182 1 380 1 184 2 
195 2 266 1 2 1 235 2 280 1 79 4 283 1 267 2 223 1 330 1 192 2 216 4 333 2 227 1 218 1 
378 1 251 1 310 1 
378 1 251 1 310 1 
238 1 340 1 378 1 251 1 362 1 
378 1 251 1 310 1 
132 1 378 1 251 1 
132 1 378 1 251 1 
132 1 378 1 251 1 
378 1 251 1 
15 1 94 1 
230 8 44 1 46 1 161 1 2 1 3 1 311 1 208 1 50 1 312 1 26 1 30 4 31 1 301 1 144 1 36 1 154 1 282 1 326 2 259 4 284 2 40 2 41 1 
290 1 230 11 44 2 46 1 161 2 2 1 208 1 311 1 3 1 50 1 92 1 312 2 26 2 30 5 364 1 31 1 301 1 144 2 36 2 154 1 326 2 282 1 259 6 284 4 71 1 127 1 40 3 41 1 
290 2 230 19 44 3 46 1 161 3 2 1 134 1 208 1 311 1 3 1 50 1 312 3 26 3 30 10 364 2 168 2 301 1 31 3 193 1 144 1 275 1 36 3 152 1 154 1 281 1 282 1 326 3 259 9 284 6 71 1 127 1 40 4 41 1 
290 2 230 17 44 3 46 1 161 3 2 1 134 1 208 1 311 1 3 1 50 1 312 3 26 3 30 7 364 2 168 1 301 1 31 2 193 1 144 1 275 1 36 3 152 1 154 1 281 1 282 1 326 3 259 10 284 6 71 2 127 1 40 5 41 1 
230 8 44 1 46 1 161 1 2 1 3 1 311 1 208 1 50 1 312 1 26 1 30 4 31 1 301 1 144 1 36 1 154 1 282 1 326 2 259 4 284 2 40 2 41 1 
290 2 230 12 44 1 46 1 161 1 134 1 3 1 312 1 26 1 30 6 364 2 168 2 301 1 31 2 193 1 144 1 275 1 36 2 281 1 282 1 326 1 259 6 284 2 71 1 40 2 
290 2 230 18 44 4 46 1 161 4 2 1 134 1 208 1 311 1 3 1 50 1 312 4 26 4 30 8 364 2 168 1 301 1 31 2 193 1 144 1 275 1 36 3 152 2 154 1 281 1 282 1 326 3 259 10 284 8 71 2 127 1 40 5 41 1 
290 3 230 16 44 4 46 1 161 4 134 1 3 1 312 4 26 4 30 7 364 3 168 2 301 1 31 2 193 1 144 1 65 1 275 1 36 3 152 2 281 1 282 1 326 3 259 9 284 8 71 3 40 6 
230 7 311 1 208 1 50 2 36 1 154 3 326 3 259 3 30 4 71 3 31 1 40 6 41 3 
290 2 230 18 44 4 46 1 161 4 2 1 134 1 208 1 311 1 3 1 50 1 312 4 26 4 30 8 364 2 168 1 301 1 31 2 193 1 144 1 65 1 275 1 36 3 152 2 154 1 281 1 282 1 326 3 259 10 284 8 71 1 40 4 41 1 
230 8 44 2 161 2 2 1 208 1 311 1 36 1 50 1 312 2 26 2 152 1 154 1 326 2 259 4 284 4 30 4 71 1 31 1 40 3 41 1 
230 6 2 1 311 1 208 1 50 1 36 1 154 1 326 2 259 3 30 3 268 1 31 1 40 2 41 1 
290 1 44 1 230 4 161 1 36 1 312 1 26 1 326 1 259 2 284 2 30 2 364 1 71 1 168 1 31 1 127 1 40 2 
290 1 230 7 3 1 92 1 36 1 326 1 259 3 30 4 364 1 71 1 168 1 31 1 301 1 144 2 40 2 
290 2 75 1 230 23 44 2 161 2 2 1 208 1 311 1 3 2 50 1 92 1 312 2 26 2 364 2 30 12 168 2 31 3 11 1 144 2 145 1 36 3 152 2 154 2 326 5 259 11 284 4 71 4 40 9 41 2 
230 1 30 1 144 1 
259 1 230 1 3 1 
290 1 148 1 44 1 230 6 161 1 36 1 312 1 26 1 326 2 259 3 284 2 30 3 364 1 71 1 168 1 127 1 31 1 40 3 
290 2 230 12 44 1 46 1 161 1 134 1 3 1 312 1 26 1 30 6 364 2 168 2 301 1 31 2 193 1 144 1 275 1 36 2 281 1 282 1 326 1 259 6 284 2 71 1 40 2 
230 6 208 1 36 1 154 1 326 1 259 3 30 3 71 1 31 1 40 2 41 1 
75 1 230 3 44 1 161 1 311 1 50 1 312 1 152 1 26 1 154 1 326 1 259 1 284 2 30 2 71 1 40 2 41 1 
44 1 230 10 161 1 208 1 36 2 312 1 52 1 26 1 154 2 282 1 326 3 259 5 284 2 30 5 71 2 31 2 40 5 41 2 
44 1 230 2 161 1 36 1 312 1 26 1 282 1 259 2 284 2 364 1 71 1 40 1 
290 1 44 1 230 4 161 1 36 1 312 1 26 1 326 1 282 1 259 2 284 2 30 2 364 1 71 1 168 1 31 1 40 2 
65 1 75 1 230 3 44 3 161 3 312 3 152 1 26 3 154 1 282 1 326 1 259 1 284 6 30 2 71 1 40 2 41 1 
290 3 75 1 44 5 230 34 161 5 2 1 208 2 311 1 3 3 50 1 92 1 312 5 26 5 30 18 364 3 168 3 342 1 301 1 31 5 144 4 65 1 219 1 36 5 152 2 154 3 177 1 282 1 326 7 259 16 284 10 71 5 127 1 40 12 41 3 
43 1 45 1 201 1 277 1 116 1 70 1 369 1 
43 1 253 1 45 1 113 1 277 1 70 1 355 1 86 1 201 1 215 1 116 1 369 1 
206 1 90 1 254 1 268 1 226 1 123 1 69 1 17 1 77 1 380 1 185 1 
43 2 206 1 100 1 359 1 254 1 150 1 123 1 69 1 17 1 77 1 157 1 226 1 60 1 201 1 116 2 184 1 369 1 380 1 
43 2 13 1 206 1 100 1 359 1 91 1 254 3 150 2 123 1 69 1 17 2 27 1 157 2 317 1 226 1 60 1 201 1 246 1 116 2 118 1 184 1 369 2 380 1 
43 2 13 1 206 1 100 1 359 1 91 1 254 3 150 2 123 2 69 1 17 2 125 1 27 1 157 2 317 1 226 2 201 1 246 1 116 2 118 1 32 1 184 1 369 2 380 2 
111 1 306 1 206 1 150 1 91 1 123 3 254 4 69 1 17 1 77 1 79 1 297 2 4 1 317 1 226 3 192 1 81 2 357 1 332 1 246 1 32 1 380 3 33 1 
111 1 206 1 150 1 91 1 123 3 254 4 69 1 292 1 17 1 77 1 79 1 297 2 4 1 317 1 226 3 192 1 81 2 332 1 246 1 32 1 380 3 33 1 
206 1 226 1 123 1 68 1 69 1 380 1 
320 1 98 1 346 1 358 1 88 1 206 2 123 6 150 1 254 3 68 1 69 3 17 2 77 2 78 1 211 1 165 1 260 1 156 1 213 1 226 7 380 7 
44 2 43 2 230 6 2 1 50 1 60 1 344 1 147 1 12 1 100 1 150 1 254 1 69 1 103 2 17 1 154 1 259 3 156 1 157 1 160 1 201 2 161 2 206 1 359 1 311 1 208 1 312 2 26 2 167 1 30 3 365 2 116 2 31 1 369 1 273 1 123 1 36 1 374 1 83 1 326 2 284 4 226 1 128 1 40 2 380 1 184 1 41 1 
111 1 205 1 89 1 266 2 51 1 292 1 77 1 79 1 267 1 297 3 4 1 269 1 192 1 81 3 61 1 33 1 123 1 254 2 372 1 280 1 19 1 283 2 330 2 226 1 202 1 332 2 227 2 380 1 
111 1 206 1 123 2 150 1 254 2 68 1 69 2 17 1 78 1 296 1 156 1 226 2 380 2 
90 1 206 1 123 4 254 1 69 1 17 1 77 1 20 1 156 1 226 4 32 1 380 4 185 1 
320 1 358 1 206 1 162 1 123 2 150 1 254 1 69 2 17 1 317 1 226 2 140 1 380 2 146 1 
198 1 206 1 220 1 226 1 123 1 203 1 69 1 294 1 77 1 380 1 
346 1 156 1 206 1 254 1 226 2 123 2 69 1 17 1 343 1 380 2 211 1 
346 1 90 1 206 2 123 4 254 3 69 2 17 2 77 1 20 1 156 1 260 1 213 1 317 1 226 5 380 5 185 1 
346 1 90 1 206 2 123 4 254 3 69 2 17 2 77 1 85 1 20 1 156 1 260 1 317 1 226 5 380 5 185 1 
43 2 206 1 100 1 359 1 254 1 150 1 123 1 69 1 17 1 77 1 125 1 157 1 226 1 201 1 116 2 184 1 369 1 380 1 
320 1 358 1 88 1 206 1 123 1 150 1 254 1 69 2 17 1 78 1 317 1 226 1 380 1 
338 1 180 1 201 1 302 1 377 1 
13 1 51 1 373 1 236 1 79 1 377 2 27 1 338 2 327 1 297 2 58 1 180 2 201 1 141 1 192 1 81 2 118 1 302 1 33 1 
338 1 121 1 43 1 180 1 116 1 18 1 369 1 302 1 56 1 
58 1 373 1 302 1 
38 1 285 1 207 1 268 1 
155 1 38 1 285 1 207 1 187 1 331 1 191 1 
155 1 171 1 102 1 
207 1 187 1 101 2 96 1 155 3 38 1 285 1 181 1 8 1 331 1 9 1 191 3 
155 2 38 1 285 1 207 1 187 1 331 1 76 1 191 2 308 1 
155 1 38 1 187 1 331 1 8 1 142 1 203 1 191 1 294 1 175 1 183 1 
155 1 38 1 285 1 187 1 331 1 8 1 191 1 
155 1 285 2 207 1 187 1 331 1 8 1 191 1 
291 1 187 2 155 2 38 1 285 1 241 1 8 1 331 2 7 1 191 2 
207 1 187 1 360 1 155 3 138 1 38 2 285 1 108 1 8 1 331 1 191 3 308 2 183 1 
207 1 220 1 187 1 294 2 175 1 155 2 38 1 285 1 356 1 224 1 8 1 331 1 191 2 203 1 308 1 
207 1 187 2 76 1 335 1 155 4 138 1 38 2 285 1 8 1 331 2 191 4 308 2 183 1 
155 1 38 1 285 1 207 1 187 1 331 1 8 1 191 1 
207 2 187 1 101 1 155 4 138 1 38 3 285 2 181 1 331 1 9 1 191 4 217 1 308 2 183 1 
207 1 187 1 257 1 95 1 155 2 38 1 285 1 8 1 331 1 191 2 318 1 308 1 
207 1 187 1 101 2 155 3 38 1 200 1 285 1 181 1 8 1 331 1 9 2 191 3 
38 2 304 1 24 1 137 2 
155 1 314 1 187 1 331 1 8 1 191 1 
155 2 38 1 285 1 207 1 187 1 331 1 8 1 191 2 360 1 308 1 
130 1 
155 1 38 1 285 1 207 1 187 1 331 1 8 1 191 1 
155 3 38 1 285 1 207 1 187 1 101 1 331 1 8 1 191 3 360 1 308 1 
138 1 38 1 217 1 183 1 
38 1 285 1 

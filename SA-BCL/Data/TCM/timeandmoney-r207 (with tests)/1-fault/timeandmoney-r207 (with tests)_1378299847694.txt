#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 2 8 2 157 1 239 5 80 1 183 1 208 2 299 1 59 2 60 4 107 1 110 1 111 1 188 9 330 1 245 1 212 2 376 3 335 1 114 2 337 2 355 9 273 1 91 1 20 1 123 1 24 1 287 6 
101 2 8 2 157 1 239 5 80 1 183 1 208 2 299 1 59 2 60 4 107 1 110 1 111 1 188 9 330 1 245 1 212 2 376 3 335 1 114 2 337 2 355 9 273 1 91 1 20 1 123 1 24 1 287 6 
101 2 8 2 157 1 239 6 80 1 183 1 208 2 299 1 59 2 60 5 107 1 110 1 111 1 188 10 330 1 245 1 212 2 376 4 335 1 114 2 337 2 355 10 273 1 91 1 20 1 123 1 24 1 287 7 
101 2 8 2 157 1 239 4 80 1 183 1 208 1 299 1 59 2 60 3 107 1 110 1 111 1 188 7 330 1 245 1 212 2 376 2 335 1 114 2 337 2 355 7 273 1 20 1 123 1 24 1 287 4 
212 1 376 1 101 1 114 1 8 1 157 1 239 3 355 4 208 2 273 1 91 1 59 1 60 2 123 1 24 1 110 1 188 4 287 3 
266 1 245 1 101 1 114 1 8 1 239 1 157 1 337 1 80 1 367 1 355 2 59 1 123 1 282 1 24 1 188 2 
376 1 114 2 157 1 337 1 239 2 183 1 355 3 59 2 60 1 123 1 24 1 188 3 287 1 
101 1 8 1 157 1 239 5 183 1 208 2 60 4 59 2 110 1 188 9 330 1 212 1 376 3 114 2 337 1 355 9 273 1 91 1 20 1 276 1 123 1 73 1 24 1 287 7 
101 1 8 1 157 1 239 5 183 1 208 2 60 4 59 2 110 1 188 9 330 1 212 1 376 3 114 2 337 1 355 9 273 1 91 1 20 1 276 1 123 1 73 1 24 1 287 7 
3 1 281 1 342 1 
303 2 3 1 356 1 
97 2 106 2 343 2 166 2 109 1 226 2 328 1 167 2 
361 1 97 2 252 1 203 1 254 1 363 1 343 3 30 1 226 2 365 2 298 1 105 2 106 3 109 1 186 1 375 1 62 2 328 1 189 1 166 2 67 1 215 1 90 1 144 1 167 2 69 1 272 1 235 1 197 1 21 2 45 1 22 2 357 1 280 1 251 1 380 1 201 1 
378 1 97 1 106 1 52 1 343 1 166 1 109 1 242 1 226 1 167 1 
97 1 3 1 306 1 255 1 343 1 52 1 34 1 309 1 366 1 106 1 281 1 176 1 135 1 94 1 
97 1 3 1 255 1 166 1 343 1 52 1 226 1 309 1 167 1 366 2 106 1 281 1 176 1 94 2 135 1 
379 1 99 1 279 1 94 1 366 1 
3 1 281 1 99 1 122 1 279 1 94 2 88 1 366 2 
99 1 94 1 366 1 
97 1 52 1 166 1 343 1 226 1 308 1 366 1 167 1 378 1 106 1 279 1 94 1 109 1 242 1 
3 1 
218 1 3 1 281 1 99 1 279 1 94 2 88 1 366 2 
329 1 317 1 3 1 246 1 99 2 268 1 156 1 295 1 88 1 55 1 366 5 275 1 325 2 281 1 279 2 94 5 260 2 199 1 187 2 
342 1 328 1 
97 2 343 2 166 1 31 1 226 1 167 1 106 2 274 1 328 2 
305 1 277 1 103 1 
189 1 252 1 343 1 90 1 43 1 298 1 197 1 21 1 106 1 22 1 357 1 186 1 251 1 62 1 328 1 380 1 
97 3 106 3 166 1 343 3 301 1 226 3 328 1 167 3 
378 1 97 1 106 1 52 1 343 1 226 1 167 1 
97 1 106 1 274 1 52 1 343 1 166 1 31 1 226 1 167 1 
252 1 97 3 203 1 254 1 255 1 77 1 363 1 343 4 52 1 30 1 226 3 365 2 366 1 298 1 105 1 106 4 186 1 135 1 109 1 301 1 62 1 328 1 189 1 166 2 213 1 67 1 215 1 90 1 309 1 144 1 167 3 69 1 235 1 197 1 21 1 274 1 22 1 357 1 176 1 94 1 251 1 284 1 380 1 201 1 
97 2 106 2 306 1 292 1 343 2 301 1 226 1 328 1 167 1 
97 3 3 1 77 1 255 1 166 1 52 1 213 1 343 3 344 1 226 3 309 1 366 1 167 3 274 1 106 3 176 1 94 1 135 1 301 2 
305 1 97 2 166 1 343 2 226 2 167 2 274 1 106 2 277 1 301 1 
189 1 252 1 343 1 90 1 298 1 197 1 21 1 106 1 22 1 357 1 186 1 251 1 62 1 328 1 380 1 
189 1 248 1 343 1 298 1 36 1 197 1 21 1 106 1 22 1 357 1 186 1 251 1 62 1 328 1 380 1 
319 1 203 1 76 1 254 2 363 1 33 1 365 2 207 1 103 2 322 1 230 1 105 4 375 2 190 1 305 2 67 1 87 1 215 1 68 1 69 1 196 1 277 2 381 1 201 1 
310 1 97 1 106 1 52 1 343 1 226 1 309 1 167 1 
189 1 252 1 97 1 213 1 343 2 226 1 90 1 167 1 298 1 197 1 21 1 106 2 22 1 277 1 357 1 186 1 301 1 251 1 62 1 380 1 
97 5 371 1 274 1 106 5 306 1 292 1 213 1 166 1 343 5 296 1 301 2 226 4 328 1 167 4 
310 1 378 1 97 2 106 2 52 1 343 2 226 2 167 2 
139 1 258 1 
139 1 258 1 
304 1 253 1 
304 1 253 1 
304 1 253 1 
139 1 369 1 258 1 
139 1 369 1 258 1 
139 1 258 1 283 1 
139 2 304 1 258 2 253 1 66 1 346 1 
139 1 369 1 258 1 
139 1 0 1 258 1 
139 1 0 1 258 1 
139 1 0 1 258 1 
139 2 3 1 131 1 75 2 346 1 270 2 366 2 147 1 70 1 219 3 311 1 258 2 220 2 94 2 164 2 40 1 200 2 137 1 48 1 
97 2 75 1 343 2 226 2 366 1 106 2 258 1 164 1 327 1 137 1 328 1 139 1 141 1 115 1 167 2 170 1 219 1 220 1 23 1 71 1 94 1 93 1 283 1 200 1 
212 1 101 1 8 1 
266 1 101 1 8 1 
368 1 44 1 266 1 234 1 212 2 8 3 
368 1 266 1 2 1 234 1 212 1 8 2 
368 1 266 1 234 2 212 1 8 2 
3 2 99 1 156 1 182 1 207 1 81 1 366 5 229 1 230 1 231 2 325 1 259 1 260 1 39 1 187 1 303 3 329 3 211 2 334 2 268 2 115 1 88 1 68 1 236 1 356 1 23 1 279 4 281 1 71 1 94 5 25 1 381 1 
128 1 317 1 3 5 99 6 156 1 207 3 158 1 81 3 366 9 230 3 160 1 231 6 325 2 260 2 39 1 187 2 303 9 329 8 211 6 64 5 268 6 116 1 88 1 68 3 236 2 356 3 379 5 71 4 279 7 281 1 94 9 25 2 289 1 381 3 27 1 
317 1 3 3 182 1 207 1 366 3 81 1 230 1 231 2 325 1 259 1 260 1 187 1 329 3 303 4 211 2 334 1 268 2 68 1 236 1 356 2 281 1 279 2 71 1 94 3 25 1 381 1 
128 1 317 1 3 4 182 1 207 2 366 4 81 2 230 2 160 1 231 4 325 1 260 1 259 1 187 1 303 7 329 5 211 4 334 2 268 4 68 2 236 1 356 3 281 1 71 2 279 3 94 4 25 1 289 1 381 2 
298 1 63 1 342 1 
298 1 138 1 
10 1 
298 1 380 1 
298 3 189 1 63 2 142 1 380 1 145 1 
298 1 189 1 380 1 
298 1 372 1 
74 1 191 1 267 1 332 1 254 3 193 1 87 3 207 1 322 2 118 2 324 1 57 1 257 1 105 7 375 4 340 1 381 1 
74 1 191 1 267 1 332 1 254 3 193 1 87 3 207 1 322 2 118 2 324 1 57 1 257 1 105 7 375 4 340 1 381 1 
74 1 191 1 267 1 332 1 254 3 193 1 87 3 207 1 322 2 118 2 324 1 57 1 257 1 105 7 375 4 340 1 381 1 127 1 
74 1 1 1 254 15 102 1 365 2 207 4 322 5 81 3 230 3 257 1 57 1 324 2 105 31 184 1 375 16 233 3 244 1 265 1 191 1 113 1 267 5 332 2 247 1 193 2 67 1 87 10 215 1 68 3 118 3 69 1 124 4 340 2 201 1 381 4 
74 1 254 4 102 1 365 4 207 1 322 3 324 1 257 1 105 9 375 5 191 1 267 1 332 1 193 1 67 2 87 4 215 2 118 2 119 1 69 2 148 1 340 1 381 1 201 2 
223 1 362 1 101 1 8 2 239 1 157 1 104 1 59 1 134 1 373 1 84 1 62 1 188 2 165 1 210 1 266 1 212 1 114 1 337 1 355 2 44 1 197 1 21 1 22 1 123 1 178 1 24 1 251 1 179 1 287 1 
223 1 362 1 101 1 8 2 239 1 157 1 321 1 104 1 37 1 59 1 134 1 373 1 84 1 62 1 188 3 210 1 266 1 212 1 114 1 337 1 44 1 355 3 197 1 21 1 22 1 123 1 313 1 251 1 179 1 287 2 
223 1 362 1 101 1 8 2 239 1 157 1 321 1 37 1 134 1 373 1 62 1 188 2 210 1 266 1 212 1 337 1 355 2 44 1 197 1 21 1 22 1 123 1 251 1 179 1 287 2 
41 1 96 1 362 2 214 1 7 1 114 1 337 2 298 1 355 1 197 1 59 1 21 1 22 1 134 2 357 1 61 1 151 1 313 1 251 1 188 1 62 1 380 1 179 2 
223 1 210 1 266 1 362 1 212 1 101 1 114 1 8 2 337 1 321 1 104 1 44 1 355 1 197 1 59 1 21 1 22 1 134 1 373 1 251 1 84 1 24 1 188 1 62 1 179 1 165 1 
82 1 
97 1 3 2 99 6 343 1 52 1 156 1 298 1 12 2 347 2 106 1 350 1 243 2 62 2 303 2 306 1 117 1 249 1 309 1 217 4 21 2 356 2 22 2 357 2 172 1 176 1 251 1 25 1 126 1 316 2 255 1 78 1 34 1 228 2 366 5 325 1 260 1 135 1 83 1 187 1 263 2 41 1 329 2 85 1 268 2 143 1 88 3 197 1 198 1 149 1 281 1 151 1 94 5 286 2 380 1 46 1 
97 1 99 2 255 1 343 1 52 1 34 1 366 3 106 1 135 1 350 1 243 1 306 1 85 1 143 1 88 1 309 1 217 2 218 1 149 1 176 1 94 3 126 1 
97 1 3 1 99 1 255 1 343 1 52 1 34 1 366 3 106 1 135 1 350 1 306 1 85 1 143 1 88 1 309 1 217 3 218 1 149 1 281 1 176 1 94 3 126 1 286 1 
97 1 3 1 99 2 255 1 343 1 52 1 34 1 366 3 228 1 106 1 135 1 350 1 243 1 306 1 85 1 143 1 88 1 309 1 217 3 218 1 149 1 281 1 176 1 94 3 126 1 286 1 
97 1 3 5 99 7 52 1 343 1 156 1 206 1 12 2 347 2 106 1 13 1 302 1 350 1 243 4 306 1 351 1 309 1 217 6 218 1 356 2 172 1 176 1 126 1 316 2 255 1 34 1 228 4 366 5 325 1 135 1 260 1 187 1 263 2 329 1 85 1 268 1 143 1 88 3 146 1 198 1 149 1 281 5 94 5 286 4 
97 1 3 2 99 4 52 1 343 1 156 1 12 2 347 2 106 1 350 1 243 2 303 2 306 1 117 1 309 1 217 4 356 2 172 1 176 1 126 1 316 2 255 1 34 1 366 4 228 2 325 1 135 1 260 1 187 1 263 2 329 1 85 1 268 1 143 1 88 2 198 1 149 1 281 1 94 4 286 2 
97 1 3 1 99 4 255 1 343 1 52 1 156 1 34 1 206 1 228 2 366 4 12 2 347 2 106 1 325 1 135 1 260 1 350 1 187 1 243 2 263 2 329 1 306 1 85 1 268 1 143 1 351 1 88 2 309 1 146 1 217 4 198 1 356 2 172 1 149 1 281 1 176 1 94 4 286 2 126 1 316 2 
97 1 3 1 99 4 255 1 343 1 52 1 156 1 34 1 206 1 228 2 366 4 12 2 347 2 106 1 325 1 135 1 260 1 350 1 187 1 243 2 263 2 329 1 306 1 85 1 268 1 143 1 351 1 88 2 309 1 146 1 217 4 198 1 356 2 172 1 149 1 281 1 176 1 94 4 286 2 126 1 316 2 
153 1 97 1 3 1 99 4 255 1 343 1 52 1 156 1 34 1 228 2 366 4 347 2 106 1 325 1 135 1 260 1 350 1 187 1 243 2 263 2 303 2 329 1 18 2 19 1 306 1 307 2 85 1 268 1 143 1 351 1 88 2 309 1 217 4 198 1 149 1 281 1 176 1 94 4 72 1 286 2 126 1 
97 1 3 1 99 5 255 1 343 1 52 1 156 1 34 1 206 1 366 4 228 3 12 2 347 2 106 1 325 1 13 1 260 1 135 1 187 1 350 1 243 3 263 2 329 1 306 1 85 1 268 1 143 1 351 1 88 2 309 1 146 1 217 5 198 1 356 2 172 1 149 1 281 1 176 1 94 4 126 1 286 3 316 2 
97 1 3 1 99 5 255 1 343 1 52 1 156 1 34 1 206 1 366 4 228 3 12 2 347 2 106 1 325 1 13 1 260 1 135 1 187 1 350 1 243 3 263 2 329 1 306 1 85 1 268 1 143 1 351 1 88 2 309 1 146 1 217 5 198 1 356 2 172 1 149 1 281 1 176 1 94 4 126 1 286 3 316 2 
97 1 3 1 99 4 255 1 343 1 52 1 156 1 34 1 228 2 366 4 347 2 106 1 325 1 260 1 135 1 350 1 187 1 243 2 263 2 303 2 329 1 18 2 306 1 307 2 85 1 268 1 143 1 117 1 88 2 309 1 217 4 198 1 149 1 281 1 176 1 94 4 72 1 286 2 126 1 
74 1 305 1 191 1 332 1 76 1 203 1 342 1 254 3 363 1 193 1 87 2 67 1 215 1 365 2 103 1 118 1 207 1 322 2 69 1 257 1 105 6 277 1 375 3 328 2 381 1 201 1 
361 1 1 1 203 2 254 6 294 1 363 1 365 4 322 1 103 11 207 2 81 2 230 1 348 1 105 14 374 1 375 8 328 1 233 3 305 4 113 1 192 1 267 1 87 2 67 2 215 2 68 2 144 1 69 2 277 11 124 3 288 1 201 2 381 1 
361 1 252 1 97 1 154 1 203 1 254 1 363 1 343 2 226 1 365 2 159 1 298 1 105 2 106 2 186 1 261 1 301 1 62 1 375 1 328 1 189 1 305 1 192 1 213 1 67 1 215 1 90 1 43 1 167 1 144 1 69 1 197 1 21 1 22 1 357 1 251 1 380 1 201 1 
290 2 97 1 4 2 203 3 51 2 343 3 103 7 207 3 298 2 105 20 106 3 162 2 301 1 62 3 305 7 213 1 67 3 215 3 68 2 118 1 167 1 69 3 21 3 22 3 357 1 314 1 251 2 26 1 74 1 361 1 252 2 254 10 363 3 226 1 365 6 321 1 322 4 81 2 230 2 257 1 186 2 375 10 328 2 189 2 191 1 192 1 267 4 332 1 193 1 87 8 90 2 144 1 235 2 197 2 277 7 338 1 380 2 381 3 201 3 
361 1 180 1 291 1 97 1 76 1 203 2 254 1 343 1 363 2 226 1 364 1 365 4 321 1 298 3 105 2 106 1 262 1 301 1 62 8 375 1 41 1 140 1 67 2 215 2 167 1 144 1 69 2 197 2 21 7 22 8 45 2 357 2 151 1 178 1 251 2 152 1 380 2 201 2 222 1 
97 1 203 1 254 2 363 1 343 1 226 1 365 2 322 1 103 1 207 1 81 1 230 1 105 3 106 1 375 1 305 1 192 1 166 1 87 1 67 1 215 1 68 1 167 1 69 1 120 1 274 1 277 1 201 1 381 1 
305 1 267 1 76 1 203 1 363 1 87 1 67 1 215 1 365 2 68 1 103 1 207 1 69 1 196 1 105 2 277 1 375 2 201 1 
305 1 76 1 203 1 319 1 254 2 363 1 87 1 67 1 215 1 365 2 322 1 103 1 69 1 230 1 105 2 277 1 201 1 381 1 
203 1 76 1 254 2 363 1 365 2 207 1 103 2 322 1 81 1 230 1 105 4 375 2 305 2 267 1 67 1 87 2 215 1 68 1 69 1 277 2 201 1 381 1 
305 1 267 1 203 1 363 1 87 1 67 1 215 1 365 2 68 1 103 1 207 1 69 1 196 1 105 2 277 1 152 1 375 2 201 1 
305 1 203 1 319 1 254 2 363 1 87 1 67 1 215 1 365 2 322 1 103 1 69 1 230 1 105 2 277 1 152 1 201 1 381 1 
203 1 254 2 363 1 365 2 207 1 103 2 322 1 81 1 230 1 105 4 375 2 305 2 267 1 67 1 87 2 215 1 68 1 69 1 277 2 152 1 201 1 381 1 
305 2 267 1 203 1 254 2 363 1 87 2 67 1 215 1 365 2 68 1 322 1 103 2 207 1 81 1 230 1 69 1 105 4 277 2 375 2 381 1 201 1 
361 1 252 1 203 1 254 1 343 1 363 1 365 2 298 1 105 2 106 1 186 1 375 1 62 1 328 1 189 1 67 1 215 1 90 1 144 1 235 1 69 1 197 1 21 1 22 1 357 1 251 1 380 1 201 1 
361 1 203 1 254 1 343 1 363 1 365 2 298 1 36 1 105 2 106 1 186 1 375 1 62 1 328 1 189 1 65 1 248 1 67 1 215 1 144 1 69 1 197 1 21 1 22 1 357 1 251 1 380 1 201 1 
203 1 254 2 363 1 365 2 207 1 103 2 322 1 81 1 230 1 105 4 375 2 305 2 192 1 267 1 67 1 87 2 215 1 68 1 69 1 277 2 201 1 381 1 
252 1 4 1 203 1 254 2 343 1 363 1 365 2 322 1 103 2 207 1 81 1 298 1 230 1 105 4 106 1 186 1 375 2 62 1 189 1 305 2 267 1 87 2 67 1 215 1 68 1 90 1 235 1 69 1 197 1 21 1 22 1 277 2 251 1 178 1 380 1 381 1 201 1 
97 1 203 1 254 1 363 1 132 1 343 1 226 1 365 2 207 1 103 1 81 1 230 1 105 3 106 1 375 2 305 1 192 1 267 1 166 1 87 1 67 1 215 1 68 1 167 1 69 1 274 1 277 1 381 1 201 1 
29 2 1 1 155 1 254 10 53 2 365 4 322 3 207 3 81 3 230 3 133 1 105 19 163 1 375 9 233 1 113 1 267 3 352 1 67 2 87 6 215 2 68 3 69 2 148 1 278 1 124 2 150 1 221 1 201 2 381 3 
50 1 29 1 155 1 5 1 254 12 102 2 53 4 365 6 35 1 322 2 207 3 81 3 256 1 230 2 105 26 163 1 375 14 233 2 113 2 267 2 87 4 67 3 215 3 68 3 69 3 148 1 278 1 150 2 124 2 177 1 339 1 221 2 381 2 201 3 
74 1 50 1 29 1 1 1 155 1 5 1 254 21 102 1 53 4 365 6 35 1 322 4 207 5 81 4 256 1 230 4 370 1 257 1 105 41 163 1 375 20 233 3 191 1 113 3 267 4 332 1 193 1 352 1 67 3 87 8 215 3 68 4 118 1 69 3 148 1 278 1 124 4 150 2 177 1 339 1 221 1 201 3 381 5 
74 1 50 1 29 1 1 1 155 1 5 1 254 18 102 2 53 4 365 8 35 1 322 4 207 5 81 4 256 1 230 3 370 1 257 1 105 38 163 1 375 20 233 3 191 1 113 3 267 3 332 1 193 1 352 1 67 4 87 7 215 4 68 4 118 1 69 4 148 1 278 1 124 4 150 2 177 1 339 1 221 1 201 4 381 4 
74 1 50 1 29 1 1 2 155 1 5 1 254 25 102 1 53 4 365 4 35 1 322 7 207 8 81 7 256 1 230 7 257 1 105 52 163 1 375 27 233 4 191 1 113 2 267 7 332 1 193 1 67 2 87 14 215 2 68 7 118 1 69 2 148 1 278 1 124 4 150 1 177 1 339 1 221 1 288 2 201 2 381 8 
147 1 139 1 185 1 75 1 220 1 258 1 164 1 346 1 200 1 48 1 
93 1 283 1 
139 1 130 1 75 1 220 1 258 1 173 1 164 1 227 1 200 1 
139 1 3 1 131 1 75 1 346 1 270 1 366 1 147 1 219 2 311 1 258 1 220 1 94 1 164 1 40 1 137 1 200 1 48 1 
139 1 3 1 131 1 75 1 346 1 270 1 366 1 147 1 219 2 311 1 258 1 220 1 94 1 164 1 40 1 137 1 200 1 48 1 
139 1 3 1 131 1 75 1 346 1 270 1 366 1 147 1 219 2 311 1 258 1 220 1 94 1 164 1 40 1 137 1 200 1 48 1 
369 1 92 1 66 1 
369 1 92 1 66 1 
0 1 79 1 
0 1 66 1 79 1 
170 1 141 1 
97 2 75 1 343 2 226 2 366 1 106 2 258 1 164 1 327 1 328 1 139 1 112 1 141 1 115 1 270 1 167 2 170 1 311 1 219 1 220 1 23 1 279 1 71 1 94 1 93 1 283 1 200 1 
369 1 92 1 
0 1 66 1 79 1 
361 1 291 1 28 1 97 2 318 1 203 1 254 1 363 1 238 1 343 2 365 2 298 1 105 2 106 2 62 2 375 1 192 1 67 1 215 1 216 1 271 1 144 1 69 1 197 1 21 2 22 2 45 2 251 1 380 1 201 1 222 1 
210 1 266 1 98 1 212 1 101 1 8 2 321 1 104 1 44 1 197 1 21 2 22 2 134 1 373 1 251 1 178 1 315 1 232 1 62 2 
210 1 266 1 212 1 101 1 8 2 321 1 9 1 104 1 44 1 197 1 21 1 22 1 134 1 373 1 232 1 251 1 62 1 
96 1 41 1 98 1 298 1 197 1 21 1 22 1 357 1 134 1 209 1 151 1 251 1 62 1 380 1 
210 1 266 1 98 1 212 1 101 1 8 2 321 1 104 1 44 1 197 1 21 1 22 1 134 1 373 1 251 1 315 1 232 1 62 1 
86 1 
329 1 3 1 281 1 246 1 342 1 268 1 55 1 
3 2 99 1 156 1 366 1 12 1 325 1 260 1 187 1 329 1 303 1 268 1 88 1 356 1 172 1 281 1 94 1 316 1 
3 8 293 2 99 5 6 2 156 4 205 1 55 1 207 2 298 10 11 2 162 2 14 1 62 3 303 12 63 2 17 2 211 6 246 1 68 2 250 1 21 3 22 3 356 6 357 1 176 2 178 1 251 4 25 2 360 2 224 1 32 1 366 5 81 2 230 2 231 6 325 4 372 2 260 4 187 4 138 3 264 2 329 9 189 3 333 2 268 8 336 2 88 3 145 1 197 3 281 2 94 5 46 1 380 3 381 2 
50 1 3 5 99 1 5 1 156 2 207 2 366 1 81 2 256 1 230 2 231 5 325 2 260 2 187 2 233 1 264 2 303 6 329 8 211 5 113 1 333 1 268 5 88 1 68 2 356 3 281 2 124 1 94 1 177 1 125 1 339 1 25 1 46 1 341 1 381 2 
49 1 97 1 52 1 343 1 156 1 226 1 206 1 207 1 366 1 106 1 325 1 260 1 109 1 242 1 187 1 264 2 329 2 333 1 332 1 268 1 193 1 166 1 308 1 167 1 378 1 94 1 381 1 
329 1 3 1 246 1 268 1 156 1 55 1 325 1 281 1 260 1 187 1 
264 2 303 10 329 5 211 5 3 5 333 1 268 5 68 2 207 2 81 2 230 2 231 5 356 5 162 1 381 2 
3 1 281 1 99 1 94 1 88 1 366 1 
317 1 224 1 99 4 156 1 366 3 298 1 325 2 260 2 241 1 83 1 187 2 62 4 329 2 41 1 16 1 268 2 88 2 249 1 250 2 197 1 21 4 22 4 357 2 94 3 151 1 251 1 25 2 380 1 46 2 
97 2 252 1 203 1 254 1 343 3 30 1 363 1 226 2 365 2 298 1 105 1 106 3 109 1 186 1 62 1 328 1 189 1 166 2 67 1 215 1 90 1 144 1 167 2 235 1 69 1 197 1 21 1 22 1 357 1 251 1 380 1 201 1 
303 4 329 1 211 2 3 4 268 2 156 1 118 1 231 2 356 2 325 1 281 2 260 1 187 1 25 1 46 1 
75 1 220 1 323 1 
75 1 220 1 323 1 
170 1 75 1 220 1 297 1 48 1 
75 1 220 1 323 1 
169 1 75 1 220 1 
169 1 75 1 220 1 
169 1 75 1 220 1 
75 1 220 1 
139 1 258 1 
74 1 191 1 267 1 332 1 254 4 193 1 87 3 67 2 102 1 215 2 365 4 118 1 207 1 322 2 69 2 257 1 105 8 375 4 381 1 201 2 
74 1 191 1 342 1 332 1 254 3 193 1 87 2 118 1 322 2 207 1 257 1 105 6 375 3 381 1 
267 1 254 2 87 2 67 1 215 1 365 2 68 1 322 1 207 1 81 1 230 1 69 1 105 4 285 1 375 2 381 1 201 1 
1 1 113 1 267 1 254 4 87 2 68 1 322 1 207 1 81 1 230 1 105 7 124 2 375 3 233 1 381 1 
74 1 1 1 254 12 294 1 102 2 365 4 207 3 322 5 81 2 230 2 257 1 105 23 375 11 233 2 191 1 267 4 332 2 193 2 87 9 67 2 215 2 68 2 118 1 353 1 69 2 124 2 381 3 288 1 201 2 
105 1 254 1 124 1 
105 1 375 1 233 1 
267 1 254 3 67 1 87 3 215 1 365 2 68 1 207 1 322 2 81 1 69 1 230 1 105 6 162 1 285 1 375 3 201 1 381 1 
50 1 254 6 5 1 365 2 207 2 322 1 81 2 256 1 230 2 105 12 375 6 233 1 113 1 267 1 67 1 87 2 215 1 68 2 69 1 148 1 124 1 177 1 339 1 201 1 381 2 
74 1 267 1 332 1 254 3 193 1 87 2 207 1 322 1 105 6 375 3 381 1 
191 1 267 1 332 1 254 2 193 1 87 2 102 1 67 1 215 1 365 2 322 1 353 1 69 1 257 1 105 3 375 1 201 1 
49 1 267 2 332 1 254 3 193 1 67 1 87 4 215 1 365 2 322 2 207 1 69 1 148 1 105 6 375 3 201 1 381 1 
267 1 67 1 87 1 215 1 365 2 68 1 207 1 69 1 148 1 105 2 375 2 201 1 
267 1 254 2 87 2 67 1 215 1 365 2 68 1 322 1 207 1 81 1 230 1 69 1 148 1 105 4 375 2 381 1 201 1 
267 1 332 1 254 2 193 1 102 1 352 1 67 3 87 2 215 3 365 6 353 1 322 1 69 3 148 1 105 3 375 1 201 3 
74 2 1 1 254 18 102 2 365 10 207 5 322 7 81 3 230 3 257 1 105 34 184 1 375 16 233 3 265 1 191 1 113 1 267 5 332 3 247 1 193 3 352 1 67 5 87 12 215 5 68 3 118 1 353 1 69 5 148 1 124 4 285 1 201 5 381 5 
74 1 254 4 365 2 207 1 322 2 257 1 105 8 375 4 233 1 191 1 113 1 332 1 193 1 67 1 87 2 215 1 118 1 69 1 148 1 124 1 339 1 381 1 201 1 
74 1 1 1 254 5 365 4 322 2 207 2 81 1 257 1 105 11 375 6 233 1 191 1 113 1 267 1 332 1 193 1 67 2 87 3 215 2 68 1 118 1 69 2 148 1 124 2 339 1 285 1 381 1 201 2 
74 1 50 1 254 10 5 1 102 1 365 6 207 3 322 3 81 2 256 1 230 2 257 1 105 19 375 9 233 1 191 1 113 1 267 1 332 1 193 1 67 3 87 4 215 3 68 2 118 1 69 3 148 1 124 1 177 1 339 1 285 1 201 3 381 3 
74 1 50 1 254 7 5 1 102 1 365 6 207 3 322 3 81 2 256 1 230 1 257 1 105 17 375 10 233 1 191 1 113 1 267 2 332 1 193 1 67 3 87 5 215 3 68 2 118 1 69 3 148 1 124 1 177 1 339 1 285 1 201 3 381 2 
74 1 254 4 365 2 207 1 322 2 257 1 105 8 375 4 233 1 191 1 113 1 332 1 193 1 67 1 87 2 215 1 118 1 69 1 148 1 124 1 339 1 381 1 201 1 
50 1 254 6 5 1 365 2 207 2 322 1 81 2 256 1 230 2 105 12 375 6 233 1 113 1 267 1 67 1 87 2 215 1 68 2 69 1 148 1 124 1 177 1 339 1 201 1 381 2 
74 1 50 1 5 1 254 8 102 2 365 8 207 3 322 3 81 2 256 1 230 1 257 1 105 18 375 10 233 1 191 1 113 1 267 2 332 1 193 1 67 4 87 5 215 4 68 2 118 1 69 4 148 1 124 1 177 1 339 1 285 1 201 4 381 2 
50 1 5 1 254 7 102 2 365 8 207 3 322 3 81 3 256 1 230 2 105 16 375 9 233 1 113 1 267 3 67 4 352 1 87 6 215 4 68 3 69 4 148 1 124 1 177 1 339 1 201 4 381 2 
74 1 191 2 267 3 332 3 254 4 193 3 87 6 322 3 207 1 257 1 105 7 375 3 381 1 
74 1 50 1 5 1 254 8 102 2 365 8 207 3 322 3 81 2 256 1 230 1 257 1 105 18 375 10 233 1 191 1 113 1 267 1 332 1 193 1 67 4 352 1 87 4 215 4 68 2 118 1 69 4 148 1 124 1 177 1 339 1 201 4 381 2 
97 1 106 1 306 1 292 1 343 1 320 1 328 1 
181 1 97 1 306 1 292 1 100 1 320 1 343 1 269 1 38 1 349 1 106 1 328 1 
298 1 41 1 197 1 21 1 22 1 357 1 342 1 151 1 251 1 62 1 380 1 
189 1 97 1 252 1 343 2 226 1 167 1 298 1 197 1 21 1 106 2 22 1 357 1 186 1 301 1 251 1 62 1 328 1 380 1 
252 1 97 2 343 2 52 1 226 1 298 3 106 2 372 1 186 1 135 1 301 1 62 1 328 1 189 2 336 1 309 1 250 1 167 2 197 1 21 1 22 1 251 1 380 2 
97 2 343 2 52 1 226 1 298 3 36 1 106 2 372 1 186 1 135 1 301 1 62 2 328 1 189 2 336 1 309 1 250 1 167 2 197 1 21 2 22 2 175 1 251 1 380 2 
129 1 3 1 99 1 366 2 298 4 372 1 108 1 62 3 138 1 189 1 63 1 336 1 250 1 197 1 21 3 22 3 357 1 281 1 175 1 176 1 94 2 251 1 380 1 
189 1 360 1 63 1 3 1 99 1 336 1 366 2 250 1 298 4 197 1 21 3 22 3 357 1 372 1 281 1 175 1 176 1 94 2 251 1 62 3 380 1 138 1 
197 1 21 1 22 1 251 1 62 1 364 1 
189 1 180 1 291 1 140 1 364 1 321 1 145 1 298 3 56 1 197 2 21 6 45 1 22 7 171 1 357 2 262 1 178 1 251 3 95 1 62 7 380 2 
74 1 97 1 252 1 4 1 203 2 51 1 254 3 363 2 343 2 226 1 365 4 103 1 207 1 322 2 298 1 257 1 105 6 106 2 186 1 301 1 375 3 62 1 328 2 189 1 305 1 191 1 192 1 332 1 193 1 87 2 67 2 215 2 118 1 90 1 271 1 167 1 69 2 235 1 197 1 21 1 22 1 277 1 251 1 178 1 380 1 381 1 201 2 
360 1 224 1 3 1 293 1 99 2 6 1 156 2 55 1 366 3 298 2 325 2 260 2 187 2 62 1 138 1 329 1 63 1 17 1 246 1 268 1 88 1 21 1 22 1 357 1 281 1 279 1 176 1 94 3 
189 1 63 1 205 1 364 1 145 1 298 2 197 1 21 2 22 2 178 1 251 2 62 2 380 1 
41 1 331 1 298 1 197 1 21 4 22 4 357 1 175 1 151 1 251 1 178 1 62 4 380 1 
189 1 42 1 250 1 298 1 56 1 197 1 21 2 22 2 338 1 251 2 95 1 62 2 359 1 380 1 
266 1 197 1 21 1 22 1 357 1 373 1 101 1 8 1 251 1 62 1 
298 1 291 1 197 1 28 1 21 2 22 2 251 1 178 1 62 2 380 1 321 1 
41 1 180 1 291 1 331 1 140 1 250 1 298 3 197 2 21 4 22 5 357 1 151 1 178 1 251 2 62 5 380 2 
41 1 291 1 331 1 140 1 204 1 250 1 298 3 197 2 21 4 22 5 357 1 151 1 178 1 251 2 62 5 380 2 
189 1 97 1 343 2 226 1 167 1 298 1 36 1 197 1 21 1 106 2 22 1 357 1 186 1 301 1 251 1 62 1 328 1 380 1 
189 1 250 1 145 1 298 1 56 1 197 1 21 1 22 1 171 1 251 2 95 1 62 1 380 1 
97 1 225 1 106 1 318 1 343 1 238 1 216 1 195 1 47 1 
161 1 225 1 194 1 
225 1 89 1 328 1 195 1 47 1 
225 1 3 1 77 1 255 1 52 1 194 1 89 2 309 1 366 2 195 2 161 1 281 1 312 1 279 1 176 1 135 1 94 2 328 1 47 2 
342 1 123 1 239 1 157 1 
355 1 59 1 123 1 114 1 239 1 157 1 188 1 
355 1 337 1 179 1 
114 1 239 1 54 1 157 1 80 2 355 3 58 1 59 1 174 1 123 1 24 1 188 3 
208 1 355 2 59 1 123 1 114 1 239 1 157 1 188 2 287 1 
212 1 101 1 114 1 8 1 239 1 355 1 273 1 59 1 60 1 24 1 188 1 
355 1 59 1 123 1 114 1 24 1 239 1 188 1 
355 1 59 1 123 2 114 1 24 1 157 1 188 1 
114 2 239 1 355 2 237 1 59 2 358 1 123 1 240 1 24 1 188 2 
330 1 376 1 114 1 157 1 239 2 355 3 59 1 20 1 60 1 123 1 24 1 188 3 287 2 
266 1 212 1 101 1 114 1 8 2 239 1 157 1 168 1 355 2 44 1 59 1 123 1 24 1 188 2 287 1 
376 1 114 2 157 1 239 2 355 4 208 1 91 1 59 2 60 1 123 1 24 1 188 4 287 2 
355 1 59 1 123 1 114 1 24 1 239 1 157 1 188 1 
376 1 114 1 54 1 157 2 239 3 80 1 355 4 58 1 59 1 60 1 123 2 136 1 188 4 287 2 
15 1 114 1 345 1 239 1 157 1 355 2 59 1 123 1 73 1 24 1 188 2 287 1 
114 1 54 1 239 1 157 1 80 2 355 3 58 2 59 1 326 1 123 1 24 1 188 3 
202 1 121 2 300 1 239 2 
355 1 59 1 114 1 24 1 188 1 354 1 
355 2 20 1 59 1 123 1 114 1 24 1 239 1 157 1 188 2 287 1 
377 1 
355 1 59 1 123 1 114 1 24 1 239 1 157 1 188 1 
355 3 20 1 59 1 123 1 114 1 24 1 239 1 157 1 188 3 80 1 287 1 
60 1 376 1 136 1 239 1 
123 1 239 1 

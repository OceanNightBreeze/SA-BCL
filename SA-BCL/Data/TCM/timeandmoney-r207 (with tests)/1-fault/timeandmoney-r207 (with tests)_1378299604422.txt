#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 9 166 1 342 1 313 1 122 2 56 2 198 1 2 9 126 2 65 1 86 6 300 2 251 1 70 1 69 1 89 1 44 1 214 2 378 3 118 1 94 2 18 2 160 4 362 1 259 1 363 1 120 5 310 1 
218 9 166 1 342 1 313 1 122 2 56 2 198 1 2 9 126 2 65 1 86 6 300 2 251 1 70 1 69 1 89 1 44 1 214 2 378 3 118 1 94 2 18 2 160 4 362 1 259 1 363 1 120 5 310 1 
218 10 166 1 342 1 313 1 122 2 56 2 198 1 2 10 126 2 65 1 86 7 300 2 251 1 70 1 69 1 89 1 44 1 214 2 378 4 118 1 94 2 18 2 160 5 362 1 259 1 363 1 120 6 310 1 
218 7 342 1 313 1 122 2 56 1 198 1 2 7 126 2 65 1 86 4 300 2 251 1 70 1 69 1 89 1 44 1 214 2 378 2 118 1 94 2 18 2 160 3 362 1 259 1 363 1 120 4 310 1 
218 4 69 1 166 1 122 1 56 2 44 1 378 1 214 1 126 1 2 4 94 1 18 1 160 2 362 1 86 3 259 1 120 3 310 1 
218 2 69 1 89 1 55 1 214 1 333 1 2 2 126 1 94 1 18 1 106 1 362 1 65 1 259 1 120 1 300 1 
218 3 69 1 313 1 214 2 378 1 2 3 18 2 160 1 362 1 86 1 259 1 300 1 120 2 
218 9 69 1 166 1 149 1 313 1 122 1 56 2 44 1 125 1 214 2 378 3 126 1 118 1 2 9 94 1 18 2 160 4 362 1 86 7 259 1 120 5 300 1 310 1 251 1 
218 9 69 1 166 1 149 1 313 1 122 1 56 2 44 1 125 1 214 2 378 3 126 1 118 1 2 9 94 1 18 2 160 4 362 1 86 7 259 1 120 5 300 1 310 1 251 1 
315 1 145 1 276 1 
93 2 315 1 264 1 
295 2 188 2 244 2 49 2 26 1 97 2 113 1 7 2 
188 2 121 2 25 1 314 2 193 1 0 1 26 1 196 1 347 2 227 1 295 3 244 3 128 1 130 1 5 1 247 1 7 2 248 1 180 1 87 2 109 1 88 1 210 1 212 1 151 2 152 1 357 1 112 1 376 1 90 1 113 1 137 1 331 1 49 2 97 2 308 1 165 1 
295 1 188 1 29 1 244 1 49 1 168 1 97 1 113 1 7 1 353 1 
279 1 315 1 195 1 168 1 145 1 57 1 116 1 322 1 295 1 17 1 244 1 7 1 205 1 68 1 
188 1 315 1 195 1 168 1 145 1 57 1 116 2 322 1 295 1 17 1 49 1 244 1 97 1 205 2 7 1 
302 1 60 1 205 1 181 1 116 1 
302 1 60 1 315 1 205 2 92 1 67 1 145 1 116 2 
60 1 205 1 116 1 
372 1 188 1 302 1 168 1 113 1 116 1 295 1 29 1 49 1 244 1 97 1 205 1 7 1 353 1 
315 1 
302 1 60 1 315 1 205 2 92 1 35 1 145 1 116 2 
373 1 302 2 142 1 71 1 315 1 344 1 92 1 145 1 294 1 45 1 157 1 116 5 174 2 367 2 233 2 60 2 6 1 131 1 205 5 
188 1 121 1 193 1 151 1 0 1 90 1 196 1 347 1 227 1 295 2 244 2 201 1 97 1 7 1 180 1 237 1 371 1 88 1 165 1 210 1 
26 1 276 1 
188 1 26 2 360 1 295 2 244 2 49 1 97 1 204 1 7 2 
201 1 63 1 334 1 
121 1 193 1 151 1 0 1 26 1 90 1 196 1 347 1 227 1 295 1 244 1 180 1 288 1 165 1 88 1 210 1 
295 3 188 3 49 1 244 3 26 1 97 3 7 3 371 1 
295 1 188 1 29 1 244 1 168 1 97 1 7 1 
295 1 188 1 244 1 49 1 168 1 97 1 204 1 7 1 360 1 
188 3 121 1 314 2 193 1 0 1 26 1 195 1 168 1 196 1 347 1 57 1 227 1 322 1 295 4 244 4 128 1 130 1 5 1 7 3 205 1 248 1 180 1 87 1 109 1 352 1 371 1 88 1 210 1 212 1 151 1 152 1 357 1 112 1 376 1 90 1 113 1 360 1 116 1 17 1 49 2 141 1 97 3 237 1 165 1 
295 2 188 1 244 2 26 1 147 1 97 1 7 2 371 1 68 1 
188 3 315 1 195 1 168 1 57 1 360 1 116 1 322 1 295 3 17 1 49 1 244 3 97 3 205 1 7 3 237 1 371 2 352 1 290 1 
295 2 188 2 244 2 49 1 201 1 97 2 63 1 7 2 371 1 360 1 
121 1 151 1 0 1 193 1 26 1 90 1 196 1 347 1 227 1 295 1 244 1 180 1 165 1 88 1 210 1 
121 1 151 1 193 1 26 1 90 1 196 1 347 1 117 1 227 1 295 1 244 1 140 1 180 1 165 1 88 1 
220 1 25 2 314 2 27 1 348 1 199 1 105 1 83 1 201 2 202 1 63 2 248 1 109 2 87 4 212 1 152 1 114 1 357 1 112 1 376 1 115 1 334 2 286 1 306 1 
322 1 295 1 188 1 244 1 168 1 97 1 7 1 260 1 
188 4 281 1 26 1 360 1 295 5 244 5 49 1 147 1 97 4 33 1 7 5 371 2 237 1 68 1 
295 2 188 2 29 1 244 2 168 1 97 2 7 2 260 1 
296 1 41 1 
296 1 41 1 
328 1 46 1 
328 1 46 1 
328 1 46 1 
296 1 41 1 21 1 
296 1 41 1 21 1 
296 1 256 1 41 1 
211 1 296 2 328 1 46 1 61 1 41 2 
296 1 41 1 21 1 
262 1 296 1 41 1 
262 1 296 1 41 1 
262 1 296 1 41 1 
211 1 354 1 315 1 317 1 170 2 197 2 41 2 155 1 138 1 359 1 116 2 173 3 243 1 175 1 296 2 4 2 108 2 205 2 8 2 
188 2 26 1 239 1 170 1 173 1 295 2 296 1 244 2 84 1 4 1 108 1 228 1 205 1 7 2 132 1 8 1 39 1 41 1 154 1 256 1 359 1 116 1 305 1 97 2 
126 1 94 1 122 1 
126 1 94 1 55 1 
126 3 100 1 122 2 55 1 161 1 143 1 
126 2 122 1 55 1 161 1 143 1 325 1 
126 2 122 1 55 1 161 2 143 1 
239 1 27 1 315 2 264 1 344 1 103 1 145 1 294 2 367 1 174 1 242 1 60 1 84 1 202 1 271 2 205 5 132 1 327 1 302 4 373 3 374 2 329 1 134 1 114 1 42 2 92 1 14 1 116 5 286 1 233 1 93 3 291 1 
188 1 315 1 168 1 145 1 241 1 295 1 59 1 29 1 244 1 60 1 205 2 7 1 181 1 353 1 372 1 302 2 113 1 377 1 116 2 49 1 97 1 
27 1 315 3 264 2 103 1 145 1 294 2 367 1 174 1 242 1 202 1 205 3 132 1 271 2 327 1 302 2 373 3 329 1 374 2 114 1 42 1 45 1 116 3 286 1 233 1 93 4 291 1 
27 2 315 4 264 3 103 1 145 1 294 4 367 1 174 1 242 1 202 2 271 4 205 4 132 2 272 1 327 1 38 1 373 5 302 3 374 4 329 2 114 2 42 2 45 1 116 4 286 2 233 1 93 7 79 1 291 1 
193 1 200 1 276 1 
193 1 107 1 
3 1 
193 1 88 1 
167 1 193 3 119 1 90 1 88 1 200 2 
193 1 90 1 88 1 
193 1 298 1 
99 1 220 3 25 4 311 1 356 1 194 1 114 1 144 1 346 1 283 1 43 1 366 1 105 2 172 2 286 1 109 3 87 7 
99 1 220 3 25 4 311 1 356 1 194 1 114 1 144 1 346 1 283 1 43 1 366 1 105 2 172 2 286 1 109 3 87 7 
99 1 220 3 25 4 311 1 356 1 194 1 114 1 144 1 346 1 283 1 43 1 366 1 105 2 172 2 286 1 361 1 109 3 87 7 
99 2 220 10 25 16 311 2 223 1 314 2 194 2 27 3 144 1 346 1 366 1 171 1 225 4 105 5 172 3 202 3 109 15 87 31 230 1 182 1 253 3 110 1 212 1 356 5 152 1 329 3 357 1 112 1 114 4 283 1 43 2 285 1 286 4 164 1 
99 1 220 4 25 5 311 1 314 4 194 1 346 1 366 1 105 3 172 2 206 1 87 9 109 4 326 1 182 1 212 2 356 1 152 2 114 1 357 2 112 2 283 1 43 1 286 1 
218 2 121 1 100 1 122 1 55 1 196 1 347 1 224 1 227 1 2 2 126 2 176 1 62 1 86 1 300 1 69 1 151 1 153 1 213 1 214 1 73 1 215 1 94 1 159 1 18 1 362 1 259 1 289 1 120 1 22 1 
218 3 121 1 341 1 100 1 101 1 122 1 55 1 196 1 347 1 227 1 2 3 126 2 176 1 62 1 86 2 300 1 355 1 151 1 153 1 213 1 214 1 73 1 215 1 94 1 159 1 18 1 362 1 259 1 289 1 120 1 
218 2 121 1 100 1 101 1 55 1 122 1 196 1 347 1 227 1 2 2 126 2 176 1 86 2 300 1 355 1 151 1 153 1 213 1 73 1 215 1 94 1 159 1 362 1 259 1 120 1 
218 1 121 1 341 1 192 1 193 1 196 1 347 1 227 1 321 1 2 1 31 1 180 1 300 2 88 1 151 1 153 2 214 1 215 2 74 1 159 2 18 1 19 1 52 1 
218 1 121 1 100 1 101 1 122 1 55 1 196 1 347 1 224 1 227 1 2 1 126 2 176 1 62 1 300 1 69 1 151 1 153 1 213 1 214 1 73 1 215 1 94 1 159 1 18 1 289 1 
240 1 
190 1 193 1 195 1 344 1 196 1 347 2 145 1 57 1 294 2 242 1 295 1 58 1 244 1 60 6 203 1 205 5 7 1 68 1 150 1 151 2 72 2 255 1 12 2 116 5 158 2 17 1 307 1 121 2 81 1 315 2 264 2 168 1 321 1 227 1 174 1 367 1 322 1 368 1 324 1 31 1 180 2 133 2 88 1 277 2 231 2 279 1 373 2 282 1 92 3 332 1 233 1 93 2 139 4 96 2 339 1 
190 1 231 1 279 1 255 1 195 1 168 1 92 1 57 1 116 3 322 1 58 1 295 1 17 1 139 2 324 1 244 1 60 2 205 3 339 1 7 1 35 1 68 1 
190 1 279 1 72 1 255 1 315 1 195 1 168 1 92 1 145 1 57 1 116 3 322 1 58 1 295 1 17 1 139 3 324 1 244 1 60 1 205 3 339 1 7 1 35 1 68 1 
190 1 195 1 315 1 168 1 57 1 145 1 322 1 295 1 58 1 244 1 324 1 60 2 7 1 205 3 35 1 68 1 277 1 279 1 231 1 255 1 72 1 92 1 116 3 17 1 139 3 339 1 
190 1 191 1 195 1 344 1 345 1 57 1 145 5 294 1 58 1 295 1 244 1 60 7 205 5 7 1 68 1 255 1 72 4 12 2 116 5 158 2 17 1 24 1 81 1 315 5 168 1 264 2 123 1 322 1 174 1 367 1 368 1 324 1 34 1 35 1 133 2 277 4 231 4 279 1 373 1 92 3 233 1 139 6 96 2 339 1 
190 1 195 1 344 1 57 1 145 1 294 1 58 1 295 1 244 1 60 4 7 1 205 4 68 1 255 1 72 2 12 2 116 4 158 2 17 1 81 1 315 2 168 1 264 2 322 1 174 1 367 1 368 1 324 1 133 2 277 2 279 1 231 2 373 1 282 1 92 2 233 1 93 2 139 4 96 2 339 1 
190 1 81 1 315 1 195 1 264 2 168 1 344 1 345 1 145 1 57 1 123 1 294 1 367 1 322 1 174 1 295 1 58 1 368 1 244 1 324 1 60 4 34 1 7 1 205 4 133 2 68 1 277 2 231 2 279 1 373 1 72 2 255 1 12 2 92 2 116 4 158 2 233 1 17 1 139 4 96 2 339 1 
190 1 81 1 315 1 195 1 264 2 168 1 344 1 345 1 145 1 57 1 123 1 294 1 367 1 322 1 174 1 295 1 58 1 368 1 244 1 324 1 60 4 34 1 7 1 205 4 133 2 68 1 277 2 231 2 279 1 373 1 72 2 255 1 12 2 92 2 116 4 158 2 233 1 17 1 139 4 96 2 339 1 
190 1 315 1 195 1 168 1 344 1 318 1 145 1 57 1 226 1 294 1 367 1 322 1 174 1 295 1 58 1 368 1 349 1 323 2 244 1 324 1 60 4 34 1 7 1 205 4 68 1 277 2 231 2 279 1 373 1 72 2 255 1 12 2 92 2 116 4 233 1 93 2 17 1 139 4 96 2 162 2 339 1 
190 1 81 1 191 1 315 1 195 1 264 2 168 1 344 1 345 1 145 1 123 1 57 1 294 1 367 1 174 1 322 1 295 1 58 1 368 1 244 1 324 1 60 5 34 1 7 1 205 4 133 2 68 1 277 3 279 1 231 3 373 1 255 1 72 3 12 2 92 2 116 4 158 2 233 1 17 1 139 5 96 2 339 1 
190 1 81 1 191 1 315 1 195 1 264 2 168 1 344 1 345 1 145 1 123 1 57 1 294 1 367 1 174 1 322 1 295 1 58 1 368 1 244 1 324 1 60 5 34 1 7 1 205 4 133 2 68 1 277 3 279 1 231 3 373 1 255 1 72 3 12 2 92 2 116 4 158 2 233 1 17 1 139 5 96 2 339 1 
190 1 315 1 195 1 168 1 344 1 318 1 145 1 57 1 294 1 367 1 174 1 322 1 295 1 58 1 368 1 323 2 324 1 244 1 60 4 205 4 7 1 68 1 277 2 231 2 279 1 373 1 72 2 255 1 282 1 12 2 92 2 116 4 233 1 93 2 17 1 139 4 96 2 162 2 339 1 
99 1 220 2 25 3 212 1 314 2 26 2 152 1 114 1 376 1 112 1 357 1 346 1 283 1 43 1 366 1 105 2 199 1 334 1 172 1 286 1 201 1 63 1 248 1 109 3 87 6 276 1 
220 2 25 8 314 4 26 1 27 1 225 3 171 1 105 1 129 1 201 11 350 1 202 2 5 1 85 1 63 4 248 2 109 6 87 14 110 1 212 2 253 3 356 1 152 2 329 2 357 2 112 2 376 1 114 2 358 1 137 1 334 11 286 1 75 1 
121 1 188 1 25 1 193 1 0 1 314 2 26 1 196 1 347 1 227 1 295 2 244 2 129 1 5 1 32 1 63 1 7 1 180 1 248 1 250 1 109 1 87 2 371 1 88 1 210 1 212 1 151 1 152 1 90 1 112 1 376 1 357 1 137 1 234 1 97 1 288 1 237 1 165 1 
99 1 188 1 101 1 0 2 193 2 196 2 346 1 347 3 105 4 295 3 244 3 201 7 245 2 202 2 5 1 63 7 7 1 248 3 109 10 210 2 212 3 151 3 356 4 152 3 357 3 112 3 114 3 77 2 165 2 121 3 220 8 25 10 314 6 26 2 316 2 27 2 319 1 366 1 172 1 227 2 129 1 130 2 180 1 87 20 371 1 88 2 329 2 376 3 90 2 283 1 136 1 43 1 137 1 284 2 334 7 286 3 97 1 237 1 54 1 
188 1 121 7 23 1 25 1 101 1 193 3 314 4 82 1 196 2 347 8 104 1 199 1 227 2 321 1 295 1 244 1 31 1 5 1 246 1 7 1 247 2 180 2 248 2 87 2 109 1 371 1 88 2 229 1 212 2 151 8 303 1 152 2 357 2 112 2 376 2 137 1 235 1 97 1 22 1 
220 1 188 1 25 1 314 2 27 1 105 1 295 1 244 1 201 1 129 1 146 1 202 1 63 1 7 1 248 1 87 3 109 2 212 1 152 1 329 1 357 1 112 1 376 1 114 1 334 1 360 1 286 1 49 1 97 1 
220 1 25 2 212 1 356 1 314 2 152 1 376 1 112 1 357 1 114 1 348 1 199 1 334 1 201 1 202 1 63 1 248 1 87 2 
220 1 212 1 314 2 152 1 27 1 376 1 112 1 357 1 105 1 199 1 334 1 286 1 83 1 201 1 63 1 248 1 87 2 109 2 
220 2 25 2 314 2 27 1 199 1 105 1 201 2 202 1 63 2 248 1 87 4 109 2 212 1 356 1 329 1 152 1 114 1 357 1 112 1 376 1 334 2 286 1 
220 1 25 2 212 1 356 1 314 2 152 1 376 1 112 1 357 1 114 1 348 1 104 1 334 1 201 1 202 1 63 1 248 1 87 2 
220 1 212 1 314 2 152 1 27 1 376 1 112 1 357 1 104 1 105 1 334 1 286 1 83 1 201 1 63 1 248 1 87 2 109 2 
220 2 25 2 314 2 27 1 104 1 105 1 201 2 202 1 63 2 248 1 87 4 109 2 212 1 356 1 329 1 152 1 114 1 357 1 112 1 376 1 334 2 286 1 
220 2 25 2 212 1 356 1 314 2 152 1 329 1 27 1 376 1 112 1 357 1 114 1 105 1 334 2 286 1 201 2 202 1 63 2 248 1 109 2 87 4 
121 1 25 1 0 1 193 1 314 2 26 1 196 1 347 1 227 1 295 1 244 1 130 1 5 1 180 1 248 1 87 2 109 1 88 1 210 1 212 1 151 1 152 1 90 1 376 1 112 1 357 1 137 1 165 1 
121 1 25 1 193 1 314 2 26 1 196 1 347 1 227 1 295 1 244 1 5 1 180 1 248 1 87 2 109 1 88 1 212 1 151 1 152 1 90 1 376 1 112 1 357 1 137 1 117 1 140 1 287 1 165 1 
220 2 25 2 314 2 27 1 105 1 129 1 201 2 202 1 63 2 248 1 87 4 109 2 212 1 356 1 329 1 152 1 114 1 357 1 112 1 376 1 334 2 286 1 
220 2 121 1 25 2 0 1 193 1 314 2 27 1 196 1 347 1 105 1 227 1 295 1 244 1 201 2 202 1 130 1 63 2 248 1 109 2 87 4 88 1 210 1 212 1 356 1 151 1 152 1 329 1 114 1 90 1 376 1 112 1 357 1 334 2 286 1 77 1 165 1 22 1 
220 1 188 1 25 2 314 2 27 1 295 1 244 1 129 1 201 1 202 1 63 1 7 1 248 1 109 1 87 3 212 1 356 1 152 1 329 1 357 1 112 1 376 1 114 1 360 1 334 1 286 1 49 1 97 1 163 1 
99 1 189 1 346 1 105 4 202 4 109 21 66 1 253 3 212 3 110 3 356 4 152 3 114 5 112 3 357 3 11 1 15 1 76 1 261 1 220 8 25 20 221 2 314 6 27 4 265 1 171 1 225 4 366 1 172 1 87 41 326 1 182 1 329 4 135 1 283 1 43 1 286 5 48 1 187 1 337 1 50 1 236 1 53 4 
99 1 220 7 189 1 221 2 25 20 314 8 27 3 346 1 265 1 366 1 225 4 171 1 105 4 172 1 202 4 66 1 109 18 87 38 326 1 182 2 110 3 212 4 253 3 356 3 152 4 329 4 11 1 357 4 112 4 114 5 283 1 135 1 43 1 15 1 286 4 187 1 48 1 337 1 50 1 236 1 76 1 261 1 53 4 
99 1 220 14 189 1 221 1 25 27 314 4 27 7 346 1 265 1 366 1 225 4 171 2 105 7 172 1 350 2 202 7 66 1 109 25 87 52 326 1 182 1 110 2 212 2 253 4 356 7 152 2 329 7 11 1 357 2 112 2 114 8 283 1 135 1 43 1 286 8 187 1 48 1 50 1 236 1 76 1 261 1 53 4 
220 6 189 1 221 1 25 9 314 4 27 3 225 2 171 1 105 3 202 3 66 2 109 10 87 19 326 1 110 1 212 2 253 1 356 3 152 2 329 3 11 1 357 2 112 2 114 3 135 1 15 1 286 3 50 1 53 2 364 1 
220 4 189 1 221 2 25 14 314 6 27 2 265 1 225 2 105 2 202 3 66 1 109 12 87 26 326 1 182 2 212 3 110 2 253 2 356 2 152 3 329 3 11 2 357 3 112 3 114 3 135 1 286 2 187 1 48 1 50 1 236 1 76 1 53 4 261 1 
243 1 211 1 296 1 4 1 108 1 170 1 41 1 8 1 138 1 208 1 
305 1 256 1 
219 1 296 1 4 1 263 1 108 1 270 1 170 1 41 1 8 1 
211 1 354 1 315 1 317 1 170 1 197 1 41 1 155 1 138 1 359 1 116 1 173 2 243 1 296 1 4 1 108 1 205 1 8 1 
211 1 354 1 315 1 317 1 170 1 197 1 41 1 155 1 138 1 359 1 116 1 173 2 243 1 296 1 4 1 108 1 205 1 8 1 
211 1 354 1 315 1 317 1 170 1 197 1 41 1 155 1 138 1 359 1 116 1 173 2 243 1 296 1 4 1 108 1 205 1 8 1 
61 1 340 1 21 1 
61 1 340 1 21 1 
262 1 51 1 
262 1 61 1 51 1 
39 1 228 1 
188 2 26 1 239 1 170 1 197 1 173 1 295 2 296 1 244 2 84 1 4 1 108 1 228 1 205 1 132 1 7 2 8 1 354 1 302 1 39 1 41 1 154 1 256 1 116 1 305 1 379 1 97 2 
340 1 21 1 
262 1 61 1 51 1 
23 1 121 2 25 1 193 1 314 2 196 1 347 2 293 1 227 1 295 2 244 2 129 1 30 1 5 1 7 2 247 2 248 1 87 2 109 1 88 1 183 1 212 1 151 2 303 1 152 1 376 1 112 1 357 1 304 1 137 1 258 1 
121 2 100 1 101 1 312 1 122 1 55 1 151 2 196 1 347 2 213 1 257 1 227 1 126 2 215 1 94 1 176 1 62 1 22 1 292 1 
121 1 238 1 100 1 101 1 122 1 55 1 151 1 196 1 347 1 213 1 257 1 227 1 126 2 215 1 94 1 176 1 62 1 
121 1 312 1 193 1 151 1 185 1 196 1 347 1 227 1 321 1 215 1 74 1 31 1 180 1 88 1 
121 1 100 1 101 1 312 1 122 1 55 1 151 1 196 1 347 1 213 1 257 1 227 1 126 2 215 1 94 1 176 1 62 1 292 1 
37 1 
373 1 315 1 6 1 145 1 294 1 157 1 276 1 
81 1 315 2 264 1 344 1 145 1 294 1 367 1 174 1 60 1 205 1 133 1 373 1 92 1 116 1 158 1 233 1 93 1 
193 10 196 3 344 4 347 3 145 2 57 2 294 8 200 2 242 2 60 5 107 3 202 2 6 1 298 2 205 5 299 1 249 1 209 2 151 3 114 2 157 1 116 5 119 1 78 2 309 2 22 1 121 3 222 1 315 8 27 2 264 6 227 4 174 4 367 4 271 6 180 1 36 2 88 3 184 2 373 9 186 2 374 6 329 2 330 1 90 3 40 2 92 3 284 2 332 1 233 4 286 2 336 2 93 12 47 1 
102 1 315 5 27 2 264 3 344 2 265 1 225 1 145 2 294 5 242 1 367 2 174 2 369 1 60 1 202 2 205 1 271 5 36 2 373 8 110 1 253 1 374 5 329 2 114 2 92 1 332 1 116 1 233 2 286 2 93 6 48 1 236 1 76 1 309 1 261 1 
99 1 188 1 168 1 344 1 346 1 123 1 294 2 367 1 174 1 295 1 29 1 244 1 205 1 7 1 36 2 353 1 372 1 373 2 114 2 113 1 43 1 116 1 233 1 286 1 49 1 97 1 20 1 309 1 
373 1 315 1 344 1 145 1 294 1 157 1 174 1 367 1 233 1 6 1 
373 5 329 2 374 5 315 5 27 2 114 2 264 5 284 1 294 5 286 2 93 10 202 2 271 5 309 1 36 2 
60 1 315 1 205 1 92 1 145 1 116 1 
121 4 193 1 196 1 344 1 347 4 294 2 227 1 321 1 367 2 174 2 242 2 60 4 203 1 31 1 205 3 299 2 180 2 88 1 150 1 373 2 151 4 330 1 232 1 92 2 45 1 332 2 116 3 233 2 338 1 
121 1 188 2 314 2 0 1 193 1 26 1 196 1 347 1 227 1 295 3 244 3 128 1 130 1 5 1 7 2 180 1 248 1 87 1 109 1 88 1 210 1 212 1 151 1 152 1 357 1 112 1 113 1 90 1 376 1 49 2 97 2 165 1 
373 1 374 2 315 4 264 2 344 1 145 2 294 2 172 1 332 1 174 1 367 1 242 1 233 1 93 4 271 2 
108 1 98 1 8 1 
108 1 98 1 8 1 
243 1 10 1 39 1 108 1 8 1 
108 1 98 1 8 1 
95 1 108 1 8 1 
95 1 108 1 8 1 
95 1 108 1 8 1 
108 1 8 1 
296 1 41 1 
99 1 220 2 25 4 314 2 346 1 225 1 366 1 105 2 172 1 87 8 109 4 326 1 253 1 110 1 212 1 152 1 114 1 357 1 112 1 283 1 43 1 286 1 261 1 
99 1 220 3 25 6 314 4 346 1 366 1 225 2 171 1 105 2 172 1 202 1 87 11 109 5 370 1 326 1 110 1 212 2 253 1 356 1 152 2 329 1 357 2 112 2 114 2 283 1 43 1 286 1 261 1 
99 1 220 4 25 9 314 6 27 2 346 1 265 1 366 1 225 1 105 3 172 1 202 2 370 1 87 19 109 10 326 1 182 1 253 1 110 1 212 3 356 1 152 3 329 2 357 3 112 3 114 3 283 1 43 1 286 3 48 1 236 1 76 1 261 1 
99 1 220 5 25 10 314 6 27 1 346 1 265 1 366 1 225 1 105 3 172 1 202 2 370 1 87 17 109 7 326 1 182 1 253 1 110 1 212 3 356 2 152 3 329 2 357 3 112 3 114 3 283 1 43 1 286 2 48 1 236 1 76 1 261 1 
99 1 220 2 25 4 314 2 346 1 225 1 366 1 105 2 172 1 87 8 109 4 326 1 253 1 110 1 212 1 152 1 114 1 357 1 112 1 283 1 43 1 286 1 261 1 
220 2 25 6 314 2 27 2 265 1 225 1 105 1 202 2 87 12 109 6 326 1 253 1 110 1 212 1 356 1 152 1 329 2 357 1 112 1 114 2 286 2 48 1 236 1 76 1 261 1 
99 1 220 5 25 10 314 8 27 1 346 1 265 1 366 1 225 1 105 3 172 1 202 2 87 18 109 8 370 1 326 1 182 2 110 1 212 4 253 1 356 2 152 4 329 2 357 4 112 4 114 3 283 1 43 1 286 2 48 1 236 1 76 1 261 1 
220 6 25 9 314 8 27 2 265 1 225 1 105 3 202 3 87 16 109 7 326 1 182 2 110 1 212 4 253 1 356 3 152 4 329 3 357 4 112 4 114 3 15 1 286 2 48 1 236 1 76 1 261 1 
99 3 220 6 25 3 356 3 114 1 283 1 346 1 43 3 366 2 105 3 286 1 109 4 87 7 
99 1 220 4 25 10 314 8 27 1 346 1 265 1 366 1 225 1 105 3 172 1 202 2 87 18 109 8 326 1 182 2 110 1 212 4 253 1 356 1 152 4 329 2 357 4 112 4 114 3 283 1 43 1 15 1 286 2 48 1 236 1 76 1 261 1 
99 1 220 3 182 1 25 4 212 2 356 1 314 4 152 2 114 1 112 2 357 2 346 1 283 1 43 1 366 1 105 2 172 1 286 1 109 4 87 8 
99 1 220 2 25 3 114 1 283 1 346 1 43 1 366 1 105 2 172 1 286 1 109 3 87 6 276 1 
220 2 25 2 212 1 314 2 356 1 152 1 329 1 27 1 112 1 357 1 114 1 105 1 286 1 202 1 109 2 370 1 87 4 
220 2 25 3 110 1 253 1 356 1 329 1 27 1 114 1 225 2 171 1 105 1 286 1 202 1 109 4 87 7 
99 2 220 9 25 11 314 4 27 2 346 1 366 1 171 1 225 2 105 5 172 1 350 1 202 2 178 1 87 23 109 12 182 2 253 2 212 2 356 4 329 2 152 2 114 3 112 2 357 2 358 1 283 1 43 2 286 3 
87 1 109 1 225 1 
25 1 253 1 87 1 
220 3 25 3 212 1 314 2 356 1 152 1 329 1 27 1 357 1 112 1 114 1 284 1 105 2 286 1 202 1 370 1 109 3 87 6 
220 2 25 6 314 2 27 2 265 1 225 1 105 1 202 2 87 12 109 6 326 1 253 1 110 1 212 1 356 1 152 1 329 2 357 1 112 1 114 2 286 2 48 1 236 1 76 1 261 1 
99 1 220 2 25 3 356 1 114 1 346 1 43 1 105 1 286 1 87 6 109 3 
99 1 220 2 182 1 25 1 212 1 356 1 314 2 152 1 112 1 357 1 283 1 43 1 366 1 105 1 178 1 109 2 87 3 
99 2 220 5 25 5 212 1 314 2 356 2 152 1 357 1 112 1 114 2 346 1 43 2 105 3 286 2 20 1 87 10 109 5 326 1 
220 1 25 2 212 1 314 2 356 1 152 1 112 1 357 1 114 1 202 1 87 2 326 1 
220 2 25 2 212 1 314 2 356 1 152 1 329 1 27 1 112 1 357 1 114 1 105 1 286 1 202 1 109 2 87 4 326 1 
99 1 182 1 220 2 25 1 212 3 314 6 356 1 152 3 112 3 357 3 43 1 15 1 105 1 178 1 109 2 87 3 326 1 
99 3 220 12 25 16 314 10 27 3 346 2 366 1 225 4 171 1 105 7 172 1 202 3 178 1 109 18 370 1 87 34 326 1 230 1 182 2 110 1 212 5 253 3 356 5 152 5 329 3 357 5 112 5 114 5 283 1 43 3 285 1 15 1 286 5 164 1 
295 1 244 1 26 1 147 1 7 1 13 1 68 1 
301 1 254 1 26 1 169 1 343 1 13 1 295 1 244 1 267 1 147 1 7 1 68 1 
121 1 193 1 151 1 31 1 196 1 347 1 180 1 88 1 227 1 321 1 276 1 
188 1 121 1 193 1 151 1 26 1 90 1 196 1 347 1 227 1 295 2 244 2 97 1 7 1 180 1 371 1 88 1 165 1 210 1 
121 1 188 2 193 3 26 1 168 1 196 1 347 1 227 1 322 1 295 2 244 2 298 1 7 2 299 1 371 1 88 2 209 1 210 1 151 1 90 2 17 1 97 1 165 1 
121 2 188 2 193 3 26 1 168 1 196 1 347 2 124 1 227 1 322 1 295 2 244 2 298 1 7 2 299 1 371 1 88 2 209 1 151 2 90 2 17 1 140 1 97 1 165 1 
121 3 193 4 315 1 196 1 347 3 124 1 57 1 145 1 200 1 227 1 60 1 107 1 298 1 205 2 299 1 180 1 274 1 209 1 88 1 280 1 151 3 90 1 116 2 
121 3 151 3 193 4 315 1 90 1 196 1 347 3 124 1 145 1 57 1 227 1 116 2 200 1 336 1 60 1 107 1 298 1 205 2 180 1 299 1 88 1 209 1 
121 1 151 1 235 1 196 1 347 1 227 1 
278 1 121 6 101 1 151 7 193 3 303 1 365 1 90 1 82 1 196 2 347 7 1 1 227 3 235 1 119 1 247 1 246 1 180 2 22 1 88 2 229 1 
99 1 220 2 188 1 121 1 25 3 193 1 314 4 0 1 26 2 196 1 346 1 347 1 366 1 105 2 172 1 227 1 295 2 244 2 201 1 129 1 245 1 130 1 63 1 7 1 248 2 109 3 87 6 371 1 88 1 210 1 212 2 151 1 152 2 114 1 90 1 112 2 376 2 357 2 283 1 43 1 334 1 286 1 258 1 97 1 77 1 165 1 22 1 
121 1 193 2 315 1 344 2 347 1 145 1 57 1 294 1 200 1 367 2 174 2 60 2 107 1 6 1 205 3 180 1 184 1 373 1 302 1 151 1 330 1 40 1 92 1 157 1 116 3 233 2 336 1 78 1 
121 2 222 1 151 2 193 2 90 1 196 1 347 2 200 1 227 2 235 1 119 1 22 1 88 1 
121 4 151 4 193 1 196 1 347 4 156 1 124 1 227 1 321 1 31 1 180 1 22 1 88 1 
278 1 121 2 151 2 193 1 90 1 196 1 347 2 319 1 1 1 227 2 299 1 148 1 207 1 88 1 
126 1 121 1 94 1 55 1 151 1 196 1 213 1 347 1 180 1 227 1 
121 2 101 1 151 2 193 1 303 1 304 1 196 1 347 2 227 1 22 1 88 1 
121 4 151 5 193 3 303 1 196 2 347 5 156 1 321 1 227 2 31 1 246 1 299 1 180 1 22 1 88 2 229 1 
121 4 151 5 193 3 303 1 196 2 347 5 156 1 321 1 227 2 335 1 31 1 246 1 299 1 180 1 22 1 88 2 
188 1 121 1 193 1 151 1 26 1 90 1 196 1 347 1 227 1 295 2 244 2 140 1 97 1 7 1 180 1 371 1 88 1 165 1 
278 1 121 1 151 1 193 1 365 1 90 1 196 1 347 1 1 1 227 2 119 1 299 1 88 1 
295 1 183 1 244 1 297 1 177 1 30 1 64 1 7 1 293 1 
297 1 268 1 91 1 
177 1 297 1 26 1 64 1 320 1 
302 1 26 1 315 1 195 1 168 1 91 1 145 1 57 1 320 2 116 2 322 1 17 1 297 1 177 2 269 1 268 1 64 2 205 2 352 1 
362 1 259 1 120 1 276 1 
2 1 218 1 18 1 362 1 259 1 120 1 214 1 
2 1 159 1 300 1 
218 3 69 1 89 2 214 1 2 3 28 1 16 1 18 1 362 1 351 1 259 1 120 1 
2 2 218 2 18 1 362 1 56 1 86 1 259 1 120 1 214 1 
218 1 69 1 122 1 44 1 214 1 2 1 126 1 94 1 18 1 160 1 120 1 
2 1 218 1 69 1 18 1 259 1 120 1 214 1 
2 1 218 1 69 1 18 1 362 1 259 2 214 1 
218 2 69 1 214 2 2 2 127 1 18 2 179 1 380 1 259 1 120 1 
218 3 69 1 214 1 378 1 2 3 118 1 18 1 160 1 362 1 86 2 259 1 120 2 251 1 
218 2 69 1 100 1 55 1 122 1 214 1 266 1 126 2 2 2 94 1 18 1 362 1 86 1 259 1 120 1 
218 4 69 1 166 1 56 1 214 2 378 1 2 4 18 2 160 1 362 1 86 2 259 1 120 2 
2 1 218 1 69 1 18 1 362 1 259 1 120 1 214 1 
218 4 89 1 214 1 378 1 216 1 2 4 16 1 18 1 160 1 362 2 351 1 86 2 259 2 120 3 
218 2 69 1 80 1 149 1 214 1 2 2 18 1 362 1 86 1 259 1 120 1 217 1 
218 3 69 1 89 2 375 1 214 1 2 3 16 2 18 1 362 1 351 1 259 1 120 1 
252 2 9 1 120 2 275 1 
2 1 218 1 69 1 18 1 273 1 214 1 
118 1 2 2 218 2 69 1 18 1 362 1 86 1 259 1 120 1 214 1 
111 1 
2 1 218 1 69 1 18 1 362 1 259 1 120 1 214 1 
118 1 2 3 218 3 69 1 89 1 18 1 362 1 86 1 259 1 120 1 214 1 
216 1 160 1 120 1 378 1 
259 1 120 1 

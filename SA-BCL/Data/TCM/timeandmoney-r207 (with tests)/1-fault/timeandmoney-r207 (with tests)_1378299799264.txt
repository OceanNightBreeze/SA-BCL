#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 375 27 (184,226) (184,226) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 375 27 (184,226) (184,226) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 375 27 223 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 375 27 223 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 362 1 279 1 57 1 269 2 231 3 355 1 263 2 198 3 379 1 347 2 224 1 200 1 
361 1 362 2 269 2 27 1 115 1 198 7 347 2 200 2 226 1 301 1 279 4 303 1 57 1 128 1 231 7 375 2 38 1 355 3 263 3 265 1 98 1 183 2 184 1 356 2 379 1 
361 1 362 2 269 2 27 1 115 1 198 7 347 2 200 2 226 1 301 1 279 4 303 1 57 1 128 1 231 7 375 2 38 1 355 3 263 3 265 1 98 1 183 2 184 1 356 2 379 1 
188 1 361 1 362 2 364 1 269 2 27 1 115 1 198 9 347 2 224 1 200 3 226 1 301 1 279 6 303 2 57 1 128 1 231 9 375 2 38 1 355 4 263 5 265 1 98 1 183 2 100 1 184 1 356 2 379 1 
188 1 361 1 362 2 269 2 27 1 115 1 198 7 347 2 224 1 200 2 226 1 301 1 279 4 303 1 57 1 128 1 231 7 375 2 38 1 355 3 263 4 265 1 98 1 183 2 184 1 356 2 379 1 
188 1 303 2 279 3 364 1 269 1 231 4 375 1 355 2 263 3 27 1 115 1 183 1 100 1 198 4 356 1 379 1 347 1 224 1 200 1 
188 1 362 1 269 1 128 1 231 2 292 1 375 1 263 1 8 1 98 1 183 1 198 2 379 1 285 1 347 1 224 1 
362 1 303 1 279 5 57 1 269 2 231 7 213 1 375 1 38 1 263 3 355 3 27 1 265 1 115 1 183 1 198 7 356 1 379 1 223 1 347 2 200 2 
362 1 303 1 279 5 57 1 269 2 231 7 213 1 375 1 38 1 263 3 355 3 27 1 265 1 115 1 183 1 198 7 356 1 379 1 223 1 347 2 200 2 
315 1 94 1 353 1 264 1 130 1 131 1 150 1 357 1 345 1 64 1 50 1 208 1 122 1 187 1 
243 1 
243 1 197 1 217 1 201 1 345 2 179 1 208 1 264 2 
243 1 69 2 257 1 232 1 272 1 194 2 16 1 264 5 7 2 17 1 197 1 217 1 345 5 238 1 179 2 288 1 208 2 227 1 123 1 
243 1 197 1 237 1 
243 1 95 2 252 1 
125 1 130 2 131 2 94 2 357 2 353 2 50 1 187 2 
244 1 141 1 317 1 293 1 192 1 271 1 26 1 339 1 76 1 116 2 9 1 178 1 299 1 50 1 125 1 369 2 302 1 94 2 281 1 304 1 229 2 327 1 353 2 163 2 37 1 329 1 81 2 310 1 130 2 377 1 131 3 235 1 185 1 357 2 358 1 286 1 187 3 
130 1 131 1 94 1 150 1 357 1 353 1 64 1 50 1 122 1 187 1 
243 1 94 1 158 1 140 1 190 1 262 1 264 1 131 1 197 1 332 1 177 1 345 1 64 1 187 1 
243 1 94 1 158 1 190 1 353 1 264 2 130 1 131 1 197 1 332 1 177 1 357 1 345 2 64 1 187 1 
41 1 345 1 179 1 208 1 264 1 
243 1 197 1 217 1 345 2 179 1 208 1 300 1 264 2 
345 1 179 1 264 1 
125 2 94 2 290 1 353 1 144 1 130 1 131 2 357 1 187 2 
351 1 204 1 13 1 
125 1 369 1 229 1 244 1 34 1 163 1 317 1 329 1 271 1 26 1 339 1 76 1 131 1 358 1 299 1 187 1 
369 1 94 1 229 1 244 1 353 1 317 1 163 1 191 1 271 1 329 1 26 1 339 1 76 1 131 2 357 1 358 1 299 1 12 1 13 1 187 2 
125 1 237 1 
125 1 94 5 353 4 191 2 144 1 262 1 130 1 319 1 131 5 357 4 166 1 12 1 51 1 187 5 
276 1 131 2 94 2 150 1 357 2 353 2 64 1 187 2 
130 1 125 1 131 3 94 3 357 3 353 3 191 1 187 3 
131 1 94 1 150 1 357 1 353 1 64 1 187 1 
130 1 131 1 94 1 290 1 357 1 353 1 64 1 144 1 187 1 
244 1 190 1 141 1 317 1 191 1 293 1 192 1 271 1 144 1 26 1 339 1 76 1 116 2 28 1 177 1 345 1 299 1 12 1 50 1 125 1 369 1 94 3 281 1 304 1 158 1 229 1 353 3 163 1 37 1 329 1 81 1 310 1 264 1 203 1 130 2 377 1 131 4 332 1 185 1 357 3 358 1 64 1 286 1 187 4 
125 1 131 2 94 2 357 1 166 1 353 1 191 1 262 1 187 2 
243 1 94 3 56 1 158 1 190 1 353 3 191 2 144 1 264 1 130 1 131 3 332 1 28 1 177 1 357 3 345 1 64 1 12 1 187 3 
130 1 351 1 131 2 94 2 357 2 353 2 191 1 144 1 13 1 187 2 
125 1 369 1 229 1 244 1 163 1 317 1 329 1 271 1 26 1 339 1 76 1 131 1 358 1 299 1 187 1 
125 1 369 1 229 1 163 1 317 1 329 1 26 1 339 1 6 1 146 1 76 1 131 1 358 1 299 1 187 1 
139 1 337 1 293 1 192 1 5 1 116 2 296 1 9 2 120 1 154 1 155 1 13 2 351 2 281 1 304 1 373 1 282 1 81 4 261 1 377 1 204 2 205 1 185 2 286 1 
131 1 94 1 276 1 177 1 357 1 353 1 64 1 187 1 
196 1 207 1 340 1 
196 2 165 1 49 1 230 1 207 2 309 1 
196 1 207 1 
196 1 207 1 
165 1 230 1 
165 1 230 1 
165 1 230 1 
196 1 54 1 207 1 
196 1 54 1 207 1 
196 1 54 1 207 1 
196 1 110 1 207 1 
196 1 110 1 207 1 
196 1 110 1 207 1 
0 1 45 1 23 1 273 1 340 1 196 1 345 1 152 1 11 1 199 1 278 1 125 1 94 2 306 1 307 1 353 2 264 1 131 2 82 1 357 2 207 1 21 1 168 1 187 2 
243 1 0 2 307 2 45 2 309 1 247 1 264 2 196 2 129 2 82 2 19 1 344 1 345 2 284 1 101 1 207 2 21 3 79 1 278 1 
183 2 356 1 270 2 292 1 209 1 
183 1 356 1 375 1 
183 1 292 1 375 1 
183 3 126 1 356 2 270 1 292 1 209 1 
183 2 356 1 96 1 270 1 292 1 209 1 
243 2 69 1 139 1 337 1 194 1 5 1 4 1 273 1 74 1 7 1 217 1 197 1 248 2 345 5 152 1 11 1 252 1 179 1 123 3 93 1 95 3 305 2 373 1 36 1 16 1 264 5 283 2 381 1 42 1 138 1 288 2 208 4 
243 5 69 2 139 3 291 1 108 1 2 5 337 3 194 2 5 3 273 4 4 1 113 1 74 2 7 2 197 1 217 1 248 6 345 9 221 1 252 3 179 6 123 8 93 3 95 9 373 3 374 1 35 1 264 9 16 1 283 6 41 5 238 1 42 2 288 6 208 7 
243 3 69 1 139 1 337 1 194 1 5 1 273 1 74 1 7 1 197 1 248 2 345 3 252 2 123 3 93 1 305 1 95 4 373 1 36 1 264 3 283 2 238 1 381 1 42 1 208 2 288 2 
243 4 69 1 139 2 291 1 337 2 194 1 5 2 273 2 113 1 74 1 7 1 197 1 248 4 345 4 252 3 123 5 93 2 95 7 305 2 373 2 374 1 36 1 264 4 283 4 238 1 381 1 42 1 208 3 288 4 
330 1 
228 1 237 1 26 1 
193 1 26 1 
358 1 299 1 26 1 
348 1 26 1 
358 1 26 1 
228 2 159 1 358 1 299 1 26 3 65 1 
335 1 68 1 139 1 72 1 282 3 171 1 318 2 337 1 86 1 73 1 261 2 81 7 341 1 185 3 9 4 206 1 102 1 289 1 
335 1 68 2 139 4 72 5 171 1 318 3 293 1 86 2 337 4 73 2 338 1 5 3 116 2 249 1 9 16 124 1 93 3 281 1 373 3 308 1 160 3 282 10 81 31 261 5 354 1 377 1 185 15 20 1 206 1 313 1 136 4 286 1 102 1 289 2 
335 1 68 1 139 1 72 1 85 1 318 2 337 1 293 2 86 1 73 1 116 4 9 5 251 1 281 2 308 1 282 4 81 9 261 3 377 2 185 4 206 1 286 2 289 1 102 1 
335 1 68 1 139 1 72 1 282 3 171 1 318 2 337 1 86 1 73 1 261 2 81 7 185 3 9 4 206 1 289 1 102 1 
335 1 68 1 139 1 72 1 282 3 171 1 318 2 337 1 86 1 73 1 261 2 81 7 185 3 9 4 206 1 289 1 102 1 
156 1 29 1 362 2 369 1 83 2 105 1 352 1 269 1 229 1 163 1 231 1 329 1 26 1 339 1 76 1 62 1 198 1 149 1 118 2 358 1 347 1 360 1 325 2 
362 1 83 1 269 1 212 1 292 1 112 1 339 1 76 1 198 1 118 1 343 1 347 1 325 1 369 1 30 1 32 1 126 1 229 1 326 1 163 1 231 1 375 1 183 2 356 1 379 1 378 1 
188 1 362 1 83 1 269 1 212 1 292 1 112 1 339 1 76 1 198 2 118 1 343 1 347 1 224 1 325 1 369 1 30 1 279 1 32 1 126 1 229 1 163 1 231 2 375 1 263 1 331 1 183 2 356 1 379 1 378 1 
188 1 362 1 83 1 269 1 212 1 292 1 112 1 339 1 76 1 198 3 118 1 343 1 347 1 224 1 325 1 369 1 279 2 32 1 126 1 229 1 326 1 163 1 231 3 375 1 263 1 183 2 62 1 356 1 378 1 359 1 
188 1 362 1 83 1 212 1 292 1 112 1 339 1 76 1 198 2 118 1 224 1 325 1 369 1 279 2 126 1 229 1 326 1 163 1 231 2 375 1 263 1 183 2 356 1 378 1 359 1 
127 1 
243 2 336 1 189 2 84 2 140 1 190 1 245 1 194 1 339 1 7 1 197 1 298 1 346 1 345 5 252 2 52 2 350 1 156 1 94 1 352 1 95 2 158 1 162 2 163 2 262 1 264 5 16 1 18 1 358 1 64 1 69 1 170 1 25 1 26 1 74 1 76 1 275 2 216 1 217 3 177 1 117 1 119 4 322 2 179 6 123 2 180 1 369 2 371 2 229 2 329 2 233 1 131 1 332 1 288 2 187 1 
94 1 158 1 201 1 84 1 190 1 140 1 25 1 245 1 233 1 262 1 264 3 131 1 217 1 298 1 332 1 177 1 119 2 345 3 64 1 179 2 180 1 187 1 
243 1 189 1 140 1 190 1 25 1 245 1 298 1 197 1 217 1 177 1 119 3 345 3 179 1 180 1 94 1 158 1 201 1 262 1 233 1 264 3 131 1 332 1 64 1 187 1 
243 1 189 1 140 1 190 1 84 1 25 1 245 1 217 1 298 1 197 1 177 1 119 3 345 3 179 2 180 1 94 1 158 1 201 1 162 1 262 1 233 1 264 3 131 1 332 1 64 1 187 1 
243 5 336 1 189 4 84 4 190 1 140 1 142 1 245 1 194 1 47 1 7 1 298 1 197 5 89 1 345 5 252 2 52 2 94 1 158 1 201 1 162 4 202 1 262 1 264 5 16 1 64 1 69 1 25 1 114 1 275 2 217 3 177 1 117 1 119 6 322 2 179 7 123 1 180 1 371 2 233 1 131 1 332 1 288 1 187 1 
243 2 336 1 189 2 190 1 140 1 84 2 245 1 194 1 7 1 298 1 197 1 345 4 346 1 252 2 52 2 94 1 158 1 95 2 162 2 262 1 264 4 16 1 64 1 69 1 25 1 275 2 217 2 117 1 177 1 119 4 322 2 179 4 123 1 180 1 371 2 233 1 131 1 332 1 288 1 187 1 
243 1 69 1 336 1 189 2 84 2 140 1 190 1 25 1 245 1 47 1 194 1 114 1 7 1 275 2 197 1 217 2 298 1 117 1 177 1 119 4 345 4 322 2 252 2 179 4 123 1 52 2 180 1 371 2 94 1 158 1 162 2 202 1 262 1 233 1 264 4 16 1 131 1 332 1 64 1 288 1 187 1 
243 1 69 1 336 1 189 2 84 2 140 1 190 1 25 1 245 1 47 1 194 1 114 1 7 1 275 2 197 1 217 2 298 1 117 1 177 1 119 4 345 4 322 2 252 2 179 4 123 1 52 2 180 1 371 2 94 1 158 1 162 2 202 1 262 1 233 1 264 4 16 1 131 1 332 1 64 1 288 1 187 1 
243 1 69 1 336 1 189 2 84 2 140 1 190 1 25 1 245 1 47 1 194 1 7 1 275 2 197 1 217 2 298 1 176 2 177 1 119 4 345 4 322 2 90 2 179 4 123 1 180 1 55 1 94 1 95 2 158 1 162 2 161 1 262 1 233 1 264 4 16 1 131 1 332 1 267 1 64 1 288 1 187 1 
243 1 69 1 336 1 189 3 140 1 190 1 84 3 25 1 245 1 47 1 194 1 114 1 7 1 275 2 197 1 217 2 298 1 89 1 117 1 177 1 119 5 345 4 322 2 252 2 179 5 123 1 52 2 180 1 371 2 94 1 158 1 202 1 162 3 262 1 233 1 16 1 264 4 131 1 332 1 64 1 288 1 187 1 
243 1 69 1 336 1 189 3 140 1 190 1 84 3 25 1 245 1 47 1 194 1 114 1 7 1 275 2 197 1 217 2 298 1 89 1 117 1 177 1 119 5 345 4 322 2 252 2 179 5 123 1 52 2 180 1 371 2 94 1 158 1 202 1 162 3 262 1 233 1 16 1 264 4 131 1 332 1 64 1 288 1 187 1 
243 1 336 1 189 2 190 1 140 1 84 2 245 1 194 1 7 1 298 1 197 1 345 4 346 1 90 2 55 1 94 1 158 1 95 2 162 2 262 1 264 4 16 1 64 1 69 1 25 1 275 2 217 2 177 1 176 2 119 4 322 2 179 4 123 1 180 1 233 1 131 1 332 1 288 1 187 1 
107 1 71 1 191 1 293 2 192 2 26 3 339 2 76 2 116 4 9 1 277 1 121 1 324 1 155 1 369 7 156 1 302 2 94 1 352 1 281 2 304 2 229 8 326 1 353 1 327 1 163 8 59 1 329 2 37 1 81 2 331 1 377 2 131 1 312 1 357 1 185 1 358 2 286 2 187 1 
106 1 316 1 139 1 144 1 293 1 192 1 337 1 5 1 116 2 9 1 13 1 351 1 94 1 93 1 281 1 304 1 373 1 282 1 353 1 261 1 81 3 130 1 377 1 204 1 131 1 357 1 185 2 286 1 187 1 
335 1 68 1 139 1 318 1 293 1 192 1 337 1 73 1 116 2 9 3 155 1 13 1 125 2 351 1 281 1 304 1 282 2 261 2 81 6 377 1 204 1 185 3 237 1 206 1 286 1 102 1 
316 1 139 1 72 1 293 2 192 1 337 2 338 1 5 1 195 1 116 4 9 8 349 1 13 11 125 1 351 4 93 2 281 2 304 2 373 2 327 1 282 2 160 3 37 1 261 1 81 14 377 2 99 1 204 11 185 6 136 3 313 1 286 2 380 1 
316 1 244 1 317 1 191 1 271 1 192 1 293 1 26 1 339 1 76 1 116 2 151 1 9 1 299 1 12 1 125 1 369 1 370 1 351 1 94 1 304 1 281 1 229 1 34 1 353 1 327 1 163 1 329 1 37 1 81 2 377 1 131 2 357 1 185 1 358 1 286 1 187 2 66 1 
335 1 1 2 139 3 244 2 141 2 191 1 293 3 192 3 337 3 295 2 5 2 339 2 9 10 299 2 153 1 12 1 13 7 351 7 94 1 93 2 304 3 353 1 163 3 261 4 204 7 357 1 206 1 358 2 167 2 268 2 102 1 169 1 68 1 316 1 24 1 72 4 317 2 318 1 271 2 73 1 26 2 76 2 116 6 125 2 369 3 281 3 229 3 373 2 326 1 327 1 282 8 37 1 329 1 81 20 377 3 131 3 185 10 286 3 187 3 
351 1 304 1 281 1 373 1 282 1 72 1 192 1 293 1 337 1 81 2 377 1 204 1 116 2 205 1 9 2 286 1 155 1 13 1 
351 1 304 1 281 1 139 1 282 1 192 1 293 1 261 1 81 2 5 1 377 1 204 1 116 2 296 1 185 2 286 1 155 1 13 1 
139 1 72 1 337 1 293 1 192 1 5 1 116 2 9 2 155 1 13 2 351 2 93 1 281 1 304 1 373 1 282 2 81 4 261 1 377 1 204 2 185 2 286 1 
351 1 304 1 281 1 373 1 282 1 72 1 59 1 192 1 293 1 337 1 81 2 377 1 204 1 116 2 205 1 9 2 286 1 13 1 
351 1 304 1 281 1 139 1 282 1 59 1 192 1 293 1 261 1 81 2 5 1 377 1 204 1 116 2 296 1 185 2 286 1 13 1 
139 1 72 1 337 1 293 1 192 1 5 1 116 2 9 2 13 2 351 2 93 1 281 1 304 1 373 1 282 2 59 1 81 4 261 1 377 1 204 2 185 2 286 1 
139 1 72 1 337 1 293 1 192 1 5 1 116 2 9 2 13 2 351 2 93 1 281 1 304 1 373 1 282 2 81 4 261 1 377 1 204 2 185 2 286 1 
244 1 141 1 317 1 271 1 192 1 293 1 26 1 339 1 76 1 116 2 9 1 299 1 125 1 369 1 304 1 281 1 229 1 327 1 163 1 329 1 37 1 81 2 377 1 131 1 185 1 358 1 286 1 187 1 
317 1 192 1 293 1 26 1 339 1 6 1 76 1 146 1 116 2 9 1 299 1 125 1 157 1 369 1 304 1 281 1 229 1 327 1 163 1 329 1 37 1 81 2 377 1 131 1 185 1 358 1 286 1 187 1 
316 1 139 1 72 1 337 1 293 1 192 1 5 1 116 2 9 2 13 2 351 2 93 1 281 1 304 1 373 1 282 2 81 4 261 1 377 1 204 2 185 2 286 1 
139 1 244 1 141 1 72 1 317 1 337 1 271 1 192 1 293 1 5 1 295 1 26 1 339 1 76 1 116 2 9 2 299 1 13 2 369 1 351 2 93 1 304 1 281 1 229 1 373 1 282 2 163 1 261 1 81 4 331 1 377 1 204 2 131 1 185 2 358 1 286 1 187 1 
139 1 316 1 72 1 144 1 293 1 192 1 337 1 5 1 116 2 9 2 13 1 351 1 94 1 93 1 281 1 304 1 373 1 282 1 353 1 81 3 130 1 60 1 377 1 131 1 204 1 185 1 357 1 286 1 187 1 
139 3 72 3 293 2 337 3 338 1 215 1 5 3 87 1 116 4 9 9 10 1 251 1 256 2 93 3 280 1 281 2 373 3 80 2 14 1 160 1 282 6 58 1 261 3 81 19 377 2 311 1 185 10 136 2 313 1 286 2 
139 2 72 2 293 3 246 1 337 3 215 1 338 2 5 2 145 1 87 1 175 1 116 6 250 1 9 14 323 1 251 1 225 1 256 4 93 3 280 2 281 3 308 2 373 3 80 1 282 4 160 2 58 2 261 2 81 26 377 3 311 1 185 12 136 2 286 3 
335 1 139 5 337 5 293 3 246 1 5 4 338 3 145 1 87 1 250 1 9 20 251 1 93 4 256 4 308 1 14 1 160 3 58 2 261 4 97 1 311 1 206 1 313 1 102 1 68 1 72 4 318 1 73 1 215 1 175 1 116 6 323 1 225 1 280 1 281 3 373 4 80 1 282 8 81 41 377 3 185 21 136 4 286 3 
335 1 68 1 139 4 72 3 318 1 246 1 293 4 337 5 73 1 338 3 215 1 5 3 145 1 87 1 175 1 116 8 250 1 9 20 323 1 251 1 225 1 256 4 93 4 280 1 281 4 308 2 373 4 80 1 14 1 160 3 282 7 58 2 261 4 81 38 97 1 377 4 311 1 185 18 206 1 136 4 313 1 286 4 102 1 
335 1 68 1 139 8 72 7 318 1 246 1 293 2 337 8 73 1 338 2 215 1 5 7 145 1 195 2 87 1 175 1 116 4 250 1 9 27 323 1 251 1 225 1 256 4 93 7 280 1 281 2 308 1 373 7 80 1 160 4 282 14 58 1 261 7 81 52 377 2 311 1 185 25 206 1 136 4 313 2 286 2 102 1 
196 1 0 1 82 1 45 1 307 1 344 1 207 1 39 1 79 1 309 1 
199 1 340 1 
196 1 0 1 132 1 82 1 219 1 45 1 307 1 207 1 172 1 
54 1 258 1 
49 1 181 1 110 1 
243 1 0 1 307 1 45 1 309 1 264 1 196 1 129 1 82 1 19 1 344 1 345 1 284 1 101 1 207 1 21 2 79 1 278 1 
243 1 0 1 307 1 45 1 309 1 264 1 196 1 129 1 82 1 19 1 344 1 345 1 284 1 101 1 207 1 21 2 79 1 278 1 
243 1 0 1 307 1 45 1 309 1 264 1 196 1 129 1 82 1 19 1 344 1 345 1 284 1 101 1 207 1 21 2 79 1 278 1 
54 1 49 1 258 1 
54 1 49 1 258 1 
181 1 110 1 
49 1 181 1 110 1 
23 1 168 1 
0 1 45 1 23 1 273 1 340 1 196 1 345 1 152 1 11 1 199 1 125 1 94 2 306 1 307 1 353 2 328 1 264 1 129 1 131 2 82 1 357 2 284 1 207 1 21 1 168 1 208 1 187 2 
316 1 107 1 192 1 293 1 26 1 339 1 174 1 76 1 48 1 342 1 116 2 77 1 9 1 369 2 302 2 94 2 304 1 281 1 229 2 327 1 163 2 37 1 81 2 376 1 377 1 131 2 312 1 185 1 358 1 286 1 187 2 
369 1 156 1 211 1 352 1 229 1 260 1 163 1 329 1 26 1 339 1 76 1 118 1 358 1 360 1 
369 1 32 1 126 1 229 1 326 1 260 1 163 1 292 1 375 1 112 1 339 1 76 1 183 2 356 1 118 1 378 1 333 1 242 1 
369 2 32 1 126 1 229 2 326 1 260 1 163 2 292 1 375 1 112 1 339 1 331 1 76 1 183 2 356 1 118 1 378 1 333 1 242 1 
369 1 32 1 126 1 229 1 326 1 143 1 163 1 292 1 375 1 112 1 339 1 76 1 183 2 356 1 118 1 378 1 333 1 
147 1 
243 1 69 1 232 1 194 1 16 1 7 1 17 1 197 1 288 1 123 1 
243 5 1 1 93 2 95 10 139 2 373 2 337 2 5 2 283 5 248 5 220 1 134 2 252 5 288 5 123 5 
243 1 197 1 217 1 345 1 179 1 264 1 
69 2 170 2 194 2 26 1 339 1 74 2 76 1 7 2 148 1 217 2 345 3 91 2 179 4 123 2 350 1 369 4 156 1 352 1 229 4 163 4 329 2 15 1 16 1 264 3 18 1 238 1 358 1 288 2 314 1 
243 1 17 1 197 1 237 1 232 1 288 1 123 1 
243 2 69 1 194 1 7 1 217 1 197 1 117 1 345 1 252 1 179 1 123 1 52 1 371 1 95 1 16 1 264 1 288 1 
243 8 1 2 139 2 190 2 337 2 193 3 194 4 5 2 339 4 7 4 197 2 248 6 345 5 299 3 91 1 254 1 252 6 348 2 93 2 95 12 163 3 15 1 16 4 264 5 17 1 358 3 65 1 69 4 170 1 26 10 75 2 74 2 76 3 218 2 217 3 78 2 220 2 179 5 123 9 369 3 31 1 228 2 229 3 372 1 373 2 232 1 329 1 331 1 283 6 40 2 134 2 186 2 137 2 288 8 
243 5 69 2 170 1 139 2 246 1 337 2 194 2 338 1 5 2 74 1 145 1 274 1 7 2 217 1 197 2 248 5 250 1 220 1 345 1 323 1 252 3 179 1 225 1 123 8 93 2 95 6 373 2 160 1 164 1 264 1 16 2 283 5 134 2 136 1 288 5 
68 1 69 1 315 1 139 1 337 2 73 1 194 1 7 1 150 1 220 1 345 1 253 1 50 1 122 1 123 2 94 1 202 1 353 1 16 1 264 1 130 1 131 1 357 1 134 2 206 1 64 1 288 2 187 1 
244 1 141 1 317 1 293 1 271 1 192 1 26 1 339 1 76 1 116 2 299 1 50 1 125 1 369 1 94 2 281 1 304 1 229 1 353 2 163 1 37 1 329 1 81 1 310 1 130 2 377 1 131 3 185 1 357 2 358 1 286 1 187 3 
243 4 69 1 170 1 95 4 318 1 194 1 74 1 16 1 7 1 283 2 197 2 248 2 252 2 288 2 123 1 
0 1 363 1 23 1 45 1 79 1 
0 1 45 1 173 1 
0 1 45 1 173 1 
0 1 45 1 173 1 
0 1 45 1 44 1 
0 1 45 1 44 1 
0 1 45 1 44 1 
0 1 45 1 
196 1 207 1 
68 2 281 1 139 2 282 5 72 2 293 1 337 2 73 2 261 3 81 10 377 1 116 2 9 5 185 5 206 1 286 1 251 1 253 1 
281 1 373 1 72 1 282 1 293 1 337 1 81 2 377 1 116 2 9 2 251 1 286 1 
93 1 139 1 281 1 373 1 282 2 72 1 293 1 337 1 261 1 5 1 81 4 377 1 116 2 185 2 9 2 251 1 286 1 
68 1 281 3 308 1 14 1 282 2 72 1 111 1 293 3 73 1 81 3 261 1 377 3 116 6 185 2 9 1 251 1 286 3 
335 1 68 3 139 5 365 1 72 5 111 1 318 1 293 5 337 5 73 3 338 1 5 3 116 10 249 1 9 16 251 1 124 1 93 3 281 5 308 2 373 3 14 1 160 3 282 12 354 1 81 34 261 7 377 5 185 18 206 2 136 4 313 1 286 5 102 1 
335 1 68 1 139 1 281 2 308 1 72 1 282 3 318 1 337 1 293 2 73 1 81 8 261 2 377 2 116 4 185 4 9 4 206 1 286 2 102 1 
335 1 68 1 139 1 282 2 318 1 337 1 73 1 261 2 81 6 185 3 9 3 237 1 206 1 102 1 
93 1 139 1 281 1 365 1 373 1 282 2 72 1 293 1 337 1 261 1 5 1 81 4 377 1 116 2 185 2 9 2 286 1 
93 1 139 1 373 1 160 1 72 1 282 2 337 1 261 1 5 1 338 1 81 7 185 4 9 3 136 2 313 1 
335 1 68 2 139 3 72 4 111 1 318 1 337 3 293 2 73 2 5 2 195 1 116 4 9 11 93 2 281 2 373 2 308 2 282 9 160 2 81 23 261 5 377 2 99 1 185 12 206 1 313 1 136 2 286 2 102 1 
185 1 136 1 81 1 
9 1 160 1 81 1 
1 1 93 1 281 1 139 1 365 1 373 1 72 1 282 3 293 1 337 1 81 6 5 1 261 2 377 1 116 2 185 3 9 3 286 1 
139 2 72 1 293 1 246 1 337 2 338 1 5 2 145 1 116 2 250 1 9 6 251 1 323 1 225 1 93 2 281 1 373 2 160 1 282 2 81 12 261 1 377 1 185 6 136 1 286 1 
68 1 139 1 282 2 72 1 337 1 73 1 81 6 261 1 9 3 185 3 206 1 
335 1 68 1 281 1 308 1 72 1 282 2 111 1 293 1 73 1 261 1 81 3 377 1 116 2 9 1 185 2 286 1 102 1 
335 1 68 1 139 1 318 1 337 1 293 1 73 1 338 1 145 1 116 2 9 4 251 1 281 1 160 1 282 2 81 8 261 2 377 1 185 4 206 1 136 1 286 1 102 1 
335 1 68 1 139 1 365 1 72 1 318 1 293 2 337 2 73 1 338 1 145 1 116 4 9 6 251 1 93 1 281 2 373 1 160 1 282 3 261 2 81 11 377 2 185 5 206 1 136 2 313 1 286 2 102 1 
335 1 68 1 139 3 365 1 72 1 318 1 293 3 246 1 337 3 73 1 338 1 5 2 145 1 116 6 250 1 9 9 323 1 251 1 225 1 93 2 281 3 373 2 308 1 160 1 282 4 81 19 261 3 377 3 185 10 206 1 136 1 286 3 102 1 
335 1 68 1 139 2 365 1 72 2 318 1 293 3 246 1 337 3 73 1 338 1 5 1 145 1 116 6 250 1 9 10 251 1 323 1 225 1 93 2 281 3 308 1 373 2 160 1 282 5 81 17 261 3 377 3 185 7 206 1 136 1 286 3 102 1 
335 1 68 1 139 1 318 1 337 1 293 1 73 1 338 1 145 1 116 2 9 4 251 1 281 1 160 1 282 2 81 8 261 2 377 1 185 4 206 1 136 1 286 1 102 1 
139 2 72 1 293 1 246 1 337 2 338 1 5 2 145 1 116 2 250 1 9 6 251 1 323 1 225 1 93 2 281 1 373 2 160 1 282 2 81 12 261 1 377 1 185 6 136 1 286 1 
335 1 68 1 139 2 365 1 72 2 318 1 293 4 246 1 337 3 73 1 338 1 5 1 145 1 116 8 250 1 9 10 323 1 251 1 225 1 93 2 281 4 373 2 308 2 160 1 282 5 81 18 261 3 377 4 185 8 206 1 136 1 286 4 102 1 
139 2 72 3 293 4 246 1 337 3 338 1 5 2 145 1 116 8 250 1 9 9 323 1 251 1 225 1 93 3 281 4 373 3 308 2 14 1 160 1 282 6 81 16 261 3 377 4 185 7 136 1 286 4 
335 1 68 3 139 1 282 6 72 3 337 1 73 3 81 7 261 3 185 4 9 3 206 1 102 2 
335 1 68 1 139 2 72 1 318 1 293 4 246 1 337 3 73 1 338 1 5 1 145 1 116 8 250 1 9 10 323 1 251 1 225 1 93 2 281 4 373 2 308 2 14 1 160 1 282 4 81 18 261 3 377 4 185 8 206 1 136 1 286 4 102 1 
125 1 131 1 94 1 166 1 262 1 241 1 187 1 
125 1 67 1 104 1 94 1 262 1 131 1 63 1 166 1 240 1 368 1 241 1 187 1 
76 1 156 1 369 4 61 1 352 1 229 4 358 1 163 4 214 1 329 1 26 1 339 1 331 1 
369 2 182 1 229 2 70 1 24 1 163 2 26 1 339 2 320 1 76 1 358 1 299 1 91 1 239 1 
76 1 369 1 183 1 229 1 163 1 292 1 375 1 112 1 329 1 339 1 
76 1 369 2 48 1 312 1 229 2 358 1 326 1 163 2 26 1 339 1 331 1 
156 1 369 4 352 1 229 5 163 5 329 1 26 3 339 2 331 1 76 2 61 1 312 1 358 2 91 1 121 1 324 1 
156 1 369 4 352 1 229 5 163 5 329 1 26 3 339 2 331 1 76 2 61 1 312 1 135 1 358 2 91 1 324 1 
76 1 156 1 369 1 352 1 229 1 358 1 237 1 163 1 329 1 26 1 339 1 
125 1 369 1 94 1 229 1 353 1 317 1 163 1 191 1 329 1 271 1 26 1 339 1 76 1 131 2 357 1 358 1 299 1 187 2 
317 1 191 1 271 1 26 3 339 1 76 1 177 1 299 2 91 1 348 1 125 1 369 1 94 2 158 1 229 1 353 2 163 1 131 2 40 1 357 1 358 2 64 1 187 2 
317 1 214 1 191 1 26 3 339 1 76 1 146 1 177 1 299 2 91 1 348 1 125 1 369 2 94 2 158 1 229 2 353 2 163 2 131 2 40 1 357 1 358 2 64 1 187 2 
243 1 190 1 214 1 46 1 193 1 26 4 339 1 76 1 321 1 197 1 345 2 299 1 91 1 179 1 348 1 369 3 228 1 229 3 163 3 329 1 264 2 40 1 358 1 
243 1 369 3 228 1 190 1 229 3 163 3 214 1 329 1 193 1 26 4 339 1 264 2 76 1 197 1 40 1 345 2 358 1 299 1 91 1 348 1 179 1 137 1 
76 1 369 1 229 1 71 1 163 1 339 1 
369 6 302 1 229 7 70 1 71 1 326 1 163 7 329 2 26 3 339 3 331 1 76 2 234 1 312 1 358 2 277 1 299 1 121 1 239 1 324 1 65 1 
335 1 68 1 139 1 316 1 244 1 141 1 317 1 318 1 191 1 337 1 192 2 293 2 271 1 73 1 26 1 295 1 339 1 174 1 76 1 116 4 9 3 299 1 13 1 125 2 369 1 351 1 94 1 304 2 281 2 229 1 282 2 353 1 163 1 81 6 261 2 331 1 377 2 204 1 131 2 185 3 357 1 206 1 358 1 286 2 268 1 102 1 187 2 
243 1 69 2 190 1 194 2 193 1 26 2 75 1 7 2 197 1 218 1 217 1 345 3 179 2 123 1 369 1 228 1 229 1 163 1 232 1 329 1 15 1 16 2 264 3 17 1 186 1 288 1 208 1 137 1 
369 2 31 1 228 1 229 2 71 1 163 2 26 2 339 2 331 1 76 1 358 1 299 1 65 1 
125 1 369 1 94 1 229 1 353 1 317 1 163 1 191 1 329 1 26 1 339 1 146 1 76 1 131 2 357 1 358 1 299 1 187 2 
369 1 229 1 70 1 163 1 26 1 339 2 76 1 234 1 358 1 299 1 91 1 239 1 65 1 
125 1 255 1 236 1 3 1 43 1 
125 1 243 1 255 2 210 1 158 1 190 1 3 2 264 2 197 1 133 1 332 1 177 1 28 1 345 2 236 2 222 1 64 1 43 1 208 1 
255 1 94 1 376 1 342 1 131 1 77 1 236 1 43 1 187 1 
133 1 222 1 43 1 
188 1 198 1 269 1 379 1 231 1 347 1 224 1 263 1 
188 2 279 2 269 1 128 1 231 4 355 1 263 3 100 1 198 4 287 1 347 1 224 2 200 1 22 1 
188 1 279 1 198 2 269 1 366 1 379 1 213 1 231 2 92 1 347 1 224 1 263 1 
53 1 188 1 269 1 128 2 231 3 263 1 198 3 379 1 287 1 347 1 224 1 22 2 
103 1 259 1 294 2 263 2 
33 1 198 1 269 1 379 1 231 1 347 1 
188 1 279 1 198 2 269 1 379 1 231 2 38 1 347 1 224 1 263 1 
88 1 
188 1 198 1 269 1 379 1 231 1 347 1 224 1 263 1 
188 1 237 1 224 1 263 1 
188 1 198 1 269 1 231 1 347 1 224 1 263 1 
362 1 231 1 325 1 
188 1 269 1 128 2 231 3 263 1 198 3 379 1 334 1 347 1 287 1 224 1 22 1 
188 1 303 1 279 1 269 1 231 2 263 1 100 1 198 2 347 1 224 1 
269 1 231 1 375 1 355 1 263 1 115 1 183 1 198 1 356 1 379 1 347 1 
188 1 198 1 269 1 379 1 231 1 347 1 263 1 
188 2 198 1 269 1 379 1 231 1 347 1 224 1 
188 1 269 2 231 2 263 1 266 1 297 1 198 2 379 1 367 1 347 2 
188 1 279 2 269 1 231 3 38 1 355 1 263 2 265 1 198 3 379 1 347 1 224 1 200 1 
188 1 279 1 126 1 269 1 109 1 292 1 231 2 375 1 263 1 183 2 198 2 356 1 379 1 347 1 224 1 
188 1 303 1 279 2 364 1 269 1 231 3 355 1 263 2 100 1 198 3 379 1 347 1 224 1 200 1 
188 1 279 1 269 1 128 1 231 3 38 1 263 1 198 3 379 1 347 1 224 1 
100 1 200 1 263 1 355 1 
188 1 263 1 

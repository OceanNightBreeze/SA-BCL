#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 4 143 1 359 5 186 1 322 1 56 1 8 3 367 1 341 9 244 1 152 2 135 1 172 1 302 6 90 2 197 1 154 2 331 1 36 2 287 2 201 9 225 1 313 1 77 1 21 1 227 2 229 2 355 1 
293 4 143 1 359 5 186 1 322 1 56 1 8 3 367 1 341 9 244 1 152 2 135 1 172 1 302 6 90 2 197 1 154 2 331 1 36 2 287 2 201 9 225 1 313 1 77 1 21 1 227 2 229 2 355 1 
293 5 143 1 359 6 186 1 322 1 56 1 8 4 367 1 341 10 244 1 152 2 135 1 172 1 302 7 90 2 197 1 154 2 331 1 36 2 287 2 201 10 225 1 313 1 77 1 21 1 227 2 229 2 355 1 
293 3 143 1 359 4 186 1 322 1 56 1 8 2 341 7 244 1 152 2 135 1 172 1 302 4 90 1 197 1 154 2 331 1 36 2 287 2 201 7 225 1 313 1 77 1 21 1 227 2 229 2 355 1 
293 2 154 1 143 1 331 1 287 1 36 1 359 3 201 4 313 1 8 1 21 1 367 1 227 1 341 4 152 1 172 1 302 3 90 2 
154 1 331 1 36 1 287 1 237 1 359 1 17 1 201 2 313 1 56 1 21 1 227 1 341 2 229 1 192 1 135 1 
293 1 331 1 36 2 359 2 201 3 225 1 313 1 8 1 21 1 227 2 341 3 229 1 302 1 
293 4 143 1 359 5 322 1 8 3 341 9 367 1 244 1 152 1 172 1 302 7 90 2 154 1 331 1 36 2 287 1 310 1 201 9 225 1 313 1 21 1 227 2 229 1 161 1 
293 4 143 1 359 5 322 1 8 3 341 9 367 1 244 1 152 1 172 1 302 7 90 2 154 1 331 1 36 2 287 1 310 1 201 9 225 1 313 1 21 1 227 2 229 1 161 1 
241 1 86 1 111 1 
159 2 111 1 258 1 
246 1 51 2 364 1 4 2 103 2 5 2 29 2 101 2 
51 2 179 1 181 1 4 3 103 2 104 1 239 1 5 2 146 1 361 1 169 1 364 1 298 1 150 1 218 1 29 3 345 1 194 1 112 2 246 1 252 1 253 1 115 1 94 1 139 1 116 1 312 1 353 1 374 2 316 1 44 1 205 1 46 2 317 1 79 2 101 2 120 2 
51 1 364 1 123 1 4 1 103 1 53 1 372 1 5 1 29 1 101 1 
51 1 292 1 196 1 4 1 37 1 53 1 41 1 241 1 140 1 118 1 379 1 28 1 29 1 111 1 
51 1 292 1 103 1 4 1 37 2 5 1 53 1 41 2 241 1 140 1 118 1 28 1 29 1 111 1 101 1 
297 1 81 1 37 1 311 1 41 1 
241 1 297 1 81 1 294 1 37 2 111 1 187 1 41 2 
81 1 37 1 41 1 
51 1 123 1 37 1 103 1 4 1 53 1 372 1 5 1 41 1 297 1 364 1 62 1 29 1 101 1 
111 1 
241 1 297 1 81 1 37 2 111 1 187 1 41 2 296 1 
195 2 248 2 81 2 358 1 37 5 270 1 333 1 40 1 187 1 41 5 117 1 241 1 297 2 129 1 216 2 78 1 88 1 22 1 111 1 
246 1 86 1 
51 2 246 2 113 1 166 1 4 2 103 1 5 1 29 2 101 1 
228 1 262 1 350 1 
246 1 181 1 253 1 4 1 104 1 239 1 169 1 116 1 374 1 44 1 109 1 205 1 150 1 46 1 29 1 112 1 
246 1 51 3 4 3 103 3 5 1 291 1 29 3 101 3 
51 1 4 1 103 1 53 1 372 1 29 1 101 1 
51 1 113 1 166 1 4 1 103 1 53 1 5 1 29 1 101 1 
51 3 233 1 179 1 166 1 181 1 292 1 104 1 4 4 103 3 239 1 5 2 53 1 146 1 169 1 364 1 150 1 218 1 28 1 89 1 29 4 345 1 112 1 246 1 253 1 37 1 115 1 223 1 94 1 139 1 116 1 41 1 312 1 353 1 140 1 118 1 374 1 316 1 44 1 205 1 46 1 79 1 291 1 101 3 120 2 
246 1 51 2 196 1 84 1 4 2 103 1 291 1 29 2 101 1 
51 3 329 1 233 1 166 1 292 1 37 1 103 3 4 3 223 1 5 1 53 1 41 1 140 1 118 1 291 2 28 1 29 3 111 1 101 3 
51 2 166 1 103 2 4 2 5 1 350 1 291 1 262 1 29 2 101 2 
246 1 181 1 253 1 4 1 104 1 239 1 169 1 116 1 374 1 44 1 205 1 150 1 46 1 29 1 112 1 
246 1 253 1 4 1 104 1 239 1 169 1 116 1 130 1 374 1 44 1 326 1 150 1 46 1 29 1 112 1 
265 1 209 1 124 1 298 2 218 1 11 1 115 2 94 1 93 1 350 2 176 1 139 1 312 1 353 1 19 1 20 1 376 1 316 1 228 2 178 1 79 4 262 2 382 1 120 2 
51 1 284 1 292 1 4 1 103 1 53 1 29 1 101 1 
51 1 181 1 253 1 104 1 103 1 4 2 223 1 239 1 116 1 169 1 374 1 44 1 150 1 205 1 46 1 262 1 291 1 29 2 101 1 112 1 
51 5 246 1 166 1 196 1 84 1 103 4 4 5 223 1 5 1 57 1 291 2 29 5 100 1 101 4 
284 1 51 2 4 2 103 2 53 1 372 1 29 2 101 2 
337 1 48 1 
337 1 48 1 
33 1 191 1 
33 1 191 1 
33 1 191 1 
337 1 366 1 48 1 
12 1 337 1 48 1 
33 1 337 2 299 1 191 1 369 1 48 2 
337 1 366 1 48 1 
337 1 366 1 48 1 
337 1 55 1 48 1 
337 1 55 1 48 1 
337 1 55 1 48 1 
92 3 337 2 173 1 68 1 37 2 200 2 213 2 214 2 41 2 58 1 42 2 231 2 263 1 369 1 111 1 153 1 30 1 48 2 348 1 
51 2 357 1 337 1 103 2 4 2 213 1 214 1 274 1 59 1 29 2 193 1 348 1 246 1 92 1 12 1 251 1 37 1 200 1 41 1 96 1 42 1 381 1 101 2 48 1 
154 1 287 1 152 1 
154 1 287 1 192 1 
319 1 287 3 152 2 192 1 219 1 71 1 
319 1 15 1 287 2 152 1 192 1 71 1 
319 1 287 2 152 1 192 1 71 2 
265 1 121 1 81 1 124 1 270 3 212 1 362 1 187 1 274 1 215 1 297 4 241 1 59 1 216 1 111 2 193 1 11 1 64 1 91 1 65 2 248 1 195 1 37 5 309 2 333 1 258 1 41 5 159 3 376 1 75 1 76 2 78 2 
265 3 121 1 81 6 210 1 124 3 270 8 212 2 273 5 187 1 297 7 241 1 216 2 10 1 193 4 111 5 11 3 91 2 195 2 248 2 286 1 37 9 309 6 138 1 333 1 311 5 258 3 41 9 117 1 159 9 376 3 75 3 377 1 378 1 76 6 78 6 
265 1 124 1 270 3 212 1 362 1 215 1 241 1 297 2 216 1 111 3 193 1 11 1 91 1 65 1 248 1 195 1 37 3 309 2 258 2 41 3 117 1 75 1 376 1 159 4 76 2 78 2 
265 2 124 2 270 5 212 1 362 1 215 1 241 1 297 3 216 1 111 4 193 2 11 2 91 1 65 2 248 1 195 1 37 4 309 4 138 1 258 3 41 4 117 1 159 7 75 2 376 2 377 1 76 4 378 1 78 4 
86 1 44 1 290 1 
141 1 44 1 
234 1 
44 1 150 1 
249 1 44 3 150 1 239 1 290 2 97 1 
44 1 150 1 239 1 
342 1 44 1 
82 1 124 3 240 2 147 1 105 2 25 1 298 8 87 1 11 3 254 1 174 2 115 6 176 5 289 2 20 4 259 1 79 14 50 1 
82 1 124 3 240 2 147 1 105 2 25 1 298 8 87 1 11 3 254 1 174 2 115 6 176 7 289 2 20 4 259 1 79 14 50 3 
82 1 124 3 240 2 147 1 105 2 25 1 298 8 87 1 11 3 254 1 174 2 115 6 176 5 289 2 335 1 20 4 259 1 79 14 50 1 
265 3 23 1 82 2 124 6 321 1 240 3 7 1 147 2 105 3 189 1 25 1 26 4 298 21 87 1 218 1 11 6 16 1 254 1 115 19 174 3 156 1 175 3 176 14 289 2 312 1 353 1 20 7 314 1 75 3 376 3 259 1 316 1 79 40 120 2 50 7 
82 1 124 3 240 2 147 1 105 2 25 1 298 9 218 2 11 3 307 1 254 1 174 2 115 7 156 1 176 7 289 2 351 1 312 2 353 2 20 5 259 1 316 2 79 16 120 4 50 2 
235 1 359 1 104 1 148 1 133 1 341 2 152 1 192 1 302 1 219 1 112 1 247 1 154 1 69 1 331 1 36 1 287 2 371 1 201 2 95 1 116 1 202 1 313 1 73 1 374 1 21 1 227 1 45 1 229 1 46 1 
235 1 359 1 104 1 148 1 341 3 152 1 192 1 219 1 346 1 302 2 112 1 250 1 154 1 69 1 331 1 36 1 287 2 371 1 201 3 95 1 116 1 202 1 313 1 73 1 374 1 203 1 227 1 45 1 229 1 46 1 
359 1 104 1 148 1 341 2 152 1 192 1 302 2 219 1 112 1 250 1 69 1 154 1 331 1 287 2 371 1 201 2 116 1 202 1 313 1 73 1 374 1 203 1 229 1 45 1 46 1 
163 1 104 1 272 1 169 1 279 1 148 2 341 1 150 1 282 1 346 1 112 1 36 1 198 1 371 2 201 1 116 1 374 1 227 1 43 1 44 1 45 2 229 2 46 1 
235 1 104 1 148 1 341 1 152 1 192 1 219 1 112 1 247 1 154 1 69 1 36 1 287 2 371 1 201 1 95 1 116 1 202 1 73 1 374 1 203 1 21 1 227 1 45 1 229 1 46 1 
142 1 
51 1 3 1 292 1 182 2 104 1 4 1 53 1 187 3 338 1 241 1 242 1 243 1 61 2 150 1 111 2 112 2 195 1 248 1 196 1 157 4 258 2 116 1 315 1 118 1 159 2 78 2 204 2 356 1 163 1 81 6 267 1 270 2 212 1 272 1 275 2 169 2 216 1 27 2 28 1 29 1 283 2 31 1 220 1 37 5 224 2 333 1 41 5 140 1 374 2 375 1 379 1 44 1 230 1 46 2 102 1 
51 1 3 1 81 2 292 1 4 1 53 1 187 1 296 1 242 1 27 1 28 1 29 1 196 1 37 3 157 2 41 3 140 1 118 1 375 1 379 1 230 1 102 1 
51 1 81 1 3 1 292 1 4 1 53 1 187 1 296 1 241 1 242 1 61 1 28 1 29 1 111 1 196 1 37 3 157 3 41 3 140 1 118 1 375 1 379 1 230 1 102 1 
51 1 3 1 81 2 292 1 4 1 53 1 187 1 296 1 241 1 242 1 61 1 27 1 28 1 29 1 111 1 196 1 37 3 157 3 41 3 140 1 118 1 375 1 379 1 230 1 204 1 102 1 
51 1 122 1 3 1 81 7 180 1 292 1 182 2 238 1 4 1 270 1 53 1 187 3 275 2 296 1 241 5 242 1 188 1 216 1 61 4 27 4 28 1 29 1 283 2 111 5 248 1 195 1 196 1 37 5 157 6 224 2 333 1 258 2 41 5 140 1 315 1 118 1 375 1 379 1 78 1 261 1 230 1 204 4 356 1 102 1 
51 1 3 1 292 1 4 1 182 2 53 1 187 2 241 1 242 1 243 1 61 2 111 2 195 1 248 1 196 1 157 4 258 2 118 1 315 1 159 2 78 1 204 2 356 1 81 4 270 1 275 2 216 1 27 2 28 1 29 1 283 2 37 4 333 1 224 2 41 4 140 1 375 1 379 1 230 1 102 1 
51 1 122 1 81 4 3 1 292 1 182 2 4 1 238 1 270 1 53 1 187 2 275 2 241 1 242 1 216 1 61 2 27 2 28 1 29 1 111 1 283 2 248 1 195 1 196 1 37 4 157 4 224 2 333 1 258 2 41 4 140 1 315 1 118 1 375 1 379 1 78 1 204 2 230 1 261 1 356 1 102 1 
51 1 122 1 81 4 3 1 292 1 182 2 4 1 238 1 270 1 53 1 187 2 275 2 241 1 242 1 216 1 61 2 27 2 28 1 29 1 111 1 283 2 248 1 195 1 196 1 37 4 157 4 224 2 333 1 258 2 41 4 140 1 315 1 118 1 375 1 379 1 78 1 204 2 230 1 261 1 356 1 102 1 
51 1 122 1 81 4 3 1 268 2 292 1 182 2 4 1 270 1 53 1 187 2 241 1 242 1 216 1 61 2 27 2 28 1 29 1 111 1 248 1 195 1 196 1 37 4 157 4 224 2 333 1 41 4 72 1 140 1 315 1 118 1 375 1 159 2 74 1 379 1 78 1 204 2 230 1 160 1 102 1 49 2 
51 1 122 1 3 1 81 5 292 1 180 1 182 2 238 1 4 1 270 1 53 1 187 2 275 2 241 1 242 1 216 1 61 3 27 3 28 1 29 1 111 1 283 2 248 1 195 1 196 1 37 4 157 5 224 2 333 1 258 2 41 4 140 1 315 1 118 1 375 1 379 1 78 1 230 1 204 3 261 1 356 1 102 1 
51 1 122 1 3 1 81 5 292 1 180 1 182 2 238 1 4 1 270 1 53 1 187 2 275 2 241 1 242 1 216 1 61 3 27 3 28 1 29 1 111 1 283 2 248 1 195 1 196 1 37 4 157 5 224 2 333 1 258 2 41 4 140 1 315 1 118 1 375 1 379 1 78 1 230 1 204 3 261 1 356 1 102 1 
51 1 3 1 292 1 4 1 182 2 53 1 187 2 241 1 242 1 243 1 61 2 111 1 195 1 248 1 196 1 157 4 118 1 315 1 159 2 78 1 204 2 160 1 81 4 268 2 270 1 216 1 27 2 28 1 29 1 37 4 333 1 224 2 41 4 140 1 375 1 379 1 230 1 102 1 49 2 
246 2 124 1 254 1 174 1 115 2 93 1 94 1 240 1 176 2 289 1 139 1 312 1 353 1 105 1 20 2 86 1 259 1 298 3 316 1 79 5 218 1 11 1 120 2 
265 1 124 2 126 1 321 1 146 1 7 1 26 3 298 8 343 1 218 2 11 1 246 1 14 1 115 6 94 1 175 3 350 4 176 2 139 2 312 2 158 1 353 2 20 1 75 2 376 2 316 2 228 11 317 1 79 14 262 11 99 1 50 1 120 4 
51 1 165 1 181 1 236 1 104 1 4 2 103 1 239 1 146 1 169 1 298 1 343 1 150 1 109 1 218 1 29 2 112 1 246 1 253 1 223 1 115 1 94 1 38 1 350 1 139 1 116 1 312 1 353 1 374 1 316 1 44 1 205 1 46 1 291 1 79 2 317 1 101 1 120 2 
51 1 179 2 181 2 103 1 4 3 104 2 183 2 53 1 239 2 240 2 146 1 105 2 298 14 343 1 150 2 63 1 11 5 112 1 246 3 253 2 254 1 155 1 115 13 350 6 116 2 312 3 353 3 20 6 75 2 259 1 119 2 316 3 205 2 317 1 79 27 262 6 264 1 120 6 265 2 124 5 169 1 25 1 218 3 29 3 34 2 174 1 223 1 94 3 176 7 289 2 139 3 177 2 374 1 376 2 44 2 228 6 46 1 291 1 101 1 50 1 
164 1 51 1 163 1 4 1 103 1 104 2 360 1 54 1 272 1 145 1 146 1 169 2 190 1 133 1 298 1 150 2 218 2 29 1 347 1 112 7 252 2 115 1 93 1 94 2 256 1 139 2 116 2 312 2 353 2 203 1 374 8 316 2 44 3 46 8 291 1 317 1 79 2 101 1 120 4 
51 1 265 1 166 1 124 1 103 1 4 1 5 1 298 1 343 1 218 1 29 1 11 1 288 1 115 2 94 1 350 1 176 1 139 1 312 1 353 1 20 1 75 1 376 1 316 1 228 1 262 1 79 3 101 1 120 2 
124 1 93 1 94 1 350 1 176 1 139 1 312 1 353 1 19 1 376 1 316 1 298 2 228 1 262 1 79 2 218 1 50 1 120 2 
265 1 115 2 93 1 94 1 350 1 176 1 139 1 312 1 353 1 20 1 316 1 228 1 178 1 262 1 79 2 218 1 11 1 120 2 
265 1 124 1 298 2 218 1 11 1 115 2 94 1 93 1 350 2 176 2 139 1 312 1 353 1 20 1 376 1 75 1 316 1 228 2 79 4 262 2 120 2 50 1 
124 1 256 1 94 1 350 1 176 1 139 1 312 1 353 1 19 1 376 1 316 1 298 2 228 1 262 1 79 2 218 1 50 1 120 2 
265 1 115 2 256 1 94 1 350 1 176 1 139 1 312 1 353 1 20 1 316 1 228 1 178 1 262 1 79 2 218 1 11 1 120 2 
265 1 124 1 298 2 218 1 11 1 115 2 94 1 256 1 350 2 176 2 139 1 312 1 353 1 20 1 376 1 75 1 316 1 228 2 79 4 262 2 120 2 50 1 
265 1 124 1 298 2 218 1 11 1 115 2 94 1 350 2 176 2 139 1 312 1 353 1 20 1 376 1 75 1 316 1 228 2 79 4 262 2 120 2 50 1 
179 1 181 1 104 1 4 1 239 1 146 1 169 1 298 1 150 1 218 1 29 1 112 1 246 1 253 1 115 1 94 1 139 1 116 1 312 1 353 1 374 1 316 1 44 1 205 1 46 1 317 1 79 2 120 2 
2 1 104 1 4 1 239 1 146 1 169 1 130 1 298 1 150 1 326 1 218 1 29 1 112 1 246 1 253 1 115 1 94 1 139 1 116 1 312 1 353 1 374 1 316 1 44 1 46 1 317 1 79 2 120 2 
265 1 124 1 298 2 343 1 218 1 11 1 115 2 94 1 350 2 176 2 139 1 312 1 353 1 20 1 376 1 75 1 316 1 228 2 79 4 262 2 120 2 50 1 
265 1 179 1 181 1 124 1 104 1 4 1 239 1 298 2 133 1 150 1 218 1 29 1 11 1 112 1 34 1 253 1 115 2 94 1 350 2 176 2 139 1 116 1 312 1 353 1 20 1 374 1 376 1 75 1 316 1 228 2 44 1 205 1 46 1 262 2 79 4 50 1 120 2 
265 1 51 1 166 1 124 1 103 1 4 1 5 1 298 2 343 1 218 1 29 1 11 1 115 1 94 1 350 1 176 1 139 1 312 1 353 1 75 1 376 1 316 1 228 1 79 3 262 1 162 1 101 1 50 1 120 2 
265 3 124 3 320 1 85 1 271 2 321 1 7 1 278 2 26 2 298 9 344 1 171 1 9 1 218 2 11 3 115 10 334 1 175 1 176 6 351 1 312 2 353 2 20 3 354 1 75 3 376 3 316 2 79 19 120 4 50 3 
318 1 265 2 124 3 85 2 271 4 321 2 6 1 278 1 26 2 298 14 171 1 9 2 218 3 11 2 304 1 308 1 115 12 156 2 334 1 175 2 176 4 351 1 312 3 353 3 20 2 354 1 75 3 376 3 226 1 316 3 79 26 207 1 50 2 120 6 
240 1 7 1 6 1 105 1 298 20 344 1 9 2 11 5 304 1 306 1 308 1 254 1 115 21 156 1 351 1 312 3 353 3 20 4 75 4 354 1 259 1 316 3 79 41 207 1 120 6 265 4 318 1 124 5 85 1 321 3 271 4 278 1 26 4 218 3 171 1 174 1 175 3 334 1 176 8 289 1 376 4 226 1 50 4 
318 1 265 3 124 5 85 1 271 4 321 3 240 1 6 1 7 1 278 1 105 1 26 4 298 20 344 1 171 1 9 2 218 4 11 4 304 1 306 1 308 1 254 1 174 1 115 18 156 2 334 1 175 3 176 7 289 1 351 1 312 4 353 4 20 4 354 1 75 4 376 4 259 1 226 1 316 4 79 38 207 1 120 8 50 3 
318 1 265 7 124 8 126 2 85 1 271 4 321 2 240 1 6 1 7 2 278 1 105 1 26 4 298 27 171 1 9 1 218 2 11 8 304 1 308 1 254 1 174 1 115 25 156 1 334 1 175 4 176 14 289 1 351 1 312 2 353 2 20 7 354 1 75 7 376 7 259 1 226 1 316 2 79 52 207 1 120 4 50 7 
337 1 42 1 173 1 327 1 200 1 369 1 213 1 153 1 48 1 214 1 
12 1 251 1 
106 1 337 1 42 1 151 1 200 1 213 1 48 1 214 1 276 1 
92 2 337 1 173 1 68 1 37 1 200 1 213 1 41 1 214 1 58 1 42 1 231 1 369 1 111 1 153 1 30 1 48 1 348 1 
92 2 337 1 173 1 68 1 37 1 200 1 213 1 41 1 214 1 58 1 42 1 231 1 369 1 111 1 153 1 30 1 48 1 348 1 
92 2 337 1 173 1 68 1 37 1 200 1 213 1 41 1 214 1 58 1 42 1 231 1 369 1 111 1 153 1 30 1 48 1 348 1 
366 1 299 1 332 1 
366 1 299 1 332 1 
199 1 55 1 
299 1 199 1 55 1 
357 1 96 1 
357 1 51 2 337 1 4 2 103 2 213 1 214 1 274 1 297 1 58 1 59 1 29 2 193 1 246 1 92 1 12 1 285 1 251 1 37 1 200 1 41 1 96 1 42 1 231 1 381 1 48 1 101 2 
366 1 332 1 
299 1 199 1 55 1 
51 2 1 1 104 1 4 2 54 1 145 1 146 1 298 1 343 1 150 1 134 1 218 1 29 2 112 2 305 1 13 1 252 2 115 1 94 1 139 1 116 1 312 1 353 1 374 2 316 1 44 1 46 2 380 1 317 1 79 2 120 2 
154 1 287 2 104 1 255 1 95 1 116 1 128 1 202 1 73 1 148 1 203 1 374 2 133 1 260 1 46 2 152 1 192 1 219 1 112 2 
154 1 287 2 104 1 95 1 116 1 202 1 73 1 148 1 203 1 374 1 131 1 260 1 46 1 152 1 192 1 219 1 112 1 
163 1 104 1 255 1 272 1 116 1 169 1 295 1 148 1 374 1 44 1 150 1 46 1 282 1 112 1 
154 1 287 2 104 1 255 1 95 1 116 1 128 1 202 1 73 1 148 1 203 1 374 1 260 1 46 1 152 1 192 1 219 1 112 1 
324 1 
241 1 358 1 86 1 78 1 270 1 40 1 111 1 
81 1 270 1 187 1 275 1 241 1 216 1 111 2 283 1 248 1 195 1 37 1 333 1 258 1 41 1 159 1 78 1 356 1 
141 3 104 3 183 2 239 3 187 3 241 2 107 1 60 1 342 2 150 3 301 1 111 8 11 2 112 3 195 4 248 4 249 1 67 2 349 2 309 6 116 4 258 6 159 12 75 2 76 6 78 8 265 2 81 5 358 1 124 2 83 1 270 9 212 2 127 2 169 1 323 2 216 4 133 1 132 2 28 2 31 1 222 2 370 2 37 5 137 2 333 4 40 1 373 1 290 2 41 5 374 3 376 2 44 10 46 3 
318 1 265 2 81 1 124 2 211 1 270 8 212 1 127 1 321 1 187 1 6 1 241 2 26 1 217 1 216 2 111 5 11 2 31 1 304 1 248 2 195 2 67 2 308 1 37 1 309 5 333 2 175 1 41 1 258 3 159 6 75 2 376 2 76 5 78 5 207 1 
51 1 123 1 124 2 4 1 238 1 103 1 270 2 127 1 53 1 5 1 240 1 364 1 105 1 25 1 216 1 62 1 29 1 11 1 248 1 195 1 67 2 37 1 372 1 333 1 289 1 41 1 78 2 101 1 
195 1 248 1 358 1 270 1 333 1 40 1 241 1 216 1 78 1 111 1 
265 2 67 2 124 2 183 1 309 5 270 5 127 1 258 5 75 2 376 2 159 10 76 5 78 5 111 5 11 2 
241 1 81 1 37 1 111 1 187 1 41 1 
163 1 267 1 81 4 52 1 83 2 104 1 270 2 212 2 272 1 338 1 187 2 169 2 216 2 107 1 150 1 112 4 31 2 248 2 195 2 37 3 333 1 116 1 41 3 117 1 374 4 336 1 44 1 78 2 46 4 
51 2 179 1 181 1 4 3 103 2 104 1 5 2 239 1 146 1 169 1 364 1 150 1 218 1 29 3 345 1 112 1 246 1 253 1 115 1 94 1 139 1 116 1 312 1 353 1 374 1 316 1 44 1 205 1 46 1 79 1 101 2 120 2 
195 1 248 1 174 1 309 2 270 1 212 1 333 1 258 2 241 2 159 4 76 2 216 1 78 2 111 4 31 1 
42 1 110 1 213 1 
357 1 42 1 173 1 149 1 213 1 
42 1 110 1 213 1 
42 1 110 1 213 1 
42 1 213 1 70 1 
42 1 213 1 70 1 
42 1 213 1 70 1 
42 1 213 1 
337 1 48 1 
124 3 240 2 105 2 25 1 298 9 218 2 11 3 254 1 115 8 174 1 156 1 176 7 289 2 312 2 353 2 20 4 259 1 316 2 79 17 120 4 50 3 
124 1 254 1 174 1 115 2 240 1 176 2 289 1 105 1 20 2 86 1 259 1 298 3 79 5 11 1 
265 1 124 1 168 1 115 2 176 2 312 1 353 1 20 1 75 1 376 1 316 1 298 2 79 4 218 1 11 1 120 2 50 1 
265 1 124 1 115 4 321 1 175 1 176 2 7 1 20 1 26 2 75 1 376 1 298 3 79 7 11 1 50 1 
265 2 124 5 126 1 240 2 7 1 105 2 25 1 26 2 298 13 218 1 11 5 254 1 174 1 115 12 156 1 175 2 176 7 289 2 312 1 353 1 20 5 376 2 75 2 259 1 316 1 79 25 99 1 50 2 120 2 
26 1 115 1 79 1 
298 1 79 1 175 1 
265 1 124 1 168 1 183 1 115 3 176 3 312 1 353 1 20 2 75 1 376 1 316 1 298 3 79 6 218 1 11 1 120 2 50 1 
265 2 318 1 124 2 321 1 6 1 26 1 298 6 218 1 11 2 304 1 308 1 115 6 175 1 176 2 351 1 312 1 353 1 20 1 75 2 376 2 316 1 79 12 207 1 50 1 120 2 
124 1 115 3 240 1 176 2 289 1 105 1 20 1 298 3 79 6 11 1 50 1 
254 1 115 2 156 1 240 1 176 2 312 1 105 1 365 1 353 1 20 1 259 1 298 1 316 1 79 3 218 1 50 1 120 2 
124 2 115 5 240 2 176 5 289 1 351 1 312 1 353 1 105 2 20 3 25 1 316 1 298 5 79 10 218 1 11 2 120 2 50 2 
124 1 176 1 351 1 312 1 353 1 376 1 316 1 298 2 79 2 218 1 120 2 50 1 
265 1 124 1 115 2 176 2 351 1 312 1 353 1 20 1 75 1 376 1 316 1 298 2 79 4 218 1 11 1 120 2 50 1 
115 2 156 1 240 1 176 2 351 1 312 3 365 1 353 3 105 1 20 1 316 3 298 1 344 1 79 3 218 3 120 6 50 1 
265 2 23 1 124 5 168 1 321 1 240 2 105 2 25 1 26 3 298 16 344 1 218 4 11 5 16 1 254 1 174 1 115 15 156 1 175 3 176 9 289 2 351 1 312 4 353 4 20 5 314 1 75 2 376 2 259 1 316 4 79 31 120 8 50 4 
124 3 321 1 240 2 105 2 25 1 26 1 298 8 218 1 11 3 308 1 254 1 174 1 115 7 175 1 176 5 289 2 351 1 312 1 353 1 20 4 259 1 316 1 79 15 50 1 120 2 
124 4 168 1 321 1 240 2 7 1 105 2 25 1 26 2 298 10 218 2 11 3 308 1 254 1 174 1 115 8 175 1 176 6 289 2 351 1 312 2 353 2 20 4 75 1 376 1 259 1 316 2 79 18 120 4 50 2 
318 1 265 2 124 5 168 1 321 1 240 2 6 1 105 2 25 1 26 1 298 13 218 3 11 5 304 1 308 1 254 1 174 1 115 13 156 1 175 1 176 7 289 2 351 1 312 3 353 3 20 5 75 2 376 2 259 1 316 3 79 26 207 1 50 2 120 6 
265 1 318 1 124 5 168 1 321 1 240 2 6 1 105 2 25 1 26 1 298 14 218 3 11 4 304 1 308 1 254 1 174 1 115 10 156 1 175 1 176 9 289 2 351 1 312 3 353 3 20 5 75 2 376 2 259 1 316 3 79 24 207 1 50 4 120 6 
124 3 321 1 240 2 105 2 25 1 26 1 298 8 218 1 11 3 308 1 254 1 174 1 115 7 175 1 176 5 289 2 351 1 312 1 353 1 20 4 259 1 316 1 79 15 50 1 120 2 
265 2 318 1 124 2 321 1 6 1 26 1 298 6 218 1 11 2 304 1 308 1 115 6 175 1 176 2 351 1 312 1 353 1 20 1 75 2 376 2 316 1 79 12 207 1 50 1 120 2 
318 1 265 1 124 5 168 1 321 1 240 2 6 1 105 2 25 1 26 1 298 14 218 4 11 4 304 1 308 1 254 1 174 1 115 11 156 2 175 1 176 7 289 2 351 1 312 4 353 4 20 5 75 2 376 2 259 1 316 4 79 25 207 1 50 2 120 8 
318 1 265 2 124 3 321 1 6 1 26 1 298 9 344 1 218 4 11 2 304 1 308 1 115 7 156 2 175 1 176 6 351 1 312 4 353 4 20 3 75 3 376 3 316 4 79 16 207 1 50 3 120 8 
124 1 254 2 115 4 240 3 176 6 289 1 105 3 20 3 259 1 298 3 79 7 11 1 50 3 
318 1 265 1 124 5 321 1 240 2 6 1 105 2 25 1 26 1 298 14 344 1 218 4 11 4 304 1 308 1 254 1 174 1 115 11 156 2 175 1 176 7 289 2 351 1 312 4 353 4 20 5 75 2 376 2 259 1 316 4 79 25 207 1 50 2 120 8 
246 1 51 1 196 1 4 1 84 1 29 1 339 1 
246 1 51 1 66 1 196 1 84 1 4 1 363 1 339 1 340 1 368 1 29 1 303 1 
163 1 374 1 86 1 104 1 44 1 150 1 46 1 272 1 116 1 169 1 112 1 
246 1 51 1 253 1 103 1 4 2 104 1 239 1 116 1 169 1 374 1 44 1 150 1 205 1 46 1 291 1 29 2 101 1 112 1 
51 2 292 1 83 1 104 1 4 2 103 1 239 2 53 1 342 1 150 2 29 2 112 1 246 1 253 1 349 1 116 1 374 1 118 1 44 3 205 1 46 1 291 1 101 2 
51 2 292 1 83 1 269 1 104 1 4 2 103 1 239 2 53 1 130 1 342 1 150 2 29 2 112 2 246 1 253 1 349 1 116 1 374 2 118 1 44 3 46 2 291 1 101 2 
141 1 81 1 83 1 269 1 104 1 239 1 169 1 241 1 281 1 342 1 150 1 28 1 111 1 112 3 32 1 349 1 37 2 290 1 41 2 116 1 374 3 44 4 46 3 
141 1 81 1 222 1 349 1 83 1 269 1 37 2 104 1 239 1 169 1 116 1 41 2 290 1 241 1 374 3 342 1 44 4 150 1 46 3 28 1 111 1 112 3 
374 1 190 1 104 1 46 1 116 1 112 1 
164 1 208 1 249 1 252 1 167 1 104 2 360 1 54 1 239 1 169 2 116 3 203 1 374 7 190 1 133 1 44 3 150 2 46 7 80 1 347 1 112 6 
51 1 179 1 181 1 103 1 4 2 104 1 53 1 239 1 240 2 105 2 298 7 343 1 150 1 11 3 112 1 246 3 253 1 254 1 155 1 115 6 116 1 312 2 353 2 20 4 259 1 316 2 205 1 79 13 120 4 124 3 25 1 133 1 218 2 29 2 34 1 174 1 94 2 176 5 139 2 289 2 177 1 374 1 44 1 46 1 291 1 380 1 101 1 50 1 
141 1 81 2 358 1 270 1 187 1 169 1 323 1 241 1 297 1 216 2 107 1 132 1 28 1 111 1 112 1 248 2 195 2 222 1 37 3 137 1 333 2 40 1 41 3 290 1 374 1 78 1 44 2 46 1 
249 1 104 1 239 1 290 1 116 2 374 2 190 1 133 1 60 1 44 2 150 1 46 2 112 2 
163 1 269 1 104 1 272 1 257 1 116 1 169 1 374 4 133 1 44 1 150 1 46 4 112 4 
208 1 83 1 125 1 104 1 24 1 184 1 239 1 116 2 374 2 44 1 150 1 46 2 80 1 112 2 
73 1 374 1 154 1 287 1 104 1 46 1 192 1 116 1 169 1 112 1 
13 1 104 1 54 1 116 1 374 2 203 1 133 1 44 1 150 1 46 2 112 2 
163 1 164 1 83 1 104 2 54 1 360 1 272 1 257 1 169 1 116 2 374 5 133 1 44 3 150 2 46 5 112 4 
163 1 136 1 83 1 104 2 54 1 360 1 272 1 257 1 169 1 116 2 374 5 133 1 44 3 150 2 46 5 112 4 
246 1 51 1 253 1 103 1 4 2 104 1 239 1 116 1 169 1 130 1 374 1 44 1 150 1 46 1 291 1 29 2 101 1 112 1 
208 1 249 1 83 1 167 1 104 1 239 1 116 2 374 1 44 1 150 1 46 1 80 1 112 1 
51 1 305 1 1 1 4 1 108 1 114 1 134 1 144 1 29 1 
98 1 108 1 221 1 
246 1 114 1 108 1 206 1 144 1 
246 1 233 1 292 1 37 2 114 2 53 1 144 2 41 2 241 1 297 1 140 1 118 1 280 1 98 1 108 1 206 2 28 1 111 1 221 1 
313 1 86 1 331 1 359 1 
313 1 331 1 341 1 227 1 36 1 359 1 201 1 
341 1 229 1 45 1 
313 1 56 2 330 1 21 1 331 1 341 3 227 1 36 1 359 1 300 1 201 3 328 1 
313 1 331 1 341 2 227 1 36 1 359 1 201 2 302 1 90 1 
293 1 154 1 143 1 21 1 287 1 341 1 227 1 36 1 359 1 152 1 201 1 
21 1 331 1 341 1 227 1 36 1 359 1 201 1 
313 1 21 1 331 2 341 1 227 1 36 1 201 1 
0 1 331 1 36 2 359 1 185 1 201 2 277 1 21 1 227 2 341 2 
293 1 331 1 36 1 359 2 201 3 322 1 313 1 8 1 21 1 227 1 341 3 244 1 302 2 
154 1 331 1 287 2 36 1 359 1 201 2 39 1 313 1 21 1 227 1 341 2 152 1 192 1 219 1 302 1 
293 1 331 1 36 2 359 2 201 4 313 1 8 1 21 1 227 2 341 4 367 1 302 2 90 1 
313 1 21 1 331 1 341 1 227 1 36 1 359 1 201 1 
293 1 331 2 36 1 359 3 18 1 201 4 56 1 313 2 8 1 341 4 227 1 300 1 328 1 302 2 
266 1 331 1 36 1 359 1 201 2 313 1 21 1 227 1 341 2 325 1 161 1 302 1 
313 1 56 2 21 1 331 1 341 3 227 1 36 1 359 1 300 1 47 1 201 3 328 2 
35 1 359 2 170 1 352 2 
21 1 341 1 227 1 36 1 232 1 201 1 
313 1 21 1 331 1 341 2 227 1 36 1 359 1 244 1 201 2 302 1 
245 1 
313 1 21 1 331 1 341 1 227 1 36 1 359 1 201 1 
313 1 56 1 21 1 331 1 341 3 227 1 36 1 359 1 244 1 201 3 302 1 
8 1 293 1 359 1 18 1 
331 1 359 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
145 2 191 4 0 1 213 1 62 1 175 2 214 1 5 9 63 6 217 3 130 2 258 1 15 1 67 2 85 2 138 1 182 1 246 1 106 9 105 1 51 1 374 1 250 5 208 1 252 2 301 2 116 1 356 1 
145 2 191 4 0 1 213 1 62 1 175 2 214 1 5 9 63 6 217 3 130 2 258 1 15 1 67 2 85 2 138 1 182 1 246 1 106 9 105 1 51 1 374 1 250 5 208 1 252 2 301 2 116 1 356 1 
145 2 191 5 0 1 213 1 62 1 175 2 214 1 5 10 63 7 217 4 130 2 258 1 15 1 67 2 85 2 138 1 182 1 246 1 106 10 105 1 51 1 374 1 250 6 208 1 252 2 301 2 116 1 356 1 
145 2 191 3 0 1 213 1 62 1 175 2 214 1 5 7 63 4 217 2 130 2 258 1 15 1 67 2 85 2 138 1 182 1 106 7 105 1 51 1 374 1 250 4 208 1 252 2 301 1 116 1 356 1 
145 1 191 2 138 1 246 1 106 4 175 1 62 1 374 1 250 3 214 1 5 4 63 3 217 1 130 1 252 1 301 2 15 1 85 1 
138 1 0 1 106 2 175 1 250 1 374 1 125 1 5 2 130 1 252 1 231 1 202 1 15 1 356 1 85 1 67 1 
191 1 138 1 106 3 374 1 250 2 5 3 63 1 217 1 208 1 252 2 15 1 85 2 67 1 
145 1 191 4 138 1 246 1 104 1 105 1 106 9 320 1 175 1 62 1 250 5 374 1 214 1 5 9 63 7 217 3 208 1 130 1 258 1 252 2 301 2 15 1 85 2 67 1 
145 1 191 4 138 1 246 1 104 1 105 1 106 9 320 1 175 1 62 1 250 5 374 1 214 1 5 9 63 7 217 3 208 1 130 1 258 1 252 2 301 2 15 1 85 2 67 1 
54 1 183 1 206 1 
183 1 150 2 60 1 
73 2 219 1 361 2 143 2 95 2 203 2 195 1 18 2 
29 1 31 1 327 1 122 1 361 3 36 1 195 1 151 2 197 1 219 1 336 2 242 1 200 2 134 1 221 1 203 2 178 1 157 1 342 1 18 2 265 1 161 1 348 1 247 1 228 1 227 1 73 2 377 1 299 1 168 1 230 2 93 2 115 1 143 3 95 2 119 1 358 1 
73 1 219 1 370 1 361 1 143 1 95 1 203 1 156 1 216 1 18 1 
256 1 183 1 372 1 361 1 282 1 38 1 216 1 54 1 286 1 92 1 132 1 95 1 143 1 367 1 
256 1 183 1 361 1 282 1 216 1 73 1 54 1 286 1 92 2 132 1 203 1 95 1 143 1 367 2 18 1 
99 1 41 1 92 1 154 1 367 1 
54 1 335 1 99 1 81 1 92 2 154 1 183 1 367 2 
99 1 92 1 367 1 
370 1 361 1 110 1 216 1 73 1 219 1 92 1 154 1 203 1 95 1 143 1 156 1 367 1 18 1 
183 1 
264 1 54 1 99 1 81 1 92 2 154 1 183 1 367 2 
120 2 359 1 361 1 235 1 307 2 126 2 238 1 283 1 216 1 257 2 284 1 219 1 99 2 81 1 154 2 203 1 156 1 367 5 18 1 266 1 263 2 86 1 370 1 183 2 110 1 21 1 72 5 73 1 207 1 54 2 112 2 92 5 324 1 56 1 57 1 143 1 95 1 118 4 
265 1 291 1 161 1 348 1 247 1 361 2 236 1 151 1 227 1 299 1 336 1 230 1 134 1 341 1 203 1 95 1 143 2 178 1 342 1 18 1 
206 1 195 1 
172 1 361 2 109 1 195 2 73 1 95 2 143 2 203 1 18 1 
291 1 347 1 121 1 
265 1 161 1 348 1 247 1 361 1 195 1 151 1 3 1 227 1 299 1 336 1 230 1 134 1 143 1 178 1 342 1 
73 1 361 3 143 3 95 3 203 3 195 1 236 1 18 3 
361 1 143 1 95 1 203 1 156 1 216 1 18 1 
73 1 172 1 361 1 109 1 143 1 95 1 203 1 216 1 18 1 
172 1 29 1 31 1 327 1 256 1 361 4 36 1 282 1 195 1 236 1 151 1 37 1 216 1 286 1 197 1 219 1 336 1 364 1 132 1 242 1 200 2 134 1 203 3 341 1 178 1 342 1 367 1 18 3 265 1 161 1 348 1 247 1 228 1 227 1 73 2 92 1 299 1 230 1 93 1 115 1 143 4 95 3 119 1 358 1 
40 1 372 1 361 2 143 2 95 2 203 1 195 1 236 1 18 1 
172 1 256 1 183 1 361 3 282 1 236 2 216 1 73 1 286 1 198 1 92 1 364 1 132 1 341 1 203 3 95 3 143 3 367 1 18 3 
73 1 291 1 172 1 121 1 361 2 143 2 95 2 203 2 236 1 18 2 
265 1 161 1 348 1 247 1 361 1 195 1 151 1 227 1 299 1 336 1 230 1 134 1 143 1 178 1 342 1 
265 1 348 1 294 1 247 1 361 1 195 1 151 1 227 1 299 1 336 1 230 1 55 1 143 1 178 1 342 1 
291 2 120 1 27 1 347 2 48 1 360 1 121 2 31 1 327 2 126 1 375 1 228 1 129 1 312 1 251 1 93 4 242 1 115 1 200 2 221 2 326 1 14 1 358 1 119 1 
256 1 361 1 143 1 95 1 203 1 261 1 216 1 18 1 
172 1 372 1 269 1 361 5 236 2 195 1 128 1 40 1 73 1 203 4 95 5 143 5 341 1 18 4 
361 2 143 2 95 2 203 2 261 1 156 1 216 1 18 2 
210 1 344 1 
210 1 344 1 
188 1 211 1 
188 1 211 1 
188 1 211 1 
210 1 76 1 344 1 
210 1 76 1 344 1 
8 1 210 1 344 1 
188 1 210 2 211 1 253 1 52 1 344 2 
210 1 76 1 344 1 
210 1 239 1 344 1 
210 1 239 1 344 1 
210 1 239 1 344 1 
146 2 20 1 77 1 248 1 281 1 183 1 87 2 139 2 52 1 218 1 275 1 92 2 210 2 315 2 325 3 367 2 344 2 262 2 254 1 
146 1 361 2 195 1 8 1 153 1 289 1 203 2 315 1 367 1 18 2 262 1 344 1 20 1 373 1 139 1 53 1 272 1 92 1 210 1 23 1 95 2 143 2 170 1 325 1 
145 1 130 1 175 1 
130 1 231 1 175 1 
145 2 285 1 334 1 231 1 175 3 233 1 
145 1 334 1 231 1 94 1 175 2 233 1 
145 1 334 1 231 1 175 2 233 2 
144 1 120 1 359 1 279 2 192 1 150 3 126 1 257 1 289 1 99 1 81 1 312 1 154 4 10 1 44 2 367 5 263 1 319 1 224 1 183 2 373 1 71 1 53 1 72 2 375 1 22 1 54 1 112 1 92 5 169 2 60 1 118 3 
144 3 120 3 359 1 279 6 150 9 33 5 238 1 126 3 257 2 64 1 99 6 41 5 81 1 312 3 154 7 10 2 367 9 263 2 224 2 183 5 108 1 53 4 72 6 375 3 22 1 54 1 112 2 141 1 92 9 209 1 355 1 169 6 24 1 60 3 118 8 
144 1 120 1 192 1 279 2 150 4 238 1 126 1 257 1 312 1 154 2 10 1 44 1 367 3 263 1 319 1 224 1 183 3 53 1 72 2 375 1 54 1 112 1 92 3 169 2 60 2 118 3 
144 2 120 2 279 4 192 1 150 7 238 1 126 2 257 1 64 1 312 2 10 1 154 3 44 2 367 4 263 1 319 1 224 1 183 4 53 2 72 4 375 2 54 1 112 1 141 1 92 4 169 4 355 1 60 3 118 5 
114 1 206 1 178 1 
278 1 178 1 
6 1 
247 1 178 1 
227 1 247 1 114 2 11 1 178 3 298 1 
227 1 247 1 178 1 
177 1 178 1 
266 1 303 1 120 1 27 2 305 1 360 3 327 3 126 1 21 1 111 1 284 1 98 1 311 1 93 7 260 2 221 4 380 1 
266 1 303 1 120 1 27 2 305 1 360 3 327 3 126 1 21 1 111 1 284 1 98 1 311 1 93 7 260 2 221 4 380 1 
266 1 303 1 120 1 27 2 305 1 360 3 173 1 327 3 126 1 21 1 111 1 284 1 98 1 311 1 93 7 260 2 221 4 380 1 
303 2 144 3 255 3 120 4 27 5 305 5 360 10 31 1 327 15 126 4 308 1 284 2 98 1 311 1 312 3 42 1 200 2 221 16 260 3 135 1 266 1 346 1 181 1 69 1 49 1 21 2 111 2 375 3 228 1 91 4 93 31 380 1 119 1 358 1 
303 1 120 1 27 3 360 4 305 1 31 2 327 4 126 1 308 1 284 1 98 1 311 1 200 4 221 5 260 2 82 1 159 1 266 1 111 1 21 1 228 2 93 9 119 2 358 2 
145 1 175 2 151 1 331 1 63 1 5 2 285 1 287 1 130 1 336 1 314 1 243 1 45 1 15 1 342 1 85 1 67 1 160 1 265 1 179 1 138 1 204 1 106 2 88 1 250 1 374 1 230 1 252 1 231 1 117 1 
145 1 175 2 151 1 331 1 5 3 63 2 285 1 130 1 336 1 43 1 314 1 243 1 45 1 15 1 342 1 85 1 67 1 160 1 265 1 179 1 138 1 204 1 106 3 88 1 250 1 229 1 230 1 252 1 231 1 276 1 
145 1 175 2 151 1 331 1 5 2 63 2 285 1 130 1 336 1 43 1 243 1 45 1 15 1 342 1 67 1 160 1 265 1 179 1 138 1 106 2 88 1 250 1 230 1 231 1 276 1 
265 1 179 2 68 1 247 1 106 1 123 1 88 2 151 1 5 1 229 1 299 1 336 1 252 1 230 1 300 1 290 1 58 1 45 2 190 1 178 1 342 1 67 2 85 1 
145 1 175 2 151 1 331 1 5 1 285 1 287 1 130 1 336 1 43 1 314 1 243 1 45 1 342 1 85 1 67 1 160 1 265 1 179 1 204 1 106 1 88 1 374 1 230 1 252 1 231 1 
100 1 
97 2 150 2 282 1 151 2 4 2 333 1 286 1 99 6 336 2 338 1 342 1 158 1 292 2 247 1 249 1 72 2 112 1 299 2 300 1 118 2 26 1 359 1 28 2 174 2 256 1 123 1 361 1 215 2 257 1 38 1 216 1 309 1 310 2 81 3 132 1 178 1 367 5 263 1 265 1 222 1 137 1 47 1 224 1 183 2 372 1 89 1 271 1 186 4 140 1 54 1 92 5 230 2 95 1 143 1 60 2 
28 1 256 1 361 1 282 1 38 1 216 1 286 1 99 2 81 1 132 1 338 1 158 1 367 3 222 1 264 1 249 1 372 1 186 2 140 1 92 3 143 1 95 1 
256 1 361 1 282 1 38 1 216 1 286 1 99 1 81 1 132 1 338 1 158 1 367 3 222 1 264 1 292 1 249 1 183 1 372 1 186 3 140 1 54 1 92 3 143 1 95 1 
28 1 256 1 361 1 282 1 215 1 38 1 216 1 286 1 81 1 99 2 132 1 338 1 158 1 367 3 264 1 222 1 292 1 249 1 183 1 372 1 186 3 140 1 54 1 92 3 143 1 95 1 
97 2 282 1 4 2 286 1 65 1 99 7 338 1 158 1 16 1 292 4 249 1 70 1 72 1 354 1 112 1 118 1 359 1 26 1 28 4 174 2 256 1 32 1 361 1 215 4 216 1 38 1 257 1 309 1 310 2 81 3 132 1 367 5 264 1 222 1 263 1 183 5 372 1 186 6 140 1 54 5 92 5 143 1 95 1 60 2 
97 2 150 2 282 1 4 2 286 1 99 4 338 1 158 1 292 2 249 1 72 1 112 1 118 1 359 1 26 1 174 2 28 2 256 1 361 1 215 2 216 1 257 1 38 1 309 1 310 2 81 2 132 1 367 4 263 1 222 1 137 1 183 2 372 1 186 4 140 1 54 1 92 4 143 1 95 1 60 2 
26 1 359 1 28 2 174 2 97 2 256 1 361 1 282 1 215 2 4 2 38 1 216 1 257 1 309 1 286 1 65 1 310 2 99 4 81 2 132 1 338 1 16 1 158 1 367 4 222 1 263 1 292 2 183 1 249 1 372 1 70 1 72 1 186 4 140 1 54 1 112 1 92 4 143 1 95 1 60 2 118 1 
26 1 359 1 28 2 174 2 97 2 256 1 361 1 282 1 215 2 4 2 38 1 216 1 257 1 309 1 286 1 65 1 310 2 99 4 81 2 132 1 338 1 16 1 158 1 367 4 222 1 263 1 292 2 183 1 249 1 372 1 70 1 72 1 186 4 140 1 54 1 112 1 92 4 143 1 95 1 60 2 118 1 
26 1 359 1 28 2 97 2 256 1 150 2 361 1 282 1 215 2 4 2 38 1 216 1 257 1 39 1 286 1 99 4 81 2 132 1 155 2 338 1 16 1 158 1 367 4 222 1 263 1 292 2 244 2 183 1 249 1 372 1 72 1 186 4 140 1 54 1 112 1 92 4 378 1 143 1 95 1 118 1 61 1 
26 1 359 1 174 2 97 2 28 3 256 1 361 1 282 1 4 2 215 3 257 1 38 1 216 1 309 1 286 1 65 1 310 2 81 2 99 5 132 1 338 1 16 1 158 1 367 4 263 1 222 1 292 3 183 1 249 1 372 1 70 1 72 1 186 5 140 1 54 1 112 1 354 1 92 4 143 1 95 1 60 2 118 1 
26 1 359 1 174 2 97 2 28 3 256 1 361 1 282 1 4 2 215 3 257 1 38 1 216 1 309 1 286 1 65 1 310 2 81 2 99 5 132 1 338 1 16 1 158 1 367 4 263 1 222 1 292 3 183 1 249 1 372 1 70 1 72 1 186 5 140 1 54 1 112 1 354 1 92 4 143 1 95 1 60 2 118 1 
97 2 150 2 282 1 4 2 286 1 99 4 338 1 155 2 158 1 244 2 292 2 249 1 72 1 112 1 118 1 359 1 26 1 28 2 256 1 361 1 215 2 216 1 257 1 38 1 39 1 81 2 132 1 367 4 263 1 222 1 137 1 183 1 372 1 186 4 140 1 54 1 92 4 143 1 95 1 
120 1 27 2 121 1 360 2 31 1 327 3 195 2 126 1 284 1 129 1 98 1 311 1 242 1 200 2 221 3 260 1 266 1 291 1 347 1 206 1 21 1 228 1 93 6 115 1 119 1 358 1 
144 2 255 3 120 1 27 1 305 1 360 2 121 4 31 2 327 6 36 1 195 1 126 2 312 2 42 1 242 1 200 4 221 8 368 1 46 1 291 11 347 11 181 1 205 1 164 1 375 1 228 2 377 1 91 3 113 1 93 14 115 2 119 2 358 2 
121 1 31 1 327 1 328 1 361 2 36 1 195 1 151 1 236 1 3 1 336 1 242 1 134 1 200 2 203 1 341 1 221 1 178 1 342 1 18 1 265 1 161 1 348 1 247 1 205 1 227 1 228 1 353 1 377 1 299 1 230 1 93 2 115 1 143 2 95 1 302 1 358 1 119 1 
144 2 327 10 1 2 195 2 151 3 236 1 284 1 7 2 98 1 336 3 339 1 242 3 200 6 341 1 203 1 342 2 18 1 291 7 161 2 347 7 348 2 247 2 205 1 21 1 296 2 74 1 299 1 115 3 119 3 358 3 120 3 27 4 29 2 121 7 305 4 360 8 31 3 361 3 36 1 124 1 126 3 80 2 311 1 312 2 43 1 134 2 260 1 221 10 178 2 266 1 265 2 375 2 228 3 227 2 377 1 230 3 93 20 95 1 143 3 
31 2 306 1 327 1 122 2 123 1 361 1 36 1 236 1 151 8 332 1 129 1 336 7 43 1 242 2 200 4 203 1 221 1 178 3 342 2 83 1 18 1 265 2 247 2 295 1 228 2 167 1 376 1 377 1 299 2 230 8 93 2 75 1 300 1 115 2 117 1 143 1 95 1 119 2 358 2 
144 1 172 1 120 1 27 1 360 1 121 1 31 1 149 1 327 2 361 1 126 1 312 1 242 1 200 2 203 1 221 1 18 1 291 1 347 1 205 1 375 1 73 1 228 1 93 3 115 1 95 1 143 1 119 1 358 1 
291 1 347 1 360 1 305 1 121 1 48 1 31 1 126 1 228 1 129 1 312 1 93 2 242 1 115 1 200 2 221 2 358 1 119 1 
291 1 120 1 27 1 347 1 360 1 121 1 31 1 327 2 375 1 228 1 129 1 93 2 242 1 115 1 200 2 14 1 358 1 119 1 
144 1 120 1 27 1 121 2 305 1 360 2 31 1 327 2 126 1 129 1 312 1 242 1 200 2 221 2 291 2 347 2 375 1 228 1 93 4 115 1 119 1 358 1 
291 1 347 1 360 1 305 1 121 1 48 1 31 1 126 1 228 1 376 1 312 1 93 2 242 1 115 1 200 2 221 2 358 1 119 1 
291 1 120 1 27 1 347 1 360 1 121 1 31 1 327 2 375 1 228 1 376 1 93 2 242 1 115 1 200 2 14 1 358 1 119 1 
144 1 120 1 27 1 121 2 305 1 360 2 31 1 327 2 126 1 312 1 242 1 200 2 221 2 291 2 347 2 375 1 228 1 376 1 93 4 115 1 119 1 358 1 
144 1 120 1 291 2 27 1 347 2 360 2 305 1 121 2 31 1 327 2 126 1 375 1 228 1 312 1 93 4 242 1 115 1 200 2 221 2 358 1 119 1 
29 1 31 1 327 1 361 1 36 1 195 1 151 1 336 1 242 1 134 1 200 2 221 1 178 1 342 1 265 1 161 1 348 1 247 1 227 1 228 1 377 1 299 1 230 1 93 2 115 1 143 1 358 1 119 1 
31 1 327 1 361 1 36 1 195 1 151 1 336 1 242 1 200 2 221 1 178 1 342 1 265 1 348 1 294 1 247 1 226 1 227 1 228 1 377 1 299 1 230 1 93 2 55 1 115 1 143 1 358 1 119 1 
144 1 120 1 27 1 121 2 305 1 360 2 31 1 327 2 126 1 312 1 242 1 200 2 221 2 291 2 347 2 205 1 375 1 228 1 93 4 115 1 119 1 358 1 
144 1 120 1 27 1 360 2 305 1 121 2 29 1 31 1 327 2 1 1 361 1 151 1 126 1 336 1 312 1 242 1 134 1 200 2 221 2 178 1 342 1 265 1 291 2 347 2 161 1 348 1 247 1 375 1 227 1 228 1 230 1 93 4 115 1 117 1 143 1 358 1 119 1 
144 1 120 1 172 1 360 1 305 1 121 1 31 1 327 1 361 1 126 1 312 1 242 1 200 2 203 1 221 2 18 1 291 1 347 1 205 1 225 1 375 1 73 1 228 1 93 3 115 1 95 1 143 1 119 1 358 1 
144 3 255 1 120 3 27 3 148 1 305 3 360 6 31 2 327 10 330 1 126 3 312 3 42 1 199 1 259 2 200 4 221 9 159 1 181 1 107 1 375 3 228 2 322 2 91 2 93 19 232 1 142 1 381 1 119 2 358 2 
144 3 120 2 255 2 27 2 148 2 305 2 360 4 30 1 31 3 327 12 78 1 330 1 126 3 308 2 312 3 337 1 199 1 42 2 133 1 259 1 200 6 221 14 159 1 103 1 107 1 187 1 375 2 228 3 322 4 91 2 93 26 232 2 119 3 358 3 
144 4 148 1 327 21 330 1 284 1 98 1 337 1 199 1 200 6 159 1 103 1 107 1 21 1 358 3 119 3 120 5 255 3 304 1 27 4 360 8 305 4 30 1 31 3 78 1 126 5 308 1 312 4 311 1 42 3 133 1 259 1 221 20 260 1 266 1 181 1 375 4 187 1 228 3 322 4 91 4 93 41 232 2 142 1 
144 4 255 3 120 4 304 1 27 4 148 1 30 1 305 3 360 7 31 4 327 18 78 1 330 1 126 5 308 2 284 1 98 1 311 1 312 4 337 1 42 3 199 1 133 1 259 1 200 8 260 1 221 20 159 1 266 1 103 1 181 1 107 1 21 1 187 1 375 3 228 4 322 4 91 4 93 38 232 2 142 1 119 4 358 4 
144 7 255 4 120 8 27 7 148 1 30 1 305 7 360 14 31 2 327 25 78 1 330 1 126 8 308 1 284 1 98 1 311 1 312 7 337 1 42 2 199 1 133 1 259 1 200 4 260 1 221 27 159 1 266 1 103 1 181 2 107 1 21 1 187 1 375 7 228 2 322 4 91 4 113 2 93 52 232 1 119 2 358 2 
146 1 77 1 193 1 210 1 281 1 139 1 315 1 52 1 262 1 344 1 
8 1 23 1 
146 1 210 1 201 1 139 1 315 1 237 1 196 1 262 1 344 1 
146 1 20 1 77 1 281 1 183 1 87 1 139 1 52 1 218 1 275 1 92 1 210 1 315 1 325 2 367 1 344 1 262 1 254 1 
146 1 20 1 77 1 281 1 183 1 87 1 139 1 52 1 218 1 275 1 92 1 210 1 315 1 325 2 367 1 344 1 262 1 254 1 
146 1 20 1 77 1 281 1 183 1 87 1 139 1 52 1 218 1 275 1 92 1 210 1 315 1 325 2 367 1 344 1 262 1 254 1 
25 1 76 1 253 1 
25 1 76 1 253 1 
371 1 239 1 
371 1 253 1 239 1 
153 1 170 1 
146 1 361 2 195 1 363 1 8 1 153 1 289 1 154 1 315 1 203 2 367 1 262 1 344 1 18 2 87 1 373 1 139 1 53 1 272 1 92 1 210 1 23 1 143 2 95 2 170 1 325 1 254 1 
25 1 76 1 
371 1 253 1 239 1 
31 1 306 1 212 1 327 1 122 2 361 2 2 1 36 1 151 2 332 1 9 1 336 2 242 1 200 2 221 1 178 1 342 1 265 1 268 1 247 1 205 1 228 1 377 1 230 2 93 2 115 1 143 2 95 2 277 1 358 1 119 1 
145 1 265 1 101 1 160 1 204 1 88 1 175 2 151 2 331 1 285 1 273 1 130 1 336 2 230 2 231 1 43 1 117 1 342 1 96 1 
145 1 101 1 160 1 265 1 204 1 88 1 175 2 151 1 331 1 285 1 130 1 336 1 230 1 231 1 43 1 66 1 342 1 
265 1 68 1 247 1 163 1 123 1 88 1 151 1 299 1 336 1 230 1 300 1 178 1 342 1 96 1 
145 1 101 1 160 1 265 1 204 1 88 1 175 2 151 1 331 1 285 1 273 1 130 1 336 1 230 1 231 1 43 1 342 1 96 1 
313 1 
54 1 86 1 183 1 56 1 206 1 118 1 72 1 
359 1 174 1 150 1 257 1 309 1 310 1 81 1 99 1 367 1 263 1 183 2 72 1 54 1 112 1 92 1 60 1 118 1 
278 3 144 2 147 1 279 6 150 12 151 3 286 2 7 2 336 3 99 5 11 1 342 4 162 1 247 3 351 2 72 8 352 1 207 2 112 4 299 1 114 2 169 6 117 1 357 2 118 9 171 2 359 4 120 2 307 2 126 2 257 4 127 2 177 2 81 3 312 2 178 10 136 1 367 5 84 1 265 3 263 4 47 1 86 1 224 2 50 2 183 8 270 2 375 2 227 3 54 2 92 5 230 3 56 1 60 6 
144 2 359 2 255 1 120 2 279 5 30 1 78 1 150 6 307 2 126 2 257 2 362 1 99 1 81 1 312 2 337 1 42 1 133 1 367 1 263 2 47 1 103 1 224 1 183 5 72 5 375 2 207 1 54 2 112 2 274 1 91 1 92 1 169 5 60 3 118 8 
359 1 120 1 361 1 307 2 283 1 126 2 216 1 257 1 284 1 65 1 219 1 203 1 156 1 367 1 18 1 263 1 266 1 370 1 110 1 21 1 72 2 73 1 207 1 112 1 92 1 143 1 95 1 118 2 
263 1 54 1 359 1 112 1 86 1 183 1 56 1 118 1 72 1 257 1 
144 2 120 2 279 5 150 10 183 5 307 2 126 2 72 5 375 2 207 1 7 1 312 2 169 5 60 5 118 5 
54 1 92 1 99 1 81 1 183 1 367 1 
359 1 123 1 151 4 79 1 238 1 333 1 257 2 336 4 99 4 81 2 366 1 178 1 136 2 342 1 367 3 265 1 263 2 47 2 162 1 247 1 224 2 271 1 72 2 112 2 299 2 92 3 230 4 300 1 118 2 
29 1 31 1 327 1 361 3 36 1 195 1 151 1 197 1 219 1 336 1 242 1 200 2 134 1 203 2 178 1 342 1 18 2 265 1 161 1 348 1 247 1 228 1 73 2 227 1 299 1 230 1 93 1 115 1 143 3 95 2 119 1 358 1 
263 1 359 1 47 1 279 2 224 1 150 4 183 4 72 2 257 1 54 2 112 1 169 2 260 1 60 2 118 1 
146 1 176 1 262 1 
146 1 176 1 262 1 
146 1 281 1 184 1 170 1 262 1 
146 1 176 1 262 1 
180 1 146 1 262 1 
180 1 146 1 262 1 
180 1 146 1 262 1 
146 1 262 1 
210 1 344 1 
266 1 120 1 27 2 305 1 360 3 31 2 327 4 126 1 21 1 308 1 284 1 228 2 98 1 311 1 93 8 200 4 260 1 221 4 358 2 119 2 
266 1 120 1 27 2 360 2 327 3 206 1 21 1 126 1 284 1 98 1 311 1 93 6 260 1 221 3 
144 1 120 1 27 1 293 1 360 2 305 1 31 1 327 2 126 1 375 1 228 1 312 1 93 4 200 2 221 2 358 1 119 1 
144 1 120 1 255 1 27 1 181 1 305 1 360 2 327 4 126 1 375 1 91 2 312 1 42 1 93 7 221 3 
144 2 255 2 120 3 27 5 360 9 305 4 31 2 327 12 126 3 308 2 284 2 98 1 311 1 312 2 200 4 260 1 221 11 266 1 46 1 181 1 21 2 375 2 228 2 166 1 91 2 113 1 93 23 358 2 119 2 
91 1 327 1 93 1 
255 1 93 1 221 1 
144 1 120 1 293 1 27 2 305 1 360 3 31 1 327 3 126 1 375 1 228 1 7 1 312 1 93 6 200 2 221 3 119 1 358 1 
144 2 255 1 120 2 27 1 305 1 30 1 360 2 31 1 327 6 78 1 126 2 312 2 337 1 42 1 133 1 200 2 221 6 159 1 103 1 375 2 228 1 91 1 93 12 119 1 358 1 
266 1 120 1 27 1 360 2 305 1 327 3 126 1 21 1 284 1 93 6 221 3 
27 1 305 1 360 2 31 1 327 2 21 1 308 1 284 1 228 1 166 1 98 1 311 1 93 3 200 2 221 1 358 1 119 1 
266 1 120 2 27 3 360 5 305 2 31 1 327 5 283 1 21 2 126 2 284 2 228 1 93 10 200 2 221 5 159 1 119 1 358 1 
305 1 360 1 31 1 126 1 228 1 312 1 93 2 200 2 221 2 159 1 358 1 119 1 
144 1 120 1 27 1 360 2 305 1 31 1 327 2 126 1 375 1 228 1 312 1 93 4 200 2 221 2 159 1 358 1 119 1 
27 1 360 2 305 1 31 3 327 2 21 1 308 1 284 1 228 3 166 1 93 3 200 6 142 1 221 1 159 1 358 3 119 3 
144 3 255 3 120 5 27 7 305 5 360 12 31 5 327 18 126 5 308 2 284 3 98 1 311 1 312 3 42 1 200 10 260 1 221 16 159 1 266 2 346 1 293 1 181 1 69 1 49 1 21 3 375 3 228 5 166 1 91 4 93 34 142 1 119 5 358 5 
120 1 255 1 27 2 360 2 31 1 327 4 78 1 126 1 284 1 98 1 311 1 42 1 200 2 260 1 221 4 159 1 266 1 21 1 228 1 91 1 93 8 119 1 358 1 
144 1 120 1 255 1 27 2 305 1 360 3 31 2 327 5 78 1 126 2 284 1 98 1 311 1 312 1 42 1 200 4 260 1 221 6 159 1 266 1 293 1 181 1 21 1 228 2 91 2 93 11 119 2 358 2 
144 2 255 1 120 3 27 3 305 1 30 1 360 4 31 3 327 10 78 1 126 3 308 1 284 1 98 1 311 1 312 2 337 1 42 1 133 1 200 6 260 1 221 9 159 1 266 1 103 1 293 1 21 1 375 2 228 3 91 1 93 19 119 3 358 3 
144 2 255 1 120 2 27 3 305 2 30 1 360 5 31 3 327 7 78 1 126 3 308 1 284 1 98 1 311 1 312 2 337 1 42 1 133 1 200 6 260 1 221 10 159 1 266 1 103 1 293 1 21 1 375 1 228 3 91 1 93 17 119 3 358 3 
120 1 255 1 27 2 360 2 31 1 327 4 78 1 126 1 284 1 98 1 311 1 42 1 200 2 260 1 221 4 159 1 266 1 21 1 228 1 91 1 93 8 119 1 358 1 
144 2 255 1 120 2 27 1 305 1 30 1 360 2 31 1 327 6 78 1 126 2 312 2 337 1 42 1 133 1 200 2 221 6 159 1 103 1 375 2 228 1 91 1 93 12 119 1 358 1 
144 2 255 1 120 2 27 3 305 2 30 1 360 5 31 4 327 8 78 1 126 3 308 2 284 1 98 1 311 1 312 2 337 1 42 1 133 1 200 8 260 1 221 10 159 1 266 1 103 1 293 1 21 1 375 1 228 4 91 1 93 18 119 4 358 4 
144 3 255 1 120 2 27 3 305 3 30 1 360 6 31 4 327 7 78 1 126 3 308 2 312 3 337 1 42 1 133 1 200 8 221 9 159 1 103 1 375 2 228 4 91 1 93 16 142 1 119 4 358 4 
266 1 120 1 27 3 360 6 305 3 327 4 21 3 126 1 284 3 98 2 311 1 93 7 221 3 
144 2 255 1 120 2 27 3 305 1 30 1 360 4 31 4 327 8 78 1 126 3 308 2 284 1 98 1 311 1 312 2 337 1 42 1 133 1 200 8 260 1 221 10 159 1 266 1 103 1 21 1 375 1 228 4 91 1 93 18 142 1 119 4 358 4 
40 1 280 1 372 1 361 1 143 1 95 1 195 1 
369 1 280 1 372 1 361 1 195 1 165 1 240 1 40 1 12 1 95 1 143 1 318 1 
265 1 336 1 299 1 247 1 230 1 123 1 300 1 206 1 178 1 151 1 342 1 
265 1 348 1 247 1 361 2 195 1 236 1 151 1 227 1 299 1 336 1 230 1 134 1 203 1 95 1 143 2 178 1 342 1 18 1 
256 1 361 2 282 1 195 1 151 1 236 1 216 1 177 1 336 1 134 1 203 1 178 3 136 1 342 1 18 2 265 1 348 1 247 2 351 1 227 2 230 1 143 2 95 2 
256 1 361 2 282 1 195 1 151 2 236 1 216 1 177 1 152 1 336 2 203 1 178 3 136 1 342 1 18 2 265 1 348 1 294 1 247 2 351 1 227 2 230 2 143 2 95 2 
278 1 151 3 177 1 152 1 286 1 99 1 336 3 178 4 136 1 342 1 367 2 265 1 223 1 247 1 183 1 351 1 321 1 227 1 54 1 92 2 299 1 114 1 230 3 
278 1 265 1 247 1 183 1 151 3 351 1 127 1 177 1 227 1 152 1 54 1 286 1 299 1 92 2 336 3 99 1 230 3 114 1 178 4 342 1 136 1 367 2 
265 1 167 1 336 1 230 1 151 1 342 1 
265 2 306 1 247 2 122 1 295 1 194 1 34 1 151 7 227 1 167 1 299 2 336 6 230 7 43 1 75 1 11 1 117 1 178 3 342 3 83 1 17 1 
327 3 1 1 151 1 236 1 195 2 284 1 98 1 336 1 242 2 200 4 203 1 342 1 18 1 291 1 161 1 347 1 348 1 247 1 205 1 296 1 21 1 115 2 117 1 119 2 358 2 120 1 27 2 121 1 29 1 360 2 31 2 361 2 126 1 311 1 134 1 221 3 260 1 178 1 265 1 266 1 228 2 227 1 230 1 93 6 95 1 143 2 277 1 
278 1 359 2 151 1 257 2 127 1 286 1 336 1 99 2 81 1 154 1 178 2 367 3 263 2 86 1 162 1 183 1 270 1 72 1 54 1 112 2 299 1 92 3 230 1 114 1 56 1 118 1 357 1 171 1 
265 1 247 1 151 2 227 1 167 1 336 2 114 1 230 2 11 1 117 1 178 2 342 2 84 1 
265 1 245 1 247 1 123 1 151 4 152 1 299 1 336 4 230 4 300 1 117 1 178 1 342 1 
265 1 247 1 34 1 151 2 227 1 90 1 336 2 230 2 339 1 178 1 136 1 342 2 17 1 343 1 
265 1 160 1 130 1 336 1 299 1 230 1 231 1 175 1 151 1 342 1 
265 1 268 1 306 1 247 1 151 2 336 2 230 2 43 1 117 1 178 1 342 1 
265 2 245 1 306 1 247 2 295 1 123 1 151 5 299 1 336 4 230 5 300 1 75 1 117 1 178 3 136 1 342 2 
265 2 245 1 306 1 247 2 123 1 35 1 151 5 299 1 336 4 230 5 300 1 75 1 117 1 178 3 136 1 342 2 
265 1 348 1 294 1 247 1 361 2 195 1 236 1 151 1 227 1 299 1 336 1 230 1 203 1 95 1 143 2 178 1 342 1 18 1 
265 1 247 1 194 1 34 1 151 1 227 1 336 1 230 1 11 1 178 1 136 1 342 2 17 1 
9 1 220 1 212 1 350 1 361 1 143 1 95 1 2 1 185 1 
131 1 185 1 297 1 
220 1 350 1 189 1 195 1 185 1 
256 1 183 1 350 2 282 1 195 1 185 1 216 1 297 1 54 1 286 1 220 2 92 2 364 1 365 1 154 1 131 1 132 1 189 2 367 2 
138 1 206 1 250 1 15 1 
138 1 106 1 252 1 250 1 15 1 5 1 85 1 
45 1 5 1 67 1 
102 1 138 1 0 2 106 3 250 1 374 1 5 3 252 1 340 1 59 1 15 1 85 1 
138 1 106 2 252 1 301 1 250 1 15 1 63 1 5 2 85 1 
145 1 191 1 106 1 62 1 175 1 374 1 250 1 5 1 130 1 252 1 85 1 
106 1 252 1 250 1 374 1 15 1 5 1 85 1 
138 1 106 1 252 1 374 1 15 2 5 1 85 1 
19 1 106 2 250 1 374 1 5 2 252 2 379 1 13 1 15 1 85 2 
191 1 138 1 106 3 105 1 374 1 250 2 5 3 63 2 217 1 258 1 252 1 15 1 85 1 
145 1 138 1 106 2 175 2 250 1 374 1 5 2 63 1 285 1 130 1 252 1 231 1 316 1 15 1 85 1 
191 1 138 1 246 1 106 4 374 1 250 2 5 4 63 2 217 1 252 2 301 1 15 1 85 2 
138 1 106 1 252 1 250 1 374 1 15 1 5 1 85 1 
102 1 191 1 138 2 0 1 106 4 250 3 63 2 5 4 217 1 323 1 252 1 59 1 15 2 85 1 
138 1 104 1 106 2 234 1 250 1 374 1 5 2 63 1 241 1 252 1 15 1 85 1 
345 1 102 1 138 1 0 2 106 3 250 1 374 1 5 3 252 1 59 2 15 1 85 1 
288 1 349 1 329 2 250 2 
267 1 106 1 252 1 374 1 5 1 85 1 
138 1 258 1 106 2 252 1 250 1 374 1 15 1 63 1 5 2 85 1 
317 1 
138 1 106 1 252 1 250 1 374 1 15 1 5 1 85 1 
138 1 0 1 106 3 374 1 250 1 63 1 5 3 258 1 252 1 15 1 85 1 
191 1 323 1 250 1 217 1 
250 1 15 1 

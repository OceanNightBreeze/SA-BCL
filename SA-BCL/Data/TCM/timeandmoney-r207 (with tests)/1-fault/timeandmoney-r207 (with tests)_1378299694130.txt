#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
229 1 72 1 187 1 167 2 48 2 258 2 191 5 123 2 316 4 366 1 177 2 243 2 368 1 348 2 268 1 299 1 37 1 324 1 181 3 160 6 304 1 308 9 138 1 87 1 66 1 15 1 112 1 212 9 
229 1 72 1 187 1 48 2 167 2 258 2 191 5 123 2 316 4 366 1 177 2 243 2 368 1 348 2 268 1 299 1 37 1 324 1 181 3 160 6 304 1 308 9 138 1 87 1 66 1 15 1 112 1 212 9 
229 1 72 1 187 1 48 2 167 2 258 2 191 6 123 2 316 5 366 1 177 2 243 2 368 1 348 2 268 1 299 1 37 1 324 1 181 4 160 7 304 1 308 10 138 1 87 1 66 1 15 1 112 1 212 10 
229 1 72 1 187 1 48 2 167 2 258 2 191 4 123 2 316 3 366 1 177 1 243 2 368 1 348 2 268 1 299 1 37 1 324 1 181 2 160 4 308 7 138 1 87 1 66 1 15 1 112 1 212 7 
348 1 187 1 181 1 160 3 167 1 48 1 258 1 191 3 304 1 138 1 308 4 87 1 123 1 112 1 316 2 212 4 177 2 366 1 
229 1 268 1 348 1 187 1 167 1 288 1 258 1 191 1 138 1 308 2 14 1 123 1 112 1 212 2 318 1 243 1 
348 2 187 1 181 1 160 1 167 2 191 2 138 1 308 3 15 1 112 1 316 1 212 3 243 1 
187 1 167 2 48 1 258 1 191 5 123 1 316 4 177 2 366 1 243 1 348 2 37 1 324 1 181 3 39 1 160 7 304 1 308 9 138 1 87 1 277 1 15 1 112 1 212 9 
187 1 167 2 48 1 258 1 191 5 123 1 316 4 177 2 366 1 243 1 348 2 37 1 324 1 181 3 39 1 160 7 304 1 308 9 138 1 87 1 277 1 15 1 112 1 212 9 
209 1 33 1 182 1 
93 1 297 2 182 1 
347 2 337 2 98 2 184 2 225 2 34 1 178 2 354 1 
21 1 284 1 337 2 230 2 24 2 116 1 171 1 98 3 54 2 238 1 78 1 261 1 262 1 34 1 153 1 6 1 124 1 178 2 200 2 126 1 347 3 60 2 81 1 179 1 156 1 83 1 202 1 85 1 64 1 354 1 42 1 163 1 184 2 111 1 225 2 279 1 17 1 
0 1 347 1 337 1 98 1 260 1 184 1 225 1 34 1 178 1 50 1 
0 1 347 1 61 1 157 1 182 1 98 1 162 1 32 1 33 1 210 1 151 1 196 1 102 1 178 1 
0 1 337 1 347 1 61 1 157 2 182 1 162 2 98 1 184 1 33 1 225 1 151 1 196 1 102 1 178 1 
115 1 162 1 339 1 157 1 325 1 
162 2 339 1 43 1 157 2 325 1 33 1 321 1 182 1 
162 1 157 1 325 1 
0 1 199 1 337 1 347 1 339 1 157 1 50 1 162 1 98 1 260 1 184 1 34 1 225 1 178 1 
182 1 
162 2 339 1 43 1 166 1 157 2 325 1 33 1 182 1 
219 1 339 2 157 5 325 2 189 1 159 1 182 1 205 1 342 2 162 5 52 1 43 1 5 1 149 2 33 1 266 1 241 1 217 1 45 2 
209 1 354 1 
347 2 337 1 74 1 354 2 98 2 184 1 225 1 59 1 178 2 
294 1 249 1 287 1 
347 1 60 1 81 1 230 1 179 1 156 1 83 1 85 1 354 1 251 1 98 1 54 1 171 1 262 1 17 1 124 1 
337 1 347 2 60 1 81 1 179 1 230 1 156 1 95 1 83 1 85 1 314 1 287 1 171 1 98 2 54 1 184 1 262 1 17 1 124 1 178 1 
347 3 337 3 98 3 184 3 95 1 225 1 178 3 354 1 
0 1 347 1 337 1 98 1 184 1 178 1 50 1 
0 1 347 1 337 1 98 1 184 1 225 1 59 1 178 1 74 1 
284 1 0 1 337 3 230 1 95 1 314 1 24 1 74 1 171 1 98 4 54 1 262 1 261 1 78 1 151 1 196 1 34 1 153 1 6 1 102 1 124 1 178 3 200 2 347 4 60 1 81 1 179 1 156 1 61 1 157 1 83 1 202 1 85 1 64 1 354 1 42 1 162 1 185 1 184 3 111 1 225 2 279 1 280 1 17 1 
347 2 337 1 98 2 184 1 330 1 95 1 32 1 178 2 354 1 
0 1 337 3 347 3 201 1 157 1 61 1 95 2 314 1 74 1 182 1 162 1 98 3 184 3 185 1 225 1 151 1 196 1 102 1 178 3 
337 2 347 2 95 1 249 1 287 1 74 1 98 2 184 2 225 1 178 2 
347 1 60 1 81 1 230 1 179 1 156 1 83 1 85 1 354 1 98 1 54 1 171 1 262 1 17 1 124 1 
347 1 60 1 81 1 230 1 179 1 145 1 156 1 83 1 85 1 354 1 98 1 54 1 171 1 152 1 124 1 
21 2 284 1 47 1 313 1 235 1 237 1 24 4 287 2 75 1 29 1 294 2 173 1 6 1 153 2 265 1 200 2 202 1 249 2 204 1 136 1 42 1 12 1 111 1 279 1 
0 1 347 1 337 1 98 1 184 1 196 1 178 1 113 1 
337 4 347 5 95 2 231 1 257 1 314 1 74 1 354 1 98 5 184 4 330 1 32 1 225 1 178 5 
0 1 347 2 337 2 98 2 184 2 113 1 178 2 50 1 
285 1 255 1 
285 1 255 1 
26 1 358 1 
26 1 358 1 
26 1 358 1 
285 1 357 1 255 1 
285 1 357 1 255 1 
285 1 255 1 380 1 
306 1 26 1 285 2 358 1 255 2 303 1 
285 1 357 1 255 1 
285 1 38 1 255 1 
285 1 38 1 255 1 
285 1 38 1 255 1 
285 2 127 2 338 3 359 1 157 2 234 1 10 1 3 1 182 1 273 2 306 1 106 2 162 2 208 1 292 1 333 2 255 2 345 2 283 1 
337 2 285 1 338 1 169 1 98 2 176 1 178 2 347 2 127 1 157 1 132 1 84 1 40 1 327 1 354 1 273 1 106 1 162 1 184 2 333 1 332 1 255 1 283 1 380 1 
123 1 48 1 258 1 
123 1 288 1 258 1 
155 1 2 1 67 1 48 2 288 1 258 3 
155 1 2 1 48 1 288 1 258 2 192 1 
155 2 2 1 48 1 288 1 258 2 
69 1 339 4 143 1 47 1 93 1 147 1 189 1 235 1 289 2 342 1 149 1 173 1 33 1 297 3 176 1 241 3 217 2 218 2 104 1 157 5 325 1 180 2 84 1 327 1 204 1 182 2 11 1 162 5 43 1 19 1 379 1 45 1 
339 7 47 3 93 3 147 3 188 5 189 1 235 3 289 6 342 2 115 5 170 1 149 2 173 3 33 1 175 1 297 9 216 1 241 8 217 6 218 6 219 1 104 1 157 9 325 6 327 4 204 3 182 5 11 2 162 9 161 1 253 1 43 1 335 1 379 2 45 2 
69 1 339 2 143 1 47 1 93 2 147 1 235 1 289 2 342 1 149 1 33 1 173 1 297 4 241 3 217 2 218 2 219 1 157 3 180 1 327 1 204 1 182 3 11 1 162 3 379 1 45 1 
69 1 143 1 339 3 47 2 93 3 147 2 235 2 289 4 342 1 170 1 149 1 33 1 173 2 297 7 175 1 216 1 241 5 217 4 218 4 219 1 157 4 180 2 327 2 204 2 182 4 11 1 162 4 379 1 45 1 
28 1 156 1 209 1 
156 1 190 1 
236 1 
156 1 124 1 
28 2 171 1 156 3 174 1 91 1 124 1 
171 1 156 1 124 1 
156 1 56 1 
21 4 71 1 36 1 128 1 129 1 248 1 235 1 24 7 136 2 12 3 365 1 172 1 173 1 356 2 153 3 154 1 244 1 
21 4 71 1 36 1 128 1 129 1 248 1 235 1 24 7 136 2 12 3 365 1 172 1 173 1 356 2 153 3 154 1 244 1 
21 4 71 1 36 1 128 1 129 1 248 1 235 1 24 7 136 2 375 1 12 3 365 1 172 1 173 1 356 2 153 3 154 1 244 1 
284 1 21 16 71 5 47 3 147 3 235 4 24 31 315 1 259 1 365 2 172 2 264 1 296 3 173 4 6 1 153 15 344 1 154 1 367 1 244 1 200 2 129 1 128 1 9 4 36 2 202 1 248 2 374 1 204 3 136 5 42 1 252 1 12 10 356 3 
284 2 21 5 71 1 235 1 24 9 172 1 365 1 264 1 173 1 6 2 153 4 154 1 244 1 200 4 36 1 129 1 202 2 248 1 329 1 353 1 136 3 42 2 12 4 356 2 
230 1 187 1 286 1 48 1 167 1 288 1 258 2 191 1 54 1 123 1 295 1 317 1 57 1 242 1 243 1 60 1 348 1 179 1 351 1 131 1 134 1 160 1 85 1 41 1 206 1 308 2 138 1 67 1 112 1 212 2 
230 1 187 1 286 1 48 1 167 1 288 1 258 2 191 1 193 1 54 1 123 1 295 1 317 1 57 1 242 1 320 1 243 1 60 1 348 1 179 1 351 1 131 1 160 2 85 1 41 1 308 3 186 1 67 1 112 1 212 3 
230 1 187 1 288 1 48 1 258 2 191 1 193 1 54 1 123 1 295 1 317 1 57 1 242 1 243 1 320 1 60 1 179 1 131 1 160 2 85 1 41 1 308 2 67 1 112 1 212 2 
230 1 167 1 54 1 122 1 99 1 295 2 317 2 242 2 243 2 124 1 60 1 81 1 348 1 179 1 156 1 371 1 85 1 250 1 305 1 308 1 186 1 378 1 212 1 
230 1 286 1 48 1 167 1 288 1 258 2 54 1 123 1 295 1 317 1 57 1 242 1 320 1 243 1 60 1 348 1 179 1 351 1 131 1 134 1 85 1 41 1 308 1 138 1 67 1 212 1 
58 1 
0 1 230 2 93 2 189 1 49 4 96 1 194 1 342 1 54 2 98 1 4 1 99 1 149 1 151 1 196 1 297 2 102 1 241 2 60 2 347 1 156 1 157 5 61 1 11 1 307 2 162 5 210 1 70 1 312 1 23 2 119 1 121 2 32 1 215 2 33 1 217 2 124 1 178 1 369 1 81 2 179 1 325 6 85 1 328 1 222 1 272 2 182 2 86 2 43 3 275 1 224 1 88 2 378 1 226 1 45 1 
0 1 166 1 312 1 49 2 194 1 98 1 32 1 151 1 196 1 102 1 178 1 347 1 157 3 61 1 325 2 222 1 307 1 162 3 224 1 275 1 43 1 210 1 
0 1 166 1 312 1 49 3 194 1 98 1 32 1 151 1 196 1 33 1 102 1 178 1 347 1 157 3 61 1 325 1 222 1 272 1 182 1 162 3 224 1 275 1 43 1 210 1 
0 1 166 1 312 1 49 3 194 1 98 1 32 1 215 1 151 1 196 1 33 1 102 1 178 1 347 1 157 3 61 1 325 2 222 1 272 1 182 1 307 1 162 3 43 1 224 1 275 1 210 1 
0 1 93 2 189 1 49 6 194 1 342 1 98 1 149 1 196 1 151 1 102 1 55 1 241 1 103 1 347 1 61 1 157 5 350 1 307 4 162 5 109 1 210 1 256 1 70 1 166 1 312 1 23 2 121 2 32 1 215 4 33 5 217 1 178 1 325 7 222 1 272 4 182 5 86 2 43 3 275 1 224 1 88 2 226 1 45 1 
0 1 93 2 189 1 49 4 194 1 342 1 98 1 4 1 149 1 196 1 151 1 102 1 297 2 241 1 347 1 61 1 157 4 307 2 162 4 210 1 70 1 312 1 23 2 121 2 32 1 215 2 33 1 217 1 178 1 325 4 222 1 272 2 182 2 86 2 275 1 224 1 43 2 88 2 226 1 45 1 
0 1 70 1 93 2 312 1 23 2 189 1 49 4 194 1 342 1 98 1 121 2 32 1 215 2 149 1 33 1 151 1 196 1 102 1 55 1 241 1 103 1 217 1 178 1 347 1 157 4 61 1 325 4 222 1 272 2 182 1 307 2 86 2 162 4 43 2 224 1 275 1 109 1 88 2 210 1 226 1 45 1 
0 1 70 1 93 2 312 1 23 2 189 1 49 4 194 1 342 1 98 1 121 2 32 1 215 2 149 1 33 1 151 1 196 1 102 1 55 1 241 1 103 1 217 1 178 1 347 1 157 4 61 1 325 4 222 1 272 2 182 1 307 2 86 2 162 4 43 2 224 1 275 1 109 1 88 2 210 1 226 1 45 1 
310 2 0 1 70 1 92 1 312 1 189 1 341 1 49 4 194 1 342 1 76 2 98 1 117 1 121 2 32 1 215 2 149 1 33 1 151 1 196 1 297 2 102 1 241 1 103 1 217 1 178 1 347 1 157 4 61 1 325 4 222 1 272 2 182 1 307 2 86 2 162 4 43 2 224 1 275 1 210 1 45 1 
0 1 70 1 93 2 312 1 23 2 189 1 49 5 194 1 342 1 98 1 121 2 32 1 149 1 215 3 33 1 151 1 196 1 55 1 102 1 241 1 103 1 217 1 178 1 347 1 157 4 61 1 350 1 325 5 222 1 272 3 182 1 86 2 307 3 162 4 43 2 224 1 275 1 109 1 88 2 210 1 226 1 45 1 
0 1 70 1 93 2 312 1 23 2 189 1 49 5 194 1 342 1 98 1 121 2 32 1 149 1 215 3 33 1 151 1 196 1 55 1 102 1 241 1 103 1 217 1 178 1 347 1 157 4 61 1 350 1 325 5 222 1 272 3 182 1 86 2 307 3 162 4 43 2 224 1 275 1 109 1 88 2 210 1 226 1 45 1 
0 1 92 1 189 1 49 4 194 1 342 1 98 1 4 1 149 1 196 1 151 1 102 1 297 2 241 1 347 1 61 1 157 4 307 2 162 4 210 1 310 2 70 1 312 1 76 2 121 2 32 1 215 2 33 1 217 1 178 1 325 4 222 1 272 2 182 1 86 2 275 1 224 1 43 2 45 1 
284 1 21 3 235 1 287 1 24 6 29 1 365 1 294 1 173 1 6 1 153 3 154 1 244 1 200 2 129 1 202 1 248 1 249 1 136 2 42 1 354 2 12 2 209 1 111 1 356 1 279 1 
284 2 21 8 71 1 47 1 147 2 233 1 235 2 24 14 287 11 238 1 195 1 294 11 296 3 173 1 153 6 6 2 200 4 221 1 9 3 202 2 249 4 374 1 204 2 64 1 136 1 354 1 42 2 252 1 12 2 355 1 211 1 111 2 279 1 
284 1 21 1 337 1 230 1 95 1 361 1 314 1 24 2 171 1 54 1 98 2 238 1 262 1 6 1 153 1 124 1 178 1 200 2 60 1 221 1 347 2 81 1 179 1 156 1 130 1 83 1 202 1 85 1 301 1 249 1 64 1 354 1 42 1 251 1 184 1 111 1 279 1 17 1 
284 3 337 1 230 3 95 1 47 2 147 2 235 3 287 7 54 3 98 3 238 1 294 7 343 1 153 10 6 3 154 1 244 1 200 6 60 3 347 3 156 2 62 2 202 3 203 2 248 1 249 7 204 2 64 1 354 2 12 8 356 1 111 3 17 2 21 10 71 4 314 1 362 1 24 20 171 2 214 2 261 2 262 2 365 1 173 3 320 1 178 1 124 2 221 1 81 1 129 1 82 2 179 2 83 2 135 1 85 2 136 4 42 3 184 1 279 3 
284 2 21 1 337 1 46 1 230 8 95 1 94 1 24 2 363 1 29 1 98 1 54 7 238 1 99 1 293 1 6 2 153 1 320 1 178 1 124 2 200 4 126 2 347 1 60 8 349 1 81 2 179 2 156 3 202 2 85 2 64 1 42 2 206 1 184 1 65 1 378 1 111 2 279 2 336 1 
284 1 21 1 337 1 47 1 147 1 235 1 287 1 24 3 74 1 364 1 98 1 294 1 173 1 6 1 153 2 178 1 200 2 221 1 347 1 202 1 249 1 204 1 136 1 42 1 12 1 184 1 225 1 111 1 279 1 
200 2 284 1 21 2 71 1 202 1 235 1 249 1 287 1 24 2 204 1 42 1 29 1 12 1 294 1 111 1 279 1 6 1 265 1 
200 2 284 1 47 1 202 1 313 1 249 1 287 1 24 2 136 1 42 1 29 1 12 1 294 1 111 1 173 1 279 1 6 1 153 2 
21 2 284 1 71 1 47 1 147 1 235 1 24 4 287 2 29 1 294 2 173 1 6 1 153 2 200 2 202 1 249 2 204 1 136 1 42 1 12 2 111 1 279 1 
200 2 284 1 21 2 71 1 94 1 202 1 235 1 249 1 287 1 24 2 204 1 42 1 12 1 294 1 111 1 279 1 6 1 265 1 
200 2 284 1 94 1 47 1 202 1 313 1 249 1 287 1 24 2 136 1 42 1 12 1 294 1 111 1 173 1 279 1 6 1 153 2 
21 2 284 1 71 1 94 1 47 1 147 1 235 1 24 4 287 2 294 2 173 1 6 1 153 2 200 2 202 1 249 2 204 1 136 1 42 1 12 2 111 1 279 1 
21 2 284 1 71 1 47 1 147 1 235 1 24 4 287 2 294 2 173 1 6 1 153 2 200 2 202 1 249 2 204 1 136 1 42 1 12 2 111 1 279 1 
21 1 284 1 230 1 24 2 171 1 54 1 98 1 238 1 262 1 261 1 6 1 153 1 124 1 200 2 60 1 347 1 81 1 179 1 156 1 83 1 202 1 85 1 64 1 354 1 42 1 111 1 279 1 17 1 
21 1 284 1 230 1 145 1 24 2 171 1 54 1 98 1 238 1 152 1 6 1 153 1 124 1 200 2 60 1 347 1 81 1 179 1 156 1 83 1 202 1 85 1 64 1 354 1 137 1 42 1 111 1 279 1 
21 2 284 1 71 1 47 1 147 1 235 1 24 4 287 2 294 2 173 1 6 1 153 2 200 2 221 1 202 1 249 2 204 1 136 1 42 1 12 2 111 1 279 1 
21 2 284 1 71 1 230 1 47 1 147 1 235 1 287 2 24 4 171 1 54 1 98 1 262 1 261 1 294 2 173 1 153 2 6 1 124 1 200 2 60 1 347 1 179 1 82 1 156 1 83 1 202 1 85 1 249 2 204 1 136 1 42 1 206 1 12 2 111 1 279 1 17 1 
284 1 20 1 21 2 337 1 71 1 47 1 147 1 235 1 24 3 287 1 74 1 98 1 294 1 173 1 153 1 6 1 178 1 200 2 221 1 347 1 202 1 249 1 204 1 42 1 12 1 184 1 225 1 111 1 279 1 
284 2 21 9 71 3 47 3 147 3 235 3 24 19 290 1 30 1 296 1 173 3 6 2 153 10 319 1 200 4 220 1 9 2 202 2 374 1 204 3 136 3 302 1 353 1 42 2 252 1 12 6 377 1 44 2 278 1 89 2 
284 3 21 14 71 2 47 2 147 3 235 3 24 26 168 1 290 2 30 1 264 2 173 2 296 2 153 12 6 3 319 2 346 1 200 6 220 1 9 2 300 1 202 3 204 3 136 2 302 1 353 1 42 3 223 1 252 2 12 4 254 1 44 1 164 1 89 4 
284 3 47 4 147 4 235 5 290 2 296 3 153 21 6 3 154 1 244 1 346 1 200 6 9 4 300 1 202 3 248 1 204 4 353 1 302 1 252 3 12 8 254 1 164 1 356 1 21 20 71 4 24 41 168 1 27 1 30 1 365 1 264 1 173 5 319 1 220 1 129 1 374 1 136 4 42 3 223 1 377 1 44 1 89 4 
284 4 21 20 71 3 47 3 147 4 235 5 24 38 168 1 290 2 27 1 30 1 365 1 264 2 296 3 173 4 6 4 153 18 154 1 319 1 244 1 346 1 200 8 220 1 129 1 9 4 300 1 202 4 248 1 374 1 204 4 136 4 302 1 353 1 42 4 223 1 252 3 12 7 254 1 377 1 44 1 356 1 164 1 89 4 
284 2 21 27 71 7 47 7 147 7 235 8 24 52 168 1 290 1 30 1 365 1 195 2 264 1 296 4 173 8 6 2 153 25 154 1 319 1 244 1 346 1 200 4 220 1 129 1 9 4 300 1 202 2 248 1 374 2 204 7 136 7 302 1 353 1 42 2 223 1 252 2 12 14 254 1 44 1 356 1 164 1 89 4 
306 1 106 1 285 1 246 1 127 1 359 1 208 1 333 1 255 1 273 1 
40 1 380 1 
106 1 285 1 127 1 207 1 270 1 333 1 255 1 141 1 273 1 
285 1 127 1 338 2 359 1 157 1 234 1 3 1 182 1 273 1 306 1 106 1 162 1 208 1 292 1 333 1 255 1 345 1 283 1 
285 1 127 1 338 2 359 1 157 1 234 1 3 1 182 1 273 1 306 1 106 1 162 1 208 1 292 1 333 1 255 1 345 1 283 1 
285 1 127 1 338 2 359 1 157 1 234 1 3 1 182 1 273 1 306 1 106 1 162 1 208 1 292 1 333 1 255 1 345 1 283 1 
79 1 357 1 303 1 
79 1 357 1 303 1 
232 1 38 1 
232 1 38 1 303 1 
132 1 169 1 
285 1 337 2 339 1 338 1 234 1 213 1 169 1 98 2 176 1 178 2 345 1 347 2 127 1 157 1 132 1 84 1 40 1 327 1 354 1 273 1 106 1 162 1 184 2 333 1 332 1 255 1 380 1 
79 1 357 1 
232 1 38 1 303 1 
309 1 284 1 21 1 230 2 24 2 98 2 54 2 238 1 293 1 6 1 153 1 197 1 124 1 178 2 80 1 200 2 126 2 60 2 221 1 347 2 179 1 156 1 158 1 202 1 85 1 373 1 64 1 42 1 111 1 279 1 336 1 
60 2 267 1 179 1 230 2 351 1 131 1 85 1 48 1 288 1 258 2 206 1 54 2 118 1 120 1 123 1 67 1 57 1 242 1 320 1 
60 1 230 1 179 1 351 1 131 1 85 1 48 1 288 1 258 2 274 1 54 1 120 1 123 1 67 1 57 1 242 1 320 1 
60 1 81 1 267 1 179 1 230 1 156 1 85 1 250 1 54 1 99 1 110 1 378 1 242 1 124 1 
60 1 267 1 179 1 230 1 351 1 131 1 85 1 48 1 288 1 258 2 54 1 118 1 120 1 123 1 67 1 57 1 242 1 320 1 
133 1 
5 1 209 1 33 1 266 1 241 1 217 1 182 1 
93 1 189 1 23 1 342 1 149 1 33 1 297 1 241 1 217 1 157 1 325 1 182 2 162 1 43 1 88 1 226 1 45 1 
142 2 1 2 230 3 93 6 47 2 146 2 147 2 189 4 235 2 190 3 289 6 96 1 342 4 97 1 54 3 100 1 5 1 149 4 101 1 56 2 297 12 241 9 60 3 298 1 156 10 61 2 157 5 204 2 206 1 11 2 162 5 68 1 28 2 171 3 214 2 33 2 173 2 266 1 174 1 217 8 124 3 218 6 125 2 370 2 81 1 179 4 325 5 85 3 182 8 43 3 183 2 276 2 139 2 45 4 
93 3 47 2 22 1 147 2 189 2 235 2 168 1 289 5 96 1 342 2 51 1 149 2 296 1 173 2 33 2 297 6 241 8 217 5 218 5 346 1 9 1 157 1 325 1 204 2 182 5 11 1 223 1 252 1 162 1 183 1 43 1 276 2 254 1 164 1 45 2 
0 1 337 1 189 1 235 2 50 1 342 1 98 1 260 1 365 1 149 1 173 1 34 1 55 1 241 2 154 1 217 2 178 1 199 1 347 1 157 1 105 1 248 1 162 1 183 1 184 1 276 2 225 1 45 1 
189 1 182 1 342 1 5 1 149 1 33 1 266 1 241 1 217 1 45 1 
93 5 47 2 147 2 235 2 204 2 289 5 182 5 183 1 214 1 276 2 173 2 297 10 241 5 217 5 218 5 
162 1 43 1 157 1 325 1 33 1 182 1 
230 4 189 1 96 2 342 2 54 4 240 1 119 1 100 1 99 1 263 1 149 2 241 2 217 2 124 1 219 1 60 4 81 2 179 1 156 1 157 3 325 4 85 1 328 1 11 2 162 3 43 2 378 1 68 2 45 2 
284 1 337 2 230 1 24 1 54 1 98 3 171 1 78 1 261 1 262 1 34 1 153 1 6 1 178 2 124 1 200 2 60 1 347 3 81 1 179 1 156 1 83 1 202 1 85 1 64 1 354 1 42 1 184 2 225 2 111 1 279 1 17 1 
93 2 189 1 289 2 182 4 96 1 342 1 11 1 149 1 356 1 33 2 297 4 241 1 217 2 218 2 45 1 
106 1 333 1 334 1 
106 1 333 1 334 1 
106 1 359 1 132 1 333 1 90 1 
106 1 333 1 334 1 
106 1 108 1 333 1 
106 1 108 1 333 1 
106 1 108 1 333 1 
106 1 333 1 
285 1 255 1 
21 4 200 4 284 2 71 1 129 1 202 2 248 1 235 1 24 8 136 2 42 2 12 3 365 1 264 1 356 1 173 1 153 4 6 2 154 1 244 1 
21 3 129 1 248 1 235 1 24 6 136 2 12 2 365 1 209 1 356 1 173 1 153 3 154 1 244 1 
200 2 284 1 21 2 71 1 47 1 360 1 147 1 202 1 235 1 24 4 204 1 136 1 42 1 12 2 173 1 153 2 6 1 
21 3 71 1 9 2 47 1 147 1 235 1 24 7 374 1 204 1 136 1 252 1 12 2 173 1 296 1 153 4 
21 11 284 2 71 4 47 2 147 2 233 1 235 3 24 23 365 2 195 1 264 2 296 2 173 3 153 12 6 2 154 1 244 1 200 4 129 1 9 2 202 2 248 2 204 2 374 1 136 5 42 2 12 9 13 1 356 1 
9 1 153 1 24 1 
21 1 296 1 24 1 
284 1 200 2 21 3 71 1 47 1 360 1 147 1 202 1 235 1 24 6 204 1 136 2 42 1 12 3 214 1 173 1 6 1 153 3 
284 1 21 6 71 1 47 2 147 2 235 2 24 12 168 1 296 1 173 2 153 6 6 1 346 1 200 2 9 1 202 1 204 2 353 1 136 1 42 1 252 1 223 1 12 2 254 1 164 1 
21 3 71 1 248 1 235 1 24 6 136 1 12 2 365 1 173 1 153 3 154 1 
21 1 200 2 284 1 71 1 129 1 202 1 248 1 24 3 136 1 42 1 12 2 13 1 365 1 264 1 153 2 6 1 244 1 
284 1 200 2 21 5 71 2 105 1 202 1 248 2 235 2 24 10 353 1 136 3 42 1 12 5 365 2 173 2 6 1 153 5 154 1 
200 2 284 1 21 2 71 1 202 1 235 1 24 2 204 1 353 1 42 1 12 1 6 1 
200 2 284 1 21 2 71 1 47 1 147 1 202 1 235 1 24 4 204 1 136 1 353 1 42 1 12 2 173 1 153 2 6 1 
200 6 284 3 21 1 71 1 202 3 248 1 24 3 353 1 136 1 42 3 12 2 13 1 377 1 365 1 264 1 153 2 6 3 
284 5 21 16 71 5 47 3 360 1 147 3 235 5 24 34 259 1 365 3 264 2 296 3 173 5 153 18 344 1 6 5 154 2 367 1 244 1 200 10 129 1 9 4 202 5 248 3 374 1 204 3 353 1 136 7 42 5 252 1 12 12 13 1 377 1 356 1 
284 1 21 4 235 1 24 8 168 1 365 1 173 1 296 1 153 4 6 1 154 1 244 1 200 2 9 1 129 1 202 1 248 1 353 1 136 2 42 1 252 1 12 2 356 1 
284 2 21 6 71 1 360 1 147 1 235 2 24 11 168 1 365 1 173 1 296 1 153 5 6 2 154 1 244 1 200 4 129 1 9 2 202 2 248 1 374 1 204 1 136 2 353 1 42 2 252 1 12 3 356 1 
284 3 21 9 71 1 47 2 360 1 147 2 235 3 24 19 168 1 365 1 264 1 296 1 173 3 153 10 6 3 154 1 244 1 346 1 200 6 129 1 9 1 202 3 248 1 204 2 353 1 136 3 42 3 252 1 223 1 12 4 254 1 356 1 164 1 
284 3 21 10 71 2 47 1 360 1 147 2 235 3 24 17 168 1 365 1 264 1 296 1 173 2 153 7 6 3 154 1 244 1 346 1 200 6 129 1 9 1 202 3 248 1 204 2 353 1 136 3 42 3 252 1 223 1 12 5 254 1 356 1 164 1 
284 1 21 4 235 1 24 8 168 1 365 1 173 1 296 1 153 4 6 1 154 1 244 1 200 2 9 1 129 1 202 1 248 1 353 1 136 2 42 1 252 1 12 2 356 1 
284 1 21 6 71 1 47 2 147 2 235 2 24 12 168 1 296 1 173 2 153 6 6 1 346 1 200 2 9 1 202 1 204 2 353 1 136 1 42 1 252 1 223 1 12 2 254 1 164 1 
284 4 21 10 71 2 47 1 360 1 147 2 235 3 24 18 168 1 365 1 264 2 296 1 173 2 153 8 6 4 154 1 244 1 346 1 200 8 129 1 9 1 202 4 248 1 204 2 353 1 136 3 42 4 223 1 252 1 12 5 254 1 356 1 164 1 
284 4 21 9 71 3 47 2 147 3 235 3 24 16 168 1 264 2 296 1 173 2 153 7 6 4 346 1 200 8 9 1 202 4 204 3 353 1 136 3 42 4 223 1 252 1 12 6 254 1 377 1 164 1 
21 3 71 3 129 1 248 3 235 1 24 7 136 3 12 6 365 3 173 1 153 4 154 1 244 2 
284 4 21 10 71 1 47 1 147 2 235 3 24 18 168 1 365 1 264 2 296 1 173 2 153 8 6 4 154 1 244 1 346 1 200 8 129 1 9 1 202 4 248 1 204 2 353 1 136 3 42 4 223 1 252 1 12 4 254 1 377 1 356 1 164 1 
347 1 98 1 330 1 32 1 178 1 354 1 35 1 
311 1 228 1 347 1 144 1 340 1 25 1 354 1 98 1 330 1 32 1 178 1 35 1 
60 1 54 1 81 1 179 1 230 1 156 1 99 1 378 1 209 1 85 1 124 1 
337 1 347 2 60 1 81 1 179 1 230 1 156 1 95 1 83 1 85 1 354 1 171 1 98 2 54 1 184 1 17 1 124 1 178 1 
0 1 337 2 347 2 60 1 179 1 230 1 156 3 95 1 146 1 83 1 85 1 354 1 171 2 98 2 54 1 184 1 196 1 56 1 102 1 17 1 124 2 178 2 68 1 
0 1 337 2 347 2 60 2 179 1 230 2 156 3 95 1 146 1 83 1 85 1 354 1 171 2 98 2 54 2 107 1 184 1 196 1 152 1 56 1 102 1 124 2 178 2 68 1 
60 3 81 1 179 1 230 3 156 4 61 1 157 2 146 1 325 1 85 1 190 1 182 1 28 1 291 1 171 1 162 2 54 3 107 1 33 1 56 1 281 1 124 1 68 1 
60 3 81 1 179 1 230 3 156 4 61 1 157 2 146 1 325 1 85 1 190 1 182 1 28 1 171 1 162 2 54 3 107 1 33 1 56 1 124 1 68 1 125 1 
60 1 54 1 179 1 230 1 65 1 85 1 
126 1 60 7 349 1 81 2 46 1 230 7 179 3 156 3 85 2 363 1 206 1 54 6 53 1 171 1 376 1 239 1 65 1 174 1 320 1 124 2 336 1 
284 2 337 1 230 1 95 1 235 1 287 1 54 1 98 2 294 1 6 2 153 3 154 1 244 1 200 4 60 1 347 2 156 1 62 1 202 2 248 1 249 1 354 2 206 1 12 2 111 2 356 1 17 1 21 3 24 6 171 1 262 1 261 1 365 1 173 1 178 1 124 1 221 1 82 1 179 1 129 1 83 1 85 1 373 1 136 2 42 2 184 1 279 2 
1 1 339 1 230 1 189 2 190 1 342 2 28 1 54 1 5 1 100 1 149 2 33 1 266 1 241 1 217 1 125 1 60 1 81 1 370 1 156 2 157 3 61 1 325 2 182 1 162 3 43 1 139 1 45 2 
60 2 230 2 179 2 156 2 85 1 206 1 28 1 54 2 171 1 65 1 101 1 174 1 124 1 
60 4 81 1 269 1 179 1 230 4 156 1 85 1 206 1 54 4 107 1 99 1 378 1 124 1 
60 2 230 2 323 1 179 2 156 1 85 1 114 1 54 2 171 1 376 1 239 1 343 1 124 1 68 1 
60 1 54 1 81 1 179 1 230 1 123 1 85 1 288 1 57 1 258 1 
309 1 60 2 230 2 179 1 156 1 85 1 206 1 54 2 320 1 124 1 336 1 
60 5 81 1 349 1 269 1 230 5 179 2 156 3 85 2 363 1 206 1 54 4 99 1 378 1 124 2 68 1 336 1 
60 5 81 1 269 1 230 5 179 2 156 3 85 2 363 1 206 1 54 4 31 1 99 1 378 1 124 2 68 1 336 1 
337 1 347 2 60 1 81 1 179 1 230 1 156 1 95 1 83 1 85 1 354 1 171 1 98 2 54 1 184 1 152 1 124 1 178 1 
60 1 230 1 179 2 156 1 85 1 54 1 53 1 171 1 376 1 239 1 174 1 124 1 68 1 
150 1 372 1 148 1 7 1 354 1 
0 1 8 1 339 1 61 1 157 2 372 2 148 2 354 1 182 1 162 2 185 1 150 1 33 1 196 1 151 1 102 1 7 2 198 1 245 1 
80 1 347 1 98 1 158 1 150 1 372 1 197 1 7 1 178 1 
8 1 150 1 245 1 
187 1 209 1 112 1 191 1 
308 1 348 1 187 1 112 1 212 1 167 1 191 1 
308 1 317 1 243 1 
348 1 268 2 187 1 167 1 191 1 138 1 308 3 331 1 165 1 112 1 212 3 16 1 
308 2 348 1 187 1 112 1 160 1 177 1 212 2 167 1 191 1 
308 1 348 1 138 1 123 1 316 1 48 1 366 1 212 1 167 1 258 1 191 1 
308 1 348 1 138 1 187 1 212 1 167 1 191 1 
308 1 348 1 138 1 187 2 112 1 212 1 167 1 
308 1 348 1 138 1 247 1 212 1 167 1 282 1 
348 1 187 1 37 1 324 1 181 1 160 2 167 1 191 2 138 1 308 3 112 1 316 1 212 3 
322 1 348 1 187 1 160 1 288 1 167 1 48 1 258 2 191 1 138 1 308 2 123 1 67 1 112 1 212 2 
348 2 187 1 181 1 160 2 167 2 191 2 304 1 138 1 308 4 112 1 316 1 212 4 177 1 
308 1 348 1 138 1 187 1 112 1 212 1 167 1 191 1 
268 1 348 1 187 2 181 1 160 2 167 1 191 3 308 4 331 1 112 2 316 1 16 1 212 4 18 1 
308 2 348 1 138 1 77 1 187 1 352 1 39 1 112 1 160 1 212 2 167 1 191 1 
348 1 268 2 187 1 271 1 167 1 191 1 138 1 308 3 331 1 112 1 212 3 16 2 
326 1 73 1 191 2 140 2 
308 1 348 1 138 1 63 1 212 1 167 1 
308 2 348 1 138 1 187 1 324 1 112 1 160 1 212 2 167 1 191 1 
227 1 
308 1 348 1 138 1 187 1 112 1 212 1 167 1 191 1 
348 1 268 1 187 1 324 1 160 1 167 1 191 1 138 1 308 3 112 1 212 3 
181 1 316 1 18 1 191 1 
187 1 191 1 

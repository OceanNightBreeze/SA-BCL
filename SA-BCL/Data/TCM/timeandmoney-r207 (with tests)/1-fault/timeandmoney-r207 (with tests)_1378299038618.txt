#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
258 1 37 4 80 2 129 1 192 1 322 2 42 2 196 1 175 1 369 4 132 1 180 1 198 2 345 1 269 6 304 9 349 2 67 1 308 9 120 1 31 1 311 2 336 2 123 1 211 1 381 3 
258 1 37 4 80 2 129 1 192 1 322 2 42 2 196 1 175 1 369 4 132 1 180 1 198 2 345 1 269 6 304 9 349 2 67 1 308 9 120 1 31 1 311 2 336 2 123 1 211 1 381 3 
258 1 37 4 80 2 129 1 192 1 322 2 42 2 196 1 175 1 369 4 132 1 180 1 198 2 345 1 269 6 304 9 349 2 67 1 308 9 120 1 31 1 311 2 336 2 123 1 211 1 381 3 
258 1 37 3 80 2 129 1 192 1 322 2 42 2 196 1 175 1 369 3 132 1 180 1 198 1 345 1 269 4 304 7 349 2 67 1 308 7 120 1 31 1 311 2 336 2 211 1 381 2 
37 2 80 1 304 4 349 1 322 1 308 4 42 1 196 1 369 2 336 1 123 1 198 2 211 1 345 1 269 3 381 1 
80 1 285 1 103 1 304 2 322 1 349 1 67 1 308 2 106 1 229 1 108 1 369 1 311 1 336 1 180 1 345 1 
37 1 80 2 285 1 304 3 308 3 106 1 31 1 369 2 311 1 336 2 345 1 269 1 381 1 
258 1 37 4 80 2 304 9 349 1 322 1 308 9 42 1 120 1 196 1 31 1 369 4 311 1 336 2 123 1 177 1 211 1 198 2 345 1 164 1 269 7 381 3 
258 1 37 4 80 2 304 9 349 1 322 1 308 9 42 1 120 1 196 1 31 1 369 4 311 1 336 2 123 1 177 1 211 1 198 2 345 1 164 1 269 7 381 3 
250 1 173 1 323 1 
250 1 253 1 98 2 
45 2 62 2 251 1 85 2 92 2 332 2 112 1 47 2 
231 1 283 1 212 1 339 1 366 1 44 2 45 2 85 2 291 1 368 1 293 2 266 1 267 1 223 1 326 1 271 1 112 1 199 1 47 3 243 1 87 2 328 1 63 1 62 3 92 2 184 2 332 2 275 1 351 1 27 1 29 1 251 1 206 2 254 1 50 1 208 1 151 1 
45 1 245 1 62 1 251 1 85 1 92 1 332 1 210 1 344 1 47 1 
62 1 92 1 200 1 165 1 116 1 323 1 205 1 250 1 210 1 318 1 224 1 257 1 47 1 298 1 
62 1 165 2 92 1 200 1 332 1 116 1 323 1 45 1 250 1 85 1 210 1 318 1 257 2 47 1 298 1 
107 1 109 1 165 1 66 1 257 1 
107 1 250 1 337 1 165 2 323 1 66 1 170 1 257 2 
107 1 165 1 257 1 
245 1 62 1 165 1 92 1 332 1 66 1 45 1 251 1 85 1 210 1 344 1 257 1 46 1 47 1 
250 1 
136 1 107 1 250 1 165 2 323 1 66 1 170 1 257 2 
225 2 64 1 15 1 165 5 100 2 365 1 0 1 323 1 66 2 167 1 95 2 107 2 250 1 51 1 241 1 325 1 256 1 170 1 257 5 
173 1 112 1 
62 2 301 1 92 2 332 1 45 1 85 1 220 1 47 2 112 2 
221 1 324 1 119 1 
62 1 184 1 339 1 55 1 27 1 206 1 254 1 368 1 50 1 266 1 267 1 326 1 112 1 47 1 87 1 151 1 
62 2 92 1 184 1 339 1 262 1 45 1 27 1 206 1 254 1 85 1 368 1 50 1 188 1 266 1 324 1 267 1 326 1 47 2 87 1 151 1 
62 5 301 1 92 5 246 1 332 1 367 1 262 2 290 1 205 1 45 4 85 4 188 1 47 5 112 1 
45 2 245 1 62 2 85 2 92 2 210 1 86 1 47 2 
45 3 62 3 85 3 92 3 332 1 262 1 112 1 47 3 
45 1 245 1 62 1 85 1 92 1 210 1 47 1 
45 1 62 1 85 1 301 1 92 1 220 1 332 1 210 1 47 1 
231 1 283 1 212 1 339 1 262 1 44 1 45 3 85 3 291 1 368 1 293 2 266 1 267 1 223 1 326 1 271 1 112 1 298 1 47 4 87 1 328 1 63 1 62 4 301 1 92 3 200 1 165 1 184 1 332 2 303 1 116 1 275 1 27 1 29 1 251 1 206 1 254 1 50 1 188 1 316 1 210 1 318 1 257 1 151 1 
205 1 45 1 62 2 85 1 92 2 246 1 262 1 112 1 47 2 
62 3 301 1 165 1 200 1 92 3 332 1 303 1 116 1 305 1 262 2 45 3 250 1 85 3 188 1 210 1 318 1 257 1 47 3 298 1 
62 2 301 1 92 2 332 1 262 1 45 2 85 2 221 1 324 1 47 2 
62 1 184 1 339 1 27 1 206 1 254 1 50 1 368 1 266 1 267 1 326 1 112 1 47 1 87 1 151 1 
62 1 184 1 54 1 339 1 40 1 27 1 206 1 50 1 368 1 266 1 267 1 326 1 112 1 47 1 87 1 
283 1 212 1 156 1 234 1 44 4 218 1 240 1 291 1 221 2 293 2 324 2 223 2 271 1 63 1 373 1 21 1 20 1 119 2 139 1 140 1 29 1 208 2 315 1 380 1 
45 1 62 1 85 1 92 1 116 1 210 1 86 1 47 1 
154 1 133 1 
154 1 133 1 
30 1 161 1 
30 1 161 1 
30 1 161 1 
154 1 133 1 340 1 
154 1 133 1 340 1 
154 1 133 1 352 1 
30 1 278 1 161 1 7 1 154 2 133 2 
154 1 133 1 340 1 
61 1 154 1 133 1 
61 1 154 1 133 1 
61 1 154 1 133 1 
154 1 38 1 320 1 155 1 286 1 288 1 45 2 131 1 85 2 59 1 9 1 133 1 134 1 112 1 47 2 88 1 62 2 372 1 165 1 92 2 352 1 26 1 143 1 257 1 
88 2 372 1 165 2 183 1 154 2 214 1 286 2 306 2 263 1 185 1 250 1 143 3 59 2 7 1 133 2 9 2 97 1 149 1 257 2 
42 1 349 1 322 1 
229 1 349 1 322 1 
42 2 229 1 182 1 276 1 322 3 157 1 
42 1 229 1 276 1 322 2 157 1 350 1 
42 1 229 1 276 2 322 2 157 1 
363 1 98 3 127 1 100 1 38 1 365 3 323 1 234 1 107 1 217 2 240 1 134 1 225 1 226 1 165 5 21 1 66 4 374 1 167 1 93 2 26 1 95 1 250 2 253 1 51 2 230 1 315 1 145 1 170 1 34 1 257 5 126 2 
75 1 98 9 127 2 99 1 100 2 38 4 365 8 323 1 234 3 107 6 240 3 109 5 296 1 225 2 165 9 21 3 66 7 167 1 93 6 228 1 376 1 95 2 250 5 253 3 377 5 121 1 51 6 230 1 315 3 145 3 256 1 170 1 34 2 257 9 126 6 
363 1 127 1 98 4 100 1 38 1 365 3 323 1 234 1 217 1 240 1 226 1 225 1 165 3 21 1 66 2 93 2 95 1 250 3 253 2 51 2 145 1 315 1 256 1 34 1 257 3 126 2 
75 1 363 1 98 7 127 1 100 1 38 2 365 5 323 1 234 2 217 2 240 2 296 1 225 1 226 1 165 4 21 2 66 3 93 4 228 1 95 1 250 4 253 3 51 4 145 2 315 2 256 1 34 1 257 4 126 4 
368 1 12 1 173 1 
368 1 282 1 
89 1 
368 1 339 1 266 1 
368 1 130 1 
368 1 266 1 
3 1 368 3 339 1 266 1 12 2 104 1 
213 2 21 1 57 1 156 3 56 1 234 1 23 1 44 7 218 2 159 1 160 1 208 4 60 1 124 1 223 3 371 1 297 1 
213 2 21 1 57 1 156 3 56 1 234 1 23 1 44 7 218 2 159 1 160 1 208 4 60 1 124 1 223 3 371 1 297 1 
213 2 21 1 57 1 156 3 56 1 234 1 23 1 44 7 218 2 159 1 160 1 197 1 208 4 60 1 124 1 223 3 371 1 297 1 
213 3 57 1 56 2 156 10 234 4 44 31 216 1 159 2 218 5 84 1 160 5 240 3 291 1 60 1 293 2 371 2 223 15 271 1 297 1 63 1 65 3 21 4 23 2 29 1 357 1 208 16 70 1 145 3 315 3 360 1 124 1 146 1 190 4 279 1 
213 2 56 1 156 4 57 1 234 1 44 9 218 3 84 1 159 1 174 1 160 1 291 2 293 4 60 1 223 4 371 1 271 2 63 2 16 1 21 1 23 1 29 2 208 5 124 1 
80 1 285 1 172 1 322 2 1 1 195 1 106 1 42 1 369 1 242 1 326 1 269 1 345 1 87 1 299 1 272 1 182 1 184 1 304 2 273 1 349 1 308 2 206 1 229 1 144 1 50 1 311 1 312 1 336 1 313 1 
74 1 80 1 285 1 322 2 1 1 2 1 106 1 42 1 369 1 242 1 326 1 269 2 87 1 299 1 272 1 182 1 184 1 304 3 273 1 349 1 308 3 206 1 229 1 144 1 50 1 311 1 312 1 336 1 313 1 314 1 
285 1 322 2 2 1 106 1 42 1 369 1 242 1 326 1 269 2 87 1 299 1 272 1 182 1 184 1 304 2 273 1 349 1 308 2 206 1 229 1 50 1 311 1 312 1 313 1 314 1 
74 1 76 1 280 1 80 1 368 1 342 1 266 1 242 2 326 1 87 1 48 1 299 2 184 1 304 1 308 1 27 1 206 1 252 1 50 1 168 1 311 2 312 2 336 1 
80 1 322 2 1 1 195 1 2 1 42 1 242 1 326 1 345 1 87 1 299 1 272 1 182 1 184 1 304 1 273 1 349 1 308 1 206 1 229 1 144 1 50 1 311 1 312 1 336 1 313 1 
341 1 
280 1 98 2 100 1 102 1 101 1 289 1 107 6 4 1 111 2 298 1 244 4 14 2 62 1 165 5 200 1 116 1 117 2 307 2 167 1 204 2 205 1 249 2 27 2 250 2 206 2 253 2 358 1 33 1 210 1 318 1 170 3 72 1 257 5 73 1 127 1 365 2 261 1 321 1 323 1 368 1 265 1 266 1 178 1 326 1 224 1 48 1 87 2 47 1 225 1 184 2 92 1 334 2 95 1 50 1 51 2 
136 1 73 1 244 2 62 1 200 1 165 3 92 1 116 1 321 1 289 1 205 1 107 2 334 1 4 1 210 1 33 1 318 1 170 1 224 1 257 3 47 1 298 1 
73 1 321 1 323 1 289 1 107 1 4 1 224 1 298 1 47 1 136 1 244 3 62 1 92 1 165 3 200 1 116 1 204 1 205 1 250 1 33 1 210 1 318 1 170 1 257 3 
73 1 321 1 323 1 289 1 107 2 4 1 224 1 298 1 47 1 136 1 244 3 62 1 92 1 165 3 200 1 116 1 307 1 204 1 205 1 334 1 250 1 33 1 210 1 318 1 170 1 257 3 
152 1 100 1 289 1 107 7 4 1 292 1 111 2 298 1 244 6 62 1 14 2 200 1 165 5 116 1 117 2 307 4 167 1 204 4 205 1 249 2 250 5 253 2 122 1 210 1 33 1 318 1 170 3 257 5 72 1 73 1 365 1 321 1 323 5 178 1 224 1 47 1 136 1 225 1 92 1 334 4 95 1 51 1 96 1 378 1 
98 2 100 1 102 1 289 1 107 4 4 1 111 2 298 1 244 4 62 1 14 2 200 1 165 4 116 1 117 2 307 2 167 1 204 2 205 1 249 2 250 2 253 2 210 1 33 1 318 1 170 2 257 4 72 1 73 1 365 1 321 1 323 1 178 1 224 1 47 1 225 1 92 1 95 1 334 2 51 1 
73 1 100 1 365 1 321 1 323 1 289 1 107 4 4 1 178 1 111 2 224 1 298 1 47 1 244 4 14 2 225 1 62 1 92 1 165 4 200 1 116 1 117 2 307 2 167 1 204 2 205 1 334 2 249 2 95 1 250 1 253 2 51 1 96 1 122 1 378 1 33 1 210 1 318 1 170 2 72 1 257 4 
73 1 100 1 365 1 321 1 323 1 289 1 107 4 4 1 178 1 111 2 224 1 298 1 47 1 244 4 14 2 225 1 62 1 92 1 165 4 200 1 116 1 117 2 307 2 167 1 204 2 205 1 334 2 249 2 95 1 250 1 253 2 51 1 96 1 122 1 378 1 33 1 210 1 318 1 170 2 72 1 257 4 
73 1 281 1 98 2 100 1 365 1 321 1 323 1 289 1 107 4 58 1 4 1 224 1 298 1 47 1 244 4 14 2 225 1 62 1 92 1 165 4 200 1 116 1 248 2 307 2 167 1 204 2 205 1 334 2 249 2 95 1 250 1 51 1 32 1 122 1 33 1 210 1 318 1 170 2 125 2 72 1 257 4 
73 1 100 1 365 1 321 1 323 1 289 1 107 5 4 1 292 1 178 1 111 2 224 1 298 1 47 1 244 5 14 2 225 1 62 1 92 1 165 4 200 1 116 1 117 2 307 3 167 1 204 3 205 1 249 2 95 1 334 3 250 1 253 2 51 1 96 1 122 1 378 1 33 1 210 1 318 1 170 2 72 1 257 4 
73 1 100 1 365 1 321 1 323 1 289 1 107 5 4 1 292 1 178 1 111 2 224 1 298 1 47 1 244 5 14 2 225 1 62 1 92 1 165 4 200 1 116 1 117 2 307 3 167 1 204 3 205 1 249 2 95 1 334 3 250 1 253 2 51 1 96 1 122 1 378 1 33 1 210 1 318 1 170 2 72 1 257 4 
98 2 100 1 102 1 289 1 58 1 107 4 4 1 298 1 244 4 62 1 14 2 200 1 165 4 116 1 248 2 307 2 167 1 204 2 205 1 249 2 250 1 210 1 33 1 318 1 170 2 257 4 72 1 125 2 73 1 365 1 321 1 323 1 224 1 47 1 225 1 92 1 95 1 334 2 51 1 
283 1 212 1 213 1 173 1 156 2 57 1 234 1 44 6 159 1 218 2 291 1 221 1 60 1 293 2 324 1 371 1 223 3 271 1 112 2 63 1 21 1 119 1 139 1 29 1 208 3 124 1 
77 1 283 2 212 1 366 1 156 2 234 2 44 14 218 1 160 1 240 1 6 1 291 2 221 4 293 4 324 11 223 6 271 2 112 1 63 2 65 3 21 1 119 11 275 1 94 1 29 2 186 1 357 1 187 1 208 8 145 2 315 2 190 3 146 1 
77 1 283 1 212 1 339 1 55 1 366 1 262 1 44 2 236 1 45 1 85 1 368 1 291 1 221 1 266 1 293 2 267 1 326 1 223 1 271 1 112 1 87 1 47 2 63 1 62 2 184 1 92 1 275 1 27 1 206 1 29 1 254 1 50 1 188 1 208 1 359 1 147 1 151 1 
231 2 283 3 339 2 57 1 156 8 234 3 2 1 159 1 237 2 160 4 240 2 5 1 291 3 60 1 293 6 112 2 62 3 63 3 21 3 119 7 24 2 27 1 206 3 29 3 254 2 310 2 208 10 315 2 124 1 259 1 77 1 171 1 212 3 213 1 366 1 262 1 44 20 45 1 218 4 85 1 368 2 221 7 266 2 324 7 267 2 371 1 223 10 326 2 271 3 87 3 47 3 329 2 184 3 92 1 275 1 188 1 50 2 145 2 151 2 
280 1 283 2 212 2 172 1 366 1 262 1 105 1 2 1 44 2 45 1 85 1 368 3 291 2 110 1 293 4 266 2 11 1 268 1 326 2 223 1 271 2 47 1 87 8 199 2 48 1 62 1 63 2 92 1 184 8 375 1 275 1 139 1 27 2 206 7 29 2 207 1 50 2 208 1 71 1 
77 1 283 1 212 1 156 1 234 1 44 3 45 1 218 1 240 1 85 1 291 1 221 1 293 2 324 1 223 2 271 1 47 1 63 1 62 1 301 1 92 1 332 1 138 1 21 1 119 1 29 1 208 1 145 1 315 1 
63 1 212 1 283 1 20 1 119 1 156 1 234 1 44 2 139 1 29 1 160 1 291 1 221 1 208 2 293 2 324 1 315 1 271 1 
63 1 373 1 212 1 283 1 21 1 119 1 156 1 44 2 139 1 218 1 29 1 240 1 291 1 221 1 293 2 324 1 223 2 271 1 
283 1 212 1 156 2 234 1 44 4 218 1 160 1 240 1 291 1 221 2 293 2 324 2 223 2 271 1 63 1 21 1 119 2 139 1 29 1 208 2 315 1 145 1 
63 1 212 1 283 1 20 1 119 1 156 1 234 1 44 2 29 1 160 1 291 1 221 1 208 2 110 1 293 2 324 1 315 1 271 1 
63 1 373 1 212 1 283 1 21 1 119 1 156 1 44 2 218 1 29 1 240 1 291 1 221 1 110 1 293 2 324 1 223 2 271 1 
283 1 212 1 156 2 234 1 44 4 218 1 160 1 240 1 291 1 221 2 110 1 293 2 324 2 223 2 271 1 63 1 21 1 119 2 29 1 208 2 315 1 145 1 
283 1 212 1 156 2 234 1 44 4 218 1 160 1 240 1 291 1 221 2 293 2 324 2 223 2 271 1 63 1 21 1 119 2 29 1 208 2 315 1 145 1 
231 1 212 1 283 1 339 1 366 1 44 2 368 1 291 1 266 1 293 2 267 1 326 1 223 1 271 1 112 1 87 1 47 1 62 1 63 1 184 1 275 1 27 1 206 1 29 1 254 1 50 1 208 1 151 1 
212 1 283 1 339 1 54 1 40 1 366 1 44 2 368 1 291 1 266 1 293 2 267 1 326 1 223 1 271 1 112 1 87 1 47 1 62 1 63 1 184 1 275 1 353 1 27 1 206 1 29 1 50 1 208 1 
77 1 283 1 212 1 156 2 234 1 44 4 218 1 160 1 240 1 291 1 221 2 293 2 324 2 223 2 271 1 63 1 21 1 119 2 29 1 208 2 315 1 145 1 
231 1 212 1 283 1 339 1 172 1 156 2 234 1 44 4 218 1 237 1 240 1 160 1 368 1 291 1 221 2 266 1 293 2 324 2 267 1 223 2 326 1 271 1 87 1 47 1 62 1 63 1 184 1 21 1 119 2 206 1 29 1 254 1 50 1 208 2 315 1 145 1 151 1 
77 1 283 1 212 1 156 1 234 1 44 3 45 1 240 1 160 1 85 1 291 1 221 1 293 2 324 1 223 1 271 1 47 1 63 1 62 1 301 1 92 1 332 1 137 1 21 1 119 1 29 1 208 2 145 1 315 1 
260 1 213 1 81 1 57 1 156 8 234 5 44 41 159 1 84 1 218 4 174 1 160 4 240 4 291 3 176 1 60 1 293 6 343 1 294 1 179 1 371 1 223 21 271 3 135 2 90 1 63 3 65 3 348 4 247 1 19 1 21 5 203 1 335 1 29 3 357 3 69 1 208 20 145 4 315 4 124 1 190 4 146 1 150 1 
260 1 213 1 81 1 57 1 156 7 234 5 44 38 159 1 84 2 218 4 174 1 160 3 240 3 291 4 176 1 60 1 293 8 343 1 294 1 179 1 371 1 223 18 271 4 135 2 90 1 63 4 65 3 348 4 247 1 19 1 21 4 203 1 335 1 29 4 357 3 69 1 208 20 145 4 315 4 124 1 190 4 146 1 150 1 
260 1 213 1 81 1 57 1 156 14 234 8 44 52 159 1 84 1 218 7 174 1 160 7 240 7 291 2 176 1 60 1 293 4 343 1 294 1 179 1 371 1 223 25 271 2 135 1 63 2 65 4 348 4 247 1 19 1 21 8 94 2 335 1 29 2 357 2 69 1 208 27 145 7 315 7 124 1 190 4 146 2 150 1 
156 6 234 3 44 19 218 3 174 1 160 3 240 3 291 2 293 4 343 1 294 2 223 10 271 2 135 1 63 2 65 1 348 2 247 1 21 3 203 1 274 1 335 1 29 2 357 1 208 9 145 3 315 3 190 2 146 1 150 1 
260 1 81 1 156 4 234 3 44 26 84 2 218 2 160 2 174 1 240 2 291 3 176 1 293 6 343 1 294 1 179 1 223 12 271 3 135 2 63 3 65 2 348 4 247 1 19 1 21 2 335 1 29 3 357 2 69 1 208 14 145 3 315 3 190 2 150 2 
88 1 59 1 7 1 154 1 9 1 133 1 97 1 286 1 222 1 149 1 
155 1 352 1 
88 1 330 1 59 1 154 1 10 1 9 1 133 1 286 1 148 1 
201 1 340 1 
61 1 255 1 278 1 
88 1 372 1 165 1 183 1 154 1 286 1 306 1 263 1 185 1 250 1 143 2 59 1 7 1 133 1 9 1 97 1 149 1 257 1 
88 1 372 1 165 1 183 1 154 1 286 1 306 1 263 1 185 1 250 1 143 2 59 1 7 1 133 1 9 1 97 1 149 1 257 1 
88 1 372 1 165 1 183 1 154 1 286 1 306 1 263 1 185 1 250 1 143 2 59 1 7 1 133 1 9 1 97 1 149 1 257 1 
278 1 201 1 340 1 
278 1 201 1 340 1 
61 1 255 1 
61 1 255 1 278 1 
131 1 320 1 
154 1 38 1 320 1 155 1 286 1 288 1 45 2 131 1 85 2 59 1 9 1 133 1 163 1 134 1 112 1 47 2 88 1 62 2 183 1 165 1 92 2 306 1 66 1 352 1 26 1 143 1 257 1 
364 1 77 1 283 1 212 1 128 1 366 1 44 2 368 1 291 1 266 1 293 2 11 1 326 1 268 1 223 1 271 1 87 2 47 2 199 2 62 2 63 1 184 2 92 2 275 1 29 1 206 2 277 1 50 1 208 1 52 1 379 1 
327 1 299 1 272 1 182 1 184 2 18 1 172 1 273 1 349 1 322 2 1 1 2 1 42 1 229 1 206 2 50 1 8 1 326 1 87 2 
299 1 272 1 182 1 184 1 273 1 349 1 322 2 1 1 2 1 215 1 42 1 229 1 206 1 50 1 8 1 326 1 87 1 
327 1 299 1 280 1 184 1 27 1 206 1 252 1 50 1 368 1 266 1 326 1 295 1 87 1 48 1 
327 1 299 1 272 1 182 1 184 1 18 1 273 1 349 1 322 2 1 1 2 1 42 1 229 1 206 1 50 1 8 1 326 1 87 1 
302 1 
250 1 51 1 241 1 365 1 0 1 173 1 323 1 
98 1 100 1 365 1 323 1 107 1 178 1 111 1 225 1 165 1 117 1 167 1 95 1 250 2 253 1 51 1 170 1 257 1 
153 1 98 12 338 1 282 3 100 4 339 3 101 1 0 1 233 2 234 2 3 1 107 5 239 2 238 2 240 2 162 2 241 1 12 2 200 2 165 5 21 2 166 2 167 4 354 1 27 1 206 3 250 8 253 6 310 2 315 2 170 3 257 5 126 6 319 1 35 2 127 2 365 9 39 1 172 1 323 2 130 2 219 2 368 10 266 3 326 3 87 3 225 4 184 3 227 2 93 6 95 4 50 4 51 8 145 2 
35 1 127 1 98 6 100 2 260 1 101 1 365 8 81 1 323 2 234 2 107 1 240 2 176 1 179 1 225 2 65 1 165 1 21 2 166 2 167 2 25 1 93 5 95 2 250 5 253 3 357 1 69 1 51 5 145 2 315 2 361 1 190 1 170 1 257 1 126 5 
35 1 100 1 365 2 57 1 234 2 45 1 159 1 85 1 344 1 371 1 46 1 47 1 245 1 62 1 225 1 165 1 92 1 332 1 21 1 166 2 167 1 95 1 251 1 355 1 51 2 96 1 210 1 257 1 
225 1 100 1 365 1 0 1 323 1 167 1 95 1 250 1 241 1 51 1 
35 1 98 10 365 5 21 2 166 2 234 2 93 5 250 5 253 5 240 2 310 1 51 5 145 2 315 2 126 5 
107 1 250 1 165 1 323 1 170 1 257 1 
280 1 127 2 100 2 261 1 365 2 101 2 39 2 107 4 83 1 368 1 266 1 326 1 87 4 48 1 113 1 225 2 184 4 165 3 167 1 354 1 95 2 27 2 206 4 50 1 51 2 358 1 256 1 170 2 257 3 
231 1 212 1 283 1 339 1 44 1 45 2 85 2 368 1 291 1 293 2 266 1 267 1 223 1 326 1 271 1 112 1 87 1 47 3 328 1 63 1 62 3 184 1 92 2 332 2 275 1 27 1 29 1 206 1 251 1 254 1 50 1 151 1 
225 1 98 4 127 1 100 1 365 1 101 1 213 1 323 2 167 1 93 2 95 1 250 4 253 2 51 2 126 2 
9 1 286 1 49 1 
9 1 286 1 49 1 
320 1 9 1 97 1 286 1 346 1 
9 1 286 1 49 1 
9 1 286 1 13 1 
9 1 286 1 13 1 
9 1 286 1 13 1 
9 1 286 1 
154 1 133 1 
63 1 65 1 213 1 21 1 57 1 156 2 234 1 44 8 218 2 159 1 29 1 174 1 357 1 291 1 208 4 176 1 60 1 293 2 124 1 190 1 371 1 223 4 271 1 
213 1 57 1 156 3 234 2 44 11 218 2 159 1 174 1 160 1 291 2 176 1 60 1 293 4 371 1 223 5 271 2 63 2 65 1 21 1 29 2 357 1 208 6 145 1 315 1 124 1 190 2 317 1 146 1 
260 1 213 1 81 1 57 1 156 4 234 3 44 19 159 1 218 3 84 1 160 1 174 1 240 2 291 3 176 1 60 1 293 6 179 1 371 1 223 10 271 3 65 1 63 3 21 3 29 3 357 1 69 1 208 9 145 2 315 2 124 1 317 1 190 1 
260 1 213 1 81 1 57 1 156 5 234 3 44 17 159 1 84 1 218 3 160 2 174 1 240 1 291 3 176 1 60 1 293 6 179 1 371 1 223 7 271 3 65 1 63 3 21 2 29 3 357 1 69 1 208 10 145 2 315 2 124 1 317 1 190 1 
63 1 65 1 213 1 21 1 57 1 156 2 234 1 44 8 218 2 159 1 29 1 174 1 357 1 291 1 208 4 176 1 60 1 293 2 124 1 190 1 371 1 223 4 271 1 
260 1 81 1 156 2 234 2 44 12 218 1 160 1 174 1 240 2 291 1 176 1 293 2 179 1 223 6 271 1 65 1 63 1 21 2 29 1 357 1 69 1 208 6 145 2 315 2 190 1 
260 1 213 1 81 1 57 1 156 5 234 3 44 18 159 1 218 3 84 2 160 2 174 1 240 1 291 4 176 1 60 1 293 8 179 1 371 1 223 8 271 4 63 4 65 1 21 2 29 4 357 1 69 1 208 10 145 2 315 2 124 1 190 1 317 1 
260 1 81 1 156 6 234 3 44 16 218 3 84 2 160 3 174 1 240 2 291 4 176 1 293 8 179 1 223 7 271 4 63 4 65 1 21 2 203 1 29 4 357 1 69 1 208 9 145 3 315 3 190 1 
21 1 156 6 57 1 234 1 44 7 159 3 218 3 160 3 208 3 60 1 124 2 223 4 371 3 
260 1 213 1 81 1 57 1 156 4 234 3 44 18 159 1 218 3 84 2 160 1 174 1 240 1 291 4 176 1 60 1 293 8 179 1 371 1 223 8 271 4 63 4 65 1 21 2 203 1 29 4 357 1 69 1 208 10 145 2 315 2 124 1 190 1 
63 2 213 1 21 1 57 1 156 3 234 1 44 8 218 2 29 2 84 1 159 1 160 1 291 2 208 4 293 4 60 1 124 1 223 4 371 1 271 2 
213 1 21 1 173 1 156 2 57 1 234 1 44 6 159 1 218 2 208 3 60 1 124 1 223 3 371 1 
63 1 21 1 156 2 234 1 44 4 218 1 29 1 240 1 160 1 291 1 208 2 293 2 145 1 315 1 317 1 223 2 271 1 
65 1 21 1 156 2 234 1 44 7 218 1 240 1 160 1 357 1 208 3 145 1 315 1 190 2 146 1 223 4 
213 1 57 1 156 9 234 3 44 23 159 2 218 5 84 2 160 4 240 2 291 2 60 1 293 4 371 2 223 12 370 1 271 2 65 2 63 2 21 3 94 1 29 2 186 1 208 11 315 2 145 2 124 1 146 1 190 2 
44 1 190 1 223 1 
44 1 65 1 208 1 
63 1 21 1 156 3 234 1 44 6 29 1 218 2 160 1 240 1 291 1 310 1 208 3 293 2 145 1 315 1 317 1 223 3 271 1 
260 1 81 1 156 2 234 2 44 12 218 1 160 1 174 1 240 2 291 1 176 1 293 2 179 1 223 6 271 1 65 1 63 1 21 2 29 1 357 1 69 1 208 6 145 2 315 2 190 1 
21 1 57 1 156 2 234 1 44 6 159 1 218 1 160 1 208 3 223 3 371 1 
63 1 156 2 44 3 218 1 159 1 84 1 29 1 160 1 291 1 208 1 293 2 60 1 124 1 371 1 370 1 223 2 271 1 
63 1 21 2 156 5 57 1 234 2 44 10 29 1 159 2 218 3 174 1 355 1 160 2 291 1 208 5 293 2 371 2 223 5 271 1 
63 1 156 1 234 1 44 2 29 1 174 1 160 1 291 1 208 2 293 2 315 1 271 1 
63 1 21 1 156 2 234 1 44 4 218 1 29 1 240 1 174 1 160 1 291 1 208 2 293 2 145 1 315 1 223 2 271 1 
63 3 203 1 156 2 44 3 84 1 29 3 159 1 218 1 174 1 160 1 291 3 208 1 293 6 370 1 223 2 371 1 271 3 
213 1 57 2 156 12 234 5 44 34 216 1 159 3 84 2 218 7 174 1 160 5 240 3 291 5 60 1 293 10 371 3 370 1 223 18 271 5 63 5 65 3 21 5 203 1 29 5 357 1 208 16 360 1 145 3 315 3 124 1 190 4 317 1 146 1 279 1 
205 1 62 1 92 1 246 1 112 1 47 1 362 1 
62 1 92 1 115 1 246 1 287 1 309 1 43 1 205 1 356 1 112 1 362 1 47 1 
280 1 27 1 206 1 50 1 368 1 184 1 266 1 173 1 326 1 48 1 87 1 
62 2 92 1 184 1 339 1 262 1 45 1 27 1 206 1 85 1 254 1 368 1 50 1 266 1 267 1 326 1 112 1 47 2 87 1 
339 2 39 1 130 1 262 1 45 2 238 1 85 1 368 3 266 2 267 1 326 1 112 1 87 1 47 2 62 2 184 1 92 2 116 1 206 1 254 1 50 1 210 1 318 1 
54 1 339 2 39 1 130 1 262 1 45 2 238 1 85 1 368 3 266 2 267 1 326 1 270 1 112 1 87 2 47 2 62 2 184 2 92 2 116 1 206 2 50 1 210 1 318 1 
282 1 339 1 39 1 284 1 130 1 323 1 107 1 238 1 368 4 266 1 12 1 326 1 270 1 87 3 184 3 165 2 200 1 27 1 206 3 250 1 50 1 169 1 257 2 
200 1 165 2 184 3 282 1 339 1 39 1 323 1 130 1 27 1 107 1 250 1 238 1 206 3 239 1 50 1 368 4 266 1 12 1 326 1 270 1 257 2 87 3 
206 1 50 1 184 1 326 1 87 1 105 1 
347 1 184 7 339 1 333 1 172 1 375 1 105 1 2 1 3 1 27 2 206 6 207 1 368 3 50 3 266 2 71 1 189 1 268 1 326 2 199 1 87 7 
231 1 77 1 283 2 212 2 339 1 213 1 172 1 57 1 156 2 234 1 262 1 44 6 45 1 218 2 159 1 237 1 85 1 368 1 291 2 221 1 60 1 266 1 293 4 324 1 267 1 223 3 371 1 326 1 271 2 112 2 47 2 87 1 63 2 62 2 92 1 184 1 21 1 119 1 24 1 29 2 206 1 254 1 50 1 208 3 124 1 52 1 151 1 
100 2 282 1 365 1 0 1 233 1 323 1 107 2 239 1 162 1 368 2 241 1 12 1 87 1 225 2 184 1 165 3 200 1 66 1 167 2 227 1 354 1 27 1 95 2 250 1 206 1 51 1 170 1 257 3 
319 1 184 2 339 1 172 1 105 1 3 1 206 2 368 2 50 2 266 1 12 1 326 1 87 2 
280 1 184 4 172 1 27 1 206 4 50 1 368 1 266 1 326 1 270 1 53 1 87 4 48 1 
347 1 171 1 184 2 339 1 39 1 333 1 194 1 235 1 206 2 368 1 50 2 266 1 326 1 87 2 
27 1 229 1 206 1 50 1 184 1 273 1 349 1 322 1 326 1 87 1 
364 1 184 2 172 1 2 1 206 2 368 1 50 1 266 1 268 1 326 1 87 2 
280 1 184 5 39 1 172 1 375 1 27 1 206 4 207 1 368 3 50 2 266 2 268 1 326 2 53 1 48 1 87 5 
280 1 184 5 39 1 172 1 27 1 206 4 141 1 207 1 368 3 50 2 266 2 268 1 326 2 53 1 48 1 87 5 
62 2 92 1 184 1 339 1 54 1 262 1 45 1 27 1 206 1 85 1 368 1 50 1 266 1 267 1 326 1 112 1 47 2 87 1 
3 1 206 1 347 1 50 2 368 1 184 1 339 1 266 1 39 1 333 1 189 1 326 1 87 1 
191 1 232 1 36 1 68 1 112 1 
191 2 232 1 114 1 36 2 79 1 200 1 165 2 116 1 303 1 323 1 66 1 68 2 28 1 250 1 210 1 318 1 257 2 112 1 298 1 
191 1 232 1 62 1 36 1 92 1 128 1 277 1 379 1 47 1 
28 1 114 1 232 1 
106 1 369 1 285 1 173 1 
106 1 369 1 80 1 336 1 285 1 304 1 308 1 
311 1 242 1 308 1 
80 1 285 1 22 1 304 3 308 3 158 1 106 1 369 1 336 1 180 2 181 1 345 1 
106 1 369 1 80 1 336 1 285 1 304 2 198 1 269 1 308 2 
42 1 369 1 37 1 80 1 336 1 304 1 349 1 322 1 211 1 345 1 308 1 
106 1 369 1 80 1 336 1 304 1 345 1 308 1 
106 2 80 1 336 1 285 1 304 1 345 1 308 1 
106 1 331 1 369 1 80 2 336 2 193 1 304 2 202 1 345 1 308 2 
258 1 37 1 80 1 285 1 304 3 308 3 106 1 120 1 369 2 336 1 345 1 269 2 381 1 
91 1 182 1 80 1 285 1 304 2 322 2 349 1 308 2 106 1 42 1 229 1 369 1 336 1 345 1 269 1 
37 1 80 2 285 1 304 4 308 4 106 1 369 2 336 2 123 1 198 1 345 1 269 2 381 1 
106 1 369 1 80 1 336 1 285 1 304 1 345 1 308 1 
37 1 80 1 285 2 118 1 304 4 158 1 308 4 106 2 369 3 336 1 180 1 181 1 269 2 381 1 
106 1 300 1 264 1 369 1 80 1 336 1 285 1 304 2 269 1 164 1 345 1 308 2 
17 1 80 1 285 1 304 3 308 3 158 2 106 1 369 1 336 1 180 2 181 1 345 1 
142 1 78 1 369 2 209 2 
80 1 336 1 304 1 41 1 345 1 308 1 
106 1 120 1 369 1 80 1 336 1 285 1 304 2 269 1 345 1 308 2 
82 1 
106 1 369 1 80 1 336 1 285 1 304 1 345 1 308 1 
80 1 285 1 304 3 308 3 106 1 120 1 369 1 336 1 180 1 269 1 345 1 
369 1 37 1 118 1 381 1 
106 1 369 1 

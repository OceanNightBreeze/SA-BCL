#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 342 176 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 342 176 214 299 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
105 2 334 1 312 2 85 1 86 1 154 1 59 9 43 2 30 1 90 6 213 2 246 2 314 5 192 3 138 1 215 1 272 2 195 1 222 1 301 1 51 2 254 9 376 1 37 1 145 1 74 1 237 4 75 1 
105 2 334 1 312 2 85 1 86 1 154 1 59 9 30 1 43 2 90 6 213 2 246 2 314 5 192 3 138 1 215 1 272 2 195 1 222 1 301 1 51 2 254 9 376 1 37 1 145 1 74 1 237 4 75 1 
105 2 334 1 312 2 85 1 86 1 154 1 59 10 30 1 43 2 90 7 213 2 246 2 314 6 192 4 138 1 215 1 272 2 195 1 222 1 301 1 51 2 254 10 376 1 37 1 145 1 74 1 237 5 75 1 
105 2 312 2 85 1 86 1 154 1 59 7 30 1 43 1 90 4 213 2 246 2 314 4 192 2 138 1 215 1 272 2 195 1 222 1 301 1 51 2 254 7 376 1 37 1 145 1 74 1 237 3 75 1 
105 1 195 1 334 1 312 1 222 1 86 1 59 4 43 2 51 1 254 4 90 3 376 1 246 1 145 1 314 3 237 2 192 1 272 1 
85 1 312 1 222 1 86 1 59 2 154 1 51 1 254 2 376 1 246 1 53 1 213 1 269 1 314 1 193 1 272 1 
222 1 86 1 59 3 51 2 254 3 90 1 376 1 246 2 213 1 314 2 74 1 237 1 192 1 
105 1 84 1 312 1 334 1 86 1 59 9 43 2 90 7 213 1 246 2 314 5 341 1 192 3 215 1 272 1 195 1 222 1 51 2 254 9 376 1 37 1 145 1 237 4 74 1 
105 1 84 1 312 1 334 1 86 1 59 9 43 2 90 7 213 1 246 2 314 5 341 1 192 3 215 1 272 1 195 1 222 1 51 2 254 9 376 1 37 1 145 1 237 4 74 1 
273 1 108 1 156 1 
273 1 256 2 109 1 
63 2 171 2 313 1 91 2 82 1 378 2 87 2 290 2 
41 1 57 2 127 1 83 1 82 1 242 1 87 2 1 1 290 2 63 2 313 1 91 3 366 1 270 1 136 2 249 1 274 1 141 1 164 1 216 2 95 1 348 1 276 2 322 1 12 1 277 1 70 1 229 2 18 1 351 1 98 1 171 2 231 1 234 1 100 1 378 3 101 1 
63 1 171 1 91 1 96 1 326 1 82 1 378 1 87 1 290 1 295 1 
273 1 194 1 94 1 230 1 166 1 320 1 91 1 133 1 27 1 326 1 378 1 162 1 156 1 290 1 
273 1 194 1 94 2 166 2 320 1 27 1 156 1 87 1 290 1 63 1 171 1 230 1 91 1 326 1 378 1 
94 1 305 1 166 1 311 1 177 1 
273 1 94 2 305 1 166 2 177 1 36 1 156 1 228 1 
94 1 305 1 166 1 
94 1 166 1 96 1 82 1 87 1 290 1 63 1 171 1 91 1 326 1 378 1 177 1 306 1 295 1 
273 1 
273 1 346 1 94 2 305 1 166 2 177 1 36 1 156 1 
273 1 94 5 166 5 142 1 209 1 28 1 210 1 36 1 156 1 60 1 253 1 335 1 305 2 19 2 122 1 177 2 281 2 259 2 178 1 
274 1 164 1 216 1 348 1 48 1 8 1 276 1 277 1 290 1 229 1 62 1 351 1 63 1 171 1 231 1 234 1 91 2 378 2 270 1 249 1 
313 1 108 1 
296 1 87 1 290 2 373 1 63 1 171 1 313 2 91 2 378 2 
62 1 303 1 283 1 
181 1 274 1 164 1 216 1 348 1 276 1 277 1 229 1 351 1 231 1 313 1 234 1 91 1 378 1 270 1 249 1 
63 3 171 3 313 1 48 1 91 3 378 3 87 1 290 3 
63 1 171 1 91 1 96 1 326 1 378 1 290 1 
63 1 296 1 171 1 91 1 326 1 378 1 87 1 290 1 373 1 
41 1 57 2 83 1 27 1 82 1 87 2 1 1 290 3 88 1 63 3 158 1 313 1 91 4 366 1 270 1 136 1 249 1 274 1 164 1 194 1 296 1 216 1 94 1 95 1 348 1 48 1 166 1 8 1 320 1 276 1 322 1 277 1 70 1 229 1 18 1 351 1 98 1 171 3 231 1 230 1 234 1 326 1 101 1 378 4 
63 1 171 1 313 1 48 1 133 1 91 2 378 2 2 1 290 2 
273 1 296 1 194 1 94 1 166 1 48 2 8 1 320 1 27 1 87 1 290 3 63 3 89 1 158 1 171 3 230 1 91 3 326 1 378 3 
296 1 48 1 87 1 290 2 63 2 62 1 303 1 171 2 91 2 378 2 
274 1 164 1 216 1 348 1 276 1 277 1 229 1 351 1 231 1 313 1 234 1 91 1 378 1 270 1 249 1 
274 1 164 1 216 1 348 1 117 1 276 1 170 1 277 1 229 1 231 1 313 1 234 1 91 1 378 1 270 1 
41 1 57 2 83 1 241 1 286 1 1 2 62 1 130 1 131 1 136 3 342 1 163 1 141 1 345 1 95 1 119 1 322 1 18 1 52 1 98 1 303 1 203 1 99 1 283 1 
63 1 171 1 230 1 91 1 159 1 326 1 378 1 290 1 
296 1 48 2 33 1 8 1 224 1 87 1 2 1 290 5 63 4 171 4 313 1 133 1 91 5 378 5 
63 2 171 2 159 1 91 2 96 1 326 1 378 2 290 2 
247 1 128 1 
247 1 128 1 
110 1 185 1 
110 1 185 1 
110 1 185 1 
319 1 247 1 128 1 
251 1 247 1 128 1 
247 2 110 1 50 1 185 1 15 1 128 2 
319 1 247 1 128 1 
319 1 247 1 128 1 
247 1 282 1 128 1 
247 1 282 1 128 1 
247 1 282 1 128 1 
273 1 115 1 309 2 78 2 94 2 166 2 11 2 288 1 15 1 14 2 361 1 201 3 128 2 375 1 247 2 139 1 368 1 208 1 23 2 
125 1 309 1 78 1 275 1 116 1 94 1 166 1 251 1 0 1 14 1 290 2 201 1 128 1 63 2 171 2 313 1 91 2 247 1 378 2 161 1 238 1 139 1 76 1 23 1 
105 1 312 1 272 1 
53 1 312 1 272 1 
105 2 267 1 53 1 160 1 205 1 312 3 
105 1 267 1 53 1 160 1 206 1 312 2 
105 1 267 2 53 1 160 1 312 2 
125 1 180 1 55 1 330 1 263 1 28 1 210 3 156 1 131 1 342 1 163 1 271 1 273 1 275 1 116 1 94 5 166 5 167 1 350 2 197 1 36 1 225 1 253 1 99 1 256 1 305 1 19 1 176 1 281 1 177 4 259 1 
180 3 55 2 184 1 209 1 28 1 311 5 210 8 156 1 61 5 131 3 342 3 163 3 271 3 6 1 273 2 116 4 94 9 217 1 166 9 118 1 197 2 220 1 36 1 225 1 253 3 99 3 256 3 305 6 19 2 176 3 177 7 281 2 259 2 179 1 
55 1 180 1 330 1 109 1 209 1 210 3 156 1 131 1 342 1 163 1 271 1 273 2 116 1 94 3 166 3 167 1 350 1 197 1 253 1 99 1 256 2 19 1 176 1 177 2 281 1 259 1 
180 2 55 1 330 1 109 1 184 1 209 1 210 5 156 1 131 2 342 2 163 2 271 2 6 1 273 2 116 2 94 4 217 1 166 4 167 1 350 2 197 1 253 2 99 2 256 3 19 1 176 2 281 1 177 3 259 1 
164 1 108 1 332 1 
164 1 134 1 
328 1 
164 1 231 1 
164 3 339 1 231 1 196 1 332 2 277 1 
164 1 231 1 277 1 
164 1 40 1 
141 4 106 1 143 1 120 1 1 3 323 1 52 3 130 2 131 1 99 1 353 1 258 1 365 2 355 1 136 7 124 1 92 1 
141 4 106 1 143 1 120 1 1 3 323 1 52 3 130 2 131 1 99 1 353 1 258 1 365 2 355 1 136 7 124 1 92 1 
141 4 106 1 81 1 143 1 120 1 1 3 323 1 52 3 130 2 131 1 99 1 353 1 258 1 365 2 355 1 136 7 124 1 92 1 
106 2 57 2 149 1 264 1 287 1 1 15 212 3 130 4 131 4 44 1 365 3 136 28 342 3 46 1 163 3 92 1 141 13 347 1 95 1 143 2 120 2 322 1 323 1 18 1 52 6 98 1 353 1 99 4 236 4 258 2 355 1 176 3 22 1 124 2 
106 1 57 4 187 1 1 4 130 3 131 1 44 1 365 2 136 9 141 5 95 2 143 1 322 2 120 1 323 1 18 2 52 4 98 2 99 1 353 1 175 1 258 1 355 1 124 1 
105 1 239 1 357 1 312 2 86 1 59 2 90 1 246 1 213 1 191 1 294 1 314 1 316 1 272 1 216 1 348 1 298 1 218 1 276 1 222 1 121 1 229 1 51 1 325 1 254 2 376 1 234 1 53 1 20 1 205 1 
105 1 239 1 312 2 86 1 59 3 90 2 266 1 246 1 213 1 191 1 294 1 314 1 316 1 272 1 216 1 348 1 298 1 276 1 222 1 121 1 229 1 51 1 325 1 254 3 374 1 304 1 234 1 53 1 20 1 205 1 
105 1 239 1 312 2 86 1 59 2 90 2 213 1 314 1 316 1 272 1 216 1 348 1 298 1 276 1 222 1 121 1 229 1 325 1 254 2 374 1 304 1 234 1 53 1 20 1 205 1 
358 1 59 1 4 1 112 1 266 1 246 1 213 2 270 1 47 1 164 1 216 1 348 1 298 2 276 1 223 1 121 2 229 1 51 1 254 1 325 2 231 1 234 1 146 1 
105 1 239 1 216 1 348 1 218 1 298 1 276 1 312 2 59 1 121 1 51 1 229 1 254 1 325 1 376 1 53 1 234 1 191 1 213 1 246 1 304 1 20 1 294 1 205 1 316 1 272 1 
151 1 
126 1 285 1 289 2 186 4 290 1 188 1 245 2 189 1 133 1 91 1 248 1 45 1 93 1 194 1 94 5 348 1 200 2 253 2 256 2 305 6 19 1 259 1 55 1 262 1 109 2 358 1 27 1 28 1 210 2 156 1 113 1 270 2 162 1 66 2 273 2 164 1 165 2 216 2 318 1 166 5 320 1 276 2 36 3 223 1 372 1 229 2 231 1 280 1 230 1 232 2 234 1 326 1 378 1 281 1 123 2 
194 1 318 1 346 1 94 3 166 3 262 1 320 1 285 1 27 1 36 1 200 1 186 2 290 1 189 1 230 1 305 2 133 1 91 1 326 1 378 1 162 1 93 1 
273 1 194 1 318 1 346 1 94 3 166 3 262 1 320 1 285 1 27 1 36 1 156 1 186 3 290 1 189 1 230 1 305 1 133 1 91 1 326 1 378 1 162 1 93 1 66 1 
262 1 285 1 27 1 156 1 186 3 290 1 189 1 245 1 91 1 133 1 162 1 93 1 66 1 273 1 194 1 318 1 346 1 94 3 166 3 320 1 36 1 200 1 230 1 305 2 326 1 378 1 
331 1 262 1 109 2 182 1 285 1 27 1 28 1 210 1 156 5 289 2 186 6 290 1 363 1 189 1 245 4 113 1 133 1 91 1 162 1 93 1 66 4 273 5 194 1 165 2 318 1 346 1 94 5 166 5 320 1 36 3 69 1 372 1 200 4 253 1 230 1 232 2 305 7 19 1 326 1 378 1 281 1 123 2 54 1 259 1 
285 1 186 4 289 2 290 1 189 1 245 2 188 1 91 1 133 1 93 1 194 1 94 4 200 2 253 1 256 2 305 4 19 1 259 1 262 1 109 2 27 1 28 1 210 1 156 1 113 1 162 1 66 2 273 2 318 1 165 2 166 4 320 1 36 2 372 1 230 1 232 2 326 1 378 1 281 1 123 2 
331 1 262 1 109 2 285 1 27 1 28 1 210 1 156 1 289 2 186 4 290 1 363 1 245 2 189 1 113 1 91 1 133 1 162 1 93 1 66 2 273 1 194 1 165 2 318 1 94 4 166 4 320 1 36 2 372 1 200 2 253 1 230 1 305 4 232 2 19 1 326 1 378 1 281 1 123 2 54 1 259 1 
331 1 262 1 109 2 285 1 27 1 28 1 210 1 156 1 289 2 186 4 290 1 363 1 245 2 189 1 113 1 91 1 133 1 162 1 93 1 66 2 273 1 194 1 165 2 318 1 94 4 166 4 320 1 36 2 372 1 200 2 253 1 230 1 305 4 232 2 19 1 326 1 378 1 281 1 123 2 54 1 259 1 
329 1 262 1 240 2 285 1 27 1 28 1 210 1 156 1 186 4 290 1 363 1 364 1 245 2 189 1 91 1 133 1 162 1 93 1 66 2 273 1 194 1 318 1 94 4 166 4 320 1 36 2 372 1 200 2 227 2 253 1 278 1 230 1 305 4 256 2 232 2 19 1 326 1 378 1 281 1 123 2 259 1 
331 1 262 1 109 2 285 1 182 1 27 1 28 1 210 1 156 1 289 2 186 5 290 1 363 1 189 1 245 3 113 1 91 1 133 1 162 1 93 1 66 3 273 1 194 1 165 2 318 1 94 4 166 4 320 1 36 2 372 1 200 3 253 1 230 1 232 2 305 5 19 1 326 1 378 1 281 1 123 2 54 1 259 1 
331 1 262 1 109 2 285 1 182 1 27 1 28 1 210 1 156 1 289 2 186 5 290 1 363 1 189 1 245 3 113 1 91 1 133 1 162 1 93 1 66 3 273 1 194 1 165 2 318 1 94 4 166 4 320 1 36 2 372 1 200 3 253 1 230 1 232 2 305 5 19 1 326 1 378 1 281 1 123 2 54 1 259 1 
329 1 285 1 240 2 186 4 290 1 189 1 245 2 188 1 91 1 133 1 93 1 194 1 94 4 200 2 253 1 256 2 305 4 19 1 259 1 262 1 27 1 28 1 210 1 156 1 162 1 66 2 273 1 318 1 166 4 320 1 36 2 372 1 227 2 230 1 232 2 326 1 378 1 281 1 123 2 
106 1 41 1 108 1 57 2 83 1 286 1 1 3 62 1 130 2 131 1 313 2 365 1 136 6 141 3 95 1 120 1 322 1 323 1 18 1 52 2 303 1 98 1 353 1 99 1 355 1 283 1 
41 2 150 1 57 4 83 1 287 1 157 1 1 8 62 10 212 3 130 1 131 2 313 1 32 1 366 1 136 14 342 2 315 1 163 2 141 6 347 1 95 2 322 2 12 1 52 1 17 1 18 2 98 2 303 2 99 2 236 3 176 2 283 10 
181 1 41 1 57 2 83 1 42 1 290 1 1 1 63 1 313 1 91 2 32 1 135 1 270 1 366 1 136 2 249 1 274 1 164 1 141 1 216 1 348 1 48 1 95 1 8 1 276 1 34 1 322 1 277 1 12 1 229 1 351 1 18 1 303 1 98 1 171 1 231 1 234 1 378 2 
41 3 83 3 1 10 290 1 129 2 336 1 130 4 131 3 91 3 136 18 342 2 249 2 141 8 95 3 48 1 348 2 8 1 12 1 300 1 52 4 18 3 351 2 98 3 303 5 353 1 99 3 257 2 355 1 101 2 106 1 57 6 63 1 62 5 265 2 313 2 32 1 365 1 366 1 270 1 163 2 274 2 164 2 216 1 276 1 120 1 322 3 277 2 323 1 229 1 171 1 231 2 234 2 73 2 378 3 176 2 283 5 
77 1 41 2 57 4 357 1 83 2 358 1 286 1 290 1 1 1 63 1 91 1 270 2 366 1 367 1 136 2 5 1 317 1 164 3 141 1 216 8 48 1 348 2 95 2 321 1 276 8 322 2 12 1 223 1 229 7 352 1 18 2 98 2 171 1 231 2 304 1 234 2 100 2 378 1 39 1 
141 2 296 1 41 1 57 2 95 1 83 1 322 1 87 1 290 1 18 1 63 1 98 1 171 1 99 1 91 1 32 1 176 1 378 1 136 2 342 1 369 1 
141 1 41 1 57 2 95 1 83 1 286 1 119 1 322 1 18 1 98 1 99 1 136 1 342 1 
41 1 57 2 95 1 83 1 286 1 241 1 322 1 1 2 52 1 62 1 18 1 303 1 98 1 130 1 131 1 136 2 163 1 283 1 
41 1 57 2 83 1 286 1 1 2 62 1 130 1 131 1 342 1 136 3 163 1 141 1 95 1 322 1 18 1 52 1 98 1 303 1 99 1 176 1 283 1 
77 1 141 1 41 1 57 2 95 1 83 1 119 1 322 1 18 1 98 1 99 1 136 1 342 1 
77 1 41 1 57 2 95 1 83 1 241 1 322 1 1 2 52 1 62 1 18 1 303 1 98 1 130 1 131 1 136 2 163 1 283 1 
77 1 41 1 57 2 83 1 1 2 62 1 130 1 131 1 342 1 136 3 163 1 141 1 95 1 322 1 18 1 52 1 98 1 303 1 99 1 176 1 283 1 
41 1 57 2 83 1 1 2 62 1 130 1 131 1 136 3 342 1 163 1 141 1 95 1 322 1 18 1 52 1 98 1 303 1 99 1 176 1 283 1 
41 1 57 2 83 1 1 1 313 1 91 1 270 1 366 1 136 2 249 1 274 1 141 1 164 1 216 1 348 1 95 1 276 1 322 1 12 1 277 1 229 1 351 1 18 1 98 1 231 1 234 1 101 1 378 1 
41 1 57 2 83 1 1 1 313 1 91 1 270 1 366 1 136 2 274 1 141 1 164 1 216 1 348 1 95 1 117 1 276 1 35 1 322 1 170 1 12 1 277 1 229 1 18 1 98 1 231 1 234 1 378 1 
41 1 57 2 83 1 1 2 62 1 130 1 131 1 32 1 342 1 136 3 163 1 141 1 95 1 322 1 18 1 52 1 98 1 303 1 99 1 176 1 283 1 
41 1 57 2 357 1 83 1 1 2 129 1 62 1 130 1 131 1 91 1 136 3 342 1 163 1 249 1 274 1 141 1 164 1 216 1 348 1 95 1 276 1 322 1 277 1 229 1 52 1 351 1 18 1 303 1 98 1 99 1 231 1 234 1 101 1 378 1 176 1 283 1 
41 1 57 2 83 1 87 1 290 1 1 1 63 1 131 1 91 1 32 1 342 1 136 2 163 1 296 1 141 1 95 1 322 1 18 1 98 1 171 1 99 1 378 1 176 1 38 1 
284 1 57 4 148 1 26 1 152 2 58 1 287 1 1 8 212 1 130 1 131 2 136 13 342 2 163 2 141 5 347 1 95 2 322 2 221 1 18 2 52 1 98 2 99 2 175 1 21 1 235 1 236 2 176 2 
284 1 57 4 148 1 26 1 152 2 58 1 287 1 1 8 212 1 130 1 131 2 136 13 342 2 163 2 141 5 347 1 95 2 322 2 221 1 18 2 52 1 98 2 99 2 175 1 21 1 235 1 236 2 176 2 
284 1 106 1 57 2 148 1 26 1 152 3 58 1 211 1 287 2 157 2 1 24 212 4 130 6 190 1 131 8 365 1 214 1 136 42 342 7 163 7 65 1 141 18 347 2 95 1 299 1 120 1 322 1 198 1 221 1 323 1 18 1 52 6 98 1 353 1 99 8 175 1 235 1 236 4 355 1 176 7 
57 4 148 1 26 1 152 1 58 1 287 1 1 7 212 1 130 2 131 2 136 11 342 2 163 2 141 4 347 1 95 2 322 2 221 1 18 2 52 2 98 2 173 1 99 2 175 1 21 1 235 1 236 2 176 2 
284 1 57 4 148 1 26 2 152 4 58 1 211 1 1 14 212 2 130 1 190 1 131 3 44 1 136 24 214 1 342 3 163 3 65 1 141 10 347 2 95 2 299 1 322 2 198 1 221 2 52 1 18 2 98 2 99 3 175 1 235 1 236 2 176 3 
302 1 78 1 309 1 375 1 247 1 15 1 14 1 208 1 23 1 128 1 
251 1 0 1 
78 1 309 1 56 1 247 1 252 1 14 1 370 1 23 1 128 1 
273 1 115 1 309 1 78 1 94 1 166 1 11 1 288 1 15 1 14 1 361 1 201 2 128 1 375 1 247 1 139 1 208 1 23 1 
273 1 115 1 309 1 78 1 94 1 166 1 11 1 288 1 15 1 14 1 361 1 201 2 128 1 375 1 247 1 139 1 208 1 23 1 
273 1 115 1 309 1 78 1 94 1 166 1 11 1 288 1 15 1 14 1 361 1 201 2 128 1 375 1 247 1 139 1 208 1 23 1 
319 1 168 1 50 1 
319 1 168 1 50 1 
250 1 282 1 
250 1 50 1 282 1 
161 1 76 1 
78 1 309 1 125 1 0 1 288 1 290 2 128 1 63 2 313 1 91 2 247 1 161 1 116 1 275 1 94 1 166 1 251 1 11 1 14 1 201 1 171 2 354 1 378 2 177 1 238 1 76 1 23 1 
319 1 168 1 
250 1 50 1 282 1 
356 1 41 1 310 1 57 2 83 1 243 1 290 2 1 1 91 2 32 1 366 1 136 2 5 1 317 1 164 1 141 1 216 2 348 1 95 1 276 2 322 1 12 1 226 1 229 2 18 1 98 1 231 1 234 1 100 2 378 2 260 1 
105 1 239 1 216 2 147 1 348 1 357 1 276 2 312 2 199 1 229 2 325 1 172 1 53 1 234 1 304 1 191 1 20 1 205 1 272 1 
105 1 239 1 216 1 348 1 276 1 312 2 229 1 16 1 325 1 172 1 53 1 304 1 191 1 234 1 20 1 205 1 272 1 
164 1 216 1 348 1 9 1 276 1 358 1 223 1 199 1 229 1 325 1 231 1 234 1 270 1 146 1 
105 1 239 1 216 1 147 1 348 1 276 1 312 2 199 1 229 1 325 1 172 1 53 1 234 1 304 1 191 1 20 1 205 1 272 1 
359 1 
273 1 253 1 335 1 108 1 210 1 156 1 178 1 
109 1 28 1 210 1 156 1 289 1 113 1 273 2 165 1 94 1 166 1 36 1 253 1 256 1 305 1 19 1 281 1 259 1 
180 4 332 2 339 1 131 2 134 3 342 2 343 2 344 2 94 5 348 1 253 5 202 1 99 2 305 5 256 8 19 3 257 2 259 3 55 2 24 1 107 1 109 4 27 2 28 3 210 8 156 1 360 2 270 1 163 2 271 4 273 5 164 6 67 2 216 1 166 5 276 1 36 3 277 1 229 1 280 1 231 1 234 2 72 2 176 2 281 3 327 2 
273 2 180 3 347 1 109 2 299 1 28 1 198 1 210 2 253 3 212 1 99 1 256 4 19 1 236 1 176 1 342 1 214 1 281 1 259 1 271 3 
106 1 331 1 82 1 28 1 210 2 87 1 290 1 337 1 63 1 131 1 91 1 295 1 94 1 166 1 96 1 120 1 97 1 253 2 171 1 353 1 99 2 72 2 19 1 326 1 378 1 281 1 306 1 259 1 
273 1 28 1 210 1 156 1 335 1 253 1 19 1 281 1 259 1 178 1 
180 1 273 1 109 1 210 2 253 1 99 1 131 1 72 1 256 2 176 1 342 1 163 1 271 1 
273 1 94 1 166 1 305 1 36 1 156 1 
55 2 79 1 209 1 358 1 28 1 210 2 292 1 268 2 248 1 270 2 45 1 164 1 216 4 94 3 348 1 166 3 276 4 219 1 36 2 223 1 229 4 253 2 231 1 280 2 234 1 305 4 19 2 281 2 259 2 
41 1 57 2 82 1 83 1 87 2 1 1 290 2 63 2 313 1 91 3 366 1 270 1 136 1 249 1 274 1 164 1 216 1 95 1 348 1 276 1 322 1 277 1 70 1 229 1 18 1 351 1 98 1 171 2 231 1 234 1 378 3 101 1 
180 2 55 1 273 4 109 2 28 1 210 1 156 2 253 2 280 1 256 4 19 1 365 1 281 1 259 1 271 2 
78 1 377 1 23 1 
244 1 78 1 375 1 76 1 23 1 
78 1 377 1 23 1 
78 1 377 1 23 1 
111 1 78 1 23 1 
111 1 78 1 23 1 
111 1 78 1 23 1 
78 1 23 1 
247 1 128 1 
106 1 57 2 1 4 212 1 130 2 131 1 365 1 136 8 141 4 347 1 95 1 299 1 322 1 120 1 323 1 18 1 52 2 98 1 99 1 353 1 175 1 236 1 355 1 
80 1 57 4 211 1 287 1 157 1 1 11 212 2 130 3 190 1 131 4 136 18 342 4 214 1 163 4 141 7 347 1 95 2 299 1 322 2 198 1 18 2 52 3 98 2 99 4 175 1 236 2 176 4 
106 1 80 1 57 6 211 1 1 10 212 1 130 3 190 1 131 3 44 1 365 1 136 17 214 1 342 2 163 2 141 7 347 1 95 3 299 1 120 1 322 3 198 1 323 1 18 3 52 3 98 3 353 1 99 3 175 1 236 1 355 1 176 2 
80 1 57 4 211 1 1 6 212 1 130 1 131 2 190 1 136 10 214 1 342 2 163 2 141 4 347 1 95 2 299 1 322 2 198 1 18 2 52 1 98 2 99 2 175 1 236 1 176 2 
106 1 57 2 1 4 212 1 130 2 131 1 365 1 136 8 141 4 347 1 95 1 299 1 322 1 120 1 323 1 18 1 52 2 98 1 99 1 353 1 175 1 236 1 355 1 
57 2 211 1 1 6 212 1 130 1 131 2 190 1 136 10 214 1 342 2 163 2 141 4 347 1 95 1 299 1 322 1 198 1 18 1 52 1 98 1 99 2 175 1 236 1 176 2 
80 1 57 6 211 1 1 7 212 1 130 1 190 1 131 2 44 1 136 11 214 1 342 2 163 2 141 4 347 1 95 3 299 1 322 3 198 1 18 3 52 1 98 3 99 2 175 1 236 1 176 2 
57 6 211 1 1 7 212 1 130 2 190 1 131 2 44 1 136 11 214 1 342 2 163 2 141 4 347 1 95 3 299 1 322 3 198 1 18 3 52 2 98 3 99 2 175 1 21 1 236 1 176 2 
141 3 106 3 120 3 1 4 323 2 52 6 130 3 131 1 353 1 99 1 355 1 136 7 124 3 
57 6 211 1 1 7 212 1 130 1 190 1 131 2 44 1 136 11 214 1 342 2 163 2 141 4 347 1 95 3 299 1 322 3 198 1 18 3 52 1 98 3 99 2 175 1 21 1 236 1 176 2 
141 4 106 1 57 4 95 2 322 2 120 1 1 4 323 1 52 3 18 2 98 2 130 2 131 1 99 1 353 1 44 1 365 1 355 1 136 8 124 1 
141 3 106 1 108 1 120 1 1 3 323 1 52 2 130 2 353 1 99 1 131 1 365 1 355 1 136 6 
141 1 80 1 57 2 95 1 322 1 1 2 52 1 18 1 98 1 130 1 131 1 99 1 176 1 342 1 136 3 163 1 
141 2 347 1 287 1 1 4 52 1 212 1 130 1 99 1 131 1 236 2 176 1 136 6 342 1 163 1 
106 2 57 4 287 1 157 1 1 12 212 2 130 5 131 3 44 2 365 1 342 2 136 21 315 1 163 2 141 9 95 2 120 2 322 2 323 1 52 7 18 2 98 2 353 1 99 3 236 2 355 1 176 2 124 2 103 1 
236 1 136 1 1 1 
141 1 212 1 136 1 
141 2 80 1 95 1 57 2 322 1 1 3 18 1 52 2 98 1 130 2 99 1 131 1 257 1 176 1 136 5 342 1 163 1 
57 2 211 1 1 6 212 1 130 1 131 2 190 1 136 10 214 1 342 2 163 2 141 4 347 1 95 1 299 1 322 1 198 1 18 1 52 1 98 1 99 2 175 1 236 1 176 2 
141 3 106 1 120 1 1 3 52 2 130 1 353 1 99 1 131 1 136 6 124 1 
141 1 106 1 57 2 95 1 120 1 322 1 1 2 323 1 52 2 18 1 98 1 130 1 44 1 355 1 136 3 124 1 103 1 
141 5 106 2 95 1 57 2 322 1 120 2 97 1 1 5 18 1 52 5 98 1 130 3 353 1 99 2 131 2 175 1 136 10 124 2 
141 1 57 2 95 1 322 1 18 1 98 1 99 1 175 1 342 1 136 1 
141 1 57 2 95 1 322 1 1 2 52 1 18 1 98 1 130 1 131 1 99 1 175 1 176 1 342 1 136 3 163 1 
141 1 106 1 57 6 95 3 322 3 120 1 1 2 18 3 52 2 98 3 130 1 175 1 21 1 44 1 136 3 103 1 124 1 
106 3 80 1 57 10 264 1 287 1 1 19 212 3 130 5 131 5 44 2 365 1 136 33 342 3 46 1 163 3 141 14 347 1 95 5 120 3 322 5 323 1 18 5 52 8 98 5 353 2 99 5 175 1 21 1 236 4 355 1 22 1 176 3 124 3 103 1 
313 1 91 1 133 1 183 1 378 1 290 1 2 1 
68 1 183 1 13 1 2 1 290 1 71 1 3 1 313 1 133 1 91 1 378 1 261 1 
164 1 216 1 231 1 234 1 348 1 108 1 358 1 276 1 270 1 223 1 229 1 
274 1 164 1 216 1 48 1 348 1 276 1 277 1 290 1 229 1 63 1 351 1 171 1 231 1 313 1 234 1 91 2 378 2 270 1 
290 2 63 1 313 1 268 1 91 2 64 1 274 1 164 3 216 1 348 1 48 1 320 1 276 1 277 2 229 1 351 1 171 2 231 2 230 1 234 1 326 1 378 2 40 1 
290 2 63 1 313 1 268 1 91 2 64 1 274 1 164 3 216 2 348 1 48 1 320 1 276 2 170 1 277 2 229 2 324 1 171 2 231 2 230 1 234 1 326 1 378 2 40 1 
273 1 164 4 216 3 94 2 7 1 166 2 348 1 27 1 276 3 332 1 49 1 277 1 156 1 229 3 324 1 231 1 234 1 305 1 268 1 134 1 64 1 270 1 40 1 
273 1 164 4 216 3 94 2 166 2 348 1 27 1 276 3 332 1 277 1 156 1 229 3 324 1 231 1 234 1 305 1 268 1 134 1 64 1 270 1 327 1 40 1 
216 1 234 1 348 1 276 1 39 1 229 1 
164 3 216 7 348 2 357 1 321 1 276 7 277 1 229 6 31 1 352 1 339 1 231 2 304 1 234 3 100 1 114 1 270 2 367 1 39 1 5 1 104 1 
41 2 83 2 290 1 1 3 129 1 130 2 131 1 91 2 136 6 249 1 141 3 95 2 48 1 348 1 351 1 18 2 52 2 303 1 98 2 353 1 99 1 101 1 355 1 106 1 57 4 310 1 357 1 63 1 62 1 313 2 32 1 365 1 274 1 164 1 216 1 276 1 322 2 120 1 277 1 229 1 323 1 171 1 231 1 234 1 73 1 378 2 283 1 
332 1 27 1 28 2 210 1 156 1 335 1 292 1 134 1 270 1 343 1 273 1 67 1 164 2 216 1 344 1 94 3 166 3 276 1 36 1 229 1 253 1 305 2 19 2 281 2 177 1 327 1 259 2 178 1 
164 2 216 2 107 1 348 1 357 1 332 1 276 2 277 1 229 2 339 1 231 1 234 2 39 1 
164 1 216 4 348 1 357 1 276 4 358 1 223 1 229 4 324 1 231 1 234 1 270 1 140 1 
164 1 216 2 348 1 169 1 276 2 277 1 229 2 231 1 234 2 268 1 114 1 104 1 308 1 307 1 
239 1 216 1 53 1 234 1 348 1 276 1 270 1 312 1 272 1 229 1 
164 1 216 2 348 1 357 1 276 2 229 2 226 1 231 1 304 1 234 1 5 1 
164 3 216 5 348 2 357 1 358 1 276 5 321 1 223 1 229 4 352 1 231 2 234 2 268 1 270 1 140 1 5 1 
164 3 216 5 348 2 357 1 358 1 276 5 223 1 362 1 229 4 352 1 231 2 234 2 268 1 270 1 140 1 5 1 
274 1 164 1 216 1 48 1 348 1 276 1 170 1 277 1 290 1 229 1 63 1 171 1 231 1 313 1 234 1 91 2 378 2 270 1 
164 1 216 1 348 1 276 1 277 1 229 1 31 1 339 1 231 1 234 2 268 1 114 1 104 1 
204 1 313 1 25 1 293 1 349 1 
273 1 194 1 94 2 166 2 25 2 320 1 349 1 27 1 156 1 158 1 144 1 230 1 132 1 204 2 313 1 293 2 326 1 177 1 207 1 
356 1 25 1 349 1 243 1 290 1 293 1 91 1 378 1 260 1 
144 1 349 1 207 1 
108 1 314 1 222 1 86 1 
254 1 246 1 314 1 222 1 86 1 59 1 51 1 
254 1 213 1 298 1 
254 3 376 1 340 1 246 1 314 1 85 2 29 1 153 1 222 1 86 1 59 3 51 1 
254 2 90 1 246 1 314 1 222 1 86 1 59 2 43 1 51 1 
105 1 195 1 312 1 59 1 51 1 254 1 376 1 246 1 314 1 237 1 272 1 
254 1 376 1 246 1 314 1 222 1 59 1 51 1 
254 1 376 1 246 1 222 2 86 1 59 1 51 1 
222 1 59 2 51 2 254 2 291 1 376 1 255 1 246 2 314 1 102 1 
222 1 86 1 59 3 51 1 254 3 90 2 376 1 37 1 246 1 314 2 237 1 192 1 215 1 
105 1 312 2 222 1 86 1 59 2 51 1 254 2 90 1 376 1 53 1 246 1 233 1 314 1 205 1 272 1 
334 1 222 1 86 1 59 4 43 1 51 2 254 4 90 2 376 1 246 2 314 2 237 1 192 1 
254 1 376 1 246 1 314 1 222 1 86 1 59 1 51 1 
85 1 29 1 153 1 222 2 86 2 59 4 155 1 51 1 254 4 90 2 246 1 314 3 237 1 192 1 
371 1 333 1 84 1 222 1 59 2 86 1 51 1 254 2 90 1 376 1 246 1 314 1 
10 1 153 1 29 2 85 2 59 3 86 1 222 1 51 1 254 3 376 1 246 1 314 1 
338 1 174 1 314 2 137 2 
254 1 376 1 246 1 297 1 59 1 51 1 
254 2 90 1 37 1 376 1 246 1 314 1 222 1 86 1 59 2 51 1 
279 1 
254 1 376 1 246 1 314 1 222 1 86 1 59 1 51 1 
254 3 90 1 37 1 376 1 246 1 314 1 85 1 222 1 86 1 59 3 51 1 
314 1 237 1 192 1 155 1 
314 1 222 1 

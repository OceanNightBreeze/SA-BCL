#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
5 3 6 1 166 1 244 2 215 1 267 2 187 2 8 4 30 1 295 1 33 5 34 1 325 2 324 2 80 2 82 9 196 1 105 6 128 1 106 1 302 1 303 1 232 1 237 1 137 1 359 9 65 2 336 1 
5 3 6 1 166 1 244 2 215 1 267 2 187 2 8 4 30 1 295 1 33 5 34 1 324 2 325 2 80 2 82 9 196 1 105 6 128 1 106 1 302 1 303 1 232 1 237 1 137 1 359 9 65 2 336 1 
5 4 6 1 166 1 244 2 215 1 267 2 187 2 8 5 30 1 295 1 33 6 34 1 324 2 325 2 80 2 82 10 196 1 105 7 128 1 106 1 302 1 303 1 232 1 237 1 137 1 359 10 65 2 336 1 
5 2 6 1 166 1 244 2 215 1 267 2 187 2 8 3 30 1 33 4 34 1 324 2 325 1 80 2 82 7 196 1 105 4 128 1 106 1 302 1 303 1 232 1 237 1 137 1 359 7 65 2 336 1 
82 4 5 1 105 3 6 1 244 1 215 1 106 1 267 1 187 1 8 2 295 1 33 3 137 1 359 4 324 1 325 2 336 1 80 1 
56 1 82 2 6 1 244 1 106 1 267 1 160 1 131 1 187 1 30 1 33 1 237 1 137 1 359 2 65 1 324 1 
82 3 5 1 105 1 6 1 244 2 106 1 267 2 8 1 232 1 33 2 137 1 359 3 65 1 
5 3 6 1 244 2 215 1 267 2 8 4 187 1 295 1 33 5 34 1 325 2 324 1 80 1 82 9 105 7 128 1 106 1 232 1 18 1 137 1 359 9 65 1 336 1 139 1 
5 3 6 1 244 2 215 1 267 2 8 4 187 1 295 1 33 5 34 1 325 2 324 1 80 1 82 9 105 7 128 1 106 1 232 1 18 1 137 1 359 9 65 1 336 1 139 1 
93 1 107 1 188 1 
93 1 310 2 247 1 
230 1 159 2 263 2 266 2 256 2 19 1 245 2 20 2 
0 1 69 1 315 1 49 1 1 1 366 1 115 1 242 2 316 1 263 2 338 1 266 3 245 2 342 1 217 2 189 1 52 2 343 2 191 1 149 1 125 1 152 1 77 1 327 1 329 2 159 3 256 2 230 1 16 1 111 1 133 1 204 1 19 1 47 1 20 2 140 1 92 1 
159 1 263 1 126 1 266 1 256 1 180 1 19 1 245 1 20 1 363 1 
93 1 159 1 266 1 174 1 71 1 107 1 236 1 296 1 122 1 35 1 286 1 20 1 76 1 363 1 
93 1 263 1 159 1 256 1 266 1 174 1 245 1 71 2 107 1 236 1 122 1 35 2 20 1 76 1 363 1 
367 1 35 1 71 1 227 1 275 1 
367 1 93 1 212 1 85 1 35 2 71 2 107 1 275 1 
367 1 35 1 71 1 
263 1 159 1 126 1 256 1 266 1 71 1 245 1 35 1 180 1 19 1 20 1 349 1 363 1 275 1 
93 1 
367 1 93 1 85 1 35 2 71 2 107 1 154 1 275 1 
367 2 93 1 59 1 214 1 85 1 71 5 107 1 9 1 229 1 219 1 88 2 63 1 64 1 35 5 123 1 91 2 275 2 171 2 299 1 
230 1 188 1 
159 2 263 1 266 2 256 1 245 1 14 1 230 2 372 1 20 2 
265 1 25 1 86 1 
0 1 69 1 1 1 366 1 49 1 159 1 4 1 266 1 217 1 189 1 230 1 343 1 47 1 77 1 327 1 329 1 
0 1 69 1 49 1 366 1 1 1 263 1 159 2 265 1 266 2 330 1 225 1 245 1 217 1 189 1 343 1 47 1 20 1 77 1 327 1 329 1 
230 1 159 3 263 3 256 1 266 3 225 1 245 3 20 3 
159 1 263 1 126 1 266 1 245 1 20 1 363 1 
159 1 263 1 372 1 266 1 256 1 245 1 14 1 20 1 363 1 
0 1 69 1 315 1 49 1 366 1 1 1 242 1 263 3 338 1 266 4 245 3 71 1 217 1 189 1 52 2 343 1 191 1 372 1 122 1 35 1 54 1 152 1 76 1 77 1 327 1 329 1 159 4 256 2 330 1 225 1 174 1 230 1 16 1 111 1 284 1 236 1 133 1 204 1 19 1 47 1 20 3 140 1 363 1 92 1 
230 1 3 1 159 2 263 1 266 2 225 1 286 1 245 1 20 2 
93 1 263 3 159 3 256 1 266 3 330 1 225 2 174 1 71 1 245 3 271 1 284 1 372 1 236 1 122 1 35 1 20 3 76 1 363 1 
263 2 159 2 265 1 25 1 256 1 266 2 225 1 245 2 372 1 20 2 
0 1 69 1 1 1 366 1 49 1 159 1 266 1 217 1 189 1 230 1 343 1 47 1 77 1 327 1 329 1 
0 1 69 1 49 1 159 1 266 1 217 1 189 1 230 1 343 1 120 1 47 1 360 1 77 1 327 1 329 1 
315 1 242 4 338 1 265 2 25 2 290 1 185 1 52 2 151 1 345 1 98 1 125 2 197 1 354 1 41 1 86 2 308 1 16 1 111 1 89 1 204 2 140 1 261 1 92 1 
159 1 263 1 122 1 266 1 245 1 20 1 363 1 104 1 
3 1 263 4 159 5 83 1 266 5 256 1 330 1 225 2 245 4 331 1 230 1 372 1 286 1 20 5 
159 2 263 2 126 1 266 2 245 2 20 2 104 1 363 1 
74 1 13 1 
74 1 13 1 
145 1 246 1 
145 1 246 1 
145 1 246 1 
202 1 74 1 13 1 
74 1 13 1 381 1 
179 1 74 2 169 1 13 2 145 1 246 1 
202 1 74 1 13 1 
202 1 74 1 13 1 
74 1 13 1 12 1 
74 1 13 1 12 1 
74 1 13 1 12 1 
68 1 93 1 173 3 369 1 13 2 71 2 216 2 146 2 42 1 109 1 258 2 179 1 272 1 74 2 35 2 36 1 313 2 55 2 328 1 
207 1 263 2 369 1 266 2 245 2 71 1 146 1 216 1 74 1 35 1 55 1 81 1 352 1 173 1 159 2 13 1 198 1 258 1 281 1 230 1 235 1 90 1 381 1 20 2 
324 1 80 1 187 1 
131 1 324 1 187 1 
26 1 131 1 297 1 153 1 80 2 187 3 
368 1 131 1 297 1 153 1 80 1 187 2 
131 1 297 1 80 1 153 2 187 2 
207 1 67 2 367 1 93 2 214 1 341 1 71 5 185 1 51 1 247 1 269 1 322 1 35 5 171 1 275 4 39 1 59 2 85 1 226 1 87 1 161 2 304 2 107 1 281 1 308 1 88 1 310 3 64 3 89 1 90 1 91 1 261 1 
67 6 367 6 93 5 214 1 71 9 185 3 72 1 51 1 294 1 247 3 269 2 322 2 35 9 123 1 274 1 275 7 171 2 277 1 59 6 85 1 301 1 226 3 227 5 304 6 107 1 281 4 309 1 308 3 88 2 310 9 64 8 89 3 239 5 91 2 261 3 
67 2 93 3 341 1 71 3 185 1 247 2 269 1 322 1 35 3 123 1 275 2 171 1 59 2 87 1 226 1 161 1 107 1 304 2 281 1 308 1 88 1 64 3 310 4 89 1 91 1 261 1 
67 4 93 4 71 4 341 1 185 2 247 3 269 1 322 1 35 4 123 1 171 1 275 3 277 1 59 4 301 1 87 1 226 2 161 2 107 1 304 4 281 2 309 1 308 2 88 1 310 7 64 5 89 2 91 1 261 2 
0 1 46 1 188 1 
0 1 190 1 
262 1 
0 1 49 1 
0 3 49 1 46 2 224 1 47 1 375 1 
0 1 49 1 47 1 
0 1 163 1 
242 7 144 2 290 2 119 1 308 1 31 1 132 1 178 1 73 1 98 3 204 3 125 4 103 1 326 1 11 1 261 1 314 1 
242 7 144 2 290 2 119 1 308 1 31 1 132 1 178 1 73 1 98 3 204 3 125 4 103 1 326 1 11 1 261 1 314 1 
242 7 144 2 116 1 290 2 119 1 308 1 31 1 132 1 178 1 73 1 98 3 204 3 103 1 125 4 326 1 11 1 261 1 314 1 
315 1 242 31 338 1 243 1 144 3 290 5 185 3 119 5 52 2 31 2 73 1 98 10 121 1 273 1 170 3 192 1 103 1 125 16 11 1 326 1 226 3 257 4 308 4 178 2 132 2 111 1 89 3 204 15 205 1 337 1 261 4 314 2 92 1 289 1 
315 2 242 9 338 2 144 2 290 3 119 1 52 4 31 1 98 4 121 1 73 1 221 1 125 5 103 1 11 1 308 1 178 1 132 1 111 2 204 4 112 1 261 1 92 2 314 1 
210 1 6 1 244 1 26 1 267 1 217 1 293 1 189 1 187 2 343 1 248 1 33 1 150 1 324 1 77 1 80 1 329 1 155 1 82 2 105 1 40 1 106 1 131 1 282 1 334 1 335 1 137 1 359 2 65 1 48 1 
6 1 26 1 244 1 267 1 217 1 293 1 371 1 189 1 187 2 343 1 248 1 33 1 150 1 374 1 324 1 77 1 80 1 329 1 253 1 155 1 82 3 105 2 40 1 131 1 282 1 334 1 335 1 137 1 359 3 65 1 
6 1 26 1 217 1 293 1 371 1 189 1 187 2 343 1 33 1 150 1 374 1 77 1 324 1 80 1 329 1 155 1 82 2 105 2 40 1 131 1 282 1 335 1 137 1 359 2 65 1 
0 1 82 1 69 1 49 1 244 1 267 1 268 1 175 1 376 1 355 1 217 1 293 2 189 1 282 2 343 1 150 2 285 1 359 1 65 2 77 1 361 1 253 1 329 1 
244 1 26 1 267 1 217 1 293 1 371 1 189 1 187 2 343 1 248 1 150 1 324 1 77 1 80 1 329 1 155 1 82 1 40 1 106 1 131 1 282 1 334 1 335 1 359 1 65 1 48 1 
300 1 
0 1 142 1 49 1 93 2 340 2 97 1 189 1 247 2 343 2 10 2 296 1 250 2 346 2 254 1 159 1 57 1 59 2 107 1 162 1 259 2 310 2 64 2 20 1 114 1 361 1 363 1 69 2 367 6 211 2 266 1 214 1 27 1 28 4 71 5 217 2 319 1 269 1 122 1 35 5 76 1 77 1 171 1 37 1 329 2 85 3 279 1 174 1 376 1 332 1 88 1 236 1 181 2 286 1 138 1 91 1 
254 1 367 2 159 1 57 1 266 1 85 1 28 2 174 1 71 3 162 1 259 1 236 1 296 1 122 1 35 3 286 1 114 1 20 1 76 1 154 1 363 1 37 1 
367 1 93 1 266 1 28 3 71 3 296 1 122 1 35 3 76 1 37 1 154 1 254 1 159 1 57 1 85 1 174 1 107 1 162 1 236 1 181 1 286 1 20 1 114 1 363 1 
367 2 211 1 93 1 266 1 28 3 71 3 296 1 122 1 35 3 76 1 154 1 37 1 254 1 159 1 57 1 85 1 174 1 107 1 162 1 259 1 236 1 181 1 286 1 20 1 114 1 363 1 
142 1 93 5 340 2 292 1 247 2 10 2 296 1 250 2 347 1 346 2 154 1 298 1 254 1 159 1 57 1 59 1 107 5 162 1 259 4 64 1 114 1 20 1 363 1 367 7 211 4 266 1 214 1 28 6 71 5 122 1 35 5 76 1 37 1 171 1 85 3 129 1 174 1 88 1 236 1 181 4 135 1 286 1 138 1 91 1 
142 1 93 2 340 2 247 2 10 2 296 1 250 2 346 2 254 1 159 1 57 1 59 1 107 1 162 1 259 2 64 1 310 2 114 1 20 1 363 1 367 4 211 2 266 1 214 1 28 4 71 4 122 1 35 4 76 1 171 1 37 1 85 2 174 1 332 1 88 1 236 1 181 2 286 1 138 1 91 1 
142 1 367 4 93 1 211 2 266 1 214 1 340 2 28 4 71 4 292 1 247 2 10 2 296 1 250 2 122 1 35 4 346 2 347 1 76 1 37 1 171 1 298 1 254 1 159 1 57 1 85 2 59 1 174 1 107 1 162 1 259 2 88 1 64 1 236 1 181 2 286 1 138 1 20 1 114 1 91 1 363 1 
142 1 367 4 93 1 211 2 266 1 214 1 340 2 28 4 71 4 292 1 247 2 10 2 296 1 250 2 122 1 35 4 346 2 347 1 76 1 37 1 171 1 298 1 254 1 159 1 57 1 85 2 59 1 174 1 107 1 162 1 259 2 88 1 64 1 236 1 181 2 286 1 138 1 20 1 114 1 91 1 363 1 
367 4 93 1 211 2 165 1 266 1 214 1 340 2 28 4 71 4 320 2 296 1 250 2 122 1 35 4 347 1 124 1 76 1 37 1 171 1 254 1 159 1 57 1 85 2 59 1 174 1 107 1 228 1 162 1 259 2 88 1 310 2 64 1 236 1 181 2 45 2 286 1 138 1 20 1 114 1 91 1 363 1 
142 1 367 5 93 1 211 3 266 1 214 1 340 2 28 5 71 4 292 1 247 2 10 2 296 1 250 2 122 1 35 4 346 2 347 1 76 1 171 1 37 1 298 1 254 1 159 1 57 1 85 2 59 1 174 1 107 1 162 1 259 3 88 1 64 1 236 1 135 1 181 3 286 1 138 1 20 1 114 1 91 1 363 1 
142 1 367 5 93 1 211 3 266 1 214 1 340 2 28 5 71 4 292 1 247 2 10 2 296 1 250 2 122 1 35 4 346 2 347 1 76 1 171 1 37 1 298 1 254 1 159 1 57 1 85 2 59 1 174 1 107 1 162 1 259 3 88 1 64 1 236 1 135 1 181 3 286 1 138 1 20 1 114 1 91 1 363 1 
93 1 340 2 296 1 250 2 254 1 159 1 57 1 59 1 107 1 162 1 259 2 64 1 310 2 114 1 20 1 363 1 367 4 165 1 211 2 266 1 214 1 28 4 71 4 320 2 122 1 35 4 76 1 171 1 37 1 85 2 174 1 332 1 88 1 236 1 45 2 181 2 286 1 138 1 91 1 
315 1 242 6 265 1 338 1 144 1 25 1 290 2 188 1 52 2 31 1 345 1 98 2 73 1 103 1 125 3 11 1 86 1 308 1 230 2 16 1 111 1 204 3 140 1 261 1 92 1 314 1 
315 2 209 1 115 1 242 14 338 2 265 11 25 4 290 1 185 2 119 1 52 4 98 2 273 1 170 3 125 8 350 1 38 1 86 11 226 2 15 1 257 3 308 2 230 1 16 1 111 2 133 1 89 1 204 6 140 2 261 1 289 1 364 1 92 2 
0 1 69 1 49 1 366 1 1 1 315 1 209 1 115 1 263 1 242 2 4 1 338 1 25 1 266 2 245 1 217 1 189 1 52 2 343 1 321 1 125 1 77 1 327 1 329 1 351 1 159 2 330 1 225 1 230 1 16 1 111 1 133 1 204 1 47 1 20 1 240 1 140 1 92 1 
0 2 1 2 49 2 242 20 144 1 338 3 290 4 245 1 185 2 189 2 52 6 343 3 98 8 103 1 152 2 102 2 11 1 159 3 62 1 308 3 16 3 17 2 111 3 204 10 358 1 20 1 261 3 314 1 69 1 209 1 315 3 366 2 115 1 263 1 24 1 265 7 266 3 25 7 217 3 371 1 119 4 31 1 73 1 125 10 77 2 327 2 329 3 330 1 225 1 86 7 226 2 280 2 230 2 133 1 89 2 47 2 140 3 287 2 92 3 
0 3 69 2 315 2 49 2 210 1 241 1 115 1 263 1 242 2 316 2 213 1 338 2 266 1 370 1 245 1 217 7 371 1 189 2 52 4 343 8 345 1 220 1 125 1 77 2 348 1 329 8 159 1 225 1 376 1 16 2 377 1 111 2 133 1 204 1 380 1 20 1 140 2 361 1 92 2 
315 1 209 1 263 1 242 3 265 1 338 1 25 1 266 1 290 1 245 1 185 1 52 2 98 1 372 1 125 1 157 1 159 1 256 1 86 1 226 1 308 1 16 1 111 1 89 1 204 2 20 1 140 1 261 1 92 1 
315 1 242 2 354 1 265 1 338 1 25 1 86 1 185 1 119 1 52 2 308 1 16 1 111 1 98 1 345 1 125 2 140 1 92 1 
315 1 197 1 242 2 265 1 338 1 25 1 290 1 86 1 52 2 16 1 111 1 98 1 345 1 89 1 204 2 140 1 261 1 92 1 
315 1 242 4 338 1 265 2 25 2 290 1 185 1 119 1 52 2 345 1 98 2 125 2 86 2 226 1 308 1 16 1 111 1 89 1 204 2 140 1 261 1 92 1 
315 1 242 2 354 1 265 1 338 1 25 1 86 1 185 1 119 1 52 2 308 1 16 1 111 1 98 1 380 1 125 2 140 1 92 1 
315 1 197 1 242 2 265 1 338 1 25 1 290 1 86 1 52 2 16 1 111 1 98 1 89 1 204 2 380 1 140 1 261 1 92 1 
315 1 242 4 338 1 265 2 25 2 290 1 185 1 119 1 52 2 98 2 125 2 86 2 226 1 308 1 16 1 111 1 89 1 204 2 380 1 140 1 261 1 92 1 
315 1 242 4 338 1 265 2 25 2 290 1 185 1 119 1 52 2 98 2 125 2 86 2 226 1 308 1 16 1 111 1 89 1 204 2 140 1 261 1 92 1 
0 1 69 1 49 1 366 1 1 1 315 1 115 1 242 2 338 1 266 1 217 1 189 1 52 2 343 1 125 1 152 1 77 1 327 1 329 1 159 1 230 1 16 1 111 1 133 1 204 1 47 1 140 1 92 1 
0 1 69 1 49 1 315 1 115 1 242 2 338 1 266 1 217 1 50 1 189 1 52 2 343 1 120 1 125 1 77 1 327 1 329 1 159 1 230 1 16 1 111 1 133 1 204 1 47 1 360 1 140 1 92 1 
315 1 209 1 242 4 338 1 265 2 25 2 290 1 185 1 119 1 52 2 98 2 125 2 86 2 226 1 308 1 16 1 111 1 89 1 204 2 140 1 261 1 92 1 
0 1 366 1 1 1 49 1 315 1 210 1 242 4 265 2 338 1 25 2 266 1 290 1 185 1 217 1 119 1 189 1 52 2 343 1 98 2 125 2 152 1 77 1 327 1 329 1 159 1 86 2 226 1 280 1 308 1 16 1 111 1 89 1 204 2 47 1 140 1 261 1 92 1 
315 1 209 1 263 1 242 3 338 1 265 1 266 1 25 1 245 1 185 1 119 1 52 2 98 1 372 1 125 2 159 1 256 1 60 1 86 1 226 1 308 1 16 1 111 1 89 1 204 1 20 1 140 1 261 1 92 1 
242 41 338 3 144 1 339 1 290 4 7 1 185 4 52 6 98 8 251 1 103 1 193 1 11 1 194 1 61 1 257 4 306 4 308 5 356 1 111 3 204 21 312 1 261 5 314 1 315 3 264 1 117 2 119 4 218 1 31 1 121 1 73 1 273 1 170 3 221 1 125 20 226 4 177 1 378 1 89 4 92 3 289 3 382 1 
315 4 242 38 144 1 264 1 338 4 339 1 290 4 117 2 7 1 185 4 218 1 119 3 52 8 31 1 73 1 121 2 98 7 273 1 170 3 221 1 103 1 251 1 125 20 193 1 11 1 194 1 61 1 226 4 306 4 257 4 177 1 308 5 356 1 111 4 378 1 89 3 204 18 312 1 261 4 382 1 314 1 289 3 92 4 
315 2 242 52 144 1 264 1 338 2 339 1 290 7 117 1 7 1 185 7 119 7 52 4 31 1 73 1 121 1 98 14 273 2 170 4 221 1 103 1 251 1 125 27 193 1 11 1 194 1 61 1 226 7 15 2 306 4 257 4 177 1 308 8 356 1 111 2 378 1 89 7 204 25 312 1 261 8 314 1 289 2 92 2 
315 2 183 1 242 19 338 2 339 2 290 3 117 1 7 1 185 3 218 1 119 3 52 4 98 6 273 1 170 1 221 1 125 9 193 1 61 1 226 3 306 2 257 2 308 3 356 1 111 2 89 3 204 10 261 3 289 1 92 2 
315 3 242 26 338 3 264 1 339 1 290 2 117 2 7 1 185 3 119 2 52 6 121 2 98 4 170 2 221 1 251 1 125 14 193 1 194 1 61 1 226 3 306 4 257 2 177 1 308 3 356 2 111 3 378 1 89 2 204 12 312 1 261 2 92 3 289 2 
68 1 179 1 272 1 74 1 13 1 146 1 216 1 318 1 258 1 55 1 
381 1 81 1 
168 1 74 1 13 1 373 1 146 1 216 1 258 1 55 1 110 1 
68 1 93 1 173 2 369 1 13 1 71 1 216 1 146 1 109 1 258 1 179 1 272 1 74 1 35 1 36 1 313 1 55 1 328 1 
68 1 93 1 173 2 369 1 13 1 71 1 216 1 146 1 109 1 258 1 179 1 272 1 74 1 35 1 36 1 313 1 55 1 328 1 
68 1 93 1 173 2 369 1 13 1 71 1 216 1 146 1 109 1 258 1 179 1 272 1 74 1 35 1 36 1 313 1 55 1 328 1 
202 1 169 1 53 1 
202 1 169 1 53 1 
158 1 12 1 
158 1 169 1 12 1 
352 1 198 1 
207 1 263 2 266 2 71 1 245 2 146 1 216 1 74 1 35 1 328 1 275 1 55 1 81 1 352 1 159 2 173 1 13 1 198 1 258 1 281 1 230 1 235 1 90 1 113 1 381 1 313 1 20 2 
202 1 53 1 
158 1 169 1 12 1 
0 1 49 1 315 1 209 1 115 1 242 2 316 2 213 1 338 1 266 2 217 2 189 1 52 2 343 2 344 1 148 1 99 1 125 1 77 1 348 1 329 2 278 1 159 2 16 1 111 1 133 1 204 1 20 2 140 1 206 1 92 1 
365 1 210 1 23 1 84 1 40 1 26 1 131 1 217 2 293 1 187 2 189 1 371 1 343 2 334 1 335 1 324 1 77 1 80 1 329 2 
84 1 40 1 26 1 131 1 217 1 293 1 187 2 371 1 307 1 189 1 343 1 334 1 335 1 324 1 77 1 80 1 329 1 
0 1 69 1 49 1 365 1 2 1 217 1 376 1 293 1 189 1 343 1 285 1 77 1 361 1 329 1 
365 1 23 1 84 1 40 1 26 1 131 1 217 1 293 1 187 2 371 1 189 1 343 1 334 1 335 1 324 1 77 1 80 1 329 1 
29 1 
219 1 64 1 93 1 59 1 107 1 188 1 9 1 
142 1 367 1 93 2 214 1 71 1 247 1 10 1 35 1 346 1 171 1 59 1 85 1 107 1 88 1 64 1 310 1 91 1 
0 7 49 2 93 8 96 2 186 2 185 2 189 2 9 1 147 2 247 6 343 3 190 3 195 1 58 2 59 8 200 2 107 2 304 6 308 2 17 2 64 9 310 12 261 2 67 6 21 2 22 1 69 1 210 1 367 5 214 4 71 5 118 1 217 3 219 1 269 2 35 5 222 2 77 3 171 4 329 3 85 3 224 1 279 1 226 2 88 4 234 1 44 1 236 2 89 2 238 1 46 2 47 2 91 4 
21 2 67 5 367 1 93 5 264 1 214 2 71 1 185 2 247 3 269 1 270 1 170 1 35 1 251 1 171 2 194 1 58 1 85 1 59 5 279 1 226 2 304 5 107 2 257 1 308 2 88 2 310 6 64 8 378 1 134 1 89 2 312 1 91 2 261 2 289 1 
21 2 263 1 266 1 214 1 71 1 245 1 31 1 73 1 35 1 349 1 171 1 298 1 159 1 58 1 126 1 256 1 59 2 176 1 308 2 88 1 64 2 180 1 19 1 20 1 91 1 363 1 261 1 314 1 
93 1 214 1 59 1 107 1 9 1 219 1 88 1 64 1 91 1 171 1 
21 2 67 5 93 5 58 1 59 5 226 2 185 2 304 5 308 2 247 5 17 1 310 10 64 5 89 2 261 2 
367 1 93 1 35 1 85 1 71 1 107 1 
0 1 69 2 49 1 367 4 94 1 214 1 71 3 118 2 319 1 217 4 97 1 189 1 343 4 269 2 35 3 123 1 77 1 171 2 329 4 59 2 85 2 279 2 376 1 88 2 64 2 357 1 238 1 91 2 361 1 
0 1 69 1 1 1 366 1 49 1 315 1 242 1 263 2 338 1 266 3 245 2 217 1 189 1 52 2 343 1 191 1 152 1 77 1 327 1 329 1 159 3 256 2 230 1 16 1 111 1 133 1 204 1 19 1 20 2 47 1 140 1 92 1 
67 2 93 4 144 1 59 2 214 1 279 1 304 2 107 2 247 2 269 1 88 1 310 4 64 1 91 1 171 1 
231 1 258 1 55 1 
352 1 272 1 184 1 258 1 55 1 
231 1 258 1 55 1 
231 1 258 1 55 1 
156 1 258 1 55 1 
156 1 258 1 55 1 
156 1 258 1 55 1 
258 1 55 1 
74 1 13 1 
315 1 242 8 144 1 338 1 290 2 52 2 31 1 98 2 73 1 170 1 221 1 125 4 103 1 11 1 257 1 308 1 111 1 378 1 204 4 261 1 289 1 92 1 314 1 
315 2 242 11 144 1 338 2 290 2 185 1 119 1 52 4 31 1 73 1 98 3 273 1 170 1 221 1 103 1 125 6 11 1 226 1 199 1 257 2 308 2 111 2 378 1 204 5 261 1 314 1 289 1 92 2 
315 3 242 19 144 1 338 3 264 1 290 3 185 2 119 1 52 6 31 1 73 1 98 4 121 1 170 1 221 1 103 1 125 9 251 1 11 1 194 1 226 2 199 1 257 1 308 3 111 3 378 1 89 2 204 10 312 1 261 3 314 1 289 1 92 3 
315 3 242 17 144 1 338 3 264 1 290 3 185 2 119 2 52 6 31 1 73 1 121 1 98 5 170 1 221 1 103 1 125 10 251 1 11 1 194 1 226 2 199 1 257 1 308 3 111 3 378 1 89 1 204 7 312 1 261 2 314 1 289 1 92 3 
315 1 242 8 144 1 338 1 290 2 52 2 31 1 98 2 73 1 170 1 221 1 125 4 103 1 11 1 257 1 308 1 111 1 378 1 204 4 261 1 289 1 92 1 314 1 
315 1 242 12 338 1 264 1 290 1 185 2 119 1 52 2 98 2 170 1 221 1 125 6 251 1 194 1 226 2 257 1 308 2 111 1 378 1 89 2 204 6 312 1 261 2 289 1 92 1 
315 4 242 18 144 1 338 4 264 1 290 3 185 2 119 2 52 8 31 1 73 1 98 5 121 2 170 1 221 1 103 1 251 1 125 10 11 1 194 1 226 2 199 1 257 1 308 3 111 4 378 1 89 1 204 8 312 1 261 2 314 1 289 1 92 4 
315 4 242 16 338 4 264 1 290 3 185 3 119 3 218 1 52 8 98 6 121 2 170 1 221 1 251 1 125 9 194 1 226 3 257 1 308 3 111 4 378 1 89 2 204 7 312 1 261 2 289 1 92 4 
242 7 290 3 119 3 308 1 31 3 98 6 73 1 204 4 103 2 125 3 11 1 261 1 314 3 
315 4 242 18 144 1 338 4 264 1 290 3 185 2 119 1 218 1 52 8 31 1 73 1 98 4 121 2 170 1 221 1 103 1 251 1 125 10 11 1 194 1 226 2 257 1 308 3 111 4 378 1 89 1 204 8 312 1 261 2 314 1 289 1 92 4 
315 2 242 8 144 1 338 2 290 2 119 1 308 1 52 4 31 1 111 2 73 1 98 3 121 1 204 4 125 4 103 1 11 1 261 1 92 2 314 1 
31 1 242 6 73 1 98 2 144 1 204 3 290 2 125 3 103 1 11 1 261 1 188 1 308 1 314 1 
315 1 242 4 338 1 290 1 226 1 199 1 185 1 119 1 52 2 308 1 111 1 98 2 89 1 204 2 125 2 261 1 92 1 
242 7 290 1 226 1 185 1 257 2 119 1 308 1 98 2 89 1 273 1 204 4 170 1 125 3 261 1 289 1 
315 2 242 23 144 1 338 2 290 5 185 2 119 4 52 4 31 2 73 1 98 9 121 2 273 1 170 2 103 1 125 11 11 1 350 1 226 2 15 1 257 2 308 3 111 2 89 2 204 12 261 3 141 1 314 2 92 2 
242 1 204 1 257 1 
242 1 170 1 125 1 
315 1 242 6 338 1 290 2 226 1 199 1 185 1 119 1 52 2 308 1 17 1 111 1 98 3 89 1 204 3 125 3 261 1 92 1 
315 1 242 12 338 1 264 1 290 1 185 2 119 1 52 2 98 2 170 1 221 1 125 6 251 1 194 1 226 2 257 1 308 2 111 1 378 1 89 2 204 6 312 1 261 2 289 1 92 1 
242 6 290 1 119 1 308 1 31 1 73 1 98 2 204 3 125 3 261 1 314 1 
315 1 242 3 338 1 290 1 119 1 52 2 31 1 111 1 98 2 121 1 204 2 125 1 103 1 11 1 141 1 314 1 92 1 
315 1 242 10 338 1 290 3 176 1 119 2 52 2 308 2 31 2 111 1 98 5 73 1 204 5 221 1 125 5 261 2 92 1 314 2 
315 1 242 2 338 1 185 1 119 1 52 2 308 1 111 1 98 1 221 1 125 2 92 1 
315 1 242 4 338 1 290 1 226 1 185 1 119 1 52 2 308 1 111 1 98 2 89 1 204 2 221 1 125 2 261 1 92 1 
315 3 242 3 338 3 290 1 218 1 119 1 52 6 31 1 111 3 121 1 98 2 204 2 221 1 125 1 141 1 92 3 314 1 
315 5 242 34 144 1 243 1 338 5 290 7 185 3 218 1 119 5 52 10 31 3 73 2 121 2 98 12 273 1 170 3 192 1 221 1 103 1 125 16 11 1 226 3 199 1 257 4 308 5 111 5 89 3 204 18 337 1 141 1 261 5 314 3 289 1 92 5 
230 1 159 1 3 1 266 1 286 1 20 1 201 1 
164 1 353 1 3 1 159 1 266 1 201 1 230 1 286 1 182 1 100 1 20 1 79 1 
0 1 343 1 69 1 49 1 77 1 376 1 217 1 361 1 189 1 188 1 329 1 
0 1 69 1 49 1 366 1 263 1 159 2 266 2 225 1 245 1 217 1 189 1 230 1 343 1 47 1 20 1 77 1 327 1 329 1 
0 2 366 1 49 2 263 1 266 2 245 2 217 1 118 1 189 1 343 1 122 1 77 1 327 1 329 1 276 1 159 2 225 1 174 1 230 1 44 1 20 2 47 2 363 2 
0 2 49 2 263 1 266 2 245 2 217 1 118 1 189 1 343 1 120 1 122 1 77 1 327 1 329 1 276 1 159 2 225 1 174 1 230 1 44 1 20 2 47 2 363 2 
0 3 49 1 367 1 263 1 93 1 266 1 245 1 71 2 217 1 118 1 189 1 343 1 190 1 35 2 101 1 77 1 349 1 329 1 159 1 126 1 256 1 305 1 107 1 44 1 236 1 180 1 46 1 19 1 20 1 47 1 363 1 
0 3 49 1 367 1 263 1 93 1 266 1 96 1 245 1 71 2 217 1 118 1 189 1 343 1 190 1 35 2 77 1 349 1 329 1 159 1 126 1 256 1 107 1 44 1 236 1 180 1 46 1 19 1 20 1 47 1 363 1 
343 1 220 1 77 1 217 1 189 1 329 1 
0 3 69 2 143 1 49 2 210 1 241 1 316 1 213 1 224 1 370 1 217 6 371 1 189 2 343 7 233 1 377 1 203 1 220 1 47 1 77 3 329 7 
0 1 1 1 49 1 242 6 338 2 144 1 290 2 245 1 189 1 52 4 343 1 98 2 152 1 103 1 11 1 159 2 308 1 16 2 111 2 204 3 20 1 261 1 314 1 366 1 209 1 315 2 210 1 263 1 265 1 25 1 266 2 217 1 31 1 73 1 125 3 77 1 327 1 329 1 278 1 225 1 86 1 280 1 230 2 47 1 287 1 140 2 92 2 
0 2 69 1 367 2 93 1 214 2 96 1 71 3 217 1 186 1 9 1 147 1 343 1 219 1 190 1 35 3 222 1 171 2 275 1 329 1 59 1 85 1 107 1 88 2 64 1 236 1 238 1 46 1 91 2 
0 2 49 1 210 1 224 1 217 2 189 1 343 2 234 1 220 1 46 1 47 1 77 2 329 2 
0 1 69 1 49 1 210 1 217 4 376 1 189 1 343 4 75 1 77 1 361 1 66 1 329 4 
0 1 143 1 49 1 70 1 118 1 217 2 189 1 343 2 283 1 203 1 358 1 47 1 77 2 329 2 
343 1 69 1 40 1 131 1 324 1 77 1 217 1 187 1 189 1 329 1 
0 1 49 1 210 1 213 1 217 2 371 1 189 1 343 2 344 1 77 1 329 2 
0 3 69 1 49 2 210 1 213 1 370 1 118 1 376 1 217 4 189 2 343 5 377 1 75 1 77 2 361 1 329 5 
0 3 69 1 49 2 210 1 213 1 127 1 370 1 118 1 376 1 217 4 189 2 343 5 75 1 77 2 361 1 329 5 
0 1 69 1 49 1 263 1 159 2 266 2 225 1 245 1 217 1 189 1 230 1 343 1 120 1 47 1 20 1 77 1 327 1 329 1 
0 1 143 1 49 1 224 1 118 1 217 1 189 1 343 1 233 1 203 1 47 1 77 2 329 1 
148 1 260 1 159 1 255 1 266 1 99 1 130 1 20 1 206 1 
260 1 323 1 43 1 
230 1 260 1 255 1 95 1 130 1 
93 1 255 2 223 1 95 2 174 1 71 2 130 2 107 1 43 1 230 1 260 1 284 1 236 1 122 1 35 2 323 1 76 1 363 1 275 1 
33 1 6 1 137 1 188 1 
82 1 33 1 6 1 244 1 267 1 137 1 359 1 
150 1 359 1 65 1 
82 3 6 1 244 1 317 1 106 1 267 1 33 1 249 1 237 2 136 1 359 3 137 1 
82 2 33 1 105 1 6 1 244 1 267 1 137 1 359 2 325 1 
82 1 33 1 244 1 267 1 106 1 359 1 324 1 336 1 80 1 187 1 8 1 
82 1 33 1 244 1 267 1 106 1 137 1 359 1 
82 1 6 1 244 1 267 1 106 1 137 2 359 1 
82 2 244 2 106 1 267 2 291 1 108 1 33 1 137 1 359 2 288 1 
82 3 105 2 5 1 6 1 244 1 128 1 106 1 267 1 8 1 33 2 34 1 137 1 359 3 
82 2 105 1 6 1 244 1 26 1 106 1 267 1 131 1 187 2 33 1 167 1 137 1 359 2 324 1 80 1 
82 4 105 2 5 1 6 1 244 2 106 1 267 2 8 1 295 1 33 2 137 1 359 4 325 1 
82 1 33 1 6 1 244 1 267 1 106 1 137 1 359 1 
82 4 105 2 5 1 6 2 244 1 317 1 267 1 8 1 33 3 237 1 249 1 137 2 359 4 252 1 
82 2 208 1 105 1 6 1 244 1 106 1 267 1 333 1 33 1 18 1 137 1 359 2 
82 3 32 1 33 1 237 2 249 2 6 1 244 1 317 1 267 1 106 1 137 1 359 3 
33 2 311 2 78 1 172 1 
82 1 379 1 244 1 267 1 106 1 359 1 
82 2 33 1 105 1 34 1 6 1 244 1 267 1 106 1 137 1 359 2 
362 1 
82 1 33 1 6 1 244 1 267 1 106 1 137 1 359 1 
82 3 105 1 6 1 244 1 106 1 267 1 33 1 237 1 34 1 359 3 137 1 
33 1 5 1 252 1 8 1 
33 1 137 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 3 207 2 68 2 302 2 336 9 305 1 172 1 171 2 173 1 102 2 75 1 196 1 344 1 261 1 345 5 28 1 153 2 373 1 52 1 155 1 32 9 295 6 219 1 322 4 60 2 93 1 331 1 206 1 
168 3 207 2 68 2 302 2 336 9 305 1 172 1 171 2 173 1 102 2 75 1 196 1 344 1 261 1 345 5 28 1 153 2 373 1 52 1 155 1 32 9 295 6 219 1 322 4 60 2 93 1 331 1 206 1 
168 4 207 2 68 2 302 2 336 10 305 1 172 1 171 2 173 1 102 2 75 1 196 1 344 1 261 1 345 6 28 1 153 2 373 1 52 1 155 1 32 10 295 7 219 1 322 5 60 2 93 1 331 1 206 1 
168 2 207 2 68 2 302 1 336 7 305 1 171 2 173 1 102 2 75 1 196 1 344 1 261 1 345 4 28 1 153 2 373 1 52 1 155 1 32 7 295 4 219 1 322 3 60 2 93 1 331 1 206 1 
168 1 155 1 68 1 207 1 302 2 336 4 32 4 295 3 172 1 171 1 322 2 102 1 60 1 93 1 196 1 345 3 373 1 206 1 
52 1 155 1 207 1 68 1 141 1 336 2 32 2 171 1 60 1 196 1 345 1 331 1 347 1 81 1 153 1 373 1 
168 1 155 1 207 2 336 3 32 3 295 1 171 2 322 1 196 1 345 2 28 1 153 1 373 1 
168 3 207 2 68 1 302 2 336 9 171 2 172 1 146 1 102 1 75 1 196 1 261 1 345 5 28 1 153 1 373 1 155 1 295 7 32 9 322 4 93 1 60 1 253 1 206 1 
168 3 207 2 68 1 302 2 336 9 171 2 172 1 146 1 102 1 75 1 196 1 261 1 345 5 28 1 153 1 373 1 155 1 295 7 32 9 322 4 93 1 60 1 253 1 206 1 
317 1 278 1 237 1 
317 1 83 1 190 2 
194 2 17 2 327 2 182 1 80 2 144 2 2 2 264 1 
17 2 303 1 142 1 304 1 144 3 2 3 123 1 194 2 342 2 290 1 107 1 80 2 315 1 27 1 8 1 264 1 109 2 265 1 110 1 30 1 111 1 87 1 182 1 221 1 159 1 90 1 355 1 354 1 64 1 327 2 358 1 34 1 360 1 14 2 332 2 15 2 66 1 
194 1 17 1 327 1 31 1 99 1 80 1 144 1 2 1 264 1 202 1 
317 1 31 1 278 1 178 1 144 1 184 1 45 1 2 1 327 1 359 1 150 1 165 1 240 1 333 1 
17 1 317 1 31 1 278 1 178 2 144 1 184 1 45 1 2 1 194 1 327 1 150 1 165 1 80 1 240 2 
257 1 178 1 85 1 240 1 139 1 
317 1 205 1 257 1 105 1 278 1 178 2 240 2 139 1 
257 1 178 1 240 1 
17 1 31 1 178 1 99 1 246 1 144 1 2 1 202 1 194 1 327 1 80 1 240 1 139 1 264 1 
317 1 
317 1 205 1 257 1 278 1 122 1 178 2 240 2 139 1 
374 2 317 1 121 1 257 2 278 1 209 1 178 5 179 1 72 2 44 1 220 1 145 1 324 1 205 1 106 1 36 1 240 5 139 2 118 2 
237 1 182 1 
293 1 17 1 191 1 182 2 144 2 2 2 194 1 327 2 80 1 
162 1 9 1 128 1 
30 1 111 1 303 1 182 1 221 1 144 1 2 1 358 1 34 1 290 1 14 1 332 1 360 1 152 1 15 1 27 1 
17 1 194 3 327 3 335 1 182 1 80 3 144 3 2 3 
194 1 327 1 31 1 99 1 80 1 144 1 2 1 
293 1 194 1 17 1 327 1 31 1 191 1 80 1 144 1 2 1 
17 2 191 1 335 1 303 1 142 1 304 1 42 1 144 4 45 1 123 1 2 4 194 3 342 1 290 1 150 1 80 3 27 1 240 1 8 1 264 1 109 2 30 1 111 1 31 1 178 1 12 1 182 1 221 1 159 1 184 1 90 1 355 1 354 1 64 1 327 3 34 1 358 1 165 1 360 1 14 1 332 1 256 1 15 1 66 1 
194 1 327 2 335 1 157 1 182 1 80 1 144 2 2 2 333 1 
17 1 317 1 191 1 31 1 335 2 178 1 12 1 45 1 144 3 184 1 2 3 222 1 194 3 327 3 150 1 165 1 80 3 240 1 256 1 
17 1 335 1 191 1 144 2 2 2 162 1 194 2 327 2 80 2 128 1 
30 1 111 1 303 1 182 1 221 1 144 1 2 1 358 1 34 1 290 1 14 1 332 1 360 1 15 1 27 1 
30 1 303 1 182 1 247 1 144 1 2 1 358 1 34 1 290 1 14 1 332 1 360 1 15 1 27 1 316 1 
277 1 304 1 281 1 339 1 231 1 342 4 369 1 370 1 128 2 8 1 109 2 156 1 130 1 113 1 9 2 87 2 159 1 355 1 354 1 162 2 64 2 251 1 225 1 66 1 
194 1 327 1 31 1 131 1 80 1 184 1 144 1 2 1 
30 1 335 1 111 1 303 1 221 1 144 2 2 2 194 1 327 1 34 1 358 1 290 1 128 1 360 1 80 1 14 1 332 1 27 1 256 1 15 1 
17 1 194 4 309 1 327 5 191 1 335 2 157 1 182 1 80 4 256 1 144 5 2 5 333 1 117 1 
194 2 327 2 131 1 31 1 99 1 80 2 144 2 2 2 
294 1 280 1 
294 1 280 1 
158 1 238 1 
158 1 238 1 
158 1 238 1 
294 1 234 1 280 1 
294 1 211 1 280 1 
294 2 77 1 4 1 158 1 280 2 238 1 
294 1 234 1 280 1 
294 1 234 1 280 1 
294 1 280 1 189 1 
294 1 280 1 189 1 
294 1 280 1 189 1 
294 2 317 1 178 2 20 3 0 1 280 2 364 2 307 2 379 2 94 2 260 1 380 1 77 1 299 1 149 1 104 1 240 2 96 1 348 2 
20 1 364 1 280 1 74 1 22 1 144 2 2 2 194 2 211 1 80 2 240 1 7 1 263 1 348 1 294 1 82 1 178 1 182 1 89 1 94 1 379 1 327 2 380 1 300 1 
68 1 102 1 60 1 
68 1 81 1 60 1 
68 3 132 1 258 1 193 1 81 1 102 2 
68 2 132 1 193 1 86 1 81 1 102 1 
68 2 132 2 193 1 81 1 102 1 
257 1 209 1 170 2 278 1 72 1 281 1 1 1 22 1 285 1 259 1 76 1 370 1 79 2 313 1 26 1 7 1 240 5 263 1 374 1 156 1 317 2 83 1 178 5 220 2 251 1 205 1 329 1 36 3 190 3 139 4 16 2 118 1 
257 6 278 1 209 1 72 2 281 3 1 2 22 4 145 1 284 1 76 2 370 3 79 6 26 3 240 9 53 1 374 2 156 3 317 5 83 3 133 1 178 9 85 5 220 6 136 1 160 5 33 1 251 3 205 1 329 1 36 8 37 1 190 9 139 7 16 6 118 2 
278 1 170 1 72 1 281 1 1 1 22 1 145 1 259 1 76 1 370 1 313 1 79 2 26 1 240 3 374 1 156 1 317 3 83 2 178 3 220 2 251 1 36 3 139 2 190 4 16 2 118 1 
278 1 170 2 72 1 281 2 1 1 22 2 145 1 259 1 76 1 370 2 79 4 313 1 26 2 240 4 53 1 374 1 156 2 317 4 83 3 178 4 220 4 33 1 251 2 36 5 190 7 37 1 139 3 16 4 118 1 
140 1 303 1 237 1 
298 1 303 1 
312 1 
303 1 290 1 
140 2 176 1 303 3 290 1 360 1 210 1 
303 1 290 1 360 1 
303 1 84 1 
301 1 281 1 339 2 201 2 87 4 203 1 64 3 62 1 251 1 163 1 342 7 311 1 225 3 212 1 371 1 381 1 215 1 
301 1 281 1 339 2 201 2 87 4 203 1 64 3 62 1 251 1 163 1 342 7 311 1 225 3 212 1 371 1 381 1 215 1 
243 1 301 1 281 1 339 2 201 2 87 4 203 1 64 3 62 1 251 1 163 1 342 7 311 1 225 3 212 1 371 1 381 1 215 1 
301 1 229 4 281 4 339 5 232 1 24 1 286 1 311 1 342 31 370 3 212 2 371 2 26 3 215 1 8 1 109 2 156 3 55 1 87 16 201 3 355 1 354 1 186 1 203 5 64 15 62 2 63 1 163 1 251 4 225 10 381 2 227 3 38 1 66 1 
281 1 339 3 342 9 311 1 212 1 371 1 215 1 8 2 109 4 180 1 87 5 201 2 355 2 354 2 186 1 203 1 62 1 64 4 251 1 164 1 163 1 225 4 381 1 66 2 
207 1 68 2 97 1 336 2 258 1 363 1 192 1 171 1 102 1 47 1 195 1 196 1 213 1 345 1 372 1 27 1 81 1 153 1 373 1 155 1 30 1 295 1 32 2 269 1 60 1 223 1 332 1 14 1 15 1 275 1 
207 1 68 2 97 1 258 1 336 3 363 1 192 1 171 1 102 1 195 1 196 1 345 1 372 1 27 1 81 1 292 1 153 1 155 1 30 1 32 3 295 2 269 1 296 1 60 1 223 1 65 1 332 1 14 1 15 1 275 1 
68 2 97 1 336 2 258 1 363 1 192 1 102 1 196 1 345 1 372 1 27 1 81 1 292 1 153 1 155 1 30 1 32 2 295 2 269 1 296 1 60 1 223 1 332 1 14 1 15 1 
207 1 336 1 303 1 363 2 192 2 171 1 127 1 290 1 27 1 241 1 153 2 349 1 30 1 32 1 181 1 269 2 114 1 358 1 65 1 332 1 14 1 254 1 15 1 
68 2 207 1 30 1 97 1 258 1 336 1 32 1 192 1 363 1 171 1 269 1 102 1 60 1 223 1 195 1 213 1 14 1 332 1 27 1 372 1 15 1 81 1 275 1 292 1 153 1 373 1 
167 1 
334 2 278 1 1 1 46 1 144 1 45 1 2 1 343 1 289 2 290 1 150 1 240 5 291 1 242 1 200 1 350 1 114 1 358 2 205 3 359 1 116 1 165 1 14 2 255 1 15 2 118 1 257 6 18 1 19 2 209 1 303 1 72 1 127 1 314 1 27 1 374 1 375 2 317 2 266 1 30 1 83 2 31 1 319 2 178 5 220 2 184 1 327 1 328 2 137 1 188 2 332 2 36 2 190 2 39 4 333 1 
18 1 257 2 122 1 144 1 45 1 2 1 343 1 150 1 314 1 240 3 266 1 31 1 178 3 350 1 184 1 327 1 205 1 359 1 165 1 188 1 39 2 333 1 
257 1 18 1 278 1 122 1 144 1 45 1 2 1 343 1 150 1 314 1 240 3 266 1 317 1 31 1 178 3 350 1 184 1 327 1 328 1 205 1 359 1 165 1 39 3 333 1 
18 1 257 2 122 1 278 1 144 1 45 1 2 1 343 1 150 1 314 1 240 3 266 1 317 1 31 1 178 3 350 1 319 1 184 1 327 1 205 1 328 1 359 1 165 1 188 1 39 3 333 1 
334 2 278 5 45 1 144 1 100 1 2 1 343 1 289 2 150 1 240 5 108 1 291 1 242 1 350 1 61 1 205 3 359 1 165 1 118 1 257 7 18 1 122 1 209 1 19 2 72 1 314 1 374 1 375 2 266 1 317 5 31 1 83 2 319 4 178 5 220 1 184 1 320 1 327 1 328 4 188 4 36 1 274 1 39 6 333 1 
334 2 278 1 45 1 144 1 2 1 343 1 289 2 150 1 240 4 291 1 242 1 350 1 205 2 359 1 116 1 165 1 118 1 18 1 257 4 209 1 19 2 72 1 314 1 374 1 375 2 266 1 317 2 31 1 83 2 178 4 319 2 220 1 184 1 327 1 328 2 188 2 36 1 190 2 39 4 333 1 
334 2 257 4 18 1 278 1 19 2 209 1 72 1 144 1 45 1 100 1 2 1 343 1 289 2 150 1 314 1 240 4 291 1 242 1 374 1 375 2 317 1 266 1 83 2 31 1 319 2 178 4 350 1 220 1 184 1 320 1 327 1 328 2 205 2 359 1 165 1 188 2 274 1 36 1 39 4 333 1 118 1 
334 2 257 4 18 1 278 1 19 2 209 1 72 1 144 1 45 1 100 1 2 1 343 1 289 2 150 1 314 1 240 4 291 1 242 1 374 1 375 2 317 1 266 1 83 2 31 1 319 2 178 4 350 1 220 1 184 1 320 1 327 1 328 2 205 2 359 1 165 1 188 2 274 1 36 1 39 4 333 1 118 1 
334 2 69 2 257 4 18 1 278 1 209 1 41 1 72 1 143 1 144 1 45 1 2 1 343 1 150 1 314 1 240 4 242 1 374 1 375 2 317 1 266 1 31 1 319 2 178 4 350 1 220 1 184 1 13 1 327 1 328 2 205 2 35 2 359 1 165 1 188 2 274 1 36 1 190 2 39 4 333 1 118 1 
334 2 18 1 257 5 278 1 19 2 209 1 72 1 100 1 144 1 45 1 2 1 343 1 289 2 150 1 314 1 240 4 291 1 242 1 374 1 375 2 317 1 266 1 83 2 31 1 178 4 350 1 319 3 220 1 184 1 320 1 61 1 327 1 205 2 328 3 359 1 165 1 188 3 274 1 36 1 39 5 333 1 118 1 
334 2 18 1 257 5 278 1 19 2 209 1 72 1 100 1 144 1 45 1 2 1 343 1 289 2 150 1 314 1 240 4 291 1 242 1 374 1 375 2 317 1 266 1 83 2 31 1 178 4 350 1 319 3 220 1 184 1 320 1 61 1 327 1 205 2 328 3 359 1 165 1 188 3 274 1 36 1 39 5 333 1 118 1 
334 2 278 1 143 1 45 1 144 1 2 1 343 1 150 1 240 4 242 1 350 1 205 2 359 1 116 1 165 1 118 1 69 2 18 1 257 4 209 1 72 1 314 1 374 1 375 2 266 1 317 1 31 1 178 4 319 2 220 1 184 1 327 1 35 2 328 2 188 2 36 1 190 2 39 4 333 1 
304 1 339 2 281 1 311 1 342 6 237 1 212 1 128 1 215 1 8 1 109 2 130 1 9 1 87 3 182 2 201 1 159 1 355 1 354 1 162 1 64 3 163 1 251 1 225 2 381 1 66 1 
229 3 338 1 304 1 230 1 339 1 281 1 287 1 286 1 342 14 370 1 26 2 128 11 8 2 217 1 109 4 156 2 110 1 55 1 9 11 182 1 87 8 159 2 90 1 355 2 354 2 203 1 162 4 64 6 251 2 225 2 227 3 66 2 67 1 
335 1 303 1 304 1 144 2 2 2 340 1 194 1 287 1 342 2 290 1 80 1 27 1 152 1 8 1 109 2 110 1 30 1 111 1 377 1 182 1 221 1 87 1 159 1 90 1 354 1 355 1 162 1 327 1 64 1 34 1 358 1 360 1 332 1 14 1 166 1 15 1 256 1 66 1 
335 1 339 4 281 3 144 3 2 3 283 2 194 1 287 1 342 20 290 2 292 1 8 3 109 6 156 2 110 1 111 2 9 7 201 1 159 3 355 3 354 3 162 7 203 4 64 10 163 1 358 1 251 3 14 3 360 2 15 3 256 1 66 3 303 2 304 3 21 2 123 2 368 1 311 1 370 2 212 1 26 2 80 1 128 7 27 2 215 1 30 2 182 2 221 2 87 10 90 1 92 1 327 1 34 2 225 8 138 1 273 2 187 2 381 1 332 3 
335 1 303 3 279 1 304 2 144 1 2 1 47 1 194 1 342 2 107 2 127 1 290 2 6 1 80 1 346 1 27 2 292 1 8 2 109 4 110 1 130 1 30 2 244 1 11 1 245 1 87 1 159 2 90 1 355 2 354 2 357 1 327 1 64 1 114 1 358 2 332 8 14 7 15 8 66 2 
17 1 191 1 304 1 339 1 281 1 144 1 2 1 147 1 194 1 287 1 342 3 370 1 26 1 128 1 80 1 8 1 109 2 156 1 9 1 87 1 159 1 355 1 354 1 162 1 327 1 64 2 251 1 225 1 66 1 
109 2 156 1 130 1 9 1 304 1 87 2 159 1 354 1 355 1 203 1 162 1 251 1 342 2 369 1 225 1 128 1 66 1 8 1 
109 2 130 1 113 1 9 1 304 1 339 1 281 1 159 1 354 1 355 1 162 1 64 2 342 2 225 1 370 1 128 1 66 1 8 1 
304 1 281 1 339 1 342 4 370 1 26 1 128 2 8 1 109 2 156 1 130 1 9 2 87 2 159 1 355 1 354 1 162 2 203 1 64 2 251 1 225 2 66 1 
109 2 156 1 9 1 304 1 87 2 159 1 354 1 355 1 203 1 162 1 251 1 342 2 369 1 225 1 128 1 346 1 66 1 8 1 
109 2 113 1 9 1 304 1 339 1 281 1 159 1 354 1 355 1 162 1 64 2 342 2 225 1 370 1 128 1 346 1 66 1 8 1 
304 1 281 1 339 1 342 4 370 1 26 1 346 1 128 2 8 1 109 2 156 1 9 2 87 2 159 1 355 1 354 1 162 2 203 1 64 2 251 1 225 2 66 1 
304 1 281 1 339 1 342 4 370 1 26 1 128 2 8 1 109 2 156 1 9 2 87 2 159 1 355 1 354 1 162 2 203 1 64 2 251 1 225 2 66 1 
303 1 304 1 144 1 123 1 2 1 342 2 290 1 27 1 8 1 109 2 110 1 30 1 111 1 87 1 182 1 221 1 159 1 90 1 354 1 355 1 64 1 34 1 358 1 360 1 332 1 14 1 15 1 66 1 
303 1 304 1 144 1 2 1 342 2 290 1 151 1 27 1 316 1 8 1 109 2 110 1 30 1 87 1 182 1 247 1 159 1 90 1 354 1 355 1 64 1 34 1 358 1 360 1 332 1 14 1 15 1 66 1 
304 1 281 1 339 1 287 1 342 4 370 1 26 1 128 2 8 1 109 2 156 1 9 2 87 2 159 1 355 1 354 1 162 2 203 1 64 2 251 1 225 2 66 1 
303 1 304 1 339 1 281 1 144 1 123 1 2 1 47 1 342 4 370 1 290 1 26 1 128 2 27 1 8 1 109 2 156 1 30 1 111 1 9 2 87 2 221 1 159 1 354 1 355 1 203 1 162 2 64 2 251 1 34 1 225 2 187 1 360 1 332 1 14 1 15 1 66 1 
17 1 191 1 304 1 281 1 144 1 2 1 194 1 287 1 125 1 342 3 370 1 26 1 80 1 128 1 8 1 109 2 156 1 9 1 87 2 159 1 355 1 354 1 203 1 162 1 64 1 327 1 251 1 225 1 66 1 
40 1 229 2 73 2 339 3 281 3 174 2 367 1 286 1 342 19 370 3 26 3 8 2 109 4 156 3 55 1 112 1 135 1 353 1 87 9 91 1 355 2 354 2 203 3 64 10 164 1 251 3 225 6 227 1 228 1 66 2 
40 2 229 2 73 1 339 2 281 2 282 1 366 1 174 4 367 2 48 1 342 26 370 2 26 3 8 3 109 6 156 3 55 2 112 1 57 1 87 14 91 1 355 3 354 3 186 2 203 2 64 12 164 1 224 1 115 1 251 3 225 4 227 2 228 1 66 3 
40 2 229 4 281 5 339 4 282 1 48 1 286 1 342 41 8 3 109 6 156 4 55 3 199 1 112 1 57 1 201 1 353 1 354 3 355 3 203 4 64 21 251 5 164 1 115 1 163 1 66 3 73 1 366 1 174 4 367 1 311 1 370 4 212 1 26 4 215 1 87 20 91 1 186 1 224 1 225 8 227 3 381 1 228 1 
40 2 229 4 73 1 339 4 281 4 282 1 366 1 174 4 367 1 48 1 286 1 311 1 342 38 370 3 212 1 26 4 215 1 8 4 109 8 156 4 199 1 55 3 112 1 57 1 353 1 201 1 87 20 91 1 355 4 354 4 186 2 203 3 64 18 163 1 115 1 224 1 164 1 251 5 225 7 381 1 227 3 228 1 66 4 
40 1 229 4 230 2 73 1 339 7 281 8 282 1 366 1 174 4 367 1 48 1 286 2 311 1 342 52 370 7 212 1 26 7 215 1 8 2 109 4 156 7 55 2 112 1 57 1 201 1 87 27 91 1 355 2 354 2 186 1 203 7 64 25 163 1 115 1 224 1 164 1 251 8 225 14 381 1 227 4 228 1 66 2 
94 1 294 1 379 1 77 1 104 1 364 1 280 1 50 1 96 1 348 1 
82 1 211 1 
25 1 94 1 294 1 379 1 235 1 126 1 364 1 280 1 348 1 
294 1 317 1 178 1 20 2 280 1 364 1 307 1 379 1 94 1 260 1 380 1 77 1 299 1 149 1 104 1 240 1 96 1 348 1 
294 1 317 1 178 1 20 2 280 1 364 1 307 1 379 1 94 1 260 1 380 1 77 1 299 1 149 1 104 1 240 1 96 1 348 1 
294 1 317 1 178 1 20 2 280 1 364 1 307 1 379 1 94 1 260 1 380 1 77 1 299 1 149 1 104 1 240 1 96 1 348 1 
234 1 4 1 352 1 
234 1 4 1 352 1 
10 1 189 1 
4 1 10 1 189 1 
74 1 300 1 
20 1 307 1 364 1 280 1 74 1 22 1 144 2 2 2 194 2 211 1 149 1 80 2 240 1 7 1 263 1 348 1 294 1 82 1 178 1 182 1 89 1 321 1 94 1 379 1 327 2 139 1 300 1 
234 1 352 1 
4 1 10 1 189 1 
119 1 120 1 303 1 304 1 144 2 2 2 148 1 287 1 342 2 290 1 107 2 6 1 27 1 8 1 109 2 110 1 30 1 87 1 159 1 90 1 354 1 355 1 357 1 325 1 327 2 64 1 226 1 332 2 14 2 15 2 66 1 
68 2 30 1 97 1 258 1 306 1 269 1 102 1 47 1 60 1 195 1 236 1 272 1 14 2 332 2 27 1 15 2 372 1 81 1 292 1 
68 2 97 1 30 1 258 1 306 1 269 1 102 1 60 1 195 1 14 1 332 1 15 1 372 1 27 1 81 1 292 1 198 1 
30 1 376 1 303 1 269 1 114 1 358 1 236 1 290 1 127 1 14 1 332 1 27 1 15 1 241 1 
68 2 97 1 30 1 258 1 306 1 269 1 102 1 60 1 195 1 236 1 272 1 14 1 332 1 27 1 15 1 372 1 81 1 292 1 
249 1 
324 1 317 1 278 1 179 1 237 1 220 1 36 1 
374 1 317 2 257 1 83 1 278 1 178 1 209 1 19 1 72 1 220 1 205 1 289 1 240 1 36 1 190 1 291 1 118 1 
140 2 278 2 337 2 1 2 281 2 45 2 47 1 103 2 290 3 240 5 156 2 56 2 356 2 298 3 358 1 251 2 205 3 360 3 14 3 255 1 15 3 361 2 16 6 118 4 257 5 303 10 209 4 70 1 72 4 210 1 310 1 370 2 79 6 214 2 26 2 27 4 374 4 177 1 317 8 267 1 30 3 268 1 83 6 178 5 84 2 179 1 220 8 88 2 271 2 324 1 273 2 332 3 36 9 190 12 
229 1 257 1 337 2 209 2 278 2 98 1 72 2 1 1 281 2 282 1 366 1 103 1 48 1 197 1 370 2 79 5 26 2 240 1 374 2 156 2 317 5 55 1 83 3 178 1 220 5 224 1 115 1 251 2 205 1 227 1 255 1 36 8 190 6 16 5 118 2 
17 1 337 2 209 1 71 1 72 1 281 1 99 1 144 1 100 1 2 1 103 1 194 1 212 1 80 1 240 1 264 1 374 1 31 1 178 1 220 2 246 1 202 1 327 1 163 1 251 2 381 1 36 2 118 1 
374 1 317 1 209 1 278 1 179 1 72 1 220 1 324 1 36 1 118 1 
156 2 317 5 83 5 337 2 281 2 220 5 103 1 251 2 370 2 273 1 79 5 26 2 36 5 190 10 16 5 
317 1 205 1 257 1 278 1 178 1 240 1 
257 4 303 1 209 1 70 2 72 2 1 2 145 1 46 1 308 1 290 1 127 1 27 1 240 3 374 2 318 1 30 1 267 1 200 1 178 3 220 2 114 1 358 2 205 2 332 4 14 4 15 4 36 2 255 2 118 2 
17 2 142 1 303 1 304 1 144 3 2 3 123 1 194 2 342 1 290 1 80 2 27 1 8 1 264 1 109 2 30 1 111 1 182 1 221 1 159 1 90 1 355 1 354 1 64 1 327 2 358 1 34 1 332 1 14 1 360 1 15 1 66 1 
374 1 317 4 83 2 209 1 278 2 72 1 1 1 201 1 220 2 79 2 36 1 255 1 190 4 16 2 118 1 
94 1 364 1 239 1 
94 1 288 1 104 1 364 1 74 1 
94 1 364 1 239 1 
94 1 364 1 239 1 
94 1 364 1 270 1 
94 1 364 1 270 1 
94 1 364 1 270 1 
94 1 364 1 
294 1 280 1 
109 4 281 1 339 2 201 1 87 4 354 2 355 2 186 1 203 1 64 4 251 1 163 1 342 8 311 1 225 3 212 1 381 1 66 2 215 1 8 2 
339 2 281 1 201 1 87 3 64 3 163 1 251 1 311 1 342 6 237 1 225 2 212 1 381 1 215 1 
109 2 156 1 339 1 281 1 87 2 354 1 355 1 250 1 203 1 64 2 251 1 342 4 370 1 225 2 26 1 66 1 8 1 
156 1 229 2 55 1 339 1 281 1 87 3 203 1 64 4 286 1 251 1 342 7 370 1 225 2 26 1 227 1 
229 2 230 1 281 3 339 5 286 1 311 1 342 23 370 2 212 2 26 2 215 1 8 2 109 4 156 2 201 1 87 11 354 2 355 2 186 2 323 1 203 4 64 12 163 1 251 3 225 9 381 2 227 2 66 2 67 1 
64 1 229 1 342 1 
342 1 87 1 227 1 
109 2 156 1 281 1 339 2 87 3 355 1 354 1 250 1 203 1 64 3 251 1 342 6 225 3 370 1 273 1 26 1 66 1 8 1 
229 1 281 2 339 1 282 1 366 1 48 1 342 12 370 2 26 2 8 1 109 2 156 2 55 1 87 6 355 1 354 1 203 1 64 6 224 1 164 1 115 1 251 2 225 2 227 1 66 1 
281 1 339 1 87 3 203 1 64 3 163 1 251 1 342 6 225 2 212 1 381 1 
109 2 339 1 87 1 354 1 355 1 323 1 186 1 203 1 64 2 342 3 311 1 225 2 212 1 381 1 66 1 215 1 8 1 
109 2 71 1 339 3 281 2 87 5 355 1 354 1 203 2 64 5 164 1 163 1 251 2 342 10 225 5 212 2 381 2 66 1 8 1 
109 2 156 1 87 2 354 1 355 1 203 1 164 1 251 1 342 2 225 1 66 1 8 1 
109 2 156 1 339 1 281 1 87 2 354 1 355 1 203 1 64 2 164 1 251 1 342 4 370 1 225 2 26 1 66 1 8 1 
109 6 339 1 353 1 87 1 354 3 355 3 186 1 323 1 203 1 64 2 164 1 342 3 225 2 212 1 381 1 66 3 8 3 
229 4 281 5 339 7 232 1 24 1 286 1 311 1 342 34 370 3 212 3 26 3 215 1 8 5 109 10 156 3 55 1 201 1 353 1 87 16 355 5 354 5 323 1 186 2 250 1 203 5 63 1 64 18 163 2 164 1 251 5 225 12 381 3 227 3 66 5 
229 1 281 1 339 2 342 8 311 1 212 1 215 1 8 1 109 2 55 1 201 1 87 4 355 1 354 1 64 4 251 1 224 1 164 1 163 1 225 2 227 1 381 1 66 1 
229 2 281 1 339 2 286 1 311 1 342 11 212 1 26 1 215 1 8 2 109 4 156 1 55 1 201 1 87 6 355 2 354 2 250 1 203 1 64 5 163 1 224 1 164 1 251 2 225 3 381 1 227 1 66 2 
229 1 281 3 339 3 282 1 366 1 48 1 311 1 342 19 370 2 212 1 26 2 215 1 8 3 109 6 156 2 55 1 201 1 87 9 355 3 354 3 186 1 250 1 203 1 64 10 163 1 224 1 164 1 115 1 251 3 225 4 381 1 227 1 66 3 
229 1 281 2 339 3 282 1 366 1 48 1 311 1 342 17 370 1 212 1 26 2 215 1 8 3 109 6 156 2 55 1 201 1 87 10 355 3 354 3 186 1 250 1 203 2 64 7 163 1 224 1 164 1 115 1 251 3 225 5 381 1 227 1 66 3 
229 1 281 1 339 2 342 8 311 1 212 1 215 1 8 1 109 2 55 1 201 1 87 4 355 1 354 1 64 4 251 1 224 1 164 1 163 1 225 2 227 1 381 1 66 1 
229 1 281 2 339 1 282 1 366 1 48 1 342 12 370 2 26 2 8 1 109 2 156 2 55 1 87 6 355 1 354 1 203 1 64 6 224 1 164 1 115 1 251 2 225 2 227 1 66 1 
229 1 281 2 339 3 282 1 366 1 48 1 311 1 342 18 370 1 212 1 26 2 215 1 8 4 109 8 156 2 55 1 201 1 87 10 355 4 354 4 186 2 203 2 250 1 64 8 163 1 224 1 164 1 115 1 251 3 225 5 381 1 227 1 66 4 
229 1 281 2 339 3 282 1 366 1 48 1 342 16 370 2 26 3 8 4 109 8 156 3 55 1 353 1 87 9 355 4 354 4 186 2 203 3 64 7 224 1 164 1 115 1 251 3 225 6 227 1 66 4 
281 1 339 3 87 3 203 3 64 4 163 1 251 1 342 7 311 1 225 6 212 3 381 3 215 2 
229 1 281 2 339 3 282 1 366 1 48 1 311 1 342 18 370 1 212 1 26 2 215 1 8 4 109 8 156 2 55 1 201 1 353 1 87 10 355 4 354 4 186 2 203 1 64 8 163 1 224 1 164 1 115 1 251 3 225 4 381 1 227 1 66 4 
327 1 341 1 157 1 182 1 144 1 2 1 333 1 
276 1 54 1 157 1 182 1 183 1 59 1 144 1 2 1 327 1 341 1 95 1 333 1 
114 1 358 1 30 1 303 1 237 1 290 1 127 1 332 1 14 1 27 1 15 1 
30 1 335 1 303 1 182 1 221 1 144 2 2 2 194 1 327 1 34 1 358 1 290 1 360 1 80 1 14 1 332 1 27 1 15 1 
335 1 303 3 70 1 144 2 2 2 194 2 290 2 80 1 27 1 30 1 31 1 84 1 182 1 221 1 184 1 327 2 34 1 165 1 332 1 14 1 360 2 15 1 361 1 
335 1 303 3 70 1 144 2 2 2 194 2 290 2 80 1 27 1 316 1 30 1 31 1 84 1 182 1 184 1 326 1 327 2 34 1 165 1 332 2 14 2 360 2 15 2 361 1 
140 1 317 1 30 1 257 1 278 1 84 1 178 2 303 4 70 1 58 1 365 1 45 1 326 1 358 1 298 1 290 1 360 1 14 3 332 3 27 1 240 2 15 3 361 1 
140 1 317 1 30 1 56 1 257 1 278 1 84 1 178 2 303 4 70 1 45 1 326 1 358 1 298 1 290 1 360 1 14 3 332 3 27 1 240 2 15 3 361 1 
30 1 245 1 332 1 14 1 27 1 15 1 
30 1 303 1 210 1 204 1 233 1 358 1 49 1 290 1 14 1 332 1 360 1 15 1 27 2 
120 1 335 1 303 1 304 2 21 1 281 1 339 2 144 2 2 2 123 1 47 1 194 1 287 1 342 6 311 1 290 1 212 1 128 1 80 1 27 1 215 1 8 2 109 4 30 1 111 1 9 1 201 1 182 2 87 3 221 1 159 2 354 2 355 2 162 1 64 3 327 1 251 1 163 1 34 1 225 2 187 1 381 1 360 1 14 1 332 1 15 1 66 2 
140 1 257 2 278 1 209 2 303 2 72 2 45 1 214 1 240 3 374 2 317 1 267 1 56 1 178 3 179 1 220 1 271 1 356 1 324 1 358 1 298 1 205 1 14 1 332 1 36 1 15 1 139 1 118 2 
140 1 177 1 30 1 303 2 290 1 245 1 360 1 332 2 14 2 27 2 15 2 210 1 47 1 
30 1 303 1 47 1 326 1 114 1 358 1 127 1 290 1 330 1 14 4 332 4 27 1 15 4 
30 1 303 1 23 1 161 1 204 1 368 1 49 1 290 1 14 1 332 1 360 1 15 1 27 2 
68 1 358 1 30 1 332 1 14 1 27 1 372 1 15 1 81 1 60 1 
119 1 30 1 303 1 47 1 357 1 290 1 14 2 332 2 15 2 27 1 292 1 
30 2 244 1 303 3 70 1 279 1 47 1 114 1 357 1 358 1 127 1 290 2 330 1 14 4 332 5 15 5 27 2 
29 1 30 2 303 3 70 1 279 1 47 1 114 1 357 1 358 1 127 1 290 2 330 1 14 4 332 5 15 5 27 2 
30 1 335 1 303 1 182 1 144 2 2 2 194 1 327 1 34 1 358 1 290 1 360 1 80 1 14 1 332 1 27 1 15 1 316 1 
30 1 303 1 70 1 210 1 204 1 233 1 49 1 290 1 14 1 332 1 360 1 15 1 27 2 
327 1 325 1 169 1 5 1 226 1 144 1 2 1 185 1 148 1 
297 1 101 1 185 1 
169 1 362 1 5 1 182 1 185 1 
169 2 317 1 31 1 278 1 178 2 362 2 12 1 182 1 297 1 45 1 184 1 185 1 101 1 248 1 165 1 5 2 150 1 240 2 139 1 
155 1 196 1 237 1 345 1 
155 1 207 1 196 1 336 1 32 1 171 1 345 1 
336 1 363 1 153 1 
207 1 155 1 208 1 336 3 32 3 171 1 378 1 196 1 345 1 331 2 154 1 373 1 
155 1 207 1 196 1 302 1 336 2 295 1 32 2 171 1 345 1 
68 1 207 1 336 1 32 1 171 1 345 1 102 1 322 1 60 1 206 1 373 1 
207 1 196 1 336 1 32 1 171 1 345 1 373 1 
155 1 207 1 196 2 336 1 32 1 171 1 373 1 
207 2 196 1 3 1 336 2 78 1 32 2 171 2 345 1 216 1 373 1 
168 1 155 1 207 1 336 3 32 3 295 2 171 1 322 1 75 1 196 1 261 1 345 2 373 1 
155 1 68 2 207 1 336 2 258 1 32 2 295 1 171 1 102 1 60 1 196 1 345 1 51 1 81 1 373 1 
168 1 155 1 207 2 302 1 336 4 32 4 295 2 171 2 172 1 322 1 196 1 345 2 373 1 
155 1 207 1 196 1 336 1 32 1 171 1 345 1 373 1 
168 1 155 2 207 1 208 1 336 4 351 1 295 2 32 4 171 1 378 1 322 1 196 2 331 1 345 3 
175 1 155 1 207 1 124 1 196 1 336 2 295 1 32 2 253 1 171 1 345 1 373 1 
207 1 155 1 208 2 336 3 32 3 171 1 378 1 252 1 196 1 345 1 331 2 373 1 
218 1 134 2 43 1 345 2 
207 1 336 1 32 1 171 1 262 1 373 1 
155 1 207 1 196 1 261 1 336 2 295 1 32 2 171 1 345 1 373 1 
129 1 
155 1 207 1 196 1 336 1 32 1 171 1 345 1 373 1 
207 1 155 1 336 3 295 1 32 3 171 1 196 1 261 1 331 1 345 1 373 1 
168 1 351 1 345 1 322 1 
196 1 345 1 

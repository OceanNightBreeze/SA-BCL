#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 344 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
255 1 207 2 8 1 365 1 7 1 234 9 164 1 166 1 211 1 117 3 41 1 135 2 136 2 119 1 238 1 371 1 171 6 274 1 121 2 289 4 175 2 336 9 378 2 221 1 153 2 222 1 357 5 320 1 
255 1 207 2 8 1 365 1 7 1 234 9 164 1 166 1 211 1 117 3 41 1 135 2 136 2 119 1 238 1 371 1 171 6 274 1 121 2 289 4 175 2 336 9 378 2 221 1 153 2 222 1 357 5 320 1 
255 1 207 2 8 1 365 1 7 1 234 10 164 1 166 1 211 1 117 4 41 1 135 2 136 2 119 1 238 1 371 1 171 7 274 1 121 2 289 5 175 2 336 10 378 2 221 1 153 2 222 1 357 6 320 1 
255 1 207 1 8 1 365 1 7 1 234 7 164 1 166 1 211 1 117 2 41 1 135 2 136 2 119 1 238 1 371 1 171 4 121 2 289 3 175 2 336 7 378 2 221 1 153 2 222 1 357 4 320 1 
255 1 171 3 274 1 121 1 289 2 336 4 207 2 8 1 378 1 234 4 153 1 164 1 166 1 357 3 117 1 41 1 136 1 135 1 
255 1 297 1 238 1 203 1 144 1 336 2 175 1 8 1 378 1 234 2 153 1 357 1 211 1 41 1 135 1 136 1 
255 1 171 1 289 1 336 3 175 1 8 1 234 3 153 2 222 1 357 2 117 1 41 1 135 2 
255 1 207 2 8 1 234 9 164 1 166 1 117 3 41 1 135 2 119 1 136 1 349 1 271 1 171 7 274 1 121 1 289 4 175 1 336 9 378 1 221 1 153 2 222 1 357 5 
255 1 207 2 8 1 234 9 164 1 166 1 117 3 41 1 135 2 119 1 136 1 349 1 271 1 171 7 274 1 121 1 289 4 175 1 336 9 378 1 221 1 153 2 222 1 357 5 
151 1 3 1 73 1 
302 2 345 1 73 1 
229 2 230 1 285 2 80 2 253 2 213 1 292 2 303 2 
128 1 1 1 322 1 229 2 230 1 301 1 205 1 303 2 159 1 285 3 327 1 95 1 329 1 331 2 167 1 213 1 97 1 269 1 99 1 174 2 45 1 17 1 352 1 19 2 335 1 339 1 243 1 292 2 48 1 177 1 80 3 53 2 341 1 279 1 252 2 250 1 253 2 
229 1 285 1 80 1 60 1 28 1 253 1 213 1 267 1 292 1 303 1 
170 1 46 1 3 1 60 1 73 1 74 1 76 1 292 1 37 1 112 1 80 1 285 1 237 1 65 1 
229 1 170 2 46 1 3 1 60 1 73 1 76 1 303 1 292 1 37 2 112 1 80 1 285 1 253 1 65 1 
37 1 170 1 368 1 295 1 137 1 
37 2 353 1 170 2 379 1 368 1 295 1 3 1 73 1 
37 1 170 1 368 1 
229 1 170 1 60 1 324 1 303 1 292 1 37 1 80 1 285 1 295 1 28 1 267 1 213 1 253 1 
73 1 
37 2 170 2 379 1 366 1 368 1 295 1 3 1 73 1 
185 1 43 1 170 5 333 1 141 1 351 1 100 1 3 1 73 1 346 2 37 5 246 1 114 1 379 1 295 2 368 2 266 1 308 2 64 2 
151 1 230 1 
229 1 230 2 292 2 303 1 217 1 340 1 80 2 285 2 253 1 
113 1 176 1 120 1 
230 1 17 1 335 1 19 1 48 1 177 1 285 1 80 1 53 1 327 1 279 1 252 1 250 1 329 1 103 1 167 1 
17 1 335 1 19 1 303 1 292 1 48 1 177 1 126 1 80 2 285 2 53 1 327 1 279 1 183 1 252 1 250 1 329 1 167 1 253 1 120 1 
229 1 230 1 285 3 80 3 183 1 253 3 292 3 303 3 
285 1 80 1 60 1 28 1 253 1 292 1 303 1 
217 1 340 1 229 1 285 1 80 1 60 1 253 1 292 1 303 1 
1 1 229 2 230 1 60 1 205 1 323 1 303 3 37 1 112 1 285 4 327 1 95 1 329 1 331 2 167 1 65 1 213 1 97 1 269 1 170 1 174 1 45 1 17 1 46 1 352 1 335 1 19 1 339 1 243 1 76 1 292 3 48 1 177 1 217 1 247 1 80 4 126 1 53 1 341 1 279 1 250 1 183 1 252 1 253 3 
51 1 230 1 285 2 80 2 183 1 237 1 253 1 292 2 303 1 
229 1 170 1 46 1 60 1 73 1 323 1 76 1 303 3 292 3 37 1 217 1 112 1 180 1 126 1 80 3 285 3 183 2 253 3 65 1 
229 1 303 2 292 2 113 1 217 1 80 2 285 2 183 1 253 2 120 1 
230 1 17 1 335 1 19 1 48 1 177 1 285 1 80 1 53 1 327 1 252 1 250 1 279 1 329 1 167 1 
230 1 17 1 71 1 335 1 19 1 48 1 177 1 285 1 80 1 53 1 252 1 279 1 329 1 167 1 104 1 
105 1 205 1 159 2 113 2 10 1 95 1 331 2 120 2 66 1 97 1 169 1 240 1 287 1 313 1 45 1 174 4 146 1 339 1 243 1 176 2 377 1 23 1 341 2 249 1 
285 1 80 1 259 1 60 1 65 1 253 1 292 1 303 1 
229 1 33 1 230 1 214 1 303 4 292 5 51 1 217 1 80 5 285 5 126 1 183 2 237 1 253 4 
285 2 80 2 259 1 60 1 28 1 253 2 292 2 303 2 
98 1 172 1 
98 1 172 1 
179 1 142 1 
179 1 142 1 
179 1 142 1 
98 1 172 1 232 1 
98 1 172 1 232 1 
98 1 172 1 131 1 
281 1 179 1 98 2 172 2 142 1 254 1 
98 1 172 1 232 1 
98 1 172 1 109 1 
98 1 172 1 109 1 
98 1 172 1 109 1 
138 1 57 1 228 1 198 1 98 2 170 2 172 2 299 2 202 2 69 2 317 1 73 1 261 1 37 2 158 3 326 2 277 2 11 1 254 1 
358 1 225 1 230 1 299 1 131 1 303 2 158 1 37 1 304 1 326 1 9 1 285 2 63 1 310 1 138 1 98 1 170 1 172 1 69 1 242 1 292 2 277 1 80 2 253 2 
378 1 121 1 136 1 
378 1 203 1 136 1 
378 3 121 2 241 1 203 1 162 1 286 1 
378 2 121 1 241 1 356 1 203 1 286 1 
378 2 121 1 241 1 203 1 286 2 
358 1 185 2 190 2 302 3 345 1 3 1 346 1 206 1 37 5 304 1 368 1 64 1 308 1 266 1 310 1 66 1 239 1 169 1 272 1 287 1 170 5 44 2 372 1 15 1 73 2 318 2 23 1 246 3 379 1 152 1 219 1 295 4 
185 6 190 6 302 9 345 3 108 1 3 1 4 5 110 1 346 2 206 2 304 4 37 9 368 6 96 1 266 1 308 2 64 2 137 5 66 3 67 1 169 3 272 3 14 1 333 1 287 3 170 9 44 6 73 5 23 3 278 1 246 8 379 1 152 1 219 2 295 7 
185 2 190 2 302 4 345 2 3 1 346 1 206 1 37 3 304 1 64 1 308 1 66 1 169 1 272 1 287 1 170 3 333 1 44 2 15 1 372 1 73 3 318 1 23 1 246 3 219 1 295 2 
185 4 190 4 302 7 345 3 3 1 110 1 346 1 206 1 37 4 304 2 96 1 64 1 308 1 66 2 169 2 272 2 287 2 170 4 333 1 44 4 15 1 372 1 73 4 318 2 23 2 278 1 246 5 219 1 295 3 
151 1 81 1 279 1 
306 1 279 1 
149 1 
279 1 167 1 
48 1 81 2 200 1 279 3 13 1 167 1 
48 1 279 1 167 1 
279 1 348 1 
66 1 311 1 169 1 105 2 313 3 174 7 316 1 178 1 159 4 319 1 218 1 265 1 341 3 93 1 27 1 369 1 42 2 
66 1 311 1 169 1 105 2 313 3 174 7 316 1 178 1 159 4 319 1 218 1 265 1 341 3 93 1 27 1 369 1 42 2 
66 1 311 1 169 1 105 2 313 3 174 7 316 1 178 1 319 1 159 4 218 1 265 1 341 3 93 1 27 1 369 1 118 1 42 2 
105 3 344 1 359 1 258 1 88 3 89 1 205 1 159 11 328 1 93 4 331 2 369 1 212 1 42 1 66 3 311 1 97 1 169 3 272 3 287 3 313 7 174 22 316 1 339 1 243 1 102 1 23 3 197 4 341 11 27 1 
105 3 359 1 205 2 159 5 93 1 331 4 39 1 193 1 369 1 42 2 66 1 311 1 97 2 169 1 313 4 174 9 316 1 339 2 243 2 178 1 319 1 218 1 341 4 27 1 
255 1 87 1 203 1 8 1 283 1 284 1 234 2 367 1 162 1 210 1 329 1 347 1 41 1 136 1 135 1 171 1 273 1 121 1 19 1 336 2 175 1 147 1 177 1 245 1 378 2 196 1 53 1 252 1 153 1 357 1 
255 1 87 1 203 1 8 1 284 1 234 3 367 1 162 1 210 1 329 1 347 1 136 1 135 1 171 2 121 1 122 1 315 1 19 1 336 3 175 1 147 1 177 1 245 1 378 2 52 1 196 1 53 1 252 1 153 1 357 1 
255 1 87 1 203 1 8 1 234 2 162 1 210 1 329 1 347 1 136 1 171 2 121 1 315 1 19 1 175 1 336 2 147 1 177 1 245 1 378 2 52 1 196 1 53 1 252 1 357 1 
226 1 227 1 30 1 234 1 62 1 210 2 329 1 347 2 167 1 135 1 122 1 19 1 335 1 336 1 175 2 101 1 177 1 147 2 148 1 53 1 252 1 153 1 279 1 
87 1 203 1 284 1 234 1 367 1 162 1 210 1 329 1 347 1 41 1 136 1 135 1 273 1 121 1 19 1 336 1 175 1 147 1 177 1 245 1 378 2 52 1 196 1 53 1 252 1 153 1 
68 1 
298 1 58 1 302 2 300 1 204 1 345 2 3 1 157 1 60 1 346 1 263 2 208 1 112 1 62 1 307 2 266 1 308 1 64 1 165 1 167 1 65 1 170 5 19 2 73 2 74 1 76 1 177 1 78 4 24 1 79 2 80 1 219 1 279 1 29 2 185 2 30 1 231 2 36 1 38 2 37 5 191 1 285 1 368 6 329 1 237 1 370 1 46 1 335 2 375 2 292 1 246 2 379 3 53 2 252 2 251 1 
298 1 60 1 208 1 37 3 112 1 285 1 191 1 366 1 368 2 237 1 65 1 370 1 170 3 46 1 74 1 76 1 292 1 78 2 24 1 80 1 379 1 29 1 
298 1 60 1 3 1 231 1 208 1 37 3 112 1 285 1 191 1 366 1 368 1 237 1 65 1 370 1 170 3 46 1 74 1 73 1 76 1 292 1 78 3 24 1 80 1 379 1 
298 1 60 1 3 1 231 1 208 1 37 3 38 1 112 1 285 1 191 1 366 1 368 2 237 1 65 1 370 1 170 3 46 1 74 1 73 1 76 1 292 1 78 3 24 1 379 1 80 1 29 1 
298 1 204 1 345 2 60 1 3 5 346 1 263 2 208 1 112 1 307 2 266 1 308 1 64 1 65 1 170 5 275 1 74 1 73 5 76 1 24 1 78 6 124 1 79 2 80 1 26 1 29 4 185 1 231 4 38 4 37 5 285 1 191 1 366 1 368 7 237 1 370 1 46 1 375 2 292 1 293 1 246 1 379 3 381 1 251 1 
298 1 58 1 302 2 204 1 345 2 60 1 3 1 346 1 263 2 208 1 112 1 307 2 266 1 308 1 64 1 65 1 170 4 74 1 73 2 76 1 24 1 78 4 79 2 80 1 29 2 185 1 231 2 37 4 38 2 285 1 191 1 368 4 237 1 370 1 46 1 375 2 292 1 246 1 379 2 251 1 
185 1 298 1 204 1 345 2 3 1 60 1 231 2 346 1 263 2 208 1 38 2 37 4 112 1 285 1 191 1 368 4 307 2 266 1 308 1 64 1 237 1 65 1 370 1 170 4 46 1 73 1 74 1 375 2 76 1 292 1 293 1 78 4 24 1 124 1 79 2 246 1 379 2 80 1 251 1 26 1 29 2 
185 1 298 1 204 1 345 2 3 1 60 1 231 2 346 1 263 2 208 1 38 2 37 4 112 1 285 1 191 1 368 4 307 2 266 1 308 1 64 1 237 1 65 1 370 1 170 4 46 1 73 1 74 1 375 2 76 1 292 1 293 1 78 4 24 1 124 1 79 2 246 1 379 2 80 1 251 1 26 1 29 2 
185 1 298 1 130 2 155 1 302 2 204 1 59 1 3 1 60 1 231 2 346 1 262 1 208 1 38 2 37 4 112 1 285 1 191 1 368 4 307 2 266 1 308 1 64 1 237 1 65 1 370 1 170 4 46 1 73 1 74 1 375 2 76 1 292 1 78 4 24 1 124 1 246 1 379 2 80 1 220 2 29 2 
185 1 298 1 204 1 345 2 3 1 60 1 231 3 346 1 263 2 208 1 37 4 38 3 112 1 285 1 191 1 368 5 307 2 64 1 308 1 266 1 237 1 65 1 370 1 170 4 46 1 275 1 73 1 74 1 375 2 76 1 293 1 292 1 78 5 24 1 124 1 79 2 246 1 379 2 80 1 251 1 26 1 29 3 
185 1 298 1 204 1 345 2 3 1 60 1 231 3 346 1 263 2 208 1 37 4 38 3 112 1 285 1 191 1 368 5 307 2 64 1 308 1 266 1 237 1 65 1 370 1 170 4 46 1 275 1 73 1 74 1 375 2 76 1 293 1 292 1 78 5 24 1 124 1 79 2 246 1 379 2 80 1 251 1 26 1 29 3 
185 1 298 1 130 2 58 1 302 2 204 1 59 1 3 1 60 1 231 2 346 1 208 1 38 2 37 4 112 1 191 1 285 1 368 4 307 2 64 1 308 1 266 1 237 1 65 1 370 1 170 4 46 1 73 1 74 1 375 2 76 1 292 1 78 4 24 1 246 1 379 2 80 1 220 2 29 2 
105 2 230 2 205 1 113 1 159 3 95 1 331 2 120 1 42 1 66 1 97 1 169 1 313 2 45 1 174 6 316 1 339 1 243 1 176 1 178 1 319 1 377 1 218 1 151 1 341 3 27 1 
1 1 105 1 322 1 230 1 88 3 89 1 205 2 282 1 159 8 113 4 93 1 95 1 328 1 331 4 120 11 66 2 97 2 169 1 272 2 287 1 313 2 143 1 45 2 174 14 339 2 243 2 176 11 23 2 197 3 341 6 154 1 83 1 84 1 
1 1 322 1 230 1 205 1 303 1 282 1 113 1 159 1 285 2 327 1 95 1 329 1 331 2 115 1 167 1 309 1 168 1 97 1 45 1 174 2 17 1 19 1 335 1 243 1 339 1 292 1 48 1 177 1 80 2 126 1 53 1 341 1 279 1 250 1 252 1 183 1 103 1 253 1 
0 1 105 4 1 1 61 2 205 3 303 1 113 7 159 10 160 2 161 1 167 2 120 7 66 3 169 3 272 2 312 2 313 8 174 20 17 2 316 1 352 2 19 3 20 2 176 7 178 1 177 2 319 1 218 1 23 2 126 1 80 3 183 1 279 2 27 1 322 1 230 2 282 1 285 3 327 2 95 3 93 4 329 2 331 6 42 1 97 3 287 2 45 3 335 1 339 3 243 3 292 1 49 1 48 2 52 1 53 3 341 10 252 3 250 2 253 1 
128 2 257 1 1 1 322 1 30 1 205 2 303 1 283 1 159 1 133 1 285 1 62 1 192 1 95 2 329 2 331 4 167 2 97 2 45 2 174 2 19 8 335 2 21 1 339 2 243 2 292 1 177 2 377 1 52 1 80 1 53 7 341 1 183 1 279 3 252 8 127 1 55 1 253 1 224 1 
105 1 229 1 107 1 205 1 303 1 282 1 113 1 159 1 285 1 95 1 331 2 120 1 66 1 97 1 169 1 272 1 287 1 313 1 45 1 174 3 176 1 339 1 243 1 292 1 217 1 23 1 80 1 341 2 253 1 
66 1 97 1 313 1 174 2 45 1 205 1 176 1 243 1 339 1 113 1 377 1 159 2 23 1 249 1 93 1 95 1 331 2 120 1 
97 1 105 1 169 1 287 1 313 1 174 2 45 1 205 1 176 1 243 1 339 1 146 1 113 1 377 1 341 2 95 1 331 2 120 1 
105 1 205 1 159 2 113 2 95 1 93 1 331 2 120 2 66 1 97 1 169 1 272 1 287 1 313 2 45 1 174 4 339 1 243 1 176 2 377 1 23 1 341 2 
66 1 97 1 313 1 174 2 45 1 205 1 176 1 243 1 339 1 113 1 159 2 23 1 249 1 93 1 95 1 331 2 120 1 224 1 
97 1 105 1 169 1 287 1 313 1 174 2 45 1 205 1 176 1 243 1 339 1 146 1 113 1 341 2 95 1 331 2 120 1 224 1 
105 1 205 1 159 2 113 2 95 1 93 1 331 2 120 2 66 1 97 1 169 1 272 1 287 1 313 2 45 1 174 4 339 1 243 1 176 2 23 1 341 2 224 1 
105 1 205 1 159 2 113 2 95 1 93 1 331 2 120 2 66 1 97 1 169 1 272 1 287 1 313 2 174 4 45 1 339 1 243 1 176 2 23 1 341 2 
1 1 322 1 230 1 205 1 159 1 285 1 327 1 95 1 329 1 331 2 167 1 97 1 174 2 45 1 17 1 352 1 19 1 335 1 243 1 339 1 48 1 177 1 80 1 53 1 341 1 250 1 252 1 279 1 
1 1 322 1 230 1 205 1 159 1 285 1 95 1 329 1 331 2 167 1 97 1 174 2 45 1 17 1 71 1 19 1 335 1 337 1 243 1 339 1 48 1 177 1 80 1 53 1 341 1 252 1 279 1 104 1 
105 1 205 1 282 1 159 2 113 2 95 1 93 1 331 2 120 2 66 1 97 1 169 1 272 1 287 1 313 2 45 1 174 4 339 1 243 1 176 2 23 1 341 2 
105 1 61 1 205 1 113 2 159 2 283 1 285 1 327 1 93 1 95 1 329 1 331 2 167 1 120 2 66 1 97 1 169 1 272 1 287 1 313 2 174 4 45 1 17 1 352 1 19 1 176 2 243 1 339 1 48 1 177 1 23 1 80 1 53 1 341 2 250 1 252 1 279 1 
229 1 205 1 303 1 282 1 159 2 113 1 285 1 93 1 95 1 163 1 331 2 120 1 66 1 97 1 169 1 272 1 287 1 313 1 45 1 174 3 339 1 243 1 176 1 292 1 217 1 23 1 80 1 341 1 253 1 
321 1 105 3 88 1 156 2 89 1 205 2 325 1 159 9 328 1 93 3 331 4 39 1 66 3 97 2 169 3 272 3 287 3 313 6 174 19 18 1 215 1 47 1 339 2 243 2 376 1 23 3 125 2 197 2 341 10 82 1 
256 1 321 1 189 1 105 2 359 2 201 1 88 2 156 4 260 1 205 3 89 2 325 2 159 14 93 2 331 6 39 1 66 3 97 3 169 2 270 1 272 3 287 2 313 4 174 26 18 1 47 2 339 3 243 3 22 1 376 1 23 3 125 1 197 2 341 12 
256 1 321 1 189 1 105 4 359 1 201 1 88 3 156 4 260 1 89 3 205 3 325 2 159 20 328 1 93 4 331 6 39 1 42 1 66 5 97 3 270 1 169 5 272 4 287 4 313 8 174 41 18 1 316 1 291 1 47 1 339 3 243 3 22 1 376 1 178 1 319 1 218 1 23 4 125 1 197 4 341 21 82 1 27 1 
256 1 321 1 189 1 105 4 359 2 201 1 88 3 156 4 260 1 89 3 205 4 325 2 159 20 328 1 93 3 331 8 39 1 42 1 66 5 97 4 270 1 169 4 272 4 287 3 313 7 174 38 18 1 316 1 291 1 47 1 339 4 243 4 22 1 376 1 178 1 319 1 218 1 23 4 125 1 197 4 341 18 82 1 27 1 
256 1 321 1 189 1 105 7 359 1 201 1 88 4 156 4 260 1 89 2 205 2 325 1 159 27 328 2 93 7 331 4 39 1 42 1 66 8 97 2 270 1 169 8 272 7 287 7 313 14 174 52 18 1 316 1 47 1 339 2 243 2 22 1 376 1 178 1 319 1 218 1 23 7 125 1 197 4 341 25 27 1 84 2 
228 1 198 1 326 1 277 1 98 1 172 1 299 1 69 1 330 1 254 1 
9 1 131 1 
326 1 277 1 98 1 172 1 299 1 69 1 373 1 338 1 332 1 
138 1 57 1 228 1 198 1 170 1 98 1 172 1 299 1 202 1 69 1 73 1 261 1 37 1 158 2 326 1 277 1 11 1 254 1 
138 1 57 1 228 1 198 1 170 1 98 1 172 1 299 1 202 1 69 1 73 1 261 1 37 1 158 2 326 1 277 1 11 1 254 1 
138 1 57 1 228 1 198 1 170 1 98 1 172 1 299 1 202 1 69 1 73 1 261 1 37 1 158 2 326 1 277 1 11 1 254 1 
281 1 232 1 91 1 
281 1 232 1 91 1 
354 1 109 1 
281 1 354 1 109 1 
225 1 63 1 
358 1 225 1 230 1 202 1 299 1 131 1 261 1 303 2 37 1 158 1 304 1 326 1 9 1 285 2 63 1 310 1 170 1 98 1 172 1 69 1 242 1 292 2 77 1 277 1 80 2 295 1 253 2 
232 1 91 1 
281 1 354 1 109 1 
128 2 1 1 31 1 322 1 205 1 34 1 111 1 282 1 159 1 133 1 285 2 235 1 95 1 329 1 331 2 167 1 97 1 45 1 174 2 288 1 19 2 243 1 339 1 292 2 177 1 80 2 53 2 341 1 279 1 252 2 55 1 
87 1 121 1 203 1 19 2 216 1 177 1 283 1 378 2 245 1 52 1 284 1 264 1 53 2 162 1 252 2 210 1 329 1 184 1 136 1 
87 1 121 1 203 1 19 1 216 1 177 1 378 2 245 1 52 1 284 1 53 1 162 1 252 1 210 1 329 1 136 1 56 1 
30 1 335 1 19 1 101 1 177 1 53 1 134 1 62 1 279 1 252 1 210 1 329 1 184 1 167 1 
87 1 121 1 203 1 19 1 216 1 177 1 378 2 245 1 52 1 284 1 264 1 53 1 162 1 252 1 210 1 184 1 329 1 136 1 
290 1 
185 1 246 1 151 1 141 1 114 1 3 1 73 1 
185 1 302 1 345 1 3 1 346 1 263 1 37 1 368 1 64 1 308 1 266 1 170 1 73 2 79 1 246 1 379 1 251 1 
199 2 106 2 200 1 302 12 345 6 3 2 346 4 6 1 209 2 114 1 306 3 266 4 308 4 64 4 12 2 348 2 167 3 66 2 169 2 272 2 170 5 314 1 72 2 19 3 73 8 20 2 177 4 23 2 219 2 81 2 182 1 279 10 185 8 190 6 362 1 36 1 233 2 37 5 283 1 368 5 329 3 287 2 141 1 140 2 44 6 46 2 335 1 48 3 246 9 379 3 53 3 380 1 252 3 342 2 
185 5 256 1 199 2 190 5 106 1 361 1 201 1 302 6 88 1 345 3 3 2 260 1 89 1 346 2 36 1 37 1 368 1 64 2 308 2 266 2 66 2 270 1 169 2 272 2 170 1 287 2 44 5 70 1 73 5 22 1 23 2 246 8 379 1 219 1 197 1 
185 2 199 2 229 1 106 1 32 1 60 1 324 1 346 1 303 1 37 1 285 1 64 1 308 1 266 1 267 1 213 1 66 2 169 1 170 1 316 1 293 1 292 1 178 1 246 2 80 1 27 1 28 1 253 1 
185 1 141 1 3 1 73 1 346 1 246 1 114 1 266 1 308 1 64 1 
66 2 185 5 199 2 169 2 272 2 190 5 106 1 287 2 44 5 302 10 345 5 73 5 20 1 23 2 246 5 
37 1 170 1 379 1 368 1 3 1 73 1 
185 2 30 1 2 1 362 2 157 1 346 2 36 2 37 3 62 1 368 4 329 1 165 1 64 2 308 2 266 1 167 1 333 1 170 3 19 4 335 2 177 1 246 2 25 1 379 2 53 4 219 2 182 1 279 1 252 4 
1 1 229 2 230 1 205 1 303 2 285 3 327 1 95 1 329 1 331 2 167 1 213 1 97 1 269 1 174 1 45 1 17 1 352 1 19 1 335 1 339 1 243 1 292 2 48 1 177 1 80 3 53 1 341 1 252 1 250 1 279 1 253 2 
185 2 190 2 44 2 302 4 345 2 3 2 73 4 346 1 36 1 246 1 219 1 266 1 308 1 64 1 42 1 
326 1 277 1 132 1 
326 1 277 1 132 1 
228 1 326 1 277 1 63 1 54 1 
326 1 277 1 132 1 
326 1 277 1 90 1 
326 1 277 1 90 1 
326 1 277 1 90 1 
326 1 277 1 
98 1 172 1 
66 1 97 2 169 1 105 2 359 1 313 3 174 8 316 1 205 2 243 2 339 2 178 1 159 4 319 1 218 1 341 4 93 1 27 1 331 4 42 1 
66 1 178 1 159 3 319 1 169 1 105 2 218 1 151 1 313 2 174 6 341 3 316 1 27 1 42 1 
66 1 97 1 105 1 169 1 272 1 287 1 313 2 174 4 205 1 243 1 339 1 159 2 23 1 341 2 93 1 223 1 331 2 
66 1 105 1 169 1 272 1 287 1 313 2 174 7 88 1 89 1 159 3 23 1 197 2 341 4 328 1 93 1 
105 5 359 2 88 2 205 2 159 11 93 4 328 1 331 4 42 1 66 3 97 2 169 3 272 2 287 2 313 9 143 1 350 1 174 23 316 2 243 2 339 2 178 1 319 1 218 1 23 2 197 2 341 12 27 2 84 1 
174 1 197 1 341 1 
159 1 174 1 88 1 
66 1 97 1 169 1 105 2 272 1 287 1 313 3 174 6 205 1 20 1 339 1 243 1 159 3 23 1 341 3 93 1 331 2 223 1 
256 1 105 1 201 1 88 1 89 1 205 1 260 1 159 6 93 1 331 2 39 1 66 2 97 1 270 1 169 2 272 2 287 2 313 2 174 12 339 1 243 1 22 1 23 2 197 1 341 6 
66 1 169 1 105 1 313 2 174 6 316 1 178 1 159 3 341 3 93 1 27 1 
97 1 105 1 359 1 313 2 350 1 174 3 316 1 205 1 243 1 339 1 159 1 319 1 218 1 341 2 93 1 27 1 331 2 
66 2 97 1 105 3 169 2 32 1 313 5 174 10 316 2 205 1 339 1 243 1 178 1 159 5 341 5 93 2 27 2 331 2 39 1 
66 1 97 1 313 1 174 2 205 1 243 1 339 1 159 2 23 1 93 1 39 1 331 2 
66 1 97 1 105 1 169 1 272 1 287 1 313 2 174 4 205 1 243 1 339 1 159 2 23 1 341 2 93 1 39 1 331 2 
97 3 105 1 359 1 313 2 350 1 174 3 316 1 205 3 243 3 339 3 159 1 341 2 93 1 82 1 27 1 39 1 331 6 
105 7 359 2 258 1 88 3 89 1 205 5 159 16 328 1 93 5 331 10 39 1 212 1 42 1 66 5 97 5 169 5 272 3 287 3 313 12 350 1 174 34 316 3 339 5 243 5 178 2 102 1 319 1 218 1 23 3 197 4 341 18 27 3 82 1 223 1 
105 2 201 1 88 1 89 1 205 1 159 4 331 2 39 1 42 1 66 1 97 1 169 1 313 2 174 8 316 1 339 1 243 1 178 1 319 1 218 1 197 1 341 4 27 1 
105 2 201 1 88 1 89 1 205 2 159 6 328 1 93 1 39 1 331 4 42 1 66 2 97 2 169 1 272 1 313 3 174 11 316 1 339 2 243 2 178 1 319 1 218 1 23 1 197 2 341 5 27 1 223 1 
256 1 105 3 359 1 201 1 88 1 260 1 89 1 205 3 159 9 93 1 331 6 39 1 42 1 66 3 97 3 270 1 169 3 272 2 287 2 313 4 174 19 316 1 339 3 243 3 22 1 178 1 319 1 218 1 23 2 197 1 341 10 27 1 223 1 
256 1 105 3 359 1 201 1 88 1 89 1 205 3 260 1 159 10 93 2 331 6 39 1 42 1 66 3 97 3 270 1 169 2 272 2 287 1 313 5 174 17 316 1 339 3 243 3 22 1 178 1 319 1 218 1 23 2 197 1 341 7 27 1 223 1 
105 2 201 1 88 1 89 1 205 1 159 4 331 2 39 1 42 1 66 1 97 1 169 1 313 2 174 8 316 1 339 1 243 1 178 1 319 1 218 1 197 1 341 4 27 1 
256 1 105 1 201 1 88 1 89 1 205 1 260 1 159 6 93 1 331 2 39 1 66 2 97 1 270 1 169 2 272 2 287 2 313 2 174 12 339 1 243 1 22 1 23 2 197 1 341 6 
256 1 105 3 359 2 201 1 88 1 260 1 89 1 205 4 159 10 93 2 331 8 39 1 42 1 66 3 97 4 270 1 169 2 272 2 287 1 313 5 174 18 316 1 339 4 243 4 22 1 178 1 319 1 218 1 23 2 197 1 341 8 27 1 223 1 
256 1 105 3 359 2 201 1 88 1 260 1 89 1 205 4 159 9 93 3 39 1 331 8 66 3 97 4 270 1 169 2 272 3 287 2 313 6 174 16 339 4 243 4 22 1 23 3 197 1 341 7 82 1 
66 1 169 1 105 3 313 6 174 7 316 3 178 1 319 2 159 3 218 1 341 4 93 3 27 3 
256 1 105 3 359 2 201 1 88 1 260 1 89 1 205 4 159 10 93 1 39 1 331 8 42 1 66 3 97 4 270 1 169 2 272 2 287 1 313 4 174 18 316 1 339 4 243 4 22 1 178 1 319 1 218 1 23 2 197 1 341 8 27 1 82 1 
51 1 139 1 230 1 285 1 80 1 237 1 292 1 
139 1 334 1 230 1 16 1 75 1 292 1 244 1 51 1 80 1 285 1 236 1 237 1 
177 1 30 1 151 1 62 1 53 1 279 1 252 1 329 1 19 1 335 1 167 1 
230 1 17 1 335 1 19 1 303 1 292 1 48 1 177 1 80 2 285 2 53 1 327 1 279 1 183 1 252 1 329 1 167 1 253 1 
230 1 17 1 60 1 362 1 19 1 76 1 303 2 292 2 48 2 177 1 209 1 80 2 285 2 53 1 327 1 279 3 183 1 252 1 329 1 348 1 167 2 65 1 253 1 
230 1 362 1 60 1 303 2 209 1 92 1 285 2 329 1 348 1 167 2 65 1 17 1 71 1 19 2 76 1 292 2 48 2 177 1 80 2 53 2 252 2 183 1 279 3 253 1 
362 1 3 1 37 2 209 1 92 1 306 1 368 1 329 1 348 1 40 1 167 1 170 2 46 1 19 3 335 1 73 1 50 1 48 1 177 1 81 1 53 3 279 4 252 3 
170 2 46 1 335 1 3 1 362 1 19 3 73 1 48 1 177 1 37 2 233 1 209 1 92 1 306 1 53 3 81 1 368 1 252 3 279 4 329 1 348 1 167 1 
177 1 53 1 252 1 329 1 19 1 127 1 
128 1 257 1 200 1 123 1 335 2 19 7 21 1 48 1 177 3 283 1 305 1 52 1 53 6 192 1 252 7 279 3 280 1 329 2 127 1 55 1 167 2 
105 2 61 1 205 2 303 1 113 1 159 3 160 1 167 1 120 1 66 1 169 1 313 2 174 6 17 1 352 1 316 1 19 1 176 1 177 1 178 1 319 1 218 1 80 2 183 1 279 1 27 1 230 2 282 1 283 1 285 2 327 1 95 2 329 1 331 4 42 1 97 2 45 2 288 1 339 2 243 2 292 1 48 1 53 1 341 3 250 1 252 1 253 1 
185 1 3 1 346 2 37 3 233 1 114 1 306 1 368 2 64 2 308 2 266 2 12 1 170 3 141 1 140 1 46 1 335 1 19 1 72 1 73 1 246 1 379 1 53 1 81 1 182 1 295 1 252 1 279 2 
200 1 19 2 48 1 177 2 283 1 81 1 53 2 380 1 252 2 279 2 329 1 127 1 167 1 
177 1 283 1 30 1 92 1 62 1 53 4 279 1 252 4 329 1 19 4 335 1 35 1 167 1 
187 1 123 1 362 1 19 2 49 1 48 1 364 1 177 2 53 2 252 2 279 1 280 1 329 1 167 1 
177 1 378 1 87 1 53 1 203 1 252 1 329 1 19 1 335 1 136 1 
31 1 19 2 177 1 283 1 52 1 53 2 252 2 279 1 329 1 55 1 167 1 
257 1 30 1 362 1 335 1 19 5 35 1 21 1 177 2 283 1 62 1 53 4 252 5 279 3 329 2 55 1 167 2 
30 1 362 1 335 1 19 5 35 1 363 1 21 1 177 2 283 1 62 1 53 4 252 5 279 3 329 2 55 1 167 2 
230 1 17 1 71 1 335 1 19 1 303 1 292 1 48 1 177 1 80 2 285 2 53 1 279 1 183 1 252 1 329 1 167 1 253 1 
200 1 123 1 362 1 19 1 48 1 177 2 305 1 53 1 252 1 279 1 280 1 329 1 167 1 
343 1 188 1 230 1 276 1 145 1 
343 1 194 1 186 1 188 2 170 2 230 1 360 1 46 1 276 2 3 1 60 1 73 1 145 2 323 1 76 1 37 2 112 1 295 1 65 1 
343 1 276 1 145 1 34 1 111 1 292 1 80 1 285 1 235 1 
343 1 186 1 360 1 
255 1 8 1 151 1 357 1 
255 1 8 1 234 1 153 1 357 1 336 1 135 1 
147 1 234 1 175 1 
255 1 238 2 195 1 336 3 8 1 234 3 355 1 153 1 94 1 357 1 41 1 135 1 
255 1 8 1 171 1 234 2 153 1 357 1 336 2 207 1 135 1 
378 1 234 1 121 1 289 1 153 1 357 1 166 1 336 1 41 1 136 1 135 1 
8 1 234 1 153 1 357 1 336 1 41 1 135 1 
255 1 8 2 234 1 153 1 336 1 41 1 135 1 
85 1 5 1 336 2 8 1 234 2 181 1 153 2 357 1 41 1 135 2 
255 1 171 2 289 1 336 3 8 1 234 3 221 1 153 1 357 2 117 1 41 1 135 1 119 1 
255 1 268 1 171 1 121 1 203 1 336 2 8 1 378 2 234 2 162 1 153 1 357 1 41 1 135 1 136 1 
255 1 171 2 274 1 289 1 336 4 207 1 8 1 234 4 153 2 357 2 117 1 41 1 135 2 
255 1 8 1 234 1 153 1 357 1 336 1 41 1 135 1 
255 2 238 1 171 2 195 1 289 1 336 4 8 2 234 4 94 1 153 1 357 3 116 1 117 1 135 1 
255 1 86 1 349 1 171 1 374 1 336 2 8 1 234 2 153 1 357 1 41 1 135 1 
255 1 238 2 173 1 195 1 336 3 8 1 234 3 153 1 94 2 357 1 41 1 135 1 
129 2 150 1 357 2 296 1 
248 1 234 1 153 1 336 1 41 1 135 1 
255 1 8 1 171 1 234 2 221 1 153 1 357 1 336 2 41 1 135 1 
294 1 
255 1 8 1 234 1 153 1 357 1 336 1 41 1 135 1 
255 1 238 1 171 1 336 3 8 1 234 3 221 1 153 1 357 1 41 1 135 1 
289 1 357 1 116 1 117 1 
8 1 357 1 

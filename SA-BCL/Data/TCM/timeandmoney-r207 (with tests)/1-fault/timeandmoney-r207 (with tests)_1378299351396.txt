#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 35 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
36 1 129 1 38 1 277 3 249 1 368 1 347 1 250 6 83 1 84 1 153 9 11 2 372 1 19 2 20 1 375 1 115 2 180 2 136 5 23 1 68 2 214 1 184 1 96 1 291 2 239 2 144 9 362 4 
36 1 129 1 38 1 277 3 249 1 368 1 347 1 250 6 83 1 84 1 153 9 11 2 372 1 19 2 20 1 115 2 375 1 180 2 136 5 23 1 68 2 214 1 184 1 96 1 291 2 239 2 144 9 362 4 
36 1 129 1 38 1 277 4 249 1 368 1 347 1 250 7 83 1 84 1 153 10 11 2 372 1 19 2 20 1 115 2 375 1 180 2 136 6 23 1 68 2 214 1 184 1 96 1 291 2 239 2 144 10 362 5 
36 1 129 1 38 1 277 2 249 1 347 1 250 4 83 1 84 1 153 7 11 2 372 1 19 2 20 1 115 2 375 1 180 2 136 4 23 1 68 2 214 1 184 1 96 1 291 1 239 2 144 7 362 3 
19 1 180 1 115 1 136 3 36 1 214 1 277 1 249 1 96 1 368 1 291 2 239 1 250 3 11 1 153 4 144 4 372 1 362 2 
19 1 354 1 375 1 180 1 136 1 68 1 36 1 214 1 38 1 96 1 239 1 153 2 11 1 144 2 30 1 64 1 
19 2 136 2 68 1 36 1 214 1 129 1 277 1 96 1 239 2 250 1 153 3 144 3 362 1 
105 1 36 1 129 1 277 3 249 1 368 1 250 7 153 9 11 1 372 1 19 2 115 1 180 1 136 5 23 1 68 1 214 1 184 1 96 1 291 2 239 2 378 1 144 9 362 4 
105 1 36 1 129 1 277 3 249 1 368 1 250 7 153 9 11 1 372 1 19 2 115 1 180 1 136 5 23 1 68 1 214 1 184 1 96 1 291 2 239 2 378 1 144 9 362 4 
178 1 143 1 79 1 
268 2 79 1 75 1 
94 2 142 2 176 1 319 2 232 2 46 2 12 1 360 2 
57 1 76 1 100 1 297 1 298 1 301 1 176 1 62 1 152 1 202 1 280 1 331 1 111 2 134 1 43 1 12 1 113 1 16 2 232 2 137 2 213 2 46 3 119 1 140 1 261 1 94 2 142 2 318 1 319 2 337 1 265 1 322 1 266 1 123 1 267 1 56 2 360 3 
94 1 142 1 176 1 319 1 232 1 89 1 167 1 46 1 360 1 283 1 
89 1 46 1 215 1 1 1 259 1 236 1 79 1 142 1 278 1 178 1 371 1 252 1 359 1 360 1 
232 1 89 1 46 1 1 1 236 1 79 1 94 1 142 1 278 1 178 1 319 1 252 2 371 1 359 2 360 1 
66 1 252 1 359 1 220 1 377 1 
279 1 178 1 72 1 66 1 252 2 359 2 377 1 79 1 
66 1 252 1 359 1 
232 1 89 1 46 1 377 1 94 1 306 1 176 1 142 1 319 1 252 1 167 1 359 1 283 1 360 1 
79 1 
175 1 178 1 72 1 66 1 252 2 359 2 377 1 79 1 
230 2 158 1 66 2 146 1 78 1 377 2 79 1 237 1 107 2 132 1 178 1 177 1 72 1 252 5 63 1 227 2 55 1 359 5 295 1 
143 1 12 1 
232 1 160 1 46 2 94 1 142 2 319 1 293 1 12 2 360 2 
185 1 264 1 141 1 
57 1 76 1 16 1 137 1 46 1 301 1 261 1 71 1 318 1 337 1 280 1 266 1 111 1 134 1 12 1 360 1 
76 1 57 1 16 1 209 1 232 1 137 1 46 2 301 1 261 1 94 1 142 1 185 1 318 1 337 1 121 1 280 1 266 1 111 1 134 1 360 2 
94 3 142 3 319 1 232 3 121 1 46 3 12 1 360 3 
94 1 142 1 232 1 89 1 167 1 46 1 360 1 
94 1 142 1 319 1 232 1 89 1 293 1 160 1 46 1 360 1 
76 1 57 1 100 1 298 1 301 1 1 1 176 1 278 1 371 1 252 1 202 1 280 1 331 1 134 1 111 1 12 1 113 1 16 1 209 1 232 3 89 1 137 1 213 2 46 4 119 1 236 1 261 1 94 3 142 3 318 1 263 1 319 2 337 1 188 1 265 1 121 1 293 1 322 1 266 1 123 1 267 1 56 1 359 1 360 4 
94 1 142 2 232 1 121 1 46 2 12 1 376 1 360 2 259 1 
209 1 232 3 89 1 46 3 197 1 1 1 236 1 79 1 94 3 142 3 278 1 263 1 319 1 121 2 293 1 252 1 371 1 359 1 360 3 
94 2 142 2 185 1 319 1 232 2 121 1 293 1 46 2 360 2 141 1 
57 1 76 1 16 1 137 1 46 1 301 1 261 1 318 1 337 1 280 1 266 1 111 1 134 1 12 1 360 1 
57 1 76 1 16 1 137 1 46 1 261 1 318 1 337 1 280 1 266 1 111 1 350 1 349 1 12 1 360 1 
170 1 273 1 102 1 100 1 243 1 298 1 200 1 62 2 10 1 202 1 225 1 331 1 42 1 15 1 213 2 315 1 119 2 141 2 185 2 164 1 264 2 265 1 267 1 56 4 
94 1 142 1 110 1 232 1 89 1 371 1 46 1 360 1 
209 1 232 4 46 5 376 1 259 1 94 4 142 5 319 1 251 1 121 2 293 1 12 1 86 1 360 5 
94 2 142 2 110 1 232 2 89 1 167 1 46 2 360 2 
108 1 247 1 
108 1 247 1 
125 1 254 1 
125 1 254 1 
125 1 254 1 
108 1 181 1 247 1 
108 1 181 1 247 1 
108 1 14 1 247 1 
108 2 125 1 9 1 254 1 247 2 248 1 
108 1 181 1 247 1 
108 1 85 1 247 1 
108 1 85 1 247 1 
108 1 85 1 247 1 
364 2 157 3 344 2 138 1 247 2 198 1 248 1 120 2 79 1 108 2 338 1 166 2 122 1 82 2 252 2 332 1 381 1 359 2 179 1 
364 1 325 1 58 1 247 1 108 1 82 1 252 1 332 1 12 1 14 1 114 1 284 1 157 1 232 2 46 2 139 1 26 1 120 1 94 2 142 2 186 1 166 1 359 1 360 2 
180 1 115 1 11 1 
180 1 11 1 30 1 
115 2 365 1 11 3 54 1 30 1 49 1 
115 1 365 1 11 2 30 1 130 1 49 1 
115 1 365 2 11 2 30 1 49 1 
31 1 273 1 274 1 102 1 243 1 58 1 60 2 128 1 78 1 107 1 79 2 200 1 178 1 307 2 252 5 63 3 227 1 282 1 114 1 284 1 230 1 66 1 210 1 235 1 377 4 237 2 72 1 51 2 268 3 340 1 359 5 75 1 
273 3 274 1 102 3 243 3 58 4 61 1 78 1 220 5 79 5 107 2 200 3 178 1 307 6 252 9 63 8 227 2 282 2 230 2 312 1 66 6 210 2 377 7 237 6 72 1 51 6 53 5 379 1 358 1 324 1 55 1 268 9 340 3 359 9 75 3 363 1 
273 1 102 1 58 1 243 1 60 1 128 1 79 3 107 1 200 1 178 1 307 2 252 3 63 3 227 1 282 1 230 1 210 1 235 1 377 2 237 2 51 2 55 1 359 3 340 1 268 4 75 2 
273 2 102 2 58 2 243 2 61 1 60 2 128 1 79 4 107 1 200 2 178 1 307 4 252 4 63 5 227 1 282 1 230 1 210 1 235 1 377 3 237 4 51 4 358 1 324 1 55 1 268 7 359 4 340 2 75 3 
143 1 155 1 261 1 
211 1 261 1 
161 1 
280 1 261 1 
126 1 318 1 101 1 280 1 155 2 261 3 
318 1 280 1 261 1 
174 1 261 1 
156 1 273 1 243 1 314 1 77 1 335 1 356 1 119 3 304 1 222 1 164 3 224 1 62 4 253 2 323 1 42 2 56 7 
156 1 273 1 243 1 314 1 77 1 335 1 356 1 119 3 304 1 222 1 164 3 224 1 62 4 253 2 323 1 42 2 56 7 
156 1 273 1 243 1 314 1 77 1 335 1 356 1 119 3 304 1 222 1 164 3 224 1 62 4 253 2 323 1 42 2 124 1 56 7 
156 1 222 2 62 1 253 1 35 1 56 1 
273 1 100 2 243 1 298 2 77 1 304 1 222 1 62 5 224 1 41 1 253 2 202 2 42 3 203 1 156 1 88 1 314 1 213 4 356 1 119 4 164 4 323 1 267 2 56 9 
57 1 76 1 36 1 4 1 8 1 250 1 153 2 11 2 111 1 333 1 154 1 112 1 16 1 19 1 180 1 115 1 136 1 258 1 287 1 137 1 68 1 214 1 96 1 27 1 239 1 144 2 30 1 54 1 361 1 241 1 
57 1 76 1 36 1 4 1 8 1 250 2 153 3 11 2 111 1 154 1 112 1 229 1 16 1 19 1 180 1 115 1 136 1 258 1 91 1 137 1 68 1 96 1 27 1 239 1 54 1 144 3 30 1 380 1 361 1 241 1 
76 1 57 1 229 1 16 1 180 1 115 1 136 1 258 1 137 1 68 1 36 1 4 1 96 1 250 2 11 2 153 2 54 1 30 1 144 2 111 1 380 1 154 1 361 1 112 1 241 1 
76 1 57 1 246 1 201 1 153 1 280 1 111 1 154 2 311 1 112 2 16 1 19 1 91 1 137 1 68 2 317 1 262 1 261 1 239 1 266 1 144 1 191 1 361 2 
57 1 76 1 4 1 8 1 153 1 11 2 111 1 333 1 154 1 112 1 229 1 16 1 19 1 180 1 115 1 258 1 137 1 68 1 214 1 27 1 239 1 144 1 30 1 54 1 361 1 241 1 
234 1 
57 1 245 2 246 1 1 1 199 1 107 1 151 2 252 5 309 2 63 2 111 2 311 1 256 1 16 2 21 2 66 6 210 1 215 1 259 1 261 1 162 1 72 3 320 1 266 2 74 1 268 2 359 5 168 1 360 1 75 2 76 1 33 1 78 1 275 1 79 2 276 1 278 1 329 4 178 1 371 1 280 1 227 1 374 2 230 1 285 1 286 2 89 1 137 2 46 1 289 2 47 1 92 1 236 1 237 2 142 1 
285 1 33 1 66 2 89 1 46 1 47 1 215 1 1 1 275 1 236 1 259 1 276 1 175 1 142 1 329 2 278 1 72 1 371 1 252 3 309 1 359 3 360 1 
285 1 21 1 33 1 66 1 89 1 46 1 47 1 215 1 1 1 275 1 236 1 259 1 79 1 276 1 175 1 142 1 329 3 278 1 72 1 178 1 371 1 252 3 359 3 360 1 
33 1 1 1 275 1 79 1 276 1 175 1 278 1 329 3 178 1 252 3 371 1 309 1 285 1 21 1 66 2 89 1 46 1 215 1 47 1 289 1 259 1 236 1 142 1 72 1 359 3 360 1 
33 1 245 2 1 1 78 1 275 1 303 1 107 1 79 5 276 1 175 1 367 1 278 1 329 6 178 5 151 2 252 5 371 1 308 1 63 1 309 4 227 1 374 2 228 1 256 1 230 1 285 1 286 2 21 4 66 7 89 1 46 1 215 1 47 1 289 4 259 1 236 1 237 1 142 1 72 3 240 1 74 1 359 5 360 1 75 2 
33 1 245 2 1 1 275 1 78 1 199 1 79 2 107 1 276 1 278 1 329 4 178 1 151 2 252 4 371 1 309 2 63 1 227 1 374 2 285 1 230 1 256 1 286 2 21 2 66 4 89 1 46 1 289 2 215 1 47 1 259 1 236 1 237 1 142 1 72 2 74 1 268 2 359 4 360 1 75 2 
33 1 245 2 1 1 275 1 78 1 303 1 79 1 107 1 276 1 278 1 329 4 178 1 151 2 252 4 371 1 309 2 63 1 227 1 374 2 228 1 256 1 230 1 285 1 286 2 21 2 66 4 89 1 46 1 289 2 215 1 47 1 259 1 236 1 237 1 142 1 72 2 240 1 74 1 359 4 360 1 75 2 
33 1 245 2 1 1 275 1 78 1 303 1 79 1 107 1 276 1 278 1 329 4 178 1 151 2 252 4 371 1 309 2 63 1 227 1 374 2 228 1 256 1 230 1 285 1 286 2 21 2 66 4 89 1 46 1 289 2 215 1 47 1 259 1 236 1 237 1 142 1 72 2 240 1 74 1 359 4 360 1 75 2 
32 1 33 1 1 1 275 1 78 1 79 1 107 1 276 1 346 2 278 1 329 4 178 1 151 2 252 4 371 1 309 2 63 1 227 1 205 1 228 1 230 1 285 1 286 2 21 2 66 4 89 1 46 1 289 2 69 2 215 1 47 1 259 1 236 1 237 1 142 1 72 2 217 1 74 1 268 2 359 4 360 1 
33 1 245 2 1 1 78 1 275 1 303 1 79 1 107 1 276 1 278 1 329 5 367 1 178 1 151 2 252 4 371 1 63 1 309 3 227 1 374 2 228 1 256 1 230 1 285 1 286 2 21 3 66 5 89 1 46 1 215 1 47 1 289 3 259 1 236 1 237 1 142 1 72 2 240 1 74 1 359 4 360 1 75 2 
33 1 245 2 1 1 78 1 275 1 303 1 79 1 107 1 276 1 278 1 329 5 367 1 178 1 151 2 252 4 371 1 63 1 309 3 227 1 374 2 228 1 256 1 230 1 285 1 286 2 21 3 66 5 89 1 46 1 215 1 47 1 289 3 259 1 236 1 237 1 142 1 72 2 240 1 74 1 359 4 360 1 75 2 
33 1 1 1 275 1 78 1 199 1 79 1 107 1 276 1 346 2 278 1 329 4 178 1 151 2 252 4 371 1 309 2 63 1 227 1 205 1 285 1 230 1 286 2 21 2 66 4 89 1 46 1 289 2 69 2 215 1 47 1 259 1 236 1 237 1 142 1 72 2 74 1 268 2 359 4 360 1 
170 1 273 1 100 1 243 1 298 1 314 1 77 1 213 2 356 1 119 3 141 1 185 1 143 1 62 3 164 2 224 1 264 1 265 1 253 1 202 1 323 1 42 2 331 1 12 2 267 1 56 6 
273 1 100 2 102 1 298 2 300 1 243 2 304 1 131 3 221 1 200 2 223 1 62 8 202 2 42 1 331 2 12 1 22 1 355 3 213 4 119 6 140 1 141 4 185 11 164 2 264 11 292 1 321 1 265 1 123 1 267 2 56 14 340 2 341 1 
76 1 57 1 100 1 300 1 298 1 34 1 301 1 330 1 62 1 280 1 202 1 134 1 111 1 331 1 12 1 44 1 16 1 209 1 232 1 137 1 46 2 213 2 119 1 141 1 140 1 261 1 94 1 142 1 318 1 71 1 337 1 265 1 121 1 266 1 123 1 267 1 56 2 360 2 
57 2 100 3 102 2 298 3 300 1 243 3 195 2 345 2 301 2 302 2 304 4 149 1 200 2 62 10 253 1 202 3 111 3 310 1 12 2 16 3 209 1 314 1 356 1 213 6 119 10 261 2 318 2 164 8 264 7 121 1 265 3 323 1 322 2 266 1 123 1 267 3 360 3 76 2 273 3 77 1 224 1 280 2 42 4 331 3 134 2 229 1 135 1 231 2 232 1 137 3 46 3 140 1 141 7 94 1 142 1 185 7 337 2 56 20 340 2 
76 2 57 2 170 1 272 1 296 1 100 2 297 2 298 2 246 1 219 1 62 1 202 2 280 2 111 8 331 2 311 1 229 1 16 7 45 1 232 1 233 1 287 1 137 8 46 1 213 4 119 1 140 1 261 3 94 1 142 1 187 1 121 1 265 2 294 1 266 2 123 1 267 2 56 2 360 1 
242 1 273 1 100 1 102 1 298 1 300 1 243 1 200 1 62 1 202 1 42 1 331 1 232 1 213 2 46 1 119 2 141 1 94 1 142 1 185 1 164 1 319 1 264 1 265 1 293 1 267 1 340 1 56 3 360 1 
170 1 100 1 298 1 243 1 213 2 315 1 304 1 141 1 200 1 185 1 164 1 62 2 264 1 265 1 202 1 331 1 267 1 56 2 
170 1 273 1 100 1 102 1 298 1 213 2 119 2 141 1 185 1 164 1 264 1 265 1 202 1 42 1 331 1 267 1 56 2 15 1 
170 1 273 1 100 1 102 1 243 1 298 1 304 1 200 1 62 2 202 1 331 1 42 1 213 2 119 2 141 2 185 2 164 2 264 2 265 1 267 1 340 1 56 4 
272 1 100 1 298 1 243 1 213 2 315 1 304 1 141 1 200 1 185 1 164 1 62 2 264 1 265 1 202 1 331 1 267 1 56 2 
272 1 273 1 100 1 102 1 298 1 213 2 119 2 141 1 185 1 164 1 264 1 265 1 202 1 42 1 331 1 267 1 56 2 15 1 
272 1 273 1 100 1 102 1 243 1 298 1 304 1 200 1 62 2 202 1 331 1 42 1 213 2 119 2 141 2 185 2 164 2 264 2 265 1 267 1 340 1 56 4 
273 1 100 1 102 1 243 1 298 1 304 1 200 1 62 2 202 1 331 1 42 1 213 2 119 2 141 2 185 2 164 2 264 2 265 1 267 1 56 4 340 1 
76 1 57 1 100 1 298 1 301 1 62 1 280 1 202 1 134 1 111 1 331 1 12 1 16 1 137 1 46 1 213 2 119 1 140 1 261 1 318 1 337 1 265 1 322 1 266 1 123 1 267 1 56 2 360 1 
76 1 57 1 100 1 298 1 147 1 62 1 280 1 202 1 349 1 350 1 111 1 331 1 12 1 16 1 137 1 46 1 213 2 119 1 140 1 261 1 318 1 337 1 265 1 266 1 123 1 267 1 56 2 360 1 
273 1 100 1 102 1 243 1 298 1 300 1 304 1 200 1 62 2 202 1 331 1 42 1 213 2 119 2 141 2 185 2 164 2 264 2 265 1 267 1 340 1 56 4 
76 1 57 1 273 1 102 1 100 1 243 1 298 1 345 1 301 1 304 1 200 1 62 2 280 1 202 1 42 1 134 1 111 1 331 1 16 1 287 1 137 1 46 1 213 2 119 2 141 2 261 1 185 2 318 1 164 2 264 2 337 1 265 1 322 1 267 1 56 4 340 1 360 1 
273 1 102 1 100 1 298 1 300 1 243 1 304 1 200 1 62 2 40 1 202 1 331 1 232 1 213 2 46 1 119 1 141 1 94 1 142 1 185 1 164 1 319 1 264 1 265 1 293 1 267 1 340 1 56 3 360 1 
273 3 100 2 102 3 327 1 298 2 243 3 131 2 304 3 221 1 200 3 62 9 41 1 202 2 42 3 207 1 65 1 355 1 116 1 213 4 288 1 119 10 48 2 163 1 165 1 164 6 292 1 98 2 267 2 56 19 340 3 
271 1 273 2 127 1 100 3 102 2 327 2 298 3 243 3 366 1 304 2 131 2 6 1 221 2 200 3 62 14 41 1 202 3 42 2 203 2 353 1 207 1 65 1 18 1 355 2 213 6 119 12 48 1 163 1 164 4 165 2 98 4 267 3 56 26 340 3 
102 4 100 3 243 5 298 3 304 4 6 1 200 4 62 20 253 1 202 3 203 1 353 1 65 1 207 1 18 1 355 3 116 1 313 1 314 1 213 6 356 1 119 21 163 1 164 8 165 1 323 1 267 3 271 1 273 5 127 1 327 2 77 1 366 1 131 4 221 3 224 1 41 1 42 4 48 1 292 1 98 4 340 4 56 41 
271 1 273 4 127 1 100 4 102 3 327 2 298 4 243 5 77 1 366 1 131 4 304 3 6 1 221 3 200 4 224 1 62 20 253 1 41 1 202 4 42 4 203 2 353 1 207 1 65 1 18 1 355 3 116 1 313 1 314 1 356 1 213 8 119 18 48 1 163 1 165 1 164 7 292 1 323 1 98 4 267 4 56 38 340 4 
271 1 273 8 127 1 100 2 102 7 327 1 298 2 243 8 77 1 366 1 131 4 304 7 6 1 221 2 200 7 223 2 224 1 62 27 253 1 41 1 202 2 42 7 203 1 353 1 207 1 65 1 18 1 355 4 314 1 356 1 213 4 119 25 48 1 163 1 165 1 164 14 292 2 323 1 98 4 267 2 56 52 340 7 
108 1 364 1 338 1 166 1 122 1 82 1 281 1 247 1 248 1 120 1 
139 1 14 1 
108 1 364 1 166 1 194 1 82 1 104 1 247 1 120 1 93 1 
364 1 157 2 344 1 138 1 247 1 198 1 248 1 120 1 79 1 108 1 338 1 166 1 122 1 252 1 82 1 332 1 381 1 359 1 
364 1 157 2 344 1 138 1 247 1 198 1 248 1 120 1 79 1 108 1 338 1 166 1 122 1 252 1 82 1 332 1 381 1 359 1 
364 1 157 2 344 1 138 1 247 1 198 1 248 1 120 1 79 1 108 1 338 1 166 1 122 1 252 1 82 1 332 1 381 1 359 1 
181 1 9 1 352 1 
181 1 9 1 352 1 
39 1 85 1 
39 1 9 1 85 1 
186 1 26 1 
270 1 364 1 325 1 344 1 58 1 198 1 247 1 108 1 252 1 82 1 12 1 14 1 114 1 284 1 157 1 232 2 46 2 139 1 26 1 120 1 377 1 94 2 142 2 186 1 166 1 359 1 360 2 
181 1 352 1 
39 1 9 1 85 1 
76 1 57 1 100 1 297 2 300 1 244 1 298 1 5 1 62 1 280 1 202 1 111 2 331 1 206 1 87 1 16 2 45 1 233 1 137 2 46 2 213 2 119 1 140 1 261 1 142 2 73 1 265 1 123 1 267 1 56 2 360 2 
76 1 57 1 229 1 16 2 342 1 180 1 115 1 258 1 287 1 137 2 4 1 8 1 133 1 11 2 54 1 30 1 111 2 154 1 169 1 
229 1 57 1 76 1 16 1 180 1 115 1 258 1 328 1 137 1 4 1 8 1 133 1 11 2 54 1 30 1 111 1 154 1 
76 1 57 1 16 1 342 1 137 1 173 1 246 1 317 1 261 1 280 1 266 1 111 1 154 1 311 1 
76 1 229 1 57 1 16 1 342 1 180 1 115 1 258 1 137 1 4 1 8 1 133 1 11 2 54 1 30 1 111 1 154 1 169 1 
204 1 
178 1 177 1 143 1 158 1 63 1 79 1 237 1 
230 1 256 1 66 1 245 1 78 1 79 2 107 1 237 1 178 1 72 1 252 1 63 1 227 1 359 1 268 1 374 1 75 1 
57 3 193 2 102 2 243 2 195 2 106 1 107 4 200 2 307 6 252 5 63 9 111 3 255 2 13 2 155 2 16 3 158 1 210 2 117 2 66 5 67 2 211 3 159 2 70 1 261 10 162 1 318 3 72 3 266 1 359 5 268 12 75 6 76 4 126 1 273 2 78 4 174 2 79 8 81 1 278 2 177 1 178 2 280 3 227 4 226 1 373 1 230 4 287 1 90 2 137 3 237 8 50 2 51 6 340 2 
271 1 273 2 218 1 127 1 102 2 243 2 366 1 78 2 131 1 221 1 107 2 79 5 200 2 178 2 307 5 370 1 252 1 63 8 227 2 13 1 353 1 230 2 18 1 355 1 210 1 66 1 159 2 237 5 162 1 72 1 51 5 359 1 268 6 340 2 75 3 
273 1 243 2 78 1 303 1 107 1 306 1 176 1 224 1 252 1 63 2 227 1 13 1 283 1 230 1 232 1 89 1 159 2 24 1 314 1 46 1 237 2 94 1 142 1 319 1 323 1 167 1 359 1 360 1 
230 1 158 1 78 1 107 1 237 1 79 1 177 1 178 1 63 1 227 1 
273 2 102 2 243 2 159 2 195 1 237 5 79 5 200 2 51 5 307 5 63 5 13 1 340 2 268 10 75 5 
178 1 72 1 66 1 252 1 359 1 79 1 
76 1 57 1 106 2 246 1 78 1 107 2 80 1 252 3 280 1 63 2 111 4 227 2 311 1 373 1 230 2 16 4 210 2 66 4 137 4 92 1 261 1 237 2 162 2 238 1 72 2 266 2 55 1 359 3 168 1 
57 1 76 1 100 1 298 1 301 1 176 1 280 1 202 1 111 1 134 1 331 1 12 1 113 1 16 1 232 2 137 1 213 2 46 3 119 1 261 1 94 2 142 2 318 1 319 2 337 1 265 1 322 1 266 1 123 1 267 1 56 1 360 3 
230 1 210 1 78 1 237 2 107 1 79 4 162 1 178 2 51 2 307 2 253 1 63 1 227 1 268 4 75 2 
0 1 166 1 120 1 
0 1 166 1 120 1 
95 1 186 1 338 1 166 1 120 1 
0 1 166 1 120 1 
166 1 120 1 260 1 
166 1 120 1 260 1 
166 1 120 1 260 1 
166 1 120 1 
108 1 247 1 
273 1 100 2 243 1 298 2 314 1 77 1 213 4 356 1 119 4 304 1 62 4 164 3 224 1 253 1 202 2 323 1 42 2 203 1 267 2 56 8 
273 1 243 1 77 1 314 1 356 1 119 3 143 1 224 1 164 2 62 3 253 1 323 1 42 2 56 6 
273 1 17 1 102 1 100 1 298 1 243 1 213 2 119 2 304 1 200 1 164 2 62 2 202 1 42 1 267 1 340 1 56 4 
273 1 355 1 102 1 243 1 119 4 131 2 304 1 221 1 200 1 62 3 164 2 292 1 42 1 56 7 340 1 
273 3 102 2 100 2 243 3 298 2 77 1 304 4 131 2 200 2 223 1 224 2 62 11 253 1 202 2 42 5 203 2 355 2 314 1 356 1 213 4 119 12 183 1 164 9 292 1 321 1 323 2 267 2 340 2 56 23 
56 1 119 1 131 1 
355 1 62 1 56 1 
17 1 273 1 100 1 102 1 298 1 243 1 195 1 213 2 119 3 304 1 200 1 62 3 164 3 202 1 42 2 267 1 56 6 340 1 
271 1 273 2 127 1 100 1 102 2 298 1 243 2 366 1 304 1 131 1 221 1 200 2 62 6 41 1 202 1 42 1 353 1 18 1 355 1 213 2 119 6 164 2 267 1 56 12 340 2 
273 1 243 1 314 1 119 3 304 1 62 3 224 1 164 2 323 1 42 1 56 6 
100 1 298 1 77 1 213 2 356 1 119 2 304 1 183 1 62 1 164 2 224 1 323 1 202 1 42 1 203 1 267 1 56 3 
273 2 100 1 298 1 243 2 24 1 314 1 213 2 119 5 304 2 224 2 164 5 62 5 41 1 202 1 323 2 42 3 267 1 56 10 
100 1 298 1 243 1 213 2 304 1 200 1 62 2 164 1 41 1 202 1 267 1 56 2 
273 1 102 1 100 1 298 1 243 1 213 2 119 2 304 1 200 1 164 2 62 2 41 1 202 1 42 1 267 1 340 1 56 4 
116 1 100 3 298 3 213 6 119 2 304 1 183 1 224 1 164 2 62 1 41 1 202 3 323 1 42 1 203 1 267 3 56 3 
273 5 100 5 102 3 298 5 243 5 77 1 131 4 304 5 221 1 200 3 224 3 62 16 253 1 348 1 41 1 202 5 42 7 203 2 17 1 355 3 116 1 212 1 314 2 356 1 118 1 213 10 119 18 183 1 164 12 292 1 323 3 267 5 56 34 340 3 
273 1 100 1 243 1 298 1 77 1 131 1 221 1 62 4 224 1 253 1 41 1 202 1 42 2 18 1 355 1 314 1 213 2 356 1 119 4 164 2 323 1 267 1 56 8 
273 1 100 2 298 2 243 2 77 1 131 2 304 1 221 1 200 1 224 1 62 6 253 1 41 1 202 2 42 2 18 1 17 1 355 1 314 1 356 1 213 4 119 5 164 3 292 1 323 1 267 2 56 11 340 1 
271 1 273 3 127 1 100 3 102 2 298 3 243 3 77 1 366 1 304 1 131 1 221 1 200 2 224 1 62 9 253 1 41 1 202 3 42 3 203 1 353 1 17 1 18 1 355 1 314 1 356 1 213 6 119 10 164 4 323 1 267 3 56 19 340 2 
271 1 273 2 127 1 100 3 102 1 298 3 243 3 77 1 366 1 304 2 131 1 221 1 200 2 224 1 62 10 253 1 41 1 202 3 42 3 203 1 353 1 17 1 18 1 355 1 314 1 356 1 213 6 119 7 164 5 323 1 267 3 56 17 340 2 
273 1 100 1 243 1 298 1 77 1 131 1 221 1 62 4 224 1 253 1 41 1 202 1 42 2 18 1 355 1 314 1 213 2 356 1 119 4 164 2 323 1 267 1 56 8 
271 1 273 2 127 1 100 1 102 2 298 1 243 2 366 1 304 1 131 1 221 1 200 2 62 6 41 1 202 1 42 1 353 1 18 1 355 1 213 2 119 6 164 2 267 1 56 12 340 2 
271 1 273 2 127 1 100 4 102 1 298 4 243 3 77 1 366 1 304 2 131 1 221 1 200 2 224 1 62 10 253 1 41 1 202 4 42 3 203 2 353 1 18 1 17 1 355 1 314 1 356 1 213 8 119 8 164 5 323 1 267 4 56 18 340 2 
271 1 273 2 127 1 100 4 102 2 298 4 243 3 366 1 304 3 131 1 221 1 200 3 62 9 41 1 202 4 42 3 203 2 353 1 18 1 355 1 116 1 213 8 119 7 164 6 267 4 56 16 340 3 
273 1 243 1 77 2 314 1 356 1 119 4 304 3 224 3 164 6 62 3 323 3 42 3 56 7 
271 1 273 2 127 1 100 4 102 1 298 4 243 3 77 1 366 1 304 1 131 1 221 1 200 2 224 1 62 10 253 1 41 1 202 4 42 3 203 2 353 1 18 1 355 1 116 1 314 1 356 1 213 8 119 8 164 4 323 1 267 4 56 18 340 2 
142 1 46 1 12 1 376 1 360 1 192 1 259 1 
326 1 145 1 299 1 25 1 46 1 376 1 37 1 259 1 142 1 12 1 192 1 360 1 
76 1 57 1 16 1 143 1 280 1 111 1 137 1 266 1 246 1 311 1 261 1 
76 1 57 1 16 1 232 1 137 1 46 2 301 1 261 1 94 1 142 1 318 1 337 1 121 1 280 1 266 1 111 1 12 1 360 2 
76 1 57 1 16 1 67 1 232 2 89 1 137 1 46 2 106 1 301 1 174 1 236 1 261 3 94 1 142 2 318 2 337 1 121 1 371 1 280 2 111 1 12 1 360 2 
76 1 57 1 16 2 67 1 232 2 89 1 172 1 137 2 46 2 106 1 174 1 236 1 261 3 94 1 142 2 318 2 337 1 121 1 371 1 280 2 111 2 349 1 12 1 360 2 
76 1 257 1 57 1 16 3 343 1 67 1 66 1 211 1 172 1 137 3 106 1 174 1 79 1 261 4 278 1 318 1 178 1 252 2 280 1 266 1 111 3 359 2 155 1 
76 1 57 1 16 3 67 1 117 1 66 1 211 1 172 1 137 3 106 1 174 1 79 1 261 4 278 1 318 1 178 1 252 2 280 1 266 1 111 3 359 2 155 1 
76 1 57 1 16 1 294 1 111 1 137 1 
229 1 57 2 76 3 16 6 126 1 45 1 296 1 297 1 287 1 137 7 182 1 219 1 261 3 216 1 318 1 187 1 294 1 280 2 266 2 111 7 334 1 
76 1 57 1 273 1 100 2 243 1 300 1 244 1 298 2 77 1 345 1 301 1 302 1 62 3 224 1 253 1 280 1 202 2 42 2 331 2 111 1 134 1 12 2 16 1 232 1 314 1 287 1 137 1 356 1 46 2 213 4 119 3 141 1 261 1 94 1 142 1 185 1 318 1 164 2 264 1 337 1 265 2 121 1 323 1 322 1 267 2 56 6 360 2 
193 1 78 2 79 1 107 2 278 1 178 1 177 1 252 3 63 1 111 1 227 2 255 1 373 1 155 1 230 2 16 1 158 1 117 1 66 2 211 1 90 1 137 1 377 1 237 1 261 2 72 1 266 1 359 3 
57 1 76 2 16 2 126 1 287 1 137 2 261 2 318 1 294 1 280 1 111 2 226 1 155 1 
76 1 57 1 16 4 172 1 287 1 137 4 246 1 3 1 261 1 280 1 266 1 111 4 311 1 
57 1 76 2 16 2 171 1 137 2 106 1 182 1 261 1 318 1 280 1 111 2 310 1 269 1 334 1 
76 1 57 1 16 1 180 1 258 1 11 1 30 1 111 1 137 1 266 1 
76 1 57 1 229 1 16 2 45 1 73 1 280 1 287 1 111 2 137 2 261 1 
57 2 76 2 16 4 45 1 296 1 287 1 137 5 106 1 246 1 3 1 219 1 261 3 280 2 266 1 111 5 311 1 
57 2 76 2 16 4 45 1 296 1 287 1 137 5 106 1 246 1 3 1 261 3 280 2 266 1 111 5 99 1 311 1 
76 1 57 1 16 1 232 1 137 1 46 2 261 1 94 1 142 1 318 1 337 1 121 1 280 1 266 1 111 1 349 1 12 1 360 2 
57 1 76 2 16 1 126 1 137 1 182 1 106 1 261 1 216 1 318 1 280 1 111 1 334 1 
87 1 46 1 148 1 5 1 142 1 190 1 351 1 206 1 360 1 
52 1 103 1 148 1 
109 1 190 1 351 1 12 1 148 1 
89 1 103 1 1 1 236 1 148 1 377 1 79 1 109 2 278 1 178 1 263 1 52 1 371 1 252 2 190 2 351 2 339 1 12 1 359 2 
96 1 143 1 136 1 36 1 
19 1 96 1 136 1 239 1 153 1 144 1 36 1 
68 1 144 1 112 1 
19 1 136 1 214 1 36 1 2 1 290 1 38 2 369 1 96 1 239 1 153 3 144 3 
19 1 96 1 291 1 136 1 239 1 250 1 153 2 144 2 36 1 
19 1 180 1 115 1 136 1 239 1 11 1 153 1 144 1 372 1 214 1 362 1 
19 1 136 1 239 1 153 1 144 1 36 1 214 1 
19 1 96 1 239 1 153 1 144 1 36 2 214 1 
19 2 136 1 59 1 36 1 214 1 316 1 239 2 29 1 153 2 144 2 
19 1 136 2 23 1 36 1 214 1 184 1 277 1 96 1 239 1 250 2 153 3 144 3 362 1 
19 1 115 1 180 1 136 1 36 1 214 1 96 1 239 1 250 1 357 1 11 2 153 2 30 1 144 2 54 1 
19 2 136 2 36 1 214 1 277 1 96 1 368 1 291 1 239 2 250 2 153 4 144 4 362 1 
19 1 96 1 136 1 239 1 153 1 144 1 36 1 214 1 
19 1 136 3 36 2 2 1 38 1 277 1 369 1 96 2 239 1 189 1 250 2 153 4 144 4 362 1 
19 1 208 1 136 1 36 1 214 1 305 1 96 1 239 1 378 1 250 1 153 2 144 2 
19 1 136 1 214 1 36 1 2 2 336 1 38 2 369 1 96 1 239 1 153 3 144 3 
28 1 136 2 97 2 196 1 
7 1 19 1 239 1 153 1 144 1 214 1 
184 1 19 1 96 1 136 1 239 1 250 1 153 2 144 2 36 1 214 1 
150 1 
19 1 96 1 136 1 239 1 153 1 144 1 36 1 214 1 
19 1 136 1 214 1 36 1 184 1 38 1 96 1 239 1 250 1 153 3 144 3 
277 1 136 1 189 1 362 1 
136 1 36 1 

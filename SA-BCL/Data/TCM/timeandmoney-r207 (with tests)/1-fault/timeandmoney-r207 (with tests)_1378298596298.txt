#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 15 (198,276) (198,276) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 121 1 366 1 276 1 23 2 370 2 190 2 258 1 103 4 348 1 77 2 303 1 174 9 56 1 13 6 198 1 377 1 142 3 177 2 59 9 178 2 15 4 146 1 290 1 334 1 226 1 317 2 68 1 
0 1 121 1 366 1 276 1 23 2 370 2 190 2 258 1 103 4 348 1 77 2 303 1 174 9 56 1 13 6 198 1 377 1 142 3 177 2 59 9 178 2 15 4 146 1 290 1 334 1 226 1 317 2 68 1 
0 1 121 1 366 1 276 1 23 2 370 2 190 2 258 1 103 5 348 1 77 2 303 1 174 10 56 1 13 7 198 1 377 1 142 4 177 2 59 10 178 2 15 5 146 1 290 1 334 1 226 1 317 2 68 1 
0 1 121 1 366 1 276 1 23 2 370 2 190 2 258 1 103 3 348 1 77 1 303 1 174 7 56 1 13 4 198 1 377 1 142 2 177 2 59 7 178 2 15 3 146 1 290 1 334 1 317 2 68 1 
121 1 0 1 174 4 13 3 198 1 142 1 276 1 177 1 59 4 178 1 15 2 190 1 370 1 103 2 77 2 226 1 303 1 317 1 
121 1 174 2 198 1 276 1 177 1 59 2 23 1 98 1 370 1 235 1 190 1 258 1 348 1 317 1 137 1 
121 1 174 3 13 1 198 1 377 1 142 1 276 1 177 2 59 3 23 1 15 1 103 1 317 2 
121 1 0 1 157 1 276 1 23 1 370 1 190 1 103 4 77 2 303 1 174 9 13 7 198 1 377 1 142 3 177 2 59 9 178 1 15 4 290 1 315 1 226 1 317 2 68 1 
121 1 0 1 157 1 276 1 23 1 370 1 190 1 103 4 77 2 303 1 174 9 13 7 198 1 377 1 142 3 177 2 59 9 178 1 15 4 290 1 315 1 226 1 317 2 68 1 
245 1 104 1 217 1 
245 1 93 1 41 2 
300 1 17 2 102 2 115 2 212 2 255 1 36 2 191 2 
122 1 250 1 189 1 255 1 129 1 26 1 191 2 300 1 102 2 218 1 7 1 105 1 301 1 52 1 132 1 350 2 308 1 264 1 311 1 35 1 224 1 179 1 36 3 205 1 17 2 247 1 38 1 207 1 115 3 39 2 151 2 272 2 379 2 337 1 212 2 119 1 213 1 
17 1 102 1 115 1 19 1 209 1 211 1 212 1 255 1 36 1 191 1 
351 1 155 1 339 1 124 1 95 1 36 1 191 1 245 1 73 1 180 1 115 1 104 1 209 1 135 1 
155 2 339 1 124 1 36 1 191 1 245 1 73 1 180 2 17 1 102 1 115 1 104 1 209 1 212 1 135 1 
155 1 376 1 180 1 34 1 321 1 
245 1 48 1 155 2 180 2 332 1 104 1 34 1 321 1 
155 1 180 1 34 1 
155 1 321 1 255 1 36 1 191 1 63 1 180 1 17 1 102 1 115 1 19 1 209 1 211 1 212 1 
245 1 
245 1 155 2 180 2 284 1 332 1 104 1 34 1 321 1 
155 5 22 1 319 1 139 2 251 1 321 2 34 2 288 1 112 1 368 1 245 1 27 1 180 5 65 1 332 1 104 1 302 1 305 2 263 2 
300 1 217 1 
340 1 36 2 191 2 17 1 300 2 102 1 115 2 212 1 11 1 
126 1 193 1 118 1 
122 1 250 1 189 1 71 1 35 1 179 1 129 1 36 1 26 1 300 1 115 1 7 1 39 1 151 1 272 1 213 1 
122 1 250 1 189 1 35 1 129 1 179 1 26 1 36 2 191 1 17 1 102 1 115 2 7 1 193 1 39 1 151 1 272 1 28 1 249 1 213 1 
55 1 340 1 95 1 36 5 191 5 17 4 300 1 102 4 115 5 249 2 28 1 212 1 262 1 31 1 
17 2 102 2 115 2 209 1 211 1 16 1 36 2 191 2 
300 1 17 3 102 3 115 3 249 1 212 1 36 3 191 3 
17 1 102 1 115 1 209 1 211 1 36 1 191 1 
17 1 102 1 115 1 340 1 209 1 212 1 11 1 36 1 191 1 
155 1 122 1 250 1 339 1 189 1 124 1 340 1 255 1 161 1 129 1 26 1 191 3 73 1 300 1 102 3 218 1 7 1 105 1 52 1 28 1 350 1 135 1 108 1 308 1 264 1 311 1 35 1 179 1 36 4 205 1 17 3 180 1 38 1 115 4 209 1 39 1 151 1 272 1 379 2 249 1 337 1 212 2 119 1 213 1 
55 1 300 1 17 1 102 1 115 2 95 1 249 1 36 2 191 2 
155 1 339 1 124 1 340 1 161 1 36 3 191 3 245 1 73 1 180 1 17 3 102 3 115 3 209 1 28 1 249 2 212 1 9 1 135 1 
340 1 36 2 191 2 17 2 102 2 115 2 193 1 249 1 118 1 212 1 
122 1 250 1 189 1 35 1 179 1 129 1 36 1 26 1 300 1 115 1 7 1 39 1 151 1 272 1 213 1 
122 1 250 1 189 1 14 1 35 1 129 1 36 1 26 1 300 1 259 1 115 1 39 1 151 1 272 1 213 1 
274 1 69 1 125 1 126 2 128 1 374 1 105 1 193 2 29 1 350 4 308 2 264 1 203 1 311 1 224 2 62 1 205 1 38 1 292 1 379 2 118 2 40 1 119 1 154 1 
17 1 339 1 102 1 115 1 209 1 16 1 36 1 191 1 
113 1 229 1 
113 1 229 1 
141 1 362 1 
141 1 362 1 
141 1 362 1 
113 1 229 1 349 1 
113 1 229 1 349 1 
113 1 229 1 361 1 
371 1 113 2 229 2 231 1 141 1 362 1 
113 1 229 1 349 1 
113 1 229 1 299 1 
113 1 229 1 299 1 
113 1 229 1 299 1 
155 1 214 1 156 1 229 1 342 1 159 1 322 1 191 2 300 1 102 2 134 1 82 1 355 1 309 1 266 1 36 2 330 1 17 2 113 1 180 1 115 2 333 1 271 1 361 1 
155 2 275 2 92 1 156 2 229 2 367 1 342 2 159 1 266 2 245 1 371 1 113 2 180 2 333 2 116 1 336 1 271 3 326 1 88 1 
178 1 190 1 370 1 
98 1 190 1 370 1 
101 1 117 1 178 2 98 1 60 1 370 3 
117 1 167 1 178 1 98 1 60 1 370 2 
117 2 178 1 98 1 60 1 370 2 
155 5 228 1 214 1 93 1 277 2 321 4 47 1 344 1 104 1 261 2 168 2 347 1 134 1 305 1 263 1 33 1 139 1 203 1 34 1 288 2 112 3 143 1 330 1 245 2 180 5 65 1 332 1 292 1 380 1 40 1 154 1 41 3 
187 1 22 1 155 9 44 1 214 4 93 3 277 6 321 7 47 1 369 1 344 2 104 1 168 6 172 1 239 1 305 2 197 5 263 2 352 1 376 5 139 2 203 3 34 6 288 6 112 8 143 3 245 5 180 9 332 1 65 1 292 3 380 2 40 3 154 3 41 9 
155 3 22 1 214 1 93 2 321 2 277 2 344 1 104 1 261 1 168 2 347 1 305 1 263 1 33 1 139 1 203 1 288 2 112 3 143 1 245 3 180 3 292 1 380 1 40 1 154 1 41 4 
187 1 155 4 22 1 44 1 214 2 93 3 277 4 321 3 344 1 104 1 261 2 168 4 347 1 305 1 263 1 352 1 33 1 139 1 203 2 288 4 112 5 143 2 245 4 180 4 292 2 380 1 40 2 154 2 41 7 
20 1 213 1 217 1 
296 1 213 1 
120 1 
250 1 213 1 26 1 
345 1 213 1 
250 1 213 1 
147 1 250 1 20 2 213 3 26 1 273 1 
328 1 308 3 69 3 125 2 253 1 2 2 204 1 97 1 224 4 150 1 335 1 87 1 40 1 350 7 154 1 327 1 306 1 
328 1 308 3 69 3 125 2 253 1 2 2 204 1 97 1 224 4 150 1 335 1 87 1 40 1 350 7 154 1 327 1 306 1 
328 1 308 3 69 3 125 2 378 1 253 1 2 2 204 1 97 1 224 4 150 1 335 1 87 1 40 1 350 7 154 1 327 1 306 1 
69 10 125 5 253 2 2 3 97 2 280 1 281 1 169 1 350 31 327 2 306 1 328 1 308 15 200 1 264 1 202 4 203 3 204 1 311 1 143 3 244 1 312 3 224 16 269 1 37 1 38 1 87 1 335 2 150 5 292 3 379 2 119 1 40 4 154 4 
69 4 125 3 253 1 2 2 97 1 75 1 51 1 350 9 327 1 306 1 328 1 308 4 264 2 204 1 311 2 244 1 224 5 38 2 150 1 335 1 379 4 40 1 119 2 154 1 
121 1 363 1 276 1 127 1 23 1 98 1 129 1 190 1 370 2 283 1 101 1 8 1 325 1 194 1 174 2 13 1 198 1 176 1 177 1 59 2 178 1 268 1 35 1 86 1 39 1 272 1 151 1 183 1 317 1 
318 1 276 1 23 1 98 1 129 1 216 1 190 1 370 2 101 1 283 1 8 1 325 1 194 1 174 3 13 2 198 1 176 1 177 1 59 3 178 1 243 1 268 1 35 1 86 1 39 1 272 1 151 1 183 1 317 1 
276 1 23 1 98 1 129 1 216 1 370 2 190 1 283 1 101 1 325 1 194 1 174 2 13 2 198 1 176 1 59 2 178 1 243 1 268 1 35 1 86 1 39 1 272 1 151 1 
318 1 174 1 122 1 250 1 199 1 177 1 176 2 59 1 23 2 35 1 256 1 343 1 129 1 283 2 86 2 237 1 39 1 151 1 272 1 219 1 222 1 213 1 317 1 
121 1 127 1 23 1 98 1 129 1 216 1 190 1 370 2 283 1 101 1 8 1 325 1 194 1 174 1 176 1 177 1 59 1 178 1 268 1 35 1 86 1 39 1 272 1 151 1 183 1 317 1 
81 1 
155 5 43 1 1 2 250 1 339 1 93 2 95 1 96 2 5 2 256 1 344 1 164 4 104 1 346 1 219 1 305 1 263 1 351 1 112 2 180 5 18 2 65 1 115 1 66 1 272 2 186 2 122 2 364 1 124 1 233 1 129 1 191 1 73 1 74 2 286 2 238 1 135 1 78 1 139 1 34 6 288 2 242 1 83 1 35 1 36 1 245 2 246 1 332 3 39 2 209 1 151 2 89 1 381 1 213 1 41 2 
155 3 339 1 124 1 364 1 95 1 5 1 191 1 73 1 284 1 164 2 346 1 238 1 135 1 351 1 34 2 242 1 83 1 36 1 180 3 115 1 332 1 209 1 
155 3 339 1 124 1 364 1 95 1 191 1 73 1 284 1 164 3 104 1 286 1 346 1 238 1 135 1 351 1 34 1 242 1 83 1 36 1 245 1 180 3 115 1 332 1 209 1 
155 3 1 1 339 1 124 1 364 1 95 1 5 1 191 1 73 1 284 1 164 3 104 1 286 1 346 1 238 1 135 1 351 1 34 2 242 1 83 1 36 1 245 1 180 3 332 1 115 1 209 1 
155 5 43 1 1 4 339 1 93 2 341 1 95 1 96 2 5 4 164 6 104 5 346 1 305 1 263 1 351 1 112 1 180 5 64 1 18 2 115 1 65 1 185 1 186 2 124 1 364 1 191 1 73 1 74 2 284 1 286 4 238 1 135 1 139 1 34 7 288 1 83 1 242 1 36 1 245 5 332 3 209 1 248 1 293 1 381 1 
155 4 43 1 1 2 339 1 93 2 95 1 96 2 5 2 164 4 104 1 346 1 305 1 263 1 351 1 112 1 180 4 18 2 115 1 65 1 66 1 186 2 124 1 364 1 191 1 73 1 74 2 286 2 238 1 135 1 139 1 34 4 288 1 83 1 242 1 36 1 245 2 332 2 209 1 381 1 41 2 
155 4 43 1 1 2 339 1 93 2 124 1 364 1 341 1 95 1 96 2 5 2 191 1 73 1 74 2 164 4 104 1 286 2 346 1 238 1 135 1 305 1 263 1 351 1 139 1 34 4 288 1 112 1 242 1 83 1 36 1 245 1 180 4 18 2 332 2 115 1 65 1 209 1 248 1 293 1 186 2 381 1 
155 4 43 1 1 2 339 1 93 2 124 1 364 1 341 1 95 1 96 2 5 2 191 1 73 1 74 2 164 4 104 1 286 2 346 1 238 1 135 1 305 1 263 1 351 1 139 1 34 4 288 1 112 1 242 1 83 1 36 1 245 1 180 4 18 2 332 2 115 1 65 1 209 1 248 1 293 1 186 2 381 1 
155 4 43 1 227 1 1 2 339 1 124 1 364 1 95 1 96 2 5 2 191 1 73 1 74 2 260 2 164 4 104 1 286 2 346 1 238 1 135 1 305 1 263 1 351 1 139 1 34 4 288 1 112 1 242 1 83 1 36 1 245 1 180 4 84 1 332 2 115 1 148 1 65 1 209 1 248 1 184 2 41 2 
155 4 43 1 1 3 339 1 93 2 124 1 364 1 341 1 95 1 96 2 5 3 191 1 73 1 74 2 164 5 104 1 286 3 346 1 238 1 135 1 305 1 263 1 351 1 139 1 34 5 288 1 112 1 242 1 83 1 36 1 245 1 180 4 18 2 332 2 65 1 115 1 209 1 248 1 293 1 185 1 186 2 381 1 
155 4 43 1 1 3 339 1 93 2 124 1 364 1 341 1 95 1 96 2 5 3 191 1 73 1 74 2 164 5 104 1 286 3 346 1 238 1 135 1 305 1 263 1 351 1 139 1 34 5 288 1 112 1 242 1 83 1 36 1 245 1 180 4 18 2 332 2 65 1 115 1 209 1 248 1 293 1 185 1 186 2 381 1 
155 4 43 1 1 2 339 1 95 1 96 2 5 2 260 2 164 4 104 1 346 1 305 1 263 1 351 1 112 1 180 4 115 1 65 1 66 1 184 2 227 1 124 1 364 1 191 1 73 1 74 2 286 2 238 1 135 1 139 1 34 4 288 1 83 1 242 1 36 1 245 1 332 2 209 1 41 2 
69 2 125 2 126 1 253 1 2 1 128 1 217 1 300 2 193 1 105 1 350 6 306 1 328 1 308 3 264 1 204 1 311 1 224 3 205 1 38 1 335 1 379 2 118 1 119 1 40 1 154 1 
69 2 125 1 94 1 126 11 280 1 300 1 105 1 193 11 166 1 221 1 350 14 173 1 308 6 200 1 264 2 140 1 202 3 203 2 311 2 143 2 312 3 224 8 205 2 38 2 207 1 150 1 292 1 379 4 337 1 118 4 119 2 40 1 154 2 
122 1 42 1 250 1 295 1 189 1 71 1 129 1 26 1 191 1 300 1 102 1 7 1 105 1 28 1 10 1 350 2 308 1 264 1 140 1 35 1 311 1 179 1 224 1 36 2 205 1 17 1 38 1 115 2 207 1 39 1 272 1 151 1 379 2 249 1 118 1 337 1 119 1 213 1 
215 2 250 2 253 1 2 1 216 1 300 2 102 1 7 2 105 3 52 2 350 20 306 1 308 10 264 3 311 3 179 2 224 10 17 1 115 3 225 1 272 3 21 1 118 7 119 3 122 1 69 8 125 4 189 2 126 7 129 2 324 2 26 2 191 1 193 7 28 1 196 2 328 1 140 1 203 2 240 2 204 1 35 2 143 2 36 3 205 3 38 3 207 1 335 1 39 3 150 4 292 2 151 3 152 1 379 6 249 1 337 1 40 3 213 2 154 3 
363 1 122 2 250 2 128 1 4 1 256 1 129 2 216 1 191 1 102 1 105 2 132 2 219 1 133 1 350 2 353 1 308 1 264 2 241 1 35 2 311 2 144 1 224 1 36 1 313 1 205 2 17 1 38 2 208 1 115 1 207 1 39 8 272 8 151 7 379 4 249 1 337 1 119 2 213 3 
69 1 125 1 126 1 340 1 278 1 191 1 102 1 193 1 105 1 350 3 308 2 264 1 140 1 203 1 311 1 143 1 224 1 36 1 205 1 17 1 38 1 115 1 292 1 379 2 118 1 212 1 119 1 40 1 154 1 
69 1 126 1 264 1 203 1 128 1 311 1 224 2 205 1 38 1 193 1 105 1 150 1 379 2 118 1 29 1 350 2 119 1 154 1 
308 2 69 1 125 1 126 1 264 1 128 1 311 1 62 1 205 1 38 1 193 1 105 1 292 1 379 2 118 1 350 2 119 1 40 1 
69 2 125 1 126 2 128 1 105 1 193 2 350 4 308 2 264 1 203 1 143 1 311 1 224 2 205 1 38 1 150 1 292 1 379 2 118 2 119 1 40 1 154 1 
69 1 126 1 264 1 203 1 144 1 311 1 224 2 205 1 38 1 193 1 105 1 150 1 379 2 118 1 29 1 350 2 119 1 154 1 
308 2 69 1 125 1 126 1 264 1 144 1 311 1 62 1 205 1 38 1 193 1 105 1 292 1 379 2 118 1 350 2 119 1 40 1 
69 2 125 1 126 2 105 1 193 2 350 4 308 2 264 1 203 1 143 1 311 1 144 1 224 2 205 1 38 1 150 1 292 1 379 2 118 2 119 1 40 1 154 1 
69 2 125 1 126 2 105 1 193 2 350 4 308 2 264 1 203 1 143 1 311 1 224 2 205 1 38 1 150 1 292 1 379 2 118 2 119 1 40 1 154 1 
122 1 250 1 189 1 129 1 26 1 300 1 7 1 105 1 52 1 350 2 308 1 264 1 35 1 311 1 224 1 179 1 36 1 205 1 38 1 207 1 115 1 39 1 272 1 151 1 379 2 337 1 119 1 213 1 
122 1 250 1 189 1 129 1 26 1 300 1 259 1 105 1 350 2 136 1 308 1 264 1 14 1 35 1 311 1 224 1 36 1 205 1 38 1 207 1 115 1 39 1 272 1 151 1 379 2 337 1 119 1 213 1 
69 2 125 1 126 2 105 1 193 2 350 4 308 2 264 1 140 1 203 1 143 1 311 1 224 2 205 1 38 1 150 1 292 1 379 2 118 2 119 1 40 1 154 1 
363 1 215 1 250 1 69 2 125 1 189 1 126 2 129 1 26 1 7 1 193 2 105 1 52 1 350 4 308 2 264 1 203 1 35 1 311 1 143 1 224 2 179 1 36 1 205 1 38 1 115 1 292 1 150 1 39 1 272 1 151 1 379 2 118 2 40 1 119 1 154 1 213 1 
69 1 126 1 340 1 72 1 191 1 102 1 105 1 193 1 350 3 308 1 264 1 140 1 203 1 311 1 143 1 224 2 36 1 205 1 17 1 38 1 115 1 292 1 150 1 379 2 212 1 118 1 40 1 119 1 154 1 
69 6 125 3 160 1 280 1 100 2 49 1 51 1 350 19 308 10 200 1 264 2 202 2 203 3 289 2 311 2 143 3 312 1 224 9 357 1 38 2 181 1 85 1 210 1 150 3 292 3 379 4 338 1 119 2 40 3 154 3 
123 1 69 4 125 2 160 1 100 1 51 1 350 26 308 12 58 1 264 3 200 2 201 1 202 2 203 3 289 4 311 3 143 3 244 2 224 14 312 2 270 1 357 2 38 3 181 2 85 1 149 1 210 1 150 2 292 2 379 6 316 1 40 2 119 3 154 3 
123 1 69 8 125 4 253 1 2 1 160 1 280 1 100 1 51 1 350 41 304 1 306 1 328 1 308 21 58 1 200 3 264 3 201 1 202 4 203 4 204 1 289 4 311 3 143 4 244 1 312 3 224 20 270 1 357 1 38 3 181 2 85 1 149 1 210 1 335 1 150 4 292 4 316 1 379 6 338 1 119 3 40 5 154 5 
123 1 69 7 125 4 253 1 2 1 160 1 280 1 100 1 51 1 350 38 304 1 306 1 328 1 308 18 58 1 200 3 264 4 201 1 202 4 203 4 204 1 289 4 311 4 143 4 244 2 312 3 224 20 270 1 357 1 38 4 181 2 85 1 149 1 210 1 335 1 150 3 292 3 316 1 379 8 338 1 119 4 40 4 154 5 
123 1 69 14 125 7 253 1 2 1 160 1 280 2 100 1 51 1 166 2 350 52 306 1 328 1 308 25 58 1 200 2 264 2 201 1 202 4 203 7 204 1 289 4 311 2 143 7 244 1 312 4 224 27 270 1 357 1 38 2 181 1 85 1 149 1 210 1 335 1 150 7 292 7 316 1 379 4 119 2 40 8 154 8 
371 1 113 1 156 1 229 1 333 1 342 1 326 1 88 1 266 1 107 1 
82 1 361 1 
113 1 156 1 229 1 320 1 358 1 333 1 234 1 342 1 266 1 
182 1 349 1 
231 1 310 1 299 1 
155 1 275 1 92 1 156 1 229 1 159 1 342 1 266 1 245 1 371 1 180 1 113 1 333 1 116 1 336 1 271 2 326 1 88 1 
155 1 275 1 92 1 156 1 229 1 159 1 342 1 266 1 245 1 371 1 180 1 113 1 333 1 116 1 336 1 271 2 326 1 88 1 
155 1 275 1 92 1 156 1 229 1 159 1 342 1 266 1 245 1 371 1 180 1 113 1 333 1 116 1 336 1 271 2 326 1 88 1 
231 1 182 1 349 1 
231 1 182 1 349 1 
310 1 299 1 
231 1 310 1 299 1 
355 1 309 1 
275 1 155 1 214 1 156 1 229 1 321 1 342 1 322 1 191 2 300 1 102 2 220 1 134 1 82 1 355 1 309 1 266 1 36 2 330 1 180 1 113 1 17 2 115 2 116 1 333 1 271 1 361 1 
250 1 158 1 4 1 129 1 191 2 76 1 105 1 130 1 132 2 171 1 350 2 308 1 264 1 140 1 267 1 35 1 311 1 224 1 36 2 313 1 205 1 38 1 115 2 207 1 39 2 272 2 151 2 379 2 337 1 119 1 213 1 
363 1 178 1 46 1 98 1 35 1 268 1 129 1 216 1 190 1 370 2 282 1 101 1 331 1 86 1 39 2 8 1 325 1 151 2 272 2 
178 1 98 1 268 1 35 1 129 1 216 1 190 1 370 2 101 1 331 1 86 1 39 1 8 1 325 1 151 1 272 1 91 1 
122 1 250 1 46 1 35 1 343 1 256 1 129 1 86 1 39 1 151 1 272 1 219 1 153 1 213 1 
178 1 46 1 98 1 268 1 35 1 129 1 216 1 190 1 370 2 282 1 101 1 331 1 86 1 39 1 8 1 325 1 151 1 272 1 
145 1 
245 1 319 1 104 1 288 1 112 1 368 1 217 1 
155 1 93 1 104 1 305 1 263 1 139 1 34 1 288 1 112 1 245 2 180 1 18 1 65 1 332 1 186 1 381 1 41 1 
155 5 250 3 296 3 93 6 45 1 3 2 6 2 344 2 163 2 104 2 345 2 168 6 305 4 263 4 109 2 354 1 112 9 356 1 180 5 65 4 20 2 272 3 363 1 122 1 319 1 277 6 70 2 368 1 129 4 26 3 192 1 73 2 375 2 195 1 32 2 139 4 34 5 203 2 240 2 288 8 35 3 143 2 246 1 245 8 147 1 332 3 39 3 292 2 151 3 90 2 40 2 213 10 154 2 41 12 
155 1 123 1 93 3 70 1 277 5 24 1 344 1 104 2 168 5 305 2 307 1 263 2 109 2 139 2 58 1 200 1 201 1 202 1 34 1 203 2 288 5 112 8 143 2 312 1 246 1 245 5 180 1 332 1 65 2 149 1 292 2 316 1 40 2 154 2 41 6 
155 1 341 1 70 1 253 1 255 1 191 1 102 1 305 1 263 1 109 2 139 1 288 2 204 1 112 2 36 1 63 1 206 1 180 1 17 1 115 1 65 1 19 1 209 1 335 1 211 1 212 1 40 1 154 2 
139 1 319 1 288 1 112 1 368 1 245 1 65 1 104 1 305 1 263 1 
109 2 93 5 70 1 203 2 277 5 240 1 288 5 112 5 143 2 245 5 292 2 168 5 40 2 154 2 41 10 
245 1 155 1 180 1 332 1 104 1 34 1 
22 1 155 3 122 2 250 1 233 1 256 1 129 1 192 1 344 2 219 1 195 2 305 2 263 2 139 2 110 1 287 1 34 4 288 2 112 2 35 1 246 2 180 3 65 1 332 2 39 4 272 4 151 4 89 1 213 1 
122 1 250 1 189 1 255 1 129 1 26 1 191 2 300 1 102 2 218 1 7 1 105 1 52 1 350 1 308 1 264 1 311 1 35 1 179 1 36 3 205 1 17 2 38 1 115 3 39 1 272 1 151 1 379 2 337 1 212 2 119 1 213 1 
139 1 93 2 277 2 2 1 288 2 112 1 245 4 246 1 65 1 344 1 104 2 168 2 305 1 41 4 263 1 
333 1 106 1 342 1 
333 1 106 1 342 1 
333 1 355 1 342 1 111 1 326 1 
333 1 106 1 342 1 
333 1 342 1 30 1 
333 1 342 1 30 1 
333 1 342 1 30 1 
333 1 342 1 
113 1 229 1 
328 1 308 4 69 3 125 2 264 2 253 1 2 1 204 1 311 2 244 1 224 4 38 2 150 1 335 1 379 4 40 1 350 8 119 2 154 1 306 1 
328 1 308 3 69 2 125 2 335 1 253 1 2 1 204 1 40 1 350 6 224 3 154 1 217 1 306 1 
308 2 80 1 69 2 125 1 264 1 203 1 311 1 143 1 224 2 38 1 292 1 150 1 379 2 40 1 119 1 350 4 154 1 
308 4 69 2 125 1 200 1 202 2 203 1 143 1 312 1 224 3 280 1 292 1 150 1 40 1 350 7 154 1 
69 9 125 5 253 2 2 1 280 1 53 1 166 1 350 23 221 1 306 1 328 1 308 12 264 2 202 2 203 2 204 1 143 2 311 2 244 2 224 11 312 2 38 2 335 2 150 4 292 2 379 4 40 3 119 2 154 3 
308 1 202 1 350 1 
350 1 224 1 312 1 
80 1 308 3 69 3 125 2 264 1 203 1 240 1 311 1 143 1 224 3 38 1 150 1 292 1 379 2 119 1 350 6 40 1 154 1 
123 1 69 2 125 1 51 1 350 12 308 6 58 1 200 1 264 1 202 1 201 1 203 2 311 1 143 2 312 1 224 6 38 1 149 1 150 1 292 2 379 2 316 1 119 1 40 2 154 2 
308 3 69 2 125 1 253 1 204 1 224 3 335 1 150 1 350 6 40 1 154 1 
328 1 308 2 69 2 125 1 264 1 253 1 311 1 244 1 224 1 38 1 150 1 335 1 53 1 379 2 350 3 119 1 306 1 
308 5 69 5 125 3 264 1 253 2 204 1 311 1 224 5 206 1 38 1 51 1 335 2 150 2 379 2 119 1 350 10 40 2 154 2 
69 1 264 1 203 1 311 1 224 2 38 1 51 1 150 1 379 2 119 1 350 2 154 1 
308 2 69 2 125 1 264 1 203 1 311 1 143 1 224 2 38 1 51 1 292 1 150 1 379 2 40 1 119 1 350 4 154 1 
308 2 69 2 125 1 264 3 253 1 311 3 244 1 224 1 38 3 51 1 53 1 335 1 150 1 379 6 338 1 350 3 119 3 
69 12 125 7 253 3 2 1 280 1 281 1 51 1 53 1 169 1 350 34 306 1 328 1 308 18 80 1 200 1 264 5 202 4 203 3 204 2 311 5 143 3 244 2 269 1 312 3 224 16 38 5 335 3 150 5 292 3 379 10 338 1 119 5 40 5 154 5 
69 2 125 2 253 1 2 1 51 1 350 8 306 1 328 1 308 4 200 1 264 1 202 1 204 1 311 1 312 1 224 4 38 1 149 1 335 1 379 2 40 1 119 1 154 1 
69 3 125 2 253 1 2 1 280 1 51 1 350 11 306 1 328 1 308 5 80 1 200 1 264 2 202 2 203 1 204 1 311 2 143 1 312 1 224 6 38 2 149 1 335 1 150 1 379 4 40 1 119 2 154 2 
123 1 69 4 125 3 253 1 2 1 51 1 350 19 306 1 328 1 80 1 308 10 58 1 200 1 264 3 201 1 202 1 203 2 204 1 311 3 143 2 244 1 312 1 224 9 38 3 149 1 335 1 150 1 292 2 379 6 316 1 119 3 40 3 154 3 
123 1 69 5 125 3 253 1 2 1 51 1 350 17 306 1 328 1 80 1 308 7 58 1 200 1 264 3 202 1 201 1 203 2 204 1 311 3 143 2 244 1 312 1 224 10 38 3 149 1 335 1 150 2 292 1 379 6 316 1 119 3 40 2 154 3 
69 2 125 2 253 1 2 1 51 1 350 8 306 1 328 1 308 4 200 1 264 1 202 1 204 1 311 1 312 1 224 4 38 1 149 1 335 1 379 2 40 1 119 1 154 1 
123 1 69 2 125 1 51 1 350 12 308 6 58 1 200 1 264 1 202 1 201 1 203 2 311 1 143 2 312 1 224 6 38 1 149 1 150 1 292 2 379 2 316 1 119 1 40 2 154 2 
123 1 69 5 125 3 253 1 2 1 51 1 350 18 306 1 328 1 308 8 80 1 58 1 200 1 264 4 201 1 202 1 203 2 204 1 311 4 143 2 244 2 312 1 224 10 38 4 149 1 335 1 150 2 292 1 379 8 316 1 119 4 40 2 154 3 
123 1 69 6 125 3 51 1 350 16 308 7 58 1 200 1 264 4 201 1 202 1 203 3 311 4 143 3 244 2 312 1 224 9 38 4 149 1 150 3 292 2 379 8 316 1 119 4 338 1 40 2 154 3 
328 2 308 4 69 6 125 3 253 3 204 1 224 3 335 3 150 3 40 1 350 7 154 1 306 1 
123 1 69 4 125 3 253 1 2 1 51 1 350 18 306 1 328 1 308 8 58 1 200 1 264 4 201 1 202 1 203 2 204 1 311 4 143 2 244 2 312 1 224 10 38 4 149 1 335 1 150 1 292 1 379 8 316 1 119 4 338 1 40 2 154 3 
55 1 300 1 115 1 95 1 360 1 36 1 191 1 
55 1 95 1 254 1 265 1 36 1 191 1 291 1 314 1 300 1 115 1 360 1 54 1 
122 1 250 1 39 1 272 1 151 1 219 1 35 1 256 1 129 1 213 1 217 1 
122 1 250 1 189 1 35 1 129 1 179 1 26 1 36 2 191 1 300 1 17 1 102 1 115 2 39 1 151 1 272 1 249 1 213 1 
250 2 339 1 189 1 129 1 26 2 191 2 300 1 102 2 345 1 195 1 135 1 32 1 35 1 179 1 36 2 17 1 115 2 39 1 209 1 272 1 151 1 249 1 213 3 
250 2 339 1 189 1 323 1 129 1 26 2 191 2 300 1 102 2 345 1 195 1 135 1 32 1 14 1 35 1 36 2 17 1 115 2 39 2 209 1 272 2 151 2 249 1 213 3 
155 2 122 1 250 1 188 1 296 1 34 1 323 1 35 1 129 1 26 1 61 1 245 1 73 1 180 2 104 1 345 1 20 1 39 3 151 3 272 3 195 1 213 4 32 1 
155 2 122 1 250 1 296 1 34 1 323 1 35 1 129 1 26 1 245 1 73 1 180 2 163 1 104 1 345 1 20 1 39 3 151 3 272 3 195 1 213 4 32 1 
353 1 39 1 272 1 151 1 35 1 129 1 
363 1 122 2 353 1 250 2 57 1 241 1 329 1 35 2 4 1 223 1 129 3 216 1 26 1 147 1 208 1 39 7 151 6 272 7 132 1 133 1 213 3 
363 1 250 1 215 1 69 2 125 2 189 1 126 1 253 1 2 1 129 1 26 1 324 1 191 1 300 2 102 1 7 1 193 1 105 2 52 1 350 6 306 1 328 1 308 3 264 2 140 1 204 1 267 1 35 1 311 2 224 3 179 1 36 2 205 2 17 1 38 2 115 2 335 1 39 1 151 1 272 1 379 4 249 1 118 1 40 1 119 2 154 1 213 1 
155 3 122 1 319 1 296 1 321 1 3 1 368 1 192 1 73 1 6 1 163 1 104 1 375 1 305 2 263 2 139 2 34 2 288 1 112 1 245 1 180 3 65 2 332 1 20 1 39 1 151 1 272 1 213 2 
363 1 353 1 250 1 45 1 35 1 129 2 26 1 147 1 20 1 39 2 151 2 272 2 213 2 
122 1 363 1 250 1 323 1 35 1 256 1 129 1 114 1 39 4 151 4 272 4 219 1 213 1 
250 1 57 1 252 1 329 1 35 1 129 2 26 1 39 2 151 2 272 2 195 1 21 1 170 1 213 1 
122 1 325 1 39 1 272 1 151 1 98 1 35 1 129 1 190 1 370 1 
363 1 250 1 76 1 39 2 272 2 151 2 35 1 4 1 129 1 213 1 216 1 
122 1 363 1 250 2 241 1 35 2 256 1 4 1 129 2 114 1 208 1 39 5 151 4 272 5 219 1 195 1 213 3 
122 1 363 1 79 1 250 2 241 1 35 2 256 1 4 1 129 2 114 1 39 5 151 4 272 5 219 1 195 1 213 3 
122 1 250 1 189 1 14 1 35 1 129 1 26 1 36 2 191 1 300 1 17 1 102 1 115 2 39 1 151 1 272 1 249 1 213 1 
250 1 57 1 329 1 35 1 223 1 129 2 26 1 147 1 39 1 151 1 272 1 195 1 213 1 
138 1 158 1 297 1 36 1 191 1 372 1 115 1 130 1 171 1 
99 1 257 1 372 1 
300 1 138 1 372 1 165 1 297 1 
155 2 138 2 339 1 124 1 321 1 297 2 161 1 245 1 99 1 73 1 257 1 300 1 372 1 162 1 180 2 104 1 209 1 165 2 135 1 
198 1 276 1 217 1 
174 1 198 1 276 1 177 1 59 1 317 1 
174 1 176 1 23 1 
121 1 174 3 258 2 198 1 230 1 276 1 177 1 59 3 131 1 298 1 317 1 
174 2 13 1 198 1 276 1 177 1 59 2 77 1 317 1 
0 1 121 1 174 1 103 1 177 1 59 1 178 1 15 1 317 1 190 1 370 1 
121 1 174 1 276 1 177 1 59 1 317 1 
121 1 174 1 198 1 276 1 177 1 59 1 15 1 317 1 
121 1 174 2 276 1 177 2 59 2 25 1 373 1 67 1 317 2 
121 1 174 3 13 2 198 1 142 1 276 1 177 1 59 3 15 1 290 1 103 1 317 1 68 1 
121 1 174 2 13 1 198 1 276 1 177 1 59 2 178 1 98 1 279 1 370 2 190 1 101 1 317 1 
121 1 174 4 13 2 198 1 142 1 276 1 177 2 59 4 15 1 103 1 77 1 226 1 317 2 
121 1 174 1 198 1 276 1 177 1 59 1 317 1 
174 4 13 2 198 2 230 1 142 1 276 2 232 1 177 1 59 4 15 1 258 1 103 1 131 1 317 1 
121 1 174 2 294 1 13 1 365 1 198 1 276 1 177 1 59 2 315 1 317 1 
121 1 174 3 258 2 198 1 359 1 230 1 276 1 177 1 59 3 131 2 317 1 
285 1 50 2 175 1 15 2 
121 1 174 1 236 1 177 1 59 1 317 1 
121 1 290 1 174 2 13 1 198 1 276 1 177 1 59 2 317 1 
12 1 
121 1 174 1 198 1 276 1 177 1 59 1 317 1 
121 1 290 1 174 3 258 1 13 1 198 1 276 1 177 1 59 3 317 1 
103 1 142 1 232 1 15 1 
276 1 

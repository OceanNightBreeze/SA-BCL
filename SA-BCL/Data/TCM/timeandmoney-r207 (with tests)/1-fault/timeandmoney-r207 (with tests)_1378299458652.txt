#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 2 74 1 321 2 75 2 120 1 122 1 197 2 124 1 305 1 345 1 227 2 125 4 101 5 32 1 291 9 327 1 103 6 204 1 58 2 377 1 378 1 111 1 238 1 135 9 140 1 360 2 163 3 72 1 
93 2 74 1 321 2 75 2 120 1 122 1 197 2 124 1 305 1 345 1 227 2 125 4 101 5 32 1 291 9 327 1 103 6 204 1 58 2 377 1 378 1 111 1 238 1 135 9 140 1 360 2 163 3 72 1 
93 2 74 1 321 2 75 2 120 1 122 1 197 2 124 1 305 1 345 1 227 2 125 5 101 6 32 1 291 10 327 1 103 7 204 1 58 2 377 1 378 1 111 1 238 1 135 10 140 1 360 2 163 4 72 1 
93 2 74 1 321 2 75 2 120 1 122 1 197 2 124 1 305 1 345 1 227 2 125 3 101 4 32 1 291 7 327 1 103 4 204 1 58 2 377 1 111 1 238 1 135 7 140 1 360 1 163 2 72 1 
58 1 93 1 75 1 378 1 122 1 135 4 197 1 305 1 124 1 227 1 360 2 125 2 101 3 163 1 32 1 291 4 103 3 72 1 
58 1 93 1 75 1 258 1 321 1 179 1 238 1 135 2 305 1 345 1 227 1 101 1 271 1 32 1 291 2 72 1 
75 2 321 1 135 3 305 1 227 2 125 1 101 2 163 1 32 1 291 3 327 1 103 1 72 1 
93 1 321 1 75 2 120 1 122 1 197 1 305 1 124 1 227 2 125 4 101 5 202 1 32 1 327 1 291 9 103 7 58 1 377 1 378 1 135 9 360 2 42 1 163 3 72 1 
93 1 321 1 75 2 120 1 122 1 197 1 305 1 124 1 227 2 125 4 101 5 202 1 32 1 327 1 291 9 103 7 58 1 377 1 378 1 135 9 360 2 42 1 163 3 72 1 
359 1 127 1 128 1 
13 2 128 1 261 1 
181 2 147 2 249 1 70 2 89 2 55 1 303 2 130 2 
90 1 26 1 195 1 303 3 283 1 344 1 323 1 147 2 249 1 374 1 54 2 55 1 102 1 150 1 56 1 130 2 151 2 108 1 353 1 354 1 35 1 87 1 86 1 156 1 210 2 213 1 181 2 139 1 115 2 297 2 70 3 89 2 117 1 44 1 188 1 320 1 167 1 
181 1 147 1 14 1 219 1 70 1 89 1 55 1 362 1 303 1 130 1 
106 1 191 1 208 1 14 1 303 1 295 1 359 1 89 1 70 1 41 1 128 1 251 1 318 1 339 1 
191 1 14 1 303 1 147 1 181 1 295 1 359 1 89 1 70 1 41 1 128 1 251 2 318 2 339 1 130 1 
145 1 251 1 318 1 209 1 65 1 
66 1 145 1 359 1 128 1 251 2 318 2 301 1 65 1 
251 1 318 1 65 1 
145 1 14 1 303 1 147 1 181 1 53 1 219 1 55 1 89 1 70 1 251 1 362 1 318 1 130 1 
128 1 
66 1 145 1 359 1 95 1 128 1 251 2 318 2 65 1 
222 1 145 2 312 1 233 2 153 1 314 1 61 1 155 1 65 2 66 1 359 1 347 2 9 1 30 1 161 1 128 1 251 5 318 5 319 2 
90 1 81 1 342 1 354 1 86 1 156 1 283 1 303 2 344 1 147 1 181 1 115 1 297 1 149 1 89 1 70 2 117 1 150 1 167 1 151 1 
249 1 127 1 
311 1 278 1 303 2 147 1 181 1 249 2 89 2 70 2 130 1 
25 1 342 1 322 1 
90 1 354 1 178 1 86 1 303 1 283 1 156 1 344 1 249 1 115 1 297 1 70 1 117 1 150 1 151 1 167 1 
328 1 81 1 278 1 208 1 303 5 147 4 181 4 249 1 149 2 89 5 70 5 381 1 45 1 130 1 
181 2 147 2 229 1 14 1 219 1 70 2 89 2 303 2 
181 3 147 3 249 1 149 1 70 3 89 3 303 3 130 1 
181 1 147 1 14 1 219 1 70 1 89 1 303 1 
181 1 147 1 311 1 278 1 14 1 70 1 89 1 303 1 130 1 
90 1 278 1 191 1 26 1 195 1 283 1 303 4 246 1 344 1 147 3 249 1 54 2 149 1 55 1 251 1 102 1 150 1 129 1 130 2 151 1 81 1 108 1 353 1 354 1 14 1 87 1 86 1 156 1 210 1 181 3 295 1 139 1 115 1 297 1 70 4 89 3 41 1 318 1 117 1 44 1 188 1 339 1 320 1 167 1 
181 1 147 1 249 1 149 1 208 1 70 2 89 2 381 1 303 2 
81 1 278 1 191 1 14 1 303 3 147 3 181 3 285 1 295 1 149 2 89 3 70 3 41 1 128 1 251 1 318 1 129 1 339 1 130 1 
278 1 25 1 342 1 303 2 147 2 181 2 149 1 89 2 70 2 130 1 
90 1 354 1 86 1 303 1 283 1 156 1 344 1 249 1 115 1 297 1 70 1 117 1 150 1 151 1 167 1 
90 1 354 1 303 1 49 1 283 1 156 1 344 1 249 1 115 1 286 1 297 1 70 1 150 1 151 1 167 1 
20 1 366 1 25 2 342 2 26 1 322 2 371 1 199 1 29 1 228 1 54 2 102 1 56 2 351 1 10 1 108 1 353 1 87 1 180 1 210 4 298 1 44 2 320 1 73 1 
181 1 147 1 229 1 14 1 41 1 70 1 89 1 303 1 
248 1 4 1 
248 1 4 1 
33 1 284 1 
33 1 284 1 
33 1 284 1 
248 1 116 1 4 1 
248 1 116 1 4 1 
248 1 2 1 4 1 
33 1 248 2 107 1 284 1 221 1 4 2 
248 1 116 1 4 1 
248 1 88 1 4 1 
248 1 88 1 4 1 
248 1 88 1 4 1 
205 1 83 1 152 1 244 1 2 1 379 1 303 2 304 1 4 1 336 1 147 2 181 2 248 1 249 1 216 1 77 1 70 2 89 2 126 1 186 1 251 1 318 1 290 1 275 1 
107 1 84 1 83 2 152 2 193 1 259 1 379 2 304 1 4 2 336 3 67 2 182 1 248 2 380 1 158 1 126 2 128 1 251 2 318 2 
58 1 93 1 197 1 
58 1 93 1 258 1 
58 3 109 1 258 1 100 1 302 1 197 2 
58 2 258 1 100 1 302 1 197 1 114 1 
58 2 258 1 100 2 302 1 197 1 
145 4 47 2 226 1 29 1 98 2 347 1 30 1 251 5 128 2 10 1 205 1 233 1 314 2 153 3 13 3 293 1 37 1 180 1 261 1 211 2 65 1 66 1 239 1 359 1 265 1 240 1 186 1 43 1 318 5 298 1 319 1 275 1 
222 1 0 1 145 7 47 6 280 1 245 5 3 1 29 3 347 2 30 1 251 9 128 5 232 1 10 3 233 2 314 6 153 8 13 9 237 1 293 3 37 1 209 5 180 3 261 3 211 6 65 6 66 1 239 2 359 1 218 1 43 2 318 9 298 3 319 2 275 4 
222 1 145 2 47 2 226 1 29 1 98 1 347 1 128 3 251 3 10 1 233 1 153 3 314 2 13 4 293 1 180 1 261 2 211 2 239 1 359 1 265 1 43 1 318 3 319 1 298 1 275 1 
222 1 0 1 145 3 47 4 226 1 29 2 98 2 347 1 128 4 251 4 232 1 10 2 233 1 153 5 314 4 13 7 237 1 293 2 180 2 261 3 211 4 239 1 359 1 265 1 43 1 318 4 319 1 298 2 275 2 
223 1 127 1 
175 1 344 1 
91 1 
354 1 150 1 344 1 
121 1 344 1 
354 1 344 1 
223 2 354 1 308 1 150 1 344 3 57 1 
10 1 104 1 20 2 234 1 60 1 370 1 243 2 260 1 180 1 210 7 64 1 214 1 39 1 171 1 44 3 56 4 73 3 
10 1 104 1 20 2 234 1 60 1 370 1 243 2 260 1 180 1 210 7 64 1 214 1 39 1 171 1 44 3 56 4 73 3 
10 1 104 1 20 2 234 1 34 1 60 1 370 1 243 2 260 1 180 1 210 7 64 1 214 1 39 1 171 1 44 3 56 4 73 3 
20 5 276 1 189 3 341 1 243 3 370 2 123 1 29 3 171 1 54 2 78 1 349 1 31 4 102 1 56 16 104 1 10 4 108 1 234 5 60 2 293 3 260 2 87 1 180 4 210 31 64 1 214 2 39 1 69 1 268 1 298 3 44 15 320 1 73 10 
20 3 24 1 243 2 370 1 123 1 171 1 54 4 102 2 56 5 10 1 104 1 108 2 234 1 60 1 87 2 260 1 180 1 210 9 64 1 214 1 71 1 44 4 320 2 73 4 
367 1 93 1 75 1 321 1 224 1 283 1 197 1 305 1 5 1 51 1 227 1 7 1 101 1 32 1 291 2 103 1 151 1 58 2 109 1 235 1 258 1 156 1 135 2 358 1 115 1 141 1 297 1 274 1 72 1 166 1 
93 1 75 1 321 1 224 1 283 1 197 1 51 1 324 1 227 1 7 1 101 1 32 1 291 3 103 2 151 1 58 2 109 1 235 1 258 1 156 1 135 3 136 1 358 1 115 1 141 1 297 1 187 1 274 1 72 1 166 1 
93 1 321 1 224 1 283 1 197 1 51 1 101 1 32 1 291 2 103 2 151 1 58 2 109 1 235 1 258 1 156 1 135 2 136 1 358 1 115 1 141 1 297 1 187 1 274 1 72 1 
90 1 75 1 321 2 224 2 282 1 283 1 344 1 324 1 51 2 227 1 8 1 291 1 376 1 151 1 235 2 354 1 236 1 156 1 135 1 262 1 115 1 297 1 142 1 
58 2 93 1 109 1 235 1 258 1 321 1 75 1 224 1 156 1 283 1 135 1 197 1 5 1 305 1 136 1 51 1 358 1 227 1 115 1 141 1 7 1 297 1 291 1 274 1 166 1 151 1 
174 1 
90 2 191 1 242 2 303 1 344 1 346 2 8 1 347 1 251 5 350 1 203 4 151 2 253 1 106 1 12 1 314 2 153 2 354 1 13 2 315 1 208 1 14 1 112 1 156 1 261 2 65 6 66 3 115 2 17 1 359 1 361 2 70 1 318 5 272 2 319 1 162 1 164 1 169 2 76 1 283 1 30 1 128 2 292 1 233 1 333 1 295 1 38 2 239 1 185 2 297 2 89 1 41 1 142 1 339 1 241 1 
106 1 333 1 191 1 242 1 76 1 95 1 14 1 208 1 303 1 65 2 66 1 295 1 17 1 41 1 89 1 70 1 251 3 203 2 318 3 339 1 253 1 241 1 
106 1 333 1 191 1 76 1 95 1 14 1 208 1 303 1 65 1 66 1 295 1 346 1 17 1 359 1 41 1 89 1 70 1 128 1 251 3 203 3 318 3 339 1 253 1 241 1 
191 1 169 1 242 1 76 1 95 1 303 1 346 1 251 3 128 1 203 3 253 1 106 1 333 1 208 1 14 1 65 2 66 1 295 1 17 1 359 1 70 1 89 1 41 1 318 3 339 1 241 1 
191 1 242 4 95 1 303 1 346 4 250 1 347 1 251 5 203 6 253 1 106 1 12 1 153 1 314 1 14 1 208 1 112 1 261 2 356 1 65 7 66 3 17 1 359 5 160 1 361 2 70 1 318 5 319 1 272 2 118 1 169 4 76 1 30 1 128 5 333 1 233 1 36 1 295 1 38 2 185 2 41 1 89 1 339 1 241 1 
191 1 242 2 169 2 76 1 303 1 346 2 347 1 30 1 128 2 251 4 203 4 253 1 106 1 333 1 233 1 12 1 314 1 153 1 13 2 315 1 208 1 14 1 112 1 261 2 65 4 66 2 295 1 38 2 17 1 359 1 185 2 361 2 89 1 70 1 41 1 318 4 272 2 319 1 339 1 241 1 
191 1 242 2 169 2 76 1 303 1 346 2 250 1 347 1 30 1 128 1 251 4 203 4 253 1 106 1 233 1 333 1 12 1 314 1 153 1 208 1 14 1 112 1 261 2 356 1 65 4 66 2 295 1 38 2 17 1 359 1 185 2 361 2 70 1 89 1 41 1 318 4 272 2 319 1 339 1 118 1 241 1 
191 1 242 2 169 2 76 1 303 1 346 2 250 1 347 1 30 1 128 1 251 4 203 4 253 1 106 1 233 1 333 1 12 1 314 1 153 1 208 1 14 1 112 1 261 2 356 1 65 4 66 2 295 1 38 2 17 1 359 1 185 2 361 2 70 1 89 1 41 1 318 4 272 2 319 1 339 1 118 1 241 1 
191 1 242 2 169 2 76 1 303 1 52 1 346 2 200 1 201 1 347 1 30 1 128 1 251 4 203 4 253 1 106 1 233 1 333 1 12 1 153 1 314 1 207 2 13 2 208 1 14 1 356 1 65 4 66 2 295 1 15 2 17 1 359 1 185 2 361 2 70 1 89 1 41 1 318 4 319 1 339 1 241 1 
191 1 169 3 242 3 76 1 303 1 346 3 250 1 347 1 30 1 128 1 251 4 203 5 253 1 106 1 233 1 333 1 12 1 314 1 153 1 208 1 14 1 112 1 261 2 356 1 65 5 66 2 295 1 38 2 17 1 359 1 185 2 361 2 160 1 70 1 89 1 41 1 318 4 272 2 319 1 339 1 118 1 241 1 
191 1 169 3 242 3 76 1 303 1 346 3 250 1 347 1 30 1 128 1 251 4 203 5 253 1 106 1 233 1 333 1 12 1 314 1 153 1 208 1 14 1 112 1 261 2 356 1 65 5 66 2 295 1 38 2 17 1 359 1 185 2 361 2 160 1 70 1 89 1 41 1 318 4 272 2 319 1 339 1 118 1 241 1 
191 1 242 2 169 2 76 1 303 1 346 2 347 1 201 1 30 1 128 1 251 4 203 4 253 1 106 1 333 1 233 1 12 1 153 1 314 1 207 2 13 2 315 1 208 1 14 1 65 4 66 2 295 1 15 2 17 1 359 1 185 2 361 2 89 1 70 1 41 1 318 4 319 1 339 1 241 1 
199 1 108 1 353 1 171 1 54 2 26 1 127 1 87 1 102 1 64 1 320 1 
20 1 189 3 276 1 341 1 25 4 342 11 26 1 322 11 343 1 29 1 249 1 172 1 54 4 31 3 102 2 56 8 329 1 10 2 234 1 108 2 353 2 134 1 293 2 87 2 180 1 210 14 213 1 139 1 363 1 298 2 44 6 73 2 320 2 
90 1 340 1 368 1 25 1 26 1 283 1 303 2 344 1 147 1 249 1 54 2 149 1 176 1 102 1 150 1 56 1 151 1 81 1 353 1 108 1 354 1 134 1 178 1 86 1 87 1 156 1 210 2 181 1 213 1 139 1 115 1 297 1 70 2 89 1 117 1 44 1 167 1 320 1 
90 1 190 1 243 1 342 7 303 3 344 2 198 1 147 1 249 2 54 6 149 1 102 3 150 2 56 10 310 1 151 3 104 1 10 3 313 2 108 3 353 3 354 2 260 1 156 2 210 20 64 1 214 1 213 1 115 3 217 2 70 3 117 2 320 3 167 2 73 8 20 4 25 7 26 3 322 7 283 2 29 2 375 2 171 1 230 2 81 1 234 4 134 1 293 2 87 3 86 2 180 3 136 1 181 1 139 1 297 3 89 1 298 2 44 10 188 2 
90 2 367 1 144 1 279 1 26 2 303 1 283 2 344 3 199 1 147 1 148 1 54 4 8 1 149 1 325 1 102 2 56 1 151 7 330 1 177 1 108 2 353 2 354 2 35 2 87 2 156 2 210 2 136 1 181 1 213 1 139 1 115 8 297 8 70 1 89 1 142 1 44 1 220 1 320 2 
20 1 278 1 94 1 25 1 342 1 26 1 322 1 303 1 147 1 29 1 54 2 102 1 56 1 130 1 10 1 108 1 353 1 134 1 293 1 87 1 180 1 210 3 181 1 89 1 70 1 298 1 44 2 73 1 320 1 
10 1 234 1 353 1 108 1 25 1 342 1 26 1 322 1 87 1 210 2 199 1 54 2 102 1 298 1 351 1 56 2 73 1 320 1 
20 1 353 1 108 1 25 1 342 1 26 1 322 1 87 1 180 1 210 2 199 1 29 1 228 1 54 2 102 1 44 2 73 1 320 1 
20 1 25 2 342 2 26 1 322 2 199 1 29 1 54 2 102 1 56 2 10 1 108 1 353 1 234 1 293 1 87 1 180 1 210 4 298 1 44 2 320 1 73 2 
10 1 234 1 353 1 108 1 25 1 342 1 26 1 322 1 87 1 210 2 54 2 102 1 298 1 220 1 351 1 56 2 73 1 320 1 
20 1 353 1 108 1 25 1 342 1 26 1 322 1 87 1 180 1 210 2 29 1 228 1 54 2 102 1 44 2 220 1 73 1 320 1 
20 1 25 2 342 2 26 1 322 2 29 1 54 2 102 1 56 2 10 1 108 1 353 1 234 1 293 1 87 1 180 1 210 4 298 1 44 2 220 1 320 1 73 2 
20 1 10 1 234 1 353 1 108 1 25 2 342 2 26 1 322 2 293 1 87 1 180 1 210 4 29 1 54 2 102 1 298 1 44 2 56 2 73 2 320 1 
90 1 26 1 283 1 303 1 344 1 249 1 54 2 102 1 150 1 56 1 151 1 353 1 108 1 354 1 86 1 87 1 156 1 210 2 213 1 139 1 115 1 297 1 70 1 117 1 44 1 188 1 167 1 320 1 
90 1 108 1 353 1 354 1 26 1 87 1 303 1 335 1 49 1 283 1 156 1 210 2 344 1 213 1 139 1 249 1 115 1 286 1 54 2 297 1 70 1 102 1 44 1 150 1 56 1 320 1 151 1 167 1 
20 1 25 2 342 2 26 1 322 2 29 1 54 2 102 1 56 2 10 1 108 1 353 1 234 1 134 1 293 1 87 1 180 1 210 4 298 1 44 2 320 1 73 2 
20 1 367 1 25 2 342 2 26 1 322 2 283 1 303 1 344 1 29 1 54 2 230 1 102 1 150 1 56 2 151 1 10 1 234 1 353 1 108 1 354 1 293 1 86 1 87 1 156 1 180 1 210 4 115 1 297 1 70 1 298 1 117 1 44 2 188 1 73 2 167 1 320 1 
278 1 25 1 342 1 26 1 322 1 303 1 147 1 29 1 54 2 102 1 56 2 130 1 10 1 234 1 108 1 353 1 134 1 293 1 87 1 180 1 210 3 181 1 16 1 89 1 70 1 298 1 44 1 73 1 320 1 
20 4 46 1 189 3 276 1 23 1 341 3 243 1 96 1 123 1 6 1 29 4 171 1 54 6 173 1 31 4 289 1 102 3 56 20 104 1 105 1 254 2 10 5 108 3 234 4 257 4 293 4 260 1 87 3 180 5 210 41 212 1 64 1 214 1 183 1 266 1 338 1 40 1 71 1 298 4 44 21 165 1 320 3 73 8 
20 4 46 1 189 3 276 1 23 1 341 3 243 1 96 1 123 2 6 1 29 3 171 1 54 8 173 1 31 4 289 1 102 4 56 20 104 1 105 1 254 2 10 5 108 4 234 3 257 4 293 4 260 1 87 4 180 4 210 38 212 1 64 1 214 1 183 1 266 1 338 1 40 1 71 1 298 4 44 18 165 1 320 4 73 7 
20 7 46 1 189 4 276 2 23 1 341 2 243 1 96 1 123 1 6 1 29 7 171 1 172 2 54 4 173 1 31 4 289 1 102 2 56 27 104 1 105 1 254 1 10 8 108 2 234 7 257 4 293 7 260 1 87 2 180 8 210 52 64 1 214 1 183 1 266 1 338 1 40 1 71 1 298 7 44 25 320 2 73 14 
20 3 189 1 276 1 23 1 341 1 6 1 29 3 54 4 348 1 173 1 31 2 102 2 56 9 254 1 10 3 108 2 234 3 257 2 293 3 87 2 180 3 210 19 212 1 338 1 266 2 71 1 298 3 44 10 320 2 73 6 
20 2 46 1 189 2 23 2 341 2 96 1 123 2 6 1 29 2 54 6 173 1 31 2 289 1 102 3 56 14 254 2 105 1 10 3 234 2 108 3 257 4 293 3 87 3 180 2 210 26 183 1 266 1 338 1 40 1 71 1 298 3 44 12 73 4 320 3 
248 1 380 1 107 1 158 1 215 1 83 1 152 1 126 1 379 1 4 1 
216 1 2 1 
157 1 248 1 256 1 83 1 152 1 126 1 379 1 300 1 4 1 
332 1 116 1 
88 1 316 1 221 1 
107 1 83 1 152 1 193 1 259 1 379 1 304 1 4 1 336 2 67 1 182 1 248 1 380 1 158 1 126 1 128 1 251 1 318 1 
107 1 83 1 152 1 193 1 259 1 379 1 304 1 4 1 336 2 67 1 182 1 248 1 380 1 158 1 126 1 128 1 251 1 318 1 
107 1 83 1 152 1 193 1 259 1 379 1 304 1 4 1 336 2 67 1 182 1 248 1 380 1 158 1 126 1 128 1 251 1 318 1 
332 1 116 1 221 1 
332 1 116 1 221 1 
88 1 316 1 
88 1 316 1 221 1 
244 1 290 1 
145 1 244 1 2 1 303 2 170 1 4 1 147 2 248 1 249 1 77 1 126 1 251 1 290 1 205 1 83 1 152 1 259 1 379 1 336 1 67 1 181 2 216 1 70 2 89 2 186 1 318 1 275 1 
144 1 22 1 279 1 26 1 283 1 303 2 344 1 247 1 54 2 287 1 102 1 56 1 151 2 59 1 353 1 108 1 354 1 134 1 35 2 87 1 156 1 210 2 213 1 139 1 115 2 297 2 70 2 89 2 273 1 44 1 320 1 
58 2 367 1 93 1 109 1 258 1 110 1 156 1 283 1 197 1 136 1 51 1 137 1 358 1 115 2 297 2 19 1 274 1 151 2 166 1 
58 2 93 1 109 1 258 1 146 1 283 1 156 1 197 1 136 1 51 1 137 1 358 1 115 1 297 1 274 1 151 1 166 1 
90 1 354 1 110 1 282 1 156 1 283 1 344 1 51 1 115 1 337 1 297 1 8 1 142 1 151 1 
58 2 93 1 109 1 258 1 110 1 156 1 283 1 197 1 136 1 51 1 137 1 358 1 115 1 297 1 19 1 274 1 151 1 166 1 
154 1 
9 1 155 1 127 1 
233 1 153 1 314 1 13 1 112 1 261 1 65 1 66 1 38 1 359 1 347 1 30 1 251 1 128 2 318 1 272 1 319 1 
90 1 192 2 47 6 50 1 97 1 344 10 347 4 308 1 9 1 251 5 350 1 150 3 151 3 10 2 313 2 11 1 153 9 314 8 354 3 13 12 155 1 156 4 261 6 211 6 65 5 66 3 159 1 115 3 359 2 267 2 317 1 318 5 319 4 367 1 168 2 277 2 223 2 121 2 283 3 373 2 29 2 79 2 30 4 175 3 128 8 132 2 233 4 334 2 293 2 180 2 295 2 239 2 297 3 298 2 
46 1 189 1 341 1 47 5 96 1 373 2 29 2 347 2 30 2 251 1 31 1 128 5 350 1 289 1 231 1 105 1 10 2 233 2 153 8 314 5 13 6 293 2 261 3 180 2 211 5 65 1 66 1 239 1 18 1 359 2 267 1 40 1 318 1 319 2 298 2 
303 1 373 2 147 1 250 1 53 1 347 1 30 1 55 1 251 1 130 1 104 1 10 2 82 1 233 1 314 2 153 2 14 1 260 1 180 1 214 1 181 1 267 1 219 1 70 1 89 1 362 1 318 1 319 1 
233 1 314 1 153 1 155 1 359 1 347 1 30 1 9 1 128 1 319 1 
10 2 313 1 314 5 153 5 47 5 13 10 293 2 261 5 180 2 211 5 373 2 29 2 267 1 128 5 298 2 
66 1 359 1 128 1 251 1 318 1 65 1 
90 2 222 1 281 1 283 1 97 2 344 1 347 2 8 1 30 1 251 3 350 2 151 4 233 2 153 2 314 2 354 1 156 1 65 4 66 2 239 2 115 4 297 4 317 1 142 1 318 3 162 1 319 2 164 1 119 1 
90 1 26 1 195 1 303 3 283 1 344 1 147 2 249 1 54 2 55 1 102 1 150 1 151 1 130 2 108 1 353 1 354 1 87 1 86 1 156 1 210 1 181 2 139 1 115 1 297 1 70 3 89 2 117 1 44 1 188 1 320 1 167 1 
233 1 314 2 153 1 243 1 47 2 13 4 261 2 211 2 239 1 359 2 347 1 30 1 128 4 350 1 319 1 
152 1 99 1 126 1 
152 1 99 1 126 1 
380 1 152 1 244 1 126 1 225 1 
152 1 99 1 126 1 
206 1 152 1 126 1 
206 1 152 1 126 1 
206 1 152 1 126 1 
152 1 126 1 
248 1 4 1 
20 2 46 1 189 1 341 1 243 1 171 1 54 2 31 1 102 1 56 4 10 1 104 1 108 1 87 1 260 1 180 1 210 8 64 1 214 1 71 1 44 4 320 1 73 2 
20 2 46 1 189 1 276 1 341 1 243 1 372 1 171 1 54 4 31 2 102 2 56 6 104 1 10 2 108 2 234 1 293 1 260 1 87 2 180 1 210 11 64 1 214 1 71 1 298 1 44 5 320 2 73 3 
20 3 46 1 189 1 341 1 243 1 96 1 123 1 372 1 29 2 171 1 54 6 31 1 289 1 102 3 56 9 104 1 105 1 10 3 234 1 108 3 293 2 260 1 87 3 180 3 210 19 64 1 214 1 40 1 71 1 298 2 44 10 320 3 73 4 
20 3 46 1 189 1 341 1 243 1 96 1 123 1 372 1 29 1 171 1 54 6 31 1 289 1 102 3 56 10 104 1 105 1 10 3 234 2 108 3 293 2 260 1 87 3 180 2 210 17 64 1 214 1 40 1 71 1 298 2 44 7 320 3 73 5 
20 2 46 1 189 1 341 1 243 1 171 1 54 2 31 1 102 1 56 4 10 1 104 1 108 1 87 1 260 1 180 1 210 8 64 1 214 1 71 1 44 4 320 1 73 2 
20 1 46 1 189 1 341 1 96 1 29 2 54 2 31 1 289 1 102 1 56 6 105 1 10 2 234 1 108 1 293 2 87 1 180 2 210 12 40 1 71 1 298 2 44 6 320 1 73 2 
20 3 46 1 189 1 341 1 243 1 96 1 123 2 372 1 29 1 171 1 54 8 31 1 289 1 102 4 56 10 104 1 105 1 10 3 234 2 108 4 293 2 260 1 87 4 180 2 210 18 64 1 214 1 40 1 71 1 298 2 44 8 320 4 73 5 
20 3 46 1 189 1 341 1 96 1 123 2 29 2 54 8 31 1 289 1 102 4 56 9 105 1 10 3 234 3 108 4 293 3 87 4 180 2 210 16 212 1 40 1 71 1 298 3 44 7 320 4 73 6 
20 3 104 1 10 1 234 3 260 3 180 1 210 7 64 2 214 3 171 1 44 4 56 3 73 6 
20 3 46 1 189 1 341 1 243 1 96 1 123 2 29 1 171 1 54 8 31 1 289 1 102 4 56 10 104 1 105 1 10 3 234 1 108 4 293 2 260 1 87 4 180 2 210 18 64 1 212 1 214 1 40 1 71 1 298 2 44 8 320 4 73 4 
10 1 104 1 20 2 234 1 108 2 243 1 87 2 260 1 180 1 210 8 123 1 64 1 214 1 171 1 54 4 102 2 44 4 56 4 73 3 320 2 
171 1 127 1 64 1 
20 1 10 1 108 1 234 1 293 1 87 1 180 1 210 4 372 1 29 1 54 2 102 1 298 1 44 2 56 2 73 2 320 1 
20 1 10 1 189 1 276 1 234 1 341 1 293 1 180 1 210 7 29 1 31 2 298 1 44 4 56 3 73 2 
20 5 276 1 189 2 243 1 343 1 123 2 29 2 171 1 172 1 54 4 31 2 102 2 56 11 104 1 10 3 331 1 234 4 108 2 293 2 260 2 87 2 180 3 210 23 64 1 214 2 298 2 44 12 73 9 320 2 
31 1 44 1 210 1 
189 1 210 1 56 1 
10 1 20 2 313 1 108 1 234 1 293 1 87 1 180 1 210 6 372 1 29 1 54 2 102 1 298 1 44 3 56 3 320 1 73 3 
20 1 46 1 189 1 341 1 96 1 29 2 54 2 31 1 289 1 102 1 56 6 105 1 10 2 234 1 108 1 293 2 87 1 180 2 210 12 40 1 71 1 298 2 44 6 320 1 73 2 
104 1 10 1 20 1 234 1 260 1 180 1 210 6 214 1 44 3 56 3 73 2 
20 1 331 1 234 1 108 1 260 1 87 1 210 3 123 1 64 1 214 1 171 1 54 2 102 1 44 2 56 1 73 2 320 1 
20 3 104 1 10 2 108 1 82 1 234 2 87 1 260 2 180 2 210 10 214 2 54 2 71 1 102 1 44 5 56 5 320 1 73 5 
10 1 108 1 234 1 87 1 210 2 54 2 71 1 102 1 298 1 56 2 320 1 73 1 
20 1 10 1 108 1 234 1 293 1 87 1 180 1 210 4 29 1 54 2 71 1 102 1 298 1 44 2 56 2 73 2 320 1 
20 1 331 1 108 3 234 1 87 3 260 1 123 1 210 3 212 1 214 1 54 6 71 1 102 3 44 2 56 1 320 3 73 2 
20 7 189 3 276 1 341 1 243 1 123 2 372 1 29 3 171 1 54 10 349 1 31 4 102 5 56 16 104 2 10 5 331 1 108 5 234 5 293 3 260 3 87 5 180 5 210 34 64 1 212 1 214 3 69 1 268 1 71 1 298 3 44 18 320 5 73 12 
249 1 70 1 89 1 208 1 143 1 303 1 381 1 
352 1 92 1 369 1 208 1 303 1 28 1 249 1 68 1 89 1 70 1 143 1 381 1 
90 1 115 1 297 1 127 1 142 1 151 1 
90 1 354 1 156 1 303 2 283 1 344 1 147 1 181 1 249 1 115 1 297 1 149 1 89 1 70 2 117 1 150 1 167 1 151 1 
191 1 354 2 334 1 14 1 121 1 156 1 303 2 283 1 344 3 97 1 147 1 181 2 249 1 115 1 297 1 149 1 41 1 89 2 70 2 117 1 150 2 167 1 151 1 
191 1 121 1 283 1 303 2 97 1 344 3 147 1 249 1 286 1 149 1 309 1 150 2 151 2 354 2 334 1 14 1 156 1 181 2 115 2 297 2 70 2 89 2 41 1 167 1 
90 1 223 1 121 1 283 1 344 4 97 1 175 1 251 2 288 1 128 1 309 1 150 1 151 3 133 1 354 1 334 1 156 1 65 1 295 1 115 3 359 1 297 3 318 2 
90 1 168 1 223 1 354 1 334 1 121 1 156 1 283 1 97 1 344 4 65 1 295 1 115 3 359 1 297 3 128 1 251 2 175 1 309 1 318 2 150 1 151 3 
177 1 115 1 297 1 156 1 283 1 151 1 
90 2 330 1 367 1 177 1 144 1 255 1 354 2 355 1 35 1 283 2 156 3 344 3 136 1 148 1 115 7 296 1 297 7 308 1 325 1 150 1 151 6 
20 2 367 1 25 1 342 1 243 1 26 2 322 1 283 1 303 2 344 1 147 1 249 2 171 1 54 4 287 1 149 1 230 1 102 2 150 1 56 3 151 1 10 1 104 1 353 2 108 2 354 1 134 1 260 1 87 2 86 1 156 1 180 1 210 6 64 1 214 1 181 1 115 1 217 1 297 1 70 2 89 1 117 1 44 3 188 1 73 2 167 1 320 2 
90 1 145 1 168 1 223 1 192 1 344 2 347 2 79 1 9 1 30 2 128 1 251 3 175 1 151 1 132 1 233 2 153 1 314 1 155 1 65 2 66 1 295 1 115 1 359 1 297 1 317 1 318 3 319 2 
367 1 177 1 11 1 223 1 354 1 283 1 156 2 344 2 115 2 297 2 308 1 150 1 151 2 
90 1 367 1 354 1 156 1 283 1 344 1 115 4 297 4 8 1 270 1 142 1 309 1 151 4 
21 1 255 1 354 1 355 1 283 1 156 2 63 1 97 1 344 1 115 2 297 2 150 1 310 1 151 2 
90 1 58 1 93 1 115 1 258 1 297 1 156 1 283 1 274 1 151 1 
367 1 144 1 354 1 283 1 156 1 344 1 136 1 115 2 297 2 273 1 151 2 
90 1 367 1 330 1 144 1 354 2 283 2 156 2 97 1 344 3 148 1 115 5 8 1 297 5 270 1 142 1 151 4 
90 1 367 1 330 1 144 1 354 2 283 2 156 2 113 1 97 1 344 3 115 5 8 1 297 5 270 1 142 1 151 4 
90 1 354 1 156 1 303 2 283 1 344 1 147 1 181 1 249 1 115 1 286 1 297 1 149 1 89 1 70 2 150 1 167 1 151 1 
255 1 354 1 355 1 283 1 156 2 97 1 344 1 115 1 296 1 297 1 308 1 150 1 151 1 
249 1 263 1 306 1 48 1 27 1 
145 1 1 1 191 1 14 1 48 2 27 2 295 1 249 1 263 1 306 2 359 1 41 1 269 1 128 1 251 2 252 1 318 2 129 1 339 1 
59 1 22 1 48 1 303 1 27 1 247 1 263 1 89 1 70 1 
263 1 1 1 252 1 
127 1 32 1 72 1 
227 1 75 1 101 1 32 1 291 1 135 1 72 1 
235 1 321 1 291 1 
305 1 357 1 227 1 307 1 75 1 62 1 101 1 32 1 238 2 291 3 135 3 72 1 
227 1 360 1 75 1 101 1 32 1 291 2 103 1 135 2 72 1 
58 1 93 1 75 1 135 1 197 1 305 1 124 1 227 1 125 1 101 1 291 1 
305 1 227 1 75 1 101 1 291 1 135 1 72 1 
305 1 227 1 75 1 32 1 291 1 135 1 72 2 
305 1 131 1 227 2 75 2 101 1 194 1 299 1 291 2 135 2 72 1 
75 1 377 1 120 1 135 3 305 1 227 1 125 1 101 2 163 1 32 1 291 3 103 2 72 1 
58 2 93 1 109 1 258 1 75 1 135 2 196 1 197 1 305 1 227 1 101 1 32 1 291 2 103 1 72 1 
75 2 378 1 135 4 305 1 227 2 360 1 125 1 101 2 163 1 32 1 291 4 103 2 72 1 
305 1 227 1 75 1 101 1 32 1 291 1 135 1 72 1 
75 1 62 1 238 1 135 4 227 1 307 1 264 1 125 1 101 3 163 1 32 2 291 4 103 2 72 2 
75 1 135 2 305 1 227 1 101 1 202 1 291 2 364 1 32 1 103 1 72 1 365 1 
75 1 62 2 238 2 135 3 305 1 227 1 307 1 101 1 326 1 291 3 32 1 72 1 
184 2 85 1 101 2 294 1 
305 1 138 1 227 1 75 1 291 1 135 1 
305 1 227 1 75 1 120 1 101 1 32 1 291 2 103 1 135 2 72 1 
80 1 
305 1 227 1 75 1 101 1 32 1 291 1 135 1 72 1 
75 1 120 1 238 1 135 3 305 1 227 1 101 1 291 3 32 1 103 1 72 1 
264 1 125 1 101 1 163 1 
101 1 72 1 

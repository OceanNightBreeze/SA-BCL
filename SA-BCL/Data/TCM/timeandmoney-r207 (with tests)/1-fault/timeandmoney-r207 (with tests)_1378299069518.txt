#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
140 2 357 1 21 9 242 5 313 3 63 1 121 2 218 1 342 2 317 1 245 1 66 6 173 1 102 1 296 1 226 2 49 1 177 2 104 1 76 1 205 2 16 1 328 1 280 1 114 9 137 1 383 4 237 2 
140 2 357 1 21 9 242 5 313 3 63 1 121 2 218 1 342 2 317 1 245 1 66 6 173 1 102 1 296 1 226 2 49 1 177 2 104 1 76 1 205 2 16 1 328 1 280 1 114 9 137 1 383 4 237 2 
140 2 357 1 21 10 242 6 313 4 63 1 121 2 218 1 342 2 317 1 245 1 66 7 173 1 102 1 296 1 226 2 49 1 177 2 104 1 76 1 205 2 16 1 328 1 280 1 114 10 137 1 383 5 237 2 
140 2 357 1 21 7 242 4 313 2 63 1 121 2 218 1 342 2 317 1 245 1 66 4 173 1 102 1 296 1 226 2 49 1 177 2 104 1 76 1 205 2 328 1 280 1 114 7 137 1 383 3 237 1 
140 1 357 1 226 1 177 1 21 4 242 3 104 1 313 1 205 1 16 1 63 1 328 1 342 1 66 3 114 4 383 2 237 2 296 1 
140 1 21 2 177 1 242 1 104 1 62 1 205 1 328 1 121 1 218 1 342 1 246 1 114 2 137 1 136 1 296 1 
140 2 49 1 21 3 242 2 104 1 313 1 328 1 121 1 342 2 66 1 114 3 383 1 296 1 
140 2 357 1 21 9 242 5 313 3 63 1 121 1 342 2 317 1 66 7 296 1 226 1 49 1 128 1 177 1 104 1 76 1 205 1 178 1 16 1 328 1 114 9 383 4 237 2 
140 2 357 1 21 9 242 5 313 3 63 1 121 1 342 2 317 1 66 7 296 1 226 1 49 1 128 1 177 1 104 1 76 1 205 1 178 1 16 1 328 1 114 9 383 4 237 2 
298 1 250 1 230 1 
75 1 230 1 48 2 
176 1 187 2 345 2 180 2 264 2 88 1 356 2 20 2 
187 2 214 1 85 2 168 1 340 1 88 1 120 1 5 1 122 1 345 3 47 1 68 1 292 1 101 2 11 1 369 1 274 1 176 1 373 2 232 1 109 2 37 1 131 1 262 1 378 1 331 2 180 2 281 1 264 2 162 1 265 1 184 1 356 3 117 1 118 1 308 1 20 2 
187 1 213 1 345 1 180 1 248 1 264 1 88 1 356 1 266 1 20 1 
187 1 213 1 61 1 0 1 230 1 206 1 23 1 345 1 367 1 250 1 279 1 202 1 356 1 295 1 
187 1 213 1 61 1 0 1 230 1 206 2 23 1 345 1 180 1 250 1 279 1 264 1 202 2 356 1 20 1 
228 1 380 1 206 1 202 1 329 1 
250 1 228 1 230 1 380 1 206 2 202 2 81 1 272 1 
228 1 206 1 202 1 
187 1 213 1 314 1 88 1 206 1 345 1 248 1 180 1 380 1 264 1 202 1 356 1 266 1 20 1 
230 1 
312 1 250 1 228 1 230 1 380 1 206 2 202 2 272 1 
15 1 228 2 230 1 77 1 362 2 206 5 142 1 22 2 364 1 132 1 133 1 250 1 380 2 202 5 335 2 293 1 138 1 272 1 71 1 
176 1 187 3 345 3 74 1 180 3 264 3 356 3 20 1 
187 1 213 1 345 1 180 1 264 1 356 1 266 1 
187 1 213 1 345 1 180 1 145 1 264 1 315 1 356 1 20 1 
187 3 214 1 213 1 61 1 0 1 85 1 168 1 340 1 88 1 120 1 5 1 122 1 23 1 345 4 47 1 145 1 68 1 202 1 101 1 11 1 369 1 274 1 176 1 74 1 256 1 373 1 232 1 206 1 109 2 262 1 131 1 378 1 331 1 180 3 303 1 279 1 281 1 264 3 162 1 356 4 117 1 308 1 139 1 20 2 
176 1 187 2 345 2 180 1 74 1 264 1 267 1 356 2 295 1 
187 3 213 1 74 2 61 1 0 1 256 1 230 1 206 1 23 1 345 3 180 3 145 1 279 1 303 1 264 3 202 1 356 3 163 1 20 1 
84 1 187 2 74 1 2 1 345 2 180 2 145 1 264 2 356 2 20 1 
176 1 85 1 373 1 122 1 131 1 262 1 378 1 345 1 162 1 356 1 101 1 369 1 308 1 117 1 274 1 
176 1 85 1 373 1 122 1 25 1 262 1 378 1 345 1 162 1 58 1 356 1 101 1 308 1 117 1 274 1 
59 1 84 2 214 1 168 1 2 2 340 1 120 2 244 1 269 1 90 1 68 1 290 1 11 1 175 1 232 1 109 2 233 1 38 1 18 2 331 4 211 1 159 1 265 2 165 1 
187 1 188 1 213 1 345 1 180 1 264 1 356 1 23 1 
176 1 298 1 
187 2 176 2 315 1 345 2 180 1 145 1 264 1 356 2 20 1 
84 1 18 1 2 1 
176 1 85 1 373 1 122 1 343 1 131 1 262 1 378 1 345 1 162 1 356 1 101 1 369 1 308 1 117 1 274 1 
187 1 74 1 85 1 373 1 2 1 122 1 262 1 131 1 378 1 345 2 180 1 303 1 264 1 162 1 356 2 101 1 117 1 308 1 369 1 274 1 
187 5 176 1 74 2 267 1 345 5 180 4 145 1 42 1 303 1 264 4 355 1 356 5 295 1 20 1 
188 1 187 2 213 1 345 2 180 2 264 2 356 2 266 1 
50 1 95 1 82 1 
50 1 95 1 82 1 
41 1 50 1 82 1 
41 1 50 1 82 1 
41 1 50 1 82 1 
50 1 82 1 
50 1 82 1 
289 1 354 1 
289 1 354 1 
289 1 354 1 
50 1 95 1 82 1 
60 1 50 1 82 1 
50 2 171 1 289 1 82 2 354 1 24 1 
187 1 213 1 314 1 88 1 318 2 345 1 93 2 248 1 94 1 320 1 202 2 322 1 294 1 50 2 326 1 206 2 302 1 182 1 180 1 113 2 264 1 134 2 82 2 356 1 382 1 266 1 83 2 20 1 
187 2 60 1 123 1 318 1 93 1 345 2 221 1 202 1 69 1 294 1 176 1 72 1 50 1 103 1 106 1 206 1 180 2 54 1 264 2 113 1 134 1 82 1 356 2 83 1 
226 1 177 1 205 1 
177 1 205 1 62 1 
226 2 205 3 62 1 305 1 341 1 91 1 
226 1 200 1 205 2 62 1 305 1 91 1 
226 1 205 2 62 1 305 2 91 1 
362 1 142 3 22 1 244 1 365 1 250 1 48 3 7 1 201 1 202 5 69 1 293 1 224 2 272 1 175 1 254 1 150 1 75 1 103 1 14 1 203 1 228 1 204 2 230 2 206 5 38 1 132 2 54 1 380 4 160 2 335 1 165 1 
360 1 362 2 142 8 22 2 286 1 244 3 124 1 250 1 223 5 48 9 7 1 202 9 252 1 293 1 224 6 272 1 175 3 254 2 75 3 14 3 203 2 15 1 228 6 230 5 375 1 206 9 38 3 329 5 132 6 54 4 380 7 160 6 335 2 165 3 166 1 
362 1 142 3 22 1 244 1 250 1 48 4 201 1 202 3 224 2 254 1 175 1 150 1 75 2 203 1 14 1 15 1 204 1 230 3 206 3 38 1 132 2 54 1 380 2 160 2 335 1 165 1 
362 1 142 5 22 1 286 1 244 2 250 1 48 7 201 1 202 4 252 1 224 4 254 1 175 2 150 1 75 3 203 1 14 2 15 1 204 2 230 4 375 1 206 4 38 2 132 4 54 2 380 3 160 4 335 1 165 2 
122 1 117 1 
372 2 287 1 162 1 122 3 117 1 70 1 
298 1 372 1 122 1 
35 1 122 1 
376 1 
162 1 122 1 117 1 
194 1 122 1 
243 1 339 1 120 3 207 1 216 1 244 1 90 3 65 1 377 2 330 1 331 7 159 2 346 1 265 4 115 1 165 1 174 1 
243 1 339 1 120 3 207 1 216 1 244 1 90 3 65 1 377 2 330 1 331 7 159 2 346 1 265 4 115 1 165 1 174 1 
243 1 339 1 120 3 207 1 216 1 4 1 244 1 90 3 65 1 377 2 330 1 331 7 159 2 346 1 265 4 115 1 165 1 174 1 
214 1 243 2 339 2 168 1 120 15 216 2 244 4 90 10 65 1 222 1 68 1 346 1 148 1 174 1 175 3 14 3 232 1 207 2 108 1 109 2 36 1 260 1 38 3 111 4 330 1 377 3 156 1 331 31 159 5 265 16 115 5 282 1 165 4 19 3 
214 2 243 1 168 2 339 1 120 4 216 1 244 1 90 4 65 1 68 2 346 1 148 1 232 2 207 1 109 4 377 2 330 1 331 9 158 1 159 3 265 5 115 1 336 1 165 1 
140 1 21 2 242 1 85 1 46 1 1 1 62 1 341 1 121 1 342 1 220 1 66 1 147 1 101 1 324 1 296 1 226 1 177 1 104 1 373 1 205 2 328 1 262 1 378 1 210 1 114 2 306 1 236 1 283 1 337 1 
140 1 311 1 21 3 242 1 85 1 1 1 62 1 341 1 121 1 342 1 220 1 66 2 126 1 147 1 101 1 324 1 226 1 177 1 104 1 373 1 205 2 328 1 17 1 262 1 378 1 210 1 114 3 306 1 236 1 283 1 
311 1 21 2 242 1 85 1 1 1 62 1 341 1 121 1 66 2 147 1 101 1 324 1 226 1 177 1 104 1 373 1 205 2 328 1 17 1 262 1 378 1 114 2 306 1 236 1 283 1 
140 1 371 1 351 1 21 1 85 1 373 1 32 1 121 2 122 1 342 1 262 1 378 1 247 1 126 1 114 1 147 2 101 1 29 1 117 1 323 1 283 2 274 1 324 2 
140 1 21 1 85 1 46 1 1 1 62 1 341 1 121 1 342 1 220 1 147 1 101 1 324 1 296 1 226 1 177 1 373 1 205 2 17 1 262 1 378 1 210 1 114 1 306 1 236 1 283 1 
89 1 
338 2 187 1 85 2 0 1 3 1 142 2 344 1 345 1 249 2 250 1 96 1 48 2 202 5 293 1 101 2 8 1 254 1 295 1 351 1 257 2 206 5 258 4 52 1 53 1 154 1 262 1 161 1 356 1 117 1 213 1 61 1 215 2 362 1 268 2 22 1 316 1 122 1 23 1 170 1 367 1 272 3 274 2 75 2 228 6 373 2 230 2 327 2 32 1 33 2 39 1 234 1 378 1 132 2 279 1 335 1 
187 1 213 1 312 1 61 1 0 1 228 2 268 1 206 3 258 2 316 1 23 1 154 1 234 1 345 1 367 1 279 1 96 1 202 3 8 1 356 1 272 1 295 1 
187 1 213 1 312 1 61 1 0 1 228 1 230 1 327 1 206 3 258 3 316 1 23 1 154 1 234 1 345 1 367 1 250 1 279 1 96 1 202 3 8 1 356 1 272 1 295 1 
187 1 213 1 312 1 61 1 0 1 215 1 268 1 316 1 23 1 345 1 367 1 250 1 96 1 202 3 8 1 272 1 295 1 228 2 230 1 327 1 206 3 258 3 154 1 234 1 279 1 356 1 
187 1 338 2 0 1 3 1 142 1 344 1 345 1 249 2 250 5 96 1 98 1 202 5 8 1 293 1 295 1 206 5 257 2 258 6 154 1 55 1 212 1 356 1 213 1 61 1 312 1 215 4 362 1 268 4 22 1 316 1 23 1 367 1 272 3 370 1 225 1 75 2 228 7 230 5 327 4 33 2 234 1 132 1 279 1 335 1 
187 1 338 2 0 1 3 1 142 1 344 1 345 1 249 2 250 1 96 1 48 2 202 4 293 1 8 1 295 1 206 4 257 2 258 4 154 1 161 1 356 1 213 1 61 1 215 2 362 1 268 2 22 1 316 1 23 1 367 1 272 2 75 2 228 4 230 2 327 2 33 2 234 1 132 1 279 1 335 1 
338 2 187 1 213 1 61 1 0 1 215 2 362 1 268 2 3 1 142 1 22 1 316 1 23 1 344 1 345 1 367 1 249 2 250 1 96 1 202 4 8 1 293 1 272 2 295 1 225 1 75 2 228 4 230 1 327 2 33 2 257 2 206 4 258 4 154 1 234 1 132 1 279 1 55 1 212 1 335 1 356 1 
338 2 187 1 213 1 61 1 0 1 215 2 362 1 268 2 3 1 142 1 22 1 316 1 23 1 344 1 345 1 367 1 249 2 250 1 96 1 202 4 8 1 293 1 272 2 295 1 225 1 75 2 228 4 230 1 327 2 33 2 257 2 206 4 258 4 154 1 234 1 132 1 279 1 55 1 212 1 335 1 356 1 
338 2 187 1 213 1 61 1 0 1 215 2 362 1 268 2 3 1 142 1 22 1 363 2 316 1 23 1 345 1 367 1 198 1 250 1 96 1 48 2 321 1 202 4 8 1 293 1 272 2 295 1 228 4 230 1 327 2 257 2 206 4 258 4 153 1 154 1 234 1 132 1 43 2 279 1 55 1 335 1 356 1 
338 2 187 1 213 1 61 1 0 1 215 3 362 1 3 1 268 3 142 1 22 1 316 1 23 1 344 1 345 1 367 1 249 2 250 1 96 1 98 1 202 4 293 1 8 1 272 2 295 1 225 1 75 2 228 5 230 1 327 3 33 2 257 2 206 4 258 5 154 1 234 1 132 1 279 1 55 1 212 1 335 1 356 1 
338 2 187 1 213 1 61 1 0 1 215 3 362 1 3 1 268 3 142 1 22 1 316 1 23 1 344 1 345 1 367 1 249 2 250 1 96 1 98 1 202 4 293 1 8 1 272 2 295 1 225 1 75 2 228 5 230 1 327 3 33 2 257 2 206 4 258 5 154 1 234 1 132 1 279 1 55 1 212 1 335 1 356 1 
338 2 187 1 213 1 61 1 0 1 215 2 362 1 268 2 3 1 142 1 22 1 363 2 316 1 23 1 345 1 367 1 250 1 96 1 48 2 202 4 8 1 293 1 272 2 295 1 228 4 230 1 327 2 257 2 206 4 258 4 153 1 154 1 234 1 132 1 43 2 279 1 161 1 335 1 356 1 
84 1 214 1 2 1 168 1 340 1 232 1 109 2 90 1 233 1 244 1 18 1 331 2 68 1 211 1 265 2 115 1 11 1 175 1 
84 1 214 1 2 1 168 1 340 1 232 1 120 2 109 2 90 1 233 1 269 1 38 1 18 1 331 2 68 1 159 1 11 1 165 1 
84 2 214 1 168 1 2 2 340 1 120 2 244 1 90 2 68 1 11 1 175 1 14 1 232 1 109 2 233 1 38 1 18 2 331 4 159 1 265 2 115 1 165 1 
84 1 214 1 255 1 2 1 168 1 340 1 232 1 109 2 90 1 244 1 18 1 331 2 68 1 211 1 265 2 115 1 11 1 175 1 
84 1 214 1 255 1 2 1 168 1 340 1 232 1 120 2 109 2 90 1 269 1 38 1 18 1 331 2 68 1 159 1 11 1 165 1 
84 2 214 1 168 1 2 2 340 1 120 2 244 1 90 2 68 1 11 1 175 1 14 1 255 1 232 1 109 2 38 1 18 2 331 4 159 1 265 2 115 1 165 1 
84 2 214 1 168 1 2 2 340 1 120 2 244 1 90 2 68 1 11 1 175 1 14 1 232 1 109 2 38 1 18 2 331 4 159 1 265 2 115 1 165 1 
214 1 85 1 168 1 340 1 120 1 5 1 122 1 345 1 47 1 68 1 292 1 101 1 11 1 369 1 274 1 176 1 373 1 232 1 109 2 262 1 131 1 378 1 331 2 162 1 265 1 356 1 117 1 308 1 
214 1 85 1 168 1 340 1 120 1 122 1 25 1 345 1 47 1 68 1 347 1 292 1 101 1 11 1 274 1 176 1 373 1 232 1 109 2 262 1 378 1 331 2 162 1 265 1 58 1 356 1 117 1 308 1 
84 2 214 1 168 1 2 2 340 1 120 2 244 1 90 2 68 1 11 1 175 1 297 1 14 1 232 1 109 2 38 1 18 2 331 4 159 1 265 2 115 1 165 1 
84 2 214 1 85 1 2 2 168 1 340 1 120 2 5 1 90 2 244 1 122 1 345 1 68 1 101 1 11 1 369 1 175 1 12 1 14 1 373 1 232 1 109 2 38 1 262 1 131 1 18 2 378 1 331 4 159 1 162 1 265 2 115 1 356 1 165 1 308 1 117 1 337 1 
187 1 84 1 214 1 168 1 2 1 340 1 120 1 90 1 244 1 345 1 145 1 68 1 11 1 175 1 297 1 14 1 232 1 109 2 38 1 18 1 331 3 209 1 180 1 264 1 265 2 115 1 356 1 165 1 20 1 
84 1 214 1 243 1 2 1 168 1 339 1 340 1 120 3 90 2 244 1 65 1 68 1 346 1 11 1 298 1 176 2 232 1 109 2 233 1 330 1 377 1 18 1 331 6 159 2 265 3 165 1 
84 4 214 2 285 1 168 2 2 11 340 2 141 1 120 6 90 2 244 2 47 1 197 1 68 2 292 1 10 1 11 1 175 2 297 1 176 1 14 2 232 2 108 1 36 1 109 4 38 1 111 3 18 11 331 14 159 1 265 8 115 1 165 1 19 3 
84 1 187 1 214 1 85 1 168 1 340 1 120 1 122 1 343 1 143 1 345 2 47 1 68 1 101 1 292 1 11 1 369 1 274 1 297 1 176 1 74 1 373 1 232 1 109 2 262 1 131 1 378 1 331 2 180 1 332 1 303 1 264 1 162 1 265 1 356 2 307 1 117 1 308 1 
187 1 84 7 45 2 85 3 243 1 339 1 192 1 86 2 2 7 340 3 195 1 5 2 244 3 90 8 345 3 47 1 346 1 100 2 292 1 101 3 11 3 12 2 297 1 14 2 109 6 17 1 262 2 18 7 303 1 264 1 159 4 162 2 265 10 115 4 356 3 165 3 308 2 117 2 214 3 168 3 120 10 122 2 65 1 68 3 369 2 175 2 274 1 176 2 74 1 229 1 373 3 232 3 38 2 131 2 377 1 330 1 378 2 331 20 180 1 
187 1 214 2 85 8 168 2 340 2 120 1 122 3 26 1 345 1 47 1 67 1 68 2 172 1 101 8 292 1 11 2 30 1 274 2 31 1 351 1 74 1 255 1 373 7 32 1 232 2 109 4 233 1 17 1 262 2 378 2 331 2 180 1 278 1 264 1 265 1 184 2 356 1 117 2 337 1 
84 1 187 1 214 1 2 1 168 1 340 1 120 2 90 1 244 1 345 1 145 1 68 1 11 1 175 1 297 1 14 1 232 1 109 2 38 1 18 1 331 3 180 1 264 1 159 1 265 1 356 1 165 1 20 1 119 1 
190 1 243 1 339 1 90 8 244 5 346 1 148 1 14 4 299 1 353 4 108 1 109 6 301 1 111 4 159 4 56 1 265 20 115 4 164 1 165 5 19 3 310 1 214 3 359 2 168 3 120 21 217 1 64 1 65 1 68 3 28 1 368 1 175 4 325 1 232 3 36 3 130 1 38 4 330 1 377 1 331 41 183 1 336 1 
214 4 190 1 243 1 359 2 339 1 168 4 120 18 217 1 64 1 244 5 90 7 65 1 68 4 346 1 28 1 368 1 148 2 175 4 14 4 325 1 299 1 353 4 232 4 108 1 36 3 109 8 301 1 130 1 38 3 111 4 377 1 330 1 331 38 56 1 159 4 183 1 265 20 115 3 164 1 336 1 165 4 310 1 19 3 
214 2 190 1 243 1 285 2 359 1 339 1 168 2 120 25 217 1 64 1 244 8 90 14 65 1 68 2 346 1 28 1 368 1 148 1 175 7 14 7 299 1 353 4 232 2 108 2 36 2 109 4 301 1 130 1 38 7 111 4 377 1 330 1 331 52 56 1 159 7 183 1 265 27 115 7 164 1 336 1 165 8 19 4 
214 2 190 1 359 1 168 2 120 10 219 1 244 3 90 6 68 2 28 1 175 3 14 3 353 2 232 2 108 1 36 1 109 4 301 1 130 2 38 3 111 2 331 19 159 3 183 1 265 9 115 3 336 1 165 3 310 1 19 1 
214 3 190 1 359 2 168 3 120 12 217 1 64 1 90 4 244 3 68 3 28 1 368 1 148 2 175 3 14 3 299 1 353 4 232 3 109 6 36 2 301 1 130 1 38 2 111 2 331 26 159 2 56 1 183 2 265 14 115 2 164 1 336 1 165 2 19 2 
187 1 213 1 314 1 88 1 318 1 345 1 93 1 248 1 94 1 320 1 202 1 322 1 294 1 50 1 326 1 206 1 302 1 182 1 180 1 113 1 264 1 134 2 82 1 356 1 382 1 266 1 83 1 20 1 
187 1 213 1 314 1 88 1 318 1 345 1 93 1 248 1 94 1 320 1 202 1 322 1 294 1 50 1 326 1 206 1 302 1 182 1 180 1 113 1 264 1 134 2 82 1 356 1 382 1 266 1 83 1 20 1 
187 1 213 1 314 1 88 1 318 1 345 1 93 1 248 1 94 1 320 1 202 1 322 1 294 1 50 1 326 1 206 1 302 1 182 1 180 1 113 1 264 1 134 2 82 1 356 1 382 1 266 1 83 1 20 1 
171 1 95 1 300 1 
171 1 95 1 300 1 
41 1 149 1 
41 1 171 1 149 1 
72 1 123 1 
187 2 189 1 60 1 123 1 318 1 345 2 93 1 221 1 94 1 202 1 69 1 176 1 72 1 50 1 103 1 106 1 206 1 180 2 54 1 380 1 113 1 264 2 134 1 82 1 356 2 382 1 83 1 
93 1 50 1 151 1 113 1 82 1 24 1 366 1 83 1 238 1 318 1 
60 1 221 1 
284 1 92 1 93 1 379 1 50 1 113 1 82 1 83 1 318 1 
95 1 300 1 
41 1 171 1 149 1 
187 2 214 1 85 2 168 1 340 1 120 1 122 1 345 2 47 1 68 1 99 1 101 2 292 1 11 1 297 1 31 1 373 2 232 1 109 2 277 1 262 1 378 1 331 2 40 1 278 1 112 1 265 1 184 2 356 2 117 1 309 1 
226 1 177 1 85 2 373 2 87 1 1 1 205 2 62 1 341 1 17 1 220 1 262 1 378 1 144 1 147 1 101 2 116 1 236 1 337 1 
226 1 177 1 85 1 373 1 87 1 1 1 205 2 62 1 341 1 17 1 220 1 262 1 378 1 147 1 101 1 185 1 236 1 
351 1 85 1 373 1 32 1 122 1 262 1 378 1 147 1 101 1 116 1 117 1 323 1 274 1 13 1 
226 1 177 1 85 1 373 1 87 1 1 1 205 2 62 1 341 1 17 1 220 1 262 1 144 1 378 1 147 1 101 1 116 1 236 1 
235 1 
298 1 132 1 133 1 250 1 230 1 142 1 71 1 
362 1 142 1 22 1 344 1 249 1 250 1 48 1 202 1 293 1 272 1 75 1 228 1 230 2 33 1 206 1 132 1 335 1 
45 2 85 3 191 2 194 2 142 9 244 2 6 1 250 2 48 12 202 5 293 4 101 3 253 2 254 2 14 2 152 1 206 5 53 1 110 2 261 1 263 2 262 4 208 2 160 6 162 3 57 2 165 2 117 3 362 4 22 4 122 10 125 2 272 3 224 6 273 2 70 1 175 2 71 1 274 1 372 2 75 6 373 3 228 5 231 1 230 8 35 3 38 2 378 3 132 8 133 1 279 2 335 4 44 1 337 1 
362 2 142 8 22 2 217 1 64 1 244 2 250 2 251 1 48 6 368 1 202 1 293 2 272 1 224 5 253 1 254 1 175 2 75 3 14 2 228 1 230 5 299 1 206 1 36 1 129 1 53 1 38 2 111 1 208 2 132 5 160 5 56 1 335 2 165 2 19 1 
187 1 213 1 243 1 339 1 314 1 362 1 88 1 142 2 22 1 244 2 65 1 345 1 248 1 202 1 293 1 253 1 206 1 208 2 157 1 132 2 180 1 264 1 212 1 335 1 356 1 165 1 266 1 20 1 
230 1 362 1 142 1 22 1 132 1 133 1 250 1 335 1 293 1 71 1 
208 2 45 1 75 5 132 5 14 2 230 5 48 10 160 5 142 5 165 2 224 5 244 2 253 1 38 2 175 2 
250 1 228 1 230 1 206 1 202 1 272 1 
85 4 362 2 142 2 22 2 122 1 6 2 348 1 202 3 293 1 101 4 272 2 254 2 274 2 351 1 15 1 373 4 228 4 105 1 32 1 206 3 52 1 53 2 262 1 39 1 378 1 132 2 335 2 44 1 117 1 
187 2 214 1 85 1 168 1 88 1 340 1 120 1 5 1 122 1 345 3 47 1 68 1 101 1 11 1 369 1 274 1 176 1 373 1 232 1 109 2 131 1 262 1 378 1 331 1 180 2 281 1 264 2 162 1 356 3 308 1 117 1 20 2 
75 2 230 4 362 1 142 1 22 1 53 1 377 1 132 2 250 2 160 2 48 4 335 1 293 1 224 2 254 1 
113 1 193 1 318 1 
113 1 193 1 318 1 
276 1 113 1 318 1 
276 1 113 1 318 1 
276 1 113 1 318 1 
113 1 318 1 
50 1 82 1 
113 1 193 1 318 1 
73 1 151 1 113 1 123 1 318 1 
214 1 243 1 168 1 339 1 120 4 244 1 90 2 65 1 68 1 346 1 232 1 36 1 109 2 111 1 377 1 330 1 331 8 56 1 159 2 265 4 336 1 165 1 19 1 
214 2 243 1 339 1 168 2 120 5 244 2 90 3 65 1 68 2 346 1 175 1 14 1 232 2 108 1 36 1 109 4 111 2 377 1 330 1 331 11 80 1 159 2 56 1 265 6 115 1 336 1 165 1 19 1 
214 3 243 1 339 1 168 3 120 10 217 1 64 1 244 3 90 4 65 1 68 3 346 1 368 1 148 1 175 2 14 2 299 1 232 3 36 1 109 6 38 2 111 1 377 1 330 1 331 19 80 1 56 1 159 3 265 9 115 1 336 1 165 3 19 1 
214 3 243 1 339 1 168 3 120 7 217 1 64 1 244 3 90 5 65 1 68 3 346 1 368 1 148 1 175 2 14 2 299 1 232 3 36 1 109 6 38 1 111 1 377 1 330 1 331 17 80 1 56 1 159 3 265 10 115 2 336 1 165 2 19 1 
214 1 243 1 168 1 339 1 120 4 244 1 90 2 65 1 68 1 346 1 232 1 36 1 109 2 111 1 377 1 330 1 331 8 56 1 159 2 265 4 336 1 165 1 19 1 
214 1 168 1 120 6 217 1 64 1 244 2 90 2 68 1 368 1 175 2 14 2 299 1 232 1 36 1 109 2 38 2 111 1 331 12 56 1 159 1 265 6 115 1 336 1 165 2 19 1 
214 4 243 1 339 1 168 4 120 8 217 1 64 1 244 3 90 5 65 1 68 4 346 1 368 1 148 2 175 2 14 2 299 1 232 4 36 1 109 8 38 1 111 1 377 1 330 1 331 18 80 1 56 1 159 3 265 10 115 2 336 1 165 2 19 1 
214 4 168 4 120 7 217 1 64 1 244 3 90 6 68 4 368 1 148 2 175 3 14 3 299 1 232 4 36 1 109 8 38 2 111 1 331 16 56 1 159 3 265 9 115 3 336 1 165 2 310 1 19 1 
243 3 339 3 120 4 90 6 244 1 65 1 330 1 331 7 346 2 159 3 265 3 115 3 165 1 
214 4 243 1 339 1 168 4 120 8 217 1 64 1 244 3 90 4 65 1 68 4 346 1 368 1 148 2 175 2 14 2 299 1 232 4 36 1 109 8 38 1 111 1 377 1 330 1 331 18 56 1 159 3 265 10 115 1 336 1 165 2 310 1 19 1 
214 2 243 1 168 2 339 1 232 2 120 4 109 4 244 1 90 3 65 1 377 1 330 1 331 8 68 2 159 2 346 1 265 4 115 1 165 1 148 1 
298 1 243 1 339 1 120 3 90 2 244 1 65 1 377 1 330 1 331 6 346 1 159 2 265 3 165 1 
214 1 14 1 168 1 232 1 120 2 109 2 90 2 244 1 38 1 331 4 80 1 68 1 159 1 265 2 115 1 165 1 175 1 
14 1 120 4 108 1 36 1 244 1 90 2 38 1 111 2 331 7 159 1 265 3 115 1 165 1 19 1 175 1 
214 2 358 1 243 2 285 1 339 2 168 2 120 12 90 9 244 3 65 1 68 2 346 1 10 1 148 2 175 2 14 2 232 2 108 1 109 4 38 2 111 2 377 1 330 1 331 23 159 5 265 11 115 4 165 3 19 2 
331 1 120 1 111 1 
331 1 265 1 19 1 
214 1 45 1 14 1 168 1 232 1 120 3 109 2 244 1 90 3 38 1 331 6 80 1 68 1 159 2 265 3 115 1 165 1 175 1 
214 1 168 1 120 6 217 1 64 1 244 2 90 2 68 1 368 1 175 2 14 2 299 1 232 1 36 1 109 2 38 2 111 1 331 12 56 1 159 1 265 6 115 1 336 1 165 2 19 1 
243 1 339 1 120 3 244 1 90 2 65 1 331 6 159 1 265 3 115 1 165 1 
214 1 358 1 243 1 339 1 168 1 232 1 120 2 109 2 90 2 330 1 331 3 68 1 159 1 346 1 265 1 115 1 148 1 
214 1 243 2 168 1 339 2 232 1 120 5 109 2 90 5 244 2 65 1 157 1 331 10 68 1 159 3 265 5 115 2 336 1 165 2 
214 1 168 1 232 1 109 2 244 1 90 1 331 2 68 1 265 2 115 1 336 1 175 1 
214 1 14 1 168 1 232 1 120 2 109 2 90 2 244 1 38 1 331 4 68 1 159 1 265 2 115 1 336 1 165 1 175 1 
214 3 358 1 243 1 168 3 339 1 232 3 120 2 109 6 90 2 331 3 68 3 159 1 265 1 115 1 336 1 148 1 310 1 
214 5 358 1 243 3 339 3 168 5 120 18 244 5 90 12 65 2 68 5 346 1 148 2 175 3 14 3 232 5 108 1 36 1 109 10 260 1 38 3 111 4 377 1 330 1 156 1 331 34 80 1 159 7 265 16 115 5 282 1 336 1 165 5 310 1 19 3 
176 1 187 1 345 1 181 1 267 1 356 1 295 1 
176 1 239 1 187 1 267 1 196 1 345 1 181 1 288 1 146 1 291 1 356 1 295 1 
378 1 298 1 351 1 85 1 373 1 32 1 101 1 122 1 117 1 262 1 274 1 
176 1 187 1 74 1 85 1 373 1 122 1 262 1 378 1 345 2 180 1 264 1 162 1 356 2 101 1 117 1 308 1 369 1 274 1 
187 2 213 1 85 1 0 1 194 1 122 3 23 1 6 1 345 2 101 1 369 1 273 1 176 1 74 1 373 1 262 1 378 1 180 2 264 1 162 2 356 2 308 1 117 2 
187 2 213 1 85 2 0 1 194 1 122 3 23 1 6 1 345 2 101 2 273 1 176 1 74 1 373 2 155 1 262 1 378 1 180 2 264 1 162 2 58 1 356 2 308 1 117 2 
372 1 85 3 373 3 228 1 230 1 194 1 206 2 35 1 122 4 155 1 262 1 6 1 378 1 250 1 279 1 162 1 97 1 202 2 101 3 117 1 273 1 186 1 274 1 
372 1 85 3 373 3 228 1 230 1 194 1 206 2 35 1 122 4 155 1 262 1 6 1 378 1 250 1 279 1 162 1 57 1 202 2 101 3 117 1 273 1 274 1 
378 1 85 1 373 1 67 1 101 1 262 1 
240 1 85 7 373 6 122 3 259 1 17 1 262 3 26 1 378 2 278 1 319 1 67 1 162 1 172 1 184 1 101 7 117 2 70 1 337 1 30 1 274 2 
84 1 187 1 85 1 243 1 339 1 2 1 340 2 5 1 90 2 244 1 345 2 346 1 100 1 99 1 101 1 11 2 12 1 297 1 109 4 262 1 18 1 264 1 159 2 162 1 265 3 356 2 165 1 308 1 117 1 214 2 168 2 120 3 122 1 65 1 68 2 369 1 176 2 74 1 373 1 232 2 131 1 378 1 330 1 377 1 331 6 180 1 337 1 
85 1 191 1 362 2 142 1 22 2 122 2 250 1 202 3 101 1 293 2 272 1 71 1 274 1 372 1 373 1 228 2 230 1 206 3 35 1 110 1 263 1 132 1 133 1 279 1 380 1 57 1 335 2 44 1 
372 1 85 2 373 2 152 1 122 2 262 2 378 1 67 1 162 1 101 2 117 1 70 1 337 1 
351 1 85 4 373 4 32 1 122 1 155 1 262 1 378 1 271 1 101 4 117 1 274 1 337 1 
85 2 229 1 373 2 352 1 122 1 259 1 6 1 262 2 378 1 319 1 304 1 162 1 101 2 117 1 
378 1 177 1 85 1 373 1 205 1 62 1 101 1 236 1 262 1 274 1 
85 2 373 2 122 1 17 1 277 1 262 1 378 1 278 1 101 2 117 1 337 1 
351 1 85 5 373 4 32 1 122 3 6 1 262 2 378 2 26 1 278 1 271 1 172 1 101 5 117 2 274 1 337 1 
351 1 85 5 373 4 32 1 107 1 122 3 6 1 262 2 378 2 26 1 278 1 271 1 101 5 117 2 274 1 337 1 
176 1 187 1 74 1 85 1 373 1 122 1 262 1 378 1 345 2 180 1 264 1 162 1 58 1 356 2 101 1 117 1 308 1 274 1 
240 1 85 1 373 1 122 1 259 1 6 1 262 2 378 1 319 1 162 1 101 1 117 1 70 1 
187 1 345 1 275 1 40 1 112 1 51 1 350 1 356 1 309 1 
79 1 275 1 241 1 
176 1 275 1 51 1 350 1 169 1 
176 1 213 1 275 1 61 1 0 1 241 1 256 1 230 1 34 1 206 2 51 2 23 1 169 2 79 1 250 1 279 1 380 1 202 2 350 2 
298 1 242 1 104 1 328 1 
140 1 21 1 242 1 104 1 114 1 328 1 342 1 
114 1 121 1 324 1 
140 1 21 3 242 1 104 1 328 1 342 1 179 1 333 1 114 3 334 1 137 2 296 1 
140 1 66 1 21 2 242 1 104 1 114 2 328 1 342 1 237 1 
226 1 140 1 177 1 21 1 242 1 114 1 205 1 63 1 383 1 342 1 296 1 
140 1 21 1 242 1 114 1 328 1 342 1 296 1 
140 1 21 1 104 1 114 1 328 2 342 1 296 1 
140 2 21 2 242 1 361 1 374 1 328 1 342 2 114 2 349 1 296 1 
140 1 21 3 242 2 104 1 76 1 313 1 328 1 342 1 317 1 66 2 114 3 383 1 296 1 
226 1 140 1 66 1 177 1 27 1 21 2 242 1 104 1 114 2 205 2 62 1 341 1 328 1 342 1 296 1 
140 2 21 4 242 2 104 1 313 1 16 1 328 1 342 2 66 2 114 4 383 1 237 1 296 1 
140 1 21 1 242 1 104 1 114 1 328 1 342 1 296 1 
140 1 21 4 242 3 104 2 313 1 328 2 78 1 342 1 179 1 66 2 114 4 334 1 137 1 383 1 
140 1 128 1 21 2 242 1 104 1 328 1 342 1 66 1 127 1 199 1 114 2 296 1 
140 1 21 3 242 1 104 1 114 3 334 2 328 1 137 2 9 1 342 1 179 1 296 1 
167 1 227 1 242 2 270 2 
140 1 21 1 114 1 135 1 342 1 296 1 
140 1 66 1 21 2 242 1 104 1 76 1 114 2 328 1 342 1 296 1 
381 1 
140 1 21 1 242 1 104 1 114 1 328 1 342 1 296 1 
140 1 66 1 21 3 242 1 76 1 104 1 114 3 328 1 137 1 342 1 296 1 
242 1 313 1 78 1 383 1 
242 1 328 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
159 2 305 1 40 3 108 1 310 2 325 1 296 1 197 1 192 1 199 2 128 1 235 1 204 3 
305 4 310 2 340 1 183 2 126 1 197 3 199 5 128 1 314 1 289 1 204 9 159 2 160 1 269 1 40 9 108 1 42 1 325 7 296 1 192 1 298 1 331 1 116 1 235 1 
305 4 310 2 340 1 183 2 126 1 197 3 199 5 128 1 314 1 289 1 204 9 159 2 160 1 269 1 40 9 108 1 42 1 325 7 296 1 192 1 298 1 331 1 116 1 235 1 
305 4 310 2 263 1 340 1 126 1 183 2 197 3 199 5 101 1 346 1 128 1 314 1 84 1 350 1 204 9 159 2 160 2 40 9 108 2 42 2 325 6 137 1 296 1 192 1 298 1 331 2 116 1 235 1 
305 4 310 2 263 1 340 1 126 1 183 2 197 3 199 5 101 1 346 1 128 1 314 1 84 1 350 1 204 9 159 2 160 2 40 9 108 2 42 2 325 6 137 1 296 1 192 1 298 1 331 2 116 1 235 1 
305 5 310 2 263 1 340 1 126 1 183 2 197 4 199 6 101 1 346 1 128 1 314 1 84 1 350 1 204 10 159 2 160 2 40 10 108 2 42 2 325 7 137 1 296 1 192 1 298 1 331 2 116 1 235 1 
305 3 310 2 263 1 340 1 126 1 183 1 197 2 199 4 101 1 346 1 128 1 314 1 84 1 350 1 204 7 159 2 160 2 40 7 108 2 42 2 325 4 137 1 296 1 192 1 298 1 331 2 235 1 
160 1 159 1 305 2 40 4 42 1 310 1 325 3 183 2 126 1 296 1 197 1 192 1 199 3 331 1 314 1 116 1 235 1 204 4 
74 1 159 1 160 1 92 1 40 2 108 1 42 1 310 1 296 1 192 1 199 1 346 1 101 1 235 1 317 1 204 2 
328 1 251 1 217 1 
332 1 172 1 54 1 89 1 39 1 107 1 44 1 257 1 367 1 111 1 186 1 225 1 212 1 259 1 
328 1 
352 1 328 1 251 1 67 1 111 2 107 1 186 2 73 1 
352 1 251 1 132 1 322 1 188 1 147 1 90 2 164 1 107 2 376 2 294 1 328 1 138 1 111 5 221 2 21 1 62 1 186 5 73 2 
328 1 207 1 129 2 
332 2 257 2 140 1 89 1 44 2 212 2 225 2 259 2 
332 3 51 1 53 1 123 1 363 2 218 1 148 1 262 1 149 1 337 1 311 1 338 1 180 1 127 1 60 1 368 1 347 1 8 2 288 1 32 1 225 2 89 1 374 2 254 1 375 1 44 2 257 2 46 2 140 1 258 1 208 1 300 2 358 1 212 2 215 1 170 1 259 3 
332 1 257 1 367 1 172 1 54 1 89 1 44 1 212 1 225 1 259 1 
238 1 332 1 360 1 251 1 87 1 44 1 328 1 367 1 81 1 329 1 111 1 222 1 186 1 259 1 
332 1 360 1 251 1 87 1 44 1 257 1 328 1 367 1 111 2 329 1 222 1 186 2 225 1 212 1 259 1 
111 1 107 1 223 1 186 1 73 1 
352 1 328 1 251 1 111 2 292 1 107 1 186 2 73 1 
111 1 186 1 73 1 
140 1 217 1 
332 2 17 1 44 2 257 1 139 1 140 2 225 1 212 1 259 2 
47 1 130 1 163 1 
332 1 53 1 363 1 254 1 180 1 46 1 140 1 341 1 60 1 368 1 300 1 32 1 288 1 358 1 259 1 170 1 
332 2 53 1 254 1 363 1 44 1 180 1 354 1 257 1 46 1 47 1 60 1 368 1 300 1 288 1 32 1 358 1 212 1 359 1 170 1 259 2 
332 3 257 3 140 1 225 1 44 3 212 3 359 1 259 3 
332 1 257 1 367 1 172 1 44 1 212 1 259 1 
332 1 257 1 367 1 139 1 17 1 44 1 212 1 225 1 259 1 
332 4 51 1 360 1 53 1 123 1 218 1 363 1 148 1 262 1 337 1 180 1 283 1 311 1 367 1 127 1 60 1 222 1 368 1 8 2 288 1 32 1 186 1 225 2 87 1 162 1 89 1 374 1 254 1 375 1 44 3 257 3 354 1 46 1 140 1 139 1 329 1 111 1 300 1 358 1 212 3 359 1 215 1 170 1 259 4 
332 2 257 1 140 1 81 1 26 1 44 2 212 1 359 1 259 2 
332 3 360 1 87 1 88 1 162 1 44 3 354 1 257 3 139 1 328 1 367 1 111 1 329 1 222 1 186 1 225 1 212 3 359 2 259 3 
332 2 257 2 139 1 47 1 163 1 44 2 212 2 225 1 359 1 259 2 
332 1 53 1 363 1 254 1 180 1 46 1 140 1 60 1 368 1 300 1 32 1 288 1 358 1 259 1 170 1 
332 1 53 1 363 1 254 1 18 1 309 1 180 1 46 1 140 1 60 1 300 1 288 1 358 1 259 1 170 1 
51 1 123 2 3 1 178 1 262 1 57 1 337 1 220 1 127 1 153 1 31 1 8 2 63 1 130 2 374 4 163 2 375 1 41 1 19 1 47 2 208 2 299 1 143 1 215 1 
332 1 257 1 367 1 87 1 91 1 44 1 212 1 259 1 
332 5 26 1 44 5 257 4 354 1 139 1 140 1 81 1 343 1 212 4 225 1 304 1 359 2 259 5 
332 2 257 2 367 1 172 1 91 1 44 2 212 2 259 2 
175 1 202 1 370 1 276 1 34 1 
209 1 202 1 34 1 
202 1 34 1 
202 1 34 1 
175 1 
175 1 
175 1 
202 1 256 1 34 1 
202 1 256 1 34 1 
202 1 256 1 34 1 
202 1 371 1 34 1 
202 1 371 1 34 1 
202 1 371 1 34 1 
332 2 79 1 177 1 4 1 82 1 30 1 83 1 202 1 186 1 34 1 104 1 70 1 44 2 43 1 257 2 295 1 140 1 111 1 209 1 355 1 212 2 236 1 214 1 259 2 
373 1 134 1 70 2 79 1 56 1 150 1 4 3 181 1 45 1 328 1 111 2 83 2 355 2 202 2 186 2 72 2 142 1 214 2 34 2 
321 2 330 1 92 1 331 1 42 2 
160 1 331 1 42 1 
160 1 92 1 42 1 
321 1 233 1 330 1 92 1 331 2 42 3 
321 1 330 1 92 1 331 1 280 1 42 2 
146 2 147 1 176 1 282 1 220 1 182 1 153 1 221 1 82 1 30 1 200 1 285 2 62 2 186 5 129 3 35 1 10 1 352 1 251 1 253 1 90 1 273 2 107 4 207 1 43 1 19 1 376 1 294 3 328 2 111 5 143 1 73 1 
146 6 147 1 307 1 176 2 282 3 243 1 220 3 182 1 153 3 82 4 221 2 369 1 62 6 223 5 186 9 318 1 129 9 10 2 352 1 251 1 90 2 273 6 107 7 207 3 19 3 376 2 294 8 327 1 138 1 328 5 111 9 115 1 143 3 73 6 237 5 
146 2 176 1 282 1 220 1 153 1 221 1 82 1 200 1 285 1 186 3 62 2 35 1 10 1 129 4 251 1 90 1 107 2 273 2 207 2 19 1 376 1 294 3 328 3 138 1 111 3 143 1 
146 4 176 1 282 2 243 1 220 2 153 2 221 1 82 2 200 1 285 2 186 4 62 4 129 7 318 1 35 1 10 1 251 1 90 1 273 4 107 3 207 3 19 2 376 1 294 5 327 1 328 4 138 1 111 4 143 2 
217 1 77 1 358 1 
244 1 
358 1 170 1 
362 1 77 2 288 1 358 3 170 1 20 1 
288 1 358 1 170 1 
286 1 358 1 
33 1 358 1 
144 1 306 1 123 3 290 1 374 7 19 1 377 1 242 2 232 1 220 1 152 1 297 1 208 4 299 3 113 1 185 1 63 2 
144 1 306 1 123 3 290 1 374 7 19 1 377 1 242 2 232 1 220 1 152 1 297 1 208 4 299 3 113 1 185 1 63 2 
144 1 306 1 123 3 290 1 374 7 19 1 377 1 195 1 242 2 232 1 220 1 152 1 297 1 208 4 299 3 113 1 185 1 63 2 
144 5 51 1 306 2 123 15 364 1 262 1 282 3 242 3 337 1 220 4 152 2 153 3 245 1 154 3 185 1 8 2 63 5 203 1 13 1 372 1 353 1 290 1 374 31 375 1 19 4 377 1 232 2 141 4 208 16 297 2 113 1 299 10 143 3 120 1 
144 1 51 2 306 1 290 1 123 4 374 9 364 1 375 2 19 1 377 1 262 2 242 2 337 2 232 1 220 1 152 1 297 1 208 5 113 1 299 4 8 4 63 3 49 1 266 1 
193 2 0 1 52 1 53 1 363 1 240 1 78 1 310 1 60 1 345 2 204 1 205 1 102 1 159 1 254 1 40 1 108 2 135 1 46 1 300 1 358 1 303 2 170 1 
193 1 333 1 361 1 363 1 2 1 310 1 241 1 125 1 60 1 345 1 204 1 160 1 159 1 254 1 92 1 40 1 108 1 69 1 42 2 46 1 233 1 331 1 300 1 235 1 303 1 302 1 
193 1 361 1 363 1 2 1 310 1 241 1 125 1 60 1 199 1 345 1 204 2 160 1 159 1 254 1 92 1 40 2 108 1 69 1 42 2 325 1 189 1 46 1 233 1 296 1 192 1 331 1 300 1 235 1 303 1 302 1 
193 1 333 1 361 1 363 1 2 1 310 1 241 1 125 1 60 1 199 1 345 1 204 3 158 1 160 1 159 1 254 1 92 1 40 3 108 1 42 2 135 1 325 2 46 1 233 1 296 1 192 1 331 1 300 1 303 1 302 1 
193 1 333 1 361 1 363 1 125 1 60 1 199 1 345 1 204 2 158 1 160 1 254 1 92 1 40 2 108 1 42 2 325 2 46 1 233 1 296 1 192 1 300 1 331 1 303 1 302 1 
156 1 
238 1 332 1 239 1 277 1 147 1 100 1 59 1 342 3 62 1 247 1 157 2 64 5 12 2 352 2 251 1 291 3 16 1 207 2 294 1 111 4 73 5 23 1 24 3 259 1 360 1 308 1 312 2 367 1 81 1 222 1 221 1 186 4 187 1 226 1 85 2 319 1 87 1 90 1 44 1 376 1 328 1 329 1 
332 1 238 1 239 1 360 1 277 1 147 1 308 1 312 2 100 1 367 1 59 1 81 1 221 1 222 1 342 3 62 1 186 4 187 1 226 1 247 1 85 2 157 2 319 1 12 2 64 5 352 2 251 1 87 1 90 1 16 1 291 3 207 2 376 1 44 1 294 1 328 1 111 4 329 1 23 1 73 5 259 1 24 3 
238 1 332 1 239 1 360 1 147 1 308 1 312 2 100 1 367 1 81 1 342 2 221 1 222 1 9 2 62 1 186 4 187 1 224 1 247 1 129 2 157 2 64 4 352 2 251 1 87 1 131 1 90 1 291 2 16 1 376 1 44 1 294 1 328 1 111 4 329 1 112 2 73 4 24 2 259 1 
238 1 332 1 239 1 53 2 277 1 147 1 240 1 334 1 100 1 342 2 60 1 62 2 247 1 205 1 157 2 12 2 64 4 352 3 251 1 254 1 291 2 16 1 106 1 207 2 294 2 109 1 167 1 111 5 300 2 358 1 73 6 24 2 170 1 259 1 360 1 363 2 308 1 176 1 312 2 367 1 81 1 221 1 222 1 186 5 187 1 85 2 129 2 87 1 131 1 90 1 376 1 44 1 46 2 328 2 329 1 
64 2 238 1 332 1 239 1 352 1 360 1 87 1 67 1 16 1 44 1 100 1 367 1 329 1 111 3 81 1 342 1 222 1 186 3 187 1 247 1 73 2 259 1 
64 3 238 1 332 1 239 1 352 1 360 1 251 1 87 1 67 1 16 1 44 1 100 1 328 1 367 1 329 1 111 3 81 1 222 1 186 3 187 1 247 1 73 1 24 1 259 1 
332 1 238 1 239 1 360 1 100 1 367 1 81 1 222 1 342 1 186 3 187 1 247 1 64 3 352 1 87 1 251 1 67 1 16 1 291 1 44 1 328 1 111 3 329 1 73 2 259 1 24 1 
238 1 332 1 239 1 360 1 277 1 147 1 308 1 312 2 100 1 59 1 367 1 81 1 221 1 222 1 342 4 62 1 186 5 187 1 226 1 247 1 85 2 157 2 319 1 12 2 64 6 352 3 251 5 87 1 67 1 90 1 16 1 291 4 207 2 376 1 44 1 294 1 328 5 111 5 329 1 234 1 23 1 73 7 24 4 259 1 
238 1 332 1 239 1 360 1 277 1 147 1 308 1 312 2 100 1 367 1 81 1 342 2 221 1 222 1 62 1 186 4 187 1 247 1 85 2 129 2 157 2 12 2 64 4 352 2 251 1 87 1 131 1 90 1 291 2 16 1 207 2 376 1 44 1 294 1 328 2 111 4 329 1 73 4 24 2 259 1 
332 1 238 1 239 1 360 1 277 1 147 1 308 1 312 2 100 1 367 1 59 1 81 1 342 2 222 1 221 1 62 1 186 4 187 1 226 1 247 1 85 2 157 2 319 1 12 2 64 4 352 2 251 1 87 1 90 1 291 2 16 1 207 2 376 1 44 1 294 1 328 1 111 4 329 1 73 4 24 2 259 1 
332 1 238 1 239 1 360 1 277 1 147 1 308 1 312 2 100 1 367 1 59 1 81 1 342 2 222 1 221 1 62 1 186 4 187 1 226 1 247 1 85 2 157 2 319 1 12 2 64 4 352 2 251 1 87 1 90 1 291 2 16 1 207 2 376 1 44 1 294 1 328 1 111 4 329 1 73 4 24 2 259 1 
332 1 238 1 239 1 360 1 147 1 308 1 312 2 100 1 367 1 81 1 284 1 342 2 222 1 221 1 9 2 62 1 186 4 316 1 224 1 187 1 226 1 247 1 129 2 157 2 64 4 352 2 251 1 87 1 90 1 291 2 16 1 376 1 44 1 294 1 328 1 111 4 329 1 112 2 73 4 24 2 259 1 
51 1 306 1 217 1 123 3 262 1 57 1 337 1 242 1 220 1 127 1 152 1 8 2 63 2 130 1 290 1 163 1 374 6 375 1 19 1 377 1 140 2 47 1 208 3 113 1 299 2 215 1 
144 1 51 2 122 1 123 6 219 1 148 1 262 2 282 2 149 1 337 2 220 2 127 2 153 1 154 3 245 1 8 4 63 1 13 1 130 11 374 14 163 4 375 2 19 1 140 1 47 11 141 3 208 8 299 2 213 1 118 1 119 1 143 2 215 1 
332 1 333 1 51 2 53 2 123 1 363 7 240 1 148 1 262 2 57 1 149 1 337 2 127 2 198 1 60 2 344 1 347 2 8 4 205 1 351 1 320 1 37 1 230 1 254 2 374 2 255 1 375 2 44 1 189 1 257 1 46 8 208 1 300 8 212 1 358 3 359 1 259 1 215 2 170 2 
332 1 51 1 123 2 219 1 262 1 282 1 337 1 220 1 196 1 127 1 153 1 8 2 63 1 225 1 130 1 163 1 374 3 375 1 44 1 19 1 257 1 139 1 47 1 208 1 299 1 212 1 143 1 215 1 259 1 
332 2 51 1 53 1 1 1 123 1 363 1 124 1 219 1 148 1 262 1 149 1 180 1 337 1 341 1 127 1 60 1 368 1 288 1 32 1 8 2 254 1 163 1 38 1 374 2 375 1 44 1 46 1 257 1 354 1 140 1 208 1 300 1 358 1 212 1 359 1 170 1 215 1 259 2 
332 3 144 4 333 1 51 3 95 2 53 1 55 2 148 1 282 2 149 1 242 1 337 3 6 2 152 1 60 2 153 2 155 1 8 6 288 2 63 4 290 1 254 2 163 7 19 3 354 1 257 1 110 1 208 10 113 1 299 8 300 3 212 1 358 2 359 1 259 3 215 3 170 2 306 1 123 10 363 3 218 2 219 1 262 3 180 2 313 2 220 3 127 3 368 2 32 2 130 7 93 1 374 20 375 3 44 1 377 1 46 3 140 2 47 7 143 2 
144 1 51 1 130 1 163 1 374 2 375 1 41 1 262 1 57 1 337 1 220 1 47 1 127 1 208 2 299 1 8 2 143 1 215 1 
51 1 130 1 123 2 163 1 374 2 375 1 19 1 262 1 57 1 337 1 47 1 127 1 153 1 299 1 31 1 8 2 63 1 215 1 
144 1 51 1 130 2 123 2 163 2 374 4 375 1 19 1 262 1 282 1 57 1 337 1 220 1 47 2 127 1 153 1 208 2 299 2 8 2 63 1 143 1 215 1 
144 1 51 1 37 1 130 1 163 1 374 2 375 1 41 1 262 1 337 1 220 1 47 1 127 1 208 2 299 1 8 2 143 1 215 1 
51 1 37 1 130 1 123 2 163 1 374 2 375 1 19 1 262 1 337 1 47 1 127 1 153 1 299 1 31 1 8 2 63 1 215 1 
144 1 51 1 37 1 130 2 123 2 163 2 374 4 375 1 19 1 262 1 282 1 337 1 220 1 47 2 127 1 153 1 208 2 299 2 8 2 63 1 143 1 215 1 
144 1 51 1 130 2 123 2 163 2 374 4 375 1 19 1 262 1 282 1 337 1 220 1 47 2 127 1 153 1 208 2 299 2 8 2 63 1 143 1 215 1 
332 1 51 1 53 1 123 1 218 1 363 1 148 1 262 1 149 1 180 1 337 1 127 1 60 1 368 1 288 1 32 1 8 2 374 2 254 1 375 1 46 1 140 1 208 1 300 1 358 1 170 1 259 1 215 1 
332 1 51 1 53 1 123 1 363 1 281 1 309 1 148 1 262 1 149 1 180 1 337 1 127 1 60 1 288 1 8 2 374 2 254 1 18 1 375 1 46 1 140 1 208 1 300 1 358 1 170 1 259 1 215 1 
144 1 51 1 130 2 123 2 163 2 374 4 219 1 375 1 19 1 262 1 282 1 337 1 220 1 47 2 127 1 153 1 208 2 299 2 8 2 63 1 143 1 215 1 
144 1 332 1 51 1 123 2 218 1 363 1 262 1 282 1 180 1 337 1 313 1 220 1 127 1 153 1 60 1 368 1 288 1 32 1 8 2 63 1 130 2 163 2 374 4 254 1 375 1 19 1 189 1 46 1 47 2 208 2 299 2 300 1 358 1 143 1 170 1 259 1 215 1 
144 1 332 1 51 1 123 1 219 1 262 1 282 1 337 1 220 1 127 1 153 1 61 1 8 2 225 1 130 1 374 3 163 1 375 1 19 1 44 1 257 1 139 1 47 1 208 2 299 1 212 1 143 1 215 1 259 1 
144 4 51 3 96 1 98 1 99 1 282 4 58 1 337 3 242 1 152 1 153 4 245 1 154 3 8 6 63 4 249 1 13 3 290 1 206 1 19 5 208 20 299 8 113 1 210 1 22 1 216 2 306 1 123 21 364 1 261 1 262 3 179 1 220 5 366 1 86 4 374 41 133 1 324 1 375 3 377 1 141 4 49 1 143 4 
144 3 51 4 306 1 216 2 96 1 98 1 123 18 364 2 261 1 99 1 262 4 282 4 58 1 179 1 242 1 337 4 220 5 366 1 152 1 153 3 154 3 245 1 8 8 63 4 249 1 86 4 13 3 290 1 374 38 133 1 206 1 324 1 375 4 19 4 377 1 141 4 208 20 113 1 299 7 210 1 22 1 49 1 143 4 
144 7 51 2 306 1 216 1 96 1 98 1 123 25 364 1 99 1 262 2 282 7 179 1 242 1 337 2 220 8 366 1 152 1 153 7 154 4 245 2 8 4 63 7 249 1 86 4 13 2 290 1 374 52 133 1 206 1 324 1 375 2 19 8 377 1 141 4 208 27 113 1 299 14 210 1 22 1 49 1 213 2 143 7 
144 3 51 2 216 1 96 1 123 10 99 1 262 2 282 3 58 1 337 2 220 3 151 1 153 3 154 1 245 1 8 4 63 3 249 1 86 2 13 1 374 19 133 1 375 2 19 3 141 2 208 9 299 6 210 2 49 1 143 3 
144 2 51 3 216 2 96 1 98 1 123 12 364 2 99 1 262 3 282 3 179 1 337 3 220 3 366 1 153 2 154 2 8 6 63 2 249 2 86 4 13 2 374 26 133 1 324 1 206 1 375 3 19 2 208 14 141 2 299 4 210 1 22 1 49 1 143 3 
181 1 279 1 134 1 355 1 83 1 202 1 70 1 214 1 150 1 34 1 
209 1 177 1 
11 1 173 1 379 1 355 1 83 1 202 1 70 1 214 1 34 1 
80 1 256 1 
48 1 370 1 371 1 
373 1 134 1 79 1 70 1 56 1 150 1 4 2 181 1 45 1 328 1 111 1 83 1 355 1 202 1 186 1 72 1 214 1 34 1 
373 1 134 1 79 1 70 1 56 1 150 1 4 2 181 1 45 1 328 1 111 1 83 1 355 1 202 1 186 1 72 1 214 1 34 1 
373 1 134 1 79 1 70 1 56 1 150 1 4 2 181 1 45 1 328 1 111 1 83 1 355 1 202 1 186 1 72 1 214 1 34 1 
80 1 256 1 370 1 
80 1 256 1 370 1 
48 1 371 1 
48 1 370 1 371 1 
104 1 236 1 
332 2 177 1 4 1 82 1 30 1 83 1 202 1 186 1 34 1 104 1 107 1 70 1 43 1 44 2 45 1 295 1 257 2 140 1 111 1 209 1 355 1 72 1 357 1 236 1 212 2 214 1 259 2 
332 2 51 1 123 1 363 2 219 1 148 1 262 1 335 1 149 1 337 1 5 1 127 1 60 1 347 2 8 2 103 1 230 1 254 1 374 2 271 1 255 1 375 1 44 2 46 2 168 1 208 1 300 2 358 1 170 1 215 1 259 2 
53 1 66 1 254 1 363 1 174 1 240 1 78 1 46 1 60 1 345 1 300 1 358 1 205 1 170 1 
333 1 160 1 92 1 254 1 363 1 323 1 174 1 42 2 71 1 241 1 46 1 125 1 233 1 60 1 345 1 331 1 300 1 302 1 
333 1 160 1 92 1 254 1 363 2 323 1 174 1 42 2 189 1 71 1 241 1 46 2 125 1 233 1 60 1 345 1 331 1 300 2 302 1 
333 1 160 1 92 1 363 1 15 1 323 1 254 1 42 2 241 1 46 1 125 1 233 1 60 1 345 1 331 1 300 1 302 1 
29 1 
328 1 251 1 217 1 188 1 21 1 62 1 294 1 
251 1 147 1 90 1 188 1 376 1 294 1 328 1 221 1 21 1 62 1 
194 1 146 5 273 5 207 5 19 2 282 2 294 5 220 2 6 1 328 5 153 2 348 2 62 5 143 2 129 10 
352 1 328 1 251 1 111 1 186 1 73 1 
53 2 147 1 363 4 240 1 176 2 334 2 60 1 221 2 201 1 62 2 186 3 205 1 352 2 14 1 68 2 254 1 90 2 376 2 109 1 294 2 46 4 138 1 167 1 111 3 300 4 358 1 94 1 73 4 170 1 
332 3 51 1 53 1 123 1 363 1 218 1 148 1 262 1 311 1 180 1 337 1 127 1 60 1 368 1 8 2 32 1 288 1 225 2 89 1 374 1 254 1 375 1 44 2 46 1 257 2 140 1 300 1 212 2 358 1 259 3 170 1 215 1 
146 2 251 2 147 1 90 1 273 2 207 2 376 1 176 1 334 1 294 1 242 1 328 4 221 1 62 2 129 4 
277 1 147 1 221 1 62 1 186 1 85 1 129 1 12 1 352 1 251 1 90 1 207 1 376 1 294 1 328 2 111 1 73 1 
145 2 194 2 146 6 53 1 147 4 334 1 282 2 6 2 60 3 153 2 286 2 348 2 288 3 349 2 62 8 352 3 14 1 251 2 68 1 254 4 207 6 19 2 294 9 165 2 111 5 21 1 300 3 356 2 358 10 73 5 169 2 170 3 260 1 362 1 363 3 77 2 176 2 220 2 221 4 33 3 186 5 129 12 227 1 36 2 188 1 90 4 273 6 376 4 189 1 46 3 190 1 328 8 329 2 143 2 
194 1 146 5 121 1 98 1 147 2 176 1 334 1 282 2 179 1 220 2 221 2 153 2 154 1 348 2 186 1 62 5 129 6 352 1 13 1 251 2 90 2 273 5 324 1 206 1 207 3 376 2 19 2 326 1 294 8 328 5 111 1 141 1 22 1 73 1 143 2 
332 1 194 1 306 1 172 1 54 1 147 1 220 2 367 1 152 1 221 1 348 2 186 1 62 2 225 1 319 1 65 1 290 1 89 1 90 1 39 1 376 1 19 1 44 1 294 2 257 1 111 1 212 1 259 1 
274 1 134 1 355 1 83 1 236 1 
27 1 355 1 83 1 
27 1 355 1 83 1 
27 1 355 1 83 1 
228 1 355 1 83 1 
228 1 355 1 83 1 
228 1 355 1 83 1 
355 1 83 1 
202 1 34 1 
51 1 306 1 123 4 262 1 242 1 337 1 220 1 152 1 154 1 8 2 63 2 13 1 290 1 374 8 324 1 375 1 19 1 377 1 141 1 208 4 113 1 299 2 49 1 
144 1 51 2 306 1 123 5 262 2 282 1 242 1 337 2 220 2 152 1 154 1 245 1 8 4 63 2 13 1 290 1 374 11 324 1 375 2 19 1 136 1 377 1 141 2 208 6 113 1 299 3 49 1 143 1 
144 1 51 3 306 1 98 1 123 10 364 1 262 3 282 2 179 1 242 1 337 3 220 3 152 1 153 2 154 1 8 6 63 3 13 1 290 1 374 19 324 1 206 1 375 3 19 3 136 1 377 1 141 1 208 9 113 1 299 4 22 1 49 1 143 2 
144 2 51 3 306 1 123 7 98 1 364 1 262 3 282 2 179 1 242 1 337 3 220 3 152 1 153 1 154 1 8 6 63 3 13 1 290 1 374 17 324 1 206 1 375 3 19 2 136 1 377 1 141 1 208 10 113 1 299 5 22 1 49 1 143 2 
51 1 306 1 123 4 262 1 242 1 337 1 220 1 152 1 154 1 8 2 63 2 13 1 290 1 374 8 324 1 375 1 19 1 377 1 141 1 208 4 113 1 299 2 49 1 
144 1 51 1 123 6 98 1 262 1 282 2 179 1 337 1 220 2 153 2 154 1 8 2 63 1 13 1 374 12 324 1 206 1 375 1 19 2 141 1 208 6 299 2 22 1 49 1 143 2 
144 2 51 4 306 1 98 1 123 8 364 2 262 4 282 2 179 1 242 1 337 4 220 3 152 1 153 1 154 1 8 8 63 3 13 1 290 1 374 18 324 1 206 1 375 4 19 2 136 1 377 1 141 1 208 10 113 1 299 5 22 1 49 1 143 2 
144 3 51 4 98 1 123 7 364 2 262 4 282 3 179 1 58 1 337 4 220 3 153 2 154 1 8 8 63 3 13 1 374 16 324 1 206 1 375 4 19 2 141 1 208 9 299 6 22 1 49 1 143 3 
144 3 306 3 123 4 290 1 374 7 19 1 377 2 220 1 152 3 208 3 113 1 299 6 63 3 
144 1 51 4 306 1 98 1 123 8 364 2 262 4 282 2 179 1 58 1 242 1 337 4 220 3 152 1 153 1 154 1 8 8 63 3 13 1 290 1 374 18 324 1 206 1 375 4 19 2 377 1 141 1 208 10 113 1 299 4 22 1 49 1 143 2 
144 1 51 2 306 1 290 1 123 4 374 8 364 1 375 2 19 1 262 2 377 1 242 1 337 2 220 1 152 1 208 4 299 3 113 1 8 4 63 2 
306 1 217 1 123 3 290 1 374 6 19 1 377 1 242 1 220 1 152 1 208 3 113 1 299 2 63 2 
144 1 51 1 123 2 374 4 375 1 19 1 136 1 262 1 282 1 337 1 220 1 153 1 208 2 299 2 8 2 63 1 143 1 
144 1 13 1 123 4 374 7 19 1 282 1 220 1 153 1 141 2 208 3 154 1 245 1 299 2 63 1 143 1 
144 4 51 2 306 2 123 12 364 2 28 1 282 2 262 2 242 1 337 2 220 3 152 2 153 2 245 1 154 2 8 4 63 5 290 1 374 23 375 2 19 3 377 1 208 11 141 2 113 1 299 9 118 1 213 1 143 2 
141 1 123 1 374 1 
208 1 154 1 374 1 
144 1 51 1 123 3 374 6 375 1 19 1 136 1 262 1 282 1 337 1 220 1 6 1 208 3 153 1 299 3 8 2 63 2 143 1 
144 1 51 1 123 6 98 1 262 1 282 2 179 1 337 1 220 2 153 2 154 1 8 2 63 1 13 1 374 12 324 1 206 1 375 1 19 2 141 1 208 6 299 2 22 1 49 1 143 2 
144 1 306 1 290 1 123 3 374 6 19 1 220 1 152 1 208 3 299 2 63 1 
144 1 51 1 306 1 123 2 374 3 364 1 375 1 28 1 377 1 262 1 337 1 152 1 208 1 299 2 113 1 8 2 63 1 
144 2 51 1 65 1 306 2 123 5 290 1 374 10 375 1 19 2 262 1 337 1 220 2 152 2 208 5 299 5 8 2 63 3 49 1 
144 1 51 1 374 2 375 1 262 1 337 1 220 1 208 2 299 1 8 2 49 1 143 1 
144 1 51 1 123 2 374 4 375 1 19 1 262 1 282 1 337 1 220 1 153 1 208 2 299 2 8 2 63 1 49 1 143 1 
144 1 51 3 306 1 123 2 374 3 364 1 375 3 28 1 262 3 58 1 337 3 152 1 208 1 299 2 8 6 63 1 49 1 
144 5 51 5 306 3 123 18 364 2 28 1 262 5 282 3 58 1 242 1 337 5 220 5 152 3 153 3 154 3 245 1 8 10 63 7 13 1 372 1 353 1 290 2 374 34 375 5 19 5 136 1 377 1 141 4 208 16 113 1 299 12 49 1 120 1 143 3 
332 1 26 1 44 1 336 1 339 1 140 1 81 1 264 1 184 1 287 1 211 1 259 1 
332 1 140 1 81 1 26 1 184 1 44 1 259 1 
46 1 217 1 53 1 60 1 254 1 363 1 300 1 240 1 358 1 205 1 170 1 
53 1 254 1 363 4 240 1 189 1 46 4 60 1 300 4 380 1 358 1 381 1 205 1 170 1 
250 1 68 1 252 1 93 1 363 2 231 1 254 2 166 1 46 2 60 1 300 2 288 1 358 1 170 1 
125 1 46 1 160 1 53 1 60 1 92 1 254 1 363 1 300 1 42 1 
333 1 46 2 168 1 60 1 230 1 254 1 363 2 300 2 358 1 189 1 170 1 
320 1 68 1 53 1 230 1 363 4 254 2 240 1 189 1 46 5 198 1 60 2 300 5 358 3 381 1 205 1 170 2 
320 1 68 1 53 1 230 1 363 4 254 2 240 1 189 1 46 5 60 2 300 5 265 1 358 3 381 1 205 1 170 2 
332 2 53 1 254 1 363 1 309 1 44 1 180 1 257 1 46 1 140 1 60 1 300 1 288 1 358 1 212 1 359 1 170 1 259 2 
252 1 68 1 362 1 363 1 231 1 254 2 46 1 60 1 300 1 288 1 358 1 275 1 170 1 
332 2 53 1 254 1 363 1 44 1 180 1 257 1 46 1 140 1 60 1 368 1 300 1 288 1 358 1 212 1 359 1 170 1 259 2 
332 2 145 1 363 1 180 1 367 1 60 1 222 1 368 1 286 1 288 2 87 1 68 1 254 1 44 2 46 1 257 1 140 1 300 1 212 2 358 3 359 1 259 2 170 2 
332 2 145 1 363 2 309 1 180 1 367 1 60 1 222 1 286 1 288 2 87 1 68 1 254 1 44 2 46 2 257 1 140 1 300 2 380 1 212 2 358 3 359 1 259 2 170 2 
145 1 53 1 363 3 77 1 60 1 286 1 33 1 288 1 186 2 229 1 251 1 68 1 254 1 46 3 328 1 111 2 329 1 300 3 380 1 117 1 358 4 73 1 170 1 
145 1 36 1 251 1 53 1 68 1 254 1 363 3 77 1 46 3 328 1 329 1 111 2 60 1 286 1 300 3 380 1 288 1 33 1 186 2 358 4 73 1 170 1 
46 1 351 1 60 1 254 1 363 1 300 1 
351 1 333 1 320 1 252 1 53 2 362 1 230 1 363 6 231 1 254 3 189 1 46 7 198 1 60 2 344 1 347 1 300 7 288 1 358 3 275 1 170 2 
332 2 51 2 95 1 337 2 242 1 152 1 60 1 8 4 288 1 63 2 103 1 290 1 163 1 254 1 19 1 257 1 208 3 113 1 299 2 300 1 212 1 358 1 359 1 259 2 215 2 170 1 306 1 123 3 218 1 363 1 219 1 262 2 180 1 313 1 220 1 127 2 368 1 32 1 130 1 374 6 375 2 44 1 189 1 377 1 46 1 140 2 47 1 
53 1 363 1 147 2 77 1 221 2 33 1 62 1 186 3 349 1 36 1 352 1 251 1 14 1 188 1 90 2 107 1 376 2 294 1 46 1 328 1 111 3 329 1 21 1 300 1 356 1 358 2 73 2 169 1 
260 1 46 2 351 1 60 1 362 1 254 2 363 2 300 2 77 1 288 1 358 2 189 1 170 1 
140 1 75 1 268 1 161 1 315 1 
360 1 251 1 87 1 75 2 161 1 268 2 162 1 107 1 293 1 365 1 140 1 328 1 367 1 329 1 111 2 7 1 222 1 315 2 186 2 
332 1 5 1 75 1 161 1 271 1 315 1 44 1 259 1 335 1 
7 1 161 1 293 1 
296 1 217 1 192 1 199 1 
159 1 296 1 192 1 199 1 40 1 310 1 235 1 204 1 
267 1 159 1 25 1 305 1 105 1 40 4 310 1 325 2 296 2 197 1 192 2 199 3 346 1 204 4 
159 1 97 1 269 1 40 2 272 1 310 1 325 1 296 1 192 1 199 1 235 1 204 2 
159 1 25 1 105 2 40 3 310 1 296 1 192 1 199 1 114 1 346 2 235 1 204 3 
171 1 76 2 199 2 270 1 
378 1 159 1 40 1 310 1 235 1 204 1 
159 1 296 1 192 1 199 1 298 1 40 2 310 1 235 1 325 1 204 2 
246 1 
159 1 296 1 192 1 199 1 40 1 310 1 235 1 204 1 
159 1 296 1 192 1 199 1 40 1 310 1 204 1 
40 1 108 1 303 1 
159 1 25 1 105 1 40 3 310 1 296 1 192 1 199 1 346 2 235 1 204 3 248 1 
159 1 183 1 296 1 192 1 199 1 40 2 310 1 325 1 204 2 
160 1 159 1 305 1 126 1 199 1 331 1 40 1 42 1 310 1 235 1 204 1 
159 1 192 1 199 1 40 1 310 1 235 1 204 1 
159 1 296 1 192 2 40 1 310 1 235 1 204 1 
159 2 40 2 310 2 191 1 192 1 199 1 301 1 235 1 50 1 204 2 
159 1 305 1 40 3 310 1 325 2 340 1 296 1 197 1 192 1 298 1 199 2 235 1 204 3 
159 1 160 1 278 1 92 1 40 2 42 2 310 1 325 1 233 1 296 1 192 1 199 1 331 1 235 1 204 2 
159 2 305 1 40 4 310 2 325 2 183 1 296 1 197 1 192 1 199 2 116 1 235 1 204 4 
159 1 40 3 310 1 325 1 296 1 192 1 199 1 298 1 346 1 235 1 204 3 
267 1 305 1 197 1 199 1 
192 1 199 1 

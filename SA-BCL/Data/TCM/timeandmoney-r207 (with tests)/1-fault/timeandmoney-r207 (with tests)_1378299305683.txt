#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 1 353 1 321 9 298 1 229 6 178 1 203 1 202 2 94 1 283 1 71 4 134 2 207 1 260 1 181 1 306 9 375 1 217 2 268 5 291 1 145 3 244 2 274 1 222 2 348 2 194 1 351 1 37 2 
226 1 353 1 321 9 298 1 229 6 178 1 202 2 203 1 94 1 283 1 71 4 134 2 207 1 260 1 181 1 306 9 375 1 217 2 268 5 291 1 145 3 244 2 274 1 222 2 348 2 194 1 351 1 37 2 
226 1 353 1 321 10 298 1 229 7 178 1 202 2 203 1 94 1 283 1 71 5 134 2 207 1 260 1 181 1 306 10 375 1 217 2 268 6 291 1 145 4 244 2 274 1 222 2 348 2 194 1 351 1 37 2 
226 1 353 1 321 7 298 1 229 4 178 1 202 2 203 1 94 1 283 1 71 3 134 2 260 1 181 1 306 7 375 1 217 1 268 4 291 1 145 2 244 2 274 1 222 2 348 2 194 1 351 1 37 2 
353 1 321 4 298 1 229 3 178 1 202 1 217 2 268 3 71 2 145 1 134 1 207 1 274 1 260 1 348 1 222 1 37 1 306 4 
321 2 298 1 178 1 94 1 268 1 291 1 244 1 134 1 260 1 222 1 348 1 246 1 234 1 37 1 306 2 110 1 
226 1 321 3 298 1 229 1 178 1 268 2 71 1 145 1 244 1 260 1 222 2 37 2 306 3 
226 1 353 1 321 9 298 1 229 7 178 1 202 1 71 4 282 1 134 1 207 1 260 1 161 1 181 1 306 9 375 1 217 2 268 5 145 3 244 1 274 1 222 2 348 1 37 2 
226 1 353 1 321 9 298 1 229 7 178 1 202 1 71 4 282 1 134 1 207 1 260 1 161 1 181 1 306 9 375 1 217 2 268 5 145 3 244 1 274 1 222 2 348 1 37 2 
218 1 315 1 54 1 
218 1 129 2 331 1 
270 2 23 2 48 1 224 2 149 2 249 2 212 2 204 1 
227 2 228 1 277 1 67 1 278 1 324 2 88 1 204 1 358 1 132 1 6 1 302 1 208 1 23 2 163 1 48 1 212 2 76 1 28 2 164 1 29 1 119 1 240 1 15 1 33 1 34 1 270 2 269 2 344 1 106 2 171 1 223 1 224 3 149 3 249 2 150 1 151 1 
270 1 23 1 31 1 224 1 17 1 352 1 149 1 249 1 212 1 204 1 
214 1 356 1 158 1 312 1 218 1 80 1 180 1 72 1 81 1 315 1 224 1 249 1 149 1 17 1 
214 2 356 1 218 1 80 1 270 1 180 1 23 1 72 1 81 2 315 1 224 1 212 1 249 1 149 1 17 1 
187 1 257 1 51 1 214 1 81 1 
218 1 187 1 51 1 122 1 214 2 221 1 81 2 315 1 
187 1 214 1 81 1 
51 1 214 1 31 1 204 1 270 1 23 1 81 1 193 1 224 1 17 1 352 1 212 1 249 1 149 1 
218 1 
218 1 187 1 51 1 214 2 221 1 81 2 315 1 4 1 
50 1 51 2 214 5 297 2 323 1 41 1 70 1 131 1 218 1 187 2 123 2 97 1 170 1 206 1 221 1 362 2 81 5 315 1 335 1 
28 1 227 1 119 1 29 1 228 1 277 1 67 1 15 1 373 1 88 1 377 1 269 1 23 1 223 1 163 1 317 1 224 2 212 1 249 1 149 2 
48 1 54 1 
52 1 35 1 270 1 23 1 224 2 48 2 249 2 149 2 212 1 
84 1 22 1 377 1 
28 1 227 1 29 1 119 1 228 1 277 1 15 1 67 1 88 1 55 1 269 1 223 1 163 1 48 1 224 1 149 1 
270 1 23 3 317 1 48 1 224 3 149 3 249 3 212 3 
23 1 224 1 17 1 352 1 149 1 249 1 212 1 
35 1 270 1 23 1 52 1 224 1 17 1 149 1 249 1 212 1 
227 1 228 1 277 1 67 1 324 2 88 1 356 1 204 1 132 1 180 1 6 1 302 1 208 1 72 1 23 3 163 1 117 1 48 1 212 3 76 1 28 1 164 1 119 1 29 1 214 1 240 1 15 1 373 1 52 1 34 1 80 1 270 2 269 1 106 1 146 1 171 1 81 1 223 1 317 1 224 4 151 1 149 4 249 3 17 1 
312 1 252 1 23 1 317 1 48 1 224 2 149 2 249 2 212 1 
214 1 373 1 52 1 356 1 205 1 218 1 80 1 270 1 180 1 23 3 72 1 81 1 317 2 117 1 224 3 17 1 212 3 249 3 149 3 
52 1 377 1 270 1 22 1 23 2 317 1 224 2 212 2 249 2 149 2 
28 1 227 1 29 1 119 1 228 1 277 1 15 1 67 1 88 1 269 1 223 1 163 1 48 1 224 1 149 1 
28 1 227 1 29 1 119 1 228 1 67 1 88 1 269 1 259 1 223 1 163 1 48 1 224 1 305 1 149 1 
84 2 18 1 324 2 42 1 358 2 132 1 22 2 360 1 302 1 208 1 307 1 164 1 240 2 266 1 310 1 343 1 377 2 34 1 105 1 106 4 171 1 225 1 174 1 319 1 
80 1 366 1 23 1 224 1 17 1 149 1 249 1 212 1 
312 1 270 1 252 1 23 4 373 1 253 1 52 1 317 2 48 1 224 5 8 1 149 5 249 5 212 4 
366 1 23 2 224 2 17 1 352 1 149 2 249 2 212 2 
10 1 104 1 
10 1 104 1 
346 1 162 1 
346 1 162 1 
346 1 162 1 
10 1 104 1 185 1 
10 1 104 1 185 1 
10 1 12 1 104 1 
140 1 10 2 346 1 104 2 162 1 236 1 
10 1 104 1 185 1 
10 1 191 1 104 1 
10 1 191 1 104 1 
10 1 191 1 104 1 
250 2 62 1 9 1 140 1 197 1 10 2 214 2 369 1 104 2 141 1 279 1 90 2 378 2 290 2 218 1 256 3 313 2 148 1 81 2 
250 1 62 1 90 1 256 1 98 1 115 1 23 2 48 1 212 2 10 1 214 1 12 1 104 1 166 1 340 1 378 1 290 1 243 1 168 1 81 1 224 2 109 1 249 2 149 2 
134 1 348 1 202 1 
134 1 348 1 246 1 
57 1 65 1 348 3 246 1 202 2 56 1 
78 1 57 1 65 1 348 2 246 1 202 1 
57 2 65 1 348 2 246 1 202 1 
129 3 18 1 297 1 2 1 323 2 70 1 331 1 21 1 97 3 98 1 362 1 303 1 336 1 138 1 288 1 51 4 214 5 184 2 241 2 310 1 343 1 218 2 105 1 187 1 243 1 168 1 123 1 221 1 81 5 315 1 16 1 59 2 
129 9 18 3 295 1 2 1 297 2 323 6 70 1 131 1 281 1 301 1 257 5 331 3 97 8 362 2 303 2 47 1 138 2 288 3 51 7 263 5 214 9 309 1 184 6 241 6 310 3 343 3 218 5 105 3 243 4 187 6 123 2 220 1 221 1 81 9 315 1 
129 4 18 1 297 1 323 2 131 1 331 2 21 1 97 3 362 1 303 1 138 1 288 1 51 2 214 3 184 2 241 2 310 1 343 1 218 3 105 1 243 1 123 1 81 3 315 1 16 1 59 1 
129 7 18 2 297 1 323 4 131 1 281 1 331 3 21 1 97 5 362 1 303 1 47 1 138 1 288 2 51 3 214 4 184 4 241 4 310 2 343 2 218 4 105 2 243 2 123 1 220 1 81 4 315 1 16 1 59 2 
228 1 112 1 54 1 
228 1 89 1 
201 1 
228 1 88 1 
38 1 228 2 11 1 112 2 88 1 201 1 163 1 
228 1 88 1 163 1 
228 1 60 1 
276 1 365 1 18 1 153 1 66 1 87 1 240 3 343 1 42 3 358 4 179 1 271 1 231 1 106 7 135 1 100 2 319 2 
276 1 365 1 18 1 153 1 66 1 87 1 240 3 343 1 42 3 358 4 179 1 271 1 231 1 106 7 135 1 100 2 319 2 
276 1 365 1 18 1 153 1 66 1 87 1 240 3 343 1 42 3 358 4 179 1 271 1 231 1 106 7 316 1 135 1 100 2 319 2 
276 1 152 1 153 1 18 4 66 5 87 2 199 3 324 2 254 1 42 10 132 1 358 16 179 1 231 2 116 1 302 1 135 2 25 1 100 3 288 3 365 2 164 1 103 1 240 15 310 3 342 1 343 4 271 1 105 3 106 31 147 1 171 1 61 4 319 5 
1 1 320 1 18 1 153 1 66 1 87 1 324 4 42 4 132 2 358 5 179 1 231 1 302 2 135 1 100 2 164 2 365 1 103 1 240 4 343 1 271 1 106 9 171 2 319 3 
227 1 86 1 321 2 298 1 229 1 157 1 178 1 202 1 5 1 134 1 260 1 182 1 118 1 306 2 28 1 338 1 213 1 29 1 119 1 371 1 267 1 56 1 268 1 269 1 244 1 222 1 348 2 246 1 248 1 37 1 
227 1 86 1 321 3 229 2 157 1 178 1 202 1 5 1 134 1 260 1 118 1 306 3 287 1 28 1 338 1 213 1 29 1 119 1 371 1 79 1 56 1 268 1 269 1 244 1 222 1 348 2 246 1 247 1 248 1 37 1 
227 1 86 1 321 2 229 2 157 1 178 1 202 1 5 1 134 1 260 1 118 1 306 2 287 1 28 1 213 1 29 1 119 1 56 1 268 1 269 1 244 1 348 2 246 1 247 1 248 1 
227 1 321 1 86 2 228 1 200 1 88 1 300 1 5 2 280 1 361 1 306 1 28 1 119 1 213 2 29 1 79 1 143 1 144 1 269 1 244 2 222 1 223 1 37 1 
227 1 86 1 321 1 298 1 157 1 202 1 5 1 134 1 118 1 306 1 28 1 338 1 213 1 29 1 119 1 371 1 267 1 56 1 269 1 244 1 222 1 348 2 246 1 247 1 248 1 37 1 
0 1 
39 2 129 2 40 2 227 2 228 1 323 2 88 1 331 2 97 2 180 1 46 2 334 4 136 1 49 2 238 1 341 1 144 1 186 1 187 6 249 1 149 1 17 1 297 1 154 1 20 2 356 1 70 1 158 1 361 1 362 1 72 1 303 1 74 1 75 2 28 2 214 5 29 1 119 1 165 1 311 1 167 1 312 1 218 2 80 1 36 2 269 2 123 1 124 1 125 1 272 1 221 3 81 5 223 2 315 1 224 1 
356 1 4 1 158 1 180 1 334 2 72 1 136 1 75 1 214 3 238 1 311 1 312 1 80 1 187 2 124 1 125 1 221 1 81 3 224 1 149 1 249 1 17 1 
20 1 356 1 4 1 158 1 180 1 334 3 72 1 136 1 214 3 238 1 311 1 312 1 80 1 218 1 187 1 124 1 125 1 221 1 81 3 315 1 224 1 149 1 249 1 17 1 
39 1 20 1 4 1 356 1 158 1 180 1 334 3 72 1 136 1 75 1 214 3 238 1 311 1 312 1 80 1 218 1 187 2 124 1 125 1 221 1 81 3 315 1 224 1 149 1 249 1 17 1 
39 4 40 2 323 1 4 1 180 1 97 1 331 2 46 2 334 6 136 1 49 2 238 1 187 7 17 1 149 1 249 1 297 1 68 1 20 4 356 1 158 1 70 1 72 1 362 1 73 1 75 4 26 1 214 5 265 1 165 1 311 1 312 1 80 1 218 5 36 2 123 1 124 1 125 1 272 1 221 3 81 5 315 5 275 1 224 1 
129 2 39 2 40 2 323 1 180 1 97 1 331 2 46 2 334 4 136 1 49 2 238 1 187 4 17 1 149 1 249 1 297 1 20 2 154 1 356 1 70 1 158 1 72 1 362 1 75 2 214 4 165 1 311 1 312 1 80 1 218 2 36 2 123 1 124 1 272 1 125 1 221 2 81 4 315 1 224 1 
39 2 40 2 297 1 68 1 323 1 20 2 356 1 158 1 70 1 331 2 97 1 180 1 46 2 334 4 72 1 362 1 136 1 75 2 26 1 49 2 214 4 165 1 238 1 265 1 311 1 312 1 218 1 80 1 187 4 36 2 123 1 124 1 272 1 125 1 221 2 81 4 315 1 224 1 149 1 249 1 17 1 
39 2 40 2 297 1 68 1 323 1 20 2 356 1 158 1 70 1 331 2 97 1 180 1 46 2 334 4 72 1 362 1 136 1 75 2 26 1 49 2 214 4 165 1 238 1 265 1 311 1 312 1 218 1 80 1 187 4 36 2 123 1 124 1 272 1 125 1 221 2 81 4 315 1 224 1 149 1 249 1 17 1 
39 2 129 2 297 1 68 1 323 1 20 2 356 1 158 1 70 1 43 1 233 2 97 1 180 1 334 4 72 1 362 1 136 1 209 1 75 2 49 2 214 4 165 1 238 1 311 1 312 1 218 1 80 1 187 4 36 2 123 1 124 1 125 1 221 2 245 1 292 2 81 4 315 1 224 1 149 1 249 1 17 1 
39 3 40 2 297 1 68 1 323 1 20 3 356 1 70 1 158 1 331 2 97 1 180 1 46 2 334 5 362 1 72 1 73 1 136 1 75 3 26 1 49 2 214 4 165 1 265 1 238 1 311 1 312 1 218 1 80 1 36 2 187 5 123 1 124 1 272 1 125 1 221 2 81 4 315 1 224 1 149 1 249 1 17 1 
39 3 40 2 297 1 68 1 323 1 20 3 356 1 70 1 158 1 331 2 97 1 180 1 46 2 334 5 362 1 72 1 73 1 136 1 75 3 26 1 49 2 214 4 165 1 265 1 238 1 311 1 312 1 218 1 80 1 36 2 187 5 123 1 124 1 272 1 125 1 221 2 81 4 315 1 224 1 149 1 249 1 17 1 
39 2 129 2 297 1 323 1 154 1 20 2 356 1 158 1 70 1 43 1 233 2 97 1 180 1 334 4 362 1 72 1 136 1 75 2 49 2 214 4 165 1 238 1 311 1 312 1 218 1 80 1 187 4 36 2 123 1 124 1 125 1 221 2 292 2 81 4 315 1 224 1 249 1 149 1 17 1 
84 1 153 1 18 1 324 2 42 2 132 1 358 3 179 1 231 1 22 1 302 1 208 1 48 2 100 1 365 1 164 1 240 3 343 1 54 1 377 1 34 1 271 1 106 6 171 1 225 1 319 2 
84 11 18 1 66 1 322 1 199 3 278 1 324 4 254 1 42 2 132 2 358 8 22 4 6 1 302 2 208 2 48 1 288 2 164 2 30 1 14 1 240 6 310 2 343 2 242 1 377 11 34 1 105 1 345 1 106 14 147 1 171 2 61 3 319 1 
227 1 228 1 277 1 67 1 324 2 278 1 88 1 132 1 358 1 333 1 22 1 6 1 302 1 208 1 23 1 163 1 48 1 212 1 28 1 164 1 119 1 29 1 14 1 15 1 240 1 373 1 53 1 55 1 34 1 269 1 106 2 223 1 171 1 317 1 294 1 224 2 149 2 249 1 
84 7 227 3 228 2 277 2 278 1 325 1 324 6 88 2 42 8 132 3 179 1 329 2 231 1 6 1 286 1 100 1 48 2 288 2 14 1 240 10 15 2 343 3 105 2 106 20 247 1 111 1 249 1 149 3 151 2 196 2 153 1 18 3 66 4 67 2 358 10 22 7 23 1 208 3 302 3 163 2 212 1 28 3 364 2 365 1 164 3 29 2 119 2 373 1 310 2 377 7 34 3 271 1 269 3 223 1 171 3 317 1 224 3 381 2 319 4 
227 8 228 3 155 1 156 1 324 4 278 1 88 2 132 2 358 1 95 1 6 1 99 1 23 1 302 2 208 2 361 1 182 1 212 1 28 7 339 1 164 2 119 2 29 2 367 1 240 1 34 2 144 1 269 8 189 1 344 2 106 2 223 2 171 2 247 1 317 1 225 1 224 1 149 1 249 1 
84 1 18 1 324 2 42 1 132 1 358 1 22 1 23 1 302 1 208 1 212 1 288 1 164 1 14 1 240 2 310 1 52 1 343 1 377 1 34 1 270 1 105 1 106 3 171 1 58 1 224 1 319 1 249 1 149 1 
84 1 164 1 66 1 324 2 310 1 343 1 42 1 377 1 34 1 132 1 358 2 106 2 22 1 208 1 302 1 171 1 225 1 174 1 
307 1 84 1 164 1 18 1 240 2 324 2 42 1 377 1 34 1 132 1 105 1 106 2 22 1 208 1 302 1 171 1 225 1 319 1 
84 2 18 1 66 1 324 2 42 2 358 2 132 1 22 2 302 1 208 1 288 1 164 1 240 2 310 1 343 1 377 2 34 1 105 1 106 4 171 1 225 1 319 1 
84 1 164 1 66 1 367 1 324 2 310 1 343 1 42 1 377 1 34 1 132 1 358 2 106 2 22 1 208 1 302 1 171 1 174 1 
307 1 84 1 164 1 18 1 367 1 240 2 324 2 42 1 377 1 34 1 132 1 105 1 106 2 22 1 208 1 302 1 171 1 319 1 
84 2 18 1 66 1 324 2 42 2 358 2 132 1 22 2 302 1 208 1 288 1 164 1 367 1 240 2 310 1 343 1 377 2 34 1 105 1 106 4 171 1 319 1 
84 2 288 1 164 1 18 1 66 1 240 2 324 2 310 1 343 1 42 2 377 2 34 1 132 1 358 2 105 1 106 4 22 2 208 1 302 1 171 1 319 1 
227 1 228 1 277 1 67 1 278 1 324 2 88 1 358 1 132 1 6 1 208 1 302 1 163 1 48 1 28 1 164 1 119 1 29 1 15 1 240 1 34 1 269 1 106 2 223 1 171 1 224 1 151 1 149 1 
227 1 228 1 67 1 278 1 324 2 88 1 358 1 132 1 259 1 332 1 6 1 208 1 302 1 163 1 48 1 305 1 28 1 164 1 119 1 29 1 240 1 34 1 269 1 106 2 223 1 171 1 224 1 149 1 
84 2 18 1 66 1 324 2 42 2 358 2 132 1 22 2 302 1 208 1 288 1 164 1 14 1 240 2 310 1 343 1 377 2 34 1 105 1 106 4 171 1 319 1 
84 2 227 1 18 1 66 1 228 1 277 1 67 1 324 2 88 1 42 2 358 2 132 1 22 2 208 1 302 1 182 1 163 1 28 1 288 1 364 1 164 1 119 1 29 1 240 2 15 1 310 1 343 1 377 2 34 1 105 1 269 1 106 4 171 1 224 1 319 1 151 1 149 1 
84 1 18 1 66 1 324 2 42 1 132 1 358 2 22 1 23 1 302 1 208 1 212 1 288 1 164 1 14 1 240 1 310 1 52 1 343 1 377 1 34 1 105 1 270 1 219 1 106 3 171 1 224 1 249 1 149 1 
1 1 18 3 66 3 354 1 199 1 299 2 324 4 254 1 326 1 42 6 132 2 358 9 359 2 302 2 363 1 308 1 288 3 102 1 164 2 239 1 240 10 310 3 343 3 105 3 314 1 106 19 147 1 171 2 61 2 319 3 
175 1 1 1 18 2 66 2 19 1 199 2 299 4 324 6 326 1 42 4 132 3 358 14 359 1 285 1 302 3 363 1 308 2 288 3 102 1 164 3 237 1 103 2 240 12 239 2 310 3 343 3 105 2 106 26 347 1 147 2 171 3 172 1 61 2 319 2 
175 1 1 1 153 1 18 5 19 1 66 4 354 1 199 3 299 4 324 6 254 1 326 1 42 8 132 3 358 20 179 1 231 1 133 1 359 1 285 1 302 3 363 1 100 1 308 2 288 4 102 1 365 1 164 3 237 1 103 1 239 1 240 21 310 4 343 5 271 1 105 4 106 41 347 1 147 3 171 3 172 1 61 4 319 4 
175 1 1 1 153 1 18 4 19 1 66 3 354 1 199 3 299 4 324 8 254 1 326 1 42 7 132 4 358 20 179 1 231 1 133 1 359 1 285 1 302 4 363 1 100 1 308 2 288 4 102 1 365 1 164 4 237 1 103 2 239 1 240 18 310 4 343 5 271 1 105 3 106 38 347 1 147 3 171 4 172 1 61 4 319 4 
175 1 1 1 153 1 18 8 19 1 66 7 199 4 299 4 324 4 254 2 326 1 42 14 132 2 358 27 179 1 231 1 359 1 285 1 302 2 363 1 100 1 308 1 288 7 102 1 365 1 164 2 237 1 103 1 239 1 240 25 310 7 343 8 242 2 271 1 105 7 106 52 347 1 147 2 171 2 172 1 61 4 319 7 
290 1 250 1 140 1 10 1 369 1 104 1 192 1 141 1 90 1 378 1 
12 1 166 1 
327 1 128 1 290 1 250 1 44 1 10 1 104 1 90 1 378 1 
62 1 250 1 9 1 140 1 197 1 214 1 10 1 369 1 104 1 141 1 90 1 378 1 290 1 218 1 256 2 313 1 148 1 81 1 
62 1 250 1 9 1 140 1 197 1 214 1 10 1 369 1 104 1 141 1 90 1 378 1 290 1 218 1 256 2 313 1 148 1 81 1 
62 1 250 1 9 1 140 1 197 1 214 1 10 1 369 1 104 1 141 1 90 1 378 1 290 1 218 1 256 2 313 1 148 1 81 1 
349 1 236 1 185 1 
349 1 236 1 185 1 
191 1 139 1 
191 1 139 1 236 1 
115 1 109 1 
250 1 90 1 256 1 98 1 115 1 23 2 48 1 212 2 9 1 51 1 214 1 10 1 12 1 104 1 166 1 340 1 378 1 290 1 313 1 243 1 168 1 81 1 350 1 224 2 109 1 149 2 249 2 
349 1 185 1 
191 1 139 1 236 1 
227 2 228 1 296 1 324 2 278 1 88 1 132 1 358 1 95 1 114 1 6 1 302 1 208 1 28 2 289 1 164 1 119 1 29 1 14 1 240 1 142 1 34 1 269 2 189 1 344 2 106 2 273 1 171 1 224 2 149 2 249 2 
28 2 227 2 119 1 29 1 86 1 371 1 216 1 202 1 91 1 56 1 269 2 134 1 379 1 348 2 246 1 247 1 182 1 118 1 248 1 
28 1 227 1 29 1 119 1 86 1 371 1 216 1 202 1 56 1 269 1 134 1 284 1 348 2 246 1 247 1 118 1 248 1 
28 1 227 1 119 1 29 1 228 1 86 1 370 1 88 1 143 1 144 1 269 1 379 1 361 1 223 1 
28 1 227 1 119 1 29 1 86 1 371 1 216 1 202 1 91 1 56 1 269 1 134 1 379 1 348 2 246 1 247 1 118 1 248 1 
177 1 
218 1 97 1 170 1 323 1 315 1 41 1 54 1 
129 1 40 1 297 1 323 1 70 1 331 1 97 1 46 1 362 1 214 1 218 2 187 1 123 1 272 1 221 1 81 1 315 1 
129 12 227 3 228 10 323 8 88 3 89 3 41 1 230 2 92 1 329 2 96 2 97 9 180 2 331 6 182 1 235 2 288 2 11 1 184 6 241 6 343 2 186 1 187 5 105 2 190 1 293 1 108 2 60 2 251 2 18 2 297 4 112 2 255 1 70 4 160 2 362 4 303 2 163 3 27 2 28 3 119 4 29 3 214 5 215 1 310 2 120 2 218 8 269 3 123 4 170 1 221 3 223 1 81 5 315 2 
175 1 129 6 251 2 18 2 19 1 297 2 199 1 323 5 70 2 96 1 97 8 331 3 285 1 362 2 303 1 288 2 183 1 214 1 237 1 184 5 241 5 310 2 343 2 186 1 218 5 188 1 187 1 105 2 123 2 147 1 221 1 81 1 172 1 315 2 61 1 
251 2 18 1 297 1 323 2 70 1 204 1 96 1 231 1 97 2 362 1 23 1 212 1 365 1 214 1 265 1 31 1 343 2 271 1 270 1 123 1 81 1 224 1 193 1 17 1 352 1 149 1 127 1 249 1 
297 1 323 1 70 1 41 1 218 1 123 1 170 1 97 1 362 1 315 1 
288 2 129 10 251 2 18 2 184 5 323 5 241 5 310 2 343 2 218 5 329 1 105 2 96 1 331 5 97 5 
218 1 187 1 214 1 221 1 81 1 315 1 
176 1 227 4 228 1 297 2 323 2 69 1 88 1 70 1 131 1 97 2 362 2 361 1 303 2 74 1 28 4 119 1 29 1 214 3 341 1 186 2 144 1 269 4 187 4 123 2 190 1 221 2 293 2 223 2 81 3 
227 1 228 1 277 1 67 1 324 2 88 1 204 1 132 1 6 1 23 2 208 1 302 1 163 1 48 1 212 2 76 1 28 1 164 1 29 1 119 1 240 1 15 1 34 1 269 1 270 2 106 1 171 1 223 1 224 3 149 3 249 2 151 1 
129 4 184 2 297 1 323 2 241 2 70 1 186 1 218 4 123 1 331 2 97 1 362 1 303 1 315 2 100 1 
290 1 7 1 378 1 
290 1 7 1 378 1 
290 1 85 1 141 1 109 1 378 1 
290 1 7 1 378 1 
290 1 232 1 378 1 
290 1 232 1 378 1 
290 1 232 1 378 1 
290 1 378 1 
10 1 104 1 
164 2 365 1 18 1 153 1 66 1 103 1 240 4 324 4 343 1 42 3 358 4 132 2 179 1 271 1 231 1 106 8 302 2 171 2 100 1 319 2 
365 1 153 1 18 1 240 3 343 1 54 1 42 2 358 3 179 1 271 1 231 1 106 6 100 1 319 2 
288 1 164 1 18 1 66 1 240 2 324 2 310 1 343 1 130 1 42 2 132 1 358 2 105 1 106 4 302 1 171 1 319 1 
288 1 18 1 66 1 240 4 199 1 310 1 254 1 343 1 42 2 358 3 105 1 106 7 147 1 61 2 319 1 
153 1 18 3 66 4 199 2 324 4 254 1 42 9 358 11 132 2 179 1 231 2 302 2 100 1 288 2 365 2 164 2 103 2 240 12 310 2 343 3 242 1 271 1 105 2 106 23 345 1 126 1 171 2 61 2 319 5 
106 1 240 1 61 1 
358 1 106 1 199 1 
288 1 164 1 18 1 66 1 240 3 324 2 310 1 343 1 130 1 42 3 132 1 358 3 329 1 105 1 106 6 302 1 171 1 319 2 
1 1 175 1 18 2 66 1 19 1 199 1 324 2 42 2 132 1 358 6 285 1 302 1 288 2 164 1 237 1 240 6 310 2 343 2 105 2 106 12 147 1 171 1 172 1 61 1 319 1 
365 1 18 1 66 1 240 3 343 1 42 2 358 3 271 1 231 1 106 6 319 1 
365 1 164 1 153 1 66 1 103 1 240 2 324 2 42 2 358 1 132 1 179 1 231 1 106 3 126 1 302 1 171 1 319 1 
1 1 164 1 365 2 18 2 66 2 240 5 324 2 343 2 42 5 132 1 358 5 271 1 231 2 106 10 302 1 171 1 127 1 319 3 
1 1 164 1 66 1 324 2 310 1 343 1 42 1 132 1 358 2 106 2 302 1 171 1 
1 1 288 1 164 1 18 1 66 1 240 2 324 2 310 1 343 1 42 2 132 1 358 2 105 1 106 4 302 1 171 1 319 1 
1 1 164 3 365 1 66 1 103 1 354 1 240 2 324 6 42 2 132 3 358 1 231 1 106 3 126 1 302 3 171 3 319 1 
1 1 153 1 18 5 66 5 354 1 199 3 324 10 254 1 130 1 42 12 132 5 358 16 179 1 231 3 116 1 302 5 25 1 100 1 288 3 365 3 164 5 103 2 240 18 310 3 342 1 343 5 271 2 105 3 106 34 126 1 147 1 171 5 61 4 319 7 
1 1 18 1 153 1 199 1 324 2 42 2 132 1 358 4 179 1 231 1 285 1 302 1 100 1 164 1 365 1 240 4 343 1 271 1 106 8 147 1 171 1 61 1 319 2 
1 1 18 1 153 1 66 1 199 1 324 4 254 1 130 1 42 3 132 2 358 6 179 1 231 1 285 1 302 2 100 1 288 1 365 1 164 2 240 5 310 1 343 2 271 1 106 11 147 1 171 2 61 2 319 2 
175 1 1 1 153 1 18 3 66 1 19 1 199 1 324 6 130 1 42 4 132 3 358 9 179 1 231 1 285 1 302 3 100 1 288 2 365 1 164 3 237 1 103 1 240 10 310 2 343 3 271 1 105 2 106 19 147 1 171 3 172 1 61 1 319 3 
1 1 175 1 153 1 18 2 66 2 19 1 199 1 324 6 130 1 42 5 132 3 358 10 179 1 231 1 285 1 302 3 100 1 288 2 365 1 164 3 237 1 103 1 240 7 310 2 343 3 271 1 105 1 106 17 147 1 171 3 172 1 61 1 319 3 
1 1 18 1 153 1 199 1 324 2 42 2 132 1 358 4 179 1 231 1 285 1 302 1 100 1 164 1 365 1 240 4 343 1 271 1 106 8 147 1 171 1 61 1 319 2 
1 1 175 1 18 2 66 1 19 1 199 1 324 2 42 2 132 1 358 6 285 1 302 1 288 2 164 1 237 1 240 6 310 2 343 2 105 2 106 12 147 1 171 1 172 1 61 1 319 1 
175 1 1 1 153 1 18 2 66 2 19 1 199 1 324 8 130 1 42 5 132 4 358 10 179 1 231 1 285 1 302 4 100 1 288 2 365 1 164 4 237 1 103 2 240 8 310 2 343 3 271 1 105 1 106 18 147 1 171 4 172 1 61 1 319 3 
175 1 1 1 18 2 66 3 19 1 354 1 199 1 324 8 42 6 132 4 358 9 285 1 302 4 288 3 164 4 237 1 103 2 240 7 310 3 343 3 105 2 106 16 147 1 171 4 172 1 61 1 319 3 
365 3 18 1 153 2 66 3 240 4 343 1 42 6 358 3 179 1 271 1 231 3 106 7 319 3 
175 1 1 1 153 1 18 2 66 1 19 1 354 1 199 1 324 8 42 4 132 4 358 10 179 1 231 1 285 1 302 4 100 1 288 2 365 1 164 4 237 1 103 2 240 8 310 2 343 3 271 1 105 1 106 18 147 1 171 4 172 1 61 1 319 3 
312 1 330 1 252 1 48 1 224 1 149 1 249 1 
252 1 357 1 312 1 121 1 328 1 330 1 24 1 48 1 224 1 195 1 249 1 149 1 
144 1 28 1 269 1 227 1 119 1 29 1 228 1 361 1 223 1 88 1 54 1 
28 1 227 1 119 1 29 1 228 1 277 1 67 1 88 1 269 1 23 1 223 1 163 1 317 1 48 1 224 2 212 1 249 1 149 2 
227 1 228 3 277 1 67 1 88 2 356 1 23 1 163 2 48 1 212 2 28 1 29 1 119 1 80 1 269 1 293 1 108 1 317 1 224 2 60 1 149 2 249 2 17 1 
227 2 228 3 67 1 88 2 356 1 23 1 163 2 48 1 305 1 212 2 28 2 29 1 119 1 80 1 269 2 293 1 108 1 173 1 317 1 224 2 60 1 149 2 249 2 17 1 
227 3 228 4 112 1 88 1 89 1 180 1 163 1 211 1 210 1 28 3 29 1 214 2 119 1 218 1 187 1 269 3 293 1 81 2 223 1 108 1 315 1 173 1 60 1 
28 3 227 3 119 1 214 2 29 1 228 4 112 1 88 1 89 1 218 1 269 3 187 1 180 1 223 1 81 2 293 1 315 1 108 1 173 1 163 1 235 1 60 1 
28 1 269 1 227 1 119 1 29 1 155 1 
28 6 227 7 339 1 29 2 119 3 228 3 11 1 155 1 156 1 88 2 376 1 269 7 189 1 344 1 159 1 99 1 223 2 247 1 182 1 163 1 77 1 
84 1 227 1 18 1 153 1 228 1 277 1 67 1 324 4 88 1 42 2 358 3 132 2 179 1 231 1 22 1 302 2 208 2 23 1 182 1 163 1 100 1 48 2 212 1 28 1 364 1 365 1 164 2 119 1 29 1 14 1 240 3 15 1 343 1 142 1 377 1 34 2 271 1 269 1 106 6 171 2 317 1 224 2 381 1 319 2 149 2 249 1 151 1 
227 1 228 2 297 2 323 1 112 1 89 1 41 1 70 2 230 1 97 1 180 1 362 2 160 1 235 1 28 1 51 1 214 3 120 1 218 1 269 1 187 2 123 2 170 1 190 1 221 1 223 1 81 3 315 1 
28 2 227 2 29 1 119 2 228 2 11 1 112 1 155 1 88 1 92 1 269 2 182 1 163 1 
28 4 227 4 119 1 29 1 228 1 88 1 144 1 269 4 361 1 223 1 182 1 173 1 304 1 
28 2 227 2 29 1 119 2 228 1 88 1 376 1 269 2 159 1 107 1 293 1 286 1 163 1 318 1 
28 1 269 1 227 1 119 1 29 1 134 1 348 1 246 1 223 1 248 1 
28 2 227 2 29 1 119 1 296 1 228 1 88 1 269 2 189 1 182 1 247 1 
28 4 227 5 339 1 29 2 119 2 228 3 156 1 88 2 144 1 269 5 189 1 361 1 293 1 223 1 182 1 304 1 
28 4 227 5 339 1 29 2 119 2 228 3 113 1 88 2 144 1 269 5 189 1 361 1 293 1 223 1 182 1 304 1 
28 1 227 1 119 1 29 1 228 1 67 1 88 1 269 1 23 1 223 1 163 1 317 1 48 1 224 2 305 1 212 1 249 1 149 2 
28 1 227 1 29 1 119 2 228 1 11 1 88 1 376 1 269 1 159 1 293 1 163 1 77 1 
355 1 82 1 48 1 101 1 261 1 
51 1 214 2 355 2 374 1 356 1 3 1 218 1 80 1 180 1 45 1 72 1 81 2 315 1 82 2 117 1 48 1 101 2 17 1 261 1 
289 1 355 1 114 1 273 1 224 1 101 1 261 1 249 1 149 1 
45 1 3 1 261 1 
268 1 260 1 54 1 178 1 
268 1 321 1 260 1 222 1 178 1 306 1 37 1 
244 1 321 1 5 1 
268 1 291 2 321 3 298 1 260 1 222 1 372 1 137 1 178 1 83 1 306 3 37 1 
268 1 321 2 260 1 222 1 229 1 178 1 217 1 306 2 37 1 
268 1 71 1 353 1 134 1 321 1 298 1 348 1 222 1 202 1 306 1 37 1 
268 1 321 1 298 1 222 1 178 1 306 1 37 1 
321 1 298 1 260 1 222 1 178 2 306 1 37 1 
268 1 321 2 298 1 198 1 222 2 32 1 178 1 306 2 37 2 93 1 
321 3 298 1 229 2 375 1 178 1 268 2 71 1 145 1 260 1 222 1 181 1 37 1 306 3 
321 2 298 1 229 1 178 1 202 1 56 1 268 1 134 1 260 1 348 2 222 1 246 1 337 1 37 1 306 2 
321 4 298 1 229 2 178 1 217 1 268 2 71 1 145 1 207 1 260 1 222 2 37 2 306 4 
268 1 321 1 298 1 260 1 222 1 178 1 306 1 37 1 
64 1 321 4 229 2 178 2 268 3 71 1 291 1 145 1 260 2 222 1 137 1 83 1 306 4 37 1 
63 1 321 2 368 1 298 1 229 1 178 1 268 1 282 1 222 1 260 1 37 1 306 2 
321 3 298 1 178 1 268 1 169 1 291 2 222 1 260 1 137 2 83 1 37 1 306 3 
268 2 262 1 264 1 13 2 
258 1 321 1 298 1 222 1 306 1 37 1 
268 1 321 2 298 1 260 1 181 1 222 1 229 1 178 1 306 2 37 1 
380 1 
268 1 321 1 298 1 260 1 222 1 178 1 306 1 37 1 
268 1 291 1 321 3 298 1 181 1 260 1 222 1 229 1 178 1 306 3 37 1 
268 1 64 1 71 1 145 1 
268 1 178 1 

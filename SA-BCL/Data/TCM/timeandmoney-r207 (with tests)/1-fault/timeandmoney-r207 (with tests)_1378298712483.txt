#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 2 273 1 24 1 117 2 176 3 340 1 275 1 325 9 303 2 230 1 183 1 126 1 53 1 234 4 369 1 259 2 72 1 239 6 74 1 11 2 106 1 78 1 190 5 352 2 292 1 162 9 267 1 355 2 
223 2 273 1 24 1 117 2 176 3 340 1 275 1 325 9 303 2 230 1 183 1 126 1 53 1 234 4 369 1 259 2 72 1 239 6 74 1 11 2 106 1 78 1 190 5 352 2 292 1 162 9 267 1 355 2 
223 2 273 1 24 1 117 2 176 4 340 1 275 1 325 10 303 2 230 1 183 1 126 1 53 1 234 5 369 1 259 2 72 1 239 7 74 1 11 2 106 1 78 1 190 6 352 2 292 1 162 10 267 1 355 2 
223 2 273 1 24 1 117 2 176 2 340 1 325 7 303 2 230 1 183 1 126 1 53 1 234 3 369 1 259 2 72 1 239 4 74 1 11 2 106 1 78 1 190 4 352 1 292 1 162 7 267 1 355 2 
273 1 239 3 117 1 176 1 340 1 11 1 275 1 303 1 325 4 190 3 183 1 352 2 126 1 162 4 234 2 355 1 369 1 259 1 
223 1 273 1 117 1 74 1 11 1 36 1 325 2 303 1 190 1 305 1 126 1 162 2 62 1 355 1 369 1 72 1 
223 1 273 1 239 1 176 1 11 2 325 3 106 1 190 2 126 1 162 3 234 1 355 2 369 1 
223 1 273 1 117 1 176 3 340 1 275 1 325 9 303 1 230 1 304 1 254 1 183 1 126 1 234 4 369 1 259 1 239 7 11 2 106 1 78 1 190 5 352 2 162 9 355 2 
223 1 273 1 117 1 176 3 340 1 275 1 325 9 303 1 230 1 304 1 254 1 183 1 126 1 234 4 369 1 259 1 239 7 11 2 106 1 78 1 190 5 352 2 162 9 355 2 
152 1 148 1 264 1 
152 1 167 1 361 2 
348 2 146 2 362 1 288 1 354 2 129 2 309 2 138 2 
143 1 146 2 25 1 179 1 180 1 28 1 362 1 96 1 128 1 129 3 309 2 285 1 310 2 311 1 238 2 55 1 314 1 348 2 288 1 75 1 262 2 215 2 350 1 333 1 38 1 138 3 244 1 140 1 60 1 16 1 85 1 166 1 354 2 297 1 197 1 64 1 200 2 
348 1 146 1 362 1 354 1 129 1 309 1 131 1 27 1 57 1 138 1 
348 1 148 1 228 1 27 1 138 1 194 1 152 1 323 1 129 1 99 1 236 1 172 1 248 1 157 1 
146 1 348 1 148 1 228 1 27 1 138 1 194 2 152 1 323 2 354 1 309 1 129 1 99 1 236 1 157 1 
194 1 111 1 323 1 282 1 136 1 
194 2 152 1 111 1 148 1 323 2 42 1 136 1 324 1 
194 1 323 1 136 1 
146 1 348 1 119 1 27 1 57 1 138 1 194 1 362 1 111 1 323 1 354 1 309 1 129 1 131 1 
152 1 
194 2 152 1 111 1 148 1 323 2 284 1 136 1 324 1 
50 1 315 1 65 1 120 2 148 1 227 2 289 1 242 1 136 2 66 2 335 1 40 1 194 5 139 1 152 1 111 2 323 5 235 1 324 1 
288 1 264 1 
49 1 348 2 146 1 288 2 138 2 268 1 354 1 129 2 309 1 
67 1 77 1 279 1 
143 1 288 1 75 1 25 1 215 1 360 1 350 1 28 1 138 1 96 1 297 1 129 1 197 1 311 1 238 1 200 1 
143 1 146 1 348 1 75 1 25 1 204 1 215 1 350 1 279 1 28 1 138 2 96 1 367 1 297 1 309 1 129 2 197 1 311 1 238 1 200 1 
348 3 146 3 288 1 354 1 367 1 129 3 309 3 138 3 
348 1 146 1 129 1 309 1 27 1 57 1 138 1 
49 1 348 1 146 1 268 1 354 1 129 1 309 1 27 1 138 1 
143 1 146 3 301 1 25 1 204 1 228 1 28 1 27 1 362 1 96 1 367 1 128 1 99 1 129 4 309 3 285 1 236 1 310 2 311 1 238 1 157 1 133 1 55 1 348 3 288 1 75 1 262 1 215 1 350 1 38 1 138 4 194 1 140 1 60 1 16 1 85 1 268 1 323 1 166 1 354 2 297 1 197 1 64 1 200 1 
348 2 146 1 29 1 288 1 367 1 129 2 309 1 248 1 138 2 
133 1 146 3 348 3 204 1 228 1 27 1 138 3 194 1 152 1 196 1 268 1 323 1 354 1 367 2 309 3 129 3 99 1 236 1 157 1 
67 1 348 2 146 2 268 1 354 1 367 1 129 2 309 2 279 1 138 2 
143 1 288 1 25 1 75 1 215 1 350 1 28 1 138 1 96 1 297 1 129 1 197 1 311 1 238 1 200 1 
288 1 25 1 75 1 215 1 350 1 265 1 28 1 138 1 328 1 297 1 129 1 197 1 311 1 238 1 200 1 
300 1 174 1 179 2 251 1 279 2 67 2 185 1 153 1 128 1 154 1 100 1 310 2 31 1 262 4 77 2 160 1 38 2 140 1 379 1 60 1 16 1 245 1 166 1 64 1 
8 1 348 1 146 1 129 1 309 1 236 1 27 1 138 1 
146 4 348 5 288 1 261 1 204 1 138 5 29 1 364 1 268 1 354 1 367 2 309 4 129 5 248 1 
8 1 348 2 146 2 129 2 309 2 27 1 57 1 138 2 
266 1 316 1 
266 1 316 1 
208 1 155 1 
208 1 155 1 
208 1 155 1 
266 1 233 1 316 1 
266 1 233 1 316 1 
161 1 266 1 316 1 
266 2 58 1 316 2 208 1 155 1 211 1 
266 1 233 1 316 1 
266 1 316 1 30 1 
266 1 316 1 30 1 
266 1 316 1 30 1 
240 2 358 1 316 2 103 2 331 3 205 1 108 2 266 2 193 1 194 2 58 1 152 1 323 2 368 2 113 1 299 1 247 1 171 2 71 1 
146 2 178 1 302 1 205 1 345 1 368 1 309 2 129 2 260 1 33 1 240 1 348 2 316 1 288 1 103 1 331 1 138 2 266 1 161 1 194 1 323 1 43 1 272 1 171 1 
117 1 303 1 259 1 
117 1 62 1 303 1 
353 1 280 1 147 1 62 1 303 3 259 2 
353 1 84 1 280 1 62 1 303 2 259 1 
353 1 280 2 62 1 303 2 259 1 
46 1 47 1 120 1 148 1 302 1 276 2 227 1 361 3 66 1 185 1 127 2 152 2 235 3 187 1 100 1 315 2 12 1 160 1 136 1 375 2 40 1 194 5 111 4 379 1 323 5 141 1 167 1 43 1 272 1 22 1 114 1 324 1 
47 1 120 2 148 1 276 6 227 2 277 1 361 9 66 2 185 3 127 6 152 5 235 8 282 5 100 3 156 1 315 6 12 2 104 1 160 3 242 1 136 6 137 1 194 9 40 1 111 7 379 3 323 9 167 3 169 1 43 4 337 5 22 3 114 2 86 1 324 1 
46 1 120 1 148 1 276 2 227 1 361 4 66 1 185 1 152 3 127 2 235 3 187 1 100 1 315 2 12 1 160 1 242 1 375 1 194 3 111 2 379 1 323 3 167 2 43 1 114 1 22 1 
46 1 120 1 148 1 276 4 227 1 361 7 66 1 185 2 152 4 127 4 235 5 187 1 100 2 315 4 12 1 104 1 160 2 242 1 137 1 375 2 194 4 111 3 379 2 323 4 167 3 169 1 43 2 114 1 22 2 
75 1 263 1 264 1 
75 1 216 1 
378 1 
75 1 197 1 
320 1 75 3 17 1 263 2 197 1 28 1 
75 1 197 1 28 1 
224 1 75 1 
370 1 286 1 201 1 158 1 251 3 179 4 189 1 262 7 160 1 38 3 52 1 153 2 18 1 170 2 100 1 210 1 249 1 
370 1 286 1 201 1 158 1 251 3 179 4 189 1 262 7 160 1 38 3 52 1 153 2 18 1 170 2 100 1 210 1 249 1 
370 1 286 1 201 1 158 1 251 3 179 4 189 1 262 7 160 1 229 1 38 3 52 1 153 2 18 1 170 2 100 1 210 1 249 1 
144 1 201 1 88 3 179 16 251 10 326 1 3 1 185 3 52 1 153 5 128 1 210 2 310 2 100 4 370 1 286 2 158 2 189 1 262 31 160 4 38 15 290 4 220 1 60 1 379 3 16 1 380 1 221 1 166 1 18 2 170 3 222 1 22 3 249 5 
179 5 251 4 253 1 52 1 153 3 128 2 100 1 310 4 210 1 286 1 370 1 158 1 189 1 262 9 160 1 38 4 164 1 60 2 16 2 166 2 18 1 170 2 222 1 249 1 
223 1 273 1 117 1 1 1 147 1 250 1 325 2 303 2 126 1 184 1 363 1 308 1 311 1 369 1 259 1 238 1 346 1 239 1 35 1 11 1 215 1 332 1 350 1 190 1 162 2 293 1 62 1 355 1 270 1 200 1 
223 1 117 1 1 1 147 1 325 3 303 2 126 1 184 1 363 1 311 1 369 1 259 1 238 1 346 1 347 1 239 2 35 1 10 1 11 1 215 1 56 1 332 1 350 1 190 1 162 3 293 1 62 1 355 1 270 1 200 1 
223 1 117 1 147 1 325 2 303 2 126 1 184 1 363 1 311 1 369 1 238 1 259 1 346 1 239 2 347 1 35 1 215 1 56 1 332 1 350 1 190 1 162 2 293 1 62 1 200 1 
115 1 223 2 48 1 32 1 35 2 10 1 75 1 11 1 25 1 325 1 215 1 350 1 306 1 184 2 39 1 162 1 294 1 293 2 355 1 197 1 311 1 238 1 200 1 
223 1 273 1 117 1 1 1 147 1 325 1 303 2 184 1 363 1 308 1 311 1 259 1 238 1 346 1 35 1 11 1 215 1 56 1 332 1 350 1 162 1 293 1 62 1 355 1 270 1 200 1 
281 1 
148 1 342 1 4 1 306 1 206 1 94 1 152 2 97 2 5 4 99 1 311 1 213 1 157 1 348 1 315 2 12 1 215 2 105 1 350 1 351 2 319 2 59 1 323 5 167 2 19 2 63 1 172 1 324 3 120 1 25 2 227 1 228 1 124 2 327 1 361 2 125 1 27 1 66 1 68 1 70 1 235 2 129 1 236 1 238 2 75 1 136 6 138 1 39 1 194 5 40 1 376 2 377 2 197 1 248 1 200 2 
228 1 327 1 27 1 4 1 206 1 94 1 5 2 284 1 99 1 129 1 236 1 157 1 348 1 105 1 136 2 138 1 194 3 376 1 323 3 248 1 172 1 324 1 
348 1 148 1 228 1 105 1 327 1 136 1 4 1 27 1 138 1 206 1 194 3 94 1 152 1 323 3 5 3 284 1 19 1 129 1 99 1 236 1 172 1 248 1 324 1 157 1 
148 1 228 1 327 1 27 1 4 1 206 1 94 1 152 1 97 1 5 3 284 1 99 1 129 1 236 1 157 1 348 1 105 1 136 2 138 1 194 3 376 1 323 3 19 1 248 1 172 1 324 1 
148 5 4 1 206 1 94 1 152 5 255 1 97 4 5 6 99 1 157 1 213 1 312 1 348 1 315 1 105 1 351 2 319 2 323 5 167 2 19 4 172 1 324 3 120 1 228 1 227 1 124 2 327 1 27 1 66 1 70 1 235 1 284 1 129 1 236 1 34 1 136 7 81 1 138 1 82 1 194 5 40 1 376 4 377 2 248 1 
148 1 4 1 206 1 94 1 152 2 97 2 5 4 99 1 157 1 213 1 348 1 315 1 105 1 351 2 319 2 59 1 323 4 167 2 19 2 172 1 324 2 120 1 228 1 227 1 124 2 327 1 361 2 27 1 66 1 70 1 235 1 129 1 236 1 136 4 138 1 194 4 40 1 377 2 376 2 248 1 
120 1 148 1 227 1 228 1 124 2 327 1 27 1 4 1 66 1 206 1 94 1 152 1 70 1 97 2 235 1 5 4 99 1 129 1 236 1 213 1 157 1 348 1 34 1 315 1 105 1 136 4 351 2 319 2 81 1 138 1 82 1 194 4 40 1 376 2 377 2 323 4 167 2 19 2 248 1 172 1 324 2 
120 1 148 1 227 1 228 1 124 2 327 1 27 1 4 1 66 1 206 1 94 1 152 1 70 1 97 2 235 1 5 4 99 1 129 1 236 1 213 1 157 1 348 1 34 1 315 1 105 1 136 4 351 2 319 2 81 1 138 1 82 1 194 4 40 1 376 2 377 2 323 4 167 2 19 2 248 1 172 1 324 2 
120 1 148 1 227 1 228 1 90 1 327 1 150 2 361 2 27 1 4 1 66 1 206 1 231 1 94 1 152 1 97 2 235 1 5 4 99 1 129 1 236 1 213 1 157 1 348 1 315 1 105 1 136 4 241 2 319 2 81 1 191 1 138 1 194 4 40 1 376 2 377 2 323 4 19 2 248 1 172 1 324 2 
120 1 148 1 227 1 228 1 124 2 327 1 27 1 4 1 66 1 206 1 94 1 152 1 70 1 235 1 97 3 5 5 99 1 129 1 236 1 213 1 157 1 312 1 34 1 348 1 315 1 105 1 351 2 136 5 319 2 81 1 138 1 82 1 40 1 194 4 377 2 376 3 323 4 167 2 19 3 248 1 172 1 324 2 
120 1 148 1 227 1 228 1 124 2 327 1 27 1 4 1 66 1 206 1 94 1 152 1 70 1 235 1 97 3 5 5 99 1 129 1 236 1 213 1 157 1 312 1 34 1 348 1 315 1 105 1 351 2 136 5 319 2 81 1 138 1 82 1 40 1 194 4 377 2 376 3 323 4 167 2 19 3 248 1 172 1 324 2 
148 1 150 2 4 1 206 1 94 1 152 1 97 2 5 4 99 1 157 1 213 1 348 1 315 1 105 1 319 2 59 1 323 4 19 2 172 1 324 2 120 1 228 1 227 1 327 1 361 2 27 1 66 1 235 1 129 1 236 1 241 2 136 4 191 1 138 1 194 4 40 1 377 2 376 2 248 1 
370 1 174 1 158 1 288 2 179 3 251 2 189 1 262 6 77 1 160 1 264 1 279 1 38 3 67 1 52 1 153 2 140 1 16 1 60 1 166 1 170 1 128 1 100 1 210 1 310 2 64 1 
88 3 251 2 179 8 123 1 279 11 67 4 185 2 153 1 128 2 186 1 310 4 100 1 55 1 313 1 288 1 262 14 77 11 160 2 333 1 38 6 290 3 217 1 140 2 60 2 16 2 379 1 221 1 380 1 166 2 269 1 22 2 249 1 64 1 
143 1 146 1 25 1 204 1 179 1 360 1 28 1 67 1 96 1 367 1 186 1 129 2 309 1 128 1 311 1 310 2 238 1 55 1 348 1 288 1 75 1 215 1 262 2 350 1 192 1 373 1 333 1 138 2 38 1 140 1 16 1 60 1 166 1 297 1 197 1 21 1 200 1 64 1 
143 2 146 1 204 1 251 8 252 1 52 1 153 4 96 2 309 1 210 1 100 3 310 6 311 2 55 1 348 1 158 1 215 3 262 20 56 1 350 2 160 3 218 2 15 2 60 3 16 3 165 1 166 3 170 1 22 2 64 3 177 1 25 1 179 10 122 2 182 2 28 2 279 7 67 7 185 2 367 1 128 3 129 3 186 1 285 2 238 3 370 1 288 2 75 2 189 1 77 7 333 1 38 10 138 3 140 3 379 2 297 2 197 2 200 3 249 4 
116 1 145 1 174 1 146 1 89 1 25 2 250 1 179 1 149 1 306 1 257 1 367 1 207 1 129 1 309 1 128 2 311 2 310 4 238 7 55 1 102 1 348 1 314 2 75 3 215 8 262 2 56 1 350 2 333 1 138 1 38 1 39 1 140 2 60 2 16 2 166 2 197 2 200 8 64 2 
339 1 146 1 251 1 179 1 279 1 67 1 185 1 153 1 309 1 128 1 186 1 129 1 310 2 100 1 348 1 262 3 77 1 160 1 138 1 38 2 140 1 60 1 16 1 379 1 268 1 354 1 166 1 22 1 64 1 
174 1 251 1 179 2 262 2 77 1 160 1 279 1 67 1 185 1 140 1 16 1 60 1 245 1 166 1 128 1 310 2 249 1 64 1 
300 1 174 1 251 1 262 2 77 1 279 1 38 2 67 1 153 1 140 1 16 1 60 1 379 1 166 1 128 1 310 2 100 1 64 1 
174 1 179 2 251 2 279 2 67 2 185 1 153 1 128 1 310 2 100 1 262 4 77 2 160 1 38 2 140 1 60 1 16 1 379 1 166 1 22 1 64 1 249 1 
251 1 179 2 262 2 77 1 160 1 279 1 67 1 185 1 140 1 257 1 16 1 60 1 245 1 166 1 128 1 310 2 249 1 64 1 
300 1 251 1 262 2 77 1 279 1 38 2 67 1 153 1 140 1 257 1 16 1 60 1 379 1 166 1 128 1 310 2 100 1 64 1 
179 2 251 2 279 2 67 2 185 1 153 1 257 1 128 1 310 2 100 1 262 4 77 2 160 1 38 2 140 1 60 1 16 1 379 1 166 1 22 1 64 1 249 1 
179 2 251 2 279 2 67 2 185 1 153 1 128 1 310 2 100 1 262 4 77 2 160 1 38 2 140 1 60 1 16 1 379 1 166 1 22 1 64 1 249 1 
143 1 25 1 179 1 28 1 96 1 129 1 128 1 285 1 311 1 310 2 238 1 55 1 288 1 75 1 262 2 215 1 350 1 333 1 138 1 38 1 140 1 16 1 60 1 166 1 297 1 197 1 200 1 64 1 
25 1 179 1 28 1 328 1 129 1 128 1 311 1 310 2 238 1 212 1 55 1 288 1 75 1 262 2 215 1 350 1 265 1 333 1 138 1 38 1 140 1 16 1 60 1 166 1 297 1 197 1 200 1 64 1 
179 2 251 2 279 2 67 2 185 1 153 1 128 1 186 1 310 2 100 1 262 4 77 2 160 1 38 2 140 1 60 1 16 1 379 1 166 1 22 1 64 1 249 1 
143 1 251 2 179 2 250 1 279 2 28 1 67 2 185 1 153 1 96 1 129 1 128 1 285 1 100 1 311 1 310 2 238 1 75 1 262 4 215 1 77 2 160 1 350 1 38 2 138 1 218 1 140 1 379 1 16 1 60 1 166 1 297 1 197 1 22 1 249 1 200 1 64 1 
146 1 251 1 179 2 279 1 344 1 67 1 185 1 309 1 128 1 186 1 129 1 100 1 310 2 348 1 262 3 77 1 160 1 38 1 138 1 140 1 379 1 60 1 16 1 268 1 354 1 166 1 22 1 249 1 64 1 
88 1 179 9 251 6 253 1 185 3 153 3 128 2 237 2 310 4 100 3 188 1 7 1 134 1 349 1 262 19 76 1 160 3 290 2 38 10 219 1 163 2 60 2 16 2 379 3 221 1 380 1 166 2 22 3 199 1 249 3 
88 2 203 1 251 4 179 14 253 1 185 3 153 2 98 1 128 3 237 1 100 2 310 6 188 2 7 1 9 1 262 26 76 1 160 3 38 12 290 2 219 1 195 1 163 4 60 3 16 3 379 2 221 2 166 3 222 2 20 1 22 3 23 1 249 2 199 2 
88 3 203 1 251 8 253 1 52 1 153 4 98 1 100 5 310 6 210 1 7 1 9 1 214 1 349 1 158 1 262 41 160 5 219 1 163 4 16 3 60 3 221 3 166 3 170 1 222 1 20 1 22 4 23 1 179 20 185 4 128 3 237 1 188 1 370 1 189 1 76 1 38 21 290 4 195 1 379 4 380 1 249 4 199 2 
88 3 203 1 179 20 251 7 253 1 185 4 52 1 153 4 98 1 128 4 237 1 210 1 310 8 100 4 188 1 370 1 9 1 7 1 214 1 349 1 158 1 189 1 262 38 76 1 160 5 290 4 38 18 219 1 195 1 163 4 60 4 16 4 379 3 221 3 380 1 166 4 170 1 222 2 20 1 22 4 23 1 199 2 249 3 
88 4 203 1 179 27 251 14 123 2 253 1 185 7 52 1 153 7 98 1 128 2 237 1 210 1 310 4 100 8 188 1 370 1 9 1 7 1 158 1 189 1 262 52 76 1 160 8 290 4 38 25 219 1 195 1 163 4 60 2 16 2 379 7 221 2 380 2 166 2 170 1 222 1 20 1 22 7 23 1 199 1 249 7 
266 1 58 1 240 1 316 1 95 1 368 1 103 1 299 1 171 1 71 1 
161 1 260 1 
330 1 266 1 240 1 316 1 6 1 368 1 103 1 13 1 171 1 
240 1 316 1 103 1 331 2 205 1 108 1 266 1 193 1 194 1 58 1 152 1 323 1 368 1 113 1 299 1 247 1 171 1 71 1 
240 1 316 1 103 1 331 2 205 1 108 1 266 1 193 1 194 1 58 1 152 1 323 1 368 1 113 1 299 1 247 1 171 1 71 1 
240 1 316 1 103 1 331 2 205 1 108 1 266 1 193 1 194 1 58 1 152 1 323 1 368 1 113 1 299 1 247 1 171 1 71 1 
233 1 226 1 211 1 
233 1 226 1 211 1 
30 1 92 1 
30 1 211 1 92 1 
33 1 345 1 
146 2 178 1 302 1 345 1 368 1 129 2 309 2 260 1 33 1 240 1 348 2 316 1 288 1 103 1 331 1 108 1 138 2 193 1 266 1 161 1 194 1 321 1 111 1 323 1 43 1 272 1 171 1 
233 1 226 1 
30 1 211 1 92 1 
225 1 179 1 121 1 26 1 207 1 186 1 129 2 128 1 311 1 310 2 238 2 55 1 102 1 348 2 314 2 75 1 215 2 262 2 350 1 333 1 138 2 38 1 140 1 16 1 60 1 166 1 44 1 197 1 45 1 200 2 64 1 
117 1 35 1 1 1 147 1 250 1 303 2 215 2 56 1 350 1 332 1 372 1 110 1 109 1 363 1 62 1 311 1 259 1 238 2 200 2 
117 1 35 1 1 1 147 1 303 2 215 1 56 1 371 1 332 1 350 1 372 1 363 1 62 1 311 1 259 1 238 1 200 1 
32 1 35 1 75 1 25 1 215 1 350 1 306 1 110 1 39 1 69 1 197 1 311 1 238 1 200 1 
117 1 35 1 1 1 147 1 303 2 215 1 56 1 350 1 332 1 372 1 110 1 109 1 363 1 62 1 311 1 259 1 238 1 200 1 
336 1 
335 1 152 1 315 1 65 1 148 1 235 1 264 1 
120 1 148 1 227 1 124 1 361 1 66 1 152 2 70 1 235 1 315 1 351 1 136 1 40 1 194 1 323 1 167 1 324 1 
142 2 148 2 250 1 343 1 307 2 152 8 311 3 100 2 157 2 315 8 12 2 215 3 350 4 263 2 160 2 216 3 322 2 15 2 323 5 17 1 167 6 112 2 22 2 324 3 224 2 118 2 65 1 120 4 25 1 276 6 227 4 278 2 361 12 125 1 28 3 66 4 185 2 127 6 235 9 365 1 238 3 73 2 75 10 80 2 136 5 335 1 83 1 40 4 194 5 379 2 298 1 197 3 338 1 200 3 
88 1 120 2 148 2 276 5 227 2 361 6 125 1 66 2 185 2 127 5 152 5 235 8 98 1 100 2 73 1 9 1 315 5 12 1 37 1 160 2 136 1 290 1 194 1 40 2 195 1 379 2 323 1 221 1 168 1 167 3 112 2 20 1 22 2 324 1 23 1 
146 1 119 1 120 1 227 1 27 1 66 1 362 1 235 2 129 1 309 1 131 1 210 1 100 1 73 1 370 1 34 1 348 1 158 1 315 2 160 2 57 1 138 1 14 1 40 1 194 1 323 1 354 1 112 2 
120 1 65 1 315 1 148 1 227 1 66 1 335 1 40 1 152 1 235 1 
73 1 315 5 276 5 160 2 361 10 185 2 127 5 152 5 15 1 379 2 167 5 235 5 112 2 22 2 100 2 
194 1 152 1 148 1 323 1 136 1 324 1 
2 1 120 2 342 1 25 2 227 2 343 2 125 2 66 2 306 1 235 2 311 1 238 4 315 2 318 1 75 1 215 4 12 2 350 1 242 1 136 4 40 1 194 3 39 1 323 3 63 1 298 1 197 1 324 2 200 4 
143 1 146 2 25 1 28 1 362 1 96 1 128 1 129 3 309 2 285 1 310 2 311 1 238 1 55 1 348 2 288 1 75 1 262 1 215 1 350 1 38 1 138 3 140 1 60 1 85 1 16 1 166 1 354 2 297 1 197 1 200 1 64 1 
315 2 120 1 148 2 276 2 12 1 227 1 361 4 125 1 66 1 40 1 127 2 152 4 167 2 235 1 170 1 
240 1 368 1 357 1 
240 1 368 1 357 1 
232 1 240 1 345 1 368 1 299 1 
240 1 368 1 357 1 
240 1 368 1 271 1 
240 1 368 1 271 1 
240 1 368 1 271 1 
240 1 368 1 
266 1 316 1 
370 1 158 1 179 4 251 3 189 1 262 8 160 1 38 4 52 1 153 2 16 2 60 2 166 2 170 1 128 2 222 1 100 1 310 4 210 1 249 1 
370 1 52 1 153 2 158 1 179 3 251 2 189 1 262 6 170 1 160 1 264 1 100 1 210 1 38 3 
251 2 179 2 262 4 181 1 160 1 38 2 185 1 153 1 379 1 16 1 60 1 166 1 128 1 22 1 100 1 310 2 249 1 
88 1 179 3 251 2 262 7 160 1 290 2 38 4 185 1 153 1 379 1 221 1 380 1 22 1 100 1 249 1 
88 2 251 9 179 11 123 1 185 2 52 1 153 5 128 2 210 2 100 3 310 4 370 1 158 2 189 1 262 23 160 3 38 12 290 2 217 1 379 2 16 2 60 2 380 1 166 2 170 1 381 1 222 2 22 2 249 4 
262 1 38 1 290 1 
88 1 179 1 262 1 
179 3 251 3 262 6 181 1 160 1 38 3 185 1 15 1 153 2 60 1 16 1 379 1 166 1 128 1 22 1 310 2 100 1 249 1 
88 1 179 6 251 2 253 1 185 2 153 1 98 1 128 1 310 2 100 2 9 1 262 12 160 2 38 6 290 1 195 1 60 1 16 1 379 2 221 1 166 1 20 1 22 2 23 1 249 1 
370 1 158 1 179 3 251 2 262 6 160 1 38 3 153 1 100 1 210 1 249 1 
158 1 179 1 251 2 189 1 262 3 38 2 52 1 153 1 16 1 60 1 166 1 381 1 222 1 128 1 210 1 310 2 249 1 
370 1 158 2 251 5 179 5 262 10 160 2 253 1 38 5 14 1 153 3 60 1 16 1 166 1 128 1 310 2 210 2 100 2 249 2 
179 2 251 1 262 2 160 1 253 1 185 1 16 1 60 1 166 1 128 1 310 2 249 1 
251 2 179 2 262 4 160 1 253 1 38 2 185 1 153 1 379 1 16 1 60 1 166 1 128 1 22 1 100 1 310 2 249 1 
349 1 158 1 251 2 179 1 262 3 253 1 38 2 153 1 16 3 60 3 166 3 381 1 222 1 128 3 310 6 210 1 249 1 
88 3 179 16 251 12 326 1 3 1 181 1 253 1 185 3 52 1 153 7 128 5 210 3 310 10 100 5 370 2 349 1 158 3 189 1 262 34 160 5 38 18 290 4 220 1 60 5 16 5 379 3 221 1 380 1 166 5 170 1 381 1 222 2 22 3 249 5 
88 1 179 4 251 2 253 1 52 1 153 2 128 1 100 1 310 2 210 1 370 1 158 1 189 1 262 8 160 1 38 4 290 1 195 1 60 1 16 1 221 1 166 1 170 1 
88 1 179 6 251 3 181 1 253 1 185 1 52 1 153 2 128 2 100 1 210 1 310 4 370 1 158 1 189 1 262 11 160 2 38 5 290 2 195 1 60 2 16 2 221 1 380 1 166 2 170 1 22 1 249 1 
88 1 179 9 251 4 181 1 253 1 185 2 52 1 153 3 98 1 128 3 210 1 310 6 100 3 370 1 9 1 158 1 189 1 262 19 160 3 38 10 290 1 195 1 60 3 16 3 379 2 221 1 166 3 170 1 222 1 20 1 22 2 23 1 249 1 
88 1 179 10 251 5 181 1 253 1 185 2 52 1 153 3 98 1 128 3 210 1 310 6 100 2 370 1 9 1 158 1 189 1 262 17 160 3 38 7 290 1 195 1 60 3 16 3 379 1 221 1 166 3 170 1 222 1 20 1 22 2 23 1 249 2 
88 1 179 4 251 2 253 1 52 1 153 2 128 1 100 1 310 2 210 1 370 1 158 1 189 1 262 8 160 1 38 4 290 1 195 1 60 1 16 1 221 1 166 1 170 1 
88 1 179 6 251 2 253 1 185 2 153 1 98 1 128 1 310 2 100 2 9 1 262 12 160 2 38 6 290 1 195 1 60 1 16 1 379 2 221 1 166 1 20 1 22 2 23 1 249 1 
88 1 179 10 251 5 181 1 253 1 185 2 52 1 153 3 98 1 128 4 210 1 310 8 100 2 370 1 9 1 158 1 189 1 262 18 160 3 38 8 290 1 195 1 60 4 16 4 379 1 221 1 166 4 170 1 222 2 20 1 22 2 23 1 249 2 
88 1 179 9 251 6 253 1 185 3 153 3 98 1 128 4 310 8 100 2 9 1 349 1 262 16 160 3 38 7 290 1 195 1 60 4 16 4 379 2 221 1 166 4 222 2 20 1 22 3 23 1 249 3 
370 1 158 3 189 1 251 6 179 3 262 7 160 1 38 4 52 2 153 3 100 1 210 3 249 3 
88 1 179 10 251 4 253 1 185 2 52 1 153 3 98 1 128 4 210 1 310 8 100 2 370 1 9 1 349 1 158 1 189 1 262 18 160 3 38 8 290 1 195 1 60 4 16 4 379 1 221 1 166 4 170 1 222 2 20 1 22 2 23 1 249 1 
348 1 29 1 288 1 129 1 248 1 91 1 138 1 
132 1 348 1 288 1 135 1 91 1 138 1 93 1 29 1 283 1 129 1 248 1 173 1 
39 1 75 1 25 1 215 1 350 1 197 1 264 1 311 1 238 1 306 1 200 1 
143 1 146 1 348 1 288 1 75 1 25 1 215 1 350 1 28 1 138 2 367 1 297 1 309 1 129 2 197 1 311 1 238 1 200 1 
143 1 224 1 146 2 228 1 343 1 28 2 27 1 367 1 129 2 309 1 236 1 311 1 238 1 348 2 288 1 75 3 215 1 350 1 80 1 138 2 297 1 197 2 200 1 
224 1 146 2 228 1 343 1 28 2 27 1 256 1 367 1 129 2 309 1 236 1 311 1 238 2 348 2 288 1 75 3 215 2 350 1 265 1 80 1 138 2 297 1 197 2 200 2 
224 1 25 1 148 1 317 1 75 4 215 3 350 1 343 1 263 1 80 1 136 1 28 1 216 1 194 2 152 1 256 1 323 2 61 1 197 1 311 1 238 3 157 1 200 3 
224 1 25 1 148 1 75 4 215 3 350 1 343 1 263 1 80 1 136 1 28 1 216 1 194 2 152 1 322 1 256 1 323 2 197 1 311 1 238 3 157 1 200 3 
215 1 149 1 350 1 311 1 238 1 200 1 
116 1 145 1 314 1 102 1 89 1 25 2 75 3 250 1 149 1 215 7 159 1 56 1 350 3 107 1 28 1 41 1 17 1 197 2 311 2 238 6 200 7 
143 1 225 1 146 1 179 3 251 2 250 1 182 1 279 1 28 1 67 1 52 1 153 2 96 1 367 1 186 1 129 2 309 1 128 2 285 1 100 1 210 1 311 1 310 4 238 1 370 1 348 1 158 1 288 2 75 1 189 1 262 6 215 1 77 1 160 1 350 1 38 3 138 2 218 1 140 2 16 2 60 2 166 2 170 1 297 1 197 1 64 2 200 1 
142 1 65 1 120 2 148 1 25 1 227 2 278 1 66 2 307 1 152 1 235 1 238 1 157 1 315 1 75 2 215 1 263 1 136 2 216 1 335 1 40 2 194 3 322 1 111 1 323 3 298 1 324 1 200 1 
75 2 250 1 149 1 215 2 263 1 350 2 28 1 83 1 17 1 197 1 311 1 238 2 200 2 
39 1 295 1 256 1 75 1 25 1 250 1 215 4 350 1 197 1 311 1 238 4 306 1 200 4 
54 1 75 1 215 2 343 1 79 1 350 2 107 1 28 1 165 1 41 1 197 1 311 1 238 2 200 2 
117 1 363 1 25 1 62 1 303 1 215 1 350 1 311 1 238 1 200 1 
102 1 75 1 250 1 215 2 56 1 350 1 197 1 311 1 238 2 45 1 200 2 
116 1 102 1 89 1 25 1 75 3 250 1 215 5 343 1 350 2 306 1 39 1 295 1 197 2 311 2 238 4 200 5 
102 1 89 1 25 1 75 3 250 1 215 5 343 1 350 2 306 1 243 1 39 1 295 1 197 2 311 2 238 4 200 5 
146 1 348 1 288 1 75 1 25 1 215 1 350 1 265 1 28 1 138 2 367 1 297 1 309 1 129 2 197 1 311 1 238 1 200 1 
75 1 215 1 159 1 343 1 350 2 107 1 28 1 41 1 17 1 197 1 311 1 238 1 200 1 
87 1 101 1 288 1 258 1 209 1 
87 1 133 1 101 2 274 1 288 1 148 1 228 1 27 1 194 2 152 1 111 1 323 2 366 1 99 1 236 1 356 1 209 2 258 2 157 1 
87 1 101 1 348 1 121 1 26 1 138 1 44 1 129 1 209 1 
87 1 274 1 366 1 
126 1 264 1 190 1 369 1 
126 1 162 1 11 1 325 1 355 1 190 1 369 1 
223 1 184 1 162 1 
273 1 359 1 11 1 325 3 190 1 334 1 126 1 162 3 151 1 355 1 369 1 72 2 
352 1 126 1 239 1 162 2 11 1 325 2 355 1 190 1 369 1 
273 1 117 1 340 1 11 1 325 1 303 1 190 1 162 1 234 1 355 1 259 1 
126 1 273 1 162 1 11 1 325 1 355 1 190 1 
126 2 273 1 162 1 11 1 325 1 355 1 369 1 
273 1 202 1 0 1 11 2 325 2 190 1 374 1 126 1 162 2 355 2 
273 1 239 2 176 1 11 1 325 3 78 1 230 1 190 2 126 1 162 3 234 1 355 1 369 1 
273 1 239 1 117 1 11 1 147 1 303 2 325 2 51 1 190 1 126 1 162 2 62 1 355 1 369 1 259 1 
273 1 239 2 176 1 11 2 275 1 325 4 190 2 352 1 126 1 162 4 234 1 355 2 369 1 
126 1 273 1 162 1 11 1 325 1 355 1 190 1 369 1 
239 2 176 1 359 1 11 1 325 4 190 3 291 1 126 2 162 4 151 1 234 1 355 1 369 2 72 1 
273 1 239 1 175 1 11 1 325 2 190 1 304 1 126 1 162 2 355 1 130 1 369 1 
126 1 273 1 162 3 151 2 359 1 246 1 11 1 325 3 355 1 190 1 369 1 72 2 
329 1 296 1 190 2 198 2 
273 1 162 1 287 1 11 1 325 1 355 1 
126 1 273 1 239 1 162 2 11 1 325 2 355 1 78 1 190 1 369 1 
341 1 
126 1 273 1 162 1 11 1 325 1 355 1 190 1 369 1 
273 1 239 1 11 1 325 3 78 1 190 1 126 1 162 3 355 1 369 1 72 1 
291 1 234 1 176 1 190 1 
126 1 190 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
184 1 256 9 219 1 142 6 75 3 120 1 123 1 243 1 294 1 79 5 80 2 226 2 326 1 150 4 127 1 371 2 328 1 12 2 329 9 375 1 176 2 175 2 376 1 179 1 251 1 132 2 252 1 212 1 
184 1 256 9 219 1 142 6 75 3 120 1 123 1 243 1 294 1 79 5 80 2 226 2 326 1 150 4 127 1 371 2 328 1 329 9 12 2 375 1 176 2 175 2 376 1 179 1 251 1 132 2 252 1 212 1 
184 1 256 10 219 1 142 7 75 4 120 1 123 1 243 1 294 1 79 6 80 2 226 2 326 1 150 5 127 1 371 2 328 1 329 10 12 2 375 1 176 2 175 2 376 1 179 1 251 1 132 2 252 1 212 1 
184 1 256 7 219 1 142 4 75 2 120 1 123 1 243 1 294 1 79 4 80 2 226 2 150 3 127 1 371 2 328 1 329 7 12 1 375 1 176 2 175 2 376 1 179 1 251 1 132 2 252 1 212 1 
79 3 80 1 226 1 256 4 326 1 150 2 127 1 371 1 329 4 12 2 375 1 175 1 142 3 75 1 132 1 252 1 212 1 243 1 
79 1 80 1 256 2 127 1 371 1 113 1 329 2 175 1 176 1 349 1 179 1 251 1 132 1 38 1 212 1 243 1 
79 2 256 3 150 1 127 1 371 2 328 1 329 3 176 1 142 1 75 1 132 2 212 1 243 1 
79 5 80 1 226 1 256 9 326 1 150 4 127 1 371 2 328 1 12 2 329 9 375 1 175 1 376 1 84 1 176 1 142 7 75 3 132 2 354 1 252 1 212 1 123 1 243 1 
79 5 80 1 226 1 256 9 326 1 150 4 127 1 371 2 328 1 12 2 329 9 375 1 175 1 376 1 84 1 176 1 142 7 75 3 132 2 354 1 252 1 212 1 123 1 243 1 
362 1 229 1 237 1 
311 1 229 1 224 2 
238 1 55 2 26 2 234 2 57 2 63 2 360 2 22 1 
309 1 214 1 183 1 26 2 217 1 360 2 317 1 189 2 238 1 4 1 117 2 193 1 240 1 6 1 53 1 145 1 78 1 55 3 147 2 10 1 228 1 230 1 298 2 152 1 129 1 57 2 302 1 98 1 348 1 332 1 15 2 250 1 234 3 378 1 63 2 22 1 254 1 
361 1 238 1 55 1 26 1 345 1 234 1 57 1 63 1 360 1 41 1 
368 1 55 1 26 1 229 1 110 1 237 1 29 1 361 1 239 1 263 1 180 1 234 1 143 1 342 1 
368 2 55 1 26 1 229 1 110 1 237 1 57 1 360 1 29 1 361 1 263 1 180 2 234 1 63 1 342 1 
368 1 180 1 297 1 174 1 195 1 
368 2 72 1 180 2 229 1 297 1 237 1 195 1 380 1 
368 1 180 1 297 1 
368 1 55 1 26 1 215 1 345 1 57 1 360 1 361 1 238 1 180 1 234 1 195 1 63 1 41 1 
229 1 
368 2 85 1 180 2 229 1 297 1 237 1 195 1 380 1 
134 1 26 1 310 2 215 1 137 1 109 2 237 2 258 1 360 1 361 1 238 1 286 1 116 5 195 2 364 2 269 1 93 1 198 4 367 2 368 5 55 1 245 1 172 2 345 1 297 2 229 2 57 1 99 2 180 5 36 1 18 1 353 1 61 1 234 1 63 1 380 1 41 1 381 1 
362 1 22 1 
55 2 26 2 57 1 360 1 249 1 234 2 63 1 278 1 22 2 
17 1 241 1 94 1 
55 1 147 1 183 1 230 1 152 1 129 1 317 1 15 1 117 1 250 1 234 1 378 1 21 1 6 1 22 1 78 1 
183 1 55 2 147 1 26 1 230 1 152 1 129 1 57 1 138 1 317 1 15 1 17 1 117 1 250 1 293 1 378 1 234 2 63 1 6 1 78 1 
55 3 26 3 293 1 234 3 57 3 63 3 360 1 22 1 
361 1 55 1 26 1 234 1 57 1 63 1 41 1 
361 1 55 1 26 1 249 1 234 1 57 1 63 1 278 1 360 1 
309 1 183 1 26 3 110 1 360 2 138 1 317 1 29 1 189 2 3 1 361 1 238 1 263 1 117 1 265 1 293 1 240 1 6 1 342 1 53 1 145 1 78 1 368 1 55 4 147 1 10 1 228 1 230 1 298 1 152 1 129 1 57 3 302 1 348 1 332 1 15 1 180 1 249 1 250 1 378 1 234 4 63 3 22 1 254 1 
239 1 55 2 26 2 293 1 234 2 57 1 63 1 22 1 139 1 
368 1 55 3 26 3 229 1 110 1 57 3 360 1 138 1 29 1 361 1 3 1 180 1 263 1 249 1 293 2 234 3 268 1 63 3 342 1 
55 2 26 2 57 2 360 1 17 1 249 1 293 1 234 2 241 1 63 2 
55 1 147 1 183 1 230 1 152 1 129 1 317 1 15 1 117 1 250 1 234 1 378 1 6 1 22 1 78 1 
55 1 147 1 183 1 257 1 230 1 129 1 317 1 15 1 117 1 209 1 250 1 234 1 378 1 22 1 78 1 
43 1 309 2 163 1 28 1 220 1 189 2 260 1 261 1 193 2 241 2 364 1 367 1 94 2 145 1 325 1 10 1 298 4 302 1 348 1 332 1 178 1 17 2 333 1 254 1 
361 1 55 1 26 1 227 1 110 1 234 1 57 1 63 1 
55 5 135 1 26 5 171 1 57 4 360 1 139 1 138 1 239 1 249 1 293 2 234 5 63 4 22 1 
361 1 55 2 227 1 26 2 234 2 57 2 63 2 41 1 
324 1 19 1 
324 1 19 1 
271 1 363 1 
271 1 363 1 
271 1 363 1 
324 1 19 1 266 1 
324 1 19 1 266 1 
324 1 19 1 103 1 
324 2 67 1 271 1 19 2 363 1 236 1 
324 1 19 1 266 1 
324 1 19 1 164 1 
324 1 19 1 164 1 
324 1 19 1 164 1 
324 2 368 2 67 1 213 2 33 1 229 1 160 2 111 1 313 1 373 3 204 2 284 1 70 1 16 2 287 2 264 1 180 2 73 1 19 2 
31 1 368 1 324 1 213 1 55 2 26 2 216 1 337 1 160 1 373 1 57 2 204 1 330 1 35 1 350 1 287 1 73 1 180 1 19 1 234 2 63 2 103 1 365 1 22 1 
80 1 226 1 175 1 
349 1 80 1 175 1 
349 1 226 2 159 1 203 1 64 1 175 3 
349 1 226 1 159 1 312 1 203 1 175 2 
349 1 226 1 159 1 203 2 175 2 
308 2 310 1 311 1 216 1 109 1 337 1 237 1 28 1 116 2 292 1 195 4 364 1 122 1 365 1 224 3 367 1 198 3 368 5 95 2 296 1 325 1 297 1 229 2 151 1 301 2 99 1 180 5 208 1 101 1 181 1 380 1 381 1 
308 6 310 2 311 3 109 2 337 4 237 1 258 1 28 3 116 6 292 3 321 1 194 1 47 1 195 7 49 1 364 3 224 9 367 3 198 8 368 9 95 6 325 3 32 5 297 6 229 5 174 5 151 1 59 1 99 2 180 9 208 2 181 2 307 1 380 1 381 1 
308 2 310 1 311 2 109 1 337 1 237 1 258 1 28 1 116 2 292 1 195 2 364 1 198 3 367 1 224 4 368 3 296 1 95 2 325 1 229 3 301 1 99 1 180 3 208 1 101 1 181 1 
308 4 310 1 311 3 109 1 337 2 237 1 258 1 28 2 116 4 292 2 321 1 194 1 195 3 364 2 224 7 198 5 367 2 368 4 95 4 296 1 325 2 229 4 301 2 59 1 99 1 180 4 208 1 101 1 181 1 
362 1 196 1 78 1 
78 1 42 1 
338 1 
183 1 78 1 
183 1 244 1 129 1 112 1 196 2 78 3 
183 1 129 1 78 1 
27 1 78 1 
309 3 245 1 137 1 298 7 327 1 115 1 220 3 261 2 166 1 291 2 18 1 193 4 379 1 305 1 364 1 7 1 367 1 
309 3 245 1 137 1 298 7 327 1 115 1 220 3 261 2 166 1 291 2 18 1 193 4 379 1 305 1 364 1 7 1 367 1 
309 3 245 1 137 1 298 7 327 1 82 1 115 1 220 3 261 2 166 1 291 2 18 1 193 4 379 1 305 1 364 1 7 1 367 1 
309 15 336 1 137 2 115 1 28 3 220 10 189 2 166 2 261 5 291 3 292 3 193 16 267 1 50 3 364 4 7 1 323 4 367 4 145 1 8 1 369 1 325 3 245 1 200 1 344 1 298 31 327 5 302 1 348 1 18 2 305 1 379 2 254 1 65 1 
309 4 137 1 220 4 189 4 166 1 261 3 291 2 193 5 364 1 7 1 367 1 54 1 145 2 369 1 245 1 298 9 327 1 302 2 348 2 18 1 379 1 305 1 254 2 255 1 
106 1 158 1 256 2 339 1 187 1 282 1 142 1 30 1 117 1 243 1 79 1 124 1 80 1 147 1 226 1 127 1 371 1 83 1 329 2 176 1 175 2 15 1 349 1 207 1 250 1 378 1 132 1 37 1 212 1 64 1 
106 1 158 1 68 1 256 3 339 1 187 1 161 1 142 2 30 1 117 1 243 1 79 1 124 1 80 1 147 1 226 1 371 1 83 1 329 3 176 1 175 2 15 1 14 1 349 1 250 1 378 1 132 1 37 1 212 1 64 1 
158 1 68 1 256 2 187 1 161 1 142 2 30 1 117 1 243 1 79 1 124 1 147 1 80 1 226 1 83 1 329 2 176 1 175 2 15 1 349 1 250 1 378 1 37 1 212 1 64 1 
158 2 183 1 147 1 256 1 230 1 347 1 371 1 372 1 187 2 329 1 83 2 176 2 318 1 14 1 15 1 74 1 117 1 60 1 250 1 378 1 132 1 253 1 78 1 
106 1 158 1 68 1 256 1 339 1 187 1 30 1 117 1 124 1 80 1 147 1 226 1 127 1 371 1 83 1 329 1 176 1 175 2 15 1 349 1 207 1 250 1 378 1 132 1 37 1 64 1 
69 1 
183 1 136 2 237 1 186 1 239 1 91 2 191 1 48 1 143 1 342 1 198 2 147 2 56 1 55 1 297 6 347 1 248 2 99 1 15 2 352 4 250 1 102 1 62 1 355 1 25 1 310 1 356 1 26 1 311 2 109 1 110 1 315 2 29 1 361 1 116 2 74 1 117 2 263 1 77 1 224 2 78 1 368 5 229 2 34 2 230 2 231 1 274 2 374 2 180 5 87 1 181 1 378 1 234 1 380 3 381 1 
368 3 25 1 56 1 55 1 356 1 26 1 297 2 110 1 315 1 29 1 361 1 239 1 85 1 191 1 352 2 263 1 180 3 234 1 143 1 342 1 380 1 355 1 
25 1 26 1 356 1 110 1 237 1 29 1 361 1 239 1 191 1 263 1 143 1 342 1 368 3 55 1 56 1 297 1 229 1 374 1 85 1 180 3 352 3 234 1 380 1 355 1 
25 1 26 1 356 1 110 1 237 1 315 1 29 1 361 1 239 1 91 1 191 1 263 1 143 1 342 1 368 3 55 1 56 1 297 2 229 1 374 1 85 1 180 3 352 3 234 1 380 1 355 1 
136 2 237 5 90 1 239 1 91 4 191 1 143 1 342 1 198 1 55 1 56 1 297 7 248 2 99 1 352 6 20 1 102 1 62 1 104 1 355 1 25 1 356 1 26 1 310 1 311 2 110 1 109 1 315 4 29 1 361 1 116 1 263 1 368 5 370 1 81 1 229 5 34 2 274 2 374 4 85 1 180 5 234 1 380 3 381 1 
136 2 237 1 239 1 91 2 191 1 143 1 342 1 198 1 55 1 56 1 297 4 248 2 99 1 352 4 102 1 62 1 355 1 25 1 26 1 310 1 356 1 311 2 110 1 109 1 315 2 29 1 361 1 116 1 263 1 77 1 224 2 368 4 229 2 34 2 274 2 374 2 180 4 234 1 380 2 381 1 
25 1 310 1 26 1 356 1 136 2 311 2 110 1 109 1 237 1 315 2 29 1 361 1 90 1 239 1 91 2 116 1 191 1 263 1 143 1 342 1 198 1 368 4 55 1 56 1 81 1 229 1 297 4 34 2 274 2 374 2 248 2 99 1 180 4 352 4 20 1 102 1 234 1 62 1 380 2 355 1 381 1 
25 1 310 1 26 1 356 1 136 2 311 2 110 1 109 1 237 1 315 2 29 1 361 1 90 1 239 1 91 2 116 1 191 1 263 1 143 1 342 1 198 1 368 4 55 1 56 1 81 1 229 1 297 4 34 2 274 2 374 2 248 2 99 1 180 4 352 4 20 1 102 1 234 1 62 1 380 2 355 1 381 1 
25 1 310 1 26 1 356 1 185 2 110 1 109 1 358 2 237 1 315 2 29 1 361 1 239 1 91 2 116 1 191 1 263 1 143 1 342 1 224 2 198 1 368 4 55 1 56 1 199 1 81 1 229 1 297 4 34 2 300 1 374 2 248 2 99 1 13 1 180 4 352 4 102 1 234 1 380 2 355 1 381 1 
25 1 310 1 26 1 356 1 136 2 311 2 109 1 110 1 237 1 315 3 29 1 90 1 361 1 239 1 91 3 116 1 191 1 263 1 143 1 342 1 198 1 368 4 55 1 56 1 370 1 81 1 229 1 297 5 34 2 274 2 374 3 248 2 99 1 180 4 352 5 20 1 102 1 234 1 62 1 380 2 381 1 355 1 
25 1 310 1 26 1 356 1 136 2 311 2 109 1 110 1 237 1 315 3 29 1 90 1 361 1 239 1 91 3 116 1 191 1 263 1 143 1 342 1 198 1 368 4 55 1 56 1 370 1 81 1 229 1 297 5 34 2 274 2 374 3 248 2 99 1 180 4 352 5 20 1 102 1 234 1 62 1 380 2 381 1 355 1 
25 1 356 1 310 1 26 1 185 2 109 1 110 1 358 2 237 1 315 2 29 1 361 1 239 1 91 2 116 1 191 1 263 1 77 1 143 1 342 1 224 2 198 1 368 4 56 1 55 1 199 1 229 1 297 4 34 2 374 2 248 2 99 1 180 4 352 4 102 1 234 1 380 2 355 1 381 1 
43 1 309 3 137 1 220 2 189 2 261 2 362 1 291 1 193 3 241 1 364 1 7 1 367 1 94 1 145 1 10 1 245 1 298 6 302 1 348 1 332 1 17 1 18 1 305 1 254 1 22 2 
309 6 28 2 220 2 189 4 261 1 292 2 193 8 241 4 50 3 364 1 144 1 53 1 323 3 94 11 367 2 225 1 145 2 8 1 295 1 325 1 10 2 298 14 327 1 232 1 302 2 98 1 348 2 332 1 17 11 233 1 22 1 254 2 65 1 
66 1 309 1 183 1 26 1 138 1 317 1 189 2 262 1 117 1 293 1 193 1 241 1 6 1 144 1 53 1 78 1 145 1 147 1 55 2 10 1 125 1 230 1 152 1 298 2 129 1 57 1 302 1 348 1 98 1 15 1 332 1 250 1 378 1 234 2 21 1 63 1 22 1 254 1 
183 2 137 1 138 1 189 6 291 1 292 2 341 2 293 1 193 10 241 7 7 1 144 1 6 2 242 1 53 1 94 7 145 3 147 3 55 3 9 2 10 3 245 1 149 1 298 20 152 2 57 1 302 3 247 2 205 1 98 1 348 3 15 3 17 7 18 1 250 2 305 1 63 1 22 2 254 3 309 10 68 1 26 1 108 2 28 2 317 2 220 8 261 4 117 3 364 3 367 3 78 2 325 2 228 2 230 1 327 4 129 2 332 3 234 3 378 2 
43 1 309 1 214 2 183 2 68 1 26 1 218 1 282 1 189 4 165 1 340 1 117 7 74 1 293 1 193 1 121 1 53 1 78 3 145 2 55 1 147 8 10 2 11 1 230 2 298 2 347 1 57 1 302 2 348 2 98 1 15 8 332 2 250 2 153 1 304 1 234 1 378 2 63 1 254 2 
309 2 26 1 360 1 28 1 220 1 189 2 261 1 292 1 193 1 169 1 241 1 364 1 144 1 94 1 367 1 145 1 55 1 325 1 10 1 298 3 57 1 302 1 348 1 332 1 17 1 249 1 234 1 63 1 254 1 
43 1 10 1 298 2 327 1 302 1 28 1 220 1 348 1 189 2 332 1 178 1 17 1 193 2 241 1 94 1 254 1 367 1 145 1 
43 1 309 2 325 1 10 1 298 2 302 1 220 1 348 1 189 2 332 1 260 1 261 1 17 1 241 1 364 1 94 1 254 1 145 1 
43 1 309 2 325 1 10 1 298 4 327 1 302 1 28 1 220 2 348 1 189 2 332 1 261 1 17 2 292 1 193 2 241 2 364 1 94 2 254 1 367 1 145 1 
10 1 298 2 327 1 218 1 302 1 28 1 220 1 348 1 189 2 332 1 178 1 17 1 193 2 241 1 94 1 254 1 367 1 145 1 
309 2 325 1 10 1 298 2 218 1 302 1 220 1 348 1 189 2 332 1 260 1 261 1 17 1 241 1 364 1 94 1 254 1 145 1 
309 2 325 1 10 1 298 4 327 1 218 1 302 1 28 1 220 2 348 1 189 2 332 1 261 1 17 2 292 1 193 2 241 2 364 1 94 2 254 1 367 1 145 1 
309 2 325 1 10 1 298 4 327 1 302 1 28 1 220 2 348 1 189 2 332 1 261 1 17 2 292 1 193 2 241 2 364 1 94 2 254 1 367 1 145 1 
309 1 183 1 317 1 189 2 117 1 193 1 6 1 53 1 78 1 145 1 147 1 55 1 10 1 228 1 230 1 298 2 152 1 129 1 302 1 98 1 348 1 15 1 332 1 250 1 378 1 234 1 22 1 254 1 
309 1 183 1 257 1 317 1 189 2 117 1 193 1 53 1 78 1 145 1 147 1 55 1 10 1 230 1 298 2 129 1 302 1 98 1 348 1 15 1 332 1 250 1 209 1 378 1 210 1 234 1 22 1 254 1 
309 2 325 1 10 1 298 4 327 1 302 1 28 1 220 2 348 1 189 2 332 1 261 1 17 2 292 1 193 2 241 2 364 1 144 1 94 2 254 1 367 1 145 1 
309 2 183 1 282 1 28 1 220 2 317 1 189 2 261 1 117 1 292 1 341 1 193 2 241 2 364 1 6 1 94 2 367 1 78 1 145 1 325 1 147 1 55 1 10 1 228 1 298 4 152 1 327 1 129 1 302 1 348 1 15 1 332 1 17 2 250 1 378 1 234 1 254 1 
309 1 26 1 360 1 28 1 220 1 189 2 292 1 193 2 241 1 364 1 144 1 367 1 94 1 145 1 325 1 55 1 10 1 148 1 298 3 327 1 57 1 302 1 348 1 332 1 17 1 249 1 234 1 63 1 254 1 
309 10 89 1 28 3 220 6 189 4 92 1 261 3 290 1 292 3 193 9 322 1 221 2 50 1 364 3 323 2 367 3 145 2 8 1 325 3 202 1 246 1 272 2 298 19 327 3 302 2 348 2 86 1 254 2 255 1 65 1 
309 12 0 1 1 1 89 1 259 1 28 3 220 4 189 6 261 2 167 1 290 2 292 3 193 14 322 2 364 2 221 4 50 2 323 2 367 3 145 3 146 1 369 2 325 2 246 1 272 1 298 26 327 2 302 3 348 3 130 1 86 1 254 3 255 1 65 2 
0 1 309 21 137 1 1 1 283 1 259 1 89 1 28 4 220 8 189 6 261 4 167 1 291 1 290 1 292 4 193 20 322 2 221 4 50 3 364 5 7 1 323 4 367 5 145 3 8 1 146 1 369 1 325 4 245 1 202 1 246 1 272 1 298 41 327 4 302 3 348 3 130 1 86 1 18 1 305 1 254 3 255 1 65 3 
0 1 309 18 137 1 1 1 283 1 259 1 89 1 28 4 220 7 189 8 261 4 167 1 291 1 290 1 292 4 193 20 322 2 221 4 50 3 364 4 7 1 323 4 367 5 145 4 8 1 146 1 369 2 325 3 245 1 202 1 246 1 272 1 298 38 327 3 302 4 348 4 130 1 86 1 18 1 305 1 254 4 255 1 65 3 
0 1 309 25 137 1 1 1 259 1 89 1 28 7 220 14 189 4 261 7 167 1 291 1 290 1 292 7 193 27 322 1 221 4 50 4 364 8 7 1 323 4 367 8 145 2 8 2 146 1 369 1 325 7 245 1 246 1 272 1 298 52 327 7 232 2 302 2 348 2 130 1 86 1 18 1 305 1 254 2 255 1 65 2 
324 1 67 1 213 1 287 1 19 1 160 1 111 1 204 1 284 1 23 1 
31 1 103 1 
324 1 213 1 131 1 287 1 19 1 160 1 5 1 211 1 204 1 
368 1 324 1 67 1 213 1 33 1 229 1 160 1 111 1 313 1 373 2 204 1 284 1 70 1 16 1 287 1 73 1 180 1 19 1 
368 1 324 1 67 1 213 1 33 1 229 1 160 1 111 1 313 1 373 2 204 1 284 1 70 1 16 1 287 1 73 1 180 1 19 1 
368 1 324 1 67 1 213 1 33 1 229 1 160 1 111 1 313 1 373 2 204 1 284 1 70 1 16 1 287 1 73 1 180 1 19 1 
320 1 266 1 236 1 
320 1 266 1 236 1 
277 1 164 1 
277 1 236 1 164 1 
35 1 330 1 
213 1 26 2 216 1 160 1 337 1 287 1 195 1 365 1 368 1 324 1 31 1 55 2 33 1 373 1 57 2 204 1 330 1 35 1 350 1 16 1 180 1 19 1 234 2 63 2 103 1 22 1 281 1 
320 1 266 1 
277 1 236 1 164 1 
309 1 214 2 183 1 26 2 88 1 189 2 117 2 193 1 121 1 144 1 197 1 53 1 78 1 145 1 147 2 55 2 10 1 298 2 302 1 96 1 348 1 98 1 15 2 332 1 250 1 154 1 153 1 378 1 234 2 157 1 254 1 
106 1 124 1 80 1 147 2 226 1 68 1 201 1 187 1 282 1 175 2 349 1 15 2 319 1 117 2 118 1 250 1 378 1 37 1 64 1 
106 1 124 1 80 1 147 1 226 1 68 1 187 1 162 1 175 2 349 1 15 1 117 1 118 1 250 1 378 1 37 1 64 1 
183 1 147 1 230 1 201 1 347 1 187 1 318 1 15 1 117 1 74 1 250 1 378 1 52 1 78 1 
106 1 124 1 80 1 147 1 226 1 68 1 201 1 187 1 175 2 349 1 15 1 319 1 117 1 118 1 250 1 378 1 37 1 64 1 
140 1 
116 1 286 1 362 1 229 1 237 1 353 1 198 1 
310 1 311 1 136 1 109 1 237 1 116 1 198 1 224 1 368 1 229 2 297 1 274 1 99 1 180 1 62 1 380 1 381 1 
133 1 183 3 237 2 2 1 282 1 141 1 190 1 286 1 292 2 51 2 196 2 198 9 95 6 147 3 244 1 297 5 299 2 247 2 99 4 15 3 250 4 353 1 61 2 308 6 310 4 27 2 311 6 109 4 28 2 316 1 71 2 116 8 117 3 263 2 364 2 224 12 367 2 78 10 368 5 325 2 172 2 229 8 230 1 128 2 129 3 180 5 87 1 181 2 334 2 378 3 40 2 380 3 42 3 381 4 
308 5 0 1 44 1 310 2 311 3 109 2 1 1 237 2 259 1 28 2 167 1 192 1 116 5 292 2 50 1 364 2 224 6 198 8 323 1 367 2 368 1 95 5 325 2 172 2 297 1 229 5 99 2 130 1 180 1 87 1 181 1 61 1 380 1 65 1 381 2 
310 1 26 1 137 1 215 1 109 1 360 1 361 1 90 1 238 1 116 2 364 1 367 2 198 2 368 1 55 1 172 2 245 1 345 1 57 1 99 1 36 1 180 1 18 1 61 1 234 1 63 1 41 1 381 1 
310 1 109 1 229 1 237 1 99 1 286 1 116 1 353 1 198 1 381 1 
95 5 308 5 325 2 172 2 311 5 229 5 247 1 28 2 116 5 292 2 61 1 364 2 367 2 224 10 198 5 
368 1 180 1 229 1 297 1 237 1 380 1 
183 1 310 2 357 1 109 2 2 2 258 1 316 1 116 2 117 4 74 1 48 1 198 2 78 1 368 3 147 4 297 4 230 2 231 1 347 1 99 2 15 4 180 3 250 1 87 2 181 2 378 1 182 1 380 2 381 1 
309 1 183 1 26 2 360 2 317 1 189 2 238 1 117 1 240 1 6 1 53 1 145 1 78 1 147 1 55 3 10 1 228 1 230 1 298 1 152 1 57 2 129 1 302 1 348 1 15 1 332 1 250 1 234 3 378 1 63 2 22 1 254 1 
95 2 308 2 310 1 311 2 109 1 229 4 237 2 99 1 116 2 291 1 87 1 181 1 224 4 198 1 381 1 
287 1 114 1 204 1 
287 1 114 1 204 1 
287 1 204 1 235 1 284 1 330 1 
287 1 114 1 204 1 
287 1 204 1 285 1 
287 1 204 1 285 1 
287 1 204 1 285 1 
287 1 204 1 
324 1 19 1 
309 4 369 1 245 1 137 1 298 8 327 1 302 2 220 3 348 2 189 4 261 2 291 1 18 1 193 4 305 1 364 1 7 1 367 1 254 2 145 2 
309 3 137 1 245 1 298 6 220 2 261 2 291 1 362 1 18 1 193 3 305 1 364 1 7 1 367 1 
309 2 325 1 173 1 298 4 327 1 302 1 28 1 220 2 348 1 189 2 261 1 292 1 193 2 364 1 254 1 367 1 145 1 
8 1 309 4 325 1 298 7 327 1 28 1 220 2 261 1 292 1 193 3 364 1 50 1 323 2 367 1 65 1 
309 12 137 2 28 2 220 9 189 4 261 5 46 1 291 1 292 2 193 11 50 2 364 3 7 1 367 3 323 2 145 2 8 1 369 2 325 2 245 1 298 23 327 4 232 1 302 2 348 2 18 2 233 1 305 1 254 2 
309 1 298 1 323 1 
298 1 193 1 50 1 
309 3 325 1 173 1 298 6 327 1 302 1 247 1 28 1 220 3 189 2 348 1 261 2 292 1 193 3 364 1 254 1 367 1 145 1 
309 6 0 1 1 1 259 1 28 2 220 2 189 2 261 1 167 1 292 2 193 6 50 1 364 2 323 1 367 2 145 1 325 2 298 12 327 1 302 1 348 1 130 1 254 1 255 1 65 1 
309 3 245 1 137 1 298 6 327 1 220 2 261 1 18 1 193 3 364 1 367 1 
309 2 369 1 137 1 298 3 327 1 302 1 220 2 348 1 189 2 261 1 46 1 18 1 193 1 305 1 7 1 254 1 145 1 
309 5 137 2 245 1 298 10 327 2 302 1 220 5 189 2 348 1 261 3 36 1 18 2 193 5 364 2 254 1 255 1 367 2 145 1 
298 2 327 1 302 1 28 1 220 1 348 1 189 2 193 2 255 1 254 1 367 1 145 1 
309 2 325 1 298 4 327 1 302 1 28 1 220 2 348 1 189 2 261 1 292 1 193 2 364 1 255 1 254 1 367 1 145 1 
369 1 309 2 137 1 202 1 298 3 327 1 302 3 220 2 348 3 189 6 46 1 261 1 18 1 193 1 255 1 254 3 145 3 
309 18 137 3 28 3 220 12 189 10 46 1 261 7 291 1 292 3 193 16 267 1 50 3 364 5 7 1 323 4 367 5 145 5 8 1 369 2 325 3 245 2 344 1 200 1 173 1 202 1 298 34 327 5 302 5 348 5 18 3 305 1 254 5 255 1 65 1 
309 4 137 1 220 2 189 2 261 2 291 1 193 4 364 1 50 1 7 1 367 1 323 1 145 1 245 1 298 8 302 1 348 1 130 1 18 1 305 1 254 1 255 1 65 1 
309 5 137 1 28 1 220 3 189 4 261 2 291 1 292 1 193 6 364 1 50 1 7 1 323 2 367 2 145 2 8 1 245 1 173 1 298 11 327 1 302 2 348 2 130 1 18 1 305 1 255 1 254 2 65 1 
309 10 0 1 137 1 1 1 259 1 28 2 220 4 189 6 261 3 167 1 291 1 292 2 193 9 50 1 364 3 7 1 323 1 367 3 145 3 369 1 325 2 245 1 173 1 298 19 327 1 302 3 348 3 130 1 18 1 305 1 254 3 255 1 65 1 
309 7 0 1 137 1 1 1 259 1 28 2 220 5 189 6 261 3 167 1 291 1 292 2 193 10 50 1 364 2 7 1 323 1 367 3 145 3 369 1 325 1 245 1 173 1 298 17 327 2 302 3 348 3 130 1 18 1 305 1 254 3 255 1 65 1 
309 4 137 1 220 2 189 2 261 2 291 1 193 4 364 1 50 1 7 1 367 1 323 1 145 1 245 1 298 8 302 1 348 1 130 1 18 1 305 1 254 1 255 1 65 1 
309 6 0 1 1 1 259 1 28 2 220 2 189 2 261 1 167 1 292 2 193 6 50 1 364 2 323 1 367 2 145 1 325 2 298 12 327 1 302 1 348 1 130 1 254 1 255 1 65 1 
309 8 0 1 137 1 1 1 259 1 28 2 220 5 189 8 261 3 167 1 291 1 292 2 193 10 50 1 364 2 7 1 323 1 367 3 145 4 369 2 325 1 245 1 173 1 298 18 327 2 302 4 348 4 130 1 18 1 305 1 254 4 255 1 65 1 
309 7 0 1 1 1 259 1 28 3 220 6 189 8 261 3 167 1 292 3 193 9 50 1 364 2 323 1 367 3 145 4 369 2 325 2 202 1 298 16 327 3 302 4 348 4 130 1 255 1 254 4 65 1 
309 4 137 3 245 1 298 7 327 3 220 6 261 3 18 3 193 3 305 1 364 1 7 2 367 1 
309 8 0 1 137 1 1 1 259 1 28 2 220 4 189 8 261 3 167 1 291 1 292 2 193 10 50 1 364 2 7 1 323 1 367 3 145 4 369 2 325 1 245 1 202 1 298 18 327 1 302 4 348 4 130 1 18 1 305 1 255 1 254 4 65 1 
239 1 177 1 55 1 26 1 234 1 22 1 139 1 
55 1 343 1 26 1 139 1 177 1 239 1 275 1 234 1 155 1 156 1 223 1 22 1 
15 1 183 1 147 1 74 1 362 1 117 1 250 1 230 1 378 1 347 1 78 1 
183 1 55 2 147 1 26 1 230 1 152 1 129 1 57 1 317 1 15 1 117 1 250 1 293 1 234 2 378 1 63 1 22 1 78 1 
183 2 55 2 147 1 26 2 27 1 110 1 152 1 128 1 2 1 129 2 57 2 29 1 317 1 361 1 15 1 117 1 250 1 293 1 234 2 378 1 63 1 22 1 78 3 
183 2 55 2 147 2 26 2 27 1 110 1 128 1 2 1 129 2 57 2 29 1 317 1 361 1 15 2 117 2 250 1 209 1 293 1 234 2 378 1 63 1 335 1 22 1 78 3 
368 2 183 1 147 3 27 1 229 1 297 1 230 1 237 1 128 1 359 1 2 1 129 1 15 3 263 1 180 2 117 3 250 1 168 1 378 1 196 1 335 1 42 1 78 4 
368 2 183 1 147 3 27 1 229 1 297 1 230 1 237 1 128 1 2 1 129 1 15 3 263 1 180 2 117 3 250 1 378 1 196 1 335 1 40 1 42 1 78 4 
15 1 147 1 340 1 117 1 250 1 378 1 
214 1 147 7 244 1 183 2 107 1 68 1 11 1 230 2 129 1 282 1 15 7 165 1 340 1 288 1 117 6 250 3 121 1 304 1 378 2 105 1 78 3 
309 3 183 1 26 1 137 1 282 1 220 2 317 1 189 4 261 2 291 1 117 1 341 1 193 3 293 1 241 1 364 1 7 1 144 1 6 1 94 1 367 1 78 1 145 2 55 2 147 1 9 1 10 2 245 1 228 1 298 6 152 1 129 1 57 1 302 2 96 1 348 2 332 2 15 1 17 1 18 1 250 1 378 1 234 2 305 1 63 1 22 2 254 2 
310 2 109 2 237 1 316 1 71 1 116 1 286 1 117 1 263 1 195 1 51 1 196 1 198 1 78 2 368 3 147 1 229 1 297 2 230 1 99 2 15 1 180 3 353 1 334 1 40 1 380 1 381 2 42 1 
147 2 244 1 183 1 129 1 282 1 15 2 190 1 340 1 117 2 250 2 378 1 196 1 78 2 
147 4 183 1 230 1 347 1 282 1 15 4 117 4 74 1 250 1 378 1 280 1 335 1 78 1 
147 2 183 1 107 1 2 1 129 1 15 2 117 2 76 1 250 2 378 1 242 1 222 1 105 1 78 1 
349 1 124 1 15 1 80 1 147 1 117 1 250 1 230 1 378 1 175 1 
15 2 183 1 147 2 68 1 117 2 250 1 378 1 121 1 157 1 282 1 78 1 
147 5 183 2 11 1 230 1 2 1 347 1 282 1 15 5 165 1 74 1 117 4 250 2 121 1 378 2 280 1 78 3 
147 5 183 2 11 1 230 1 2 1 347 1 314 1 282 1 15 5 74 1 117 4 250 2 121 1 378 2 280 1 78 3 
183 1 55 2 147 1 26 1 230 1 129 1 57 1 317 1 15 1 117 1 250 1 209 1 293 1 234 2 378 1 63 1 22 1 78 1 
147 1 244 1 183 1 107 1 2 1 129 1 15 1 288 1 117 1 250 2 378 1 105 1 78 1 
270 1 55 1 26 1 154 1 234 1 88 1 58 1 279 1 197 1 
276 1 279 1 45 1 
270 1 377 1 58 1 279 1 22 1 
368 2 270 2 229 1 110 1 237 1 58 2 29 1 45 1 361 1 3 1 377 2 276 1 263 1 180 2 303 1 195 1 279 1 342 1 22 1 
79 1 362 1 212 1 243 1 
79 1 256 1 371 1 132 1 329 1 212 1 243 1 
256 1 83 1 176 1 
79 1 256 3 127 1 371 1 329 3 206 1 331 1 179 2 170 1 132 1 212 1 243 1 
79 1 142 1 256 2 371 1 132 1 12 1 329 2 212 1 243 1 
79 1 80 1 226 1 256 1 150 1 127 1 371 1 329 1 375 1 175 1 132 1 
79 1 256 1 127 1 371 1 132 1 329 1 212 1 
256 1 127 1 371 1 132 1 329 1 212 2 243 1 
79 1 256 2 127 1 371 2 329 2 100 1 119 1 132 2 306 1 212 1 
79 2 256 3 150 1 127 1 371 1 329 3 376 1 142 2 75 1 132 1 212 1 123 1 243 1 
79 1 80 1 226 1 256 2 126 1 127 1 371 1 329 2 175 2 349 1 142 1 132 1 212 1 64 1 243 1 
79 2 256 4 326 1 150 1 127 1 371 2 329 4 12 1 142 2 75 1 132 2 212 1 243 1 
79 1 256 1 127 1 371 1 132 1 329 1 212 1 243 1 
79 3 256 4 150 1 371 1 329 4 206 1 331 1 142 2 179 1 351 1 75 1 132 1 212 2 243 2 
79 1 256 2 127 1 371 1 329 2 84 1 142 1 289 1 132 1 212 1 366 1 243 1 
79 1 256 3 127 1 371 1 329 3 206 1 331 2 179 2 132 1 39 1 212 1 243 1 
79 2 97 2 273 1 24 1 
256 1 346 1 127 1 371 1 132 1 329 1 
79 1 142 1 256 2 127 1 371 1 132 1 329 2 212 1 243 1 376 1 
188 1 
79 1 256 1 127 1 371 1 132 1 329 1 212 1 243 1 
79 1 142 1 256 3 179 1 127 1 371 1 132 1 329 3 212 1 376 1 243 1 
79 1 351 1 150 1 75 1 
79 1 212 1 

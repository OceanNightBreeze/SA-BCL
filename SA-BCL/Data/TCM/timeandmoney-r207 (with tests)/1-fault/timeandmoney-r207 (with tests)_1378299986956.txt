#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 166 80 370 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 71 2 194 9 322 1 121 1 5 1 295 2 198 1 359 2 266 6 151 4 127 2 325 2 329 1 347 1 300 1 85 1 350 1 238 1 352 9 182 2 374 1 46 2 69 1 353 1 312 3 165 5 190 1 
0 1 71 2 194 9 322 1 121 1 5 1 295 2 198 1 359 2 266 6 151 4 325 2 127 2 329 1 347 1 300 1 85 1 350 1 238 1 352 9 182 2 46 2 374 1 69 1 353 1 312 3 165 5 190 1 
0 1 71 2 194 10 322 1 121 1 5 1 295 2 198 1 359 2 266 7 151 5 325 2 127 2 329 1 347 1 300 1 85 1 350 1 238 1 352 10 182 2 46 2 374 1 69 1 353 1 312 4 165 6 190 1 
0 1 71 2 194 7 322 1 121 1 5 1 295 2 198 1 359 2 266 4 151 3 325 2 127 1 329 1 347 1 300 1 85 1 350 1 352 7 182 2 46 2 374 1 69 1 353 1 312 2 165 4 190 1 
0 1 71 1 85 1 238 1 352 4 194 4 295 1 359 1 46 1 69 1 266 3 312 1 151 2 165 3 325 1 127 2 347 1 300 1 
0 1 71 1 85 1 352 2 194 2 5 1 196 1 182 1 295 1 134 1 198 1 359 1 69 1 165 1 9 1 325 1 
0 1 71 2 85 1 352 3 194 3 182 1 295 2 69 1 353 1 266 1 312 1 151 1 165 2 
0 1 71 2 218 1 350 1 85 1 238 1 352 9 194 9 182 1 295 2 359 1 46 1 69 1 266 7 353 1 312 3 165 5 151 4 325 1 127 2 347 1 329 1 102 1 300 1 
0 1 71 2 218 1 350 1 85 1 238 1 352 9 194 9 182 1 295 2 359 1 46 1 69 1 266 7 353 1 312 3 165 5 151 4 325 1 127 2 347 1 329 1 102 1 300 1 
93 1 212 1 114 1 
170 1 152 2 114 1 
197 2 110 2 172 2 330 2 21 2 272 2 280 1 252 1 
142 1 31 2 144 2 291 2 220 1 247 1 171 1 172 2 2 1 197 3 61 2 268 1 297 1 10 1 330 2 12 1 272 2 252 1 105 1 277 1 369 1 371 1 21 2 338 1 280 1 68 1 307 1 110 3 375 1 373 2 378 1 314 1 313 1 137 1 380 1 51 1 192 1 
315 1 197 1 110 1 267 1 172 1 330 1 21 1 272 1 280 1 258 1 
315 1 333 1 303 1 73 1 132 1 21 1 25 1 97 1 197 1 110 1 8 1 150 1 212 1 114 1 
315 1 333 2 303 1 73 1 172 1 21 1 25 1 197 1 110 1 8 2 150 1 212 1 330 1 272 1 114 1 
349 1 360 1 8 1 333 1 100 1 
349 1 217 1 360 1 310 1 8 2 333 2 212 1 114 1 
360 1 8 1 333 1 
349 1 315 1 344 1 333 1 172 1 21 1 280 1 258 1 197 1 110 1 8 1 267 1 330 1 272 1 
114 1 
349 1 360 1 199 1 310 1 8 2 333 2 212 1 114 1 
349 2 92 1 333 5 169 1 221 1 183 1 87 1 283 1 360 2 149 1 310 1 8 5 175 1 212 1 202 2 214 1 103 2 299 2 114 1 
291 1 247 1 171 1 172 1 371 1 195 1 21 1 68 1 296 1 197 2 110 2 373 1 61 1 268 1 313 1 10 1 12 1 272 1 51 1 130 1 
93 1 252 1 
172 1 21 2 197 2 110 2 229 1 213 1 330 1 272 1 252 2 
90 1 130 1 115 1 
291 1 171 1 247 1 371 1 68 1 197 1 265 1 110 1 373 1 61 1 268 1 313 1 10 1 12 1 51 1 252 1 
132 1 172 4 195 1 21 5 296 2 6 1 197 5 110 5 38 1 213 1 330 1 177 1 272 4 252 1 
315 1 197 2 110 2 267 1 136 1 172 2 21 2 272 2 
296 1 197 3 110 3 330 1 172 3 21 3 272 3 252 1 
315 1 197 1 110 1 267 1 172 1 21 1 272 1 
315 1 197 1 110 1 229 1 172 1 330 1 213 1 21 1 272 1 
315 1 31 1 144 2 291 1 220 1 247 1 171 1 73 1 172 3 2 1 195 1 296 1 197 4 8 1 61 1 268 1 150 1 10 1 330 2 12 1 272 3 252 1 277 1 333 1 303 1 369 1 371 1 21 3 338 1 280 1 68 1 25 1 372 1 110 4 375 1 373 1 378 1 260 1 314 1 313 1 213 1 380 1 137 1 51 1 
296 1 197 2 110 2 38 1 132 1 172 1 21 2 272 1 252 1 
315 1 333 1 303 1 73 1 172 3 195 1 21 3 25 1 296 2 197 3 110 3 372 1 8 1 150 1 330 1 213 1 272 3 114 1 52 1 
90 1 172 2 21 2 296 1 197 2 110 2 213 1 330 1 272 2 130 1 
291 1 171 1 247 1 371 1 68 1 197 1 110 1 373 1 61 1 268 1 313 1 10 1 12 1 51 1 252 1 
291 1 171 1 247 1 371 1 3 1 68 1 197 1 110 1 373 1 61 1 230 1 268 1 313 1 12 1 252 1 
90 2 168 1 317 1 31 4 144 2 245 1 220 2 2 1 120 1 323 1 345 1 297 2 153 1 130 2 235 1 277 1 18 1 369 1 44 1 375 1 378 1 314 1 342 1 115 2 
315 1 197 1 110 1 136 1 73 1 172 1 21 1 272 1 
36 1 207 1 
36 1 207 1 
328 1 55 1 
328 1 55 1 
328 1 55 1 
36 1 207 1 101 1 
36 1 207 1 101 1 
36 1 311 1 207 1 
36 2 47 1 207 2 328 1 55 1 337 1 
36 1 207 1 101 1 
36 1 332 1 207 1 
36 1 332 1 207 1 
36 1 332 1 207 1 
343 1 1 1 116 1 172 2 35 1 76 1 224 1 36 1 197 2 8 1 270 1 272 2 252 1 63 1 333 1 207 1 66 1 304 1 21 2 184 1 110 2 311 1 89 1 167 1 
141 1 63 2 333 2 205 1 207 2 116 2 20 1 337 1 76 1 184 2 36 2 135 1 8 2 60 2 37 1 89 2 270 3 379 1 114 1 
359 1 46 1 325 1 
359 1 325 1 196 1 
104 1 289 1 46 2 325 3 75 1 196 1 
289 1 236 1 46 1 325 2 75 1 196 1 
289 2 46 1 325 2 75 1 196 1 
168 1 1 1 92 1 170 1 357 1 245 1 74 1 33 1 221 3 224 1 264 2 360 1 8 5 152 3 202 1 299 1 103 1 81 1 349 4 82 1 275 2 333 5 131 2 41 1 66 1 44 1 283 2 187 1 310 1 212 1 114 2 342 1 
168 3 92 1 170 3 357 2 292 1 245 3 221 8 360 6 8 9 100 5 152 9 202 2 103 2 299 2 349 7 82 2 275 6 333 9 131 6 41 1 66 4 44 3 210 5 108 1 183 1 283 6 187 3 310 1 284 1 286 1 189 1 212 1 114 5 342 3 191 1 
168 1 170 2 357 1 245 1 33 1 221 3 264 1 8 3 202 1 152 4 299 1 103 1 349 2 81 1 82 1 275 2 333 3 131 2 66 1 44 1 183 1 187 1 283 2 212 1 114 3 342 1 
168 2 170 3 357 1 245 2 33 1 221 5 264 2 8 4 152 7 202 1 299 1 103 1 81 1 349 3 82 1 275 4 333 4 131 4 66 2 44 2 183 1 187 2 283 4 284 1 286 1 212 1 189 1 114 4 342 2 
93 1 94 1 313 1 
313 1 34 1 
113 1 
313 1 247 1 68 1 
313 1 155 1 
313 1 247 1 
94 2 319 1 313 3 247 1 256 1 68 1 
288 1 168 1 235 2 262 1 276 1 31 7 220 3 335 1 278 1 279 1 22 1 95 1 96 2 345 3 297 4 342 1 273 1 
288 1 168 1 235 2 262 1 276 1 31 7 220 3 335 1 278 1 279 1 22 1 95 1 96 2 345 3 297 4 342 1 273 1 
288 1 168 1 235 2 262 1 276 1 31 7 320 1 220 3 335 1 278 1 279 1 22 1 95 1 96 2 345 3 297 4 342 1 273 1 
288 1 215 4 168 4 31 31 262 2 144 2 220 15 245 3 293 1 95 1 122 1 96 3 345 10 297 16 62 1 203 1 364 1 273 1 235 5 276 2 277 1 369 1 278 1 335 2 279 2 181 3 44 3 22 5 23 1 187 3 375 1 28 1 314 1 342 4 
288 1 168 1 235 3 16 1 262 1 276 1 31 9 277 2 144 4 220 4 369 2 335 1 278 1 279 1 293 1 22 1 95 1 96 2 375 2 345 4 297 5 314 2 79 1 342 1 
0 1 140 1 71 1 291 1 171 1 194 2 196 1 295 1 359 1 61 1 266 1 268 1 125 1 327 1 325 2 104 1 367 1 83 1 85 1 352 2 157 1 208 1 209 1 182 1 46 1 373 1 69 1 112 1 165 1 50 1 
0 1 140 1 71 1 291 1 171 1 194 3 196 1 295 1 359 1 228 1 61 1 266 2 268 1 125 1 327 1 325 2 104 1 83 1 352 3 157 1 208 1 43 1 209 1 182 1 282 1 46 1 373 1 69 1 165 1 50 1 
0 1 140 1 291 1 171 1 194 2 196 1 359 1 228 1 61 1 266 2 268 1 125 1 327 1 325 2 104 1 83 1 352 2 157 1 182 1 282 1 373 1 46 1 69 1 165 1 50 1 
216 1 365 1 140 2 71 1 241 1 193 1 83 2 291 1 65 1 254 1 171 1 247 1 352 1 194 1 43 1 182 2 295 1 373 1 61 1 268 1 313 1 327 2 12 1 
140 1 71 1 291 1 171 1 194 1 196 1 295 1 359 1 228 1 61 1 268 1 125 1 327 1 325 2 104 1 83 1 85 1 352 1 157 1 208 1 209 1 182 1 46 1 373 1 112 1 50 1 
26 1 
193 1 92 1 243 1 291 2 145 2 247 1 4 2 97 1 197 1 8 5 61 2 150 1 250 2 152 2 202 1 12 2 103 1 299 1 348 1 19 1 65 1 303 1 257 1 21 1 67 1 25 1 162 1 164 1 110 1 309 1 310 3 30 2 29 2 313 1 212 1 114 2 315 1 170 2 171 1 73 1 221 2 321 1 360 6 173 2 123 2 268 1 233 4 82 1 180 1 333 5 334 1 132 1 45 1 283 2 373 2 
180 1 315 1 333 3 303 1 73 1 132 1 45 1 257 1 21 1 67 1 25 1 97 1 197 1 199 1 360 2 110 1 310 1 8 3 150 1 250 1 233 2 348 1 
315 1 145 1 73 1 197 1 97 1 360 1 199 1 8 3 150 1 233 3 348 1 180 1 333 3 303 1 132 1 21 1 257 1 45 1 67 1 25 1 110 1 310 1 212 1 114 1 
315 1 145 1 73 1 197 1 97 1 199 1 360 2 8 3 150 1 250 1 233 3 348 1 180 1 333 3 303 1 132 1 21 1 257 1 45 1 67 1 25 1 110 1 310 1 30 1 212 1 114 1 
315 1 318 1 92 1 170 2 145 4 73 1 221 1 321 1 4 2 97 1 197 1 360 7 199 1 173 2 8 5 123 2 249 1 150 1 202 1 250 4 233 6 299 1 103 1 348 1 15 1 180 1 156 1 333 5 334 1 303 1 132 1 21 1 257 1 45 1 67 1 25 1 283 1 110 1 310 3 29 2 30 4 212 5 341 1 114 5 
315 1 92 1 170 2 145 2 73 1 221 1 321 1 4 2 97 1 197 1 360 4 173 2 8 4 123 2 150 1 250 2 152 2 202 1 233 4 299 1 103 1 348 1 180 1 333 4 334 1 303 1 132 1 257 1 45 1 21 1 67 1 25 1 164 1 283 1 110 1 310 2 30 2 29 2 212 1 114 2 
315 1 318 1 92 1 170 2 145 2 73 1 221 1 321 1 4 2 197 1 97 1 360 4 173 2 8 4 123 2 150 1 250 2 202 1 233 4 103 1 299 1 348 1 180 1 15 1 333 4 334 1 303 1 132 1 21 1 257 1 45 1 67 1 25 1 283 1 110 1 310 2 30 2 29 2 212 1 341 1 114 1 
315 1 318 1 92 1 170 2 145 2 73 1 221 1 321 1 4 2 197 1 97 1 360 4 173 2 8 4 123 2 150 1 250 2 202 1 233 4 103 1 299 1 348 1 180 1 15 1 333 4 334 1 303 1 132 1 21 1 257 1 45 1 67 1 25 1 283 1 110 1 310 2 30 2 29 2 212 1 341 1 114 1 
315 1 318 1 92 1 145 2 73 1 54 2 222 2 221 1 321 1 4 2 197 1 97 1 360 4 173 2 8 4 324 1 150 1 99 1 250 2 152 2 202 1 233 4 103 1 299 1 348 1 180 1 333 4 206 1 303 1 132 1 21 1 257 1 45 1 67 1 25 1 283 1 110 1 310 2 30 2 212 1 114 1 
315 1 318 1 92 1 170 2 145 3 73 1 221 1 321 1 4 2 197 1 97 1 360 5 173 2 8 4 123 2 150 1 249 1 202 1 250 3 233 5 299 1 103 1 348 1 180 1 15 1 333 4 334 1 303 1 132 1 21 1 257 1 45 1 67 1 25 1 283 1 110 1 310 2 29 2 30 3 212 1 341 1 114 1 
315 1 318 1 92 1 170 2 145 3 73 1 221 1 321 1 4 2 197 1 97 1 360 5 173 2 8 4 123 2 150 1 249 1 202 1 250 3 233 5 299 1 103 1 348 1 180 1 15 1 333 4 334 1 303 1 132 1 21 1 257 1 45 1 67 1 25 1 283 1 110 1 310 2 29 2 30 3 212 1 341 1 114 1 
315 1 92 1 145 2 73 1 54 2 222 2 221 1 321 1 4 2 97 1 197 1 360 4 173 2 8 4 150 1 250 2 152 2 202 1 233 4 299 1 103 1 348 1 180 1 333 4 206 1 303 1 132 1 257 1 45 1 21 1 67 1 25 1 164 1 283 1 110 1 310 2 30 2 212 1 114 1 
90 1 288 1 168 1 31 6 93 1 144 2 220 3 2 1 95 1 96 1 345 2 297 3 130 1 252 2 235 2 277 1 18 1 369 1 278 1 335 1 279 1 375 1 378 1 314 1 342 1 115 1 
90 4 215 3 168 1 31 14 144 4 220 6 245 1 2 2 122 1 77 1 58 1 345 2 297 8 364 1 252 1 130 11 105 1 235 1 204 1 277 2 369 2 181 3 44 2 22 1 338 1 187 2 375 2 239 1 378 1 314 2 48 1 115 11 342 2 
90 1 31 2 291 1 144 2 247 1 171 1 220 1 172 1 2 1 195 1 296 1 265 1 58 1 197 2 61 1 268 1 298 1 297 1 10 1 12 1 272 1 331 1 252 1 105 1 277 1 369 1 86 1 371 1 21 1 338 1 68 1 110 2 373 1 375 1 378 1 313 1 314 1 51 1 
288 1 90 7 291 3 144 6 247 2 245 2 195 1 2 3 294 1 95 1 96 1 296 1 197 3 58 1 61 3 345 8 297 10 10 2 12 1 252 2 105 1 253 1 158 2 159 1 21 1 22 4 68 2 163 2 110 3 314 3 313 2 115 7 168 3 31 20 220 10 171 2 172 1 228 1 268 2 231 2 272 1 130 7 235 4 277 3 84 2 369 3 335 1 278 1 279 1 371 2 44 2 338 1 187 2 373 3 375 3 378 3 380 2 51 2 342 3 
31 2 193 1 291 8 144 4 32 1 171 2 220 1 247 2 172 1 2 2 296 1 197 1 228 1 61 7 200 1 268 2 297 1 363 1 12 2 272 1 367 1 105 1 18 1 277 2 65 1 369 2 336 1 305 1 21 1 338 1 109 1 110 1 259 1 373 8 375 2 378 2 313 3 314 2 192 2 
90 1 168 1 31 3 144 2 245 1 220 2 172 1 2 1 58 1 197 1 345 1 297 1 330 1 272 1 129 1 130 1 235 1 277 1 369 1 44 1 21 1 110 1 187 1 375 1 378 1 314 1 213 1 115 1 342 1 
90 1 31 2 18 1 277 1 144 2 369 1 2 1 120 1 44 1 22 1 375 1 345 1 378 1 314 1 297 2 130 1 115 1 342 1 
90 1 168 1 235 1 317 1 31 2 18 1 277 1 144 2 369 1 245 1 220 2 2 1 375 1 345 1 378 1 314 1 130 1 115 1 
90 2 168 1 235 1 31 4 18 1 277 1 144 2 220 2 245 1 369 1 2 1 44 1 22 1 187 1 375 1 345 2 378 1 314 1 297 2 130 2 115 2 342 1 
90 1 31 2 277 1 144 2 369 1 305 1 2 1 120 1 44 1 22 1 375 1 345 1 378 1 314 1 297 2 130 1 115 1 342 1 
90 1 168 1 235 1 317 1 31 2 277 1 144 2 369 1 245 1 220 2 305 1 2 1 375 1 345 1 378 1 314 1 130 1 115 1 
90 2 168 1 235 1 31 4 277 1 144 2 220 2 245 1 369 1 305 1 2 1 44 1 22 1 187 1 375 1 345 2 378 1 314 1 297 2 130 2 115 2 342 1 
90 2 168 1 235 1 31 4 277 1 144 2 220 2 245 1 369 1 2 1 44 1 22 1 187 1 375 1 345 2 378 1 314 1 297 2 130 2 115 2 342 1 
31 2 291 1 144 2 247 1 171 1 220 1 2 1 197 1 61 1 268 1 297 1 10 1 12 1 252 1 105 1 277 1 369 1 371 1 338 1 68 1 110 1 373 1 375 1 378 1 313 1 314 1 380 1 51 1 
31 2 291 1 144 2 247 1 171 1 220 1 2 1 3 1 197 1 230 1 61 1 268 1 297 1 12 1 13 1 252 1 105 1 277 1 369 1 371 1 338 1 68 1 110 1 373 1 375 1 378 1 313 1 314 1 
90 2 168 1 235 1 31 4 277 1 144 2 220 2 245 1 369 1 2 1 44 1 22 1 58 1 187 1 375 1 345 2 378 1 314 1 297 2 130 2 115 2 342 1 
90 2 168 1 31 4 291 1 144 2 220 2 245 1 171 1 247 1 2 1 197 1 61 1 345 2 268 1 297 2 231 1 10 1 130 2 235 1 367 1 277 1 369 1 371 1 44 1 22 1 68 1 110 1 187 1 373 1 375 1 378 1 313 1 314 1 380 1 51 1 115 2 342 1 
90 1 168 1 31 3 144 2 220 1 245 1 172 1 2 1 58 1 197 1 345 1 124 1 297 2 330 1 272 1 130 1 277 1 369 1 44 1 22 1 21 1 110 1 187 1 375 1 378 1 314 1 213 1 342 1 115 1 
91 1 70 2 215 2 316 1 168 3 31 19 356 1 144 4 220 10 245 3 122 1 227 2 345 6 297 9 79 1 364 1 235 3 277 2 369 2 181 1 44 3 22 3 281 1 186 1 187 3 375 2 376 1 314 2 355 1 342 3 
168 2 70 4 316 2 215 2 31 26 356 2 144 6 220 12 245 2 293 2 122 2 227 1 345 4 297 14 79 1 80 1 128 1 179 1 235 2 277 3 369 3 370 1 181 2 44 3 22 2 281 1 185 1 187 3 375 3 376 1 314 3 166 1 355 1 342 3 
288 1 91 1 70 4 215 4 316 2 168 5 31 41 356 1 144 6 220 21 245 4 293 1 95 1 122 3 96 1 227 1 345 8 297 20 79 1 80 1 128 1 364 1 179 1 235 4 277 3 369 3 335 1 278 1 370 1 279 1 181 3 44 4 22 4 211 1 281 1 185 1 187 4 375 3 376 1 314 3 166 1 355 1 342 5 
288 1 91 1 70 4 215 4 316 2 168 4 31 38 356 1 144 8 220 18 245 3 293 2 95 1 122 3 96 1 227 1 345 7 297 20 79 1 80 1 128 1 364 1 179 1 235 4 277 4 369 4 335 1 278 1 370 1 279 1 181 3 44 4 22 3 211 1 281 1 185 1 187 4 375 4 376 1 314 4 166 1 355 1 342 5 
288 1 70 4 215 4 316 1 168 8 31 52 356 1 144 4 220 25 245 7 293 1 95 1 122 2 96 1 227 1 345 14 297 27 79 1 80 1 128 1 364 2 179 1 235 7 277 2 369 2 335 1 278 1 370 1 279 1 181 4 44 7 22 7 281 1 185 1 187 7 375 2 376 1 314 2 48 2 166 1 355 1 342 8 
36 1 98 1 63 1 37 1 207 1 116 1 89 1 379 1 337 1 184 1 
311 1 304 1 
57 1 36 1 63 1 207 1 116 1 89 1 147 1 161 1 184 1 
242 1 101 1 
332 1 47 1 232 1 
141 1 333 1 63 1 205 1 207 1 116 1 337 1 76 1 184 1 36 1 135 1 8 1 60 1 37 1 89 1 270 2 379 1 114 1 
141 1 333 1 63 1 205 1 207 1 116 1 337 1 76 1 184 1 36 1 135 1 8 1 60 1 37 1 89 1 270 2 379 1 114 1 
141 1 333 1 63 1 205 1 207 1 116 1 337 1 76 1 184 1 36 1 135 1 8 1 60 1 37 1 89 1 270 2 379 1 114 1 
242 1 47 1 101 1 
242 1 47 1 101 1 
332 1 232 1 
332 1 47 1 232 1 
35 1 167 1 
343 1 1 1 116 1 172 2 35 1 224 1 197 2 36 1 60 1 8 1 270 1 272 2 252 1 349 1 205 1 333 1 63 1 207 1 66 1 304 1 21 2 184 1 110 2 311 1 89 1 138 1 167 1 
31 2 291 2 144 2 72 1 171 1 247 1 220 1 2 1 263 1 248 1 58 1 197 2 200 1 61 2 268 1 297 1 363 1 251 1 105 1 277 1 369 1 21 2 338 1 110 2 373 2 375 1 378 1 313 1 188 1 314 1 192 2 
104 1 140 1 367 1 291 2 171 1 106 1 208 1 133 1 196 1 56 1 359 1 46 1 228 1 373 2 61 2 268 1 125 1 325 2 50 1 
104 1 140 1 291 1 106 1 171 1 208 1 196 1 78 1 359 1 46 1 228 1 373 1 61 1 268 1 125 1 325 2 50 1 
140 1 301 1 216 1 193 1 291 1 65 1 171 1 247 1 56 1 373 1 61 1 268 1 313 1 12 1 
104 1 140 1 291 1 106 1 171 1 208 1 133 1 196 1 56 1 359 1 46 1 228 1 373 1 61 1 268 1 125 1 325 2 50 1 
14 1 
283 1 149 1 93 1 212 1 221 1 214 1 114 1 
92 1 170 1 221 1 360 1 8 1 123 1 202 1 152 1 299 1 103 1 333 1 334 1 283 1 310 1 29 1 212 1 114 2 
53 1 92 4 243 1 291 3 94 2 244 1 247 3 245 2 149 1 61 3 8 5 346 2 202 4 12 1 152 12 103 4 299 4 154 2 155 2 351 2 255 1 256 1 68 3 25 2 310 3 313 10 212 2 214 1 354 2 114 8 168 2 170 6 171 3 118 2 34 3 221 9 119 1 360 5 268 4 82 2 367 1 366 2 275 6 333 5 84 2 40 2 131 6 42 1 44 2 187 2 283 8 373 3 340 2 342 2 
215 1 168 1 92 2 170 3 245 1 221 5 122 1 360 1 8 1 80 1 128 1 152 6 202 2 299 2 103 2 179 1 275 4 333 1 131 4 370 1 181 1 44 1 160 1 283 3 187 1 310 1 212 1 354 1 166 1 114 4 342 1 
315 1 168 1 261 1 92 1 344 1 172 1 221 2 95 1 197 1 8 1 267 1 202 1 330 1 299 1 103 1 272 1 366 1 333 1 335 1 279 1 21 1 280 1 258 1 110 1 283 2 354 2 341 1 342 2 
92 1 221 1 283 1 149 1 212 1 202 1 214 1 103 1 299 1 114 1 
168 2 366 1 275 5 84 1 170 5 131 5 245 2 221 5 44 2 187 2 283 5 152 10 354 2 114 5 342 2 
360 1 8 1 333 1 310 1 212 1 114 1 
53 1 92 1 193 1 291 4 243 2 171 1 247 1 221 2 360 4 61 4 8 3 268 1 202 2 12 2 299 2 103 2 274 1 82 2 17 1 333 3 19 1 65 1 255 2 183 1 283 2 309 1 373 4 310 2 313 1 
31 1 144 2 291 1 220 1 171 1 247 1 172 2 2 1 197 3 61 1 268 1 10 1 12 1 330 2 272 2 252 1 277 1 369 1 371 1 21 2 338 1 280 1 68 1 110 3 375 1 373 1 378 1 314 1 313 1 137 1 380 1 51 1 
82 1 275 2 92 1 243 1 170 2 131 2 221 1 96 1 283 2 212 2 152 4 202 1 103 1 299 1 114 4 
339 1 89 1 184 1 
339 1 89 1 184 1 
126 1 89 1 379 1 35 1 184 1 
339 1 89 1 184 1 
368 1 89 1 184 1 
368 1 89 1 184 1 
368 1 89 1 184 1 
89 1 184 1 
36 1 207 1 
288 1 168 1 235 2 31 8 277 2 144 4 220 4 369 2 278 1 335 1 293 1 279 1 22 1 95 1 96 1 375 2 345 3 297 4 314 2 342 1 
288 1 168 1 235 2 31 6 93 1 220 3 278 1 335 1 279 1 95 1 96 1 345 2 297 3 342 1 
168 1 235 1 31 4 277 1 144 2 220 2 245 1 369 1 44 1 22 1 187 1 375 1 345 2 314 1 297 2 326 1 342 1 
168 1 215 2 235 1 31 7 245 1 220 4 181 1 44 1 22 1 122 1 187 1 345 2 297 3 364 1 342 1 
288 1 215 2 168 3 31 23 144 4 220 12 245 2 293 2 95 1 96 1 345 9 297 11 362 1 364 1 235 5 277 2 369 2 335 2 278 1 279 2 44 2 181 2 22 4 187 2 375 2 239 1 314 2 48 1 342 3 
215 1 31 1 220 1 
31 1 297 1 181 1 
168 1 235 2 31 6 144 2 277 1 84 1 369 1 220 3 245 1 44 1 22 1 187 1 375 1 345 3 314 1 297 3 326 1 342 1 
215 1 168 2 31 12 144 2 220 6 245 2 122 1 345 2 297 6 79 1 128 1 80 1 179 1 235 1 277 1 369 1 370 1 181 1 44 2 22 1 187 2 375 1 314 1 166 1 342 2 
168 1 235 1 31 6 220 3 335 1 279 1 22 1 95 1 345 2 297 3 342 1 
288 1 235 1 31 3 277 1 144 2 220 2 369 1 335 1 278 1 279 1 293 1 22 1 375 1 345 2 297 1 314 1 362 1 
168 2 261 1 235 3 31 10 144 2 277 1 369 1 220 5 335 2 279 2 22 2 95 1 375 1 345 5 314 1 297 5 79 1 342 2 
31 2 277 1 144 2 369 1 44 1 22 1 375 1 345 1 314 1 297 2 79 1 342 1 
168 1 235 1 31 4 277 1 144 2 220 2 245 1 369 1 44 1 22 1 187 1 375 1 345 2 314 1 297 2 79 1 342 1 
91 1 235 1 31 3 277 3 144 6 220 2 369 3 335 1 293 1 279 1 22 1 375 3 345 2 314 3 297 1 362 1 79 1 
288 1 215 4 91 1 168 5 31 34 144 10 220 18 245 3 293 2 95 2 122 1 96 1 345 12 297 16 362 1 79 1 326 1 62 1 364 1 235 7 277 5 369 5 335 3 278 1 279 3 181 3 44 3 22 5 23 1 187 3 28 1 375 5 314 5 342 5 
288 1 168 1 215 1 31 8 144 2 220 4 122 1 95 1 96 1 345 2 297 4 79 1 235 2 277 1 369 1 370 1 278 1 335 1 279 1 181 1 375 1 314 1 342 1 
288 1 168 1 215 2 31 11 144 4 220 5 95 1 122 1 96 1 345 3 297 6 79 1 326 1 364 1 235 2 277 2 369 2 335 1 278 1 370 1 279 1 181 1 44 1 22 1 187 1 375 2 314 2 342 2 
288 1 215 1 168 3 31 19 144 6 220 10 245 2 293 1 95 1 122 1 96 1 345 4 297 9 79 1 326 1 128 1 80 1 179 1 235 3 277 3 369 3 335 1 278 1 370 1 279 1 181 1 44 2 22 1 187 2 375 3 314 3 166 1 342 3 
288 1 215 1 168 2 31 17 144 6 220 7 245 1 293 1 95 1 122 1 96 1 345 5 297 10 79 1 326 1 128 1 80 1 179 1 235 3 277 3 369 3 335 1 278 1 370 1 279 1 181 1 44 2 22 2 187 2 375 3 314 3 166 1 342 3 
288 1 168 1 215 1 31 8 144 2 220 4 122 1 95 1 96 1 345 2 297 4 79 1 235 2 277 1 369 1 370 1 278 1 335 1 279 1 181 1 375 1 314 1 342 1 
215 1 168 2 31 12 144 2 220 6 245 2 122 1 345 2 297 6 79 1 128 1 80 1 179 1 235 1 277 1 369 1 370 1 181 1 44 2 22 1 187 2 375 1 314 1 166 1 342 2 
288 1 215 1 168 2 31 18 144 8 220 8 245 1 293 2 95 1 122 1 96 1 345 5 297 10 79 1 80 1 326 1 128 1 179 1 235 3 277 4 369 4 335 1 278 1 370 1 279 1 181 1 44 2 22 2 187 2 375 4 314 4 166 1 342 3 
215 1 91 1 168 2 31 16 144 8 220 7 245 2 293 2 122 1 345 6 297 9 79 1 80 1 128 1 179 1 235 3 277 4 369 4 370 1 181 1 44 3 22 3 187 3 375 4 314 4 166 1 342 3 
288 2 168 1 235 3 31 7 220 4 278 1 335 3 279 3 22 3 95 1 345 6 297 3 342 1 
288 1 215 1 91 1 168 2 31 18 144 8 220 8 245 1 293 2 95 1 122 1 96 1 345 4 297 10 79 1 80 1 128 1 179 1 235 3 277 4 369 4 335 1 278 1 370 1 279 1 181 1 44 2 22 1 187 2 375 4 314 4 166 1 342 3 
197 1 110 1 38 1 39 1 132 1 21 1 252 1 
302 1 146 1 132 1 21 1 197 1 110 1 377 1 38 1 39 1 11 1 234 1 252 1 
193 1 373 1 93 1 291 1 61 1 268 1 65 1 313 1 171 1 247 1 12 1 
291 1 247 1 171 1 172 1 371 1 21 1 68 1 296 1 197 2 110 2 373 1 61 1 268 1 313 1 10 1 12 1 272 1 252 1 
315 1 291 1 171 1 247 2 73 1 172 1 296 1 197 2 61 1 268 1 150 1 10 1 272 2 252 1 155 1 40 1 255 1 371 1 21 2 68 2 110 2 373 1 313 3 
315 1 291 2 171 1 247 2 73 1 172 1 3 1 296 1 197 2 61 2 201 1 268 1 150 1 272 2 252 1 155 1 40 1 255 1 371 1 21 2 68 2 110 2 373 2 313 3 
291 3 143 1 94 1 171 1 247 1 34 1 360 1 61 3 8 2 201 1 268 1 12 1 155 1 333 2 40 1 255 1 68 1 25 1 373 3 313 4 212 1 287 1 114 1 
333 2 291 3 40 1 94 1 247 1 171 1 255 1 34 1 68 1 25 1 360 1 373 3 8 2 61 3 201 1 268 1 313 4 212 1 346 1 12 1 114 1 155 1 
373 1 291 1 61 1 268 1 171 1 336 1 
367 1 291 7 32 1 247 2 171 2 336 1 306 1 256 1 68 1 109 1 148 1 228 1 259 1 373 7 61 6 268 3 313 3 176 1 363 1 12 2 192 1 
90 1 288 1 291 1 144 4 247 1 2 2 95 1 296 1 96 1 197 2 58 1 61 1 345 2 297 3 10 1 252 2 21 1 68 1 163 1 110 2 314 2 313 1 115 1 168 1 31 6 171 1 220 3 172 1 268 1 231 1 272 1 130 1 367 1 235 2 277 2 369 2 278 1 335 1 371 1 279 1 373 1 375 2 378 2 188 1 380 1 51 1 342 1 
53 1 92 2 291 1 94 1 118 1 34 1 221 1 360 2 149 1 61 1 8 3 346 1 12 1 202 2 299 2 103 2 349 1 333 3 351 1 25 1 283 1 373 1 310 1 313 2 212 1 340 1 214 1 114 1 
367 1 291 2 94 1 247 1 171 1 42 1 336 1 256 1 68 1 373 2 61 2 268 2 313 2 
367 1 193 1 291 4 65 1 247 1 171 1 373 4 61 4 201 1 268 1 313 1 12 1 240 1 
291 2 247 1 171 1 255 1 306 1 294 1 68 1 226 1 148 1 373 2 61 2 268 2 313 1 49 1 
359 1 373 1 291 1 61 1 268 1 171 1 325 1 12 1 50 1 196 1 
367 1 228 1 373 2 291 2 61 2 268 1 313 1 171 1 247 1 363 1 263 1 
367 1 193 1 291 5 65 1 32 1 247 2 171 2 255 1 109 1 373 5 61 4 268 2 313 3 12 1 363 1 240 1 
367 1 193 1 291 5 65 1 32 1 247 2 171 2 255 1 373 5 61 4 111 1 268 2 313 3 12 1 363 1 240 1 
291 1 247 1 171 1 172 1 371 1 21 1 3 1 68 1 296 1 197 2 110 2 373 1 61 1 268 1 313 1 12 1 272 1 252 1 
291 1 247 1 171 1 255 1 306 1 256 1 68 1 148 1 373 1 61 1 268 2 313 1 176 1 
59 1 308 1 117 1 223 1 252 1 
349 1 315 1 333 2 117 2 303 1 73 1 223 2 24 1 25 1 59 2 372 1 308 1 7 1 8 2 150 1 212 1 139 1 114 1 252 1 
117 1 72 1 223 1 21 1 248 1 197 1 110 1 308 1 251 1 
7 1 308 1 139 1 
0 1 69 1 93 1 165 1 
295 1 0 1 71 1 69 1 165 1 352 1 194 1 
352 1 327 1 182 1 
0 1 71 1 290 1 85 1 352 3 219 1 194 3 5 2 295 1 27 1 69 1 165 1 
295 1 0 1 71 1 69 1 266 1 165 1 352 2 127 1 194 2 
71 1 85 1 352 1 194 1 295 1 359 1 46 1 151 1 165 1 325 1 300 1 
295 1 0 1 71 1 85 1 165 1 352 1 194 1 
295 1 0 2 71 1 69 1 85 1 352 1 194 1 
0 1 71 2 237 1 85 1 352 2 194 2 295 2 174 1 361 1 165 1 
0 1 71 1 85 1 350 1 352 3 194 3 295 1 69 1 266 2 312 1 151 1 165 2 329 1 
104 1 0 1 71 1 85 1 352 2 194 2 196 1 295 1 359 1 88 1 46 1 69 1 266 1 165 1 325 2 
0 1 71 2 85 1 352 4 238 1 194 4 295 2 69 1 266 2 312 1 151 1 165 2 127 1 
295 1 0 1 71 1 69 1 85 1 165 1 352 1 194 1 
0 2 71 1 64 1 219 1 352 4 194 4 5 1 295 1 27 1 69 2 266 2 312 1 151 1 165 3 
0 1 71 1 85 1 352 2 194 2 295 1 69 1 266 1 165 1 271 1 102 1 178 1 
0 1 71 1 85 1 219 1 352 3 194 3 5 2 295 1 27 2 69 1 285 1 165 1 
269 2 165 2 246 1 358 1 
295 1 71 1 85 1 107 1 352 1 194 1 
295 1 0 1 71 1 69 1 266 1 350 1 85 1 165 1 352 2 194 2 
225 1 
295 1 0 1 71 1 69 1 85 1 165 1 352 1 194 1 
0 1 71 1 85 1 350 1 352 3 194 3 5 1 295 1 69 1 266 1 165 1 
64 1 312 1 165 1 151 1 
0 1 165 1 

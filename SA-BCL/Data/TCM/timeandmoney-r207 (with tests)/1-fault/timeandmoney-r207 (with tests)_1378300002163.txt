#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 5 297 4 131 1 77 1 340 1 162 6 222 1 163 1 81 3 195 1 249 1 138 9 285 1 142 2 18 2 289 2 88 2 175 1 201 2 202 9 350 2 335 1 123 2 124 1 125 1 126 1 271 1 256 1 
240 5 297 4 131 1 77 1 340 1 162 6 222 1 163 1 81 3 195 1 249 1 138 9 285 1 142 2 18 2 289 2 88 2 175 1 201 2 202 9 350 2 335 1 123 2 124 1 125 1 126 1 271 1 256 1 
240 6 297 5 131 1 77 1 340 1 162 7 222 1 163 1 81 4 195 1 249 1 138 10 285 1 142 2 18 2 289 2 88 2 175 1 201 2 202 10 350 2 335 1 123 2 124 1 125 1 126 1 271 1 256 1 
240 4 297 3 131 1 77 1 340 1 162 4 222 1 163 1 81 2 195 1 249 1 138 7 285 1 142 2 18 2 289 2 88 1 175 1 201 2 202 7 350 2 335 1 123 2 124 1 125 1 126 1 271 1 
142 1 18 1 240 3 297 2 88 2 201 1 77 1 162 3 202 4 350 1 81 1 123 1 125 1 126 1 138 4 271 1 256 1 285 1 
142 1 55 1 328 1 240 1 289 1 175 1 98 1 201 1 340 1 202 2 350 1 123 1 125 1 126 1 138 2 271 1 
142 2 240 2 289 1 297 1 131 1 201 2 162 1 202 3 81 1 125 1 126 1 138 3 271 1 
240 5 297 4 131 1 77 1 162 7 222 1 81 3 195 1 138 9 285 1 142 2 18 1 289 1 88 2 201 2 202 9 378 1 350 1 149 1 123 1 125 1 126 1 271 1 256 1 
240 5 297 4 131 1 77 1 162 7 222 1 81 3 195 1 138 9 285 1 142 2 18 1 289 1 88 2 201 2 202 9 378 1 350 1 149 1 123 1 125 1 126 1 271 1 256 1 
166 1 255 1 161 1 
246 1 345 2 166 1 
62 2 337 1 104 2 176 2 37 2 243 2 370 1 253 2 
186 1 337 1 96 1 257 1 58 1 258 1 75 1 189 1 76 2 279 1 358 2 37 3 243 2 359 1 78 1 61 1 62 2 102 2 104 2 38 1 284 1 370 1 287 1 228 1 44 1 112 1 172 1 145 1 346 2 176 3 253 2 233 1 179 2 379 1 151 1 209 1 153 1 
62 1 86 1 337 1 104 1 51 1 27 1 176 1 37 1 243 1 253 1 
17 1 37 1 176 1 116 1 161 1 311 1 294 1 381 1 104 1 166 1 165 1 27 1 127 1 264 1 
17 2 243 1 37 1 176 1 116 1 161 1 253 1 62 1 381 1 104 1 166 1 165 1 27 1 127 2 264 1 
47 1 17 1 275 1 127 1 141 1 
47 1 17 2 262 1 275 1 166 1 127 2 161 1 167 1 
17 1 275 1 127 1 
17 1 86 1 337 1 243 1 37 1 176 1 253 1 47 1 62 1 104 1 51 1 248 1 27 1 127 1 
166 1 
47 1 17 2 262 1 83 1 275 1 166 1 127 2 161 1 
355 1 213 2 337 1 156 1 157 1 188 2 275 2 7 1 37 1 243 1 161 2 245 2 62 1 262 1 10 1 104 1 39 2 248 1 166 2 250 4 15 1 303 1 17 5 327 1 372 1 86 1 200 1 176 1 253 1 47 2 254 2 51 1 50 2 27 1 353 5 184 1 127 5 212 1 
255 1 370 1 
128 1 37 2 176 2 243 1 253 1 292 1 62 1 104 2 370 2 
363 1 95 1 323 1 
41 1 44 1 172 1 112 1 145 1 76 1 176 1 37 1 359 1 78 1 233 1 179 1 379 1 102 1 209 1 370 1 
338 1 44 1 252 1 112 1 172 1 145 1 76 1 359 1 37 2 176 2 78 1 253 1 233 1 62 1 363 1 379 1 179 1 102 1 209 1 104 1 
62 3 252 1 104 3 243 1 176 3 37 3 370 1 253 3 
62 1 86 1 104 1 27 1 176 1 37 1 253 1 
292 1 62 1 128 1 104 1 27 1 176 1 37 1 243 1 253 1 
337 1 128 1 338 1 257 1 58 1 75 1 189 1 76 1 279 1 358 2 359 1 243 2 37 4 78 1 61 1 62 3 102 1 104 3 165 1 264 1 370 1 287 1 17 1 228 1 44 1 252 1 112 1 172 1 171 1 145 1 346 1 176 4 116 1 253 3 233 1 379 1 179 1 151 1 381 1 209 1 27 1 153 1 127 1 239 1 
62 1 136 1 104 2 252 1 176 2 37 2 311 1 370 1 253 1 
17 1 128 1 338 1 252 2 243 1 116 1 37 3 176 3 9 1 253 3 62 3 381 1 104 3 166 1 165 1 27 1 127 1 264 1 239 1 
95 1 128 1 252 1 243 1 37 2 176 2 253 2 62 2 363 1 104 2 
44 1 172 1 112 1 145 1 76 1 176 1 37 1 359 1 78 1 233 1 179 1 379 1 102 1 209 1 370 1 
44 1 112 1 199 1 145 1 76 1 176 1 37 1 359 1 78 1 341 1 233 1 179 1 102 1 209 1 370 1 
273 1 95 2 257 1 216 1 58 1 258 2 189 1 130 1 358 2 279 2 160 1 61 1 363 2 39 1 323 2 228 1 266 1 87 1 346 4 377 1 26 1 50 1 52 1 153 1 
62 1 381 1 104 1 27 1 176 1 37 1 185 1 253 1 
42 1 128 1 338 1 252 2 37 5 176 5 243 1 311 1 253 4 63 1 62 4 136 1 104 5 370 1 
62 2 86 1 104 2 27 1 176 2 37 2 185 1 253 2 
164 1 114 1 
164 1 114 1 
101 1 217 1 
101 1 217 1 
101 1 217 1 
80 1 164 1 114 1 
80 1 164 1 114 1 
164 1 114 1 286 1 
101 1 43 1 181 1 164 2 217 1 114 2 
80 1 164 1 114 1 
164 1 374 1 114 1 
164 1 374 1 114 1 
164 1 374 1 114 1 
16 2 17 2 30 3 43 1 339 1 56 2 97 2 144 1 148 2 331 1 114 2 203 1 282 2 164 2 25 1 166 1 84 1 127 2 344 1 
272 1 30 1 56 1 37 2 62 2 282 1 164 1 104 2 263 1 322 1 14 1 370 1 286 1 16 1 17 1 225 1 109 1 148 1 114 1 176 2 253 2 203 1 117 1 127 1 
350 1 18 1 123 1 
350 1 123 1 98 1 
18 2 123 3 208 1 302 1 98 1 347 1 
18 1 123 2 302 1 223 1 98 1 347 1 
18 1 123 2 302 1 98 1 347 2 
188 1 242 1 218 2 275 1 59 1 7 1 261 2 161 1 245 1 262 1 301 1 263 1 39 1 246 1 166 2 369 2 250 3 17 5 225 1 87 1 19 1 345 3 47 4 117 1 254 1 351 1 334 1 50 1 211 1 52 1 353 2 127 5 
157 1 188 2 4 1 242 2 218 6 275 6 220 5 7 1 261 6 161 1 360 1 245 2 79 1 281 1 262 1 301 2 39 3 246 3 166 5 250 8 141 5 17 9 87 3 345 9 268 1 117 4 47 7 254 2 122 1 351 3 50 3 211 1 52 3 353 6 127 9 
157 1 188 1 242 1 59 1 218 2 161 1 261 2 245 1 301 1 39 1 246 2 166 3 369 1 250 3 17 3 87 1 345 4 47 2 117 1 254 1 334 1 351 1 50 1 52 1 353 2 127 3 
157 1 188 1 242 1 218 4 59 1 161 1 261 4 245 1 79 1 281 1 301 1 39 2 246 3 166 4 369 2 250 5 17 4 87 2 345 7 268 1 117 2 47 3 254 1 334 1 351 2 50 2 52 2 353 4 127 4 
119 1 145 1 255 1 
145 1 183 1 
343 1 
209 1 145 1 
119 2 209 1 103 1 112 1 145 3 277 1 
209 1 112 1 145 1 
196 1 145 1 
273 2 28 1 1 1 356 1 156 1 258 4 130 3 279 3 200 1 309 2 346 7 190 1 283 1 39 1 50 1 197 1 184 1 
273 2 28 1 1 1 356 1 156 1 258 4 130 3 279 3 200 1 309 2 346 7 190 1 283 1 39 1 50 1 197 1 184 1 
273 2 28 1 1 1 356 1 156 1 129 1 258 4 130 3 279 3 200 1 309 2 346 7 190 1 283 1 39 1 50 1 197 1 184 1 
28 2 273 5 1 1 356 5 156 1 58 1 357 4 258 16 189 1 130 10 358 2 279 15 6 1 190 1 61 1 361 3 299 1 283 1 366 1 39 4 197 2 228 1 87 3 200 2 309 3 346 31 46 1 90 1 351 3 270 1 50 4 52 3 184 2 54 1 
28 1 273 3 1 1 318 1 356 1 156 1 58 2 258 5 189 2 130 4 358 4 279 4 6 1 132 1 190 1 61 2 39 1 197 1 228 2 309 2 200 1 346 9 50 1 184 1 
93 1 240 1 187 1 76 1 98 1 359 1 162 1 64 1 191 1 102 1 367 1 138 2 139 1 142 1 18 1 289 1 230 1 201 1 202 2 233 1 350 1 24 1 179 1 180 1 123 2 208 1 316 1 125 1 126 1 271 1 
240 1 187 1 76 1 98 1 359 1 162 2 64 1 191 1 102 1 367 1 138 3 139 1 85 1 142 1 18 1 289 1 230 1 332 1 201 1 202 3 233 1 350 1 24 1 179 1 180 1 120 1 123 2 208 1 126 1 271 1 
240 1 187 1 76 1 98 1 359 1 162 2 191 1 102 1 367 1 138 2 139 1 85 1 18 1 289 1 202 2 233 1 24 1 350 1 179 1 180 1 120 1 123 2 208 1 126 1 271 1 
187 2 158 1 76 1 359 1 78 1 321 1 102 1 138 1 139 2 168 1 326 1 142 1 289 2 145 1 332 1 201 1 233 1 202 1 179 1 180 2 380 1 209 1 238 1 
93 1 187 1 76 1 98 1 359 1 64 1 191 1 102 1 367 1 138 1 139 1 85 1 142 1 18 1 289 1 230 1 201 1 202 1 233 1 350 1 24 1 179 1 180 1 123 2 208 1 125 1 
235 1 
94 1 215 2 219 2 7 1 161 1 262 3 66 2 301 1 102 2 104 1 105 1 166 2 165 1 13 2 264 1 168 1 17 5 169 1 68 1 267 1 231 2 345 2 20 1 177 2 310 1 176 1 116 1 311 1 233 1 179 2 353 2 27 1 127 5 188 1 275 6 35 1 76 2 359 1 37 1 78 2 245 1 362 2 82 4 246 2 250 2 140 1 326 1 251 1 145 1 205 1 254 1 294 1 381 1 209 1 91 1 
94 1 275 2 37 1 262 1 82 2 83 1 104 1 165 1 264 1 17 3 68 1 267 1 231 1 176 1 116 1 311 1 205 1 294 1 381 1 91 1 27 1 127 3 
94 1 215 1 275 1 37 1 161 1 262 1 82 3 83 1 104 1 165 1 166 1 264 1 17 3 68 1 267 1 176 1 116 1 311 1 205 1 294 1 381 1 91 1 27 1 127 3 
94 1 215 1 275 2 37 1 161 1 262 1 82 3 83 1 66 1 104 1 165 1 166 1 264 1 17 3 68 1 267 1 231 1 176 1 116 1 311 1 205 1 294 1 381 1 91 1 27 1 127 3 
94 1 215 4 219 2 7 1 161 5 262 3 66 4 104 1 105 1 165 1 166 5 13 2 264 1 17 5 108 1 68 1 267 1 231 4 116 1 176 1 177 2 311 1 349 1 118 1 27 1 353 1 127 5 188 1 274 1 275 7 37 1 245 1 362 2 82 6 83 1 246 2 247 1 250 1 251 1 205 1 294 1 254 1 381 1 91 1 
94 1 215 2 219 2 7 1 161 1 262 2 66 2 104 1 105 1 165 1 166 2 13 2 264 1 17 4 68 1 267 1 345 2 231 2 20 1 116 1 176 1 177 2 311 1 27 1 353 1 127 4 188 1 275 4 37 1 245 1 362 2 82 4 246 2 250 1 251 1 205 1 254 1 294 1 381 1 91 1 
94 1 215 2 188 1 274 1 275 4 219 2 7 1 37 1 161 1 245 1 362 2 262 2 82 4 66 2 104 1 105 1 246 2 247 1 166 1 165 1 13 2 250 1 264 1 17 4 251 1 68 1 267 1 231 2 177 2 176 1 116 1 311 1 349 1 205 1 294 1 254 1 381 1 91 1 353 1 27 1 127 4 
94 1 215 2 188 1 274 1 275 4 219 2 7 1 37 1 161 1 245 1 362 2 262 2 82 4 66 2 104 1 105 1 246 2 247 1 166 1 165 1 13 2 250 1 264 1 17 4 251 1 68 1 267 1 231 2 177 2 176 1 116 1 311 1 349 1 205 1 294 1 254 1 381 1 91 1 353 1 27 1 127 4 
94 1 155 1 215 2 188 1 275 4 7 1 37 1 161 1 245 1 262 2 82 4 66 2 104 1 105 1 247 1 166 1 165 1 13 2 250 1 264 1 17 4 68 1 267 1 231 2 290 2 345 2 177 2 176 1 116 1 311 1 22 1 205 1 294 1 254 1 381 1 49 1 207 2 91 1 353 1 27 1 127 4 
94 1 215 3 188 1 274 1 219 2 275 5 7 1 37 1 161 1 245 1 362 2 262 2 82 5 66 3 104 1 105 1 246 2 247 1 166 1 165 1 13 2 250 1 264 1 17 4 251 1 68 1 267 1 231 3 177 2 176 1 116 1 349 1 311 1 118 1 205 1 254 1 294 1 381 1 91 1 353 1 27 1 127 4 
94 1 215 3 188 1 274 1 219 2 275 5 7 1 37 1 161 1 245 1 362 2 262 2 82 5 66 3 104 1 105 1 246 2 247 1 166 1 165 1 13 2 250 1 264 1 17 4 251 1 68 1 267 1 231 3 177 2 176 1 116 1 349 1 311 1 118 1 205 1 254 1 294 1 381 1 91 1 353 1 27 1 127 4 
94 1 215 2 7 1 161 1 262 2 66 2 104 1 105 1 165 1 166 1 13 2 264 1 17 4 68 1 267 1 345 2 231 2 20 1 116 1 176 1 177 2 311 1 22 1 27 1 353 1 127 4 188 1 275 4 37 1 245 1 82 4 250 1 290 2 205 1 254 1 294 1 381 1 207 2 91 1 
273 2 1 1 95 1 156 1 257 1 228 1 58 1 258 3 266 1 130 2 189 1 309 1 279 3 200 1 358 2 346 6 190 1 61 1 363 1 323 1 39 1 50 1 255 1 153 1 184 1 370 2 
273 1 356 1 95 4 96 1 257 2 357 3 58 2 258 8 130 2 5 1 189 2 279 6 358 4 61 2 361 3 299 1 363 11 323 11 366 1 39 1 370 1 305 1 170 1 228 2 87 2 346 14 269 1 151 1 351 2 50 2 52 1 354 1 153 1 
95 1 338 1 257 1 96 1 58 1 258 1 189 1 34 1 76 1 358 2 279 1 359 1 37 2 78 1 61 1 62 1 193 1 135 1 102 1 104 1 370 1 41 1 228 1 44 1 252 1 112 1 172 1 145 1 346 2 176 2 253 1 233 1 379 1 179 1 269 1 151 1 209 1 153 1 
1 1 0 2 95 7 338 1 156 1 96 1 257 3 58 3 258 10 60 1 62 1 61 3 102 3 104 1 306 1 107 2 228 3 172 2 112 2 309 1 346 20 176 3 233 2 179 3 269 1 351 2 184 1 273 4 74 2 356 4 75 2 189 3 130 8 76 3 279 10 358 6 37 3 359 2 78 1 190 1 133 1 363 7 39 3 323 7 370 2 85 1 252 1 44 2 145 2 87 2 200 1 253 1 379 2 151 1 209 2 210 2 50 3 52 2 153 3 
186 2 257 2 96 1 57 1 58 2 258 1 189 2 76 8 358 4 279 1 37 1 359 2 78 2 62 1 61 2 102 7 104 1 67 1 168 1 326 1 85 1 228 2 111 1 252 1 266 1 145 3 346 2 89 1 71 1 176 1 376 1 253 1 233 2 179 8 151 1 316 1 209 2 236 1 153 2 
273 1 95 1 128 1 257 1 58 1 258 1 130 1 189 1 358 2 279 2 243 1 37 1 62 1 61 1 363 1 104 1 323 1 39 1 228 1 87 1 346 3 115 1 176 1 253 1 269 1 351 1 50 1 52 1 153 1 
356 1 95 1 257 1 228 1 58 1 266 1 258 2 130 1 189 1 87 1 358 2 346 2 377 1 61 1 363 1 323 1 50 1 153 1 
273 1 95 1 257 1 228 1 58 1 266 1 130 1 189 1 358 2 279 2 346 2 61 1 363 1 26 1 323 1 39 1 52 1 153 1 
273 1 356 1 95 2 257 1 58 1 258 2 189 1 130 2 358 2 279 2 61 1 363 2 323 2 39 1 228 1 266 1 87 1 346 4 351 1 50 1 52 1 153 1 
356 1 95 1 257 1 228 1 58 1 258 2 130 1 189 1 87 1 358 2 346 2 376 1 377 1 61 1 363 1 323 1 50 1 153 1 
273 1 95 1 257 1 228 1 58 1 130 1 189 1 358 2 279 2 346 2 376 1 61 1 363 1 26 1 323 1 39 1 52 1 153 1 
273 1 356 1 95 2 257 1 58 1 258 2 189 1 130 2 358 2 279 2 61 1 363 2 323 2 39 1 228 1 87 1 346 4 376 1 351 1 50 1 52 1 153 1 
273 1 356 1 95 2 257 1 58 1 258 2 189 1 130 2 358 2 279 2 61 1 363 2 323 2 39 1 228 1 87 1 346 4 351 1 50 1 52 1 153 1 
96 1 257 1 58 1 258 1 75 1 189 1 76 1 358 2 279 1 359 1 37 1 78 1 61 1 102 1 370 1 228 1 44 1 112 1 172 1 145 1 346 2 176 1 233 1 379 1 179 1 151 1 209 1 153 1 
96 1 257 1 58 1 258 1 189 1 76 1 358 2 279 1 359 1 37 1 78 1 341 1 61 1 102 1 370 1 325 1 228 1 44 1 112 1 199 1 145 1 346 2 176 1 233 1 179 1 151 1 209 1 153 1 
273 1 356 1 95 2 257 1 58 1 258 2 189 1 130 2 358 2 279 2 61 1 363 2 323 2 39 1 228 1 87 1 346 4 269 1 351 1 50 1 52 1 153 1 
273 1 356 1 95 2 257 1 58 1 258 2 75 1 130 2 189 1 76 1 279 2 358 2 359 1 37 1 61 1 363 2 102 1 39 1 323 2 228 1 44 1 112 1 172 1 87 1 145 1 346 4 176 1 233 1 379 1 179 1 351 1 316 1 209 1 210 1 50 1 52 1 153 1 
356 1 214 1 95 1 128 1 257 1 58 1 258 2 130 1 189 1 279 1 358 2 243 1 37 1 62 1 61 1 363 1 104 1 39 1 323 1 228 1 87 1 346 3 176 1 253 1 269 1 351 1 50 1 52 1 153 1 
273 3 318 1 356 3 3 2 357 2 58 2 258 9 189 2 130 6 358 4 279 10 61 2 361 1 299 1 65 1 366 1 39 3 226 1 228 2 87 3 146 1 346 19 21 1 351 3 295 1 92 1 50 3 237 2 52 3 154 1 
273 2 356 2 318 1 3 4 58 3 357 2 258 14 130 4 189 3 279 12 358 6 6 2 99 1 61 3 361 2 299 2 65 1 39 2 307 1 288 1 228 3 87 3 146 2 346 26 375 1 21 1 351 3 295 2 48 1 50 3 352 1 237 1 52 2 154 1 
273 4 1 1 318 1 356 4 3 4 156 1 357 4 58 3 258 20 189 3 130 8 358 6 279 21 6 1 99 1 190 1 61 3 361 3 299 3 65 1 366 1 39 5 307 1 288 1 228 3 87 4 146 1 309 1 200 1 375 1 346 41 21 1 291 1 351 4 48 1 295 2 92 1 50 5 352 1 237 1 52 4 184 1 154 1 
273 4 1 1 318 1 356 3 3 4 156 1 357 4 58 4 258 20 189 4 130 7 358 8 279 18 6 2 99 1 190 1 61 4 361 3 299 3 65 1 366 1 39 4 307 1 288 1 228 4 87 4 146 1 309 1 200 1 375 1 346 38 21 1 291 1 351 4 48 1 295 2 92 1 50 5 352 1 237 1 52 3 184 1 154 1 
273 7 1 1 318 1 356 7 3 4 156 1 357 4 58 2 258 27 189 2 130 14 358 4 279 25 6 1 99 1 190 1 61 2 361 4 299 2 65 1 366 2 39 8 307 1 288 1 228 2 87 7 146 1 309 1 200 1 375 1 346 52 21 1 351 7 48 1 295 1 50 8 352 1 237 1 52 7 184 1 354 2 154 1 
16 1 282 1 43 1 164 1 339 1 56 1 148 1 84 1 114 1 106 1 
322 1 286 1 
16 1 282 1 164 1 56 1 298 1 69 1 148 1 114 1 53 1 
16 1 17 1 30 2 43 1 339 1 56 1 97 1 144 1 148 1 114 1 203 1 282 1 164 1 25 1 166 1 84 1 127 1 344 1 
16 1 17 1 30 2 43 1 339 1 56 1 97 1 144 1 148 1 114 1 203 1 282 1 164 1 25 1 166 1 84 1 127 1 344 1 
16 1 17 1 30 2 43 1 339 1 56 1 97 1 144 1 148 1 114 1 203 1 282 1 164 1 25 1 166 1 84 1 127 1 344 1 
80 1 181 1 227 1 
80 1 181 1 227 1 
312 1 374 1 
312 1 181 1 374 1 
109 1 14 1 
272 1 336 1 30 1 56 1 97 1 37 2 62 2 282 1 164 1 104 2 263 1 322 1 14 1 370 1 286 1 16 1 17 1 225 1 109 1 148 1 114 1 176 2 253 2 47 1 117 1 25 1 127 1 
80 1 227 1 
312 1 181 1 374 1 
186 2 257 1 96 1 58 1 258 1 189 1 76 2 358 2 279 1 359 1 37 2 280 1 61 1 300 1 102 2 104 2 324 1 265 1 228 1 145 1 346 2 71 1 176 2 233 1 179 2 269 1 151 1 209 1 152 1 236 1 153 1 
85 1 18 1 76 2 230 1 98 1 330 1 359 1 320 1 233 1 350 1 24 1 179 2 123 2 208 1 102 2 316 1 367 1 368 1 139 1 
85 1 18 1 70 1 76 1 230 1 98 1 330 1 359 1 233 1 350 1 24 1 179 1 123 2 208 1 102 1 367 1 139 1 
168 1 326 1 158 1 145 1 76 1 276 1 359 1 78 1 233 1 179 1 102 1 209 1 368 1 139 1 
85 1 18 1 76 1 230 1 98 1 330 1 320 1 359 1 233 1 350 1 24 1 179 1 123 2 208 1 102 1 367 1 368 1 139 1 
178 1 
355 1 166 1 353 1 255 1 250 1 161 1 212 1 
188 1 219 1 275 1 7 1 161 1 245 1 362 1 262 1 246 1 166 2 250 1 17 1 251 1 345 1 254 1 353 1 127 1 
0 2 213 2 218 6 7 4 221 1 260 2 161 2 261 6 262 3 301 2 102 3 11 1 342 1 166 8 304 1 17 5 112 3 345 12 310 1 116 2 233 4 314 2 313 2 179 3 119 2 351 2 316 1 183 3 353 8 127 5 317 2 355 1 188 4 76 3 277 1 275 5 359 3 319 2 78 1 245 4 194 2 196 2 39 2 246 6 250 9 372 2 45 1 145 10 87 2 254 4 209 3 50 2 52 2 212 1 
213 2 188 2 357 1 275 1 218 5 7 2 99 1 261 5 161 2 245 2 361 1 262 1 299 1 301 1 39 2 246 3 166 5 250 8 17 1 372 1 307 1 87 2 345 6 232 1 375 1 310 1 348 1 254 2 351 2 48 1 50 2 352 1 353 5 52 2 127 1 
213 2 337 1 156 1 188 1 7 1 37 1 243 1 245 1 62 1 104 1 39 1 248 1 250 2 327 1 17 1 372 1 86 1 200 1 176 1 349 1 253 1 254 1 50 2 51 1 27 1 353 2 184 1 127 1 
355 1 188 1 7 1 161 1 245 1 254 1 166 1 353 1 212 1 250 1 
0 1 372 1 213 2 87 2 218 5 345 10 261 5 351 2 39 2 50 2 246 5 166 5 353 5 52 2 250 5 
17 1 262 1 275 1 166 1 127 1 161 1 
157 1 188 2 35 1 76 4 275 4 7 1 359 1 78 2 245 2 262 2 102 4 301 2 304 1 250 2 224 1 168 1 17 3 326 1 169 1 45 2 145 1 310 2 233 1 254 2 179 4 209 1 353 2 72 1 127 3 
337 1 257 1 58 1 75 1 189 1 76 1 279 1 358 2 37 3 243 2 359 1 78 1 62 2 61 1 102 1 104 2 370 1 287 1 228 1 44 1 172 1 112 1 145 1 346 1 176 3 253 2 233 1 179 1 379 1 151 1 209 1 153 1 
188 1 345 4 218 2 309 1 7 1 310 1 261 2 161 2 245 1 254 1 301 1 246 2 166 4 353 2 250 1 
282 1 364 1 148 1 
282 1 364 1 148 1 
282 1 206 1 339 1 148 1 14 1 
282 1 364 1 148 1 
282 1 148 1 40 1 
282 1 148 1 40 1 
282 1 148 1 40 1 
282 1 148 1 
164 1 114 1 
273 2 1 1 356 1 156 1 228 2 58 2 258 4 130 3 189 2 309 1 279 4 358 4 200 1 346 8 6 1 190 1 61 2 39 1 50 1 184 1 
273 2 1 1 156 1 258 3 130 2 309 1 279 3 200 1 346 6 190 1 39 1 50 1 255 1 184 1 
273 1 356 1 32 1 228 1 58 1 258 2 130 2 189 1 87 1 279 2 358 2 346 4 61 1 351 1 39 1 50 1 52 1 
273 1 356 1 357 2 258 3 87 1 130 2 279 4 346 7 361 1 299 1 351 1 39 1 366 1 50 1 52 1 
273 5 1 1 356 4 156 1 357 2 58 2 258 11 130 9 189 2 279 12 358 4 6 2 190 1 61 2 361 2 366 1 39 3 170 1 228 2 87 2 309 1 200 2 346 23 293 1 351 2 50 3 52 2 184 2 354 1 
357 1 279 1 346 1 
361 1 258 1 346 1 
273 2 0 1 356 1 32 1 228 1 58 1 258 3 189 1 87 1 130 3 358 2 279 3 346 6 61 1 351 1 39 1 50 1 52 1 
273 1 356 1 318 1 357 1 58 1 258 6 189 1 130 2 279 6 358 2 99 1 61 1 361 1 299 1 39 2 307 1 228 1 87 2 346 12 375 1 351 2 48 1 50 2 352 1 52 2 
273 1 356 1 156 1 258 3 130 2 279 3 200 1 346 6 39 1 50 1 184 1 
273 1 1 1 356 1 228 1 58 1 258 1 130 2 189 1 200 1 279 2 358 2 346 3 6 1 190 1 293 1 61 1 184 1 
273 3 327 1 318 1 356 2 156 1 228 1 58 1 258 5 189 1 130 5 358 2 200 2 279 5 346 10 61 1 39 2 50 2 184 2 
318 1 356 1 228 1 58 1 258 2 189 1 87 1 130 1 358 2 346 2 61 1 50 1 
273 1 318 1 356 1 228 1 58 1 258 2 130 2 189 1 87 1 279 2 358 2 346 4 61 1 351 1 39 1 50 1 52 1 
273 1 318 1 356 1 228 3 58 3 258 1 189 3 130 2 279 2 358 6 200 1 6 1 346 3 293 1 61 3 92 1 184 1 
273 7 1 1 318 1 356 5 156 2 32 1 357 4 58 5 258 16 189 5 130 12 279 18 358 10 6 2 190 1 61 5 361 3 299 1 366 1 39 5 228 5 87 3 309 1 200 3 346 34 293 1 90 1 351 3 270 1 92 1 50 5 52 3 184 3 54 1 
273 2 1 1 318 1 156 1 357 1 58 1 258 4 189 1 130 2 279 4 358 2 190 1 61 1 361 1 299 1 39 1 307 1 228 1 309 1 200 1 346 8 50 1 184 1 
273 2 1 1 318 1 356 1 156 1 32 1 357 2 58 2 258 6 189 2 130 3 279 5 358 4 190 1 61 2 361 1 299 1 39 1 366 1 307 1 228 2 87 1 309 1 200 1 346 11 351 1 50 2 184 1 
273 3 1 1 356 1 318 1 156 1 32 1 357 1 58 3 258 9 189 3 130 4 279 10 358 6 6 1 99 1 190 1 61 3 361 1 299 1 39 3 307 1 228 3 87 2 309 1 200 1 346 19 375 1 351 2 48 1 50 3 352 1 52 2 184 1 
273 3 1 1 356 2 318 1 156 1 32 1 357 1 58 3 258 10 189 3 130 5 279 7 358 6 6 1 99 1 190 1 61 3 361 1 299 1 39 2 307 1 228 3 87 2 309 1 200 1 346 17 375 1 351 2 48 1 50 3 352 1 52 1 184 1 
273 2 1 1 318 1 156 1 357 1 58 1 258 4 189 1 130 2 279 4 358 2 190 1 61 1 361 1 299 1 39 1 307 1 228 1 309 1 200 1 346 8 50 1 184 1 
273 1 356 1 318 1 357 1 58 1 258 6 189 1 130 2 279 6 358 2 99 1 61 1 361 1 299 1 39 2 307 1 228 1 87 2 346 12 375 1 351 2 48 1 50 2 352 1 52 2 
273 3 1 1 356 2 318 1 156 1 32 1 357 1 58 4 258 10 189 4 130 5 279 8 358 8 6 2 99 1 190 1 61 4 361 1 299 1 39 2 307 1 228 4 87 2 309 1 200 1 346 18 375 1 351 2 48 1 50 3 352 1 52 1 184 1 
273 3 356 3 318 1 357 1 58 4 258 9 189 4 130 6 279 7 358 8 6 2 99 1 61 4 361 1 299 1 39 2 307 1 228 4 87 3 346 16 375 1 351 3 48 1 92 1 50 3 352 1 52 2 
273 3 1 2 356 3 156 1 258 3 130 6 279 4 200 3 346 7 190 1 39 1 50 1 184 3 
273 3 1 1 356 1 318 1 156 1 357 1 58 4 258 10 189 4 130 4 279 8 358 8 6 2 99 1 190 1 61 4 361 1 299 1 39 2 307 1 228 4 87 2 309 1 200 1 346 18 375 1 351 2 48 1 92 1 50 3 352 1 52 1 184 1 
136 1 104 1 137 1 176 1 37 1 311 1 370 1 
136 1 104 1 137 1 12 1 147 1 36 1 176 1 37 1 311 1 244 1 73 1 370 1 
233 1 168 1 326 1 179 1 102 1 209 1 145 1 76 1 255 1 359 1 78 1 
44 1 252 1 112 1 145 1 76 1 37 2 176 2 359 1 78 1 253 1 233 1 62 1 179 1 379 1 102 1 209 1 104 1 370 1 
44 1 252 1 45 1 112 2 145 3 76 1 319 1 37 2 176 2 359 1 253 2 233 1 62 1 179 1 379 1 381 1 196 1 102 1 209 2 104 2 27 1 264 1 370 1 
44 1 252 1 45 1 112 2 145 3 76 2 319 1 37 2 176 2 359 1 253 2 341 1 233 1 62 1 234 1 179 2 381 1 196 1 102 2 209 2 104 2 27 1 264 1 370 1 
17 2 45 1 112 1 145 4 76 3 275 1 116 1 319 1 359 1 78 1 161 1 333 1 233 1 234 1 179 3 119 1 121 1 196 1 102 3 209 1 166 1 183 1 127 2 
17 2 45 1 112 1 145 4 76 3 275 1 116 1 319 1 260 1 359 1 78 1 161 1 233 1 234 1 179 3 119 1 196 1 102 3 209 1 166 1 183 1 127 2 
233 1 179 1 102 1 76 1 359 1 89 1 
186 1 85 1 57 1 110 1 111 1 112 1 145 3 76 7 277 1 89 1 71 1 359 2 78 2 233 3 179 7 102 6 316 1 209 2 67 1 182 1 296 1 
273 2 1 1 95 1 156 1 257 2 58 2 258 3 75 1 130 2 189 2 76 1 279 3 358 4 359 1 37 2 190 1 61 2 62 1 363 1 300 1 102 1 104 1 323 1 39 1 370 2 107 1 228 2 44 1 252 1 112 1 172 1 145 1 309 1 200 1 346 6 176 2 253 1 233 1 179 1 379 1 269 1 209 1 316 1 210 1 50 1 184 1 153 2 
355 1 188 2 76 1 275 2 7 2 260 1 161 1 78 1 245 2 262 1 194 1 102 1 166 1 250 1 304 1 17 3 145 2 116 1 47 1 314 1 254 2 179 1 119 1 183 1 353 1 127 3 212 1 317 1 
112 1 145 2 76 2 277 1 89 1 359 1 233 2 119 1 179 2 102 2 316 1 209 1 342 1 
168 1 326 1 198 1 145 1 76 4 359 1 78 1 233 1 234 1 179 4 102 4 316 1 209 1 
306 1 45 1 33 1 112 1 145 1 76 2 359 1 233 2 179 2 192 1 102 2 209 1 182 1 296 1 
233 1 350 1 179 1 123 1 102 1 367 1 76 1 98 1 359 1 78 1 
233 1 85 1 179 2 102 2 209 1 316 1 145 1 76 2 324 1 359 1 71 1 
168 1 326 1 45 1 111 1 198 1 145 3 76 5 71 1 359 2 78 1 233 2 179 5 102 4 316 1 209 2 67 1 
168 1 326 1 45 1 198 1 159 1 145 3 76 5 71 1 359 2 78 1 233 2 179 5 102 4 316 1 209 2 67 1 
44 1 252 1 112 1 145 1 76 1 37 2 176 2 359 1 78 1 253 1 341 1 233 1 62 1 179 1 102 1 209 1 104 1 370 1 
110 1 45 1 112 1 145 1 76 1 277 1 359 1 233 2 179 1 102 1 209 1 182 1 296 1 
134 1 329 1 8 1 370 1 371 1 
17 2 143 1 329 2 113 1 116 1 8 1 161 1 47 1 134 2 315 1 381 1 166 1 165 1 27 1 127 2 264 1 370 1 371 2 239 1 
265 1 104 1 152 1 329 1 176 1 37 1 8 1 280 1 371 1 
143 1 113 1 8 1 
240 1 126 1 255 1 271 1 
202 1 142 1 240 1 126 1 138 1 201 1 271 1 
187 1 289 1 138 1 
202 3 29 1 142 1 150 1 240 1 125 1 126 1 175 2 174 1 138 3 201 1 271 1 
202 2 142 1 240 1 88 1 126 1 138 2 201 1 271 1 162 1 
142 1 18 1 240 1 297 1 201 1 77 1 202 1 350 1 123 1 125 1 138 1 
202 1 142 1 240 1 125 1 138 1 201 1 271 1 
202 1 142 1 125 1 126 1 138 1 201 1 271 2 
142 2 373 1 240 1 201 2 23 1 202 2 204 1 125 1 138 2 271 1 
142 1 240 2 297 1 201 1 162 2 202 3 222 1 81 1 195 1 125 1 126 1 138 3 271 1 
142 1 18 1 240 1 241 1 98 1 201 1 162 1 202 2 350 1 123 2 208 1 125 1 126 1 138 2 271 1 
142 2 240 2 297 1 88 1 201 2 162 2 202 4 81 1 125 1 126 1 138 4 271 1 256 1 
202 1 142 1 240 1 125 1 126 1 138 1 201 1 271 1 
29 1 142 1 240 3 297 1 175 1 174 1 201 1 162 2 202 4 81 1 365 1 126 2 138 4 271 2 
142 1 2 1 240 1 173 1 201 1 162 1 202 2 149 1 125 1 126 1 138 2 271 1 
142 1 29 2 31 1 240 1 174 1 175 2 201 1 202 3 125 1 126 1 138 3 271 1 
308 2 240 2 229 1 278 1 
202 1 142 1 125 1 259 1 138 1 201 1 
202 2 222 1 142 1 240 1 125 1 126 1 138 2 201 1 271 1 162 1 
100 1 
202 1 142 1 240 1 125 1 126 1 138 1 201 1 271 1 
142 1 240 1 175 1 201 1 162 1 202 3 222 1 125 1 126 1 138 3 271 1 
81 1 240 1 365 1 297 1 
240 1 271 1 

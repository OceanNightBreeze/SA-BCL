#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (110,276) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (110,276) 55 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (110,276) 55 193 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
169 6 188 2 335 5 172 1 30 1 318 4 35 1 198 2 257 1 98 2 136 1 137 1 203 1 225 1 278 1 67 3 105 1 42 9 43 1 267 2 349 2 208 1 330 1 287 1 311 2 289 2 50 1 149 9 
169 6 188 2 335 5 172 1 30 1 318 4 35 1 257 1 98 2 198 2 136 1 137 1 203 1 225 1 278 1 67 3 105 1 42 9 43 1 267 2 349 2 208 1 330 1 287 1 311 2 289 2 50 1 149 9 
169 7 188 2 335 6 172 1 30 1 318 5 35 1 257 1 98 2 198 2 136 1 137 1 203 1 225 1 278 1 67 4 105 1 42 10 43 1 267 2 349 2 208 1 330 1 287 1 311 2 289 2 50 1 149 10 
169 4 188 2 335 4 172 1 30 1 318 3 35 1 257 1 98 2 198 1 136 1 137 1 225 1 278 1 67 2 105 1 42 7 43 1 267 2 349 2 208 1 330 1 287 1 311 2 289 2 50 1 149 7 
169 3 42 4 335 3 188 1 30 1 318 2 267 1 349 1 208 1 287 1 98 1 198 2 289 1 203 1 225 1 278 1 67 1 149 4 
335 1 42 2 142 1 172 1 30 1 43 1 267 1 349 1 208 1 74 1 124 1 311 1 98 1 289 1 278 1 149 2 
169 1 42 3 335 2 30 1 318 1 267 2 208 1 311 1 98 2 136 1 278 1 67 1 149 3 
169 7 335 5 188 1 30 1 318 4 35 1 98 2 198 2 136 1 203 1 225 1 278 1 67 3 42 9 175 1 267 2 349 1 208 1 73 1 287 1 311 1 289 1 50 1 149 9 
169 7 335 5 188 1 30 1 318 4 35 1 98 2 198 2 136 1 203 1 225 1 278 1 67 3 42 9 175 1 267 2 349 1 208 1 73 1 287 1 311 1 289 1 50 1 149 9 
7 1 28 1 326 1 
154 1 28 1 16 2 
77 2 156 2 170 2 171 1 331 2 261 2 63 2 65 1 
170 2 171 1 91 2 90 1 93 1 238 1 2 1 194 1 32 1 5 1 61 1 135 1 261 3 63 2 103 2 37 1 65 1 157 1 156 2 301 1 280 1 245 1 228 2 14 1 348 1 75 1 17 1 77 2 18 1 19 1 331 3 272 1 127 1 184 2 148 1 83 1 27 2 
77 1 156 1 170 1 171 1 331 1 259 1 261 1 63 1 112 1 350 1 
156 1 295 1 13 1 264 1 253 1 197 1 338 1 331 1 180 1 259 1 261 1 274 1 28 1 326 1 
170 1 156 1 264 2 253 1 338 2 77 1 197 1 331 1 180 1 259 1 63 1 261 1 274 1 28 1 326 1 
338 1 189 1 303 1 304 1 264 1 
338 2 303 1 304 1 120 1 264 2 131 1 28 1 326 1 
338 1 304 1 264 1 
171 1 170 1 156 1 303 1 264 1 92 1 350 1 338 1 77 1 331 1 259 1 112 1 63 1 261 1 
28 1 
320 1 338 2 303 1 304 1 120 1 264 2 28 1 326 1 
206 2 53 1 281 1 150 1 303 2 264 5 304 2 122 1 116 1 328 2 296 1 256 2 338 5 312 1 120 1 28 1 244 1 326 1 358 1 
7 1 65 1 
156 2 170 1 77 1 331 2 271 1 220 1 261 2 63 1 65 2 
166 1 299 1 351 1 
245 1 280 1 91 1 228 1 90 1 238 1 2 1 32 1 5 1 18 1 61 1 331 1 260 1 261 1 184 1 65 1 
170 1 156 1 280 1 245 1 90 1 91 1 228 1 238 1 2 1 32 1 5 1 125 1 61 1 18 1 196 1 77 1 331 2 261 2 299 1 184 1 
196 1 77 3 156 3 170 3 331 3 63 1 261 3 65 1 
77 1 156 1 170 1 331 1 259 1 261 1 350 1 
77 1 156 1 170 1 331 1 271 1 259 1 220 1 261 1 63 1 
170 3 171 1 90 1 91 1 93 1 238 1 2 1 194 1 253 1 32 1 5 1 61 1 196 1 197 1 338 1 135 1 342 1 220 1 259 1 63 2 261 4 103 2 37 1 65 1 157 1 156 3 280 1 245 1 264 1 228 1 348 1 75 1 125 1 18 1 77 3 19 1 331 4 180 1 127 1 184 1 148 1 274 1 27 1 185 1 
77 1 196 1 156 2 170 1 331 2 13 1 261 2 65 1 269 1 
170 3 156 3 264 1 253 1 125 1 338 1 197 1 196 2 77 3 49 1 331 3 180 1 220 1 259 1 63 1 261 3 274 1 28 1 185 1 
170 2 156 2 351 1 196 1 77 2 331 2 220 1 63 1 261 2 299 1 
245 1 280 1 91 1 228 1 90 1 238 1 2 1 32 1 5 1 18 1 61 1 331 1 261 1 184 1 65 1 
280 1 91 1 228 1 90 1 238 1 2 1 32 1 5 1 233 1 61 1 331 1 261 1 224 1 184 1 65 1 
88 1 114 1 93 2 1 1 217 1 297 1 103 2 299 2 37 1 157 1 283 1 75 1 47 1 351 2 19 1 163 1 272 2 164 1 127 1 166 2 332 1 249 1 148 1 27 4 
77 1 156 1 170 1 331 1 259 1 261 1 10 1 274 1 
170 4 156 5 13 1 347 1 269 1 160 1 125 1 196 2 77 4 331 5 220 1 261 5 63 1 65 1 
77 2 156 2 170 2 331 2 259 1 261 2 10 1 350 1 
227 1 276 1 
227 1 276 1 
110 1 85 1 
110 1 85 1 
110 1 85 1 
227 1 276 1 
227 1 276 1 
227 1 276 1 
227 1 276 1 
227 1 276 1 
227 1 276 1 
227 1 276 1 
227 1 276 1 
227 1 341 1 55 1 276 1 
227 1 338 1 341 1 55 1 264 1 276 1 193 1 
188 1 289 1 349 1 
289 1 349 1 74 1 
188 2 57 1 289 3 201 1 44 1 74 1 
188 1 305 1 289 2 201 1 44 1 74 1 
188 1 289 2 201 2 44 1 74 1 
88 1 187 1 294 1 114 1 3 2 256 1 338 5 298 1 240 2 99 1 120 1 343 2 243 1 154 1 244 1 326 1 206 1 303 4 304 1 264 5 122 2 246 1 328 1 47 1 16 3 353 1 312 3 167 1 82 1 249 1 234 1 28 2 
88 3 189 5 114 3 3 6 296 1 255 1 256 2 338 9 200 1 99 2 120 1 343 6 154 3 244 1 326 1 206 2 69 1 303 7 304 6 264 9 229 1 122 6 246 4 72 1 328 2 145 5 47 3 109 1 16 9 312 8 167 1 82 3 249 3 234 2 28 5 
88 1 294 1 114 1 3 2 296 1 256 1 338 3 298 1 240 1 99 1 343 2 154 2 326 1 206 1 303 2 264 3 246 1 122 2 328 1 47 1 16 4 312 3 82 1 249 1 234 1 28 3 
88 2 294 1 114 2 3 4 296 1 256 1 338 4 298 1 240 2 200 1 99 1 343 4 154 3 326 1 206 1 69 1 303 3 264 4 229 1 246 2 122 4 328 1 47 2 16 7 312 5 82 2 249 2 234 1 28 4 
162 1 7 1 238 1 
238 1 133 1 
285 1 
280 1 238 1 
61 1 162 2 280 1 199 1 238 3 286 1 
61 1 280 1 238 1 
340 1 238 1 
282 2 93 3 239 1 268 1 47 1 232 1 297 3 272 4 223 1 211 1 332 2 249 1 25 1 24 1 153 1 27 7 51 1 
282 2 93 3 239 1 268 1 47 1 232 1 297 3 272 4 223 1 211 1 332 2 249 1 25 1 24 1 153 1 27 7 51 1 
282 2 93 3 268 1 239 1 47 1 232 1 297 3 272 4 222 1 223 1 211 1 332 2 249 1 25 1 24 1 153 1 27 7 51 1 
88 3 114 3 93 15 239 2 337 1 297 10 322 1 223 1 323 1 103 2 153 2 37 1 11 1 279 1 282 3 268 1 75 1 47 4 232 1 19 1 272 16 147 1 127 1 314 4 82 3 211 5 332 5 316 3 25 2 24 2 26 1 249 4 27 31 51 1 
93 4 239 1 321 1 297 4 323 1 223 1 103 4 37 2 153 1 282 2 75 2 268 1 47 1 19 2 20 1 272 5 127 2 332 3 211 1 249 1 24 1 25 1 27 9 51 1 
169 1 335 1 188 1 30 1 91 1 90 1 57 1 237 1 2 1 134 1 98 1 258 1 339 1 100 1 278 1 42 2 228 1 267 1 349 1 208 1 74 1 210 1 311 1 21 1 289 2 184 1 23 1 273 1 149 2 292 1 
169 2 335 1 188 1 235 1 30 1 91 1 90 1 57 1 237 1 2 1 134 1 98 1 258 1 339 1 221 1 278 1 42 3 228 1 346 1 267 1 349 1 74 1 311 1 21 1 289 2 184 1 23 1 273 1 149 3 292 1 
169 2 335 1 235 1 188 1 30 1 91 1 90 1 57 1 237 1 2 1 134 1 278 1 42 2 228 1 346 1 349 1 74 1 311 1 21 1 289 2 184 1 23 1 273 1 149 2 292 1 
216 1 54 1 90 1 91 1 237 2 238 1 2 1 32 1 195 1 134 2 98 1 221 1 68 1 205 1 42 1 280 1 228 1 267 1 107 1 311 2 21 2 184 1 149 1 
188 1 91 1 90 1 57 1 237 1 2 1 134 1 98 1 258 1 339 1 100 1 42 1 228 1 346 1 267 1 349 1 208 1 74 1 311 1 21 1 289 2 184 1 23 1 273 1 149 1 292 1 
111 1 
54 1 0 1 190 2 238 1 191 1 2 1 60 2 6 1 197 1 120 3 202 1 324 1 154 2 244 1 326 1 205 1 155 1 206 1 156 1 280 1 13 1 122 2 328 1 247 2 16 2 209 2 331 1 333 2 290 1 28 2 87 2 295 1 91 2 90 1 31 2 95 1 32 2 253 1 256 1 338 5 218 4 259 1 261 1 138 1 141 1 304 6 264 5 228 2 306 1 179 1 180 1 312 2 184 2 234 1 274 1 
141 1 156 1 295 1 304 2 264 3 13 1 191 1 95 1 253 1 247 1 320 1 197 1 338 3 218 2 180 1 331 1 120 1 259 1 261 1 202 1 324 1 274 1 
295 1 191 1 95 1 253 1 338 3 197 1 320 1 218 3 120 1 259 1 261 1 324 1 202 1 326 1 156 1 141 1 304 1 13 1 264 3 331 1 180 1 274 1 28 1 87 1 
295 1 190 1 191 1 95 1 253 1 320 1 338 3 197 1 218 3 120 1 259 1 261 1 324 1 202 1 326 1 156 1 141 1 13 1 264 3 304 2 247 1 331 1 180 1 274 1 28 1 87 1 
190 4 191 1 60 2 197 1 320 1 120 3 202 1 324 1 154 2 244 1 326 5 155 1 206 1 156 1 13 1 122 1 15 1 328 1 247 4 209 2 331 1 333 2 168 1 290 1 28 5 87 4 295 1 31 2 95 1 253 1 256 1 338 5 218 6 259 1 102 1 261 1 226 1 141 1 264 5 304 7 106 1 180 1 312 1 274 1 
190 2 191 1 60 2 197 1 120 2 202 1 324 1 154 2 244 1 326 1 155 1 206 1 156 1 13 1 122 1 328 1 247 2 209 2 16 2 331 1 333 2 290 1 28 2 87 2 295 1 31 2 95 1 253 1 256 1 338 4 218 4 259 1 261 1 141 1 264 4 304 4 180 1 179 1 312 1 274 1 
190 2 295 1 31 2 191 1 95 1 253 1 60 2 256 1 338 4 197 1 218 4 120 2 259 1 261 1 324 1 202 1 154 2 244 1 326 1 226 1 155 1 206 1 156 1 141 1 304 4 13 1 264 4 122 1 328 1 106 1 247 2 209 2 331 1 180 1 312 1 333 2 290 1 168 1 274 1 28 1 87 2 
190 2 295 1 31 2 191 1 95 1 253 1 60 2 256 1 338 4 197 1 218 4 120 2 259 1 261 1 324 1 202 1 154 2 244 1 326 1 226 1 155 1 206 1 156 1 141 1 304 4 13 1 264 4 122 1 328 1 106 1 247 2 209 2 331 1 180 1 312 1 333 2 290 1 168 1 274 1 28 1 87 2 
190 2 295 1 191 1 95 1 253 1 60 2 256 1 338 4 197 1 218 4 120 2 259 1 261 1 324 1 202 1 104 2 244 1 326 1 325 2 206 1 156 1 141 1 304 4 13 1 264 4 122 1 328 1 329 1 247 2 146 1 16 2 209 2 331 1 180 1 312 1 290 1 168 1 251 1 274 1 28 1 87 2 
295 1 190 3 31 2 191 1 95 1 253 1 60 2 256 1 338 4 197 1 218 5 120 2 259 1 102 1 261 1 324 1 202 1 154 2 244 1 326 1 226 1 155 1 206 1 156 1 141 1 13 1 264 4 304 5 122 1 328 1 106 1 247 3 209 2 331 1 180 1 312 1 333 2 290 1 168 1 274 1 28 1 87 3 
295 1 190 3 31 2 191 1 95 1 253 1 60 2 256 1 338 4 197 1 218 5 120 2 259 1 102 1 261 1 324 1 202 1 154 2 244 1 326 1 226 1 155 1 206 1 156 1 141 1 13 1 264 4 304 5 122 1 328 1 106 1 247 3 209 2 331 1 180 1 312 1 333 2 290 1 168 1 274 1 28 1 87 3 
190 2 295 1 191 1 95 1 253 1 60 2 256 1 338 4 197 1 218 4 120 2 259 1 261 1 324 1 202 1 104 2 244 1 326 1 325 2 206 1 141 1 156 1 304 4 264 4 13 1 122 1 328 1 247 2 16 2 209 2 179 1 331 1 180 1 312 1 290 1 274 1 251 1 28 1 87 2 
157 1 282 1 283 1 93 3 75 1 268 1 47 1 351 1 297 2 7 1 19 1 272 3 166 1 127 1 223 1 332 2 103 2 299 1 249 1 25 1 148 1 37 1 24 1 65 2 27 6 51 1 
88 2 215 1 252 1 114 1 93 6 194 1 337 1 297 2 103 4 299 11 37 2 65 1 173 1 157 2 143 1 75 2 47 2 351 4 17 1 19 2 272 8 314 3 128 1 127 2 166 11 211 1 332 1 82 2 316 3 148 1 26 1 249 1 27 14 
170 1 90 1 91 1 252 1 93 1 238 1 2 1 32 1 194 1 5 1 61 1 196 1 260 1 261 2 103 2 37 1 65 1 157 1 156 1 280 1 245 1 228 1 265 1 75 1 351 1 125 1 18 1 77 1 17 1 331 2 19 1 272 1 127 1 184 1 113 1 148 1 27 2 186 1 
114 2 238 2 2 2 194 1 5 2 196 1 61 2 65 2 156 1 157 3 245 2 280 2 282 1 75 3 125 1 17 1 77 1 18 2 19 3 331 3 80 1 165 2 81 1 127 3 166 7 332 4 82 2 211 4 25 1 24 1 249 3 27 20 213 2 88 2 170 1 91 3 252 1 90 2 93 10 32 1 297 8 223 1 261 3 103 6 299 7 37 3 228 3 144 2 346 1 348 2 268 1 47 3 351 7 272 10 184 3 355 1 148 3 51 1 359 2 
170 1 54 1 236 1 90 2 91 8 93 1 117 1 238 3 2 2 59 1 32 2 194 1 196 1 261 1 103 4 37 2 205 1 156 1 157 2 140 1 280 2 228 8 346 1 283 1 14 2 230 1 75 2 210 1 77 1 17 1 78 1 331 1 19 2 272 1 315 1 127 2 184 7 148 2 27 2 
88 1 170 1 252 1 114 1 93 2 297 1 220 1 63 1 261 1 103 2 299 1 37 1 121 1 157 1 156 1 75 1 47 1 351 1 77 1 19 1 331 1 272 1 166 1 127 1 332 1 82 1 148 1 249 1 27 3 
88 1 157 1 283 1 75 1 47 1 351 1 217 1 297 1 19 1 272 2 166 1 127 1 211 1 103 2 299 1 148 1 37 1 27 2 
157 1 114 1 283 1 93 2 1 1 75 1 351 1 297 1 19 1 166 1 127 1 332 1 103 2 299 1 148 1 37 1 249 1 27 2 
88 1 114 1 93 2 297 2 103 2 299 2 37 1 157 1 283 1 75 1 47 1 351 2 19 1 272 2 127 1 166 2 82 1 211 1 332 1 148 1 249 1 27 4 
88 1 157 1 59 1 75 1 47 1 351 1 217 1 297 1 19 1 272 2 166 1 127 1 211 1 103 2 299 1 148 1 37 1 27 2 
157 1 114 1 93 2 1 1 59 1 75 1 351 1 297 1 19 1 166 1 127 1 332 1 103 2 299 1 148 1 37 1 249 1 27 2 
88 1 114 1 93 2 59 1 297 2 103 2 299 2 37 1 157 1 75 1 47 1 351 2 19 1 272 2 127 1 166 2 82 1 211 1 332 1 148 1 249 1 27 4 
88 1 114 1 93 2 297 2 103 2 299 2 37 1 157 1 75 1 47 1 351 2 19 1 272 2 127 1 166 2 82 1 211 1 332 1 148 1 249 1 27 4 
90 1 91 1 93 1 238 1 2 1 32 1 194 1 5 1 61 1 261 1 103 2 37 1 65 1 157 1 280 1 245 1 228 1 348 1 75 1 17 1 18 1 331 1 19 1 272 1 127 1 184 1 148 1 27 2 
90 1 91 1 93 1 238 1 2 1 32 1 194 1 5 1 61 1 261 1 224 1 103 2 37 1 65 1 302 1 157 1 280 1 228 1 75 1 17 1 233 1 331 1 19 1 272 1 127 1 184 1 148 1 27 2 
88 1 252 1 114 1 93 2 297 2 103 2 299 2 37 1 157 1 75 1 47 1 351 2 19 1 272 2 127 1 166 2 82 1 211 1 332 1 148 1 249 1 27 4 
88 1 114 1 90 1 91 1 93 2 238 1 2 1 5 1 61 1 297 2 261 1 103 2 299 2 37 1 157 1 245 1 280 1 144 1 228 1 348 1 75 1 47 1 351 2 210 1 18 1 331 1 19 1 272 2 166 2 127 1 332 1 211 1 82 1 184 1 249 1 148 1 27 4 
214 1 88 1 170 1 114 1 252 1 93 1 297 1 220 1 63 1 261 1 103 2 299 1 37 1 157 1 156 1 75 1 47 1 351 1 77 1 19 1 331 1 272 2 127 1 166 1 211 1 82 1 249 1 148 1 27 3 
88 3 89 2 336 1 114 3 93 10 277 1 337 1 297 6 8 1 9 1 103 4 64 1 37 2 66 1 284 1 75 2 47 3 19 2 20 1 272 9 314 2 127 2 332 3 82 3 211 3 316 1 291 2 26 1 249 3 27 19 
275 1 88 3 89 1 114 2 93 12 277 1 96 1 337 2 97 1 297 4 8 1 323 2 9 2 103 6 37 3 66 2 263 1 70 1 284 1 75 3 47 3 19 3 20 1 272 14 127 3 314 2 211 2 332 2 82 3 316 2 249 2 291 4 27 26 357 1 
275 1 114 4 277 1 8 1 9 2 323 1 66 1 282 1 70 1 75 3 284 1 20 1 19 3 127 3 211 4 82 4 332 4 249 5 26 1 291 4 24 1 25 1 27 41 88 4 336 1 89 1 93 21 96 1 337 3 97 1 297 8 223 1 103 6 37 3 263 1 345 1 268 1 47 5 272 20 314 4 316 3 357 1 51 1 
275 1 88 4 89 1 336 1 114 3 93 18 277 1 96 1 337 3 97 1 297 7 8 1 223 1 323 2 9 2 103 8 37 4 66 1 263 1 345 1 282 1 70 1 284 1 268 1 75 4 47 5 19 4 20 1 272 20 314 4 127 4 332 4 82 4 211 3 316 3 25 1 24 1 291 4 26 1 249 4 27 38 357 1 51 1 
275 1 88 7 89 1 114 7 93 25 277 1 96 1 337 2 97 1 297 14 8 1 223 1 323 1 9 1 103 4 37 2 66 1 263 1 282 1 70 1 143 2 284 1 268 1 75 2 47 8 19 2 20 1 272 27 314 4 127 2 332 7 82 7 211 7 316 4 25 1 24 1 291 4 26 2 249 8 27 52 357 1 51 1 
90 1 91 2 252 1 93 1 238 1 2 1 194 1 219 1 261 2 103 2 37 1 174 1 157 1 156 2 140 1 280 1 228 2 123 1 14 2 45 1 75 1 17 1 78 1 331 2 19 1 272 1 127 1 184 2 148 1 27 2 293 1 
188 1 90 1 91 2 228 2 346 1 57 1 349 1 74 1 2 1 308 1 210 1 339 1 21 1 289 2 129 1 184 2 273 1 356 1 292 1 
188 1 91 1 228 1 207 1 90 1 346 1 57 1 349 1 74 1 308 1 2 1 339 1 21 1 289 2 184 1 273 1 292 1 
54 1 280 1 90 1 91 1 228 1 238 1 2 1 32 1 21 1 184 1 356 1 86 1 68 1 205 1 
188 1 90 1 91 1 228 1 346 1 57 1 349 1 74 1 308 1 2 1 339 1 21 1 289 2 129 1 184 1 273 1 356 1 292 1 
39 1 
53 1 7 1 281 1 312 1 122 1 28 1 326 1 
31 1 256 1 338 1 120 1 154 1 244 1 326 1 155 1 206 1 304 1 264 1 122 1 328 1 16 1 312 1 333 1 28 2 
52 2 53 1 114 2 56 2 238 10 2 3 3 6 4 2 61 3 197 2 199 1 120 3 242 1 154 6 244 4 326 2 206 4 281 1 280 3 122 8 328 4 210 1 16 12 162 2 82 2 334 2 130 1 249 2 84 2 213 2 28 8 88 2 90 4 91 3 132 2 94 2 32 1 133 3 256 4 338 5 340 2 343 6 36 1 262 1 139 1 40 2 228 3 304 5 264 5 306 1 47 2 312 9 184 3 234 2 
275 1 88 2 114 2 3 5 96 1 337 1 256 2 338 1 97 1 120 1 343 5 154 3 244 2 263 1 326 2 206 2 40 1 70 1 264 1 304 1 122 5 306 1 328 2 47 2 16 6 312 8 313 1 182 1 314 1 82 2 334 2 316 1 234 1 249 2 28 5 
171 1 170 1 92 1 319 1 256 1 338 1 259 1 261 1 223 1 63 1 244 1 226 1 206 1 40 1 156 1 264 1 122 2 328 1 47 2 350 1 77 1 331 1 312 2 112 1 334 2 25 1 24 1 249 1 
206 1 53 1 281 1 122 1 328 1 256 1 312 1 28 1 244 1 326 1 
88 2 40 1 114 2 122 5 3 5 47 2 16 10 312 5 343 5 82 2 334 2 249 2 154 5 213 1 28 5 
338 1 264 1 304 1 120 1 28 1 326 1 
0 1 54 1 90 1 91 4 238 1 2 1 296 1 32 2 256 2 6 1 338 3 120 2 36 2 139 1 244 1 205 1 206 2 280 1 228 4 304 4 264 3 122 2 306 2 327 1 328 2 126 1 312 2 184 4 234 2 
170 2 171 1 91 1 90 1 93 1 238 1 2 1 194 1 32 1 5 1 61 1 135 1 261 3 63 2 103 2 37 1 65 1 156 2 157 1 245 1 280 1 228 1 348 1 75 1 77 2 18 1 19 1 331 3 127 1 184 1 148 1 27 1 
206 1 282 1 122 2 306 1 328 1 3 2 16 4 256 1 312 1 343 2 234 1 154 2 28 4 244 1 326 2 
158 1 266 1 118 1 
248 1 181 1 158 1 266 1 48 1 
158 1 266 1 118 1 
158 1 266 1 118 1 
158 1 266 1 254 1 
158 1 266 1 254 1 
158 1 266 1 254 1 
158 1 266 1 
227 1 276 1 
282 1 93 4 75 2 268 1 47 1 297 3 19 2 272 4 127 2 223 1 211 1 332 2 323 1 103 4 249 1 37 2 24 1 25 1 27 8 51 1 
282 1 93 3 268 1 47 1 7 1 297 2 272 3 332 2 223 1 24 1 25 1 249 1 27 6 51 1 
88 1 114 1 93 2 75 1 47 1 297 2 270 1 19 1 272 2 127 1 332 1 82 1 211 1 103 2 249 1 37 1 27 4 
88 1 114 1 93 4 47 1 337 1 297 2 272 3 314 2 332 1 82 1 211 1 316 1 249 1 26 1 27 7 
88 2 215 1 114 2 93 12 34 1 297 9 223 1 323 2 103 4 37 2 282 1 143 1 268 1 75 2 47 3 19 2 272 11 314 2 127 2 211 4 82 2 332 5 316 2 25 2 24 2 26 1 249 3 27 23 51 1 
314 1 93 1 27 1 
272 1 316 1 27 1 
88 1 114 1 93 3 75 1 47 1 297 3 19 1 270 1 272 3 127 1 82 1 211 1 332 2 103 2 37 1 249 1 213 1 27 6 
275 1 88 2 114 2 93 6 96 1 337 1 97 1 297 2 103 2 37 1 263 1 70 1 75 1 47 2 19 1 20 1 272 6 314 1 127 1 211 1 82 2 332 1 316 1 249 2 27 12 
93 3 47 1 297 2 272 3 223 1 332 1 211 1 249 1 24 1 25 1 27 6 
93 2 268 1 75 1 34 1 297 2 19 1 272 1 127 1 211 1 332 1 323 1 103 2 25 1 24 1 37 1 27 3 51 1 
93 5 75 1 47 2 319 1 297 5 19 1 20 1 272 5 127 1 332 3 211 2 223 1 103 2 37 1 24 2 25 2 249 2 27 10 
88 1 75 1 47 1 297 1 20 1 19 1 272 2 127 1 211 1 103 2 37 1 27 2 
88 1 114 1 93 2 75 1 47 1 297 2 20 1 19 1 272 2 127 1 332 1 82 1 211 1 103 2 249 1 37 1 27 4 
336 1 93 2 75 3 34 1 297 2 20 1 19 3 272 1 127 3 323 1 332 1 211 1 103 6 37 3 24 1 25 1 27 3 
88 3 336 1 114 3 93 18 34 1 337 1 297 12 322 1 223 2 323 2 103 10 37 5 11 1 282 1 268 1 75 5 47 5 270 1 19 5 20 1 272 16 147 1 314 4 127 5 82 3 211 5 332 7 316 3 25 3 24 3 26 1 249 5 27 34 51 1 
275 1 93 4 337 1 297 2 223 1 103 2 37 1 282 1 75 1 268 1 47 1 19 1 20 1 272 4 314 1 127 1 332 2 316 1 249 1 24 1 25 1 27 8 51 1 
275 1 88 1 93 5 337 1 297 3 223 1 103 4 37 2 282 1 268 1 75 2 47 2 20 1 19 2 270 1 272 6 314 2 127 2 332 2 82 1 211 1 316 1 249 1 25 1 24 1 26 1 27 11 51 1 
275 1 88 2 114 2 93 10 96 1 337 1 97 1 297 4 223 1 323 1 103 6 37 3 263 1 282 1 70 1 268 1 75 3 47 3 270 1 19 3 20 1 272 9 314 1 127 3 211 1 82 2 332 3 316 1 25 1 24 1 249 3 27 19 51 1 
275 1 88 2 114 1 93 7 96 1 337 1 97 1 297 5 223 1 323 1 103 6 37 3 263 1 282 1 70 1 268 1 75 3 47 3 270 1 19 3 20 1 272 10 314 1 127 3 211 2 82 2 332 3 316 1 25 1 24 1 249 2 27 17 51 1 
275 1 93 4 337 1 297 2 223 1 103 2 37 1 282 1 75 1 268 1 47 1 19 1 20 1 272 4 314 1 127 1 332 2 316 1 249 1 24 1 25 1 27 8 51 1 
275 1 88 2 114 2 93 6 96 1 337 1 97 1 297 2 103 2 37 1 263 1 70 1 75 1 47 2 19 1 20 1 272 6 314 1 127 1 211 1 82 2 332 1 316 1 249 2 27 12 
275 1 88 2 114 1 93 8 96 1 337 1 97 1 297 5 223 1 323 2 103 8 37 4 263 1 282 1 70 1 268 1 75 4 47 3 270 1 19 4 20 1 272 10 314 1 127 4 211 2 82 2 332 3 316 1 25 1 24 1 249 2 27 18 51 1 
275 1 88 3 336 1 114 2 93 7 96 1 337 1 97 1 297 6 323 2 103 8 37 4 263 1 70 1 75 4 47 3 20 1 19 4 272 9 314 1 127 4 211 3 82 3 332 3 316 1 249 2 27 16 
93 4 268 2 47 1 297 6 272 3 332 3 211 3 223 1 249 1 24 3 25 3 27 7 51 1 
275 1 88 2 336 1 114 1 93 8 96 1 337 1 97 1 297 4 223 1 323 2 103 8 37 4 263 1 282 1 70 1 268 1 75 4 47 3 20 1 19 4 272 10 314 1 127 4 211 1 82 2 332 3 316 1 25 1 24 1 249 2 27 18 51 1 
156 1 331 1 13 1 261 1 65 1 269 1 300 1 
156 1 13 1 307 1 310 1 269 1 331 1 79 1 101 1 261 1 212 1 65 1 300 1 
54 1 7 1 280 1 90 1 228 1 91 1 238 1 184 1 2 1 32 1 205 1 
170 1 156 1 280 1 90 1 91 1 228 1 238 1 2 1 32 1 5 1 61 1 196 1 77 1 18 1 331 2 261 2 184 1 65 1 
170 1 91 1 90 1 132 1 238 3 2 1 5 1 196 1 61 2 340 1 259 1 36 1 261 2 65 1 156 2 280 2 228 1 18 1 77 2 331 2 180 1 184 1 274 1 
170 1 91 2 90 1 132 1 238 3 2 1 33 1 5 1 196 1 61 2 340 1 259 1 36 1 261 2 65 1 156 2 280 2 228 2 233 1 77 2 331 2 180 1 184 2 274 1 
91 3 90 1 132 1 238 4 2 1 32 1 33 1 133 1 338 2 61 1 197 1 340 1 36 1 38 1 326 1 280 1 304 1 228 3 264 2 162 1 184 3 183 1 28 1 
280 1 132 1 90 1 264 2 91 3 228 3 304 1 238 4 2 1 32 1 33 1 133 1 197 1 61 1 338 2 340 1 162 1 36 1 184 3 84 1 28 1 326 1 
90 1 228 1 91 1 184 1 230 1 2 1 
280 2 236 1 91 7 228 7 29 1 90 3 346 1 14 1 117 1 238 3 230 1 2 2 32 2 159 1 210 1 61 1 78 1 199 1 241 1 315 1 184 6 
170 1 90 1 252 1 91 1 93 3 238 1 2 1 5 1 61 1 196 1 297 2 219 1 223 1 261 2 103 4 299 1 37 2 65 2 157 2 156 1 280 1 245 1 282 1 228 1 144 1 348 1 268 1 75 2 47 1 351 1 210 1 77 1 18 1 331 2 19 2 272 3 166 1 127 2 332 2 184 1 249 1 25 1 24 1 148 2 27 6 51 1 359 1 
52 1 53 1 91 1 56 1 238 2 94 1 32 1 133 1 256 2 338 3 197 1 120 1 139 1 244 2 326 1 206 2 281 1 303 1 264 3 228 1 304 2 122 1 328 2 162 1 312 1 184 1 84 1 28 1 
280 1 91 2 228 2 90 2 238 2 230 1 2 1 210 1 61 1 162 1 199 1 242 1 184 2 
54 1 280 1 90 1 91 4 228 4 238 1 58 1 2 1 32 1 33 1 210 1 184 4 205 1 
280 1 91 2 228 2 90 2 238 1 2 1 159 1 352 1 161 1 61 1 241 1 81 1 36 1 184 2 
90 1 228 1 91 1 289 1 349 1 273 1 184 1 74 1 2 1 32 1 
280 1 91 2 228 2 90 1 346 1 123 1 238 1 2 1 210 1 78 1 184 2 
54 1 280 2 236 1 91 5 228 5 90 2 238 3 117 1 58 1 2 2 32 1 210 1 78 1 36 1 184 4 205 1 
54 1 280 2 91 5 228 5 90 2 238 3 117 1 58 1 2 2 32 1 210 1 152 1 78 1 36 1 184 4 205 1 
170 1 156 1 280 1 90 1 91 1 228 1 238 1 2 1 32 1 5 1 61 1 196 1 77 1 233 1 331 2 261 2 184 1 65 1 
280 1 91 1 228 1 29 1 90 2 238 1 2 1 159 1 61 1 199 1 241 1 36 1 184 1 
151 1 62 1 115 1 65 1 177 1 
303 1 264 2 115 1 253 1 119 1 177 2 197 1 338 2 151 2 180 1 62 2 259 1 22 1 65 1 274 1 28 1 185 1 344 1 326 1 
174 1 151 1 156 1 331 1 62 1 261 1 115 1 45 1 293 1 
115 1 119 1 344 1 
335 1 7 1 30 1 278 1 
335 1 42 1 98 1 30 1 267 1 278 1 149 1 
311 1 237 1 149 1 
335 1 42 3 43 2 30 1 71 1 267 1 208 1 309 1 98 1 250 1 278 1 149 3 
169 1 335 1 198 1 42 2 98 1 30 1 267 1 278 1 149 2 
42 1 335 1 188 1 318 1 267 1 349 1 208 1 287 1 98 1 289 1 149 1 
335 1 42 1 98 1 30 1 267 1 208 1 149 1 
42 1 98 1 30 2 267 1 208 1 278 1 149 1 
335 1 42 2 30 1 267 2 208 1 231 1 108 1 98 2 354 1 149 2 
169 2 42 3 335 2 30 1 318 1 267 1 208 1 35 1 98 1 50 1 278 1 67 1 149 3 
169 1 335 1 42 2 41 1 188 1 30 1 57 1 267 1 349 1 208 1 74 1 98 1 289 2 278 1 149 2 
169 2 42 4 335 2 30 1 318 1 267 2 208 1 98 2 198 1 203 1 278 1 67 1 149 4 
335 1 42 1 98 1 30 1 267 1 208 1 278 1 149 1 
169 2 42 4 335 3 43 1 30 2 71 1 318 1 267 1 76 1 309 1 98 1 278 2 67 1 149 4 
169 1 335 1 42 2 30 1 267 1 208 1 192 1 73 1 98 1 288 1 278 1 149 2 
335 1 42 3 43 2 30 1 71 2 267 1 208 1 309 1 98 1 278 1 204 1 149 3 
335 2 178 2 12 1 317 1 
42 1 98 1 267 1 176 1 208 1 149 1 
169 1 335 1 42 2 98 1 30 1 267 1 208 1 278 1 149 2 35 1 
46 1 
335 1 42 1 98 1 30 1 267 1 208 1 278 1 149 1 
169 1 335 1 42 3 98 1 30 1 43 1 267 1 208 1 278 1 149 3 35 1 
335 1 318 1 76 1 67 1 
335 1 30 1 

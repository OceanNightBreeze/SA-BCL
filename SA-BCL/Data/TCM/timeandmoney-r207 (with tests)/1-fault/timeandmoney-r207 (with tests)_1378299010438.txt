#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 367 218 313 110 320 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 367 218 313 110 320 304 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 367 218 313 110 320 304 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 367 218 313 110 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 367 218 313 110 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 367 218 313 110 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 2 2 1 3 1 69 4 209 1 210 2 51 1 128 1 99 1 148 1 150 2 104 2 78 5 267 1 370 1 79 9 58 6 59 2 250 1 373 1 300 9 272 2 113 2 227 3 275 1 254 1 19 1 66 1 
27 2 2 1 3 1 69 4 209 1 210 2 51 1 128 1 99 1 148 1 150 2 104 2 78 5 267 1 370 1 79 9 58 6 59 2 250 1 373 1 300 9 272 2 227 3 113 2 275 1 254 1 19 1 66 1 
27 2 2 1 3 1 69 5 209 1 210 2 51 1 128 1 99 1 148 1 150 2 104 2 78 6 267 1 370 1 79 10 58 7 59 2 250 1 373 1 300 10 272 2 227 4 113 2 275 1 254 1 19 1 66 1 
27 2 2 1 3 1 69 3 209 1 210 2 128 1 99 1 148 1 150 2 104 2 78 4 267 1 370 1 79 7 58 4 59 2 250 1 373 1 300 7 272 2 227 2 113 1 275 1 254 1 19 1 66 1 
78 3 27 1 79 4 58 3 69 2 59 1 209 1 250 1 210 1 272 1 300 4 227 1 51 1 113 2 275 1 148 1 150 1 254 1 
78 1 27 1 79 2 3 1 59 1 80 1 251 1 300 2 272 1 275 1 188 1 148 1 150 1 254 1 104 1 19 1 
78 2 27 2 79 3 69 1 58 1 300 3 227 1 275 1 148 1 150 2 254 1 104 1 66 1 
78 5 268 1 2 1 27 2 79 9 58 7 69 4 59 1 209 1 250 1 258 1 210 1 272 1 300 9 51 1 113 2 227 3 128 1 275 1 148 1 150 2 254 1 104 1 66 1 
78 5 268 1 2 1 27 2 79 9 58 7 69 4 59 1 209 1 250 1 258 1 210 1 272 1 300 9 51 1 113 2 227 3 128 1 275 1 148 1 150 2 254 1 104 1 66 1 
198 1 89 1 184 1 
89 1 350 1 10 2 
248 2 174 2 87 2 226 1 55 2 20 2 377 2 247 1 
235 1 237 1 87 2 20 2 306 1 358 1 308 2 91 1 207 1 182 2 183 1 166 1 28 1 167 1 96 1 287 1 291 1 149 1 247 1 131 1 248 3 39 2 55 2 297 1 372 1 81 2 174 2 226 1 199 1 377 3 136 1 137 1 379 1 42 1 16 1 17 1 352 2 
248 1 174 1 87 1 55 1 20 1 377 1 179 1 241 1 317 1 247 1 
248 1 55 1 89 1 48 1 270 1 173 1 135 1 198 1 377 1 243 1 102 1 15 1 277 1 317 1 
248 1 87 1 55 1 20 1 89 1 48 2 173 1 174 1 135 2 198 1 377 1 243 1 102 1 15 1 317 1 
40 1 135 1 142 1 48 1 354 1 
135 2 198 1 89 1 263 1 301 1 142 1 48 2 354 1 
135 1 142 1 48 1 
248 1 87 1 55 1 20 1 179 1 48 1 135 1 174 1 240 1 377 1 241 1 317 1 354 1 247 1 
89 1 
135 2 198 1 89 1 263 1 278 1 142 1 48 2 354 1 
118 1 21 1 89 1 217 2 142 2 362 1 48 5 222 1 259 2 135 5 198 1 299 1 14 1 13 2 263 1 34 1 264 1 354 2 316 1 
226 1 184 1 
248 2 87 1 55 2 20 1 141 1 208 1 174 1 226 2 377 2 
324 1 25 1 293 1 
248 1 39 1 237 1 358 1 308 1 91 1 372 1 166 1 96 1 226 1 287 1 274 1 377 1 136 1 291 1 352 1 
248 3 174 3 87 3 226 1 55 3 20 1 377 3 280 1 
248 1 174 1 87 1 55 1 377 1 179 1 317 1 
248 1 174 1 87 1 55 1 20 1 377 1 141 1 208 1 317 1 
235 1 116 1 237 1 87 3 20 2 306 1 358 1 308 1 91 1 207 1 141 1 280 1 182 2 183 1 48 1 166 1 28 1 96 1 287 1 291 1 243 1 149 1 102 1 317 1 247 1 131 1 248 4 39 1 55 3 219 1 372 1 173 1 81 1 174 3 135 1 226 1 136 1 377 4 379 1 42 1 380 1 15 1 16 1 352 1 
248 2 174 1 87 1 226 1 55 2 377 2 93 1 280 1 277 1 
248 3 116 1 87 3 55 3 20 1 89 1 141 1 280 2 48 1 173 1 135 1 174 3 239 1 377 3 380 1 243 1 102 1 15 1 317 1 
248 2 87 2 55 2 20 1 25 1 280 1 141 1 174 2 377 2 293 1 
248 1 39 1 237 1 308 1 358 1 91 1 372 1 166 1 96 1 226 1 287 1 377 1 136 1 291 1 352 1 
248 1 39 1 237 1 308 1 358 1 91 1 372 1 166 1 95 1 96 1 226 1 287 1 377 1 276 1 352 1 
139 1 235 1 306 1 121 1 25 2 336 1 182 2 183 1 28 1 30 1 149 1 214 1 367 1 293 2 106 1 297 2 77 1 194 1 81 4 324 2 378 1 42 1 328 1 16 2 
248 1 174 1 87 1 55 1 377 1 243 1 123 1 317 1 
248 2 39 1 237 1 87 1 55 1 358 1 308 1 91 1 280 1 372 1 166 1 96 1 174 1 287 1 377 2 136 1 291 1 380 1 293 1 352 1 
248 5 87 4 55 5 20 1 310 1 93 1 280 2 141 1 312 1 174 4 226 1 377 5 380 1 277 1 
248 2 174 2 87 2 55 2 377 2 179 1 123 1 317 1 
82 1 72 1 
82 1 72 1 
175 1 49 1 
175 1 49 1 
175 1 49 1 
82 1 72 1 73 1 
82 1 72 1 73 1 
82 1 295 1 72 1 
82 2 175 1 72 2 256 1 112 1 49 1 
82 1 72 1 73 1 
82 1 72 1 161 1 
82 1 72 1 161 1 
82 1 72 1 161 1 
163 2 45 3 108 2 266 1 89 1 26 1 256 1 111 1 257 2 48 2 61 2 82 2 135 2 228 1 72 2 129 1 114 2 246 1 74 1 
87 2 45 1 163 1 140 1 67 1 257 1 360 1 48 1 70 1 290 1 72 1 369 1 248 2 295 1 108 1 55 2 296 1 266 1 82 1 61 1 174 2 135 1 226 1 377 2 
210 1 272 1 59 1 
272 1 188 1 59 1 
210 2 252 1 236 1 46 1 272 3 188 1 
210 1 252 1 236 1 272 2 188 1 335 1 
210 1 236 1 252 2 272 2 188 1 
139 1 21 1 89 2 67 1 142 1 337 1 360 1 48 5 338 1 259 1 263 1 367 1 264 2 315 1 319 2 296 1 217 1 218 1 134 2 194 1 10 3 135 5 198 1 13 1 14 3 326 1 327 1 328 1 350 1 234 1 354 4 302 2 
139 3 21 1 89 5 180 1 360 4 142 6 337 2 48 9 284 1 338 2 259 2 32 1 34 1 263 1 367 3 264 6 6 5 319 6 132 1 217 2 218 3 134 6 194 3 10 9 11 1 155 1 40 5 135 9 198 1 13 2 14 8 327 1 328 3 350 3 354 7 
139 1 89 3 337 1 360 1 48 3 338 1 259 1 34 1 367 1 264 2 319 2 217 1 218 1 134 2 194 1 10 4 135 3 198 1 13 1 14 3 326 1 328 1 350 2 234 1 354 2 302 1 
139 2 89 4 180 1 337 1 360 2 48 4 284 1 338 1 259 1 32 1 34 1 367 2 264 4 319 4 217 1 218 2 134 4 194 2 10 7 135 4 198 1 13 1 14 5 326 1 328 2 350 3 234 1 302 2 354 3 
261 1 358 1 184 1 
358 1 38 1 
333 1 
237 1 358 1 
138 1 237 1 261 2 358 3 91 1 206 1 
237 1 358 1 91 1 
358 1 195 1 
139 1 130 1 356 1 297 4 336 3 281 1 194 1 171 1 339 1 81 7 62 1 31 2 348 1 229 1 214 2 16 3 65 1 
139 1 130 1 356 1 297 4 336 3 281 1 194 1 171 1 339 1 81 7 62 1 31 2 348 1 229 1 214 2 16 3 65 1 
139 1 130 1 356 1 322 1 297 4 336 3 281 1 194 1 171 1 339 1 81 7 62 1 31 2 348 1 229 1 214 2 16 3 65 1 
139 4 305 1 356 2 309 1 336 10 182 2 183 1 281 1 28 1 339 5 31 3 212 1 149 1 214 5 367 3 244 1 130 1 297 16 344 1 218 3 171 2 194 4 81 31 62 1 348 1 325 3 84 1 229 2 42 1 230 4 328 3 233 1 16 15 65 2 
139 1 356 1 336 4 182 4 183 2 281 1 28 2 339 1 31 2 289 1 101 1 149 2 214 3 130 1 297 5 194 1 171 1 81 9 62 1 229 1 42 2 233 1 16 4 65 1 
46 1 308 1 27 1 363 1 210 1 146 1 96 1 188 1 148 1 365 1 35 1 150 1 104 1 75 1 39 1 78 1 79 2 58 1 372 1 59 1 193 1 12 1 300 2 272 2 275 1 349 1 204 1 85 1 352 1 254 1 
46 1 308 1 27 1 210 1 146 1 96 1 187 1 188 1 148 1 365 1 35 1 150 1 104 1 75 1 39 1 265 1 78 1 371 1 79 3 58 2 372 1 59 1 193 1 12 1 300 3 272 2 275 1 349 1 85 1 352 1 
46 1 308 1 210 1 146 1 96 1 187 1 188 1 148 1 365 1 35 1 104 1 75 1 39 1 78 1 371 1 79 2 58 2 372 1 59 1 193 1 12 1 300 2 272 2 275 1 352 1 
294 1 265 1 39 1 237 1 358 1 308 1 27 1 79 1 372 1 193 2 166 1 124 1 172 1 96 1 300 1 365 2 35 2 368 1 150 1 332 1 86 1 104 2 352 1 
75 1 39 1 46 1 308 1 27 1 79 1 372 1 59 1 193 1 363 1 210 1 96 1 146 1 12 1 272 2 300 1 187 1 188 1 365 1 349 1 35 1 85 1 150 1 104 1 254 1 352 1 
343 1 
44 4 237 1 177 1 89 2 92 2 142 6 48 5 282 1 338 1 285 1 96 1 238 1 98 1 243 1 102 1 190 1 292 1 248 1 8 2 55 1 56 1 10 2 198 1 14 2 13 1 15 1 350 2 351 2 63 2 18 1 352 2 21 1 119 1 164 2 308 2 358 1 361 2 166 2 259 1 263 3 264 2 318 1 317 1 39 2 217 1 372 1 270 1 173 1 135 5 271 2 377 1 332 1 86 1 277 1 43 1 
44 2 248 1 55 1 278 1 92 1 142 2 48 3 282 1 270 1 173 1 285 1 135 3 238 1 377 1 263 1 243 1 102 1 15 1 292 1 317 1 318 1 277 1 
44 3 248 1 8 1 55 1 89 1 278 1 142 1 48 3 282 1 270 1 173 1 285 1 135 3 238 1 198 1 377 1 263 1 243 1 102 1 15 1 292 1 317 1 318 1 277 1 
44 3 248 1 8 1 55 1 89 1 164 1 278 1 92 1 142 2 48 3 282 1 270 1 173 1 285 1 135 3 238 1 198 1 377 1 263 1 243 1 102 1 15 1 292 1 317 1 318 1 277 1 
44 6 89 5 278 1 92 4 142 7 48 5 282 1 283 1 285 1 238 1 50 1 243 1 102 1 292 1 248 1 8 4 55 1 154 1 198 5 13 1 14 1 15 1 351 2 350 2 18 1 63 2 21 1 164 4 361 2 259 1 263 3 264 1 317 1 318 1 217 1 221 1 270 1 173 1 135 5 375 1 271 2 377 1 277 1 43 1 
44 4 21 1 89 2 164 2 92 2 142 4 361 2 48 4 282 1 285 1 259 1 238 1 98 1 263 2 243 1 102 1 264 1 292 1 318 1 317 1 248 1 8 2 55 1 217 1 10 2 270 1 173 1 135 4 198 1 271 2 14 1 13 1 377 1 15 1 350 2 351 2 63 2 18 1 277 1 43 1 
44 4 21 1 89 1 164 2 92 2 142 4 361 2 48 4 282 1 283 1 285 1 259 1 238 1 263 2 243 1 102 1 264 1 292 1 318 1 317 1 248 1 8 2 55 1 217 1 154 1 221 1 270 1 173 1 135 4 198 1 271 2 14 1 13 1 377 1 15 1 350 2 351 2 63 2 18 1 43 1 277 1 
44 4 21 1 89 1 164 2 92 2 142 4 361 2 48 4 282 1 283 1 285 1 259 1 238 1 263 2 243 1 102 1 264 1 292 1 318 1 317 1 248 1 8 2 55 1 217 1 154 1 221 1 270 1 173 1 135 4 198 1 271 2 14 1 13 1 377 1 15 1 350 2 351 2 63 2 18 1 43 1 277 1 
44 4 21 1 89 1 164 2 92 2 142 4 48 4 282 1 364 1 285 1 259 1 238 1 5 1 263 2 243 1 102 1 264 1 292 1 318 1 317 1 248 1 8 2 321 2 55 1 217 1 154 1 249 1 10 2 270 1 173 1 135 4 198 1 271 2 201 2 14 1 13 1 377 1 15 1 351 2 18 1 277 1 
44 5 21 1 89 1 164 3 92 3 142 5 361 2 48 4 283 1 282 1 285 1 259 1 238 1 263 2 243 1 102 1 264 1 292 1 318 1 317 1 248 1 8 3 55 1 217 1 154 1 221 1 270 1 173 1 135 4 198 1 375 1 271 2 14 1 13 1 377 1 15 1 350 2 351 2 63 2 18 1 43 1 277 1 
44 5 21 1 89 1 164 3 92 3 142 5 361 2 48 4 283 1 282 1 285 1 259 1 238 1 263 2 243 1 102 1 264 1 292 1 318 1 317 1 248 1 8 3 55 1 217 1 154 1 221 1 270 1 173 1 135 4 198 1 375 1 271 2 14 1 13 1 377 1 15 1 350 2 351 2 63 2 18 1 43 1 277 1 
44 4 21 1 89 1 164 2 92 2 142 4 48 4 282 1 364 1 285 1 259 1 238 1 98 1 263 2 243 1 102 1 264 1 292 1 318 1 317 1 248 1 8 2 321 2 55 1 217 1 10 2 270 1 173 1 135 4 198 1 271 2 201 2 14 1 13 1 377 1 15 1 351 2 18 1 277 1 
235 1 139 1 356 1 306 1 25 1 336 2 182 2 183 1 281 1 28 1 184 1 31 1 149 1 214 2 293 1 106 1 130 1 297 3 194 1 81 6 62 1 226 2 324 1 42 1 16 3 65 1 
235 1 139 2 306 2 25 4 336 2 182 4 183 2 28 2 167 1 339 1 212 1 213 1 214 1 149 2 366 1 367 2 293 11 131 1 297 8 344 1 9 1 345 1 218 2 194 1 81 14 226 1 324 11 202 1 325 3 230 3 42 2 328 1 16 6 
162 1 235 1 237 1 87 1 358 1 308 1 306 1 91 1 25 1 280 1 182 2 183 1 166 1 28 1 260 1 167 1 96 1 287 1 291 1 149 1 39 1 248 2 131 1 55 1 297 1 345 1 372 1 196 1 81 2 174 1 226 1 274 1 136 1 377 2 42 1 380 1 16 1 352 1 
235 3 139 3 87 1 237 2 91 2 280 1 336 8 182 6 183 3 281 1 185 1 339 4 96 2 287 2 187 1 291 2 149 3 293 7 248 3 53 2 55 1 297 10 345 1 194 3 298 2 253 2 62 1 16 10 352 3 255 1 65 1 356 1 308 3 306 3 307 2 358 2 25 7 207 2 166 1 28 3 167 1 31 1 33 1 214 4 367 2 130 1 131 1 39 3 218 2 372 2 81 20 174 1 226 2 324 7 377 3 136 2 380 1 42 3 328 2 
235 2 87 1 237 2 358 3 308 8 306 2 359 1 181 1 280 1 182 4 183 2 166 2 28 2 167 1 96 2 187 1 189 1 149 2 106 1 248 1 39 8 131 1 55 1 297 1 192 1 372 2 81 2 174 1 199 2 159 1 377 1 376 1 42 2 204 1 16 1 86 1 332 1 352 7 353 1 
235 1 139 1 87 1 20 1 306 1 25 1 336 1 141 1 182 2 183 1 28 1 214 1 149 1 367 1 293 1 248 1 55 1 297 1 345 1 218 1 194 1 157 1 81 3 174 1 324 1 377 1 42 1 328 1 16 2 
106 1 235 1 139 1 297 2 306 1 25 1 336 1 182 2 183 1 28 1 339 1 81 2 30 1 324 1 42 1 149 1 367 1 293 1 
106 1 235 1 306 1 25 1 121 1 336 1 182 2 183 1 194 1 28 1 81 2 324 1 42 1 214 1 149 1 328 1 293 1 16 2 
106 1 235 1 139 1 297 2 306 1 25 2 336 2 218 1 182 2 183 1 194 1 28 1 339 1 81 4 324 2 42 1 214 1 328 1 149 1 367 1 16 2 293 2 
235 1 139 1 297 2 306 1 25 1 181 1 336 1 182 2 183 1 28 1 339 1 81 2 30 1 324 1 42 1 149 1 367 1 293 1 
235 1 306 1 25 1 181 1 121 1 336 1 182 2 183 1 194 1 28 1 81 2 324 1 42 1 214 1 149 1 328 1 293 1 16 2 
235 1 139 1 297 2 306 1 25 2 181 1 336 2 218 1 182 2 183 1 194 1 28 1 339 1 81 4 324 2 42 1 214 1 328 1 149 1 367 1 16 2 293 2 
235 1 139 1 297 2 306 1 25 2 336 2 218 1 182 2 183 1 194 1 28 1 339 1 81 4 324 2 42 1 214 1 328 1 149 1 367 1 16 2 293 2 
235 1 237 1 308 1 358 1 306 1 91 1 207 1 182 2 183 1 166 1 28 1 167 1 96 1 287 1 291 1 149 1 39 1 248 1 131 1 297 1 372 1 81 2 226 1 136 1 377 1 42 1 16 1 352 1 
235 1 237 1 308 1 358 1 306 1 91 1 182 2 183 1 166 1 28 1 167 1 29 1 96 1 95 1 287 1 149 1 39 1 248 1 131 1 297 1 372 1 81 2 226 1 377 1 42 1 276 1 16 1 352 1 
235 1 139 1 297 2 306 1 25 2 345 1 336 2 218 1 182 2 183 1 194 1 28 1 339 1 81 4 324 2 42 1 214 1 328 1 149 1 367 1 16 2 293 2 
139 1 235 1 237 1 307 1 308 1 358 1 306 1 25 2 91 1 336 2 207 1 182 2 183 1 28 1 339 1 96 1 287 1 291 1 214 1 149 1 367 1 293 2 39 1 248 1 297 2 218 1 372 1 194 1 81 4 324 2 136 1 377 1 42 1 328 1 204 1 16 2 352 1 
235 1 139 1 87 1 20 1 306 1 25 1 336 1 141 1 182 2 183 1 28 1 339 1 149 1 367 1 293 1 248 1 55 1 297 2 345 1 218 1 323 1 194 1 81 3 174 1 324 1 377 1 42 1 328 1 16 1 
304 1 139 3 357 1 47 1 23 1 336 6 182 4 183 2 28 2 339 3 289 1 212 1 214 3 149 2 367 3 314 2 151 1 320 1 297 9 344 1 218 3 194 3 81 19 225 2 325 1 230 2 42 2 328 3 330 1 16 10 
304 1 139 2 47 1 336 1 182 4 183 2 28 2 289 1 212 2 214 1 149 2 367 2 313 1 314 2 169 1 107 1 320 2 109 1 297 9 110 1 218 2 194 1 81 17 325 2 42 2 230 2 328 1 233 1 330 2 16 8 
139 5 47 1 336 8 182 6 183 3 281 1 339 4 94 1 289 1 149 3 151 1 107 1 109 1 297 20 110 1 344 1 194 5 62 1 16 21 65 1 304 1 356 1 357 1 120 1 28 3 31 1 212 3 214 4 367 4 313 1 314 4 169 1 130 1 320 1 218 4 81 41 225 1 325 3 42 3 230 4 328 4 330 2 233 1 
304 1 139 4 357 1 47 1 120 1 336 5 182 6 183 3 28 3 339 2 289 1 212 3 214 3 149 3 367 4 313 1 314 3 169 1 151 1 107 1 320 1 109 1 297 15 110 1 344 1 218 4 194 3 81 30 225 1 325 3 230 4 42 3 328 3 233 1 330 2 16 15 
304 1 139 7 356 1 47 1 336 10 182 2 183 1 281 1 28 1 339 4 31 1 289 1 212 2 214 6 149 1 367 6 313 1 314 2 169 1 107 1 130 1 320 1 109 1 297 22 110 1 344 2 218 6 194 6 81 41 62 1 202 2 325 4 230 4 42 1 328 5 330 1 16 19 65 1 
82 1 61 1 163 1 108 1 26 1 72 1 256 1 220 1 111 1 257 1 
70 1 295 1 
60 1 82 1 61 1 163 1 108 1 72 1 257 1 245 1 7 1 
163 1 45 2 108 1 266 1 89 1 26 1 256 1 111 1 257 1 48 1 61 1 82 1 135 1 228 1 72 1 129 1 114 1 246 1 
163 1 45 2 108 1 266 1 89 1 26 1 256 1 111 1 257 1 48 1 61 1 82 1 135 1 228 1 72 1 129 1 114 1 246 1 
163 1 45 2 108 1 266 1 89 1 26 1 256 1 111 1 257 1 48 1 61 1 82 1 135 1 228 1 72 1 129 1 114 1 246 1 
68 1 73 1 112 1 
68 1 73 1 112 1 
153 1 161 1 
153 1 161 1 112 1 
369 1 290 1 
303 1 163 1 45 1 140 1 87 2 67 1 257 1 360 1 48 1 70 1 290 1 72 1 129 1 369 1 248 2 295 1 108 1 296 1 55 2 82 1 61 1 135 1 174 2 226 1 377 2 114 1 354 1 
68 1 73 1 
153 1 161 1 112 1 
235 1 237 1 358 1 308 2 306 1 182 2 183 1 28 1 167 1 96 1 52 1 189 1 149 1 216 1 170 1 39 2 248 2 131 1 55 2 191 1 297 1 345 1 372 1 346 1 81 2 199 2 377 2 376 1 42 1 16 1 352 2 
75 1 39 2 46 1 308 2 334 1 372 1 59 1 4 1 193 1 210 1 96 1 12 1 272 2 187 1 288 1 188 1 349 1 204 1 352 2 
75 1 39 1 46 1 308 1 372 1 59 1 193 1 210 1 341 1 96 1 12 1 272 2 187 1 288 1 188 1 349 1 352 1 
294 1 39 1 237 1 358 1 308 1 372 1 166 1 4 1 193 1 96 1 147 1 86 1 332 1 352 1 
75 1 39 1 46 1 308 1 334 1 372 1 59 1 4 1 193 1 210 1 96 1 12 1 272 2 187 1 288 1 188 1 349 1 352 1 
127 1 
198 1 118 1 14 1 89 1 264 1 362 1 184 1 
21 1 89 2 217 1 142 1 48 1 361 1 10 1 259 1 135 1 198 1 13 1 14 1 263 1 264 1 350 1 63 1 43 1 
138 1 139 2 237 3 89 8 90 2 91 3 279 1 142 5 48 5 338 2 96 4 340 2 342 2 102 2 190 1 103 2 195 2 10 12 194 2 198 2 253 2 14 9 13 4 204 1 160 2 350 6 205 1 352 3 118 1 21 4 358 10 308 3 122 2 311 1 362 1 166 1 259 4 211 1 262 2 261 2 263 3 367 2 215 2 264 8 38 3 39 3 319 6 217 4 218 2 372 3 134 6 224 1 135 5 328 2 
139 2 117 1 178 1 21 2 89 5 142 1 48 1 338 1 259 2 340 1 212 1 263 1 190 1 367 2 313 1 264 5 169 1 107 1 319 5 109 1 110 1 217 2 218 2 134 5 10 6 194 2 135 1 198 2 14 8 13 2 325 1 230 1 328 2 160 2 350 3 
139 2 87 1 356 1 20 1 21 1 179 1 48 1 283 1 259 1 340 1 240 1 241 1 36 1 264 2 317 1 247 1 248 1 130 1 55 1 217 1 194 1 135 1 174 1 377 1 13 1 14 2 160 2 65 1 
259 1 198 1 118 1 14 1 13 1 21 1 89 1 217 1 264 1 362 1 
139 2 319 5 89 5 218 2 134 5 10 10 194 2 340 1 253 1 14 5 328 2 367 2 160 2 264 5 350 5 
135 1 198 1 89 1 263 1 142 1 48 1 
237 1 177 1 21 1 358 1 308 4 142 4 48 3 166 2 338 2 259 2 96 1 34 1 263 2 190 2 264 2 39 4 56 1 217 2 372 1 224 2 135 3 13 2 14 2 41 1 381 1 205 1 86 1 332 1 352 4 
235 1 87 2 237 1 20 2 308 1 358 1 306 1 91 1 207 1 182 2 183 1 166 1 28 1 96 1 287 1 291 1 149 1 247 1 131 1 39 1 248 3 55 2 372 1 81 1 174 2 226 1 377 3 136 1 379 1 42 1 16 1 352 1 
319 2 21 1 89 4 217 1 134 2 10 4 338 1 259 1 198 2 31 1 13 1 14 1 190 1 264 2 350 2 
163 1 108 1 329 1 
163 1 108 1 329 1 
105 1 163 1 108 1 290 1 111 1 
163 1 108 1 329 1 
163 1 108 1 156 1 
163 1 108 1 156 1 
163 1 108 1 156 1 
163 1 108 1 
82 1 72 1 
139 1 130 1 297 4 356 1 336 3 182 4 183 2 281 1 194 1 28 2 81 8 339 1 62 1 31 1 42 2 214 2 149 2 233 1 16 4 65 1 
130 1 139 1 356 1 297 3 336 2 281 1 194 1 184 1 81 6 62 1 31 1 214 2 16 3 65 1 
139 1 297 2 88 1 336 2 218 1 182 2 183 1 194 1 28 1 81 4 339 1 42 1 214 1 328 1 149 1 367 1 16 2 
139 1 297 3 344 1 218 1 336 2 194 1 81 7 339 1 212 1 325 1 230 2 214 1 328 1 367 1 16 4 
139 3 356 2 336 9 182 4 183 2 281 1 28 2 339 4 31 1 214 5 149 2 367 2 366 1 130 1 297 11 344 1 218 2 194 3 81 23 62 1 158 1 202 1 325 2 230 2 42 2 328 2 233 2 16 12 65 2 
81 1 230 1 16 1 
81 1 297 1 325 1 
139 1 297 3 88 1 218 1 336 3 182 2 183 1 194 1 28 1 81 6 339 1 253 1 42 1 149 1 328 1 214 2 367 1 16 3 
139 2 336 2 182 2 183 1 28 1 339 1 289 1 212 1 149 1 214 1 367 2 313 1 169 1 107 1 109 1 297 6 110 1 218 2 194 2 81 12 325 1 230 1 42 1 328 2 16 6 
130 1 139 1 297 3 356 1 336 2 194 1 81 6 339 1 214 1 16 3 65 1 
297 1 356 1 336 2 182 2 183 1 281 1 28 1 339 1 81 3 62 1 158 1 42 1 214 1 149 1 233 1 16 2 65 1 
130 1 139 2 356 2 297 5 336 5 182 2 183 1 194 2 28 1 339 2 81 10 289 1 42 1 149 1 214 3 36 1 16 5 65 2 
139 1 297 2 336 1 182 2 183 1 28 1 81 2 339 1 289 1 42 1 149 1 367 1 
139 1 297 2 336 2 218 1 182 2 183 1 194 1 28 1 81 4 339 1 289 1 42 1 214 1 328 1 149 1 367 1 16 2 
356 1 297 1 336 2 182 6 183 3 28 3 81 3 339 1 158 1 289 1 42 3 149 3 214 1 233 1 16 2 151 1 65 1 
139 5 305 1 356 3 88 1 336 12 182 10 183 5 281 1 28 5 339 5 31 1 289 1 212 1 149 5 214 7 367 3 244 1 151 1 130 2 297 16 344 1 218 3 194 5 81 34 62 1 158 1 325 3 84 1 230 4 42 5 328 3 233 2 16 18 65 3 
139 1 356 1 336 2 182 2 183 1 281 1 28 1 31 1 289 1 212 1 149 1 214 2 130 1 297 4 110 1 194 1 81 8 62 1 325 1 230 1 42 1 16 4 65 1 
139 2 356 1 88 1 336 3 182 4 183 2 281 1 28 2 339 1 31 1 289 1 212 1 214 2 149 2 367 1 130 1 297 6 110 1 344 1 218 1 194 1 81 11 62 1 325 1 230 2 42 2 16 5 65 1 
139 3 356 1 88 1 336 4 182 6 183 3 281 1 28 3 339 1 31 1 289 1 212 1 149 3 214 3 367 2 313 1 169 1 107 1 130 1 109 1 297 9 110 1 218 2 194 3 81 19 62 1 325 1 230 1 42 3 328 2 233 1 16 10 65 1 
107 1 139 2 109 1 297 6 110 1 336 1 218 2 182 2 183 1 194 1 28 1 81 10 289 1 212 1 325 1 42 1 230 1 214 1 328 1 149 1 367 2 313 1 16 4 169 1 
139 1 356 1 336 2 182 2 183 1 281 1 28 1 31 1 289 1 212 1 149 1 214 2 130 1 297 4 110 1 194 1 81 8 62 1 325 1 230 1 42 1 16 4 65 1 
139 2 336 2 182 2 183 1 28 1 339 1 289 1 212 1 149 1 214 1 367 2 313 1 169 1 107 1 109 1 297 6 110 1 218 2 194 2 81 12 325 1 230 1 42 1 328 2 16 6 
139 2 88 1 336 1 182 6 183 3 28 3 289 1 212 1 149 3 214 1 367 2 313 1 169 1 107 1 109 1 297 6 110 1 218 2 194 1 81 11 325 1 230 1 42 3 328 1 233 1 16 5 
139 3 336 6 182 8 183 4 28 4 339 3 289 1 212 1 149 4 214 3 367 3 313 1 169 1 151 1 107 1 109 1 297 9 110 1 218 3 194 2 81 16 325 1 230 1 42 4 328 2 233 2 16 7 
130 1 139 1 356 3 297 3 336 6 281 1 194 1 81 7 339 3 62 2 214 3 16 4 65 3 
139 2 336 1 182 6 183 3 28 3 289 1 212 1 149 3 214 1 367 2 313 1 169 1 151 1 107 1 109 1 297 6 110 1 218 2 194 1 81 11 325 1 230 1 42 3 328 1 233 1 16 5 
248 1 226 1 55 1 377 1 93 1 269 1 277 1 
115 1 248 1 76 1 55 1 24 1 269 1 93 1 97 1 226 1 186 1 377 1 277 1 
96 1 39 1 237 1 358 1 308 1 372 1 332 1 86 1 166 1 352 1 184 1 
248 2 39 1 237 1 87 1 55 1 358 1 308 1 91 1 280 1 372 1 166 1 96 1 174 1 226 1 287 1 377 2 291 1 352 1 
87 2 237 2 308 1 358 3 90 1 91 2 280 1 96 1 287 1 291 1 243 1 317 1 39 1 248 2 55 2 372 1 195 1 224 1 174 1 226 1 377 2 15 1 352 1 
87 2 237 2 308 2 358 3 90 1 91 2 280 1 96 1 287 1 243 1 317 1 39 2 248 2 55 2 372 1 195 1 224 1 174 1 226 1 377 2 83 1 15 1 276 1 352 2 
39 3 237 1 89 1 308 3 358 4 90 1 91 1 165 1 142 1 372 1 48 2 166 1 195 1 125 1 96 1 135 2 224 1 198 1 261 1 83 1 102 1 38 1 352 3 
39 3 237 1 89 1 308 3 358 4 90 1 91 1 142 1 372 1 48 2 166 1 195 1 96 1 135 2 224 1 198 1 261 1 83 1 102 1 38 1 352 3 103 1 
96 1 39 1 308 1 372 1 352 1 353 1 
138 1 39 7 237 2 308 7 358 3 359 1 91 1 192 1 372 2 166 2 96 3 374 1 199 1 187 1 159 1 189 1 176 1 100 1 204 1 352 6 353 1 
235 2 139 1 87 1 237 1 91 1 280 1 336 2 182 4 183 2 281 1 96 1 287 1 291 1 149 2 293 1 248 2 53 1 55 1 297 3 345 1 194 1 62 1 204 1 16 3 352 1 65 1 356 1 307 1 308 1 306 2 358 1 25 1 207 1 28 2 31 1 214 2 216 1 39 1 130 1 372 1 81 6 174 1 226 2 324 1 136 1 377 2 42 2 
118 1 21 2 89 1 308 1 358 2 122 1 142 2 362 1 48 3 166 1 259 2 262 1 261 1 263 1 102 1 264 1 215 1 38 1 103 1 39 1 217 2 135 3 198 1 14 1 13 2 205 1 352 1 354 1 
138 1 39 2 237 1 308 2 358 2 279 1 91 1 372 1 96 2 261 1 204 1 352 2 353 1 
39 4 237 1 308 4 358 1 372 1 166 1 96 1 83 1 242 1 204 1 86 1 332 1 352 4 
39 2 237 1 308 2 358 1 57 1 91 1 372 1 224 1 96 2 374 1 176 1 352 2 255 1 355 1 
96 1 39 1 12 1 272 1 188 1 308 1 372 1 59 1 166 1 352 1 
39 2 237 1 308 2 358 1 372 1 96 1 187 1 52 1 189 1 204 1 352 2 
39 5 237 2 308 5 358 3 359 1 192 1 372 2 166 1 224 1 96 2 189 1 242 1 204 1 332 1 86 1 352 4 
39 5 237 2 308 5 358 3 359 1 372 2 166 1 224 1 96 2 189 1 242 1 204 1 332 1 86 1 352 4 64 1 
248 2 39 1 237 1 87 1 55 1 358 1 308 1 91 1 280 1 372 1 166 1 96 1 174 1 226 1 287 1 377 2 276 1 352 1 
138 1 39 1 237 1 308 1 358 1 91 1 372 1 224 1 96 2 374 1 176 1 100 1 352 1 
346 1 248 1 55 1 191 1 273 1 377 1 133 1 223 1 170 1 
223 1 143 1 145 1 
226 1 273 1 133 1 223 1 144 1 
116 1 89 1 133 2 48 2 223 1 143 1 173 1 145 1 144 2 135 2 198 1 226 1 273 2 203 1 243 1 102 1 15 1 317 1 354 1 
78 1 275 1 148 1 184 1 
300 1 78 1 275 1 148 1 79 1 27 1 150 1 
300 1 365 1 104 1 
78 1 1 1 27 1 79 3 3 2 197 1 300 3 275 1 148 1 331 1 150 1 254 1 
300 2 113 1 78 1 275 1 148 1 79 2 27 1 58 1 150 1 
78 1 27 1 79 1 69 1 209 1 59 1 210 1 300 1 272 1 150 1 254 1 
300 1 78 1 275 1 79 1 27 1 150 1 254 1 
300 1 275 2 148 1 79 1 27 1 150 1 254 1 
126 1 300 2 78 1 275 1 0 1 79 2 27 2 150 2 254 1 286 1 
78 2 27 1 79 3 2 1 58 2 69 1 300 3 227 1 128 1 275 1 148 1 150 1 254 1 
46 1 78 1 27 1 79 2 58 1 59 1 210 1 272 2 300 2 275 1 188 1 148 1 232 1 150 1 254 1 
78 2 27 2 79 4 58 2 69 1 300 4 51 1 113 1 227 1 275 1 148 1 150 2 254 1 
300 1 78 1 275 1 148 1 79 1 27 1 150 1 254 1 
54 1 78 3 1 1 79 4 27 1 3 1 58 2 69 1 197 1 300 4 227 1 275 2 148 2 150 1 
300 2 200 1 78 1 275 1 148 1 268 1 79 2 27 1 58 1 231 1 150 1 254 1 
197 1 300 3 78 1 275 1 148 1 1 2 79 3 27 1 3 2 37 1 150 1 254 1 
347 1 152 1 78 2 168 2 
71 1 300 1 79 1 27 1 150 1 254 1 
300 2 78 1 128 1 275 1 148 1 79 2 27 1 58 1 150 1 254 1 
22 1 
300 1 78 1 275 1 148 1 79 1 27 1 150 1 254 1 
78 1 27 1 79 3 58 1 3 1 300 3 128 1 275 1 148 1 150 1 254 1 
54 1 227 1 78 1 69 1 
78 1 275 1 

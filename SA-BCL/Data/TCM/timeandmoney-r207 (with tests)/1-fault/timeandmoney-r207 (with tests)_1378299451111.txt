#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (9,164) 321 (17,118) (17,118) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (9,164) 321 (17,118) (17,118) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (9,164) 321 (17,118) (17,118) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (9,164) 321 (17,118) (17,118) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 1 90 1 103 1 118 1 203 1 17 1 321 1 283 1 9 1 309 1 106 1 
222 1 90 1 103 1 118 1 203 1 17 1 321 1 283 1 9 1 309 1 106 1 
222 1 90 1 103 1 118 1 203 1 17 1 321 1 283 1 9 1 309 1 106 1 
222 1 90 1 103 1 118 1 203 1 17 1 321 1 283 1 9 1 309 1 106 1 
77 1 340 1 203 4 295 1 283 1 309 1 106 1 177 1 322 1 85 1 287 3 142 1 222 4 50 2 351 3 367 1 317 1 356 2 
330 1 77 1 203 2 103 1 90 1 283 1 309 1 106 1 191 1 177 1 83 1 287 1 142 1 288 1 222 2 367 1 
203 3 90 1 283 1 309 2 106 2 177 1 164 1 287 2 222 3 351 1 367 1 317 1 356 1 
115 1 90 1 203 9 307 1 283 1 309 2 177 1 287 5 142 1 335 1 50 2 367 1 317 3 77 1 340 1 295 1 106 2 322 1 164 1 85 1 222 9 377 1 351 7 356 4 
115 1 90 1 203 9 307 1 283 1 309 2 177 1 287 5 142 1 335 1 50 2 367 1 317 3 77 1 340 1 295 1 106 2 322 1 164 1 85 1 222 9 377 1 351 7 356 4 
172 1 11 1 91 1 
172 1 46 2 23 1 
292 2 339 2 73 1 74 2 126 2 14 1 38 2 265 2 
170 1 306 2 357 1 25 2 251 1 156 2 253 1 28 1 259 1 229 1 73 1 74 3 96 1 98 1 49 1 316 1 212 1 265 2 292 3 319 1 339 2 267 1 126 2 189 1 14 1 58 1 297 1 271 1 194 1 344 1 166 1 345 2 378 2 325 1 133 1 38 2 40 1 
292 1 339 1 1 1 73 1 74 1 126 1 38 1 327 1 75 1 265 1 
292 1 172 1 89 1 1 1 127 1 91 1 84 1 71 1 74 1 276 1 209 1 38 1 245 1 338 1 
292 1 172 1 339 1 1 1 126 1 91 1 84 1 71 1 74 1 276 1 209 1 38 1 245 2 265 1 338 2 
324 1 86 1 245 1 338 1 280 1 
172 1 347 1 91 1 324 1 245 2 69 1 338 2 280 1 
324 1 245 1 338 1 
292 1 339 1 1 1 126 1 73 1 74 1 337 1 38 1 327 1 245 1 75 1 265 1 280 1 338 1 
172 1 
172 1 347 1 314 1 91 1 324 1 245 2 338 2 280 1 
172 1 161 2 54 2 91 1 205 2 15 1 124 1 364 1 347 1 223 1 324 2 368 1 113 1 245 5 144 1 371 1 280 2 338 5 217 1 
11 1 14 1 
292 2 339 1 126 1 74 2 14 2 326 1 38 2 265 1 165 1 
186 1 301 1 178 1 
292 1 319 1 170 1 267 1 306 1 234 1 14 1 25 1 58 1 344 1 345 1 166 1 74 1 96 1 49 1 316 1 
292 3 339 3 74 3 126 3 14 1 38 3 51 1 265 1 
292 1 339 1 1 1 74 1 126 1 38 1 327 1 
292 1 339 1 1 1 74 1 126 1 326 1 38 1 265 1 165 1 
170 1 1 1 306 1 140 1 357 1 25 1 156 1 253 1 28 1 71 1 259 1 73 1 96 1 74 4 209 1 49 1 316 1 212 1 51 1 265 2 338 1 319 1 292 4 339 3 267 1 126 3 14 1 163 1 58 1 271 1 194 1 84 1 344 1 166 1 345 1 378 2 167 1 276 1 325 1 133 1 326 1 38 3 245 1 40 1 
292 2 339 1 127 1 74 2 126 1 14 1 131 1 38 2 51 1 
292 3 172 1 339 3 1 1 140 1 126 3 84 1 71 1 157 1 167 1 209 1 74 3 276 1 326 1 38 3 245 1 51 2 265 1 338 1 
292 2 339 2 126 2 178 1 74 2 301 1 326 1 38 2 51 1 265 1 
292 1 319 1 170 1 267 1 306 1 14 1 25 1 58 1 344 1 345 1 166 1 74 1 96 1 49 1 316 1 
292 1 170 1 267 1 306 1 305 1 14 1 25 1 58 1 344 1 345 1 166 1 130 1 74 1 96 1 316 1 
248 1 174 1 357 1 156 4 92 1 253 1 311 1 178 2 259 2 212 1 263 1 101 1 186 2 189 2 194 1 221 1 378 2 301 2 62 1 350 1 325 1 169 1 133 1 279 1 
292 1 339 1 1 1 74 1 126 1 56 1 38 1 84 1 
170 1 319 1 292 2 339 1 267 1 306 1 140 1 126 1 25 1 58 1 344 1 166 1 345 1 301 1 96 1 74 2 49 1 316 1 38 1 51 1 
292 5 339 4 140 1 127 1 270 1 126 4 14 1 70 1 74 5 131 1 326 1 38 5 51 2 265 1 
292 2 339 2 1 1 56 1 74 2 126 2 38 2 327 1 
210 1 255 1 
210 1 255 1 
146 1 2 1 
146 1 2 1 
146 1 2 1 
44 1 210 1 255 1 
44 1 210 1 255 1 
210 1 93 1 255 1 
146 1 2 1 210 2 255 2 239 1 182 1 
44 1 210 1 255 1 
210 1 238 1 255 1 
210 1 238 1 255 1 
210 1 238 1 255 1 
102 3 172 1 183 2 296 1 5 2 255 2 195 1 239 1 273 1 8 2 210 2 348 1 277 2 199 1 37 2 380 1 245 2 10 1 338 2 
292 2 102 1 339 2 224 1 183 1 126 2 14 1 93 1 59 1 195 1 255 1 290 1 8 1 47 1 74 2 210 1 36 1 277 1 37 1 38 2 381 1 245 1 372 1 338 1 
77 1 340 1 142 1 
77 1 191 1 142 1 
340 2 120 1 332 1 191 1 312 1 142 3 
340 1 120 1 121 1 191 1 312 1 142 2 
340 1 120 2 191 1 312 1 142 2 
172 2 224 1 91 1 205 1 67 2 311 1 6 1 124 2 94 1 46 3 368 1 263 1 144 3 338 5 54 1 161 1 184 1 147 2 294 1 59 1 342 1 60 1 347 1 36 1 324 1 62 1 302 2 169 1 21 1 245 5 23 1 280 4 
172 5 24 1 91 1 205 2 67 6 311 3 123 1 6 2 124 6 364 1 46 9 368 1 263 3 144 8 338 9 161 2 54 2 184 2 147 6 294 1 80 5 342 3 149 1 346 1 347 1 36 4 324 6 62 3 86 5 169 3 245 9 328 1 278 1 23 3 280 7 
172 3 91 1 205 1 67 2 311 1 6 1 124 2 364 1 94 1 46 4 263 1 144 3 338 3 54 1 161 1 184 1 147 2 342 1 60 1 36 1 62 1 302 1 169 1 245 3 23 2 280 2 
172 4 91 1 205 1 67 4 311 2 6 1 124 4 364 1 94 1 46 7 263 2 144 5 338 4 54 1 161 1 184 1 147 4 342 2 149 1 60 1 36 2 62 2 302 2 169 2 245 4 328 1 23 3 278 1 280 3 
11 1 58 1 63 1 
304 1 58 1 
117 1 
166 1 58 1 
208 1 166 1 63 2 58 3 313 1 344 1 
166 1 58 1 344 1 
125 1 58 1 
137 1 12 1 249 1 189 4 374 1 235 1 92 3 156 7 193 1 311 1 197 1 259 3 112 1 169 1 153 2 101 2 181 1 
137 1 12 1 249 1 189 4 374 1 235 1 92 3 156 7 193 1 311 1 197 1 259 3 112 1 169 1 153 2 101 2 181 1 
137 1 12 1 249 1 374 1 189 4 235 1 92 3 156 7 193 1 311 1 197 1 259 3 112 1 169 1 153 2 87 1 101 2 181 1 
137 2 249 2 357 1 156 31 92 10 122 1 311 4 362 1 259 15 262 3 336 4 212 1 263 3 232 1 181 1 101 5 12 5 374 1 189 16 235 2 236 1 342 3 193 2 194 1 128 1 197 1 378 2 241 1 112 1 62 3 133 1 153 3 169 4 355 1 
137 1 249 1 64 1 357 2 156 9 92 4 311 1 259 4 365 1 212 2 101 3 181 1 12 1 189 5 374 1 235 1 193 1 194 2 378 4 241 1 112 1 169 1 133 2 153 2 
202 1 306 1 203 2 90 1 283 1 25 1 66 1 332 1 252 1 309 1 177 1 287 1 142 2 158 1 96 1 316 1 367 1 266 1 77 1 340 1 34 1 219 1 298 1 106 1 191 1 345 1 222 2 349 1 351 1 134 1 
202 1 306 1 203 3 90 1 25 1 332 1 66 1 309 1 206 1 177 1 287 1 142 2 158 1 231 1 96 1 291 1 316 1 367 1 77 1 340 1 34 1 219 1 298 1 106 1 191 1 345 1 222 3 349 1 351 2 134 1 
77 1 202 1 340 1 203 2 306 1 90 1 25 1 332 1 219 1 66 1 34 1 298 1 206 1 191 1 177 1 287 1 142 2 222 2 345 1 96 1 291 1 316 1 351 2 367 1 134 1 
202 2 247 1 306 1 203 1 90 2 116 1 25 1 309 1 231 1 96 1 31 1 316 1 267 1 13 1 34 2 58 1 106 1 192 1 345 1 222 1 166 1 379 1 134 2 
202 1 306 1 203 1 90 1 283 1 25 1 66 1 332 1 309 1 142 2 158 1 96 1 291 1 316 1 266 1 77 1 340 1 34 1 219 1 298 1 106 1 191 1 345 1 222 1 349 1 134 1 
138 1 
172 2 89 1 1 1 91 1 6 1 46 2 96 1 95 4 144 2 145 1 338 5 292 1 54 1 13 1 58 1 190 1 198 1 345 2 300 2 347 3 245 5 23 2 116 1 306 2 250 1 308 2 25 2 205 1 254 1 71 1 124 2 30 2 260 2 74 1 209 1 316 1 366 1 368 1 370 2 76 2 267 2 218 1 161 1 268 1 320 1 127 1 82 1 323 2 84 1 375 1 166 1 276 1 324 6 38 1 41 1 
89 1 1 1 250 1 308 1 71 1 74 1 209 1 95 2 314 1 366 1 338 3 292 1 320 1 127 1 82 1 190 1 84 1 276 1 347 1 324 2 38 1 245 3 
89 1 172 1 1 1 250 1 91 1 71 1 260 1 74 1 209 1 95 3 314 1 366 1 338 3 292 1 320 1 127 1 82 1 190 1 84 1 276 1 347 1 324 1 38 1 245 3 
89 1 172 1 1 1 250 1 308 1 91 1 71 1 260 1 74 1 209 1 95 3 314 1 366 1 370 1 338 3 292 1 320 1 127 1 82 1 190 1 84 1 347 1 276 1 324 2 38 1 245 3 
172 5 89 1 1 1 250 1 308 4 91 5 205 1 359 1 361 1 71 1 124 1 30 2 260 4 74 1 209 1 95 6 314 1 366 1 368 1 144 1 370 4 76 2 338 5 79 1 292 1 218 1 268 1 54 1 161 1 320 1 127 1 35 1 82 1 190 1 323 2 84 1 300 2 347 3 276 1 243 1 324 7 38 1 245 5 23 2 
172 2 89 1 1 1 250 1 308 2 91 1 205 1 254 1 71 1 124 1 30 2 260 2 46 2 74 1 209 1 95 4 366 1 368 1 144 1 370 2 76 2 338 4 292 1 218 1 54 1 161 1 268 1 320 1 127 1 82 1 190 1 323 2 84 1 347 2 300 2 276 1 324 4 38 1 245 4 23 2 
172 1 89 1 1 1 250 1 308 2 91 1 205 1 361 1 71 1 124 1 30 2 260 2 74 1 209 1 95 4 366 1 368 1 144 1 370 2 76 2 338 4 292 1 79 1 218 1 268 1 161 1 54 1 320 1 127 1 82 1 190 1 323 2 84 1 347 2 300 2 276 1 243 1 324 4 38 1 245 4 23 2 
172 1 89 1 1 1 250 1 308 2 91 1 205 1 361 1 71 1 124 1 30 2 260 2 74 1 209 1 95 4 366 1 368 1 144 1 370 2 76 2 338 4 292 1 79 1 218 1 268 1 161 1 54 1 320 1 127 1 82 1 190 1 323 2 84 1 347 2 300 2 276 1 243 1 324 4 38 1 245 4 23 2 
0 1 172 1 89 1 1 1 250 1 308 2 91 1 205 1 256 2 361 1 71 1 124 1 30 2 260 2 46 2 74 1 209 1 95 4 366 1 99 1 368 1 144 1 370 2 338 4 292 1 218 1 161 1 54 1 104 1 320 1 127 1 82 1 190 1 84 1 347 2 300 2 276 1 324 4 38 1 245 4 200 2 
172 1 89 1 1 1 250 1 308 3 91 1 205 1 361 1 71 1 124 1 30 2 260 3 74 1 209 1 95 5 366 1 368 1 144 1 370 3 76 2 338 4 79 1 292 1 218 1 268 1 54 1 161 1 320 1 127 1 35 1 82 1 190 1 323 2 84 1 347 2 300 2 276 1 243 1 324 5 38 1 245 4 23 2 
172 1 89 1 1 1 250 1 308 3 91 1 205 1 361 1 71 1 124 1 30 2 260 3 74 1 209 1 95 5 366 1 368 1 144 1 370 3 76 2 338 4 79 1 292 1 218 1 268 1 54 1 161 1 320 1 127 1 35 1 82 1 190 1 323 2 84 1 347 2 300 2 276 1 243 1 324 5 38 1 245 4 23 2 
0 1 172 1 89 1 1 1 250 1 308 2 91 1 205 1 254 1 256 2 71 1 124 1 30 2 260 2 46 2 74 1 209 1 95 4 366 1 368 1 144 1 370 2 338 4 292 1 218 1 54 1 161 1 320 1 127 1 82 1 190 1 84 1 347 2 300 2 276 1 324 4 38 1 245 4 200 2 
137 1 174 1 357 1 92 2 156 6 253 1 178 1 311 1 259 3 212 1 181 1 101 2 11 1 186 1 374 1 189 3 14 2 193 1 194 1 378 2 301 1 112 1 325 1 133 1 169 1 153 1 
139 1 225 1 357 2 251 1 92 2 156 14 122 1 253 1 179 1 178 4 311 1 43 1 362 1 259 6 336 3 262 3 212 2 263 2 101 1 12 1 186 11 14 1 189 8 342 2 194 2 148 1 378 4 301 11 62 1 325 2 133 2 169 2 40 1 
170 1 306 1 140 1 357 1 25 1 156 2 251 1 253 1 178 1 7 1 259 1 96 1 74 2 49 1 315 1 316 1 212 1 51 1 319 1 292 2 267 1 339 1 126 1 234 1 14 1 189 1 58 1 194 1 148 1 344 1 166 1 345 1 378 2 325 1 133 1 38 1 329 1 40 1 
137 1 170 2 140 1 92 8 178 7 286 1 96 2 291 1 49 2 51 1 181 1 101 4 292 3 339 1 12 4 186 7 55 2 57 1 14 2 189 10 58 2 342 2 193 1 107 2 194 3 148 1 344 2 345 3 240 2 112 1 301 7 62 2 153 1 306 3 357 3 25 3 358 2 251 1 156 20 253 3 28 2 311 3 259 10 74 3 316 2 212 3 263 2 318 1 319 2 267 1 126 1 374 1 166 2 378 6 325 3 133 3 169 3 38 1 40 1 
174 1 306 7 116 1 3 1 357 2 25 8 252 1 251 1 156 2 253 2 310 1 42 1 259 1 230 1 74 1 96 2 291 1 98 2 316 2 212 2 51 1 292 1 293 1 339 1 267 2 13 1 126 1 189 1 58 3 194 2 376 1 345 8 166 2 378 4 325 2 133 2 352 1 38 1 40 1 
357 1 119 1 92 1 156 3 253 1 178 1 311 1 259 2 74 1 212 1 263 1 265 1 101 1 292 1 339 1 186 1 126 1 189 1 342 1 194 1 148 1 378 2 301 1 62 1 325 1 326 1 133 1 169 1 38 1 
12 1 186 1 174 1 357 1 189 2 92 1 156 2 253 1 178 1 194 1 378 2 301 1 325 1 212 1 133 1 169 1 263 1 279 1 
186 1 174 1 357 1 92 1 156 2 253 1 178 1 194 1 311 1 221 1 259 2 378 2 301 1 62 1 325 1 212 1 133 1 101 1 
174 1 357 1 156 4 92 2 253 1 178 2 311 1 259 2 212 1 263 1 101 1 12 1 186 2 189 2 342 1 194 1 378 2 301 2 62 1 325 1 169 1 133 1 
12 1 186 1 357 1 189 2 92 1 156 2 253 1 310 1 178 1 194 1 378 2 301 1 325 1 212 1 133 1 169 1 263 1 279 1 
186 1 357 1 92 1 156 2 253 1 310 1 178 1 194 1 311 1 221 1 259 2 378 2 301 1 62 1 325 1 212 1 133 1 101 1 
357 1 156 4 92 2 253 1 310 1 178 2 311 1 259 2 212 1 263 1 101 1 12 1 186 2 189 2 342 1 194 1 378 2 301 2 62 1 325 1 169 1 133 1 
12 1 186 2 357 1 189 2 92 2 156 4 253 1 342 1 311 1 178 2 194 1 259 2 378 2 301 2 62 1 325 1 212 1 133 1 169 1 263 1 101 1 
170 1 306 1 357 1 25 1 251 1 156 2 28 1 253 1 259 1 96 1 74 1 49 1 316 1 212 1 319 1 292 1 267 1 189 1 14 1 58 1 194 1 344 1 166 1 345 1 378 2 325 1 133 1 40 1 
170 1 305 1 306 1 357 1 25 1 251 1 156 2 253 1 259 1 96 1 74 1 316 1 212 1 292 1 267 1 189 1 14 1 58 1 343 1 194 1 344 1 166 1 345 1 130 1 378 2 325 1 133 1 40 1 
357 1 156 4 92 2 253 1 178 2 311 1 259 2 212 1 263 1 101 1 12 1 186 2 189 2 342 1 194 1 148 1 378 2 301 2 62 1 325 1 169 1 133 1 
170 1 306 1 357 1 25 1 92 2 156 4 252 1 28 1 253 1 311 1 178 2 259 2 96 1 74 1 49 1 316 1 212 1 263 1 101 1 319 1 292 1 12 1 186 2 55 1 189 2 58 1 342 1 194 1 344 1 345 1 166 1 378 2 301 2 62 1 325 1 169 1 133 1 
357 1 92 1 156 3 253 1 311 1 178 1 259 1 74 1 212 1 263 1 265 1 292 1 339 1 12 1 186 1 126 1 189 2 81 1 342 1 194 1 148 1 378 2 301 1 62 1 325 1 326 1 133 1 169 1 38 1 
357 2 4 1 204 1 26 1 156 19 92 6 122 1 311 3 334 2 362 1 259 10 336 2 262 1 365 1 212 2 213 2 263 3 101 3 12 3 233 1 189 9 342 3 299 1 194 2 378 4 62 3 133 2 169 3 39 1 281 1 
114 1 357 3 4 1 204 1 175 1 92 4 156 26 27 1 122 2 207 1 360 1 311 2 334 1 259 12 336 2 262 2 365 1 212 3 213 4 263 3 101 2 12 2 233 2 105 1 189 14 342 3 299 1 194 3 378 6 241 2 62 2 133 3 169 3 39 2 
137 1 114 1 357 3 4 1 204 1 26 1 175 1 27 1 156 41 92 8 122 3 207 1 360 1 311 5 334 1 362 1 259 21 336 4 262 3 365 1 212 3 213 4 263 4 181 1 101 4 12 4 233 1 105 1 374 1 189 20 342 4 193 1 299 1 194 3 109 1 378 6 241 1 112 1 62 4 153 1 133 3 169 5 39 2 
137 1 114 1 357 4 4 1 204 1 26 1 175 1 27 1 156 38 92 7 122 3 207 1 360 1 311 4 334 1 362 1 259 18 336 4 262 3 365 1 212 4 213 4 263 4 181 1 101 4 12 3 233 1 105 1 374 1 189 20 342 4 193 1 299 1 194 4 109 1 378 8 241 2 112 1 62 3 153 1 133 4 169 5 39 2 
137 1 114 1 139 2 357 2 4 1 204 1 175 1 27 1 156 52 92 14 122 2 207 1 360 1 311 8 334 1 362 2 259 25 336 4 262 4 365 1 212 2 213 4 263 7 181 1 101 7 12 7 233 1 105 1 374 1 189 27 342 7 193 1 299 1 194 2 378 4 241 1 112 1 62 7 153 1 133 2 169 8 39 1 
183 1 8 1 210 1 277 1 199 1 37 1 380 1 255 1 239 1 201 1 
93 1 381 1 
159 1 183 1 8 1 210 1 277 1 37 1 255 1 108 1 180 1 
102 2 172 1 183 1 296 1 5 1 195 1 255 1 239 1 273 1 8 1 210 1 348 1 277 1 199 1 37 1 380 1 245 1 338 1 
102 2 172 1 183 1 296 1 5 1 195 1 255 1 239 1 273 1 8 1 210 1 348 1 277 1 199 1 37 1 380 1 245 1 338 1 
102 2 172 1 183 1 296 1 5 1 195 1 255 1 239 1 273 1 8 1 210 1 348 1 277 1 199 1 37 1 380 1 245 1 338 1 
44 1 45 1 182 1 
44 1 45 1 182 1 
238 1 369 1 
238 1 369 1 182 1 
290 1 47 1 
224 1 5 1 93 1 255 1 290 1 8 1 74 2 97 1 210 1 47 1 372 1 338 1 292 2 102 1 339 2 183 1 126 2 14 1 59 1 348 1 36 1 277 1 37 1 38 2 245 1 381 1 280 1 
44 1 45 1 
238 1 369 1 182 1 
306 2 357 1 25 2 251 1 156 2 253 1 42 1 257 1 259 1 96 1 74 2 98 2 316 1 212 1 100 1 292 2 189 1 58 1 194 1 148 1 150 1 166 1 345 2 378 2 275 1 325 1 20 1 133 1 352 1 38 2 40 1 
77 1 340 1 306 2 25 2 65 1 332 1 34 1 219 1 252 1 298 1 191 1 142 2 345 2 96 1 291 1 349 1 316 1 135 1 303 1 
77 1 340 1 306 1 25 1 332 1 34 1 219 1 298 1 191 1 142 2 72 1 345 1 96 1 291 1 349 1 316 1 303 1 
171 1 267 1 306 1 116 1 13 1 25 1 65 1 58 1 34 1 192 1 166 1 345 1 96 1 316 1 
77 1 340 1 306 1 25 1 65 1 332 1 34 1 219 1 298 1 191 1 142 2 345 1 96 1 291 1 349 1 316 1 135 1 303 1 
88 1 
172 1 124 1 11 1 91 1 15 1 113 1 144 1 
172 2 91 1 205 1 124 1 46 1 368 1 144 1 76 1 338 1 268 1 54 1 161 1 323 1 347 1 324 1 245 1 23 1 
172 8 91 2 284 2 285 1 227 2 6 2 96 3 46 12 144 9 52 2 338 5 54 4 147 6 187 1 58 10 15 1 342 2 107 2 344 3 110 2 198 1 345 3 347 3 244 2 63 2 62 2 113 1 245 5 23 6 304 3 306 3 25 3 205 4 252 1 67 6 311 2 208 1 124 8 209 2 316 4 368 4 214 2 263 2 215 1 78 1 267 1 161 4 125 2 220 2 166 3 324 5 168 1 132 2 169 2 
114 1 172 5 91 2 175 1 205 2 27 1 122 1 67 5 360 1 311 2 6 1 124 5 258 1 46 6 336 1 262 1 368 2 263 2 264 1 144 8 338 1 54 2 161 2 147 5 105 1 342 2 110 2 198 1 347 1 244 1 324 1 62 2 169 2 245 1 23 3 
137 1 1 1 205 1 311 1 363 1 124 2 73 1 74 1 368 1 337 1 144 2 75 1 265 1 338 1 292 1 79 1 339 1 54 1 161 1 126 1 193 1 110 2 112 1 244 1 169 2 38 1 327 1 245 1 
172 1 161 1 54 1 91 1 205 1 15 1 124 1 368 1 113 1 144 1 
172 5 147 5 342 2 107 1 67 5 311 2 110 2 124 5 46 10 244 1 62 2 169 2 263 2 144 5 23 5 
172 1 347 1 91 1 324 1 245 1 338 1 
306 4 116 1 25 4 205 2 285 1 6 2 124 2 364 1 96 1 316 1 368 1 144 2 145 1 338 3 78 2 267 2 54 2 161 2 13 1 58 1 375 1 198 2 61 1 166 1 345 4 347 2 324 4 22 1 245 3 
170 1 306 1 357 1 25 1 156 1 28 1 253 1 259 1 73 1 74 3 96 1 49 1 316 1 212 1 265 2 292 3 319 1 267 1 339 2 126 2 14 1 58 1 271 1 194 1 344 1 345 1 166 1 378 2 325 1 133 1 38 2 40 1 
172 4 161 1 54 1 147 2 91 2 205 1 67 2 6 1 124 2 198 1 46 4 153 1 368 1 144 1 23 2 
8 1 162 1 277 1 
8 1 162 1 277 1 
173 1 8 1 47 1 277 1 380 1 
8 1 162 1 277 1 
8 1 277 1 141 1 
8 1 277 1 141 1 
8 1 277 1 141 1 
8 1 277 1 
210 1 255 1 
137 1 12 1 357 2 189 4 374 1 156 8 92 3 193 1 311 1 194 2 259 4 378 4 241 1 112 1 212 2 153 1 169 1 133 2 101 2 181 1 
137 1 11 1 374 1 189 3 92 2 156 6 193 1 311 1 259 3 112 1 153 1 169 1 181 1 101 2 
12 1 357 1 189 2 92 2 156 4 342 1 311 1 194 1 259 2 378 2 261 1 62 1 212 1 133 1 169 1 263 1 101 1 
12 1 189 3 156 7 92 2 122 1 342 1 311 1 362 1 259 4 336 2 262 1 62 1 169 1 263 1 101 1 
137 2 139 1 357 2 92 9 156 23 311 3 362 1 43 1 259 12 262 2 336 2 212 2 211 1 263 2 181 1 101 5 12 4 374 1 189 11 342 2 193 2 194 2 378 4 241 2 112 1 62 2 153 1 169 3 133 2 
259 1 336 1 156 1 
262 1 189 1 156 1 
12 1 357 1 189 3 156 6 92 3 342 1 107 1 194 1 311 1 259 3 378 2 261 1 62 1 212 1 133 1 169 1 263 1 101 2 
114 1 357 1 175 1 156 12 27 1 92 2 122 1 311 2 360 1 259 6 262 1 336 1 365 1 212 1 263 2 101 1 12 1 105 1 189 6 342 2 194 1 378 2 62 2 133 1 169 2 
137 1 12 1 189 3 156 6 92 2 193 1 311 1 259 3 112 1 169 1 101 1 
137 1 12 1 357 1 189 1 374 1 92 2 156 3 193 1 194 1 259 2 378 2 241 1 211 1 212 1 133 1 101 1 181 1 
137 2 12 2 357 1 189 5 92 5 156 10 193 2 194 1 311 2 363 1 259 5 378 2 112 1 365 1 212 1 133 1 169 2 101 3 
12 1 357 1 189 2 156 2 92 1 194 1 378 2 365 1 212 1 133 1 169 1 263 1 
12 1 357 1 189 2 92 2 156 4 342 1 311 1 194 1 259 2 378 2 62 1 365 1 212 1 133 1 169 1 263 1 101 1 
137 1 12 1 357 3 189 1 26 1 156 3 92 2 193 1 194 3 259 2 378 6 241 1 365 1 211 1 212 3 133 3 101 1 
137 3 357 5 26 1 156 34 92 12 122 1 311 5 362 1 259 18 261 1 336 4 262 3 365 1 211 1 212 5 263 3 181 1 101 7 12 5 374 1 189 16 236 1 342 3 193 3 128 1 194 5 378 10 241 2 112 2 62 3 153 1 133 5 169 5 355 1 
137 1 357 1 156 8 92 2 122 1 311 1 259 4 262 1 336 1 365 1 212 1 181 1 101 2 105 1 189 4 374 1 193 1 194 1 378 2 112 1 153 1 169 1 133 1 
137 1 357 2 156 11 92 3 122 1 311 1 362 1 259 5 261 1 336 2 262 1 365 1 212 2 263 1 101 2 181 1 12 1 105 1 374 1 189 6 342 1 193 1 194 2 378 4 112 1 153 1 133 2 169 2 
137 1 114 1 357 3 175 1 156 19 27 1 92 4 122 1 360 1 311 3 259 10 261 1 262 1 336 1 365 1 212 3 263 2 181 1 101 3 12 1 105 1 374 1 189 9 342 2 193 1 194 3 378 6 241 1 112 1 62 2 153 1 133 3 169 3 
137 1 114 1 357 3 175 1 156 17 27 1 92 5 122 1 311 2 360 1 259 7 261 1 262 1 336 1 365 1 212 3 263 2 181 1 101 3 12 2 105 1 374 1 189 10 342 2 193 1 194 3 378 6 241 1 112 1 62 1 153 1 133 3 169 3 
137 1 357 1 156 8 92 2 122 1 311 1 259 4 262 1 336 1 365 1 212 1 181 1 101 2 105 1 189 4 374 1 193 1 194 1 378 2 112 1 153 1 169 1 133 1 
114 1 357 1 175 1 156 12 27 1 92 2 122 1 311 2 360 1 259 6 262 1 336 1 365 1 212 1 263 2 101 1 12 1 105 1 189 6 342 2 194 1 378 2 62 2 133 1 169 2 
137 1 114 1 357 4 175 1 156 18 27 1 92 5 122 1 360 1 311 2 259 8 261 1 336 1 262 1 365 1 212 4 263 2 181 1 101 3 12 2 105 1 374 1 189 10 342 2 193 1 194 4 378 8 241 2 112 1 62 1 153 1 133 4 169 3 
114 1 357 4 175 1 26 1 156 16 27 1 92 6 122 1 360 1 311 2 259 7 336 1 262 1 365 1 212 4 263 3 101 3 12 3 105 1 189 9 342 3 194 4 378 8 241 2 62 2 133 4 169 3 
137 3 12 3 374 2 189 3 156 7 92 6 193 3 311 1 259 4 112 1 169 1 181 1 101 3 
137 1 114 1 357 4 175 1 26 1 156 18 27 1 92 4 122 1 360 1 311 2 259 8 336 1 262 1 365 1 212 4 263 2 181 1 101 3 12 1 105 1 374 1 189 10 342 2 193 1 194 4 378 8 241 2 112 1 62 1 153 1 133 4 169 3 
292 1 74 1 127 1 14 1 131 1 226 1 38 1 
292 1 373 1 127 1 14 1 226 1 152 1 74 1 48 1 131 1 38 1 32 1 216 1 
267 1 166 1 11 1 345 1 116 1 306 1 13 1 96 1 25 1 316 1 58 1 
170 1 292 2 319 1 339 1 267 1 306 1 126 1 14 1 25 1 58 1 344 1 166 1 345 1 74 2 96 1 316 1 38 1 51 1 
170 1 1 1 306 1 25 1 227 1 96 1 74 2 316 1 51 1 319 1 78 1 292 2 339 2 126 1 125 1 14 1 58 3 84 1 344 2 345 1 166 2 276 1 38 2 
170 1 1 1 306 2 25 2 227 1 160 1 96 1 74 2 316 1 51 1 78 1 292 2 339 2 126 1 125 1 14 1 58 3 84 1 344 2 345 2 166 2 130 1 276 1 38 2 
155 1 304 1 172 1 306 3 25 3 91 1 227 1 160 1 96 1 209 1 316 1 338 2 53 1 78 1 267 1 125 1 58 4 344 1 345 3 166 1 324 1 63 1 245 2 
78 1 267 1 172 1 304 1 306 3 125 1 91 1 25 3 58 4 227 1 344 1 166 1 345 3 160 1 209 1 96 1 324 1 316 1 63 1 132 1 245 2 338 2 
345 1 306 1 230 1 96 1 25 1 316 1 
293 1 267 2 331 1 185 1 306 6 3 1 25 7 58 3 252 1 344 1 274 1 208 1 376 1 345 7 166 2 230 1 96 2 291 1 98 1 316 3 352 1 
170 1 137 1 92 2 178 1 96 1 49 1 51 1 181 1 101 2 292 2 339 1 186 1 55 1 189 3 14 2 58 1 193 1 194 2 148 1 344 1 150 1 345 1 240 1 112 1 301 1 153 1 306 1 357 2 25 1 252 1 156 6 28 1 253 2 311 1 259 3 74 2 316 1 212 2 319 1 126 1 374 1 166 1 378 4 325 2 133 2 169 1 38 1 
172 1 304 1 306 1 91 1 25 1 284 1 205 2 285 1 124 1 209 1 368 2 214 1 144 1 52 1 338 3 267 1 54 2 161 2 58 2 15 1 345 1 347 1 324 2 63 1 132 1 113 1 245 3 280 1 
306 2 25 2 58 2 252 1 344 1 208 1 345 2 166 1 230 1 96 1 63 1 316 2 168 1 
267 1 306 4 116 1 13 1 25 4 58 1 252 1 345 4 166 1 143 1 160 1 96 1 316 1 
78 1 331 1 185 1 306 2 57 1 25 2 58 1 344 1 111 1 345 2 166 1 96 1 316 2 353 1 
77 1 267 1 345 1 306 1 96 1 25 1 316 1 219 1 191 1 142 1 
306 2 25 2 58 1 252 1 345 2 166 1 96 1 291 1 316 1 20 1 352 1 
78 1 267 1 116 1 306 4 13 1 3 1 25 5 58 3 252 1 345 5 376 1 166 2 143 1 96 2 316 2 352 1 
78 1 267 1 116 1 306 4 13 1 3 1 25 5 176 1 58 3 252 1 345 5 166 2 143 1 96 2 316 2 352 1 
170 1 292 2 339 1 267 1 306 1 126 1 14 1 25 1 58 1 344 1 166 1 345 1 130 1 74 2 96 1 316 1 38 1 51 1 
78 1 331 1 185 1 306 1 25 1 58 1 344 1 274 1 208 1 345 1 166 1 96 1 316 2 
292 1 257 1 341 1 74 1 275 1 38 1 272 1 136 1 100 1 
18 1 237 1 136 1 
341 1 14 1 188 1 272 1 136 1 
172 1 1 1 341 2 14 1 91 1 188 2 237 1 84 1 272 2 129 1 71 1 167 1 209 1 276 1 18 1 245 2 136 1 280 1 338 2 
11 1 367 1 177 1 287 1 
222 1 203 1 367 1 309 1 106 1 177 1 287 1 
202 1 222 1 90 1 
288 2 154 1 222 3 203 3 283 1 367 1 309 1 106 1 177 1 354 1 287 1 246 1 
222 2 203 2 351 1 50 1 367 1 309 1 106 1 177 1 287 1 
77 1 340 1 203 1 283 1 309 1 106 1 85 1 287 1 142 1 222 1 356 1 
222 1 203 1 283 1 367 1 309 1 106 1 287 1 
222 1 203 1 283 1 367 2 309 1 106 1 177 1 
269 1 203 2 283 1 309 2 106 2 287 1 289 1 222 2 242 1 367 1 
203 3 283 1 309 1 106 1 177 1 287 2 222 3 377 1 335 1 351 2 367 1 317 1 356 1 
77 1 340 1 203 2 283 1 332 1 309 1 191 1 106 1 177 1 68 1 287 1 142 2 222 2 351 1 367 1 
203 4 295 1 283 1 309 2 106 2 177 1 287 2 222 4 50 1 351 2 367 1 317 1 356 1 
222 1 203 1 283 1 367 1 309 1 106 1 177 1 287 1 
154 1 33 1 203 4 309 1 106 1 177 2 287 3 288 1 222 4 351 2 367 2 354 1 317 1 356 1 
282 1 203 2 307 1 283 1 309 1 106 1 177 1 287 1 228 1 222 2 351 1 367 1 
154 1 203 3 283 1 309 1 333 1 106 1 177 1 287 1 288 2 222 3 367 1 354 2 
151 1 19 1 196 2 287 2 
29 1 222 1 203 1 283 1 309 1 106 1 
377 1 222 2 203 2 283 1 351 1 367 1 309 1 106 1 177 1 287 1 
16 1 
222 1 203 1 283 1 367 1 309 1 106 1 177 1 287 1 
288 1 377 1 222 3 203 3 283 1 351 1 367 1 309 1 106 1 177 1 287 1 
33 1 287 1 356 1 317 1 
367 1 287 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
207 2 54 1 1 1 262 2 25 1 298 1 121 4 99 1 27 9 323 1 166 9 168 1 270 3 149 1 368 1 194 5 107 2 348 1 218 1 44 2 333 6 175 2 334 1 282 2 68 1 178 1 16 2 182 1 
207 2 54 1 1 1 262 2 25 1 298 1 121 4 99 1 27 9 323 1 166 9 168 1 270 3 149 1 368 1 194 5 107 2 348 1 218 1 44 2 333 6 175 2 334 1 282 2 68 1 178 1 16 2 182 1 
207 2 54 1 1 1 262 2 25 1 298 1 121 5 99 1 27 10 323 1 166 10 168 1 270 4 149 1 368 1 194 6 107 2 348 1 218 1 44 2 333 7 175 2 334 1 282 2 68 1 178 1 16 2 182 1 
207 2 54 1 1 1 262 2 25 1 298 1 121 3 27 7 323 1 166 7 168 1 270 2 149 1 368 1 194 4 107 2 348 1 218 1 44 2 333 4 175 2 334 1 282 2 68 1 178 1 16 1 182 1 
207 1 348 1 262 1 218 1 44 1 333 3 121 2 99 1 175 1 27 4 166 4 270 1 168 1 368 1 16 2 194 3 107 1 182 1 
207 1 54 1 262 1 135 1 218 1 44 1 298 1 27 2 282 1 166 2 168 1 274 1 194 1 371 1 107 1 182 1 
207 2 218 1 121 1 333 1 27 3 282 1 166 3 168 1 270 1 149 1 194 2 107 2 182 1 
207 2 262 1 121 4 99 1 27 9 323 1 166 9 270 3 147 1 168 1 149 1 368 1 194 5 107 2 348 1 218 1 44 1 333 7 334 1 175 1 282 1 112 1 16 2 182 1 
207 2 262 1 121 4 99 1 27 9 323 1 166 9 270 3 147 1 168 1 149 1 368 1 194 5 107 2 348 1 218 1 44 1 333 7 334 1 175 1 282 1 112 1 16 2 182 1 
7 1 165 1 36 1 
67 2 36 1 304 1 
332 2 336 2 174 1 144 2 267 1 37 2 163 2 128 2 
72 1 140 1 209 1 362 1 233 1 144 3 267 1 30 1 58 2 124 1 76 1 128 2 367 2 130 1 307 1 37 3 134 1 153 1 308 2 133 1 219 2 332 2 349 1 281 2 46 1 174 1 311 1 14 1 220 1 222 1 201 1 48 1 17 1 336 2 118 1 260 1 163 2 
332 1 74 1 336 1 174 1 144 1 75 1 64 1 37 1 163 1 128 1 
279 1 144 1 111 1 165 1 190 1 239 1 272 1 61 1 36 1 160 1 243 1 37 1 64 1 163 1 
279 1 332 1 144 1 111 1 165 1 128 1 239 2 272 1 61 1 336 1 36 1 160 2 37 1 64 1 163 1 
239 1 320 1 29 1 160 1 291 1 
239 2 320 1 165 1 145 1 29 1 36 1 160 2 77 1 
239 1 29 1 160 1 
83 1 332 1 74 1 174 1 320 1 144 1 75 1 128 1 239 1 336 1 160 1 64 1 37 1 163 1 
36 1 
239 2 249 1 320 1 165 1 145 1 29 1 36 1 160 2 
41 1 297 1 197 1 280 1 232 2 173 1 340 2 320 2 165 1 145 1 29 2 365 1 239 5 33 2 327 1 131 1 36 1 160 5 295 1 
7 1 267 1 
332 1 88 1 144 2 267 2 128 1 252 1 336 1 37 2 163 2 
354 1 21 1 313 1 
140 1 233 1 281 1 144 1 14 1 267 1 220 1 124 1 58 1 201 1 48 1 118 1 37 1 81 1 260 1 308 1 
332 3 336 3 144 3 267 1 180 1 37 3 128 1 163 3 
332 1 74 1 336 1 144 1 64 1 37 1 163 1 
252 1 332 1 336 1 88 1 144 1 64 1 37 1 163 1 128 1 
53 1 72 1 140 1 209 1 233 1 144 4 267 1 30 1 124 1 58 1 128 2 239 1 367 1 272 1 61 1 130 1 307 1 216 1 37 4 64 1 134 1 133 1 308 1 279 1 219 2 332 3 281 1 46 1 88 1 174 1 311 1 14 1 111 1 220 1 222 1 157 1 201 1 48 1 336 3 118 1 160 1 260 1 180 1 163 3 
332 1 336 1 184 1 144 2 267 1 243 1 37 2 180 1 163 2 
279 1 53 1 332 3 88 1 144 3 111 1 157 1 128 1 239 1 272 1 61 1 336 3 9 1 36 1 160 1 64 1 180 2 37 3 163 3 
332 2 88 1 144 2 128 1 336 2 354 1 21 1 180 1 37 2 163 2 
140 1 281 1 233 1 144 1 14 1 267 1 220 1 124 1 58 1 201 1 48 1 118 1 37 1 260 1 308 1 
164 1 140 1 281 1 233 1 144 1 14 1 267 1 220 1 124 1 58 1 201 1 118 1 37 1 293 1 308 1 
72 2 2 1 209 1 186 1 30 1 167 1 240 1 367 4 130 1 108 1 134 1 309 1 42 1 219 2 46 1 222 1 313 2 15 1 258 1 17 2 354 2 289 1 21 2 359 1 
332 1 336 1 111 1 144 1 301 1 64 1 37 1 163 1 
140 1 332 1 233 1 281 1 14 1 144 2 220 1 124 1 58 1 157 1 201 1 48 1 354 1 336 1 118 1 180 1 37 2 260 1 163 1 308 1 
332 4 184 1 88 1 144 5 267 1 157 1 128 1 285 1 241 1 336 4 243 1 180 2 37 5 163 5 
332 2 74 1 336 2 301 1 144 2 64 1 37 2 163 2 
106 1 125 1 
106 1 125 1 
40 1 57 1 
40 1 57 1 
40 1 57 1 
50 1 106 1 125 1 
50 1 106 1 125 1 
84 1 106 1 125 1 
40 1 263 1 306 1 106 2 57 1 125 2 
50 1 106 1 125 1 
158 1 106 1 125 1 
158 1 106 1 125 1 
158 1 106 1 125 1 
55 1 198 2 300 1 211 1 125 2 212 2 31 2 341 2 239 2 171 1 306 1 227 1 34 1 106 2 288 3 36 1 160 2 161 1 381 2 
142 1 144 2 267 1 212 1 125 1 31 1 341 1 239 1 326 1 106 1 346 1 8 1 37 2 84 1 332 2 287 1 336 2 95 1 94 1 288 1 160 1 161 1 381 1 163 2 
262 1 44 1 175 1 
262 1 135 1 44 1 
246 1 262 3 135 1 175 2 283 1 189 1 
246 1 262 2 78 1 135 1 175 1 283 1 
246 2 262 2 135 1 175 1 283 1 
2 1 3 1 232 1 360 1 340 1 320 4 145 1 165 1 29 1 304 1 239 5 33 1 214 1 327 2 346 1 370 1 35 1 36 2 82 1 42 1 41 3 67 3 199 2 15 1 258 1 94 1 259 2 355 2 95 1 229 1 160 5 295 1 
2 3 360 1 232 2 340 2 320 7 165 1 145 1 29 6 304 3 239 9 33 2 327 6 35 3 36 5 65 1 82 2 42 3 41 8 197 1 67 9 221 5 15 3 257 1 258 3 259 6 355 6 95 4 356 1 229 2 49 1 160 9 358 1 291 5 22 1 295 1 
2 1 3 1 232 1 340 1 320 2 165 1 304 2 239 3 33 1 327 2 370 1 35 1 36 3 82 1 42 1 41 3 197 1 67 4 199 1 15 1 258 1 95 1 355 2 259 2 229 1 160 3 
2 2 232 1 3 1 340 1 320 3 165 1 304 3 239 4 33 1 327 4 370 1 35 2 36 4 82 1 42 2 41 5 67 7 197 1 199 2 15 2 258 2 259 4 355 4 95 2 356 1 229 1 160 4 358 1 22 1 
217 1 233 1 7 1 
253 1 233 1 
347 1 
233 1 14 1 
217 2 169 1 233 3 14 1 201 1 32 1 
233 1 14 1 201 1 
97 1 233 1 
38 1 309 3 109 1 72 3 42 1 245 1 85 1 264 1 2 1 167 2 114 1 367 7 286 1 62 2 17 4 377 1 181 1 
38 1 309 3 109 1 72 3 42 1 245 1 85 1 264 1 2 1 167 2 114 1 367 7 286 1 62 2 17 4 377 1 181 1 
38 1 309 3 109 1 72 3 42 1 85 1 245 1 264 1 2 1 26 1 167 2 114 1 367 7 286 1 62 2 17 4 377 1 181 1 
72 15 264 1 316 1 2 4 209 1 237 3 30 1 303 1 167 5 367 31 62 3 130 1 35 3 38 5 309 10 109 2 85 1 245 2 42 4 219 2 46 1 352 1 89 1 114 2 286 1 15 3 93 1 258 3 17 16 357 1 377 1 179 4 181 2 23 1 
72 4 264 1 2 1 209 2 30 2 167 3 367 9 62 2 130 2 309 4 38 1 109 1 42 1 245 1 85 1 219 4 46 2 284 1 352 1 114 1 286 1 17 5 70 1 181 1 
207 1 262 2 140 1 27 2 58 1 126 1 189 1 238 1 166 2 127 1 129 1 168 1 194 1 79 1 107 1 308 1 135 1 218 1 44 1 333 1 281 1 175 1 350 1 282 1 220 1 376 1 20 1 378 1 380 1 182 1 
207 1 262 2 140 1 27 3 58 1 189 1 126 1 238 1 166 3 129 1 103 1 194 1 276 1 79 1 107 1 308 1 330 1 135 1 218 1 44 1 333 2 281 1 175 1 350 1 282 1 220 1 376 1 20 1 380 1 182 1 
262 2 140 1 27 2 58 1 126 1 189 1 238 1 166 2 129 1 194 1 276 1 79 1 308 1 330 1 135 1 218 1 44 1 333 2 281 1 350 1 175 1 282 1 220 1 380 1 182 1 
207 1 140 1 233 1 100 1 27 1 58 1 124 1 166 1 238 2 129 2 103 1 105 1 63 1 79 2 107 1 308 1 281 1 14 1 220 1 282 2 312 1 314 1 226 1 
207 1 262 2 140 1 27 1 58 1 126 1 189 1 238 1 166 1 127 1 129 1 168 1 79 1 107 1 308 1 330 1 135 1 44 1 281 1 175 1 350 1 282 1 220 1 376 1 20 1 380 1 
329 1 
140 1 232 1 98 4 340 1 233 1 100 1 144 1 56 1 145 3 304 2 58 2 190 1 60 1 239 5 61 1 105 1 150 1 243 1 64 1 308 2 248 2 67 2 14 1 111 1 250 1 254 1 18 1 160 5 205 1 163 1 165 1 28 2 29 6 124 2 322 2 33 1 272 1 327 2 275 1 36 2 80 2 172 1 278 1 37 1 279 1 373 2 41 2 331 2 281 2 220 1 137 2 91 1 229 1 231 1 295 1 
279 1 331 1 98 2 249 1 56 1 111 1 144 1 145 1 29 2 250 1 190 1 60 1 239 3 272 1 254 1 61 1 18 1 160 3 64 1 243 1 37 1 163 1 
98 3 144 1 56 1 165 1 145 1 29 1 190 1 60 1 239 3 272 1 61 1 36 1 37 1 243 1 64 1 279 1 248 1 249 1 111 1 250 1 254 1 18 1 160 3 163 1 
98 3 144 1 56 1 145 1 165 1 29 2 190 1 60 1 239 3 272 1 61 1 36 1 37 1 243 1 64 1 279 1 331 1 248 1 249 1 111 1 250 1 254 1 137 1 18 1 160 3 163 1 
98 6 232 1 340 1 56 1 144 1 145 3 5 1 304 2 190 1 60 1 239 5 61 1 344 1 150 1 64 1 243 1 10 1 248 4 249 1 111 1 250 1 200 1 254 1 18 1 160 5 163 1 165 5 29 7 28 2 322 2 272 1 33 1 327 1 328 1 36 5 80 2 37 1 279 1 373 2 41 1 331 4 137 4 231 1 295 1 
98 4 232 1 340 1 56 1 144 1 145 2 304 2 190 1 60 1 239 4 61 1 150 1 64 1 243 1 67 2 248 2 111 1 250 1 254 1 18 1 160 4 163 1 165 1 28 2 29 4 322 2 272 1 33 1 327 1 80 2 36 2 37 1 172 1 279 1 373 2 41 1 331 2 137 2 231 1 295 1 
232 1 98 4 340 1 144 1 56 1 165 1 145 2 5 1 29 4 28 2 304 2 322 2 190 1 60 1 239 4 272 1 33 1 61 1 150 1 327 1 328 1 36 1 80 2 37 1 243 1 64 1 279 1 373 2 41 1 331 2 248 2 111 1 250 1 200 1 254 1 137 2 18 1 160 4 231 1 163 1 295 1 
232 1 98 4 340 1 144 1 56 1 165 1 145 2 5 1 29 4 28 2 304 2 322 2 190 1 60 1 239 4 272 1 33 1 61 1 150 1 327 1 328 1 36 1 80 2 37 1 243 1 64 1 279 1 373 2 41 1 331 2 248 2 111 1 250 1 200 1 254 1 137 2 18 1 160 4 231 1 163 1 295 1 
232 1 98 4 340 1 144 1 56 1 165 1 145 2 29 4 28 2 321 1 322 2 190 1 305 2 192 1 60 1 239 4 272 1 33 1 61 1 273 2 327 1 328 1 36 1 37 1 243 1 64 1 279 1 244 1 41 1 331 2 248 2 67 2 111 1 250 1 254 1 137 2 18 1 160 4 231 1 163 1 295 1 
232 1 98 5 340 1 144 1 56 1 165 1 145 2 5 1 28 2 29 5 304 2 322 2 190 1 60 1 239 4 33 1 272 1 61 1 150 1 327 1 328 1 36 1 80 2 37 1 243 1 64 1 279 1 373 2 10 1 41 1 331 3 248 3 111 1 200 1 250 1 254 1 137 3 18 1 160 4 231 1 295 1 163 1 
232 1 98 5 340 1 144 1 56 1 165 1 145 2 5 1 28 2 29 5 304 2 322 2 190 1 60 1 239 4 33 1 272 1 61 1 150 1 327 1 328 1 36 1 80 2 37 1 243 1 64 1 279 1 373 2 10 1 41 1 331 3 248 3 111 1 200 1 250 1 254 1 137 3 18 1 160 4 231 1 295 1 163 1 
98 4 232 1 340 1 56 1 144 1 145 2 190 1 192 1 305 2 60 1 239 4 61 1 64 1 243 1 67 2 248 2 111 1 250 1 254 1 18 1 160 4 163 1 165 1 28 2 29 4 322 2 272 1 33 1 273 2 327 1 36 1 37 1 172 1 279 1 41 1 331 2 137 2 231 1 295 1 
72 3 264 1 2 1 209 1 267 2 30 1 167 2 240 1 367 6 62 1 130 1 7 1 134 1 309 2 109 1 85 1 42 1 219 2 46 1 222 1 313 1 286 1 17 3 354 1 21 1 181 1 
315 1 72 6 2 2 209 2 362 1 267 1 237 3 303 1 30 2 167 1 367 14 130 2 35 2 134 2 38 1 309 2 39 1 42 1 247 1 219 4 46 2 311 1 222 1 313 11 92 1 15 2 93 1 258 1 17 8 354 11 179 3 21 4 162 1 
72 1 183 1 140 1 209 1 233 1 362 1 144 2 267 1 58 1 124 1 30 1 367 2 130 1 242 1 81 1 37 2 308 1 134 1 39 1 332 1 219 2 281 1 46 1 14 1 311 1 220 1 222 1 157 1 201 1 48 1 17 1 336 1 202 1 118 1 21 1 260 1 180 1 163 1 
2 3 140 2 233 2 144 3 185 1 58 3 62 1 308 3 309 8 109 1 155 1 311 1 14 2 157 1 313 7 201 2 255 2 15 2 258 2 17 10 354 7 118 2 21 7 260 2 163 1 72 10 264 1 361 1 209 3 362 1 267 2 124 1 30 3 269 2 167 4 366 2 367 20 130 3 35 2 37 3 134 3 133 2 38 4 39 1 330 1 85 1 42 3 219 6 332 1 281 3 87 2 46 3 220 2 222 3 48 2 286 1 336 1 181 1 180 1 
73 1 72 1 140 2 209 2 233 3 362 1 100 1 144 1 58 8 124 2 30 2 76 2 240 1 367 2 325 1 130 2 105 1 37 1 195 1 308 7 134 2 330 1 332 1 219 4 281 8 46 2 311 1 14 2 47 1 220 2 222 2 177 1 225 1 17 1 336 1 337 1 378 1 180 1 163 1 
72 2 2 1 209 1 144 1 30 1 128 1 167 1 367 3 130 1 35 1 37 1 134 1 309 1 39 1 42 1 219 2 332 1 88 1 46 1 222 1 313 1 15 1 258 1 17 1 354 1 336 1 21 1 294 1 163 1 
309 1 38 1 2 1 219 2 209 1 46 1 222 1 30 1 313 1 367 2 240 1 15 1 17 2 354 1 130 1 21 1 108 1 134 1 
309 1 42 1 72 2 219 2 209 1 46 1 186 1 222 1 30 1 313 1 167 1 367 2 240 1 258 1 354 1 130 1 21 1 134 1 
72 2 2 1 209 1 30 1 167 1 240 1 367 4 130 1 35 1 134 1 38 1 309 2 42 1 219 2 46 1 222 1 313 2 15 1 258 1 17 2 354 2 21 2 
309 1 38 1 2 1 219 2 209 1 46 1 222 1 30 1 313 1 367 2 15 1 17 2 354 1 130 1 337 1 21 1 108 1 134 1 
309 1 42 1 72 2 219 2 209 1 46 1 186 1 222 1 30 1 313 1 167 1 367 2 258 1 354 1 130 1 337 1 21 1 134 1 
72 2 2 1 209 1 30 1 167 1 367 4 130 1 35 1 134 1 38 1 309 2 42 1 219 2 46 1 222 1 313 2 15 1 258 1 17 2 354 2 337 1 21 2 
72 2 2 1 209 1 30 1 167 1 367 4 130 1 35 1 134 1 38 1 309 2 42 1 219 2 46 1 222 1 313 2 15 1 258 1 17 2 354 2 21 2 
72 1 140 1 209 1 362 1 233 1 144 1 267 1 58 1 124 1 30 1 367 2 130 1 37 1 133 1 308 1 134 1 219 2 281 1 46 1 14 1 311 1 220 1 222 1 201 1 48 1 17 1 118 1 260 1 
164 1 72 1 140 1 209 1 362 1 233 1 144 1 267 1 58 1 124 1 30 1 367 2 130 1 37 1 308 1 134 1 219 2 281 1 46 1 14 1 311 1 220 1 222 1 201 1 17 1 19 1 118 1 293 1 
72 2 2 1 209 1 30 1 167 1 367 4 130 1 35 1 134 1 38 1 309 2 39 1 42 1 219 2 46 1 222 1 313 2 15 1 258 1 17 2 354 2 21 2 
72 2 2 1 140 1 209 1 233 1 144 1 58 1 30 1 167 1 367 4 130 1 35 1 37 1 133 1 308 1 134 1 309 2 38 1 42 1 219 2 281 1 46 1 14 1 220 1 222 1 313 2 201 1 48 1 15 1 255 1 258 1 17 2 354 2 21 2 118 1 378 1 260 1 
72 1 2 1 209 1 144 1 30 1 128 1 367 3 130 1 35 1 37 1 134 1 309 1 38 1 39 1 42 1 219 2 332 1 88 1 46 1 222 1 156 1 313 1 15 1 258 1 17 2 336 1 354 1 21 1 163 1 
72 10 2 3 209 2 302 1 237 1 303 1 30 2 167 3 367 19 130 2 35 3 132 2 38 3 309 6 42 3 219 4 13 1 46 2 375 1 223 1 284 1 15 3 93 1 258 3 17 9 228 2 338 1 179 2 230 1 379 1 
72 12 2 3 209 3 268 1 302 1 237 2 30 3 303 2 167 2 367 26 6 1 130 3 277 1 35 3 132 4 38 2 309 4 42 2 219 6 46 3 176 1 375 1 223 1 284 1 352 2 15 3 258 2 17 14 228 1 159 1 179 2 71 1 230 2 379 2 
2 5 237 3 302 1 303 3 6 1 62 1 309 8 109 1 11 1 13 1 352 1 15 4 258 4 17 20 159 1 71 1 72 21 264 1 209 3 268 1 30 3 167 4 367 41 130 3 35 4 277 1 132 4 38 4 42 5 85 1 219 6 46 3 176 1 375 1 284 1 223 1 286 1 93 1 228 1 179 4 230 1 379 2 181 1 
72 18 264 1 2 5 209 4 268 1 302 1 237 3 303 3 30 4 167 4 367 38 62 1 6 1 130 4 277 1 35 4 132 4 38 3 309 7 109 1 85 1 42 4 11 1 219 8 13 1 46 4 176 1 375 1 223 1 284 1 352 2 286 1 15 4 93 1 258 3 17 20 228 1 159 1 179 4 71 1 230 1 379 2 181 1 
72 25 264 1 2 8 209 2 268 1 302 1 237 4 303 2 30 2 167 7 367 52 62 1 6 1 130 2 277 1 35 7 132 4 38 7 309 14 109 1 85 1 42 8 247 2 219 4 46 2 176 1 375 1 223 1 284 1 352 1 286 1 15 7 93 2 258 7 17 27 228 1 159 1 179 4 71 1 230 1 379 1 181 1 
341 1 69 1 55 1 306 1 227 1 106 1 212 1 125 1 31 1 381 1 
84 1 326 1 
342 1 341 1 12 1 110 1 106 1 212 1 125 1 31 1 381 1 
55 1 198 1 300 1 211 1 125 1 212 1 31 1 341 1 239 1 306 1 227 1 34 1 106 1 288 2 36 1 160 1 161 1 381 1 
55 1 198 1 300 1 211 1 125 1 212 1 31 1 341 1 239 1 306 1 227 1 34 1 106 1 288 2 36 1 160 1 161 1 381 1 
55 1 198 1 300 1 211 1 125 1 212 1 31 1 341 1 239 1 306 1 227 1 34 1 106 1 288 2 36 1 160 1 161 1 381 1 
263 1 148 1 50 1 
263 1 148 1 50 1 
158 1 234 1 
263 1 158 1 234 1 
287 1 8 1 
142 1 144 2 320 1 267 1 211 1 212 1 125 1 31 1 341 1 239 1 343 1 326 1 106 1 346 1 8 1 37 2 84 1 198 1 332 2 287 1 95 1 94 1 336 2 288 1 160 1 381 1 163 2 
148 1 50 1 
263 1 158 1 234 1 
72 1 140 1 209 1 210 1 233 1 141 1 362 1 4 1 144 2 58 2 30 1 76 2 367 2 193 1 130 1 37 2 195 1 134 1 308 2 39 1 219 2 281 2 46 1 14 1 311 1 220 1 222 1 177 1 224 1 17 1 163 2 
262 2 330 1 135 1 44 1 140 1 281 2 175 1 350 1 363 1 220 1 58 2 123 1 189 1 126 1 251 1 238 1 376 1 378 1 308 2 
96 1 262 2 330 1 135 1 44 1 140 1 281 1 175 1 350 1 220 1 58 1 123 1 189 1 126 1 238 1 376 1 308 1 
140 1 233 1 281 1 100 1 14 1 220 1 124 1 58 1 251 1 238 1 226 1 105 1 51 1 308 1 
262 2 330 1 135 1 44 1 140 1 281 1 175 1 350 1 363 1 220 1 58 1 123 1 189 1 126 1 251 1 238 1 376 1 308 1 
43 1 
41 1 173 1 327 1 7 1 165 1 36 1 365 1 
232 1 340 1 145 1 165 1 29 1 304 1 239 1 33 1 150 1 327 1 80 1 36 2 373 1 41 1 67 1 160 1 295 1 
97 2 2 2 140 3 232 4 339 2 233 10 340 4 145 3 146 1 58 3 304 6 239 5 152 1 308 3 154 2 67 12 14 3 201 3 253 3 15 2 258 2 355 6 259 6 117 1 160 5 120 2 319 2 266 2 165 2 29 5 365 1 124 1 33 4 169 1 272 2 170 1 327 8 35 2 36 8 278 1 217 2 41 9 42 2 86 1 173 1 281 3 87 2 220 4 90 2 229 2 378 1 292 2 52 2 295 4 
2 2 120 1 232 2 340 2 319 2 268 1 145 1 165 2 29 1 237 1 303 1 304 3 239 1 33 2 6 1 327 5 277 1 35 2 36 5 278 1 41 8 42 2 67 6 15 2 258 2 353 1 259 5 355 5 229 1 159 1 179 1 203 1 71 1 160 1 295 2 
2 2 120 1 232 1 74 1 340 1 144 1 319 2 75 1 128 1 239 1 33 1 327 2 64 1 37 1 109 1 83 1 42 1 41 2 332 1 174 1 200 1 286 1 336 1 204 1 160 1 181 1 295 1 163 1 
41 1 232 1 340 1 173 1 165 1 365 1 33 1 327 1 36 1 295 1 
42 2 41 5 2 2 67 10 120 1 87 1 319 2 304 5 15 2 258 2 355 5 259 5 327 5 35 2 36 5 
239 1 165 1 145 1 29 1 36 1 160 1 
119 1 140 2 232 2 233 2 340 2 100 1 145 2 146 2 29 4 58 4 124 2 239 3 33 2 369 1 345 1 105 1 275 1 327 2 278 2 308 4 41 2 197 1 310 1 86 1 281 4 14 2 220 3 201 1 115 1 229 2 160 3 24 1 205 1 295 1 
72 1 140 1 209 1 233 1 144 3 267 1 30 1 58 1 124 1 128 2 367 1 130 1 307 1 37 3 308 1 133 1 134 1 219 2 332 2 281 1 46 1 174 1 311 1 14 1 220 1 222 1 201 1 48 1 336 2 118 1 260 1 163 2 
41 1 67 4 232 1 340 1 165 2 304 2 33 1 62 1 355 2 259 2 327 2 229 1 36 4 278 1 295 1 
341 1 317 1 212 1 
341 1 317 1 212 1 
341 1 55 1 287 1 335 1 212 1 
341 1 317 1 212 1 
341 1 45 1 212 1 
341 1 45 1 212 1 
341 1 45 1 212 1 
341 1 212 1 
106 1 125 1 
38 1 309 3 109 1 42 1 72 4 85 1 264 1 2 1 219 4 209 2 46 2 30 2 352 1 167 2 367 8 286 1 62 1 17 4 130 2 181 1 
309 2 109 1 72 3 85 1 42 1 264 1 2 1 167 2 367 6 286 1 62 1 17 3 7 1 181 1 
309 2 38 1 72 2 42 1 2 1 219 2 209 1 46 1 30 1 191 1 167 1 367 4 15 1 258 1 17 2 130 1 35 1 
38 1 309 2 42 1 72 4 2 1 237 1 303 1 167 1 367 7 15 1 258 1 93 1 17 3 179 2 35 1 
315 1 72 12 264 1 2 3 209 2 237 2 30 2 167 5 367 23 62 1 130 2 35 2 309 9 38 4 109 2 85 1 42 3 247 1 219 4 46 2 136 1 352 2 286 1 15 2 93 1 258 2 17 11 179 2 181 2 
367 1 72 1 179 1 
367 1 17 1 237 1 
38 1 309 3 72 3 42 1 2 1 219 2 209 1 87 1 46 1 30 1 191 1 167 2 367 6 15 1 258 1 17 3 130 1 35 1 
72 6 2 2 209 1 268 1 237 1 303 1 30 1 167 1 367 12 6 1 130 1 277 1 35 2 38 1 309 2 42 2 219 2 46 1 284 1 15 2 258 2 17 6 159 1 179 1 71 1 
309 2 38 1 109 1 42 1 72 3 2 1 167 1 367 6 286 1 17 3 181 1 
38 1 309 2 109 1 85 1 72 2 264 1 219 2 209 1 46 1 136 1 30 1 352 1 167 1 367 3 17 1 130 1 181 1 
309 5 38 2 109 2 72 5 42 2 2 2 219 2 209 1 46 1 30 1 284 1 167 3 367 10 286 1 17 5 130 1 204 1 181 2 
38 1 309 1 2 1 219 2 209 1 46 1 30 1 284 1 367 2 15 1 17 2 130 1 
309 2 38 1 72 2 42 1 2 1 219 2 209 1 46 1 30 1 284 1 167 1 367 4 15 1 258 1 17 2 130 1 35 1 
309 2 38 1 109 1 72 2 219 6 209 3 13 1 46 3 136 1 30 3 284 1 352 1 167 1 367 3 17 1 130 3 181 1 
72 18 264 1 2 5 209 5 237 3 303 1 30 5 191 1 167 7 367 34 62 1 130 5 35 3 38 5 309 12 109 3 85 1 42 5 219 10 13 1 46 5 136 1 284 1 352 2 89 1 286 2 15 3 93 1 258 3 17 16 357 1 179 4 181 3 23 1 
72 4 264 1 2 1 209 1 237 1 303 1 30 1 167 2 367 8 62 1 130 1 309 2 109 1 42 1 85 1 219 2 46 1 284 1 286 1 17 4 159 1 179 1 181 1 
72 5 264 1 2 2 209 2 237 1 303 1 30 2 191 1 167 2 367 11 62 1 130 2 35 1 38 1 309 3 109 1 42 1 85 1 219 4 46 2 284 1 286 1 15 1 93 1 17 6 159 1 179 2 181 1 
72 10 264 1 2 3 209 3 268 1 237 1 303 1 30 3 191 1 167 3 367 19 62 1 6 1 130 3 277 1 35 2 38 1 309 4 109 1 85 1 42 3 219 6 46 3 284 1 352 1 286 1 15 2 258 2 17 9 159 1 179 1 71 1 181 1 
72 7 264 1 2 3 209 3 268 1 237 1 303 1 30 3 191 1 167 3 367 17 62 1 6 1 130 3 277 1 35 2 38 2 309 5 109 1 85 1 42 2 219 6 46 3 284 1 352 1 286 1 15 2 258 1 17 10 159 1 179 1 71 1 181 1 
72 4 264 1 2 1 209 1 237 1 303 1 30 1 167 2 367 8 62 1 130 1 309 2 109 1 42 1 85 1 219 2 46 1 284 1 286 1 17 4 159 1 179 1 181 1 
72 6 2 2 209 1 268 1 237 1 303 1 30 1 167 1 367 12 6 1 130 1 277 1 35 2 38 1 309 2 42 2 219 2 46 1 284 1 15 2 258 2 17 6 159 1 179 1 71 1 
72 8 264 1 2 3 209 4 268 1 237 1 303 1 30 4 191 1 167 3 367 18 62 1 6 1 130 4 277 1 35 2 38 2 309 5 109 1 85 1 42 2 219 8 46 4 284 1 352 2 286 1 15 2 258 1 17 10 159 1 179 1 71 1 181 1 
72 7 2 3 209 4 268 1 237 1 303 1 30 4 167 3 367 16 6 1 130 4 277 1 35 3 38 3 309 6 42 2 219 8 46 4 13 1 284 1 352 2 15 3 258 2 17 9 159 1 179 1 71 1 
309 6 38 3 109 3 72 4 42 1 85 2 264 1 2 1 167 3 367 7 286 1 17 3 181 3 
72 8 264 1 2 3 209 4 268 1 237 1 303 1 30 4 167 3 367 18 62 1 6 1 130 4 277 1 35 2 38 1 309 4 109 1 85 1 42 2 219 8 46 4 13 1 284 1 352 2 286 1 15 2 258 1 17 10 159 1 179 1 71 1 181 1 
184 1 235 1 144 1 267 1 37 1 243 1 163 1 
196 1 66 1 265 1 235 1 184 1 144 1 267 1 351 1 271 1 243 1 37 1 163 1 
140 1 233 1 105 1 281 1 100 1 14 1 7 1 220 1 58 1 124 1 308 1 
332 1 140 1 233 1 281 1 14 1 144 2 267 1 220 1 124 1 58 1 201 1 48 1 336 1 118 1 180 1 37 2 163 1 308 1 
97 1 140 1 233 3 144 2 267 1 146 1 58 1 37 2 64 1 308 1 279 1 332 2 281 1 14 2 111 1 220 1 201 2 48 1 90 1 336 1 118 1 180 1 163 2 
164 1 97 1 140 1 233 3 299 1 144 2 267 1 146 1 58 2 37 2 64 1 308 2 279 1 332 2 281 2 14 2 111 1 220 1 201 2 90 1 336 1 118 1 180 1 163 2 
217 1 97 1 140 1 281 3 233 4 299 1 14 1 143 1 165 1 220 1 146 1 29 1 124 1 187 1 58 3 201 1 90 1 239 2 272 1 253 1 36 1 160 2 308 3 
154 1 217 1 97 1 140 1 281 3 233 4 299 1 14 1 165 1 220 1 146 1 29 1 124 1 58 3 201 1 90 1 239 2 272 1 253 1 36 1 160 2 308 3 
225 1 140 1 281 1 220 1 58 1 308 1 
119 1 330 1 73 1 140 2 281 7 233 3 14 2 47 1 220 3 124 2 58 7 188 1 76 1 201 1 225 1 169 1 325 1 378 1 195 1 24 1 308 6 
2 1 140 1 233 1 144 2 58 1 62 1 193 1 308 1 309 2 109 1 14 1 313 1 201 1 255 1 17 3 354 1 21 1 118 1 260 1 163 1 72 3 264 1 209 2 267 2 30 2 167 2 366 1 367 6 130 2 37 2 133 1 134 2 39 1 85 1 42 1 219 4 332 1 281 1 46 2 220 1 222 2 48 1 286 1 336 1 378 1 180 1 181 1 
232 2 339 1 340 2 233 2 320 1 165 1 145 1 29 2 365 1 124 1 58 1 239 3 33 2 272 1 327 1 36 1 308 1 154 1 217 1 41 1 86 1 173 1 281 1 253 1 160 3 292 1 52 1 295 2 
217 1 140 1 281 2 233 2 14 1 220 2 58 2 201 1 225 1 169 1 170 1 378 1 308 2 
140 1 281 4 233 1 299 1 100 1 14 1 220 1 124 1 58 4 324 1 105 1 378 1 308 4 
119 1 155 1 140 1 281 2 233 1 14 1 220 2 146 1 58 2 201 1 115 1 369 1 24 1 308 2 
262 1 135 1 44 1 140 1 281 1 220 1 58 1 124 1 126 1 308 1 
330 1 140 1 233 1 281 2 14 1 220 1 58 2 378 1 224 1 195 1 308 2 
140 2 281 5 233 3 100 1 14 2 220 2 47 1 146 1 124 1 58 5 324 1 325 1 105 1 378 1 308 4 195 1 
140 2 281 5 233 3 100 1 14 2 220 2 47 1 146 1 364 1 124 1 58 5 324 1 105 1 378 1 308 4 195 1 
164 1 332 1 140 1 233 1 281 1 14 1 144 2 267 1 220 1 124 1 58 1 201 1 336 1 118 1 180 1 37 2 163 1 308 1 
119 1 140 1 281 1 233 1 14 1 220 2 146 1 58 1 188 1 201 1 169 1 24 1 308 1 
372 1 210 1 141 1 4 1 101 1 144 1 290 1 37 1 163 1 
0 1 261 1 372 1 
372 1 101 1 267 1 139 1 290 1 
279 1 372 1 261 1 0 1 53 1 101 2 111 1 320 1 267 1 165 1 239 2 272 1 61 1 151 1 36 1 160 2 290 2 139 2 64 1 
218 1 194 1 7 1 182 1 
207 1 218 1 194 1 27 1 107 1 182 1 166 1 
282 1 27 1 79 1 
207 1 218 1 298 2 122 1 27 3 166 3 59 1 168 1 194 1 107 1 206 1 182 1 
207 1 218 1 16 1 333 1 194 1 27 2 107 1 182 1 166 2 
207 1 348 1 168 1 262 1 44 1 121 1 175 1 194 1 27 1 107 1 166 1 
207 1 168 1 194 1 27 1 107 1 182 1 166 1 
207 1 168 1 218 1 27 1 107 1 182 2 166 1 
207 2 296 1 27 2 166 2 168 1 256 1 194 1 138 1 107 2 182 1 
207 1 218 1 333 2 121 1 334 1 27 3 323 1 166 3 168 1 270 1 194 2 107 1 182 1 
207 1 262 2 374 1 135 1 218 1 44 1 333 1 175 1 27 2 189 1 166 2 168 1 194 1 107 1 182 1 
207 2 218 1 333 2 121 1 99 1 27 4 166 4 168 1 270 1 16 1 194 2 107 2 182 1 
207 1 168 1 218 1 194 1 27 1 107 1 182 1 166 1 
207 1 218 2 298 1 333 2 121 1 122 1 27 4 166 4 59 1 270 1 104 1 194 3 107 1 182 2 
207 1 208 1 218 1 333 1 318 1 27 2 166 2 168 1 147 1 194 1 107 1 182 1 
207 1 218 1 298 2 122 2 27 3 166 3 59 1 168 1 116 1 194 1 107 1 182 1 
102 2 194 2 215 1 236 1 
207 1 168 1 27 1 113 1 107 1 166 1 
207 1 168 1 218 1 333 1 194 1 334 1 27 2 107 1 182 1 166 2 
213 1 
207 1 168 1 218 1 194 1 27 1 107 1 182 1 166 1 
207 1 218 1 333 1 298 1 334 1 27 3 166 3 168 1 194 1 107 1 182 1 
270 1 104 1 121 1 194 1 
194 1 182 1 

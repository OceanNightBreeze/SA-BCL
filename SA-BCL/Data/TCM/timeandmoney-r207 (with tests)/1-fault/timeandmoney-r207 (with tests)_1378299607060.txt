#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
136 2 112 5 321 1 271 1 138 1 31 2 68 4 97 1 327 1 197 1 351 2 243 1 34 1 331 1 244 3 221 9 249 1 12 6 183 1 105 1 338 9 339 2 38 1 257 1 285 1 258 2 60 2 135 2 
136 2 112 5 321 1 271 1 138 1 31 2 68 4 97 1 327 1 197 1 351 2 243 1 34 1 331 1 244 3 221 9 249 1 12 6 183 1 105 1 338 9 38 1 339 2 257 1 285 1 258 2 60 2 135 2 
136 2 112 6 321 1 271 1 138 1 31 2 68 5 97 1 327 1 197 1 351 2 243 1 34 1 331 1 244 4 221 10 249 1 12 7 183 1 105 1 338 10 38 1 339 2 257 1 285 1 258 2 60 2 135 2 
136 2 112 4 321 1 271 1 138 1 31 2 68 3 97 1 327 1 197 1 351 2 243 1 34 1 244 2 221 7 249 1 12 4 183 1 105 1 338 7 38 1 339 1 257 1 285 1 258 2 60 2 135 2 
136 1 221 4 112 3 12 3 183 1 338 4 339 2 138 1 31 1 68 2 327 1 197 1 258 1 34 1 60 1 244 1 331 1 135 1 
109 1 136 1 221 2 112 1 191 1 183 1 105 1 338 2 31 1 216 1 257 1 197 1 351 1 258 1 34 1 135 1 
38 1 136 2 68 1 31 2 221 3 112 2 197 1 12 1 351 1 183 1 34 1 244 1 338 3 
136 2 112 5 138 1 68 4 31 2 97 1 327 1 197 1 351 1 34 1 244 3 331 1 221 9 12 7 183 1 13 1 227 1 338 9 38 1 339 2 285 1 258 1 60 1 135 1 
136 2 112 5 138 1 68 4 31 2 97 1 327 1 197 1 351 1 34 1 244 3 331 1 221 9 12 7 183 1 13 1 227 1 338 9 38 1 339 2 285 1 258 1 60 1 135 1 
371 1 172 1 226 1 
52 2 122 1 226 1 
334 2 369 1 130 2 381 2 121 2 363 1 159 2 270 2 
235 1 85 1 46 1 345 1 346 1 264 1 169 2 92 1 270 3 213 1 239 1 369 1 324 1 323 1 326 2 121 2 33 1 178 2 6 1 332 1 334 2 146 1 103 1 248 1 181 1 372 1 147 2 53 1 250 1 359 1 312 1 130 2 156 2 381 2 134 1 363 1 159 3 
55 1 78 1 334 1 369 1 130 1 381 1 25 1 121 1 159 1 270 1 
371 1 35 1 307 1 319 1 25 1 226 1 28 1 270 1 16 1 95 1 313 1 381 1 58 1 159 1 
371 1 334 1 307 2 319 1 25 1 226 1 270 1 16 2 95 1 130 1 313 1 381 1 121 1 58 1 159 1 
16 1 234 1 307 1 233 1 71 1 
371 1 16 2 234 1 171 1 63 1 307 2 233 1 226 1 
16 1 307 1 233 1 
234 1 334 1 307 1 25 1 270 1 55 1 16 1 78 1 369 1 130 1 381 1 141 1 121 1 159 1 
226 1 
371 1 16 2 234 1 171 1 355 1 307 2 233 1 226 1 
371 1 234 2 307 5 64 1 100 1 222 2 279 1 226 1 280 1 192 1 229 1 16 5 171 1 230 1 370 1 40 2 32 2 233 2 199 1 
172 1 363 1 
334 1 270 2 152 1 130 1 381 2 121 1 363 2 72 1 159 2 
110 1 273 1 202 1 
332 1 85 1 372 1 53 1 92 1 359 1 270 1 239 1 311 1 323 1 326 1 156 1 134 1 363 1 178 1 159 1 
85 1 332 1 262 1 334 1 372 1 53 1 202 1 24 1 92 1 359 1 239 1 270 2 323 1 326 1 156 1 381 1 134 1 121 1 178 1 159 2 
262 1 334 3 130 1 381 3 121 3 363 1 159 3 270 3 
55 1 334 1 381 1 25 1 121 1 159 1 270 1 
334 1 152 1 130 1 381 1 25 1 121 1 72 1 159 1 270 1 
235 1 85 1 262 1 345 1 346 1 264 1 319 1 24 1 25 1 169 2 92 1 168 1 239 1 270 4 369 1 95 1 324 1 323 1 326 1 121 3 33 1 178 1 6 1 332 1 334 3 307 1 181 1 372 1 76 1 147 1 53 1 250 1 359 1 16 1 152 1 312 1 313 1 130 2 156 1 381 3 134 1 58 1 363 1 159 4 
35 1 334 1 262 1 119 1 381 2 121 1 363 1 159 2 270 2 
262 2 334 3 307 1 319 1 76 1 348 1 25 1 24 1 226 1 270 3 16 1 152 1 95 1 130 1 313 1 381 3 121 3 58 1 159 3 
262 1 334 2 110 1 202 1 270 2 152 1 130 1 381 2 121 2 159 2 
332 1 85 1 372 1 53 1 92 1 359 1 270 1 239 1 323 1 326 1 156 1 134 1 363 1 178 1 159 1 
332 1 85 1 372 1 53 1 92 1 359 1 270 1 241 1 326 1 156 1 134 1 363 1 178 1 159 1 44 1 
162 1 110 2 346 1 264 1 169 2 297 1 195 1 196 1 30 1 324 1 173 1 273 2 33 1 6 2 220 1 146 2 181 1 147 4 373 1 202 2 204 1 312 1 341 1 41 1 
334 1 95 1 65 1 381 1 25 1 121 1 159 1 270 1 
261 1 262 2 334 4 24 1 25 1 270 4 152 1 29 1 130 1 381 4 121 4 363 1 159 4 45 1 
55 1 334 2 65 1 381 2 25 1 121 2 159 2 270 2 
379 1 287 1 
379 1 287 1 
154 1 289 1 
154 1 289 1 
154 1 289 1 
292 1 379 1 287 1 
292 1 379 1 287 1 
379 1 287 1 212 1 
310 1 154 1 379 2 287 2 289 1 42 1 
292 1 379 1 287 1 
379 1 287 1 278 1 
379 1 287 1 278 1 
379 1 287 1 278 1 
179 1 210 2 307 2 144 1 201 1 295 2 320 1 11 1 104 2 226 1 252 1 214 2 16 2 310 1 50 3 379 2 287 2 189 1 364 2 
334 2 307 1 210 1 317 1 201 1 104 1 26 1 212 1 270 2 214 1 106 1 16 1 299 1 50 1 175 1 379 1 120 1 381 2 287 1 328 1 121 2 363 1 364 1 159 2 
258 1 60 1 135 1 
216 1 258 1 135 1 
123 1 216 1 125 1 211 1 60 2 135 3 
216 1 125 1 211 1 217 1 60 1 135 2 
216 1 125 1 211 2 60 1 135 2 
234 4 317 1 265 2 26 1 192 1 171 1 297 1 195 1 32 1 328 1 52 3 371 1 220 1 122 1 307 5 356 1 222 1 276 1 226 2 280 2 16 5 229 3 206 1 107 1 256 2 132 2 232 1 40 1 20 1 233 1 41 1 259 1 
234 7 317 4 89 5 114 1 265 6 166 1 192 1 171 1 297 3 195 3 32 2 71 5 52 9 371 1 220 3 122 3 307 9 356 2 100 1 222 2 124 1 276 3 226 5 309 1 281 1 280 6 16 9 229 8 206 1 256 6 188 1 40 2 233 6 41 3 259 2 
234 2 317 1 265 2 195 1 297 1 32 1 371 1 52 4 220 1 122 2 307 3 356 1 222 1 100 1 276 1 226 3 280 2 16 3 229 3 107 1 256 2 132 1 232 1 40 1 41 1 259 1 
234 3 317 2 265 4 114 1 166 1 195 2 297 2 32 1 371 1 52 7 220 2 122 3 307 4 356 1 222 1 100 1 276 2 226 4 281 1 280 4 16 4 229 5 107 1 256 4 132 2 40 1 232 1 41 2 259 1 
172 1 174 1 92 1 
5 1 92 1 
82 1 
85 1 92 1 
85 1 74 1 274 1 174 2 134 1 92 3 
85 1 134 1 92 1 
92 1 161 1 
263 1 0 1 344 1 88 1 146 4 147 7 115 1 15 1 297 1 30 2 140 1 301 2 341 3 41 1 342 1 6 3 43 1 
263 1 0 1 344 1 88 1 146 4 147 7 115 1 15 1 297 1 30 2 140 1 301 2 341 3 41 1 342 1 6 3 43 1 
263 1 0 1 344 1 88 1 146 4 147 7 115 1 368 1 15 1 297 1 30 2 140 1 301 2 341 3 41 1 342 1 6 3 43 1 
263 5 0 2 344 1 1 1 88 2 115 1 296 1 266 3 169 2 195 3 297 4 30 5 324 1 140 2 301 3 354 1 33 1 6 15 220 3 180 4 146 16 276 3 181 1 147 31 15 1 228 1 128 1 361 1 312 1 380 1 341 10 342 1 41 4 43 2 
263 1 0 1 344 1 88 1 111 1 296 1 169 4 297 1 30 3 324 2 140 1 301 2 33 2 6 4 146 5 36 1 181 2 147 9 15 1 312 2 341 4 41 1 342 1 43 1 
260 1 136 1 91 1 112 1 272 1 31 1 326 1 216 1 197 1 351 1 178 1 200 1 34 1 219 1 332 1 221 2 123 1 9 1 126 1 372 1 12 1 183 1 253 1 338 2 155 1 156 1 258 1 158 1 60 1 135 2 
291 1 260 1 136 1 91 1 112 1 237 1 31 1 326 1 216 1 351 1 178 1 200 1 34 1 219 1 332 1 123 1 221 3 336 1 126 1 372 1 12 2 183 1 253 1 338 3 155 1 156 1 258 1 158 1 60 1 135 2 
291 1 260 1 91 1 112 1 326 1 216 1 351 1 178 1 200 1 34 1 332 1 221 2 123 1 336 1 126 1 372 1 12 2 183 1 253 1 338 2 155 1 156 1 258 1 60 1 135 2 
332 1 85 1 86 1 136 1 221 1 275 1 91 2 372 1 148 1 53 1 92 1 237 1 205 1 338 1 253 2 31 1 326 1 108 1 156 1 351 2 198 1 178 1 200 2 
291 1 260 1 136 1 91 1 272 1 31 1 326 1 216 1 197 1 351 1 178 1 200 1 219 1 332 1 221 1 123 1 126 1 372 1 253 1 338 1 155 1 156 1 258 1 158 1 60 1 135 2 
118 1 
85 1 294 1 347 1 92 1 192 1 194 2 95 1 350 2 242 2 353 4 198 1 98 1 99 1 142 2 52 2 8 2 307 5 148 1 53 2 203 2 54 1 16 5 313 1 156 2 58 1 259 1 159 1 319 1 25 1 267 1 28 1 270 1 171 3 215 1 326 2 32 1 178 2 371 1 332 1 35 1 122 2 222 1 372 1 184 1 226 2 374 1 280 2 229 2 378 1 286 1 381 1 40 1 233 6 288 1 290 2 
294 1 319 1 25 1 28 1 270 1 171 1 95 1 215 1 353 2 142 1 35 1 355 1 307 3 54 1 16 3 313 1 381 1 286 1 288 1 233 2 58 1 159 1 
294 1 319 1 25 1 28 1 270 1 171 1 95 1 215 1 353 3 371 1 35 1 355 1 307 3 203 1 226 1 54 1 16 3 313 1 381 1 286 1 233 1 288 1 58 1 159 1 
294 1 319 1 25 1 28 1 270 1 171 1 95 1 215 1 242 1 353 3 142 1 371 1 355 1 35 1 307 3 203 1 226 1 54 1 16 3 313 1 381 1 286 1 288 1 233 2 58 1 159 1 
294 1 236 1 94 1 192 1 194 2 95 1 350 2 242 4 353 6 304 1 99 1 142 4 355 1 307 5 8 2 357 1 203 4 54 1 16 5 313 1 58 1 159 1 319 1 117 1 25 1 28 1 270 1 171 3 215 1 32 1 371 5 35 1 122 2 222 1 226 5 374 1 280 1 229 1 286 1 381 1 40 1 288 1 233 7 290 2 
294 1 347 1 192 1 194 2 95 1 350 2 242 2 353 4 99 1 52 2 142 2 307 4 8 2 203 2 54 1 16 4 313 1 58 1 159 1 319 1 25 1 28 1 270 1 171 2 215 1 32 1 371 1 35 1 122 2 222 1 226 2 374 1 280 1 229 1 381 1 286 1 40 1 288 1 233 4 290 2 
294 1 236 1 319 1 25 1 28 1 270 1 192 1 194 2 171 2 95 1 350 2 215 1 242 2 32 1 353 4 304 1 99 1 371 1 142 2 35 1 122 2 8 2 307 4 222 1 357 1 203 2 226 1 374 1 280 1 54 1 229 1 16 4 313 1 381 1 286 1 40 1 233 4 288 1 58 1 290 2 159 1 
294 1 236 1 319 1 25 1 28 1 270 1 192 1 194 2 171 2 95 1 350 2 215 1 242 2 32 1 353 4 304 1 99 1 371 1 142 2 35 1 122 2 8 2 307 4 222 1 357 1 203 2 226 1 374 1 280 1 54 1 229 1 16 4 313 1 381 1 286 1 40 1 233 4 288 1 58 1 290 2 159 1 
294 1 319 1 25 1 27 1 28 1 270 1 192 1 194 2 171 2 95 1 215 1 96 2 242 2 32 1 353 4 371 1 142 2 245 2 52 2 35 1 307 4 222 1 357 1 203 2 226 1 374 1 375 1 280 1 54 1 229 1 16 4 254 1 313 1 381 1 286 1 40 1 233 4 288 1 58 1 290 2 159 1 
294 1 236 1 319 1 25 1 28 1 192 1 270 1 94 1 194 2 171 2 95 1 350 2 215 1 242 3 32 1 353 5 304 1 99 1 371 1 142 3 35 1 122 2 8 2 307 4 222 1 357 1 203 3 226 1 374 1 280 1 54 1 229 1 16 4 313 1 381 1 286 1 40 1 288 1 233 5 58 1 290 2 159 1 
294 1 236 1 319 1 25 1 28 1 192 1 270 1 94 1 194 2 171 2 95 1 350 2 215 1 242 3 32 1 353 5 304 1 99 1 371 1 142 3 35 1 122 2 8 2 307 4 222 1 357 1 203 3 226 1 374 1 280 1 54 1 229 1 16 4 313 1 381 1 286 1 40 1 288 1 233 5 58 1 290 2 159 1 
294 1 347 1 192 1 194 2 95 1 96 2 242 2 353 4 52 2 245 2 142 2 307 4 203 2 54 1 16 4 313 1 58 1 159 1 319 1 25 1 27 1 28 1 270 1 171 2 215 1 32 1 371 1 35 1 222 1 226 1 374 1 280 1 229 1 381 1 286 1 40 1 288 1 233 4 290 2 
162 1 0 1 344 1 110 1 146 3 264 1 346 1 181 1 147 6 202 1 169 2 15 1 297 1 172 1 30 2 324 1 312 1 301 1 273 1 341 2 363 2 41 1 342 1 33 1 6 3 43 1 
235 1 263 1 47 1 110 4 346 2 264 1 266 3 169 4 240 1 195 2 297 2 30 1 298 1 324 2 273 11 33 2 6 6 218 1 220 1 180 3 103 1 146 8 276 2 181 2 147 14 202 11 228 1 39 1 361 1 312 2 341 2 363 1 41 1 
85 1 235 1 262 1 367 1 110 1 346 1 264 1 24 1 92 1 169 2 239 1 270 2 298 1 323 1 324 1 326 1 121 1 178 1 33 1 6 1 332 1 334 1 103 1 146 1 372 1 181 1 147 2 53 1 359 1 337 1 311 1 312 1 156 1 381 1 134 1 363 1 159 2 209 1 
291 1 235 1 85 2 0 1 344 1 90 2 346 3 92 2 239 2 195 2 297 3 298 1 301 1 6 10 143 1 247 1 103 1 146 10 147 20 53 1 202 7 250 2 359 2 15 1 312 3 362 2 156 3 363 2 159 3 262 1 263 4 110 7 264 3 24 1 169 6 268 1 270 3 30 4 324 3 323 2 326 3 273 7 121 1 178 3 33 3 332 2 334 1 220 2 276 2 181 3 372 2 224 2 381 1 341 8 133 2 134 2 342 1 41 3 43 1 
291 1 235 1 85 2 162 1 262 1 346 2 264 2 92 3 169 4 193 1 270 1 324 2 326 7 352 1 121 1 198 1 178 8 33 2 6 1 332 2 334 1 9 1 103 1 146 1 248 2 372 2 181 2 147 2 53 2 148 1 360 1 283 1 284 1 312 2 156 8 381 1 21 1 208 1 159 1 
110 1 346 1 264 1 169 2 270 1 195 1 297 1 30 1 298 1 324 1 273 1 121 1 33 1 6 2 334 1 220 1 335 1 276 1 146 1 181 1 147 3 202 1 152 1 130 1 312 1 341 1 381 1 41 1 159 1 
263 1 162 1 110 1 146 2 264 1 346 1 181 1 147 2 202 1 204 1 169 2 195 1 297 1 324 1 312 1 341 1 273 1 33 1 
162 1 220 1 110 1 264 1 346 1 181 1 147 2 202 1 169 2 30 1 196 1 324 1 312 1 341 1 273 1 33 1 41 1 6 2 
162 1 263 1 110 2 346 1 264 1 169 2 297 1 195 1 30 1 324 1 273 2 33 1 6 2 220 1 146 2 276 1 181 1 147 4 202 2 312 1 341 2 41 1 
263 1 110 1 146 2 264 1 346 1 181 1 147 2 202 1 204 1 169 2 360 1 195 1 297 1 324 1 312 1 341 1 273 1 33 1 
220 1 110 1 264 1 346 1 181 1 147 2 202 1 169 2 360 1 30 1 196 1 324 1 312 1 341 1 273 1 33 1 41 1 6 2 
263 1 110 2 346 1 264 1 169 2 297 1 195 1 30 1 324 1 273 2 33 1 6 2 220 1 146 2 276 1 181 1 147 4 202 2 360 1 312 1 341 2 41 1 
220 1 263 1 110 2 276 1 146 2 264 1 346 1 181 1 147 4 202 2 169 2 195 1 297 1 30 1 324 1 312 1 341 2 273 2 41 1 33 1 6 2 
85 1 235 1 264 1 346 1 92 1 169 2 239 1 270 1 323 1 324 1 326 1 178 1 33 1 6 1 332 1 146 1 103 1 372 1 181 1 147 2 53 1 250 1 359 1 312 1 156 1 134 1 363 1 159 1 
85 1 235 1 264 1 346 1 92 1 169 2 270 1 241 1 324 1 326 1 178 1 33 1 6 1 332 1 75 1 146 1 103 1 372 1 181 1 147 2 53 1 359 1 312 1 156 1 134 1 363 1 159 1 44 1 
263 1 110 2 346 1 264 1 169 2 297 1 195 1 298 1 30 1 324 1 273 2 33 1 6 2 220 1 146 2 276 1 181 1 147 4 202 2 312 1 341 2 41 1 
85 1 263 1 110 2 90 1 264 1 346 1 92 1 169 2 239 1 270 1 297 1 195 1 30 1 323 1 324 1 326 1 273 2 178 1 33 1 6 2 332 1 220 1 9 1 146 2 276 1 372 1 181 1 147 4 202 2 250 1 359 1 312 1 156 1 341 2 134 1 41 1 159 1 
263 1 110 1 346 1 264 1 169 2 270 1 195 1 297 1 298 1 324 1 273 1 121 1 33 1 6 1 220 1 334 1 276 1 146 2 181 1 147 3 202 1 152 1 130 1 312 1 341 1 381 1 207 1 41 1 159 1 
62 1 263 3 111 1 266 1 169 4 67 1 195 3 297 3 30 3 324 2 4 2 33 2 6 10 51 1 333 2 220 3 180 2 145 1 146 9 276 3 181 2 147 19 228 1 361 1 80 1 312 2 18 1 341 6 41 3 190 1 
263 2 111 1 296 2 266 2 169 6 67 1 195 3 297 3 30 2 324 3 4 1 33 3 6 12 51 1 333 4 220 2 246 1 180 2 10 1 145 2 146 14 276 3 181 3 147 26 228 2 255 1 282 1 80 2 312 3 17 1 18 1 341 4 41 2 84 1 
263 4 0 1 344 1 111 1 164 1 296 1 266 3 169 6 67 1 195 4 297 5 30 4 324 3 301 1 4 1 33 3 6 21 51 1 333 4 220 4 246 1 180 4 10 1 145 1 146 20 276 4 181 3 147 41 15 1 228 3 255 1 282 1 361 1 17 1 80 2 312 3 18 1 341 8 342 1 41 5 43 1 190 1 84 1 
263 3 0 1 344 1 111 1 164 1 296 2 266 3 169 8 67 1 195 4 297 5 30 4 324 4 301 1 4 1 33 4 6 18 51 1 333 4 220 3 246 1 180 4 10 1 145 1 146 20 276 4 181 4 147 38 15 1 228 3 255 1 282 1 361 1 17 1 80 2 312 4 18 1 341 7 342 1 41 4 43 1 190 1 84 1 
263 7 0 1 344 1 111 1 296 1 266 4 169 4 67 1 240 2 195 7 297 8 30 7 324 2 301 1 4 1 33 2 6 25 51 1 333 4 220 7 246 1 180 4 10 1 145 1 146 27 276 7 181 2 147 52 15 1 228 2 255 1 282 1 361 2 17 1 80 1 312 2 18 1 341 14 342 1 41 8 43 1 84 1 
170 1 310 1 210 1 144 1 379 1 287 1 104 1 364 1 252 1 214 1 
299 1 212 1 
210 1 379 1 48 1 287 1 104 1 59 1 364 1 160 1 214 1 
179 1 307 1 210 1 144 1 201 1 295 1 11 1 104 1 226 1 252 1 214 1 16 1 310 1 50 2 379 1 287 1 189 1 364 1 
179 1 307 1 210 1 144 1 201 1 295 1 11 1 104 1 226 1 252 1 214 1 16 1 310 1 50 2 379 1 287 1 189 1 364 1 
179 1 307 1 210 1 144 1 201 1 295 1 11 1 104 1 226 1 252 1 214 1 16 1 310 1 50 2 379 1 287 1 189 1 364 1 
292 1 187 1 42 1 
292 1 187 1 42 1 
61 1 278 1 
61 1 278 1 42 1 
106 1 120 1 
234 1 210 1 295 1 317 1 26 1 212 1 270 2 214 1 50 1 299 1 175 1 120 1 328 1 121 2 334 2 307 1 11 1 104 1 16 1 106 1 129 1 379 1 287 1 381 2 363 1 364 1 159 2 
292 1 187 1 
61 1 278 1 42 1 
85 1 235 1 346 1 264 1 2 1 92 1 169 2 270 2 298 1 324 1 326 2 300 1 176 1 352 1 177 1 178 2 33 1 6 1 332 1 103 1 146 1 248 2 372 1 181 1 147 2 312 1 156 2 157 1 381 2 208 1 159 2 
332 1 291 1 123 1 9 1 372 1 126 1 185 1 93 1 216 1 326 2 155 1 156 2 258 1 178 2 83 1 200 1 158 1 60 1 135 2 
291 1 332 1 315 1 123 1 126 1 372 1 185 1 216 1 326 1 155 1 156 1 258 1 178 1 200 1 158 1 60 1 135 2 
332 1 85 1 275 1 372 1 53 1 148 1 92 1 93 1 376 1 326 1 156 1 198 1 178 1 200 1 
291 1 332 1 123 1 372 1 126 1 185 1 93 1 216 1 326 1 155 1 156 1 258 1 178 1 83 1 200 1 158 1 60 1 135 2 
23 1 
229 1 371 1 172 1 279 1 226 1 199 1 280 1 
192 1 171 1 350 1 32 1 99 1 52 1 371 1 122 1 8 1 307 1 222 1 226 2 280 1 229 1 16 1 40 1 233 1 
85 3 92 10 3 1 192 4 195 2 297 2 5 3 199 1 306 2 52 12 307 5 9 1 53 1 150 2 16 5 256 6 156 3 259 2 161 2 316 1 319 2 165 1 116 2 265 6 167 1 171 3 325 2 326 3 174 2 32 4 178 3 371 2 332 3 73 1 220 2 122 6 274 1 222 4 276 2 372 4 224 2 279 1 184 1 77 2 226 8 280 8 229 9 377 2 231 2 40 4 81 2 233 5 134 3 41 2 
137 1 116 2 265 5 266 1 192 2 171 1 195 2 297 2 32 2 52 6 371 2 220 2 307 1 180 1 122 3 222 2 10 1 276 2 127 1 184 1 226 5 280 5 16 1 229 8 228 1 255 1 282 1 377 1 256 5 17 1 40 2 233 1 259 1 41 2 84 1 
0 1 236 1 116 2 25 1 269 1 270 1 192 1 369 1 297 2 32 1 141 1 121 1 334 1 307 1 222 1 280 2 55 1 16 1 229 2 78 1 377 1 130 1 381 1 40 1 342 1 41 1 43 1 159 1 
371 1 222 1 279 1 226 1 192 1 280 1 229 1 40 1 32 1 199 1 
52 10 220 2 122 5 276 2 224 1 116 2 265 5 226 5 280 5 229 5 195 2 297 2 377 1 256 5 41 2 
371 1 16 1 171 1 307 1 233 1 226 1 
85 1 366 1 316 1 167 2 92 1 267 1 192 1 171 2 326 4 302 1 32 2 198 1 178 4 332 1 307 3 100 1 222 2 372 1 53 2 148 1 184 2 280 2 229 2 16 3 378 1 156 4 40 2 233 4 259 2 
235 1 85 1 345 1 264 1 346 1 169 2 92 1 270 3 239 1 369 1 324 1 323 1 326 1 121 2 33 1 178 1 6 1 332 1 334 2 181 1 372 1 147 1 53 1 250 1 359 1 130 2 312 1 156 1 381 2 134 1 363 1 159 3 
52 4 371 2 122 2 222 1 265 2 184 1 226 4 280 2 192 1 229 1 256 2 301 1 40 1 32 1 259 1 
210 1 329 1 214 1 
210 1 329 1 214 1 
210 1 144 1 79 1 120 1 214 1 
210 1 329 1 214 1 
210 1 382 1 214 1 
210 1 382 1 214 1 
210 1 382 1 214 1 
210 1 214 1 
379 1 287 1 
263 1 0 1 344 1 146 4 181 2 147 8 296 1 169 4 15 1 297 1 30 2 324 2 312 2 301 1 341 3 41 1 342 1 33 2 6 4 43 1 
0 1 344 1 146 3 147 6 15 1 172 1 297 1 30 2 301 1 341 2 342 1 41 1 6 3 43 1 
220 1 263 1 276 1 146 2 181 1 147 4 169 2 195 1 297 1 30 1 322 1 324 1 312 1 341 2 41 1 33 1 6 2 
220 1 263 1 180 2 146 3 276 1 147 7 266 1 228 1 195 1 297 1 30 1 361 1 341 2 41 1 6 4 
263 4 0 2 344 1 47 1 296 2 266 2 169 4 240 1 297 3 195 2 30 5 324 2 301 1 33 2 6 12 305 1 220 2 180 2 276 2 146 11 181 2 147 23 15 1 361 1 312 2 341 9 342 1 41 3 43 2 
180 1 147 1 6 1 
146 1 147 1 266 1 
263 1 220 1 276 1 146 3 181 1 224 1 147 6 169 2 195 1 297 1 322 1 30 2 324 1 312 1 341 3 33 1 41 1 6 3 
263 1 111 1 266 1 169 2 195 2 297 2 30 1 324 1 33 1 6 6 220 2 180 1 10 1 146 6 276 2 181 1 147 12 228 1 282 1 255 1 17 1 312 1 341 2 41 2 84 1 
263 1 0 1 146 3 147 6 297 1 30 1 341 2 342 1 41 1 6 3 43 1 
263 1 0 1 344 1 146 1 181 1 147 3 296 1 169 2 15 1 30 1 324 1 312 1 341 2 33 1 43 1 6 2 305 1 
263 2 0 2 111 1 146 5 181 1 147 10 169 2 269 1 297 2 30 3 324 1 312 1 341 5 33 1 342 1 41 2 43 2 6 5 
263 1 111 1 146 2 181 1 147 2 169 2 195 1 297 1 324 1 312 1 341 1 33 1 
220 1 263 1 111 1 276 1 146 2 181 1 147 4 169 2 195 1 297 1 30 1 324 1 312 1 341 2 41 1 33 1 6 2 
263 1 0 1 111 1 146 1 181 3 147 3 296 1 169 6 30 1 324 3 312 3 341 2 33 3 6 2 43 1 305 1 190 1 
263 5 0 3 344 1 111 1 296 2 266 3 169 10 195 3 297 5 322 1 30 7 324 5 301 1 354 1 33 5 6 18 305 1 220 3 180 4 146 16 276 3 181 5 147 34 15 1 228 1 128 1 361 1 312 5 380 1 341 12 342 2 41 5 43 3 190 1 
0 1 344 1 111 1 266 1 169 2 297 1 30 2 324 1 301 1 33 1 6 4 180 1 146 4 181 1 147 8 15 1 228 1 17 1 312 1 341 2 41 1 342 1 43 1 
263 1 0 1 344 1 111 1 266 1 169 4 195 1 297 2 30 2 322 1 324 2 301 1 33 2 6 5 180 2 146 6 276 1 181 2 147 11 15 1 228 1 361 1 17 1 312 2 341 3 41 1 342 1 43 1 
263 1 0 1 344 1 111 1 296 1 266 1 169 6 195 2 297 3 322 1 30 3 324 3 301 1 33 3 6 10 220 2 180 1 10 1 146 9 276 2 181 3 147 19 15 1 228 1 282 1 255 1 17 1 312 3 341 4 342 1 41 3 43 1 84 1 
263 2 0 1 344 1 111 1 296 1 266 1 169 6 195 2 297 3 322 1 30 3 324 3 301 1 33 3 6 7 220 1 180 1 10 1 146 10 276 2 181 3 147 17 15 1 228 1 282 1 255 1 17 1 312 3 341 5 342 1 41 2 43 1 84 1 
0 1 344 1 111 1 266 1 169 2 297 1 30 2 324 1 301 1 33 1 6 4 180 1 146 4 181 1 147 8 15 1 228 1 17 1 312 1 341 2 41 1 342 1 43 1 
263 1 111 1 266 1 169 2 195 2 297 2 30 1 324 1 33 1 6 6 220 2 180 1 10 1 146 6 276 2 181 1 147 12 228 1 282 1 255 1 17 1 312 1 341 2 41 2 84 1 
263 2 0 1 344 1 111 1 296 2 266 1 169 8 195 2 297 3 322 1 30 3 324 4 301 1 33 4 6 8 220 1 180 1 10 1 146 10 276 2 181 4 147 18 15 1 228 1 255 1 282 1 17 1 312 4 341 5 342 1 41 2 43 1 84 1 
263 3 111 1 296 2 266 1 169 8 195 3 297 3 30 3 324 4 33 4 6 7 220 2 180 1 10 1 146 9 276 3 181 4 147 16 228 1 255 1 282 1 17 1 312 4 341 6 41 2 190 1 84 1 
263 3 0 3 344 1 146 3 147 7 15 2 297 1 30 3 341 6 41 1 342 1 6 4 43 3 
263 1 0 1 344 1 111 1 296 2 266 1 169 8 195 2 297 3 30 3 324 4 301 1 33 4 6 8 220 1 180 1 10 1 146 10 276 2 181 4 147 18 15 1 228 1 255 1 282 1 17 1 312 4 341 4 342 1 41 2 43 1 190 1 84 1 
35 1 119 1 70 1 381 1 363 1 159 1 270 1 
35 1 358 1 149 1 270 1 153 1 340 1 119 1 70 1 381 1 303 1 363 1 159 1 
332 1 85 1 172 1 326 1 372 1 156 1 148 1 53 1 198 1 178 1 92 1 
85 1 332 1 262 1 334 1 372 1 53 1 92 1 359 1 270 2 239 1 326 1 156 1 381 1 134 1 121 1 363 1 178 1 159 2 
85 2 262 1 25 1 167 1 92 3 239 1 270 2 95 1 326 1 121 1 178 1 332 1 334 2 372 1 359 1 156 1 381 2 81 1 134 2 58 1 363 1 159 2 161 1 
85 2 262 1 25 1 167 1 92 3 238 1 270 2 95 1 241 1 326 2 121 1 178 2 332 1 334 2 372 1 359 1 156 2 381 2 81 1 134 2 58 1 363 1 159 2 161 1 
371 1 85 1 332 1 307 2 318 1 319 1 372 1 53 1 226 1 167 1 92 4 238 1 16 2 186 1 326 3 174 1 156 3 81 1 5 1 233 1 134 1 178 3 161 1 
371 1 85 1 332 1 307 2 319 1 372 1 53 1 226 1 167 1 92 4 238 1 16 2 326 3 174 1 156 3 231 1 81 1 5 1 233 1 134 1 178 3 161 1 
332 1 326 1 372 1 156 1 21 1 178 1 
291 1 85 2 332 2 274 1 9 1 248 1 102 1 372 3 277 1 53 2 92 3 193 1 283 1 326 6 284 1 156 7 352 1 21 1 134 1 330 1 178 7 
85 1 0 1 344 1 90 1 346 2 92 1 239 1 297 1 298 1 300 1 301 1 6 3 9 1 146 3 147 6 202 1 250 1 359 1 15 1 362 1 312 2 156 1 363 2 159 2 262 1 110 1 264 2 169 4 270 2 30 2 323 1 324 2 326 1 273 1 121 1 178 1 33 2 332 1 334 1 181 2 372 1 381 1 341 2 134 1 342 1 41 1 43 1 
234 1 316 1 319 1 92 2 192 2 171 1 326 1 325 1 174 1 32 2 5 1 199 1 178 1 306 1 371 1 307 3 222 2 53 1 279 1 226 1 280 1 150 1 229 1 16 3 156 1 231 1 40 2 233 2 
73 1 85 1 332 1 274 1 9 1 372 2 92 2 174 1 326 2 156 2 21 1 134 1 178 2 
85 1 332 1 163 1 9 1 372 1 53 1 148 1 92 1 238 1 326 4 156 4 198 1 178 4 
85 1 332 1 87 1 247 1 372 2 277 1 167 1 49 1 92 1 326 2 156 2 134 1 330 1 178 2 
332 1 216 1 326 1 155 1 372 1 156 1 53 1 258 1 178 1 135 1 
291 1 85 1 332 1 9 1 372 1 92 1 326 2 156 2 176 1 352 1 178 2 
85 2 332 2 163 1 9 1 372 2 148 1 53 1 167 1 92 3 283 1 326 4 284 1 156 5 352 1 198 1 178 5 
85 2 332 2 163 1 9 1 372 2 148 1 53 1 167 1 92 3 326 4 284 1 156 5 19 1 352 1 198 1 178 5 
85 1 332 1 262 1 334 1 372 1 53 1 92 1 359 1 270 2 241 1 326 1 156 1 381 1 134 1 121 1 363 1 178 1 159 2 
85 1 332 1 274 1 102 1 372 2 277 1 167 1 92 1 326 1 156 1 134 1 330 1 178 1 
22 1 56 1 293 1 363 1 365 1 
371 1 234 1 22 2 307 2 293 2 319 1 113 1 76 1 66 1 25 1 37 1 226 1 16 2 95 1 56 2 313 1 58 1 363 1 365 1 
22 1 293 1 2 1 270 1 157 1 381 1 177 1 159 1 365 1 
113 1 37 1 365 1 
172 1 112 1 183 1 34 1 
136 1 31 1 221 1 112 1 183 1 34 1 338 1 
351 1 253 1 338 1 
136 1 221 3 101 1 112 1 105 2 183 1 338 3 57 1 31 1 139 1 197 1 34 1 
339 1 136 1 31 1 221 2 112 1 12 1 183 1 34 1 338 2 
138 1 136 1 68 1 31 1 221 1 112 1 197 1 258 1 60 1 135 1 338 1 
136 1 31 1 221 1 112 1 197 1 34 1 338 1 
136 1 31 1 221 1 197 1 183 1 34 2 338 1 
343 1 136 2 31 2 221 2 112 1 197 1 182 1 14 1 34 1 338 2 
136 1 68 1 31 1 221 3 97 1 112 2 285 1 197 1 12 2 183 1 34 1 244 1 338 3 
136 1 221 2 123 1 112 1 12 1 183 1 251 1 338 2 31 1 216 1 197 1 258 1 34 1 60 1 135 2 
339 1 136 2 68 1 31 2 221 4 112 2 197 1 12 2 183 1 34 1 244 1 331 1 338 4 
136 1 31 1 221 1 112 1 197 1 183 1 34 1 338 1 
136 1 221 4 101 1 112 3 349 1 12 2 105 1 183 2 338 4 31 1 68 1 139 1 34 2 244 1 
136 1 221 2 308 1 112 1 12 1 183 1 227 1 338 2 151 1 31 1 197 1 34 1 
136 1 221 3 101 1 112 1 223 1 105 2 183 1 338 3 31 1 139 2 197 1 34 1 
112 2 131 1 225 1 314 2 
7 1 136 1 31 1 221 1 197 1 338 1 
136 1 31 1 221 2 112 1 285 1 197 1 12 1 183 1 34 1 338 2 
69 1 
136 1 31 1 221 1 112 1 197 1 183 1 34 1 338 1 
136 1 31 1 221 3 285 1 112 1 197 1 12 1 183 1 105 1 34 1 338 3 
68 1 112 1 349 1 244 1 
112 1 34 1 

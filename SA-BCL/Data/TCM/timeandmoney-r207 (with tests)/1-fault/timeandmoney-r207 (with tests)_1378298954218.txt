#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (205,326) (205,326) 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 18 330 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 319 147 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 287 354 12 357 172 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 287 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 287 354 12 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 287 354 12 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 287 354 12 357 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 287 354 12 357 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 93 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 217 (64,86) 110 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 268 362 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (205,326) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 319 147 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (205,326) (205,326) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
98 1 249 1 353 1 324 3 29 1 282 2 329 1 259 1 36 1 55 1 81 2 338 2 10 1 305 1 189 2 288 6 289 9 16 1 68 2 344 4 195 9 73 2 154 5 174 1 296 1 46 1 318 2 347 1 
98 1 249 1 353 1 324 3 29 1 282 2 329 1 259 1 36 1 55 1 81 2 338 2 10 1 305 1 288 6 189 2 289 9 16 1 68 2 344 4 195 9 73 2 154 5 174 1 296 1 46 1 318 2 347 1 
98 1 249 1 353 1 324 4 29 1 282 2 329 1 259 1 36 1 55 1 81 2 338 2 10 1 305 1 288 7 189 2 289 10 16 1 68 2 344 5 195 10 73 2 154 6 174 1 296 1 46 1 318 2 347 1 
98 1 249 1 353 1 324 2 29 1 282 2 329 1 259 1 55 1 81 2 338 2 10 1 305 1 288 4 189 1 289 7 16 1 68 2 344 3 195 7 73 2 154 4 174 1 296 1 46 1 318 2 347 1 
189 2 288 3 289 4 353 1 324 1 16 1 68 1 282 1 344 2 73 1 195 4 36 1 55 1 154 3 81 1 46 1 174 1 318 1 
98 1 338 1 289 2 353 1 16 1 329 1 282 1 71 1 345 1 195 2 73 1 154 1 46 1 81 1 318 1 8 1 
338 1 344 1 282 2 305 1 288 1 289 3 195 3 154 2 46 1 353 1 318 2 324 1 16 1 
338 1 305 1 189 2 213 1 288 7 249 1 289 9 353 1 281 1 324 3 29 1 16 1 68 1 282 2 344 4 73 1 195 9 36 1 55 1 154 5 81 1 174 1 46 1 318 2 
338 1 305 1 189 2 213 1 288 7 249 1 289 9 353 1 281 1 324 3 29 1 16 1 68 1 282 2 344 4 73 1 195 9 36 1 55 1 154 5 81 1 174 1 46 1 318 2 
93 1 101 1 146 1 
263 2 146 1 107 1 
226 1 70 2 332 2 5 2 209 1 79 2 286 2 200 2 
137 2 226 1 100 1 248 1 250 1 50 1 252 1 280 1 79 3 228 1 3 2 200 2 201 1 301 1 229 1 331 1 257 1 332 3 162 2 5 2 260 1 209 1 126 1 261 1 286 2 65 1 308 2 363 1 313 2 70 2 152 1 238 1 273 1 115 1 155 1 348 1 48 1 
226 1 70 1 332 1 266 1 5 1 283 1 79 1 109 1 286 1 200 1 
211 1 277 1 101 1 167 1 216 1 79 1 254 1 332 1 54 1 208 1 146 1 109 1 286 1 74 1 
211 2 277 1 101 1 167 1 216 2 79 1 200 1 70 1 332 1 54 1 5 1 146 1 109 1 286 1 74 1 
63 1 211 1 23 1 216 1 97 1 
85 1 211 2 101 1 23 1 146 1 216 2 97 1 150 1 
211 1 216 1 97 1 
226 1 211 1 266 1 216 1 79 1 200 1 70 1 332 1 23 1 56 1 283 1 5 1 109 1 286 1 
146 1 
211 2 101 1 198 1 23 1 146 1 216 2 97 1 150 1 
211 5 131 1 101 1 216 5 322 1 150 1 326 1 205 1 32 2 365 1 145 1 23 2 6 2 125 1 146 1 60 1 97 2 244 2 84 1 
137 1 250 1 26 1 133 1 228 1 79 2 3 1 363 1 200 1 313 1 70 1 238 1 152 1 332 2 80 1 260 1 115 1 126 1 261 1 286 1 
93 1 209 1 
112 1 79 2 200 1 70 1 332 2 5 1 333 1 209 2 286 2 
52 1 133 1 223 1 
137 1 250 1 27 1 79 1 228 1 3 1 363 1 313 1 152 1 238 1 332 1 260 1 115 1 209 1 126 1 261 1 
70 3 332 3 80 1 5 1 209 1 79 3 286 3 200 3 
70 1 332 1 266 1 79 1 109 1 286 1 200 1 
70 1 332 1 112 1 5 1 333 1 79 1 109 1 286 1 200 1 
137 1 226 1 100 1 248 1 277 1 250 1 50 1 26 1 280 1 228 1 79 4 3 1 200 3 201 1 229 1 331 1 257 1 332 4 54 1 80 1 162 1 260 1 5 2 209 1 126 1 261 1 109 1 232 1 286 3 211 1 65 1 112 1 167 1 308 2 216 1 363 1 313 1 70 3 238 1 152 1 115 1 243 1 48 1 74 1 
70 1 332 2 122 1 80 1 208 1 209 1 79 2 286 2 200 1 
211 1 2 1 277 1 112 1 167 1 26 1 216 1 79 3 200 3 70 3 332 3 80 2 54 1 5 1 146 1 109 1 286 3 232 1 74 1 
112 1 52 1 133 1 79 2 200 2 70 2 332 2 80 1 5 1 286 2 
137 1 250 1 79 1 228 1 3 1 363 1 313 1 152 1 238 1 332 1 260 1 115 1 209 1 126 1 261 1 
137 1 250 1 79 1 228 1 3 1 31 1 363 1 313 1 238 1 332 1 58 1 115 1 209 1 126 1 261 1 
76 1 248 1 100 2 50 1 251 1 51 1 280 1 52 2 28 1 201 1 328 1 185 1 229 1 257 1 162 4 337 1 308 2 133 2 220 1 17 1 136 1 173 1 223 2 348 2 
70 1 332 1 41 1 79 1 109 1 74 1 286 1 200 1 
276 1 112 1 26 1 79 5 200 4 70 4 135 1 332 5 122 1 80 2 208 1 5 1 209 1 286 5 
70 2 332 2 266 1 41 1 79 2 109 1 286 2 200 2 
53 1 106 1 
53 1 106 1 
132 1 297 1 
132 1 297 1 
132 1 297 1 
53 1 106 1 39 1 
53 1 106 1 39 1 
53 1 106 1 102 1 
53 2 366 1 132 1 106 2 231 1 297 1 
53 1 106 1 39 1 
53 1 316 1 106 1 
53 1 316 1 106 1 
53 1 316 1 106 1 
178 2 9 1 211 2 25 3 216 2 170 2 53 2 203 2 104 1 258 2 366 1 163 2 82 1 106 2 146 1 346 1 175 1 320 1 96 1 
176 1 25 1 79 2 102 1 200 2 53 1 203 1 258 1 332 2 163 1 106 1 209 1 59 1 286 2 127 1 211 1 264 1 216 1 170 1 113 1 237 1 70 2 72 1 96 1 
68 1 73 1 81 1 
73 1 81 1 8 1 
246 1 68 2 45 1 81 3 274 1 8 1 
68 1 45 1 81 2 274 1 309 1 8 1 
68 1 45 2 81 2 274 1 8 1 
88 1 211 4 101 1 190 1 216 4 150 1 193 1 32 1 18 1 242 1 365 1 23 3 6 1 125 1 284 1 146 1 97 1 244 1 
157 1 211 4 63 1 101 1 78 1 190 1 216 4 150 1 32 1 18 1 365 1 6 1 23 3 125 1 284 1 146 1 97 2 244 1 275 1 
211 2 88 1 216 2 32 1 18 1 242 1 145 1 6 1 23 1 125 1 284 1 244 1 
88 1 211 1 216 1 330 1 32 1 18 1 242 1 145 1 6 1 125 1 284 1 244 1 
93 1 57 1 261 1 
21 1 261 1 
210 1 
126 1 261 1 
171 1 306 1 57 2 126 1 261 3 363 1 
126 1 261 1 363 1 
261 1 38 1 
128 1 100 3 307 1 197 1 118 1 251 2 342 2 28 1 17 3 327 1 328 1 221 1 105 1 134 1 121 1 162 7 348 4 
128 1 100 3 307 1 197 1 118 1 251 2 342 2 28 1 17 3 327 1 328 1 221 1 105 1 134 1 121 1 162 7 348 4 
128 1 100 3 307 1 197 1 118 1 119 1 251 2 342 2 28 1 17 3 327 1 328 1 221 1 105 1 134 1 121 1 162 7 348 4 
197 1 248 1 100 15 118 2 50 1 251 5 51 3 280 1 28 4 183 1 184 3 327 2 328 4 105 1 206 3 121 2 257 1 302 1 162 31 128 1 307 1 308 2 290 4 67 1 342 3 268 1 17 10 219 1 221 5 134 2 136 3 241 1 156 1 348 16 
128 1 307 1 197 1 100 4 248 2 118 1 251 3 50 2 308 4 280 2 342 2 28 1 219 1 17 4 327 1 328 1 221 1 134 1 207 1 121 1 257 2 162 9 348 5 47 1 
137 1 298 1 246 1 353 1 352 1 228 1 3 1 325 1 282 1 33 1 81 2 8 1 338 1 111 1 288 1 289 2 15 1 14 1 90 1 16 1 313 1 68 1 151 1 238 1 73 1 195 2 154 1 46 1 318 1 368 1 
246 1 137 1 298 1 353 1 352 1 228 1 3 1 204 1 282 1 33 1 256 1 35 1 81 2 8 1 338 1 111 1 288 2 289 3 15 1 14 1 90 1 16 1 313 1 68 1 151 1 238 1 73 1 195 3 154 1 318 1 
137 1 298 1 246 1 353 1 352 1 228 1 3 1 204 1 33 1 256 1 81 2 8 1 338 1 288 2 289 2 15 1 14 1 90 1 16 1 313 1 68 1 238 1 195 2 73 1 154 1 
137 1 338 2 89 1 77 1 289 1 250 1 15 2 352 2 215 1 228 1 140 1 310 1 3 1 313 1 282 1 271 1 33 2 238 1 35 1 195 1 318 1 126 1 261 1 
137 1 298 1 246 1 352 1 228 1 3 1 282 1 33 1 256 1 81 2 8 1 338 1 111 1 289 1 15 1 14 1 90 1 313 1 68 1 151 1 238 1 73 1 195 1 46 1 318 1 368 1 
187 1 
137 1 211 1 250 1 216 1 3 1 313 1 32 1 365 1 6 1 125 1 284 1 319 1 147 1 244 1 
62 1 211 3 11 1 277 1 198 1 167 1 179 1 227 1 216 3 79 1 150 1 254 1 4 2 332 1 54 1 208 1 230 1 97 2 108 1 109 1 74 1 286 1 
277 1 179 1 101 1 198 1 227 1 79 1 254 1 4 3 332 1 54 1 208 1 146 1 230 1 108 1 109 1 286 1 211 3 11 1 167 1 216 3 150 1 22 1 97 1 74 1 
277 1 198 1 179 1 101 1 227 1 79 1 141 1 254 1 4 3 332 1 54 1 208 1 146 1 230 1 108 1 109 1 286 1 62 1 211 3 11 1 167 1 216 3 150 1 22 1 97 2 74 1 
116 1 277 1 179 1 198 1 227 1 180 1 354 1 79 1 141 2 254 1 4 2 32 1 332 1 54 1 123 1 6 1 208 1 125 1 230 1 108 1 109 1 286 1 357 1 62 2 287 1 211 3 131 1 11 1 12 1 167 1 216 3 150 1 69 1 172 1 365 1 97 3 244 1 245 1 74 1 
116 1 277 1 179 1 227 1 180 1 79 1 254 1 4 2 32 1 332 1 54 1 123 1 6 1 208 1 125 1 230 1 108 1 109 1 286 1 287 1 211 2 131 1 11 1 167 1 216 2 69 1 365 1 244 1 74 1 
116 1 277 1 179 1 227 1 180 1 354 1 79 1 254 1 4 2 32 1 332 1 54 1 123 1 6 1 208 1 125 1 230 1 108 1 109 1 286 1 287 1 211 2 131 1 11 1 167 1 12 1 216 2 69 1 365 1 244 1 74 1 245 1 
116 1 277 1 179 1 227 1 180 1 354 1 79 1 254 1 4 2 32 1 332 1 54 1 123 1 6 1 208 1 125 1 230 1 108 1 109 1 286 1 287 1 211 2 131 1 11 1 167 1 12 1 216 2 69 1 365 1 244 1 74 1 245 1 
116 2 277 1 101 1 179 1 227 1 180 2 354 1 79 1 141 2 254 1 4 4 32 1 332 1 54 1 6 1 208 1 125 1 146 1 230 1 108 1 109 1 286 1 263 2 62 2 287 1 211 4 131 1 11 1 265 1 167 1 149 2 361 1 216 4 150 2 218 1 365 1 22 2 24 2 97 4 244 1 74 1 
116 1 277 1 179 1 227 1 180 1 354 1 79 1 141 1 254 1 4 3 32 1 332 1 54 1 123 1 6 1 208 1 125 1 230 1 108 1 109 1 286 1 357 1 62 1 287 1 211 2 131 1 11 1 167 1 12 1 216 2 69 1 365 1 22 1 97 1 244 1 245 1 74 1 
116 1 277 1 179 1 227 1 180 1 354 1 79 1 141 1 254 1 4 3 32 1 332 1 54 1 123 1 6 1 208 1 125 1 230 1 108 1 109 1 286 1 357 1 62 1 287 1 211 2 131 1 11 1 167 1 12 1 216 2 69 1 365 1 22 1 97 1 244 1 245 1 74 1 
116 2 277 1 101 1 179 1 227 1 180 2 79 1 141 2 254 1 4 4 32 1 332 1 54 1 6 1 208 1 125 1 146 1 230 1 108 1 109 1 286 1 356 1 263 2 62 2 287 1 211 4 131 1 11 1 167 1 149 2 361 1 216 4 150 2 365 1 22 2 24 2 97 4 244 1 74 1 
197 1 248 1 100 3 118 1 50 1 251 2 52 1 280 1 28 1 201 1 185 1 328 1 229 1 257 1 162 6 209 2 128 1 307 1 308 2 133 1 342 1 17 2 134 1 93 1 223 1 348 3 
100 6 248 2 251 1 50 2 51 1 321 1 280 2 52 4 28 1 201 1 184 3 301 1 328 2 229 2 206 2 257 2 355 1 162 14 209 1 83 1 65 1 308 4 290 3 133 11 268 1 269 1 17 2 221 1 136 2 20 1 156 1 223 11 348 8 
137 1 248 1 100 1 250 1 26 1 50 1 27 1 52 1 280 1 228 1 79 2 3 1 200 1 201 1 301 1 229 1 257 1 332 2 80 1 355 1 260 1 162 2 209 1 126 1 7 1 261 1 336 1 286 1 65 1 308 2 363 1 313 1 70 1 238 1 152 1 115 1 348 1 75 1 
137 3 100 10 50 3 51 2 280 3 52 7 228 2 3 3 328 3 229 3 331 2 332 3 335 2 286 1 64 2 65 1 342 1 17 8 70 1 152 2 238 2 115 2 348 10 351 1 197 1 248 3 118 1 250 1 251 4 26 1 79 3 28 3 200 1 201 3 301 1 206 2 256 1 257 3 80 1 355 1 162 20 260 2 124 2 209 2 126 2 261 2 128 1 307 1 308 6 133 7 311 1 363 2 313 3 221 4 134 1 136 2 94 1 223 7 95 2 
137 7 350 1 248 2 100 1 250 2 50 2 280 2 79 1 228 2 140 1 325 1 3 8 142 1 200 1 201 2 185 1 301 1 229 2 143 1 256 1 257 2 332 1 161 1 80 1 162 2 126 2 261 3 286 1 304 1 61 1 87 1 89 1 65 1 308 4 313 8 70 1 238 2 155 2 348 1 
248 1 100 2 251 1 50 1 51 1 52 1 280 1 79 1 28 1 200 1 201 1 328 1 229 1 206 1 257 1 332 1 355 1 5 1 162 3 286 1 112 1 13 1 308 2 133 1 17 1 70 1 136 1 223 1 348 1 
337 1 248 1 50 1 308 2 52 1 280 1 133 1 17 1 201 1 185 1 328 1 221 1 229 1 257 1 136 1 162 2 223 1 348 2 
248 1 100 2 251 1 50 1 308 2 51 1 52 1 280 1 133 1 28 1 17 1 201 1 185 1 229 1 257 1 173 1 162 2 223 1 
100 2 248 1 251 1 50 1 51 1 308 2 52 2 280 1 133 2 28 1 17 2 201 1 185 1 328 1 221 1 229 1 206 1 257 1 136 1 162 4 223 2 348 2 
337 1 248 1 50 1 308 2 52 1 280 1 133 1 17 1 201 1 328 1 221 1 143 1 229 1 257 1 136 1 162 2 223 1 348 2 
248 1 100 2 251 1 50 1 308 2 51 1 52 1 280 1 133 1 28 1 17 1 201 1 143 1 229 1 257 1 173 1 162 2 223 1 
100 2 248 1 251 1 50 1 51 1 308 2 52 2 280 1 133 2 28 1 17 2 201 1 328 1 221 1 143 1 229 1 206 1 257 1 136 1 162 4 223 2 348 2 
100 2 248 1 251 1 50 1 51 1 308 2 52 2 280 1 133 2 28 1 17 2 201 1 328 1 221 1 229 1 206 1 257 1 136 1 162 4 223 2 348 2 
137 1 248 1 100 1 250 1 50 1 280 1 228 1 79 1 3 1 201 1 301 1 229 1 331 1 257 1 332 1 162 2 260 1 209 1 126 1 261 1 65 1 308 2 363 1 313 1 238 1 152 1 115 1 348 1 
137 1 248 1 100 1 250 1 50 1 280 1 323 1 228 1 79 1 3 1 31 1 201 1 301 1 229 1 257 1 332 1 162 2 58 1 209 1 126 1 261 1 65 1 308 2 363 1 313 1 238 1 115 1 348 1 
100 2 248 1 251 1 50 1 51 1 308 2 52 2 280 1 133 2 28 1 17 2 201 1 328 1 221 1 229 1 206 1 257 1 136 1 355 1 162 4 223 2 348 2 
137 1 100 2 248 1 251 1 50 1 51 1 52 2 280 1 228 1 79 1 28 1 3 1 325 1 201 1 328 1 229 1 206 1 331 1 257 1 332 1 162 4 260 1 126 1 335 1 261 1 308 2 133 2 363 1 17 2 313 1 221 1 238 1 152 1 136 1 115 1 223 2 348 2 
100 1 248 1 50 1 51 1 280 1 52 1 79 1 28 1 30 1 200 1 201 1 328 1 229 1 206 1 257 1 332 1 355 1 5 1 162 3 286 1 112 1 308 2 133 1 17 1 221 1 70 1 136 1 223 1 348 2 
159 1 197 1 248 3 100 21 118 1 138 1 251 4 50 3 51 4 280 3 28 5 255 4 202 2 184 3 328 5 206 4 207 1 257 3 162 41 334 1 165 1 128 1 359 1 307 1 233 1 40 1 66 1 341 1 308 6 290 4 342 1 362 1 292 1 268 3 236 1 219 1 17 8 221 4 134 1 272 1 136 4 156 1 348 20 
159 1 197 1 248 4 100 18 118 1 138 1 251 4 50 4 51 3 280 4 28 4 255 4 202 2 184 3 328 5 206 4 207 1 257 4 162 38 334 1 165 1 128 1 359 1 307 1 233 1 40 1 66 1 341 1 308 8 290 4 342 1 362 1 292 1 268 3 236 1 219 2 17 7 221 3 134 1 272 1 136 4 156 1 348 20 
159 1 197 1 248 2 100 25 118 1 138 1 251 7 50 2 51 7 280 2 28 8 255 4 202 1 184 4 328 8 206 7 207 1 257 2 162 52 334 1 83 2 165 1 128 1 307 1 233 1 40 1 66 1 341 1 308 4 290 4 342 1 362 1 268 2 236 1 219 1 17 14 221 7 134 1 272 1 136 7 156 2 348 27 
159 1 248 2 100 10 251 3 50 2 51 3 280 2 28 3 255 2 202 1 184 1 328 3 206 3 207 1 257 2 162 19 165 1 359 1 40 1 308 4 290 2 268 1 236 2 17 6 91 1 221 3 272 1 136 3 156 1 348 9 
159 1 100 12 248 3 138 1 251 2 50 3 51 2 280 3 28 2 255 4 202 2 184 2 328 3 206 3 207 1 257 3 162 26 334 1 165 1 233 1 40 1 66 1 308 6 341 1 290 2 362 1 268 2 236 1 219 2 17 4 221 2 272 2 136 3 348 14 
53 1 203 1 9 1 247 1 258 1 366 1 163 1 106 1 320 1 170 1 
102 1 127 1 
53 1 203 1 349 1 258 1 163 1 139 1 106 1 222 1 170 1 
178 1 9 1 211 1 25 2 216 1 170 1 53 1 203 1 104 1 258 1 366 1 163 1 106 1 146 1 346 1 175 1 320 1 96 1 
178 1 9 1 211 1 25 2 216 1 170 1 53 1 203 1 104 1 258 1 366 1 163 1 106 1 146 1 346 1 175 1 320 1 96 1 
178 1 9 1 211 1 25 2 216 1 170 1 53 1 203 1 104 1 258 1 366 1 163 1 106 1 146 1 346 1 175 1 320 1 96 1 
317 1 231 1 39 1 
317 1 231 1 39 1 
225 1 316 1 
225 1 316 1 231 1 
59 1 113 1 
176 1 178 1 25 1 79 2 102 1 200 2 53 1 203 1 258 1 332 2 163 1 106 1 209 1 59 1 127 1 286 2 129 1 211 1 264 1 216 1 170 1 113 1 237 1 70 2 72 1 23 1 175 1 
317 1 39 1 
225 1 316 1 231 1 
137 2 248 1 100 1 50 1 280 1 228 1 79 2 3 2 142 1 300 1 201 1 301 1 229 1 34 1 257 1 144 1 332 2 355 1 162 2 126 1 261 1 286 2 304 1 339 1 65 1 308 2 191 1 313 2 238 1 155 2 348 1 
246 1 137 2 111 1 14 1 352 1 228 1 90 1 3 2 325 1 313 2 343 1 68 1 238 1 256 1 315 1 73 1 81 2 367 1 8 1 
246 1 137 1 111 1 14 1 352 1 90 1 228 1 3 1 313 1 68 1 256 1 238 1 315 1 73 1 364 1 81 2 8 1 
137 1 89 1 77 1 250 1 352 1 228 1 140 1 3 1 313 1 343 1 103 1 238 1 126 1 261 1 
246 1 137 1 111 1 14 1 352 1 90 1 228 1 3 1 313 1 343 1 68 1 238 1 256 1 315 1 73 1 81 2 367 1 8 1 
278 1 
205 1 131 1 93 1 101 1 125 1 146 1 326 1 
69 1 32 1 131 1 123 1 365 1 6 1 125 1 244 1 
137 1 86 1 306 1 250 1 228 1 217 1 3 1 363 1 313 1 32 1 238 2 239 1 21 1 365 1 6 1 125 1 284 1 126 1 261 2 244 1 110 1 
184 1 32 1 131 1 365 1 6 1 125 1 290 1 362 1 268 1 244 1 
211 1 131 2 307 1 118 1 168 1 291 1 216 1 28 1 328 2 32 1 44 2 134 1 365 1 6 1 125 1 244 1 245 1 
32 1 131 1 101 1 365 1 6 1 125 1 146 1 244 1 326 1 
263 2 131 2 51 1 42 1 181 1 28 1 328 1 206 1 136 1 125 1 107 1 146 1 
211 1 101 1 146 1 216 1 97 1 150 1 
137 1 250 1 3 1 313 1 32 1 365 1 188 1 6 1 125 1 284 1 147 1 319 1 244 1 
137 1 226 1 100 1 248 1 250 1 50 1 280 1 79 3 228 1 3 1 200 2 201 1 229 1 331 1 257 1 332 3 162 1 5 2 260 1 209 1 126 1 261 1 286 2 65 1 308 2 363 1 313 1 70 2 152 1 238 1 115 1 48 1 
226 1 101 1 266 1 79 1 200 1 70 1 32 1 332 1 365 1 5 1 283 1 56 1 6 1 284 1 125 1 146 1 109 1 244 1 286 1 
203 1 293 1 170 1 
203 1 293 1 170 1 
203 1 37 1 320 1 113 1 170 1 
203 1 293 1 170 1 
203 1 199 1 170 1 
203 1 199 1 170 1 
203 1 199 1 170 1 
203 1 170 1 
53 1 106 1 
100 4 248 1 197 1 118 1 50 1 251 2 280 1 28 1 184 1 328 1 207 1 257 1 162 8 128 1 307 1 308 2 290 1 342 1 362 1 268 1 17 2 134 1 348 4 
117 1 197 1 100 5 248 2 118 1 251 2 50 2 280 2 28 1 184 1 328 2 206 1 207 1 257 2 162 11 128 1 307 1 308 4 290 2 342 1 362 1 268 1 17 3 221 1 134 1 136 1 156 1 348 6 
117 1 197 1 100 10 248 3 118 1 138 1 50 3 251 3 51 2 280 3 28 3 184 1 328 3 206 2 207 1 257 3 162 19 334 1 128 1 307 1 233 1 308 6 341 1 290 1 342 1 362 1 268 1 17 4 219 1 221 1 134 1 136 2 348 9 
117 1 197 1 100 7 248 3 118 1 50 3 251 3 138 1 51 1 280 3 28 2 184 1 328 3 206 2 207 1 257 3 162 17 334 1 128 1 307 1 233 1 308 6 341 1 290 1 342 1 362 1 268 1 219 1 17 5 221 2 134 1 136 2 348 10 
100 4 248 1 197 1 118 1 50 1 251 2 280 1 28 1 184 1 328 1 207 1 257 1 162 8 128 1 307 1 308 2 290 1 342 1 362 1 268 1 17 2 134 1 348 4 
100 6 248 1 50 1 251 1 138 1 51 2 280 1 28 2 184 1 328 2 206 2 207 1 257 1 162 12 334 1 233 1 308 2 341 1 290 1 362 1 268 1 17 2 221 1 136 2 348 6 
117 1 197 1 100 8 248 4 118 1 138 1 50 4 251 3 51 1 280 4 28 2 184 1 328 3 206 2 207 1 257 4 162 18 334 1 128 1 307 1 233 1 308 8 341 1 290 1 342 1 362 1 268 1 17 5 219 2 221 2 134 1 136 2 348 10 
100 7 248 4 138 1 50 4 251 3 51 2 280 4 28 2 184 1 328 3 206 3 207 1 257 4 162 16 334 1 359 1 233 1 308 8 341 1 290 1 362 1 268 1 17 6 219 2 221 3 136 3 348 9 
128 1 100 4 197 2 307 1 118 3 251 3 28 1 17 6 328 1 221 3 134 3 162 7 348 3 
197 1 100 8 248 4 118 1 138 1 50 4 251 3 51 1 280 4 28 2 184 1 328 3 206 2 207 1 257 4 162 18 334 1 128 1 359 1 307 1 233 1 308 8 341 1 290 1 342 1 362 1 268 1 17 4 219 2 221 1 134 1 136 2 348 10 
128 1 307 1 100 4 248 2 197 1 118 1 251 2 50 2 308 4 280 2 342 1 28 1 17 3 219 1 328 1 221 1 134 1 257 2 162 8 348 4 
128 1 100 3 197 1 307 1 118 1 251 2 342 1 28 1 17 2 328 1 134 1 93 1 162 6 348 3 
117 1 100 2 248 1 251 1 50 1 51 1 308 2 280 1 28 1 17 2 328 1 206 1 221 1 257 1 136 1 162 4 348 2 
100 4 251 1 51 1 290 2 28 1 268 1 17 2 184 1 328 1 206 1 221 1 136 1 162 7 156 1 348 3 
197 1 100 12 248 2 118 2 251 5 50 2 51 2 280 2 28 3 184 2 328 3 206 2 257 2 162 23 83 1 262 1 128 1 307 1 308 4 290 2 342 1 269 1 17 9 219 2 221 4 134 2 136 2 156 1 348 11 
100 1 162 1 290 1 
184 1 162 1 348 1 
117 1 248 1 100 3 50 1 251 2 308 2 51 1 280 1 28 1 17 3 328 1 206 1 221 1 257 1 136 1 162 6 95 1 348 3 
100 6 248 1 50 1 251 1 138 1 51 2 280 1 28 2 184 1 328 2 206 2 207 1 257 1 162 12 334 1 233 1 308 2 341 1 290 1 362 1 268 1 17 2 221 1 136 2 348 6 
307 1 100 3 118 1 251 1 28 1 17 2 328 1 221 1 134 1 162 6 348 3 
128 1 197 1 100 2 248 1 118 1 251 1 50 1 308 2 280 1 17 2 219 1 221 1 134 1 257 1 162 3 348 1 262 1 
248 1 100 5 307 1 118 2 50 1 251 3 308 2 168 1 280 1 28 2 17 5 328 2 221 2 207 1 134 2 257 1 162 10 348 5 
248 1 50 1 308 2 280 1 17 1 328 1 221 1 207 1 257 1 136 1 162 2 348 2 
100 2 248 1 251 1 50 1 51 1 308 2 280 1 28 1 17 2 328 1 206 1 221 1 207 1 257 1 136 1 162 4 348 2 
359 1 100 2 248 3 118 1 50 3 251 1 308 6 280 3 219 1 17 2 221 1 207 1 134 1 257 3 162 3 262 1 348 1 
117 1 197 1 100 18 248 5 118 3 50 5 251 7 51 3 280 5 28 5 184 3 328 5 206 3 207 1 257 5 302 1 162 34 262 1 128 1 359 1 307 2 308 10 290 4 67 1 342 1 268 1 219 2 17 12 221 5 134 3 136 3 241 1 156 1 348 16 
332 1 122 1 360 1 208 1 209 1 79 1 286 1 
360 1 279 1 79 1 120 1 240 1 186 1 153 1 332 1 122 1 208 1 209 1 286 1 
137 1 238 1 89 1 93 1 250 1 228 1 126 1 140 1 261 1 3 1 313 1 
137 1 250 1 79 2 228 1 3 1 363 1 200 1 313 1 70 1 238 1 332 2 80 1 260 1 115 1 209 1 126 1 261 1 286 1 
137 1 277 1 228 1 79 2 3 1 200 1 332 2 80 1 260 1 209 1 164 1 126 2 261 3 38 1 109 1 286 2 363 2 313 1 70 2 238 1 115 1 74 1 196 1 
137 2 277 1 228 1 79 2 3 2 200 1 332 2 80 1 58 1 209 1 164 1 126 2 261 3 38 1 109 1 286 2 130 1 363 2 313 2 70 2 238 1 115 1 74 1 196 1 
137 3 211 2 130 1 250 1 101 1 167 1 216 2 228 1 3 3 363 1 313 3 43 1 238 1 21 1 57 1 146 1 164 1 126 1 38 1 261 4 97 1 196 1 49 1 
137 3 211 2 130 1 1 1 250 1 101 1 167 1 216 2 228 1 3 3 363 1 313 3 238 1 21 1 57 1 146 1 164 1 126 1 38 1 261 4 97 1 196 1 
137 1 61 1 238 1 228 1 3 1 313 1 
61 1 137 6 87 1 350 1 148 1 306 1 299 1 250 2 228 2 325 1 3 7 142 1 312 1 363 1 313 7 256 1 238 3 161 1 155 1 126 2 261 3 
137 1 100 3 50 2 52 1 280 2 228 1 3 1 325 1 328 1 229 2 331 1 332 2 335 1 286 1 64 1 191 1 342 1 17 2 70 1 152 1 238 1 115 1 348 3 248 2 197 1 118 1 251 2 79 2 28 1 200 1 201 2 257 2 80 1 355 1 260 1 162 6 209 2 126 1 261 1 128 1 307 1 308 4 133 1 363 1 313 1 134 1 223 1 
137 1 177 1 1 1 101 1 250 1 3 1 326 1 205 1 32 2 6 2 188 1 57 1 125 1 146 1 261 2 86 1 211 3 131 1 167 1 216 3 217 1 150 1 313 1 365 2 21 1 23 1 97 2 244 2 
61 1 137 2 306 1 228 1 325 1 3 2 363 1 313 2 239 1 238 2 57 1 126 1 261 2 
137 4 130 1 89 1 250 1 267 1 140 1 228 1 3 4 325 1 313 4 238 1 126 1 261 1 
137 2 299 1 228 1 3 2 312 1 363 1 313 2 270 1 238 2 295 1 94 1 164 1 126 1 261 1 
137 1 238 1 73 1 250 1 81 1 228 1 90 1 3 1 8 1 313 1 
137 2 339 1 228 1 325 1 3 2 142 1 313 2 256 1 238 1 126 1 261 1 
137 4 87 1 89 1 350 1 250 1 267 1 140 1 228 2 3 5 325 1 142 1 313 5 238 2 164 1 126 2 261 3 
137 4 87 1 89 1 250 1 267 1 140 1 228 2 3 5 325 1 142 1 313 5 238 2 164 1 126 2 285 1 261 3 
137 1 250 1 79 2 228 1 3 1 363 1 200 1 313 1 70 1 238 1 332 2 80 1 58 1 115 1 209 1 126 1 261 1 286 1 
137 1 148 1 306 1 299 1 228 1 3 1 312 1 363 1 313 1 238 2 164 1 126 1 261 1 
314 1 234 1 235 1 209 1 303 1 
211 2 277 1 166 1 101 1 167 1 234 2 235 2 216 2 192 1 92 1 314 2 54 1 23 1 209 1 146 1 109 1 303 1 74 1 232 1 
234 1 79 1 300 1 314 1 34 1 144 1 332 1 303 1 286 1 
92 1 166 1 303 1 
93 1 154 1 353 1 16 1 
282 1 289 1 195 1 154 1 353 1 318 1 16 1 
338 1 289 1 15 1 
0 1 289 3 340 1 353 1 16 1 282 1 329 2 160 1 195 3 154 1 46 1 318 1 
282 1 288 1 189 1 289 2 195 2 154 1 353 1 318 1 16 1 
68 1 344 1 282 1 289 1 73 1 195 1 154 1 81 1 174 1 46 1 318 1 
282 1 289 1 195 1 154 1 46 1 318 1 16 1 
282 1 289 1 195 1 46 1 353 1 318 1 16 2 
358 1 289 2 214 1 16 1 282 2 114 1 195 2 154 1 46 1 318 2 
344 1 282 1 288 2 249 1 289 3 195 3 154 2 46 1 353 1 318 1 324 1 29 1 16 1 
246 1 288 1 289 2 353 1 169 1 16 1 68 1 282 1 195 2 73 1 154 1 81 2 46 1 318 1 8 1 
344 1 282 2 288 2 189 1 289 4 195 4 154 2 36 1 46 1 353 1 318 2 324 1 16 1 
282 1 289 1 195 1 154 1 46 1 353 1 318 1 16 1 
99 1 288 2 289 4 340 1 353 2 324 1 16 2 329 1 282 1 344 1 160 1 195 4 154 3 318 1 
213 1 288 1 289 2 353 1 16 1 282 1 194 1 195 2 154 1 46 1 318 1 224 1 
289 3 340 1 353 1 16 1 282 1 329 2 160 2 19 1 195 3 154 1 46 1 318 1 
294 1 154 2 253 1 182 2 
282 1 212 1 289 1 195 1 46 1 318 1 
282 1 288 1 289 2 195 2 154 1 46 1 353 1 318 1 29 1 16 1 
158 1 
282 1 289 1 195 1 154 1 46 1 353 1 318 1 16 1 
329 1 282 1 288 1 289 3 195 3 154 1 46 1 353 1 318 1 29 1 16 1 
344 1 99 1 154 1 324 1 
154 1 16 1 

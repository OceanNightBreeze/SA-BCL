#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (51,347) (51,347) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (51,347) (51,347) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (51,347) (51,347) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (51,347) (51,347) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 189 1 303 1 51 1 213 1 249 1 162 1 340 1 347 1 373 1 100 1 
218 1 189 1 303 1 51 1 213 1 249 1 162 1 340 1 347 1 373 1 100 1 
218 1 189 1 303 1 51 1 213 1 249 1 162 1 340 1 347 1 373 1 100 1 
218 1 189 1 303 1 51 1 213 1 249 1 162 1 340 1 347 1 373 1 100 1 
308 2 133 1 213 4 215 1 340 1 312 1 134 3 42 1 373 1 314 1 29 1 189 4 147 3 353 1 130 1 162 1 299 1 245 2 
303 1 213 2 133 1 340 1 312 1 373 1 29 1 6 1 89 1 218 1 147 1 189 2 353 1 221 1 295 1 162 1 
303 1 213 3 328 1 340 1 312 1 134 1 373 2 29 1 189 3 147 2 162 2 130 1 245 1 
141 1 143 1 308 2 213 9 215 1 340 1 312 1 314 1 29 1 189 9 147 5 130 3 299 1 245 4 108 1 303 1 133 1 328 1 134 7 373 2 42 1 330 1 353 1 162 2 
141 1 143 1 308 2 213 9 215 1 340 1 312 1 314 1 29 1 189 9 147 5 130 3 299 1 245 4 108 1 303 1 133 1 328 1 134 7 373 2 42 1 330 1 353 1 162 2 
97 1 25 1 57 1 
54 2 97 1 372 1 
114 2 96 1 264 2 310 2 184 2 3 1 99 2 381 2 
96 1 142 1 23 1 338 1 69 1 50 1 164 1 310 2 184 2 52 1 24 2 3 1 99 2 216 1 320 1 7 1 264 2 343 1 129 1 297 1 244 1 323 2 270 2 31 1 325 1 154 1 35 1 38 1 275 2 112 1 61 1 113 1 250 2 114 3 90 1 253 1 381 3 
114 1 107 1 264 1 310 1 184 1 66 1 3 1 120 1 99 1 381 1 
300 1 171 1 107 1 123 1 97 1 260 1 99 1 114 1 84 1 305 1 354 1 57 1 356 1 381 1 
300 2 171 1 107 1 310 1 97 1 184 1 260 1 99 1 84 2 114 1 264 1 305 1 354 1 57 1 381 1 
101 1 84 1 300 1 252 1 159 1 
84 2 300 2 229 1 319 1 97 1 252 1 57 1 159 1 
84 1 300 1 159 1 
300 1 107 1 327 1 310 1 184 1 3 1 99 1 84 1 114 1 264 1 252 1 66 1 120 1 381 1 
97 1 
84 2 300 2 229 1 220 1 97 1 252 1 57 1 159 1 
300 5 246 1 76 2 183 1 37 1 97 1 156 2 214 2 274 1 159 2 14 1 84 5 229 1 376 1 200 1 116 1 252 2 57 1 21 1 
96 1 25 1 
96 2 310 1 184 1 99 2 114 2 264 1 268 1 345 1 381 2 
139 1 368 1 39 1 
96 1 142 1 23 1 338 1 36 1 164 1 38 1 275 1 24 1 112 1 250 1 114 1 343 1 253 1 244 1 381 1 
139 1 142 1 23 1 338 1 164 1 310 1 38 1 184 1 275 1 71 1 24 1 112 1 99 1 250 1 114 2 343 1 253 1 244 1 32 1 381 2 
96 1 237 1 310 4 184 4 71 2 99 5 277 1 114 5 228 1 264 1 268 1 356 1 381 5 32 1 
114 2 107 1 310 2 258 1 184 2 120 1 99 2 381 2 
114 3 96 1 264 1 310 3 184 3 71 1 99 3 381 3 
114 1 107 1 310 1 184 1 120 1 99 1 381 1 
114 1 107 1 264 1 310 1 184 1 268 1 345 1 99 1 381 1 
96 1 142 1 23 1 338 1 50 1 70 1 164 1 310 3 184 3 52 1 260 1 71 1 24 1 3 1 99 3 7 1 264 2 343 1 268 1 129 1 244 1 323 2 270 1 32 1 300 1 325 1 171 1 107 1 154 1 35 1 38 1 275 1 112 1 61 1 113 1 250 1 114 4 84 1 90 1 331 1 305 1 253 1 354 1 381 4 
114 2 228 1 96 1 310 1 184 1 71 1 356 1 99 2 381 2 
300 1 107 1 171 1 70 1 310 3 97 1 184 3 260 1 71 2 99 3 84 1 114 3 264 1 305 1 268 1 379 1 354 1 32 1 381 3 
114 2 139 1 368 1 264 1 310 2 184 2 268 1 71 1 99 2 381 2 
96 1 142 1 338 1 23 1 164 1 38 1 275 1 24 1 112 1 250 1 114 1 343 1 253 1 244 1 381 1 
96 1 142 1 49 1 338 1 23 1 164 1 38 1 275 1 24 1 112 1 26 1 250 1 114 1 343 1 381 1 
139 2 357 1 216 2 7 2 262 1 263 1 129 1 323 2 270 4 8 1 325 1 367 1 33 1 368 2 154 1 35 1 247 1 39 2 113 1 90 1 18 1 177 1 209 1 284 1 
114 1 107 1 310 1 184 1 258 1 354 1 99 1 381 1 
348 1 254 1 
348 1 254 1 
2 1 155 1 
2 1 155 1 
2 1 155 1 
348 1 132 1 254 1 
348 1 132 1 254 1 
348 1 254 1 380 1 
348 2 2 1 155 1 254 2 256 1 27 1 
348 1 132 1 254 1 
348 1 359 1 254 1 
348 1 359 1 254 1 
348 1 359 1 254 1 
236 1 96 1 182 1 310 2 184 2 261 1 145 1 99 2 72 1 318 1 266 1 168 1 365 1 348 1 300 1 157 1 13 1 84 1 114 2 87 1 254 1 380 1 335 1 381 2 
348 2 300 2 235 2 236 3 227 1 358 1 309 1 97 1 261 2 362 1 43 1 329 1 84 2 318 2 168 2 254 2 365 1 335 2 256 1 
353 1 133 1 314 1 
89 1 353 1 133 1 
89 1 203 1 353 3 314 2 186 1 336 1 
89 1 203 1 353 2 342 1 314 1 336 1 
89 1 203 1 353 2 314 1 336 2 
68 2 357 1 97 2 214 1 145 1 72 1 5 2 102 1 263 1 54 3 293 1 266 1 56 1 57 1 169 1 300 5 33 1 246 2 76 1 350 1 156 1 372 1 159 1 84 5 175 1 229 1 200 1 17 2 116 3 18 1 252 4 211 1 
68 6 357 3 97 5 214 2 125 1 72 4 5 6 101 5 263 3 54 9 293 3 56 1 57 1 169 2 300 9 326 1 33 3 246 6 193 1 76 2 272 5 156 2 372 3 274 1 159 6 374 1 84 9 175 2 229 1 16 1 200 1 116 8 18 3 252 7 282 1 
68 2 357 1 97 3 214 1 72 1 5 2 102 1 263 1 293 1 54 4 57 1 169 1 300 3 33 1 246 2 76 1 350 1 156 1 372 2 274 1 84 3 175 1 116 3 17 1 252 2 18 1 
68 4 357 2 97 4 214 1 72 2 5 4 102 1 263 2 54 7 293 2 57 1 169 1 300 4 33 2 246 4 193 1 76 1 350 1 156 1 372 3 274 1 374 1 84 4 175 1 116 5 17 2 252 3 18 2 282 1 
85 1 23 1 25 1 
23 1 150 1 
288 1 
23 1 338 1 164 1 
23 1 40 1 
23 1 338 1 
85 2 23 3 338 1 164 1 45 1 12 1 
191 1 33 1 357 1 111 1 83 1 73 1 315 1 216 4 7 3 262 2 377 2 103 1 207 1 366 1 190 1 270 7 284 3 
191 1 33 1 357 1 111 1 83 1 73 1 315 1 216 4 7 3 262 2 377 2 103 1 207 1 366 1 190 1 270 7 284 3 
191 1 33 1 357 1 339 1 111 1 83 1 73 1 315 1 216 4 7 3 262 2 377 2 103 1 207 1 366 1 190 1 270 7 284 3 
337 1 48 1 357 4 73 2 315 1 216 16 7 15 262 5 293 3 263 3 103 2 167 1 129 1 366 1 323 2 322 4 270 31 190 2 106 1 191 1 325 1 33 4 154 1 111 1 113 1 83 5 199 3 136 1 377 3 18 3 207 2 205 1 307 1 284 10 
191 1 325 2 46 1 33 1 154 2 357 1 173 1 111 1 113 2 83 1 73 1 216 5 262 3 7 4 377 2 103 1 167 1 207 1 129 2 366 1 323 4 190 1 270 9 284 4 
286 1 142 1 213 2 360 1 24 1 340 1 312 1 314 1 186 1 29 1 147 1 189 2 148 1 343 1 222 1 225 1 303 1 133 1 275 1 134 1 373 1 198 1 352 1 250 1 230 1 89 1 353 2 138 1 162 1 178 1 
286 1 22 1 142 1 213 3 360 1 24 1 312 1 314 1 186 1 29 1 147 1 189 3 148 1 343 1 222 1 225 1 303 1 133 1 275 1 41 1 134 2 373 1 352 1 250 1 230 1 89 1 353 2 138 1 162 1 179 1 
286 1 22 1 142 1 213 2 24 1 312 1 186 1 314 1 29 1 147 1 189 2 148 1 343 1 222 1 225 1 303 1 133 1 275 1 41 1 134 2 352 1 250 1 230 1 89 1 353 2 
180 1 142 1 1 1 338 1 23 1 213 1 24 1 189 1 343 1 30 1 222 2 131 1 152 1 303 2 275 1 112 1 373 1 352 2 250 1 230 2 332 1 162 1 179 1 
286 1 22 1 142 1 213 1 360 1 24 1 340 1 314 1 186 1 189 1 148 1 343 1 222 1 225 1 303 1 133 1 275 1 373 1 198 1 352 1 250 1 230 1 89 1 353 2 138 1 162 1 
117 1 
180 1 142 1 338 1 1 1 97 2 99 1 54 2 343 1 57 1 58 2 300 5 107 1 349 1 246 2 195 4 156 1 158 2 159 6 112 2 250 2 114 1 200 1 201 1 116 2 251 1 305 1 354 1 356 1 123 1 23 1 214 1 259 1 124 1 260 1 24 2 361 1 217 2 126 1 74 1 169 1 171 1 370 2 76 1 369 1 372 2 275 2 174 1 82 1 375 2 84 5 135 2 229 3 44 1 91 2 381 1 
123 1 259 1 124 1 260 1 361 1 99 1 220 1 300 3 171 1 107 1 369 1 195 2 159 2 114 1 84 3 229 1 251 1 305 1 91 1 354 1 356 1 381 1 
123 1 97 1 259 1 124 1 260 1 361 1 99 1 220 1 57 1 300 3 171 1 107 1 369 1 195 3 159 1 375 1 114 1 84 3 229 1 251 1 305 1 354 1 356 1 381 1 
123 1 97 1 259 1 124 1 260 1 361 1 99 1 220 1 57 1 300 3 171 1 107 1 369 1 195 3 159 2 375 1 114 1 84 3 229 1 135 1 251 1 305 1 91 1 354 1 356 1 381 1 
97 5 99 1 57 5 300 5 58 2 107 1 246 1 195 6 156 1 197 1 159 7 158 2 114 1 200 1 116 1 305 1 251 1 354 1 356 1 123 1 124 1 259 1 214 1 260 1 361 1 217 2 220 1 226 1 171 1 369 1 34 1 76 1 370 2 273 1 372 2 276 1 82 1 375 4 84 5 135 4 229 3 44 1 91 4 381 1 
97 2 99 1 54 2 57 1 300 4 58 2 107 1 349 1 246 1 195 4 156 1 158 2 159 4 114 1 200 1 116 1 305 1 251 1 354 1 356 1 123 1 124 1 214 1 259 1 260 1 361 1 217 2 171 1 76 1 369 1 370 2 372 2 82 1 375 2 84 4 44 1 229 2 135 2 91 2 381 1 
123 1 97 1 259 1 124 1 214 1 260 1 361 1 99 1 217 2 57 1 58 2 300 4 226 1 171 1 107 1 246 1 370 2 369 1 76 1 195 4 156 1 273 1 372 2 159 4 158 2 276 1 82 1 375 2 114 1 84 4 135 2 229 2 44 1 200 1 116 1 251 1 305 1 91 2 354 1 356 1 381 1 
123 1 97 1 259 1 124 1 214 1 260 1 361 1 99 1 217 2 57 1 58 2 300 4 226 1 171 1 107 1 246 1 370 2 369 1 76 1 195 4 156 1 273 1 372 2 159 4 158 2 276 1 82 1 375 2 114 1 84 4 135 2 229 2 44 1 200 1 116 1 251 1 305 1 91 2 354 1 356 1 381 1 
123 1 97 1 259 1 124 1 214 1 260 1 361 1 99 1 188 2 54 2 151 2 57 1 58 2 224 1 300 4 226 1 171 1 107 1 246 1 369 1 76 1 195 4 156 1 78 1 371 1 159 4 158 2 82 1 375 2 114 1 84 4 135 2 229 2 200 1 116 1 251 1 305 1 91 2 354 1 356 1 381 1 
123 1 97 1 214 1 259 1 124 1 260 1 361 1 99 1 217 2 57 1 58 2 300 4 226 1 171 1 107 1 246 1 370 2 76 1 369 1 34 1 195 5 156 1 273 1 372 2 158 2 276 1 159 5 82 1 375 3 114 1 84 4 229 2 44 1 135 3 200 1 116 1 251 1 305 1 91 3 354 1 356 1 381 1 
123 1 97 1 214 1 259 1 124 1 260 1 361 1 99 1 217 2 57 1 58 2 300 4 226 1 171 1 107 1 246 1 370 2 76 1 369 1 34 1 195 5 156 1 273 1 372 2 158 2 276 1 159 5 82 1 375 3 114 1 84 4 229 2 44 1 135 3 200 1 116 1 251 1 305 1 91 3 354 1 356 1 381 1 
97 1 99 1 188 2 54 2 151 2 57 1 300 4 58 2 107 1 349 1 246 1 195 4 156 1 158 2 159 4 114 1 200 1 116 1 305 1 251 1 354 1 356 1 123 1 124 1 214 1 259 1 260 1 361 1 224 1 171 1 76 1 369 1 82 1 375 2 84 4 229 2 135 2 91 2 381 1 
139 1 96 2 357 1 25 1 216 3 262 2 7 3 103 1 129 1 366 1 323 2 270 6 191 1 325 1 368 1 33 1 154 1 35 1 39 1 111 1 113 1 90 1 377 1 207 1 177 1 284 2 
139 11 337 1 96 1 357 1 98 1 28 1 166 1 216 8 320 1 262 1 7 6 293 2 263 1 265 1 129 2 322 3 323 4 270 14 325 2 33 2 368 4 154 2 35 2 39 11 61 1 113 2 83 1 199 3 90 1 204 1 18 2 284 2 307 1 
96 1 142 1 23 1 338 1 164 1 310 1 184 1 24 1 144 1 71 1 99 1 313 1 216 1 7 1 320 1 343 1 129 1 244 1 323 2 270 2 32 1 325 1 368 1 154 1 35 1 36 1 38 1 275 1 79 1 112 1 113 1 61 1 250 1 114 2 90 1 204 1 253 1 381 2 
139 7 140 2 96 2 142 2 338 2 50 2 184 1 99 1 7 10 293 2 103 1 343 2 296 1 244 2 191 1 154 3 111 1 112 1 61 1 113 3 250 3 114 3 204 1 18 2 207 1 253 2 22 1 122 2 357 3 23 2 310 1 164 2 24 3 71 1 216 10 320 1 262 4 219 2 263 2 321 2 129 3 366 1 323 6 270 20 32 1 325 3 368 7 33 3 35 3 38 2 275 3 39 7 80 1 83 4 86 1 90 3 377 1 381 3 284 8 
22 1 180 1 142 2 23 3 1 1 338 2 310 1 184 1 71 1 24 8 99 1 216 1 320 1 7 1 243 1 364 1 343 2 129 2 297 2 323 4 270 2 325 2 10 1 154 2 192 1 35 2 275 7 112 2 113 2 61 1 250 8 114 1 88 1 90 2 64 1 232 1 177 1 178 1 381 1 
139 1 357 1 310 1 184 1 99 1 216 1 262 1 7 2 264 1 293 1 263 1 268 1 129 1 323 2 270 3 325 1 368 1 33 1 154 1 35 1 39 1 113 1 114 1 90 1 279 1 204 1 18 1 284 1 381 1 
139 1 325 1 368 1 33 1 154 1 35 1 247 1 39 1 113 1 83 1 216 2 90 1 18 1 177 1 129 1 323 2 270 2 284 1 
139 1 325 1 367 1 368 1 154 1 35 1 357 1 39 1 113 1 262 1 90 1 7 2 263 1 177 1 129 1 323 2 270 2 284 1 
139 2 357 1 216 2 7 2 262 1 293 1 263 1 129 1 323 2 270 4 325 1 33 1 368 2 154 1 35 1 39 2 113 1 83 1 90 1 18 1 177 1 284 2 
139 1 325 1 368 1 33 1 154 1 35 1 247 1 39 1 113 1 83 1 88 1 216 2 90 1 18 1 129 1 323 2 270 2 284 1 
139 1 325 1 367 1 368 1 154 1 35 1 357 1 39 1 113 1 88 1 262 1 90 1 7 2 263 1 129 1 323 2 270 2 284 1 
139 2 357 1 216 2 7 2 262 1 293 1 263 1 129 1 323 2 270 4 325 1 33 1 368 2 154 1 35 1 39 2 113 1 83 1 88 1 90 1 18 1 284 2 
139 2 357 1 216 2 7 2 262 1 293 1 263 1 129 1 323 2 270 4 325 1 33 1 368 2 154 1 35 1 39 2 113 1 83 1 90 1 18 1 284 2 
96 1 142 1 338 1 23 1 50 1 164 1 24 1 216 1 320 1 7 1 343 1 129 1 244 1 323 2 270 2 325 1 154 1 35 1 38 1 275 1 112 1 113 1 61 1 250 1 114 1 90 1 253 1 381 1 
96 1 142 1 338 1 49 1 23 1 164 1 24 1 26 1 216 1 320 1 7 1 343 1 129 1 323 2 270 2 325 1 154 1 35 1 38 1 275 1 112 1 113 1 61 1 250 1 114 1 160 1 90 1 381 1 
139 2 357 1 216 2 7 2 262 1 293 1 263 1 129 1 323 2 270 4 325 1 33 1 368 2 154 1 35 1 39 2 113 1 83 1 90 1 204 1 18 1 284 2 
139 2 142 1 357 1 338 1 23 1 50 1 164 1 24 1 216 2 262 1 7 2 263 1 293 1 321 1 343 1 129 1 244 1 323 2 270 4 325 1 368 2 33 1 154 1 35 1 38 1 39 2 275 1 113 1 83 1 250 1 114 1 90 1 18 1 253 1 178 1 284 2 381 1 
139 1 357 1 310 1 184 1 99 1 187 1 216 2 7 1 263 1 264 1 293 1 268 1 129 1 323 2 270 3 325 1 33 1 368 1 154 1 35 1 39 1 113 1 83 1 114 1 90 1 204 1 18 1 284 1 381 1 
337 1 181 1 357 3 290 2 216 9 262 3 7 10 293 3 263 3 129 2 298 1 322 2 323 4 270 19 325 2 271 2 33 3 153 1 154 2 173 1 113 2 83 3 199 1 119 1 304 1 18 3 208 1 355 1 307 1 284 6 
337 2 181 2 357 2 290 1 216 14 262 2 7 12 53 1 293 3 263 2 167 2 129 3 298 1 323 6 322 2 270 26 325 3 271 4 60 1 33 3 154 3 77 1 173 1 110 1 113 3 83 2 199 2 115 1 119 1 304 1 18 3 355 2 281 1 284 4 
337 3 181 2 290 1 7 21 293 4 53 1 103 1 298 1 191 1 60 1 154 3 110 1 111 1 113 3 199 3 115 1 304 1 119 1 18 4 207 1 208 1 355 1 307 1 357 5 257 1 216 20 262 4 263 4 167 1 129 3 323 6 322 4 366 1 270 41 325 3 271 4 33 5 77 1 173 1 83 4 377 1 281 1 284 8 
337 3 181 2 357 4 257 1 290 1 216 20 262 4 7 18 53 1 293 4 263 3 103 1 167 2 129 4 298 1 366 1 322 4 323 8 270 38 191 1 325 4 271 4 60 1 33 5 154 4 77 1 173 1 110 1 111 1 113 4 83 3 199 3 115 1 119 1 304 1 377 1 18 4 207 1 208 1 281 1 355 1 307 1 284 7 
337 2 181 1 357 8 98 2 290 1 216 27 262 7 7 25 53 1 293 7 263 7 103 1 167 1 129 2 298 1 366 1 322 4 323 4 270 52 191 1 325 2 271 4 60 1 33 8 154 2 77 1 173 1 110 1 111 1 113 2 83 7 199 4 115 1 119 1 304 1 377 1 18 7 207 1 281 1 355 1 307 2 284 14 
348 1 318 1 280 1 254 1 168 1 261 1 362 1 43 1 335 1 256 1 
182 1 380 1 
348 1 318 1 248 1 294 1 254 1 168 1 261 1 346 1 335 1 
132 1 104 1 
359 1 344 1 27 1 
300 1 348 1 235 1 236 2 227 1 358 1 309 1 97 1 261 1 362 1 43 1 84 1 318 1 168 1 254 1 365 1 335 1 256 1 
300 1 348 1 235 1 236 2 227 1 358 1 309 1 97 1 261 1 362 1 43 1 84 1 318 1 168 1 254 1 365 1 335 1 256 1 
300 1 348 1 235 1 236 2 227 1 358 1 309 1 97 1 261 1 362 1 43 1 84 1 318 1 168 1 254 1 365 1 335 1 256 1 
132 1 104 1 27 1 
132 1 104 1 27 1 
359 1 344 1 
359 1 344 1 27 1 
87 1 13 1 
235 1 47 1 236 1 96 1 182 1 310 2 184 2 261 1 145 1 72 1 99 2 318 1 266 1 168 1 300 1 348 1 227 1 157 1 13 1 114 2 84 1 87 1 252 1 254 1 380 1 335 1 381 2 
212 1 95 1 142 1 23 1 338 1 24 2 99 2 216 1 320 1 7 1 243 1 343 1 129 1 297 2 323 2 270 2 301 1 325 1 154 1 192 1 35 1 275 2 113 1 61 1 250 2 114 2 90 1 204 1 333 1 255 1 381 2 
286 1 225 1 22 1 142 1 133 1 289 1 360 1 275 2 24 2 314 1 186 1 250 2 230 1 89 1 353 2 127 1 343 1 92 1 178 1 
286 1 225 1 22 1 142 1 133 1 289 1 360 1 275 1 24 1 314 1 186 1 250 1 230 1 89 1 242 1 353 2 343 1 
180 1 142 1 23 1 338 1 1 1 275 1 24 1 341 1 112 1 250 1 230 1 343 1 332 1 92 1 
286 1 225 1 22 1 142 1 133 1 289 1 360 1 275 1 24 1 314 1 186 1 250 1 230 1 89 1 353 2 127 1 343 1 92 1 
75 1 
376 1 116 1 246 1 183 1 97 1 25 1 57 1 
97 2 214 1 217 1 54 1 57 1 300 1 246 1 76 1 370 1 156 1 372 1 159 1 84 1 44 1 229 1 200 1 116 1 
0 1 94 2 140 2 142 3 287 2 338 3 183 1 97 8 4 2 5 6 150 3 54 12 293 2 343 4 57 2 300 5 302 1 246 8 11 1 156 4 112 1 159 5 250 3 62 2 200 4 116 9 63 2 18 2 19 2 68 6 23 10 357 2 164 3 214 4 260 2 24 3 263 2 269 2 128 2 74 1 223 1 169 2 33 2 76 4 372 6 275 3 40 2 85 2 84 5 229 3 376 1 45 1 334 1 178 1 
285 1 68 5 94 1 337 1 357 2 97 5 214 2 4 2 5 5 54 6 293 2 263 2 322 1 57 2 74 1 169 1 300 1 60 1 33 2 246 5 77 1 76 2 156 2 372 3 110 1 159 1 84 1 199 1 229 1 115 1 200 2 116 8 137 1 18 2 281 1 
94 1 357 1 310 1 184 1 214 1 3 1 4 2 99 1 264 1 55 1 103 1 300 1 107 1 33 2 246 2 76 1 327 1 156 1 276 1 111 1 114 1 84 1 200 1 116 2 207 1 66 1 120 1 381 1 
246 1 76 1 183 1 156 1 97 1 214 1 200 1 376 1 116 1 57 1 
68 5 94 1 140 1 33 2 246 5 357 2 97 5 372 5 4 2 5 5 116 5 293 2 54 10 263 2 18 2 
84 1 300 1 229 1 97 1 57 1 159 1 
180 1 142 1 23 1 338 1 1 1 214 2 24 4 126 1 343 1 74 2 223 1 169 2 300 3 302 2 246 2 76 2 156 2 274 1 275 4 112 2 159 4 250 4 15 1 84 3 229 2 201 1 200 1 116 2 67 1 
96 1 142 1 338 1 23 1 50 1 310 2 164 1 184 2 52 1 24 1 3 1 99 2 7 1 264 2 343 1 129 1 244 1 323 2 270 1 325 1 154 1 35 1 38 1 275 1 112 1 61 1 113 1 250 1 114 3 90 1 253 1 381 3 
68 2 246 2 76 1 156 1 97 4 372 2 214 1 5 2 200 1 116 1 54 4 377 1 57 2 74 1 169 1 
317 1 261 1 335 1 
317 1 261 1 335 1 
87 1 378 1 261 1 43 1 335 1 
317 1 261 1 335 1 
261 1 105 1 335 1 
261 1 105 1 335 1 
261 1 105 1 335 1 
261 1 335 1 
348 1 254 1 
325 2 191 1 33 1 154 2 357 1 111 1 113 2 83 1 216 4 7 4 262 2 377 1 167 1 103 1 207 1 129 2 323 4 366 1 270 8 284 3 
191 1 33 1 357 1 25 1 111 1 216 3 7 3 262 2 377 1 103 1 207 1 366 1 270 6 284 2 
325 1 33 1 154 1 357 1 81 1 113 1 83 1 216 2 262 1 7 2 263 1 293 1 18 1 129 1 323 2 270 4 284 2 
337 1 33 1 357 1 83 1 199 1 216 3 262 1 7 4 263 1 293 1 18 1 322 2 270 7 307 1 284 2 
357 3 98 1 216 11 7 12 262 5 293 2 263 2 265 1 103 2 167 2 129 2 366 1 322 2 323 4 270 23 191 1 325 2 33 3 154 2 111 1 113 2 83 4 199 2 377 1 18 2 207 2 20 1 284 9 307 1 
7 1 322 1 270 1 
199 1 216 1 270 1 
325 1 140 1 33 1 154 1 357 1 81 1 113 1 83 1 216 3 7 3 262 2 293 1 263 1 18 1 129 1 323 2 270 6 284 3 
337 1 357 2 216 6 7 6 262 1 293 2 263 2 129 1 322 1 323 2 270 12 325 1 60 1 33 2 154 1 77 1 173 1 110 1 113 1 83 1 199 1 115 1 18 2 281 1 284 2 
33 1 357 1 111 1 83 1 216 3 7 3 262 1 103 1 207 1 270 6 284 2 
191 1 325 1 154 1 113 1 83 1 216 1 262 1 7 2 103 1 167 1 207 1 129 1 20 1 323 2 366 1 270 3 284 2 
325 1 33 2 154 1 357 2 173 1 111 1 113 1 83 2 216 5 262 3 7 5 55 1 103 2 207 2 129 1 323 2 270 10 284 5 
325 1 33 1 154 1 173 1 113 1 83 1 216 2 18 1 129 1 323 2 270 2 284 1 
325 1 33 1 154 1 357 1 173 1 113 1 83 1 216 2 262 1 7 2 263 1 293 1 18 1 129 1 323 2 270 4 284 2 
325 3 154 3 173 1 113 3 83 1 216 1 7 2 262 1 167 1 103 1 207 1 208 1 129 3 20 1 323 6 270 3 284 2 
337 1 357 5 216 16 7 18 262 7 293 3 263 3 103 3 167 2 129 5 366 1 322 4 323 10 270 34 106 1 191 1 325 5 33 5 154 5 173 1 111 2 81 1 113 5 83 5 199 3 136 1 377 1 18 3 207 3 205 1 208 1 20 1 307 1 284 12 
337 1 357 1 216 4 7 4 262 2 103 1 129 1 322 1 323 2 366 1 270 8 325 1 191 1 33 1 154 1 173 1 111 1 113 1 199 1 115 1 377 1 207 1 284 2 
337 1 357 1 216 6 262 2 7 5 293 1 103 1 129 2 366 1 322 2 323 4 270 11 191 1 325 2 33 2 154 2 173 1 111 1 81 1 113 2 83 1 199 1 115 1 377 1 18 1 207 1 307 1 284 3 
337 1 357 3 216 9 7 10 262 3 293 2 263 2 103 1 167 1 129 3 366 1 322 1 323 6 270 19 191 1 325 3 60 1 33 3 154 3 77 1 173 1 110 1 111 1 81 1 113 3 83 1 199 1 115 1 377 1 18 2 207 1 281 1 284 4 
337 1 357 2 216 10 7 7 262 3 293 2 263 1 103 1 167 1 129 3 366 1 322 1 323 6 270 17 191 1 325 3 60 1 33 3 154 3 77 1 173 1 110 1 111 1 81 1 113 3 83 2 199 1 115 1 377 1 18 2 207 1 281 1 284 5 
337 1 357 1 216 4 7 4 262 2 103 1 129 1 322 1 323 2 366 1 270 8 325 1 191 1 33 1 154 1 173 1 111 1 113 1 199 1 115 1 377 1 207 1 284 2 
337 1 357 2 216 6 7 6 262 1 293 2 263 2 129 1 322 1 323 2 270 12 325 1 60 1 33 2 154 1 77 1 173 1 110 1 113 1 83 1 199 1 115 1 18 2 281 1 284 2 
337 1 357 2 216 10 7 8 262 3 293 2 263 1 103 1 167 2 129 4 366 1 322 1 323 8 270 18 191 1 325 4 60 1 33 3 154 4 77 1 173 1 110 1 111 1 81 1 113 4 83 2 199 1 115 1 377 1 18 2 207 1 281 1 284 5 
337 1 357 2 216 9 7 7 262 3 293 3 263 2 167 2 129 4 322 1 323 8 270 16 325 4 60 1 33 3 154 4 77 1 173 1 110 1 113 4 83 3 199 1 115 1 18 3 208 1 281 1 284 6 
191 2 33 1 357 1 111 1 83 3 216 3 7 4 262 3 103 3 207 3 366 1 270 7 284 6 
337 1 357 2 216 10 7 8 262 3 293 2 263 1 103 1 167 2 129 4 366 1 322 1 323 8 270 18 191 1 325 4 60 1 33 3 154 4 77 1 173 1 110 1 111 1 113 4 83 1 199 1 115 1 377 1 18 2 207 1 208 1 281 1 284 4 
114 1 228 1 96 1 267 1 356 1 99 1 381 1 
93 1 96 1 99 1 291 1 114 1 228 1 292 1 149 1 118 1 267 1 356 1 381 1 
180 1 142 1 23 1 338 1 1 1 343 1 275 1 25 1 24 1 112 1 250 1 
96 1 142 1 23 1 338 1 164 1 310 1 38 1 184 1 275 1 71 1 24 1 112 1 99 1 250 1 114 2 343 1 244 1 381 2 
96 1 142 1 338 2 23 3 310 2 164 2 184 1 24 1 71 1 99 2 343 1 128 1 244 1 302 1 107 1 38 1 275 1 40 1 250 1 114 2 305 1 354 1 381 2 
96 1 142 1 338 2 23 3 310 2 164 2 184 1 24 2 71 1 26 1 99 2 343 1 128 1 302 1 107 1 38 1 196 1 275 2 40 1 250 2 114 2 305 1 354 1 381 2 
300 2 302 1 142 1 338 1 23 4 164 1 97 1 196 1 260 1 275 3 40 1 24 3 112 1 159 1 250 3 84 2 85 1 146 1 150 1 128 1 343 1 57 1 121 1 
300 2 302 1 142 1 338 1 23 4 164 1 97 1 196 1 260 1 275 3 40 1 24 3 112 1 159 1 250 3 84 2 85 1 63 1 150 1 128 1 343 1 57 1 
142 1 232 1 343 1 275 1 24 1 250 1 
170 1 22 1 10 1 142 2 338 2 23 3 239 1 164 1 275 6 24 7 112 2 250 7 64 1 243 1 232 1 364 1 343 3 45 1 297 1 306 1 178 1 
139 1 142 1 96 2 338 1 50 1 184 1 99 1 7 3 343 1 103 1 244 1 191 1 154 2 111 1 113 2 250 1 114 2 204 1 207 1 253 1 255 1 122 1 23 1 357 1 310 1 164 1 24 1 71 1 216 3 262 2 321 1 129 2 323 4 366 1 270 6 325 2 368 1 33 1 35 2 38 1 275 1 39 1 90 2 377 1 178 1 381 2 284 2 
23 2 183 1 97 1 214 2 260 1 24 1 150 1 269 1 57 1 223 1 300 3 246 1 76 2 156 2 275 1 112 1 159 2 250 1 84 3 85 1 62 1 229 1 376 1 200 2 116 1 63 1 252 1 19 1 
142 1 338 1 23 2 164 1 275 2 24 2 250 2 85 1 232 1 343 2 45 1 334 1 178 1 
180 1 142 1 23 1 338 1 1 1 343 1 196 1 275 4 24 4 178 1 112 1 324 1 250 4 
170 1 302 1 142 1 338 1 23 1 164 1 275 2 24 2 80 1 250 2 316 1 343 2 161 1 306 1 
225 1 89 1 142 1 353 1 343 1 133 1 275 1 24 1 112 1 250 1 
301 1 22 1 142 1 23 1 338 1 243 1 343 1 275 2 24 2 178 1 250 2 
302 1 180 1 142 2 1 1 338 2 23 3 275 4 24 5 112 1 250 5 64 1 243 1 364 1 343 2 178 1 324 1 
302 1 180 1 142 2 1 1 338 2 23 3 275 4 311 1 24 5 112 1 250 5 64 1 243 1 343 2 178 1 324 1 
96 1 142 1 23 1 338 1 164 1 310 1 38 1 184 1 275 1 71 1 24 1 112 1 99 1 26 1 250 1 114 2 343 1 381 2 
170 1 302 1 142 1 338 1 23 1 239 1 164 1 275 1 24 1 250 1 343 2 45 1 306 1 
363 1 96 1 238 1 206 1 165 1 
300 2 107 1 171 1 96 1 163 1 238 2 70 1 240 1 97 1 172 1 260 1 165 1 84 2 363 2 305 1 252 1 206 2 354 1 57 1 
95 1 212 1 238 1 165 1 99 1 114 1 363 1 333 1 381 1 
163 1 240 1 165 1 
29 1 147 1 25 1 312 1 
29 1 147 1 189 1 213 1 162 1 312 1 373 1 
189 1 303 1 222 1 
9 1 351 1 213 3 340 1 312 1 373 1 241 1 29 1 147 1 189 3 295 2 162 1 
29 1 147 1 189 2 308 1 213 2 162 1 312 1 134 1 373 1 
147 1 189 1 353 1 133 1 213 1 162 1 340 1 299 1 314 1 245 1 373 1 
29 1 147 1 189 1 213 1 162 1 340 1 373 1 
29 2 189 1 213 1 162 1 340 1 312 1 373 1 
59 1 194 1 213 2 340 1 373 2 29 1 147 1 189 2 278 1 162 2 
141 1 143 1 213 3 340 1 312 1 134 2 373 1 29 1 189 3 147 2 162 1 130 1 245 1 
213 2 133 1 340 1 312 1 134 1 373 1 186 1 314 1 29 1 89 1 147 1 189 2 353 2 65 1 162 1 
308 1 213 4 340 1 312 1 134 2 373 2 42 1 29 1 189 4 147 2 162 2 130 1 245 1 
29 1 147 1 189 1 213 1 162 1 340 1 312 1 373 1 
9 1 185 1 213 4 312 2 134 2 241 1 373 1 29 2 189 4 147 3 295 1 162 1 130 1 245 1 
108 1 109 1 213 2 340 1 134 1 312 1 373 1 29 1 147 1 189 2 202 1 162 1 
9 2 213 3 340 1 312 1 241 1 373 1 29 1 147 1 189 3 295 2 162 1 283 1 
147 2 231 1 233 2 210 1 
189 1 176 1 213 1 162 1 340 1 373 1 
29 1 141 1 147 1 189 2 213 2 162 1 340 1 312 1 134 1 373 1 
234 1 
29 1 147 1 189 1 213 1 162 1 340 1 312 1 373 1 
141 1 213 3 340 1 134 1 312 1 373 1 29 1 189 3 147 1 295 1 162 1 
147 1 185 1 130 1 245 1 
29 1 147 1 

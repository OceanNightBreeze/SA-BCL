#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
229 2 60 1 292 3 151 2 280 1 293 1 11 1 186 3 301 1 272 1 67 1 45 2 101 1 
292 9 151 2 241 2 293 3 154 2 271 2 272 1 83 1 135 1 229 5 60 4 160 1 39 1 319 1 280 6 281 1 11 1 162 1 186 9 301 1 67 1 166 1 100 1 119 1 45 2 101 2 217 2 102 1 
292 9 151 2 241 2 293 3 154 2 271 2 272 1 83 1 135 1 229 5 60 4 160 1 39 1 319 1 280 6 281 1 11 1 162 1 186 9 301 1 67 1 166 1 100 1 119 1 45 2 101 2 217 2 102 1 
292 10 151 2 241 2 293 4 154 2 271 2 272 1 83 1 135 1 229 6 60 5 160 1 39 1 319 1 280 7 281 1 11 1 162 1 186 10 301 1 67 1 166 1 100 1 119 1 45 2 101 2 217 2 102 1 
292 7 151 2 241 2 293 2 154 1 271 2 272 1 83 1 135 1 229 4 60 3 160 1 39 1 319 1 280 4 281 1 11 1 162 1 186 7 301 1 67 1 166 1 119 1 45 2 101 2 217 2 102 1 
229 3 60 2 160 1 292 4 241 1 151 1 280 3 293 1 186 4 154 2 301 1 271 1 272 1 67 1 100 1 119 1 45 1 217 1 
265 1 229 1 292 2 151 1 241 1 319 1 281 1 186 2 65 1 301 1 272 1 67 1 110 1 45 1 101 1 217 1 
292 9 151 2 241 1 293 3 154 2 133 1 271 1 272 1 83 1 229 5 60 4 39 1 160 1 251 1 280 7 11 1 186 9 301 1 67 1 100 1 119 1 45 2 101 1 217 1 
292 9 151 2 241 1 293 3 154 2 133 1 271 1 272 1 83 1 229 5 60 4 39 1 160 1 251 1 280 7 11 1 186 9 301 1 67 1 100 1 119 1 45 2 101 1 217 1 
342 1 59 1 219 1 268 1 199 1 131 1 357 1 245 1 358 1 359 1 320 1 236 1 224 1 178 1 
306 1 
306 1 181 1 201 1 302 1 214 1 59 2 224 2 268 1 
306 1 328 1 181 1 59 5 50 2 268 2 255 1 174 1 283 1 302 1 201 2 98 1 224 5 288 2 352 1 238 1 138 2 35 1 325 1 
306 1 181 1 350 1 
306 1 142 2 121 1 
342 2 211 1 358 2 359 2 320 2 219 1 357 2 131 2 
264 1 172 1 22 1 308 1 219 1 23 2 195 1 270 1 357 3 131 2 358 2 202 1 54 2 359 2 312 1 247 1 55 1 136 1 340 1 33 1 341 1 277 1 343 1 342 3 8 1 182 1 38 1 231 1 254 1 253 1 187 1 209 1 211 1 320 2 237 2 304 2 169 2 
342 1 358 1 359 1 320 1 236 1 219 1 178 1 199 1 357 1 131 1 
306 1 342 1 181 1 344 1 59 1 357 1 116 1 235 1 320 1 31 1 236 1 224 1 192 1 77 1 
306 1 342 1 181 1 344 1 59 2 131 1 357 1 116 1 358 1 359 1 320 1 31 1 236 1 224 2 77 1 
201 1 59 1 224 1 197 1 268 1 
306 1 181 1 294 1 201 1 302 1 59 2 224 2 268 1 
201 1 59 1 224 1 
342 2 357 2 131 1 212 1 211 2 358 1 359 1 320 2 99 1 
274 1 370 1 191 1 
342 1 211 1 8 1 54 1 22 1 237 1 38 1 136 1 195 1 23 1 231 1 253 1 340 1 353 1 357 1 277 1 
211 1 350 1 
342 2 8 1 22 1 38 1 195 1 23 1 231 1 253 1 26 1 131 1 357 2 358 1 54 1 320 1 237 1 136 1 274 1 340 1 277 1 206 1 
342 5 149 1 330 1 26 1 131 4 357 5 243 1 212 1 211 1 358 4 359 1 320 5 192 1 206 2 
342 2 358 2 320 2 236 1 298 1 199 1 357 2 131 2 
342 3 211 1 358 3 359 1 320 3 357 3 131 3 206 1 
342 1 358 1 320 1 236 1 199 1 357 1 131 1 
342 1 212 1 358 1 359 1 320 1 236 1 99 1 357 1 131 1 
264 1 22 1 308 1 195 1 219 1 23 1 198 1 26 1 270 1 357 4 131 3 358 3 202 1 54 1 359 2 247 1 31 1 136 1 224 1 340 1 341 1 277 1 206 1 343 1 342 4 8 1 344 1 182 1 59 1 38 1 231 1 254 1 253 1 116 1 209 1 349 1 211 1 212 1 320 3 236 1 237 1 304 2 169 1 77 1 
342 2 211 1 358 1 330 1 320 2 192 1 357 2 131 1 206 1 
306 1 342 3 344 1 59 1 198 1 26 1 131 3 357 3 116 1 212 1 358 3 359 1 320 3 236 1 31 1 224 1 261 1 77 1 206 2 
342 2 212 1 358 2 359 1 320 2 274 1 191 1 357 2 131 2 206 1 
342 1 211 1 8 1 54 1 22 1 237 1 38 1 136 1 195 1 23 1 231 1 253 1 340 1 357 1 277 1 
342 1 8 1 38 1 23 1 195 1 231 1 253 1 357 1 104 1 211 1 54 1 237 1 136 1 227 1 277 1 
264 1 0 1 126 1 308 1 153 1 27 1 270 1 202 1 3 1 247 2 274 2 34 1 343 1 362 1 187 2 210 1 209 1 17 1 304 2 370 2 191 2 324 1 169 4 374 1 
342 1 358 1 320 1 236 1 31 1 298 1 357 1 131 1 
144 1 118 1 290 1 
96 1 118 2 32 1 10 1 290 2 327 1 
118 1 290 1 
118 1 290 1 
10 1 327 1 
10 1 327 1 
10 1 327 1 
118 1 41 1 290 1 
118 1 41 1 290 1 
118 1 41 1 290 1 
118 1 76 1 290 1 
118 1 76 1 290 1 
118 1 76 1 290 1 
329 1 240 1 48 1 130 1 131 2 357 2 358 2 224 1 314 1 297 1 89 1 342 2 57 1 59 1 347 1 185 1 42 1 163 1 211 1 144 1 320 2 213 1 118 1 290 1 
306 1 329 2 240 1 57 2 59 2 37 2 347 3 256 1 183 1 42 2 185 2 96 1 369 1 177 1 118 2 224 2 44 1 248 1 290 2 
271 1 107 1 278 2 217 2 65 1 
271 1 241 1 217 1 
241 1 217 1 65 1 
271 2 107 1 108 1 278 1 217 3 65 1 
271 1 107 1 49 1 278 1 217 2 65 1 
306 1 48 1 219 1 50 1 1 1 153 1 268 4 25 2 199 1 357 1 131 1 245 1 82 1 311 1 106 1 358 1 201 1 359 1 84 1 224 5 138 1 178 1 34 1 228 1 342 1 181 1 59 5 142 4 282 1 210 1 43 2 188 2 367 1 283 2 302 1 320 1 98 3 236 1 17 1 121 2 288 1 325 1 
48 1 197 2 50 1 153 1 242 1 199 1 245 1 106 1 201 3 342 1 59 5 348 2 210 1 302 1 17 1 121 2 306 1 219 1 268 4 357 1 131 1 82 1 311 1 358 1 359 1 224 5 84 1 178 1 138 1 34 1 228 1 181 1 142 4 282 1 188 2 43 2 283 2 320 1 236 1 98 3 288 1 145 1 325 1 
306 1 48 1 219 1 1 1 50 1 268 2 25 1 153 1 199 1 357 1 131 1 245 1 82 1 358 1 106 1 359 1 224 3 84 1 178 1 138 1 34 1 342 1 181 1 59 3 142 1 367 1 188 1 43 1 283 2 320 1 236 1 98 1 288 1 238 1 
48 1 50 1 1 1 25 1 268 1 153 1 79 1 82 1 106 1 224 2 84 1 138 1 34 1 59 2 142 1 43 1 188 1 367 1 283 2 98 1 288 1 238 1 
4 1 
350 1 253 1 86 1 
253 1 233 1 
8 1 231 1 253 1 
279 1 253 1 
231 1 253 1 
189 1 52 1 8 1 231 1 253 3 86 2 
152 1 333 1 309 1 93 1 336 1 13 2 187 4 14 1 68 1 247 3 17 1 120 1 137 1 124 1 324 3 34 1 374 2 169 7 
264 1 308 1 152 1 333 1 309 2 153 3 336 2 202 1 134 1 223 3 247 15 84 3 137 5 156 4 317 1 34 4 140 1 343 1 360 1 93 2 64 1 187 16 13 3 210 3 68 1 304 2 17 4 120 1 323 1 124 2 324 10 372 1 169 31 374 5 
264 2 308 2 152 1 333 1 309 1 336 1 202 2 247 4 5 1 137 1 226 1 34 1 343 2 360 1 93 1 187 5 13 2 17 1 304 4 120 1 124 1 324 4 169 9 374 3 
152 1 333 1 309 1 93 1 336 1 13 2 187 4 68 1 247 3 17 1 120 1 137 1 124 1 324 3 34 1 374 2 169 7 
152 1 333 1 309 1 93 1 336 1 13 2 187 4 68 1 247 3 17 1 120 1 137 1 124 1 324 3 34 1 374 2 169 7 
159 1 218 1 38 1 195 1 292 1 23 1 231 1 151 1 253 1 2 2 356 2 364 1 186 1 295 1 54 1 303 2 237 1 167 1 190 1 45 1 101 2 19 1 277 1 
103 1 23 1 292 1 195 1 241 1 151 1 2 1 356 1 132 1 271 1 54 1 108 1 318 1 277 1 232 1 186 1 65 1 67 1 259 1 303 1 215 1 237 1 305 1 45 1 101 1 217 2 
103 1 23 1 292 2 195 1 241 1 151 1 2 1 356 1 132 1 271 1 272 1 54 1 108 1 318 1 277 1 229 1 180 1 232 1 280 1 186 2 65 1 301 1 67 1 259 1 303 1 215 1 237 1 45 1 101 1 217 2 
103 1 23 1 292 3 195 1 241 1 151 1 2 1 356 1 132 1 271 1 272 1 108 1 54 1 158 1 318 1 277 1 229 1 159 1 232 1 280 2 186 3 65 1 301 1 303 1 215 1 237 1 305 1 45 1 101 1 217 2 
23 1 292 2 195 1 241 1 2 1 356 1 132 1 271 1 272 1 54 1 108 1 158 1 318 1 277 1 229 1 280 2 186 2 65 1 301 1 303 1 215 1 237 1 305 1 101 1 217 2 
285 1 
194 1 195 1 50 1 196 1 51 2 106 1 201 6 54 2 155 1 339 1 342 1 344 1 59 5 346 2 253 1 299 1 116 1 12 4 302 3 121 2 75 2 19 1 77 1 306 2 170 2 218 1 23 2 78 1 269 1 357 1 31 1 224 5 225 1 138 1 277 1 276 1 36 1 181 1 141 2 38 2 142 2 231 1 235 1 365 2 368 1 283 2 97 1 284 2 320 1 98 2 237 2 236 1 288 1 192 1 325 1 
342 1 344 1 59 3 196 1 269 1 357 1 116 1 12 2 235 1 365 1 302 1 201 2 155 1 214 1 320 1 236 1 31 1 224 3 339 1 192 1 77 1 276 1 
306 1 196 1 269 1 357 1 201 1 155 1 31 1 224 3 339 1 276 1 342 1 181 1 344 1 59 3 141 1 116 1 235 1 12 3 302 1 320 1 214 1 236 1 192 1 77 1 
306 1 196 1 269 1 357 1 51 1 201 2 155 1 31 1 224 3 339 1 276 1 342 1 181 1 344 1 59 3 141 1 116 1 235 1 12 3 365 1 302 1 214 1 320 1 236 1 192 1 77 1 
196 1 50 1 51 4 201 7 155 1 339 1 342 1 344 1 59 5 346 2 299 1 116 1 12 6 302 3 214 1 216 1 122 1 121 2 75 2 77 1 306 5 170 2 269 1 357 1 175 1 31 1 224 5 138 1 316 1 276 1 181 5 90 1 141 4 235 1 365 4 368 1 283 1 284 2 320 1 236 1 98 1 288 1 192 1 325 1 
306 2 170 2 50 1 196 1 269 1 357 1 51 2 201 4 155 1 31 1 224 4 225 1 339 1 138 1 276 1 342 1 181 1 344 1 59 4 141 2 142 2 346 2 299 1 116 1 235 1 12 4 365 2 368 1 302 2 283 1 284 2 320 1 98 1 236 1 121 2 288 1 75 2 192 1 325 1 77 1 
306 1 170 2 196 1 50 1 269 1 357 1 51 2 175 1 201 4 155 1 31 1 224 4 339 1 316 1 138 1 276 1 342 1 181 1 344 1 59 4 141 2 346 2 299 1 116 1 235 1 12 4 365 2 368 1 302 2 283 1 284 2 320 1 98 1 236 1 121 2 122 1 288 1 75 2 192 1 77 1 325 1 
306 1 170 2 196 1 50 1 269 1 357 1 51 2 175 1 201 4 155 1 31 1 224 4 339 1 316 1 138 1 276 1 342 1 181 1 344 1 59 4 141 2 346 2 299 1 116 1 235 1 12 4 365 2 368 1 302 2 283 1 284 2 320 1 98 1 236 1 121 2 122 1 288 1 75 2 192 1 77 1 325 1 
306 1 170 2 267 2 196 1 50 1 269 1 357 1 51 2 201 4 155 1 31 1 224 4 339 1 316 1 138 1 276 1 342 1 181 1 344 1 59 4 141 2 142 2 346 2 115 1 63 2 299 1 116 1 235 1 12 4 365 2 302 2 283 1 70 1 320 1 98 1 236 1 288 1 239 1 192 1 77 1 325 1 
306 1 170 2 50 1 196 1 269 1 357 1 51 3 175 1 201 5 155 1 31 1 224 4 339 1 316 1 138 1 276 1 342 1 181 1 90 1 344 1 59 4 141 3 346 2 299 1 116 1 235 1 12 5 365 3 368 1 302 2 283 1 284 2 320 1 98 1 236 1 121 2 122 1 288 1 75 2 192 1 325 1 77 1 
306 1 170 2 50 1 196 1 269 1 357 1 51 3 175 1 201 5 155 1 31 1 224 4 339 1 316 1 138 1 276 1 342 1 181 1 90 1 344 1 59 4 141 3 346 2 299 1 116 1 235 1 12 5 365 3 368 1 302 2 283 1 284 2 320 1 98 1 236 1 121 2 122 1 288 1 75 2 192 1 325 1 77 1 
306 1 170 2 267 2 50 1 196 1 269 1 357 1 51 2 201 4 155 1 31 1 224 4 225 1 339 1 138 1 276 1 342 1 181 1 344 1 59 4 141 2 142 2 346 2 63 2 299 1 116 1 235 1 12 4 365 2 302 2 283 1 320 1 98 1 236 1 288 1 192 1 239 1 325 1 77 1 
0 1 264 2 307 1 218 1 195 2 23 8 308 2 80 1 357 1 131 1 270 2 358 1 54 8 202 2 29 1 247 1 204 1 109 1 55 2 33 1 206 1 277 2 342 1 343 2 180 1 9 1 38 2 231 2 253 3 254 1 209 2 187 1 320 1 237 7 304 4 305 1 19 1 46 1 169 2 
264 1 308 1 153 1 270 1 131 1 357 1 358 1 202 1 359 1 338 1 247 2 84 1 274 1 34 1 343 1 342 1 250 1 209 1 187 1 210 1 212 1 320 1 304 2 17 1 370 1 191 1 324 1 374 1 169 3 
264 1 0 1 308 1 152 1 333 1 309 1 270 1 202 1 247 3 274 1 34 1 343 1 93 1 209 1 187 3 13 1 211 2 350 1 304 2 17 1 120 1 370 1 191 1 324 2 374 2 169 6 
264 2 308 2 153 2 335 1 270 2 202 2 223 3 134 1 247 6 338 1 84 2 137 1 274 11 156 3 33 1 87 1 34 2 343 2 62 1 254 1 209 1 187 8 210 1 211 1 304 4 17 1 370 11 323 1 322 1 191 4 324 2 374 1 169 14 
264 1 148 1 22 1 195 1 23 1 308 1 26 1 270 1 357 2 131 1 273 1 358 1 54 1 202 1 53 1 338 1 247 1 136 1 340 1 33 1 277 1 206 1 343 1 342 2 8 1 38 1 231 1 253 1 254 1 209 1 187 1 211 1 320 1 237 1 304 2 191 1 353 1 169 2 
195 2 152 1 333 1 153 2 54 3 202 3 247 10 338 1 203 1 340 2 206 1 342 3 343 3 8 2 114 2 207 1 254 1 253 2 13 1 209 3 210 2 211 2 72 2 17 3 304 6 305 1 120 1 169 20 264 3 22 2 23 3 308 3 309 1 26 1 310 1 131 1 357 3 270 3 358 1 136 2 84 2 274 7 137 4 33 1 34 3 277 2 179 2 182 2 38 1 231 2 93 1 187 10 320 1 237 3 370 7 191 7 324 8 374 4 326 2 
0 1 343 1 264 1 308 1 153 1 27 1 270 1 209 1 187 2 202 1 304 2 137 1 274 1 370 1 191 1 324 1 169 2 34 1 
0 1 343 1 264 1 126 1 308 1 270 1 209 1 210 1 202 1 247 2 304 2 17 1 274 1 370 1 191 1 324 1 374 1 169 2 
0 1 343 1 264 1 308 1 153 1 270 1 210 1 209 1 187 2 202 1 247 2 17 1 304 2 84 1 137 1 274 2 370 2 191 2 324 2 374 1 169 4 34 1 
343 1 264 1 308 1 153 1 27 1 270 1 209 1 187 2 202 1 304 2 137 1 274 1 370 1 191 1 324 1 169 2 46 1 34 1 
343 1 264 1 126 1 308 1 270 1 209 1 210 1 202 1 247 2 304 2 17 1 274 1 370 1 191 1 324 1 374 1 169 2 46 1 
343 1 264 1 308 1 153 1 270 1 210 1 209 1 187 2 202 1 247 2 17 1 304 2 84 1 137 1 274 2 370 2 191 2 324 2 374 1 169 4 46 1 34 1 
343 1 264 1 308 1 153 1 270 1 210 1 209 1 187 2 202 1 247 2 17 1 304 2 84 1 137 1 274 2 370 2 191 2 324 2 374 1 34 1 169 4 
264 1 22 1 195 1 23 1 308 1 357 1 270 1 54 1 202 1 247 1 136 1 340 1 33 1 277 1 342 1 343 1 8 1 182 1 38 1 231 1 253 1 254 1 187 1 209 1 211 1 237 1 304 2 169 2 
264 1 195 1 23 1 308 1 357 1 270 1 104 1 54 1 202 1 30 1 247 1 136 1 227 1 33 1 277 1 342 1 343 1 8 1 38 1 231 1 253 1 254 1 187 1 209 1 211 1 237 1 304 2 169 2 
343 1 264 1 308 1 153 1 270 1 210 1 209 1 187 2 202 1 247 2 338 1 17 1 304 2 84 1 137 1 274 2 370 2 191 2 324 2 374 1 169 4 34 1 
264 1 22 1 195 1 23 1 308 1 153 1 357 1 270 1 54 1 202 1 247 2 136 1 84 1 137 1 274 2 340 1 34 1 277 1 342 1 343 1 180 1 8 1 182 1 114 1 231 1 253 1 210 1 187 2 209 1 237 1 17 1 304 2 370 2 191 2 324 2 374 1 169 4 
264 1 308 1 153 1 270 1 131 1 357 1 358 1 202 1 359 1 247 1 338 1 84 1 137 1 274 1 34 1 343 1 342 1 210 1 209 1 187 2 212 1 320 1 286 1 17 1 304 2 370 1 191 1 324 1 169 3 
264 2 128 1 308 2 129 1 153 3 337 1 202 2 223 1 134 1 247 10 5 1 84 3 137 3 156 2 249 1 275 2 34 3 343 2 91 1 234 1 187 9 210 3 304 4 17 3 18 2 323 1 371 1 324 6 374 3 169 19 
264 3 128 1 308 3 129 1 153 3 221 1 202 3 223 2 246 1 247 12 5 1 84 3 137 2 156 2 249 2 275 1 34 3 343 3 360 2 61 1 252 1 91 2 234 1 258 1 187 14 210 2 16 1 17 2 304 6 18 4 323 2 324 4 374 2 169 26 
264 3 21 1 128 1 308 3 129 1 152 1 333 1 309 1 153 4 221 1 202 3 246 1 223 3 134 1 247 21 5 1 84 4 137 4 156 4 249 2 275 1 34 5 343 3 360 1 61 1 252 1 91 1 93 1 234 1 258 1 13 1 187 20 210 4 16 1 304 6 17 5 120 1 18 4 323 3 371 1 324 8 374 4 169 41 
264 4 21 1 128 1 308 4 129 1 152 1 333 1 309 1 153 4 221 1 202 4 246 1 223 3 134 1 247 18 5 1 84 4 137 3 156 4 249 2 275 1 34 5 343 4 360 2 61 1 252 1 91 1 93 1 234 1 258 1 13 1 187 20 210 3 16 1 304 8 17 4 120 1 18 4 323 3 371 1 324 7 374 4 169 38 
264 2 128 1 308 2 129 1 152 1 333 1 309 1 153 7 335 2 221 1 202 2 246 1 223 4 134 2 247 25 5 1 84 7 137 7 156 4 249 1 275 1 34 8 343 2 360 1 61 1 252 1 91 1 93 1 234 1 258 1 13 1 187 27 210 7 16 1 304 4 17 8 120 1 18 4 323 2 324 14 374 7 169 52 
96 1 329 1 57 1 345 1 177 1 118 1 256 1 185 1 290 1 42 1 
144 1 163 1 
329 1 171 1 57 1 173 1 118 1 262 1 185 1 290 1 42 1 
41 1 112 1 
32 1 76 1 184 1 
306 1 240 1 329 1 57 1 59 1 37 1 347 2 256 1 183 1 42 1 185 1 96 1 369 1 177 1 118 1 224 1 248 1 290 1 
306 1 240 1 329 1 57 1 59 1 37 1 347 2 256 1 183 1 42 1 185 1 96 1 369 1 177 1 118 1 224 1 248 1 290 1 
306 1 240 1 329 1 57 1 59 1 37 1 347 2 256 1 183 1 42 1 185 1 96 1 369 1 177 1 118 1 224 1 248 1 290 1 
41 1 32 1 112 1 
41 1 32 1 112 1 
76 1 184 1 
32 1 76 1 184 1 
130 1 297 1 
329 1 48 1 268 1 130 1 357 2 131 2 358 2 224 1 314 1 297 1 89 1 342 2 57 1 37 1 59 1 347 1 183 1 185 1 42 1 163 1 211 1 15 1 144 1 213 1 320 2 118 1 290 1 
264 1 331 1 195 1 23 2 308 1 354 1 80 1 270 1 357 2 220 1 54 2 202 1 29 1 338 1 247 1 55 2 315 1 33 1 277 1 342 2 343 1 231 1 253 1 254 1 209 1 187 1 320 2 237 2 304 2 351 1 169 2 
38 1 218 1 195 1 23 1 231 1 253 1 94 1 54 1 222 1 303 1 237 1 167 1 19 1 277 1 
103 1 23 1 195 1 241 1 65 1 94 1 271 1 108 1 54 1 303 1 165 1 260 1 215 1 237 1 305 1 217 2 277 1 318 1 
180 1 103 1 195 1 23 2 241 1 65 1 94 1 271 1 108 1 54 2 303 1 165 1 260 1 215 1 237 2 305 1 217 2 277 1 318 1 
103 1 23 1 195 1 241 1 363 1 65 1 271 1 108 1 54 1 303 1 260 1 215 1 237 1 305 1 217 2 318 1 277 1 
111 1 
306 1 181 1 50 1 255 1 283 1 98 1 288 1 138 1 325 1 35 1 
43 1 188 1 283 2 142 1 84 1 153 1 34 1 
306 1 181 1 201 1 302 1 59 1 224 1 
218 1 332 1 195 1 23 4 50 2 78 2 106 2 54 4 201 4 224 3 85 2 138 2 277 1 36 1 59 3 38 2 231 1 253 1 300 1 97 1 283 2 302 2 237 4 98 2 287 1 288 2 238 1 19 1 325 1 
306 1 181 1 283 1 350 1 98 1 255 1 35 1 
306 2 181 1 59 1 142 1 50 1 368 1 201 1 302 1 283 1 284 1 98 1 224 1 121 1 288 1 75 1 138 1 325 1 
147 1 127 1 23 1 195 1 50 2 153 1 106 1 201 2 54 1 84 1 224 2 86 1 138 2 34 1 277 2 7 1 8 1 58 1 59 2 38 1 361 1 142 2 231 1 253 4 233 2 43 2 188 2 189 1 283 3 302 1 69 1 72 1 237 1 98 2 321 1 288 2 77 1 325 2 
50 1 153 2 221 1 223 1 246 1 84 2 156 1 138 1 34 2 142 3 252 1 258 1 210 2 43 5 188 5 283 4 98 6 17 2 16 1 288 1 323 1 325 1 
219 1 50 1 309 1 199 1 357 1 131 1 245 1 311 1 358 1 359 1 224 1 138 1 178 1 34 2 228 2 342 1 59 1 93 1 92 1 283 2 320 1 236 1 98 2 17 1 122 1 120 1 288 1 325 1 
264 1 22 1 23 1 219 1 195 1 308 1 357 3 131 2 270 1 358 2 202 1 54 1 359 2 247 1 136 1 340 1 341 1 277 1 343 1 342 3 8 1 182 1 38 1 231 1 254 1 253 1 209 1 211 1 320 2 237 1 304 2 169 1 
306 1 181 1 142 1 50 1 78 1 43 1 106 1 283 1 98 1 288 1 138 1 325 1 
57 1 123 1 256 1 130 1 185 1 
193 1 57 1 185 1 
193 1 57 1 185 1 
193 1 57 1 185 1 
57 1 74 1 185 1 
57 1 74 1 185 1 
57 1 74 1 185 1 
57 1 185 1 
118 1 290 1 
264 1 343 1 308 1 309 2 92 1 93 2 187 5 202 1 247 5 304 2 5 1 17 2 137 2 120 1 324 5 374 3 169 10 34 2 
343 1 264 1 308 1 153 1 187 2 202 1 5 1 304 2 137 1 324 1 34 1 169 2 
343 1 264 1 308 1 153 1 210 1 187 2 202 1 247 2 17 1 5 1 304 2 84 1 137 1 324 2 374 1 34 1 169 4 
343 3 264 3 360 1 308 3 309 1 93 1 187 1 202 3 313 1 247 2 5 1 304 6 137 1 371 1 324 2 169 3 374 1 
264 5 308 5 152 1 333 1 309 3 153 3 202 5 223 3 134 1 313 1 247 18 5 1 84 3 137 5 156 4 317 1 34 5 140 1 343 5 360 2 93 3 13 1 187 16 210 3 71 1 304 10 17 5 120 2 323 1 372 1 371 1 324 12 169 34 374 7 
343 2 264 2 360 1 308 2 152 1 333 1 309 1 93 1 13 1 187 4 202 2 247 4 17 1 304 4 120 1 137 1 324 3 34 1 169 8 374 2 
152 1 333 1 309 1 93 1 13 1 187 3 350 1 247 3 17 1 120 1 324 2 374 2 34 1 169 6 
343 1 264 1 308 1 153 1 210 1 187 2 202 1 71 1 247 2 17 1 304 2 84 1 137 1 324 2 374 1 34 1 169 4 
153 1 210 1 187 3 223 1 134 1 247 4 17 1 84 1 137 1 156 2 323 1 324 2 374 1 169 7 34 1 
264 2 308 2 152 1 333 1 309 2 153 2 335 1 202 2 134 1 223 2 313 1 247 12 84 2 137 4 156 2 87 1 34 3 343 2 360 2 93 2 13 1 187 11 210 2 17 3 304 4 120 1 324 9 169 23 374 5 
247 1 156 1 169 1 
187 1 223 1 169 1 
264 1 343 1 308 1 153 1 187 3 210 1 202 1 71 1 72 1 247 3 304 2 17 1 84 1 137 1 324 3 169 6 34 1 374 2 
264 1 308 1 153 2 221 1 202 1 223 1 246 1 247 6 5 1 84 2 137 1 156 1 34 2 343 1 252 1 258 1 187 6 210 2 304 2 17 2 16 1 323 1 324 2 169 12 374 1 
309 1 93 1 187 3 247 3 17 1 120 1 137 1 324 2 34 1 169 6 374 1 
343 1 264 1 360 1 308 1 152 1 333 1 309 1 93 1 187 1 202 1 313 1 247 2 304 2 137 1 324 2 374 1 169 3 
264 1 308 1 152 1 333 1 309 1 202 1 223 1 247 4 5 1 156 1 34 1 343 1 252 1 93 1 13 1 187 4 17 1 304 2 120 1 323 1 324 2 169 8 374 2 
264 2 308 2 152 1 333 1 309 1 153 1 202 2 223 1 134 1 247 5 5 1 84 1 137 1 156 2 34 2 343 2 252 1 93 1 13 1 187 6 71 1 17 1 304 4 120 1 323 1 324 3 374 2 169 11 
264 3 308 3 152 1 333 1 309 1 153 2 221 1 202 3 223 1 246 1 247 10 5 1 84 2 137 1 156 1 34 3 343 3 360 1 252 1 93 1 258 1 13 1 187 9 210 2 71 1 304 6 17 3 16 1 120 1 323 1 324 4 169 19 374 3 
264 3 308 3 152 1 333 1 309 1 153 2 221 1 202 3 223 1 246 1 247 7 5 1 84 2 137 2 156 1 34 3 343 3 360 1 252 1 93 1 258 1 13 1 187 10 210 1 71 1 304 6 17 2 16 1 120 1 323 1 324 5 169 17 374 3 
264 1 308 1 152 1 333 1 309 1 202 1 223 1 247 4 5 1 156 1 34 1 343 1 252 1 93 1 13 1 187 4 17 1 304 2 120 1 323 1 324 2 169 8 374 2 
264 1 308 1 153 2 221 1 202 1 223 1 246 1 247 6 5 1 84 2 137 1 156 1 34 2 343 1 252 1 258 1 187 6 210 2 304 2 17 2 16 1 323 1 324 2 169 12 374 1 
264 4 308 4 152 1 333 1 309 1 153 2 221 1 202 4 223 1 246 1 247 8 5 1 84 2 137 2 156 1 34 3 343 4 360 2 252 1 93 1 258 1 13 1 187 10 210 1 71 1 16 1 304 8 17 2 120 1 323 1 324 5 169 18 374 3 
264 4 308 4 153 3 221 1 202 4 223 1 246 1 247 7 5 1 84 3 137 3 156 1 34 3 343 4 360 2 252 1 258 1 187 9 210 2 16 1 304 8 17 2 323 1 371 1 324 6 169 16 374 3 
152 1 333 2 309 3 93 3 187 3 247 4 17 1 137 3 120 1 324 6 169 7 374 3 34 1 
264 4 308 4 152 1 333 1 309 1 153 2 221 1 202 4 223 1 246 1 247 8 5 1 84 2 137 1 156 1 34 3 343 4 360 2 252 1 93 1 258 1 13 1 187 10 210 1 16 1 304 8 17 2 120 1 323 1 371 1 324 4 169 18 374 3 
342 1 211 1 330 1 320 1 192 1 357 1 47 1 
342 1 330 1 230 1 334 1 244 1 357 1 211 1 320 1 73 1 192 1 6 1 47 1 
180 1 266 1 38 1 218 1 23 4 195 1 231 1 253 1 366 1 54 4 237 4 19 1 277 1 
8 1 23 2 195 1 231 1 253 1 310 1 28 1 66 1 54 2 237 2 85 1 289 1 157 1 277 2 
54 1 237 1 38 1 195 1 23 1 241 1 217 1 65 1 277 1 318 1 
180 1 23 2 195 1 231 1 253 1 80 1 220 1 54 2 237 2 305 1 277 1 
180 1 307 1 266 1 218 1 38 1 23 5 195 2 231 2 253 3 80 1 54 5 237 4 109 1 85 1 19 1 277 2 
180 1 266 1 218 1 38 1 23 5 195 2 231 2 253 3 80 1 95 1 54 5 237 4 109 1 85 1 19 1 277 2 
350 1 54 1 218 1 237 1 38 1 195 1 23 1 231 1 253 1 19 1 277 1 
342 2 8 1 38 1 22 1 23 1 195 1 231 1 253 1 131 1 357 2 211 1 358 1 54 1 320 1 237 1 136 1 277 1 206 1 
342 2 8 2 22 1 150 1 23 1 195 1 279 1 231 2 253 3 131 2 357 2 116 1 211 1 358 1 54 1 320 2 236 1 31 1 237 1 136 1 85 1 277 1 206 1 
195 1 23 2 150 1 357 2 131 2 358 1 54 2 31 1 136 1 85 1 227 1 206 1 277 1 342 2 8 2 231 2 279 1 253 3 116 1 366 1 211 1 320 2 237 2 236 1 
306 1 181 1 8 1 59 2 38 1 150 1 24 1 23 3 195 1 279 1 231 1 253 4 233 1 366 1 164 1 54 3 201 1 237 3 224 2 85 1 86 1 77 1 277 1 
306 1 181 1 8 1 59 2 38 1 150 1 23 3 361 1 195 1 279 1 231 1 253 4 233 1 366 1 54 3 201 1 237 3 224 2 85 1 86 1 77 1 277 1 
54 1 237 1 195 1 23 1 204 1 277 1 
307 1 180 1 8 1 9 1 38 2 23 7 195 2 231 2 253 3 80 1 189 1 54 7 237 6 55 1 204 1 109 1 305 1 125 1 289 1 157 1 277 3 
264 2 331 1 22 1 195 1 308 2 23 1 152 1 333 1 309 1 270 2 357 2 131 1 358 1 202 2 54 1 247 3 338 1 136 1 274 1 340 1 34 1 277 1 206 1 343 2 342 2 180 1 8 1 182 1 114 1 231 1 253 1 93 1 13 1 187 3 209 2 211 2 320 1 237 1 17 1 304 4 120 1 370 1 191 1 324 2 169 6 374 2 326 1 
306 1 147 1 127 1 23 1 50 2 268 1 54 1 201 2 224 3 138 2 86 1 35 1 181 1 58 1 59 3 38 1 361 1 253 2 255 1 233 1 283 1 302 1 98 1 237 1 287 1 288 2 325 2 77 1 
180 1 7 1 8 1 23 2 195 1 231 1 253 2 189 1 54 2 237 2 204 1 86 1 277 2 
342 2 8 1 38 1 23 1 195 1 231 1 253 1 131 1 357 2 211 1 358 1 54 1 320 1 237 1 136 1 227 1 277 1 206 1 
8 1 23 1 195 1 231 1 253 1 189 1 54 1 237 1 85 1 125 1 289 1 157 1 277 2 
211 1 176 1 117 1 263 1 200 1 
306 1 181 1 344 1 59 2 198 1 268 1 257 1 200 2 116 1 208 1 211 1 117 1 176 2 236 1 31 1 224 2 263 2 77 1 113 1 
342 1 354 1 200 1 357 1 176 1 117 1 320 1 351 1 315 1 
117 1 257 1 208 1 
301 1 229 1 272 1 67 1 292 1 151 1 45 1 186 1 
229 3 60 1 292 4 40 1 161 1 151 1 319 1 280 2 293 1 186 4 301 2 272 2 45 1 139 1 
229 1 292 2 151 1 280 1 186 2 301 1 133 1 272 1 67 1 45 1 373 1 20 1 
301 1 81 1 229 1 272 1 67 1 292 3 40 2 151 1 319 2 45 1 139 1 186 3 
229 2 296 2 355 1 168 1 
67 1 292 1 151 1 205 1 45 1 186 1 
301 1 229 1 272 1 67 1 83 1 292 2 151 1 280 1 45 1 186 2 
88 1 
301 1 229 1 272 1 67 1 292 1 151 1 45 1 186 1 
301 1 229 1 272 1 350 1 
301 1 229 1 272 1 292 1 151 1 45 1 186 1 
292 1 2 1 101 1 
301 1 229 1 272 1 67 1 292 3 40 1 151 1 319 2 45 1 56 1 139 1 186 3 
301 1 229 1 272 1 292 2 151 1 280 1 45 1 154 1 186 2 
271 1 229 1 67 1 60 1 160 1 292 1 241 1 151 1 45 1 217 1 186 1 
301 1 229 1 67 1 292 1 151 1 45 1 186 1 
301 2 272 1 67 1 292 1 151 1 45 1 186 1 
229 1 292 2 151 2 143 1 186 2 301 1 105 1 67 1 45 2 146 1 
229 2 60 1 39 1 292 3 151 1 280 2 293 1 186 3 301 1 272 1 67 1 83 1 45 1 
229 1 291 1 292 2 151 1 241 1 280 1 65 1 186 2 301 1 271 1 272 1 67 1 108 1 45 1 217 2 
301 1 229 2 272 1 67 1 60 1 100 1 292 4 151 2 280 2 45 2 293 1 154 1 186 4 
229 1 292 3 151 1 280 1 319 1 186 3 301 1 272 1 67 1 83 1 45 1 
229 1 60 1 161 1 293 1 
301 1 229 1 

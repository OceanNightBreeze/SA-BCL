#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 312 5 172 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 312 5 172 220 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
213 2 360 1 121 1 190 1 167 1 26 3 340 1 364 1 238 1 100 1 299 1 177 2 61 9 37 2 323 7 62 1 305 1 129 5 246 9 180 1 18 1 154 1 206 1 73 4 
213 2 360 1 121 1 190 1 167 1 26 3 340 1 364 1 238 1 100 1 299 1 177 2 61 9 37 2 323 7 62 1 305 1 129 5 246 9 180 1 18 1 154 1 206 1 73 4 
213 2 162 1 360 1 121 1 190 1 167 2 26 3 340 1 269 1 364 1 31 1 238 2 100 1 222 1 299 1 177 2 348 1 61 9 37 2 323 6 305 2 129 5 246 9 18 1 154 2 227 1 206 1 73 4 
213 2 162 1 360 1 121 1 190 1 167 2 26 3 340 1 269 1 364 1 31 1 238 2 100 1 222 1 299 1 177 2 348 1 61 9 37 2 323 6 305 2 129 5 246 9 18 1 154 2 227 1 206 1 73 4 
213 2 162 1 360 1 121 1 190 1 167 2 26 4 340 1 269 1 364 1 31 1 238 2 100 1 222 1 299 1 177 2 348 1 61 10 37 2 323 7 305 2 129 6 246 10 18 1 154 2 227 1 206 1 73 5 
213 2 162 1 360 1 121 1 190 1 167 2 26 2 340 1 269 1 364 1 31 1 238 2 100 1 222 1 299 1 177 1 348 1 61 7 37 2 323 4 305 2 129 4 246 7 18 1 154 2 227 1 73 3 
213 1 177 2 37 1 61 4 323 3 360 1 121 1 305 1 129 3 246 4 167 1 18 1 26 1 340 1 154 1 206 1 73 2 100 1 
213 1 37 1 61 2 360 1 121 1 361 1 305 1 129 1 246 2 167 1 340 1 31 1 45 1 238 1 222 1 185 1 
213 2 37 2 61 3 323 1 360 1 121 1 129 2 246 3 26 1 340 1 73 1 238 1 299 1 
199 1 358 1 257 1 
257 1 271 1 3 2 
80 2 214 1 128 2 91 2 72 2 189 2 326 2 210 1 
234 1 136 1 214 1 216 1 189 3 218 2 142 1 266 1 80 3 123 1 99 2 34 1 273 1 240 1 146 1 274 1 128 2 244 1 223 1 38 1 200 1 40 1 283 1 326 2 328 1 135 1 205 1 156 2 91 2 207 2 377 1 72 2 331 1 379 1 380 1 209 2 210 1 
80 1 214 1 128 1 91 1 72 1 196 1 14 1 293 1 189 1 326 1 
103 1 158 1 36 1 322 1 77 1 358 1 189 1 24 1 69 1 80 1 91 1 257 1 293 1 312 1 
158 1 128 1 36 1 322 1 77 1 358 1 189 1 24 2 326 1 69 2 80 1 91 1 72 1 257 1 293 1 
157 1 24 1 250 1 69 1 327 1 
358 1 257 1 157 1 24 2 287 1 46 1 69 2 327 1 
157 1 24 1 69 1 
214 1 128 1 14 1 24 1 189 1 326 1 327 1 69 1 80 1 91 1 196 1 72 1 293 1 33 1 
257 1 
358 1 257 1 23 1 157 1 24 2 287 1 69 2 327 1 
10 1 334 1 358 1 24 5 370 2 327 2 69 5 70 2 338 1 267 1 350 1 81 1 30 2 257 1 285 1 157 2 287 1 9 1 211 1 
104 1 200 1 40 1 189 2 108 1 42 1 326 1 266 1 328 1 80 2 91 1 207 1 377 1 72 1 331 1 99 1 379 1 209 1 273 1 146 1 
199 1 210 1 
128 1 189 2 326 1 109 1 80 2 91 2 228 1 72 1 210 2 
53 1 108 1 298 1 
200 1 40 1 189 1 245 1 266 1 80 1 328 1 207 1 377 1 331 1 99 1 379 1 209 1 273 1 146 1 210 1 
80 3 128 1 104 1 91 3 72 3 189 3 326 3 210 1 
80 1 91 1 72 1 14 1 293 1 189 1 326 1 
80 1 128 1 91 1 72 1 228 1 293 1 189 1 326 1 109 1 
234 1 158 1 214 1 216 1 77 1 189 4 24 1 218 1 142 1 266 1 80 4 293 1 123 1 99 1 34 1 273 1 146 1 36 1 128 2 322 1 223 1 104 1 38 1 200 1 40 1 225 1 68 1 326 3 42 1 69 1 328 1 135 1 205 1 156 2 91 3 207 1 377 1 228 1 72 3 331 1 379 1 380 1 209 1 210 1 
80 2 5 1 104 1 91 2 72 1 189 2 312 1 326 1 210 1 
158 1 128 1 36 1 322 1 104 2 77 1 24 1 189 3 68 1 42 1 326 3 69 1 80 3 91 3 228 1 72 3 257 1 293 1 232 1 
80 2 128 1 104 1 91 2 72 2 228 1 189 2 108 1 326 2 298 1 
200 1 40 1 189 1 266 1 80 1 328 1 207 1 377 1 331 1 99 1 379 1 209 1 273 1 146 1 210 1 
189 1 266 1 80 1 328 1 207 1 377 1 331 1 99 1 379 1 209 1 7 1 48 1 273 1 146 1 210 1 
234 1 216 1 53 2 289 1 218 4 142 1 122 1 98 1 34 1 367 1 298 2 244 2 223 2 13 1 38 1 108 2 155 1 135 1 352 1 90 1 156 2 21 1 311 1 288 1 
80 1 322 1 91 1 72 1 293 1 189 1 326 1 264 1 
128 1 104 2 189 5 16 1 326 4 42 1 80 5 5 1 91 5 72 4 228 1 75 1 312 1 210 1 
80 2 91 2 72 2 14 1 293 1 189 2 264 1 326 2 
63 1 259 1 
63 1 259 1 
193 1 204 1 
193 1 204 1 
193 1 204 1 
330 1 63 1 259 1 
330 1 63 1 259 1 
56 1 63 1 259 1 
193 1 320 1 59 1 204 1 63 2 259 2 
330 1 63 1 259 1 
168 1 63 1 259 1 
168 1 63 1 259 1 
168 1 63 1 259 1 
275 2 149 2 139 2 359 1 24 2 25 1 63 2 306 1 337 1 69 2 317 1 111 1 320 1 257 1 170 1 259 2 116 2 233 2 47 3 
313 1 160 1 335 1 139 1 24 1 189 2 80 2 56 1 275 1 149 1 12 1 324 1 63 1 326 2 69 1 253 1 111 1 91 2 72 2 74 1 259 1 116 1 47 1 210 1 
154 1 305 1 167 1 
45 1 305 1 167 1 
154 2 229 1 45 1 305 3 248 1 249 1 
154 1 138 1 45 1 305 2 248 1 249 1 
154 1 45 1 305 2 248 2 249 1 
313 1 358 1 24 5 336 1 3 3 81 1 28 1 30 1 318 1 295 2 367 1 271 1 239 2 9 2 198 2 370 1 64 1 67 1 70 1 69 5 327 4 253 1 155 1 90 1 71 1 257 2 74 1 285 3 157 1 287 1 231 1 288 1 
313 4 358 1 217 1 24 9 336 3 3 9 81 1 30 2 318 2 366 1 171 1 367 3 271 3 239 6 9 6 176 1 198 6 349 5 370 2 67 2 250 5 69 9 327 7 70 2 155 3 20 1 90 3 71 1 257 5 285 8 157 6 287 1 92 1 211 1 288 3 
313 1 358 1 24 3 336 1 3 4 30 1 318 1 295 1 367 1 271 2 239 2 9 2 198 2 370 1 64 1 67 1 327 2 70 1 69 3 155 1 90 1 257 3 285 3 231 1 211 1 288 1 
313 2 358 1 24 4 336 2 3 7 30 1 318 1 171 1 295 2 367 2 271 3 239 4 9 4 176 1 198 4 370 1 64 1 67 1 70 1 69 4 327 3 155 2 90 2 257 4 285 5 231 1 92 1 211 1 288 2 
57 1 199 1 273 1 
208 1 273 1 
307 1 
273 1 146 1 
341 1 57 2 113 1 377 1 273 3 146 1 
377 1 273 1 146 1 
273 1 49 1 
223 3 244 4 188 1 218 7 252 1 155 1 339 1 254 1 98 3 343 2 258 1 378 1 296 1 367 1 311 2 346 1 272 1 
223 3 244 4 188 1 218 7 252 1 155 1 339 1 254 1 98 3 343 2 258 1 378 1 296 1 367 1 311 2 346 1 272 1 
223 3 244 4 188 1 218 7 152 1 252 1 155 1 339 1 254 1 98 3 343 2 258 1 378 1 296 1 367 1 311 2 346 1 272 1 
234 1 216 1 188 1 336 3 218 31 142 1 290 1 339 2 365 1 98 10 144 1 343 3 83 4 296 1 34 1 367 4 272 1 346 2 223 15 244 16 105 1 325 1 106 3 252 2 155 4 254 2 90 3 156 2 258 1 286 1 378 5 311 5 355 1 288 3 
234 2 216 2 218 9 263 1 142 2 339 1 98 4 343 2 34 2 296 1 367 1 346 1 272 1 300 1 244 5 223 4 252 1 155 1 254 1 156 4 258 1 378 1 311 3 355 1 
213 1 1 1 360 1 121 1 167 1 97 1 266 1 340 1 342 1 237 1 99 1 238 1 241 1 61 2 37 1 323 1 302 1 279 1 15 1 305 2 129 1 246 2 41 1 154 1 207 1 112 1 229 1 45 1 379 1 209 1 
213 1 1 1 360 1 167 1 97 1 266 1 340 1 237 1 99 1 238 1 241 1 61 3 37 1 323 2 302 1 15 1 305 2 129 1 151 1 246 3 41 1 44 1 154 1 207 1 112 1 229 1 45 1 379 1 209 1 381 1 
1 1 360 1 97 1 266 1 167 1 340 1 238 1 99 1 241 1 61 2 323 2 302 1 15 1 305 2 129 1 151 1 246 2 154 1 207 1 112 1 229 1 45 1 379 1 209 1 381 1 
213 1 37 1 61 1 260 1 1 2 15 2 54 1 191 1 246 1 375 1 265 1 266 1 44 1 27 1 207 1 331 1 238 2 99 1 379 1 209 1 273 1 146 1 241 2 
213 1 1 1 121 1 167 1 97 1 266 1 237 1 99 1 238 1 241 1 61 1 37 1 302 1 279 1 15 1 305 2 151 1 246 1 41 1 154 1 207 1 112 1 229 1 45 1 379 1 209 1 
147 1 
158 1 212 5 159 2 77 1 358 1 2 3 189 1 24 4 163 3 78 2 80 1 81 1 363 1 82 1 30 1 319 1 291 3 293 1 84 1 270 1 197 1 271 2 221 1 126 1 102 1 9 1 103 1 36 1 322 1 148 1 278 1 370 1 181 2 88 2 70 1 69 4 91 1 257 1 285 1 157 5 287 2 312 1 
158 1 212 5 159 2 77 1 358 1 2 3 189 1 24 4 163 3 78 2 80 1 81 1 363 1 82 1 30 1 319 1 291 3 293 1 84 1 270 1 197 1 271 2 221 1 126 1 102 1 9 1 103 1 36 1 322 1 148 1 278 1 370 1 181 2 88 2 70 1 69 4 91 1 257 1 285 1 157 5 287 2 312 1 
158 1 212 4 77 1 358 1 2 2 163 2 24 4 189 1 78 2 3 2 80 1 81 1 30 1 291 2 319 1 293 1 221 1 126 1 102 1 9 1 103 1 36 1 322 1 148 1 278 1 370 1 374 1 224 2 131 1 88 2 70 1 69 4 353 2 91 1 257 1 285 1 157 4 287 2 312 1 
2 2 94 1 189 1 3 2 194 1 291 2 293 1 99 2 146 1 102 1 9 2 103 1 148 1 69 5 70 1 207 2 257 2 157 6 209 2 312 1 158 1 212 4 159 2 77 1 358 1 314 1 163 2 24 5 78 2 265 1 266 1 80 1 81 1 27 1 318 1 30 1 82 1 319 1 32 1 271 2 221 1 126 1 273 1 36 1 322 1 278 1 370 1 374 1 181 2 88 2 91 1 331 2 285 2 287 3 379 1 
212 2 158 1 103 1 322 1 36 1 77 1 148 1 23 1 278 1 163 1 24 3 189 1 69 3 80 1 91 1 157 2 293 1 287 1 221 1 126 1 312 1 102 1 
158 1 212 3 77 1 358 1 23 1 2 1 189 1 24 3 80 1 293 1 221 1 126 1 102 1 103 1 36 1 322 1 148 1 278 1 69 3 91 1 257 1 157 1 287 1 312 1 
158 1 212 3 77 1 358 1 23 1 2 1 189 1 24 3 163 1 80 1 291 1 293 1 221 1 126 1 102 1 103 1 36 1 322 1 148 1 278 1 69 3 91 1 257 1 157 2 287 1 312 1 
2 4 189 1 291 4 293 1 197 1 102 1 9 1 103 1 148 1 69 5 70 1 257 5 157 7 312 1 212 6 158 1 159 2 215 1 77 1 358 5 23 1 163 4 24 5 78 2 80 1 81 1 363 1 30 1 82 1 319 1 270 1 84 1 221 1 271 2 126 1 322 1 36 1 278 1 370 1 88 2 181 2 91 1 285 1 287 3 
158 1 212 4 159 2 77 1 358 1 2 2 163 2 24 4 189 1 78 2 3 2 80 1 81 1 30 1 82 1 291 2 319 1 293 1 271 2 221 1 126 1 102 1 9 1 103 1 36 1 322 1 148 1 278 1 370 1 374 1 181 2 88 2 70 1 69 4 91 1 257 2 285 1 157 4 287 2 312 1 
158 1 212 4 159 2 77 1 358 1 2 2 163 2 189 1 24 4 78 2 80 1 81 1 363 1 82 1 30 1 291 2 319 1 293 1 84 1 197 1 271 2 221 1 126 1 102 1 9 1 103 1 36 1 322 1 148 1 278 1 370 1 181 2 88 2 70 1 69 4 91 1 257 1 285 1 157 4 287 2 312 1 
158 1 212 4 159 2 77 1 358 1 2 2 163 2 189 1 24 4 78 2 80 1 81 1 363 1 82 1 30 1 291 2 319 1 293 1 84 1 197 1 271 2 221 1 126 1 102 1 9 1 103 1 36 1 322 1 148 1 278 1 370 1 181 2 88 2 70 1 69 4 91 1 257 1 285 1 157 4 287 2 312 1 
158 1 212 4 77 1 358 1 2 2 163 2 189 1 24 4 78 2 3 2 80 1 81 1 30 1 291 2 319 1 293 1 197 1 221 1 126 1 102 1 9 1 103 1 36 1 322 1 148 1 278 1 370 1 224 2 131 1 88 2 153 1 70 1 69 4 251 1 353 2 91 1 257 1 285 1 157 4 287 2 312 1 
234 1 216 1 199 1 223 3 244 3 13 1 53 1 38 1 218 6 108 1 142 1 155 1 339 1 135 1 254 1 156 2 98 2 343 1 258 1 296 1 34 1 367 1 311 2 272 1 298 1 210 2 
234 2 76 1 216 2 53 11 336 2 218 14 142 2 98 2 144 1 83 3 34 2 367 1 298 4 223 6 244 8 38 1 201 1 282 1 106 3 283 1 108 11 135 2 155 2 90 1 156 4 332 1 378 1 286 1 22 1 380 1 311 1 210 1 288 2 
234 1 216 1 120 1 189 2 218 2 142 1 266 1 80 2 99 1 34 1 273 1 146 1 127 1 298 1 104 1 223 1 244 1 200 1 38 1 40 1 245 1 282 1 283 1 326 1 42 1 328 1 135 1 207 1 91 1 156 2 377 1 72 1 331 1 379 1 209 1 380 1 184 1 210 1 
234 3 53 7 189 3 336 2 142 3 339 1 98 8 343 1 145 1 99 3 296 1 146 2 298 7 243 1 104 1 244 10 200 2 151 1 108 7 351 2 155 3 254 1 205 2 207 3 156 6 72 1 114 2 258 1 209 3 311 4 210 2 216 3 218 20 261 2 266 2 80 3 34 3 367 3 272 1 273 2 276 1 223 10 38 3 40 2 282 1 283 1 42 1 326 1 328 2 135 3 90 2 91 1 377 2 331 1 378 4 379 2 380 1 93 2 288 2 
234 2 136 2 216 2 52 1 187 1 189 1 55 1 218 2 142 2 265 1 266 2 80 1 342 1 27 1 99 8 34 2 273 3 297 1 146 2 104 1 244 1 223 1 13 1 38 2 151 1 283 1 130 1 326 1 17 1 135 2 91 1 207 7 156 4 72 1 331 2 115 1 379 2 209 8 380 1 
234 1 216 1 53 1 189 1 336 1 218 3 142 1 80 1 98 1 34 1 367 1 298 1 60 1 128 1 244 1 223 2 38 1 282 1 108 1 326 1 135 1 155 1 90 1 156 2 91 1 72 1 228 1 311 1 288 1 
234 1 216 1 244 2 13 1 53 1 38 1 218 2 108 1 142 1 135 1 155 1 156 2 98 1 21 1 378 1 34 1 298 1 288 1 
234 1 216 1 223 2 13 1 53 1 38 1 289 1 218 2 108 1 142 1 135 1 90 1 156 2 98 1 34 1 367 1 311 1 298 1 
234 1 216 1 53 2 336 1 218 4 142 1 98 2 34 1 367 1 298 2 244 2 223 2 13 1 38 1 108 2 155 1 135 1 90 1 156 2 378 1 311 1 288 1 
234 1 216 1 244 2 53 1 38 1 218 2 108 1 142 1 135 1 155 1 156 2 98 1 21 1 378 1 34 1 297 1 298 1 288 1 
234 1 216 1 223 2 53 1 38 1 289 1 218 2 108 1 142 1 135 1 90 1 156 2 98 1 34 1 367 1 311 1 297 1 298 1 
234 1 216 1 53 2 336 1 218 4 142 1 98 2 34 1 367 1 297 1 298 2 244 2 223 2 38 1 108 2 155 1 135 1 90 1 156 2 378 1 311 1 288 1 
234 1 216 1 223 2 244 2 53 2 38 1 336 1 218 4 108 2 142 1 135 1 155 1 90 1 156 2 98 2 378 1 34 1 367 1 311 1 298 2 288 1 
234 1 216 1 189 1 218 2 142 1 266 1 80 1 99 1 34 1 273 1 146 1 244 1 223 1 200 1 38 1 40 1 283 1 328 1 135 1 205 1 207 1 156 2 377 1 331 1 379 1 209 1 380 1 210 1 
234 1 356 1 216 1 189 1 218 2 142 1 266 1 80 1 99 1 34 1 7 1 273 1 146 1 244 1 223 1 38 1 283 1 328 1 135 1 207 1 156 2 377 1 331 1 379 1 209 1 380 1 48 1 210 1 
234 1 216 1 53 2 336 1 218 4 142 1 98 2 34 1 367 1 298 2 244 2 223 2 38 1 282 1 108 2 155 1 135 1 90 1 156 2 378 1 311 1 288 1 
234 1 216 1 53 2 189 1 336 1 218 4 261 1 142 1 266 1 80 1 342 1 98 2 99 1 34 1 367 1 273 1 298 2 146 1 223 2 244 2 200 1 38 1 40 1 108 2 328 1 155 1 135 1 205 1 90 1 207 1 156 2 377 1 378 1 379 1 209 1 311 1 288 1 
234 1 216 1 53 1 189 1 336 1 218 3 142 1 80 1 195 1 98 1 34 1 367 1 298 1 128 1 223 1 244 2 38 1 282 1 326 1 108 1 135 1 155 1 90 1 156 2 91 1 72 1 228 1 378 1 288 1 
234 3 216 3 336 4 96 1 218 41 263 1 142 3 339 1 98 8 343 1 236 1 292 1 144 3 83 4 173 1 296 1 124 1 34 3 367 5 272 1 101 1 347 1 86 1 277 4 223 21 244 20 372 1 106 3 247 1 132 1 134 2 155 5 254 1 90 4 156 6 258 1 230 1 286 1 378 4 355 1 311 4 117 1 288 4 
234 4 216 4 336 4 96 1 218 38 263 1 142 4 339 1 98 7 343 1 236 1 292 1 144 3 83 4 173 1 296 1 124 1 34 4 367 4 272 1 101 1 347 1 86 1 277 4 223 18 244 20 372 1 106 3 247 1 132 1 134 2 155 5 254 1 90 3 156 8 258 1 230 1 286 1 378 3 355 2 311 4 117 1 288 4 
234 2 216 2 336 7 96 1 218 52 263 1 142 2 339 1 98 14 343 1 236 1 292 1 144 2 83 4 296 1 124 1 34 2 367 8 272 1 101 1 347 1 86 1 277 4 223 25 244 27 372 1 106 4 247 1 132 1 134 1 155 8 254 1 90 7 156 4 258 1 332 2 230 1 286 2 378 7 355 1 311 7 288 7 
234 2 216 2 336 3 218 19 263 1 142 2 98 6 144 1 83 2 124 1 34 2 367 3 101 1 277 2 223 10 244 9 372 2 106 1 107 1 247 1 134 1 155 3 90 3 156 4 230 1 286 1 378 3 311 3 117 1 288 3 
234 3 216 3 336 3 218 26 96 1 263 1 142 3 98 4 236 1 292 1 144 2 83 2 124 2 34 3 367 2 101 1 347 1 86 1 223 12 277 4 244 14 372 1 106 2 247 1 132 1 134 2 155 3 90 2 156 6 230 1 378 2 355 2 311 2 288 3 
275 1 149 1 320 1 139 1 170 1 25 1 63 1 259 1 116 1 333 1 
56 1 12 1 
50 1 275 1 149 1 139 1 179 1 63 1 259 1 66 1 116 1 
275 1 149 1 139 1 24 1 25 1 63 1 306 1 337 1 69 1 317 1 111 1 320 1 257 1 170 1 259 1 116 1 233 1 47 2 
275 1 149 1 139 1 24 1 25 1 63 1 306 1 337 1 69 1 317 1 111 1 320 1 257 1 170 1 259 1 116 1 233 1 47 2 
275 1 149 1 139 1 24 1 25 1 63 1 306 1 337 1 69 1 317 1 111 1 320 1 257 1 170 1 259 1 116 1 233 1 47 2 
330 1 51 1 59 1 
330 1 51 1 59 1 
301 1 168 1 
301 1 168 1 59 1 
160 1 335 1 
313 1 160 1 335 1 139 1 189 2 24 1 219 1 80 2 56 1 275 1 149 1 12 1 324 1 63 1 306 1 326 2 69 1 327 1 253 1 91 2 72 2 74 1 259 1 116 1 233 1 47 1 210 1 
330 1 51 1 
301 1 168 1 59 1 
234 1 136 2 216 1 189 2 218 2 165 1 142 1 266 1 80 2 6 1 99 2 34 1 273 1 146 1 244 1 223 1 38 1 282 1 283 1 130 1 17 1 110 1 89 1 135 1 376 1 91 2 156 2 207 2 379 1 209 2 380 1 
137 1 303 1 305 2 151 1 167 1 266 1 97 1 154 1 342 1 183 1 207 2 112 1 229 1 45 1 237 1 99 2 379 1 209 2 241 1 
186 1 303 1 305 2 151 1 167 1 97 1 266 1 154 1 207 1 112 1 229 1 45 1 237 1 99 1 379 1 209 1 241 1 
137 1 79 1 375 1 265 1 266 1 27 1 207 1 331 1 99 1 379 1 209 1 273 1 146 1 241 1 
137 1 303 1 305 2 151 1 167 1 97 1 266 1 154 1 183 1 207 1 112 1 229 1 45 1 237 1 99 1 379 1 209 1 241 1 
373 1 
234 1 214 1 216 1 189 3 218 1 142 1 266 1 80 3 123 1 99 1 34 1 273 1 146 1 128 2 223 1 200 1 38 1 40 1 326 2 328 1 135 1 205 1 156 2 207 1 91 2 72 2 377 1 331 1 379 1 380 1 209 1 210 1 
198 2 358 2 370 1 94 1 3 4 70 1 81 1 30 1 318 1 257 4 343 1 285 1 271 2 239 2 9 2 
267 1 10 1 199 1 358 1 257 1 285 1 9 1 
159 1 358 1 24 1 3 1 81 1 82 1 30 1 271 1 9 1 370 1 181 1 70 1 69 1 257 2 285 1 157 1 287 1 
94 1 336 2 3 12 342 1 58 1 57 2 99 3 8 2 239 6 146 3 9 8 10 1 242 1 198 6 203 1 70 4 69 5 155 2 256 2 207 3 113 1 257 8 157 5 208 3 209 3 354 1 158 2 358 2 315 1 24 5 164 2 266 3 267 1 81 4 318 2 30 4 271 6 367 2 273 10 85 2 321 2 370 4 133 2 284 2 182 2 90 2 377 3 331 1 285 9 379 4 287 3 93 2 49 2 288 2 
358 2 94 1 24 1 336 2 96 1 3 6 81 2 318 1 29 1 30 2 292 1 144 1 83 1 271 3 367 2 239 5 347 1 9 5 86 1 321 2 198 5 370 2 106 1 150 1 132 1 133 1 69 1 70 2 155 2 90 2 257 5 285 8 157 1 287 1 288 2 
214 1 189 1 24 1 80 1 339 1 81 1 30 1 196 1 293 1 84 1 33 1 296 1 367 1 9 2 321 2 128 1 14 1 370 1 326 1 133 1 70 1 69 1 155 2 254 1 308 1 91 1 72 1 285 2 
10 1 358 1 370 1 70 1 267 1 81 1 30 1 257 1 285 1 9 1 
321 2 198 5 336 2 3 10 133 1 155 2 90 2 257 5 285 5 93 1 271 5 367 2 239 5 288 2 9 5 
358 1 257 1 24 1 157 1 287 1 69 1 
314 1 94 2 24 3 95 1 265 1 266 1 81 1 58 2 194 1 27 1 30 2 318 2 99 4 273 1 146 1 9 2 39 1 370 2 203 1 70 2 69 3 207 4 331 2 285 2 157 4 379 1 287 2 209 4 211 1 
368 1 275 1 149 1 
368 1 275 1 149 1 
275 1 160 1 149 1 170 1 262 1 
368 1 275 1 149 1 
275 1 149 1 125 1 
275 1 149 1 125 1 
275 1 149 1 125 1 
275 1 149 1 
63 1 259 1 
234 1 216 1 218 8 263 1 142 1 339 1 98 2 343 1 144 1 83 1 34 1 296 1 367 1 272 1 347 1 223 4 244 4 106 1 155 1 254 1 156 2 258 1 311 2 
234 2 216 2 336 1 218 11 263 1 142 2 339 1 98 3 343 1 144 1 83 2 296 1 34 2 367 1 272 1 347 1 174 1 223 5 244 6 106 1 155 2 254 1 156 4 258 1 286 1 378 1 311 2 288 1 
234 3 216 3 336 2 218 19 96 1 263 1 142 3 339 1 98 4 343 1 144 1 292 1 83 1 296 1 34 3 367 3 272 1 174 1 347 1 86 1 223 10 244 9 106 1 132 1 155 3 254 1 90 2 156 6 258 1 378 1 311 3 355 1 288 2 
234 3 216 3 336 2 218 17 96 1 263 1 142 3 339 1 98 5 343 1 144 1 292 1 83 1 296 1 34 3 367 2 272 1 174 1 347 1 86 1 223 7 244 10 106 1 132 1 155 3 254 1 90 1 156 6 258 1 378 2 355 1 311 3 288 2 
234 1 216 1 218 8 263 1 142 1 339 1 98 2 343 1 144 1 83 1 34 1 296 1 367 1 272 1 347 1 223 4 244 4 106 1 155 1 254 1 156 2 258 1 311 2 
234 1 86 1 216 1 244 6 223 6 336 2 106 1 96 1 218 12 263 1 132 1 142 1 155 2 90 2 156 2 98 2 292 1 144 1 83 1 378 1 34 1 367 2 311 1 347 1 288 2 
234 4 216 4 336 2 218 18 96 1 263 1 142 4 339 1 98 5 343 1 292 1 144 1 83 1 296 1 34 4 367 2 272 1 347 1 174 1 86 1 223 8 244 10 106 1 132 1 155 3 254 1 90 1 156 8 258 1 378 2 311 3 355 2 288 2 
234 4 216 4 336 3 218 16 96 1 263 1 142 4 98 6 292 1 144 1 83 1 34 4 367 2 347 1 86 1 223 7 244 9 106 1 132 1 155 3 90 2 156 8 378 3 311 3 355 2 117 1 288 3 
223 4 244 3 218 7 339 3 155 1 254 3 98 6 258 2 378 3 296 1 367 1 272 1 311 3 
234 4 216 4 336 2 218 18 96 1 263 1 142 4 339 1 98 4 343 1 292 1 144 1 83 1 296 1 34 4 367 2 272 1 347 1 86 1 223 8 244 10 106 1 132 1 155 3 254 1 90 1 156 8 258 1 378 1 311 3 355 2 117 1 288 2 
234 2 216 2 223 4 244 4 218 8 142 2 155 1 339 1 254 1 156 4 98 3 343 1 258 1 378 1 296 1 34 2 367 1 311 2 355 1 272 1 
199 1 223 3 244 3 218 6 339 1 155 1 254 1 98 2 343 1 258 1 296 1 367 1 272 1 311 2 
234 1 216 1 223 2 244 2 336 1 218 4 142 1 155 1 90 1 156 2 98 2 378 1 34 1 367 1 311 1 174 1 288 1 
223 4 244 3 106 1 336 1 218 7 155 1 90 1 98 2 144 1 83 2 286 1 378 1 367 1 311 1 288 1 
234 2 76 1 216 2 336 2 218 23 142 2 339 2 98 9 343 1 83 2 296 1 34 2 367 3 272 1 11 1 244 11 223 12 106 2 155 3 254 2 90 2 156 4 258 1 332 1 378 4 286 1 311 5 355 2 288 2 
223 1 83 1 218 1 
244 1 106 1 218 1 
234 1 216 1 223 3 244 3 336 1 218 6 142 1 155 1 90 1 156 2 98 3 378 1 34 1 93 1 367 1 311 2 174 1 288 1 
234 1 86 1 216 1 244 6 223 6 336 2 106 1 96 1 218 12 263 1 132 1 142 1 155 2 90 2 156 2 98 2 292 1 144 1 83 1 378 1 34 1 367 2 311 1 347 1 288 2 
244 3 223 3 218 6 155 1 339 1 254 1 98 2 378 1 296 1 367 1 311 1 
234 1 11 1 216 1 244 1 223 2 218 3 142 1 339 1 254 1 156 2 98 2 258 1 378 1 34 1 311 1 355 1 272 1 
234 1 216 1 244 5 223 5 218 10 263 1 142 1 339 2 155 2 254 2 308 1 156 2 98 5 378 2 34 1 296 1 367 2 311 3 
234 1 216 1 244 2 218 2 263 1 142 1 155 1 156 2 98 1 378 1 34 1 288 1 
234 1 216 1 223 2 244 2 336 1 218 4 263 1 142 1 155 1 90 1 156 2 98 2 378 1 34 1 367 1 311 1 288 1 
234 3 11 1 216 3 223 2 244 1 218 3 263 1 142 3 339 1 254 1 156 6 98 2 378 1 34 3 355 1 311 1 117 1 
234 5 216 5 336 3 218 34 263 1 290 1 142 5 339 3 98 12 343 1 144 1 83 4 296 2 34 5 367 5 272 1 174 1 11 1 223 18 244 16 105 1 325 1 106 3 155 5 254 3 90 3 156 10 258 1 286 1 378 5 355 2 311 7 117 1 288 3 
5 1 172 1 312 1 
5 1 255 1 169 1 172 1 294 1 281 1 220 1 312 1 
199 1 27 1 207 1 331 1 99 1 379 1 209 1 273 1 146 1 265 1 266 1 
104 1 200 1 189 2 326 1 266 1 328 1 80 2 91 1 207 1 377 1 72 1 331 1 99 1 379 1 209 1 273 1 146 1 210 1 
322 1 77 1 104 1 200 1 189 2 326 2 284 1 266 1 328 1 80 2 58 1 91 2 207 1 377 2 72 1 293 1 99 1 379 1 209 1 273 3 49 1 146 2 210 1 
87 1 322 1 77 1 104 1 189 2 326 2 284 1 266 1 328 1 80 2 58 1 91 2 207 2 377 2 72 1 293 1 99 2 379 1 209 2 273 3 48 1 49 1 146 2 210 1 
158 1 87 1 358 1 24 2 284 1 69 2 166 1 266 1 58 1 57 1 235 1 207 3 377 1 331 1 257 1 157 1 99 3 379 1 208 1 209 3 273 4 49 1 146 1 
158 1 87 1 358 1 24 2 284 1 69 2 266 1 58 1 57 1 207 3 377 1 331 1 257 1 157 1 99 3 379 1 208 1 209 3 273 4 49 1 146 1 85 1 
207 1 187 1 99 1 379 1 209 1 266 1 
136 1 52 1 187 1 202 1 151 1 55 1 65 1 17 1 266 2 342 1 207 6 113 1 377 1 331 2 309 1 99 7 115 1 379 3 209 7 273 3 146 2 
234 2 53 1 189 2 142 2 342 1 339 1 98 2 343 1 99 1 296 1 298 1 146 1 104 1 244 3 200 1 108 1 110 1 155 1 205 1 254 1 207 1 156 4 72 1 114 1 258 1 209 1 311 2 210 2 216 2 261 1 218 6 266 1 80 2 34 2 367 1 272 1 273 1 223 3 38 2 40 1 282 1 326 1 328 1 135 2 91 1 377 1 379 1 
158 1 358 1 24 3 164 1 267 1 81 2 57 1 30 2 99 1 8 1 273 2 85 1 9 1 10 1 370 2 203 1 70 2 69 3 327 1 207 1 256 1 257 1 331 1 285 1 157 2 208 1 287 1 209 1 
342 1 57 1 113 1 207 2 377 1 187 1 99 2 379 2 354 1 209 2 273 2 146 1 266 1 
87 1 316 1 265 1 266 1 342 1 27 1 207 4 331 1 99 4 379 1 209 4 273 1 146 1 
243 1 362 1 65 1 266 1 268 1 58 1 207 2 377 1 309 1 99 2 379 2 209 2 273 1 146 1 
207 1 331 1 45 1 305 1 99 1 379 1 209 1 167 1 266 1 97 1 
151 1 17 1 266 1 342 1 207 2 6 1 99 2 379 1 209 2 273 1 146 1 
52 1 316 1 265 1 17 1 266 2 342 1 58 1 27 1 207 4 331 1 99 5 115 1 379 2 209 5 273 3 146 2 
357 1 52 1 316 1 265 1 17 1 266 2 342 1 58 1 27 1 207 4 331 1 99 5 379 2 209 5 273 3 146 2 
104 1 189 2 326 1 266 1 328 1 80 2 91 1 207 1 377 1 72 1 331 1 99 1 379 1 209 1 273 1 48 1 146 1 210 1 
202 1 65 1 266 1 58 1 207 1 113 1 377 1 309 1 99 1 379 2 209 1 273 1 146 1 
80 1 89 1 376 1 91 1 189 1 345 1 140 1 226 1 165 1 
161 1 304 1 345 1 
345 1 140 1 226 1 175 1 210 1 
158 1 322 1 36 1 77 1 358 1 161 1 24 2 304 1 226 2 140 2 68 1 327 1 69 2 19 1 257 1 293 1 345 1 175 2 210 1 
340 1 213 1 364 1 61 3 37 1 323 1 360 1 121 1 129 1 246 3 222 1 
26 1 0 1 73 1 129 1 
340 1 129 1 
340 1 199 1 360 1 129 1 
340 1 213 1 61 1 37 1 360 1 129 1 246 1 
1 1 238 1 246 1 
213 1 37 1 61 3 119 1 280 1 121 1 360 1 129 1 246 3 192 1 340 1 222 2 
340 1 177 1 213 1 61 2 37 1 323 1 360 1 129 1 246 2 
213 1 37 1 61 1 121 1 305 1 129 1 246 1 167 1 154 1 73 1 100 1 
340 1 213 1 61 1 37 1 121 1 129 1 246 1 
340 2 213 1 61 1 37 1 360 1 121 1 246 1 
213 2 37 2 61 2 121 1 369 1 129 1 246 2 340 1 143 1 344 1 
213 1 37 1 61 3 323 2 360 1 121 1 129 2 246 3 190 1 26 1 340 1 364 1 73 1 
213 1 37 1 61 2 323 1 360 1 121 1 178 1 305 2 129 1 246 2 167 1 340 1 154 1 229 1 45 1 
213 2 177 1 37 2 61 4 323 2 360 1 121 1 129 2 246 4 26 1 340 1 206 1 73 1 
340 1 213 1 61 1 37 1 360 1 121 1 129 1 246 1 
213 1 61 4 37 1 119 1 0 1 323 2 360 2 129 3 246 4 192 1 26 1 340 2 73 1 222 1 
213 1 118 1 37 1 61 2 323 1 121 1 360 1 129 1 246 2 180 1 340 1 4 1 
340 1 329 1 213 1 61 3 37 1 119 1 360 1 121 1 129 1 246 3 222 2 192 2 
129 2 371 2 141 1 43 1 
213 1 61 1 37 1 121 1 246 1 35 1 
340 1 213 1 364 1 61 2 37 1 323 1 360 1 121 1 129 1 246 2 
310 1 
340 1 213 1 61 1 37 1 360 1 121 1 129 1 246 1 

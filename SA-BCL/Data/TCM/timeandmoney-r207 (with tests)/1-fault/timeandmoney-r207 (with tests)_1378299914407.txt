#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
60 1 342 1 272 1 1 1 156 1 297 2 146 3 97 1 70 1 351 1 8 2 9 3 32 2 
60 1 333 1 86 2 155 1 43 1 233 1 87 1 183 2 1 1 156 2 70 6 158 2 8 2 9 9 32 2 188 1 267 1 342 3 272 1 317 1 297 5 171 1 146 9 97 4 351 1 82 1 230 1 40 2 
60 1 333 1 86 2 155 1 43 1 233 1 87 1 183 2 1 1 156 2 70 6 158 2 8 2 9 9 32 2 188 1 267 1 342 3 272 1 317 1 297 5 171 1 146 9 97 4 351 1 82 1 230 1 40 2 
60 1 333 1 86 2 155 1 43 1 233 1 87 1 183 2 1 1 156 2 70 7 158 2 8 2 9 10 32 2 188 1 267 1 342 4 272 1 317 1 297 6 171 1 146 10 97 5 351 1 82 1 230 1 40 2 
60 1 333 1 86 1 155 1 43 1 233 1 87 1 183 2 1 1 156 2 70 4 158 2 8 2 9 7 32 2 267 1 342 2 272 1 317 1 297 4 171 1 146 7 97 3 351 1 82 1 230 1 40 2 
60 1 342 1 86 2 272 1 155 1 183 1 1 1 297 3 146 4 70 3 97 2 158 1 8 1 9 4 32 1 230 1 40 1 188 1 
60 1 333 1 272 1 1 1 156 1 297 1 146 2 108 1 158 1 8 1 82 1 9 2 32 1 40 1 148 1 92 1 
60 1 86 2 155 1 87 1 183 1 1 1 156 1 70 7 158 1 8 2 9 9 32 2 188 1 91 1 342 3 272 1 317 1 345 1 297 5 146 9 97 4 351 1 230 1 40 1 
60 1 86 2 155 1 87 1 183 1 1 1 156 1 70 7 158 1 8 2 9 9 32 2 188 1 91 1 342 3 272 1 317 1 345 1 297 5 146 9 97 4 351 1 230 1 40 1 
127 1 241 1 369 1 195 1 307 1 316 1 287 1 286 1 53 1 337 1 110 1 137 1 161 1 73 1 
167 1 
284 1 167 1 208 1 307 1 287 2 319 1 161 2 45 1 
35 1 284 1 167 1 208 2 271 2 307 2 252 1 287 5 319 1 346 1 44 1 374 2 255 1 172 1 227 2 98 1 88 1 161 5 113 1 
167 1 319 1 361 1 
167 1 7 2 200 1 
53 2 39 1 241 2 337 1 316 2 286 2 110 2 137 2 
128 1 249 1 129 2 42 2 286 2 359 1 289 1 309 1 106 1 212 1 290 1 47 1 69 1 29 1 337 1 6 1 186 1 110 2 136 1 137 2 366 1 241 3 296 2 94 2 193 1 316 2 140 1 141 1 225 1 52 2 53 3 39 1 352 1 23 1 330 1 57 1 154 1 
127 1 53 1 241 1 337 1 195 1 316 1 286 1 110 1 137 1 73 1 
127 1 241 1 36 1 77 1 355 1 167 1 368 1 286 1 287 1 319 1 53 1 159 1 161 1 153 1 
127 1 241 1 36 1 77 1 355 1 167 1 368 1 316 1 286 1 287 2 319 1 53 1 110 1 137 1 161 2 
354 1 208 1 307 1 287 1 161 1 
284 1 167 1 208 1 307 1 287 2 319 1 161 2 26 1 
208 1 287 1 161 1 
53 3 39 1 219 1 241 3 316 3 286 3 110 3 137 1 
127 1 53 1 241 1 316 1 286 1 110 1 73 1 
127 1 53 1 241 1 103 1 316 1 364 1 286 1 110 1 137 1 
127 1 103 1 249 1 355 1 129 1 42 1 286 3 287 1 309 1 289 1 106 1 290 1 69 1 29 1 337 1 6 1 186 1 110 3 137 2 161 1 366 1 165 1 241 4 219 1 36 1 296 1 94 2 77 1 193 1 368 1 316 3 140 1 141 1 170 1 225 1 96 1 52 1 53 4 39 1 352 1 23 1 330 1 57 1 154 1 
53 2 39 1 241 2 219 1 316 1 209 1 286 2 110 1 153 1 
127 1 16 1 103 1 219 2 241 3 165 1 36 1 77 1 355 1 167 1 368 1 316 3 287 1 286 3 96 1 53 3 110 3 137 1 161 1 
219 1 103 1 241 2 316 2 286 2 3 1 53 2 110 2 137 1 124 1 
241 1 296 1 249 1 129 1 193 1 309 1 225 1 52 1 69 1 290 1 53 1 39 1 6 1 352 1 154 1 
241 1 296 1 249 1 129 1 273 1 309 1 52 1 69 1 290 1 53 1 39 1 6 1 352 1 203 1 154 1 
42 4 359 2 210 2 310 1 29 1 3 2 186 1 11 1 237 1 138 1 366 2 94 2 223 1 196 1 318 1 140 1 141 1 80 1 276 1 228 1 353 1 124 2 330 1 57 1 
127 1 53 1 241 1 355 1 316 1 286 1 110 1 327 1 
241 2 103 1 316 1 286 2 53 2 39 2 364 1 110 1 137 1 
3 1 210 1 124 1 
241 1 296 1 249 1 129 1 193 1 194 1 309 1 225 1 52 1 69 1 290 1 53 1 39 1 352 1 6 1 154 1 
219 1 241 2 249 1 296 1 129 1 193 1 316 1 286 1 309 1 225 1 96 1 52 1 290 1 69 1 53 2 352 1 6 1 110 1 124 1 154 1 
39 1 361 1 
102 1 219 2 241 5 103 1 316 4 209 1 286 5 96 1 53 5 39 1 110 4 25 1 137 1 153 1 
127 1 53 2 241 2 316 2 286 2 110 2 327 1 73 1 
4 1 30 1 162 1 
4 1 30 1 251 1 
4 1 30 1 251 1 
4 1 30 1 251 1 
34 1 4 1 30 1 
4 2 30 2 221 1 63 1 325 1 46 1 
4 1 30 1 
4 1 30 1 
325 1 46 1 
325 1 46 1 
325 1 46 1 
4 1 30 1 162 1 
4 1 30 1 162 1 
218 1 221 1 167 1 315 1 287 2 274 1 244 2 30 2 4 2 256 2 31 1 22 1 176 1 123 1 280 2 232 2 151 3 161 2 84 2 
336 1 287 1 286 2 256 1 4 1 30 1 31 1 363 1 260 1 110 2 161 1 34 1 241 2 139 1 316 2 242 1 53 2 39 1 55 1 151 1 232 1 280 1 329 1 84 1 
173 1 183 1 358 2 40 2 92 1 
158 1 183 1 40 1 
158 1 40 1 92 1 
173 1 49 1 358 1 183 2 40 3 92 1 
173 1 357 1 358 1 183 1 40 2 92 1 
284 1 208 1 307 4 285 1 252 2 336 1 287 5 107 2 310 1 7 3 11 1 236 2 88 3 161 5 14 1 139 1 167 2 271 1 78 2 242 1 243 1 346 1 319 1 142 1 80 1 374 1 227 1 301 1 228 1 200 1 278 1 179 1 
354 5 284 1 334 1 208 6 307 7 252 6 336 4 287 9 107 6 310 3 7 9 11 3 236 6 88 8 72 5 262 1 161 9 14 1 35 1 167 5 271 2 370 1 319 1 346 1 142 3 320 1 80 3 374 2 300 1 227 2 228 3 200 3 278 2 100 1 179 2 
307 2 336 1 252 2 287 3 107 2 310 1 7 4 11 1 88 3 236 2 161 3 35 1 167 3 271 1 78 1 243 1 319 1 142 1 374 1 80 1 227 1 301 1 228 1 200 2 278 1 179 1 
334 1 307 3 336 2 252 4 287 4 107 4 310 2 7 7 11 2 236 4 88 5 161 4 35 1 167 4 271 1 78 2 243 1 319 1 142 2 320 1 374 1 80 2 227 1 301 1 228 2 200 3 278 1 100 1 179 1 
249 1 352 1 
249 1 235 2 352 3 308 1 290 1 211 1 
112 1 
352 1 235 1 361 1 
352 1 189 1 
249 1 352 1 290 1 
352 1 38 1 
366 3 207 1 85 1 42 7 196 2 318 3 359 4 21 1 373 1 310 1 185 1 377 2 11 1 111 1 90 1 83 1 341 1 281 1 
207 1 42 31 359 16 310 4 311 1 185 2 186 1 293 1 11 4 90 1 111 2 341 2 75 1 295 1 366 15 166 3 268 1 94 2 115 1 196 5 318 10 140 1 21 1 142 3 80 3 373 5 349 1 228 3 377 3 83 2 178 4 281 1 330 1 57 1 
283 1 207 1 42 9 359 5 310 1 185 1 186 2 293 1 11 1 111 1 90 1 341 1 365 1 366 4 94 4 196 3 318 4 140 2 21 1 373 1 377 2 83 1 330 2 57 2 
366 3 207 1 42 7 196 2 318 3 359 4 21 1 373 1 310 1 185 1 377 2 11 1 111 1 90 1 83 1 341 1 281 1 
366 3 207 1 42 7 196 2 318 3 359 4 21 1 373 1 310 1 185 1 377 2 11 1 111 1 90 1 83 1 341 1 281 1 
58 2 249 1 129 1 356 1 253 2 156 2 69 1 6 1 8 1 9 1 32 1 163 2 296 1 79 1 52 1 146 1 147 1 352 1 279 1 56 1 324 1 27 1 154 1 
282 1 163 1 58 1 49 1 296 1 129 1 116 1 272 1 183 1 253 1 156 1 68 1 197 1 52 1 69 1 146 1 120 1 158 1 8 1 261 1 177 1 9 1 32 1 40 2 92 1 154 1 
58 1 60 1 129 1 183 1 253 1 1 1 156 1 68 1 28 1 69 1 70 1 158 1 8 1 9 2 261 1 32 1 92 1 163 1 296 1 49 1 116 1 272 1 297 1 197 1 52 1 146 2 120 1 177 1 40 2 154 1 
282 1 58 1 60 1 129 1 183 1 253 1 1 1 156 1 68 1 69 1 70 2 158 1 8 1 9 3 261 1 32 1 92 1 163 1 49 1 296 1 17 1 116 1 297 1 52 1 146 3 120 1 177 1 40 2 27 1 154 1 
282 1 58 1 60 1 129 1 183 1 253 1 1 1 156 1 68 1 69 1 70 2 158 1 9 2 261 1 92 1 163 1 296 1 17 1 49 1 297 1 52 1 146 2 177 1 40 2 154 1 
24 1 
284 3 129 2 335 2 287 4 6 2 7 2 88 2 340 1 339 2 12 2 296 2 346 1 52 2 298 1 352 1 200 2 247 1 101 2 154 1 305 1 304 2 249 1 62 2 208 6 252 2 69 1 313 1 161 4 217 1 367 1 222 2 167 1 271 1 79 1 372 2 374 1 227 1 277 1 279 1 121 1 323 1 179 1 
217 1 367 1 284 1 208 2 287 2 161 2 45 1 101 1 305 1 
217 1 367 1 222 1 62 1 287 1 161 1 305 1 
217 1 367 1 284 1 62 1 222 1 208 2 287 2 372 1 45 1 161 2 101 1 305 1 
127 1 284 3 335 2 287 4 286 1 45 1 337 1 88 1 137 1 339 2 12 2 241 1 195 1 344 1 346 1 53 1 298 1 54 1 200 2 205 1 101 4 305 1 304 2 62 3 208 7 252 1 360 1 110 1 161 4 73 1 217 1 367 1 222 3 167 2 271 1 369 1 316 1 319 2 372 4 374 1 227 1 323 1 326 1 
284 2 62 2 208 4 252 1 335 2 287 3 7 2 313 1 88 1 339 2 161 3 12 2 217 1 367 1 222 2 167 2 271 1 319 1 346 1 372 2 374 1 298 1 227 1 200 2 323 1 101 2 305 1 304 2 
284 2 62 2 208 4 252 1 335 2 287 3 88 1 339 2 161 3 12 2 217 1 367 1 222 2 167 1 271 1 344 1 319 1 346 1 372 2 374 1 298 1 54 1 227 1 200 2 323 1 205 1 101 2 305 1 304 2 
284 2 62 2 208 4 252 1 335 2 287 3 88 1 339 2 161 3 12 2 217 1 367 1 222 2 167 1 271 1 344 1 319 1 346 1 372 2 374 1 298 1 54 1 227 1 200 2 323 1 205 1 101 2 305 1 304 2 
284 2 62 2 208 4 252 1 335 2 287 3 234 2 7 2 88 1 161 3 240 1 217 1 367 1 222 2 167 1 271 1 319 1 346 1 372 2 374 1 375 1 54 1 227 1 322 2 323 1 328 1 101 2 305 1 304 2 
284 2 62 3 208 5 335 2 252 1 287 3 360 1 88 1 339 2 161 3 12 2 217 1 367 1 222 3 167 1 271 1 344 1 319 1 346 1 372 3 374 1 298 1 54 1 227 1 200 2 323 1 205 1 101 3 304 2 305 1 
284 2 62 3 208 5 335 2 252 1 287 3 360 1 88 1 339 2 161 3 12 2 217 1 367 1 222 3 167 1 271 1 344 1 319 1 346 1 372 3 374 1 298 1 54 1 227 1 200 2 323 1 205 1 101 3 304 2 305 1 
284 2 62 2 208 4 252 1 335 2 287 3 234 2 7 2 313 1 88 1 161 3 217 1 367 1 222 2 167 1 271 1 319 1 346 1 372 2 374 1 227 1 322 2 323 1 328 1 101 2 305 1 304 2 
94 2 42 2 223 1 318 1 141 1 140 1 359 2 210 1 373 1 80 1 310 1 3 1 29 1 276 1 186 1 124 1 330 1 57 1 
138 1 366 2 94 2 42 2 223 1 196 1 318 1 141 1 140 1 210 1 3 1 29 1 228 1 186 1 11 1 124 1 330 1 57 1 
42 4 359 2 210 2 310 1 29 1 3 2 186 1 11 1 366 2 94 2 223 1 196 1 318 2 140 1 141 1 142 1 80 1 373 1 228 1 124 2 330 1 57 1 
94 2 42 2 318 1 141 1 140 1 359 2 210 1 373 1 80 1 310 1 3 1 29 1 276 1 186 1 124 1 330 1 264 1 57 1 
138 1 366 2 94 2 42 2 196 1 318 1 141 1 140 1 210 1 3 1 29 1 228 1 186 1 11 1 124 1 330 1 264 1 57 1 
42 4 359 2 210 2 310 1 29 1 3 2 186 1 11 1 264 1 366 2 94 2 196 1 318 2 140 1 141 1 142 1 80 1 373 1 228 1 124 2 330 1 57 1 
366 2 94 2 42 4 196 1 318 2 141 1 140 1 359 2 210 2 142 1 373 1 80 1 310 1 3 2 29 1 228 1 186 1 11 1 124 2 330 1 57 1 
249 1 129 1 42 2 359 1 309 1 289 1 212 1 290 1 69 1 29 1 6 1 186 1 241 1 366 1 296 1 94 2 193 1 141 1 140 1 225 1 52 1 53 1 39 1 352 1 23 1 330 1 154 1 57 1 
249 1 129 1 42 2 359 1 309 1 212 1 290 1 69 1 29 1 134 1 6 1 186 1 241 1 366 1 296 1 94 2 273 1 141 1 140 1 52 1 53 1 39 1 352 1 23 1 203 1 330 1 154 1 57 1 
42 4 359 2 210 2 310 1 29 1 3 2 186 1 11 1 366 2 94 2 196 1 318 2 140 1 141 1 142 1 80 1 373 1 228 1 231 1 124 2 330 1 57 1 
249 1 129 1 42 4 359 2 210 2 309 1 289 1 310 1 290 1 69 1 28 1 3 2 29 1 186 1 11 1 164 1 366 2 241 1 296 1 94 2 193 1 196 1 318 2 141 1 140 1 142 1 373 1 80 1 225 1 52 1 53 1 228 1 352 1 124 2 330 1 154 1 57 1 
103 1 42 3 286 1 359 2 210 1 310 1 29 1 3 1 186 1 11 1 110 1 137 1 366 1 241 1 94 2 316 1 318 1 140 1 141 1 142 1 373 1 80 1 53 1 81 1 228 1 231 1 124 1 330 1 57 1 
282 1 249 2 129 8 42 2 286 1 359 1 157 1 2 1 28 1 69 2 212 1 29 2 292 1 6 2 186 2 110 1 136 2 264 1 191 1 241 1 219 1 366 1 296 7 94 4 223 1 79 1 316 1 140 2 141 2 52 8 299 1 53 1 352 3 23 1 279 1 330 2 379 1 154 2 57 2 
103 1 42 3 286 1 359 1 210 1 310 1 3 1 29 1 186 1 11 1 110 1 137 1 241 1 366 2 94 2 316 1 196 1 318 1 140 1 141 1 142 1 80 1 226 1 53 1 228 1 231 1 124 1 330 1 57 1 
207 1 42 6 359 3 210 1 361 1 310 1 3 1 29 1 186 1 11 1 90 1 341 1 366 3 94 2 223 1 196 2 318 2 140 1 141 1 21 1 39 2 377 1 83 1 124 1 330 1 57 1 
42 14 105 1 359 8 210 11 310 2 212 1 311 1 29 1 3 4 186 2 11 1 263 1 75 1 366 6 166 3 94 4 196 1 318 2 371 1 140 2 141 2 142 2 373 1 80 2 39 1 228 1 23 1 201 1 231 1 178 3 124 11 330 2 57 2 
249 1 129 1 42 2 286 1 359 1 309 1 290 1 69 1 212 1 3 1 29 1 6 1 186 1 110 1 241 2 219 1 366 1 296 1 94 2 193 1 194 1 316 1 141 1 140 1 20 1 225 1 52 1 96 1 53 2 39 1 352 1 23 1 231 1 330 1 125 1 378 1 154 1 57 1 
282 1 129 3 42 20 286 1 289 2 290 2 3 7 6 1 48 1 186 3 11 3 90 1 341 1 238 2 241 3 296 3 94 6 193 2 196 4 140 3 141 3 21 1 142 2 52 3 96 1 53 3 352 2 23 1 206 1 57 3 154 2 249 2 207 1 359 10 309 2 210 7 310 3 212 1 69 2 29 3 110 1 164 2 76 1 366 10 219 1 220 2 316 1 318 8 80 2 373 4 225 2 39 2 228 2 377 1 231 1 83 1 124 7 330 3 126 2 
283 1 61 1 42 19 359 9 67 1 310 3 311 1 312 1 186 2 187 2 10 1 11 3 33 2 74 1 75 1 366 10 166 1 94 4 196 3 318 6 140 2 142 3 80 3 373 3 228 3 178 2 303 1 330 2 180 1 57 2 
283 1 250 1 181 1 61 2 42 26 130 1 359 14 132 1 310 3 312 1 293 2 186 3 187 4 11 2 10 1 33 1 75 2 366 12 166 2 94 6 19 1 196 2 318 4 140 3 142 3 373 2 80 3 228 2 199 1 178 2 303 1 330 3 180 2 57 3 
283 1 207 1 250 1 181 1 61 2 42 41 130 1 359 20 132 1 310 5 311 1 312 1 293 1 186 3 187 4 10 1 11 5 90 1 341 1 33 1 74 1 75 3 366 21 166 3 94 6 19 1 196 4 318 8 140 3 21 1 142 4 80 4 373 4 145 1 228 4 377 1 199 1 83 1 178 4 303 1 330 3 180 1 57 3 
283 1 207 1 250 1 181 1 61 2 42 38 130 1 359 20 132 1 310 5 311 1 312 1 293 2 186 4 187 4 10 1 11 4 90 1 341 1 33 1 74 1 75 3 366 18 166 3 94 8 19 1 196 4 318 7 140 4 21 1 142 4 80 4 373 3 145 1 228 3 377 1 199 1 83 1 178 4 303 1 330 4 180 1 57 4 
283 1 207 1 250 1 181 1 61 1 42 52 130 1 359 27 132 1 310 8 311 2 312 1 293 1 186 2 187 4 10 1 11 8 90 1 341 1 33 1 75 2 366 25 166 4 94 4 19 1 196 7 318 14 371 2 140 2 21 1 142 7 80 7 373 7 228 7 377 1 199 1 83 1 178 4 303 1 330 2 180 1 57 2 
218 1 221 1 167 1 315 1 287 1 274 1 244 1 30 1 4 1 256 1 31 1 22 1 176 1 280 1 232 1 151 2 161 1 84 1 
218 1 221 1 167 1 315 1 287 1 274 1 244 1 30 1 4 1 256 1 31 1 22 1 176 1 280 1 232 1 151 2 161 1 84 1 
218 1 221 1 167 1 315 1 287 1 274 1 244 1 30 1 4 1 256 1 31 1 22 1 176 1 280 1 232 1 151 2 161 1 84 1 
63 1 18 1 162 1 
63 1 18 1 162 1 
251 1 135 1 
63 1 251 1 135 1 
363 1 329 1 
307 1 336 1 287 1 286 2 256 1 4 1 30 1 363 1 260 1 110 2 161 1 34 1 241 2 139 1 242 1 316 2 274 1 144 1 244 1 53 2 39 1 55 1 232 1 280 1 151 1 329 1 84 1 
218 1 256 1 4 1 30 1 221 1 22 1 232 1 280 1 331 1 84 1 
34 1 260 1 
256 1 4 1 30 1 232 1 280 1 190 1 119 1 265 1 84 1 
18 1 162 1 
63 1 251 1 135 1 
41 1 249 1 129 2 42 2 286 2 359 1 184 1 2 1 69 1 212 1 29 1 186 1 136 2 191 1 241 2 366 1 296 2 94 2 141 1 140 1 52 2 53 2 350 1 352 1 23 1 99 1 231 1 122 1 330 1 154 1 57 1 
249 1 296 1 129 1 79 1 253 1 52 1 69 1 5 1 291 1 147 1 352 1 6 1 279 1 154 1 
282 1 49 1 296 1 129 1 116 1 183 1 253 1 275 1 68 1 52 1 69 1 291 1 158 1 261 1 40 2 92 1 266 1 154 1 
282 1 49 1 296 2 129 2 116 1 183 1 253 1 275 1 68 1 52 2 69 1 28 1 291 1 158 1 261 1 40 2 92 1 154 1 266 1 
282 1 49 1 296 1 129 1 116 1 183 1 253 1 68 1 52 1 69 1 158 1 261 1 40 2 92 1 216 1 266 1 154 1 
131 1 
167 1 271 1 252 1 346 1 319 1 374 1 44 1 172 1 227 1 88 1 
220 1 167 5 252 5 254 1 142 2 80 2 107 5 310 2 321 2 7 10 228 2 200 5 11 2 236 5 88 5 
284 1 167 1 208 1 287 1 319 1 161 1 
249 1 284 2 129 4 208 4 252 2 287 3 66 1 69 1 6 2 88 2 161 3 35 1 296 4 192 2 271 2 79 1 346 1 374 2 224 1 52 4 227 2 174 1 352 1 277 2 279 1 121 1 247 1 179 2 154 1 
172 1 167 1 252 1 88 1 319 1 44 1 361 1 
284 1 208 1 252 1 287 1 7 1 88 1 339 1 161 1 12 1 167 2 271 1 346 1 319 1 374 1 298 1 227 1 200 1 
284 3 129 3 287 5 288 2 44 1 290 3 6 1 235 2 7 12 294 2 11 2 88 9 236 6 189 3 296 3 192 1 50 2 346 4 142 2 52 3 352 10 200 6 202 1 149 1 204 1 154 3 249 3 208 5 306 2 252 8 254 2 107 6 310 2 28 1 69 4 211 1 109 2 161 5 220 2 167 8 271 4 368 2 319 2 224 1 374 4 80 2 38 2 321 2 172 1 227 4 175 2 228 2 277 1 179 2 
284 1 181 1 208 1 130 1 65 1 252 5 287 1 254 1 107 5 132 1 310 2 7 6 11 2 236 5 88 8 161 1 75 1 166 1 167 5 271 2 19 1 346 2 319 2 142 2 374 2 80 2 348 1 321 2 227 2 228 2 277 1 199 1 200 3 178 1 179 1 
127 1 252 2 287 1 286 1 254 1 310 2 337 1 11 1 88 2 110 1 137 1 341 1 161 1 73 1 241 1 271 1 369 1 195 1 316 1 344 1 346 1 21 1 374 1 95 1 53 1 321 2 227 1 83 1 
249 1 129 1 42 1 286 2 289 1 309 1 106 1 69 1 290 1 29 1 337 1 6 1 186 1 110 2 137 2 366 1 241 3 296 1 94 2 193 1 316 2 140 1 141 1 225 1 52 1 53 3 39 1 352 1 23 1 330 1 57 1 154 1 
167 4 271 1 252 2 346 1 319 2 107 2 374 1 227 1 7 4 377 1 200 2 277 1 236 2 88 1 179 1 
256 1 93 1 84 1 
256 1 89 1 84 1 
256 1 89 1 84 1 
256 1 89 1 84 1 
256 1 84 1 
4 1 30 1 
256 1 363 1 22 1 347 1 84 1 
256 1 93 1 84 1 
256 1 93 1 84 1 
283 1 366 5 94 2 42 10 196 3 318 5 140 1 359 5 21 1 373 2 95 1 310 2 186 1 11 2 83 2 341 2 330 1 57 1 
283 1 94 2 42 2 318 1 140 1 359 2 80 1 373 1 310 1 186 1 330 1 57 1 
283 1 366 2 94 2 42 4 196 1 318 2 140 1 359 2 142 1 80 1 373 1 310 1 228 1 186 1 11 1 330 1 57 1 
283 1 366 2 94 6 42 3 196 1 318 2 140 3 359 1 373 1 259 1 293 1 186 3 83 1 341 1 74 1 330 3 57 3 
283 1 207 1 42 34 359 16 310 5 311 1 259 1 293 2 186 5 11 5 90 1 341 3 74 1 75 1 295 1 366 18 268 1 269 1 166 3 94 10 196 7 318 12 140 5 21 2 142 3 80 3 373 5 349 1 228 3 377 1 83 3 178 4 330 5 57 5 
283 1 207 1 42 8 359 4 310 1 186 1 11 1 90 1 341 1 75 1 366 4 166 1 94 2 19 1 196 2 318 2 140 1 21 1 377 1 178 1 83 1 330 1 57 1 
283 1 207 1 42 11 359 6 310 2 311 1 186 2 11 1 90 1 341 1 75 1 366 5 269 1 166 1 94 4 19 1 196 2 318 3 140 2 21 1 142 1 80 1 373 1 377 1 83 1 178 2 330 2 57 2 
283 1 207 1 181 1 42 19 130 1 359 9 132 1 310 3 186 3 293 1 11 3 90 1 341 1 75 1 366 10 269 1 166 1 94 6 19 1 196 3 318 4 140 3 21 1 142 2 373 1 80 2 228 2 377 1 199 1 83 1 178 1 330 3 57 3 
283 1 207 1 181 1 42 17 130 1 359 10 132 1 310 3 293 1 186 3 11 2 90 1 341 1 75 1 366 7 269 1 166 1 94 6 19 1 196 3 318 5 140 3 21 1 142 2 373 2 80 2 228 1 377 1 199 1 83 1 178 1 330 3 57 3 
283 1 207 1 42 8 359 4 310 1 186 1 11 1 90 1 341 1 75 1 366 4 166 1 94 2 19 1 196 2 318 2 140 1 21 1 377 1 178 1 83 1 330 1 57 1 
283 1 181 1 42 12 130 1 359 6 132 1 310 2 186 1 11 2 75 1 366 6 166 1 94 2 19 1 196 1 318 2 140 1 142 2 373 1 80 2 228 2 199 1 178 1 330 1 57 1 
283 1 207 1 181 1 42 18 130 1 359 10 132 1 310 3 186 4 293 2 11 2 90 1 341 1 75 1 366 8 269 1 166 1 94 8 19 1 196 3 318 5 140 4 21 1 142 2 373 2 80 2 228 1 377 1 199 1 83 1 178 1 330 4 57 4 
283 1 181 1 42 16 130 1 359 9 132 1 310 3 186 4 293 2 11 2 74 1 75 1 366 7 166 1 94 8 19 1 196 3 318 6 140 4 142 3 373 3 80 3 228 2 199 1 178 1 330 4 57 4 
366 4 207 2 42 7 196 3 318 6 359 3 21 1 373 3 310 1 11 1 90 1 83 3 341 3 
283 1 207 1 181 1 42 18 130 1 359 10 132 1 310 3 186 4 293 2 11 2 90 1 341 1 74 1 75 1 366 8 166 1 94 8 19 1 196 3 318 4 140 4 21 1 142 2 373 1 80 2 228 1 377 1 199 1 83 1 178 1 330 4 57 4 
366 4 94 4 207 1 42 8 196 2 318 3 359 4 140 2 21 1 373 1 310 1 377 1 186 2 293 1 11 1 90 1 83 1 341 1 330 2 57 2 
366 3 207 1 42 6 377 1 11 1 196 2 318 2 359 3 90 1 21 1 83 1 341 1 361 1 310 1 
366 2 269 1 94 2 42 4 196 1 318 2 140 1 359 2 142 1 80 1 373 1 310 1 228 1 186 1 11 1 330 1 57 1 
366 4 166 1 42 7 196 1 318 2 359 3 142 1 80 1 373 1 310 1 311 1 228 1 11 1 178 2 75 1 
207 1 42 23 105 1 359 11 310 3 311 1 259 1 293 2 186 2 11 3 90 1 341 2 366 12 166 2 94 4 196 5 318 9 371 1 140 2 21 1 142 2 373 4 80 2 228 2 377 1 83 2 178 2 330 2 57 2 
366 1 42 1 178 1 
166 1 42 1 359 1 
220 1 366 3 269 1 94 2 42 6 196 2 318 3 140 1 359 3 142 1 80 1 373 1 310 1 228 1 186 1 11 1 330 1 57 1 
283 1 181 1 42 12 130 1 359 6 132 1 310 2 186 1 11 2 75 1 366 6 166 1 94 2 19 1 196 1 318 2 140 1 142 2 373 1 80 2 228 2 199 1 178 1 330 1 57 1 
366 3 42 6 196 1 318 2 359 3 21 1 373 1 310 1 11 1 83 1 341 1 
366 2 207 1 94 2 42 3 196 1 318 2 359 1 140 1 373 1 259 1 293 1 186 1 90 1 83 1 341 1 330 1 57 1 
53 1 39 1 241 1 209 1 286 1 153 1 152 1 
241 1 168 1 209 1 286 1 37 1 213 1 53 1 39 1 71 1 229 1 152 1 153 1 
296 4 249 1 129 4 79 1 52 4 69 1 28 1 245 1 6 1 352 1 279 1 160 1 154 1 
76 1 296 2 249 1 192 1 129 2 169 1 52 2 290 1 69 2 352 1 246 1 239 1 215 1 154 1 
296 1 129 1 6 1 158 1 40 1 68 1 92 1 52 1 69 1 154 1 
191 1 282 1 249 1 296 2 129 2 352 1 99 1 52 2 69 1 154 1 28 1 
191 1 296 4 249 2 192 1 129 5 79 1 52 5 28 1 69 2 292 1 245 1 6 1 352 3 279 1 154 2 379 1 
191 1 296 4 249 2 192 1 129 5 79 1 0 1 52 5 28 1 69 2 245 1 6 1 352 3 279 1 154 2 379 1 
249 1 296 1 129 1 352 1 6 1 79 1 279 1 361 1 52 1 69 1 154 1 
219 1 241 2 249 1 296 1 129 1 193 1 316 1 286 1 309 1 52 1 290 1 69 1 53 2 39 1 352 1 6 1 110 1 154 1 
127 1 249 2 129 1 355 1 286 2 309 1 69 1 290 2 294 1 110 2 241 2 219 1 296 1 192 1 77 1 193 1 316 1 52 1 38 1 53 2 39 1 352 3 154 1 
127 1 249 2 129 2 355 1 286 2 309 1 69 1 290 2 160 1 294 1 110 2 241 2 219 1 296 2 192 1 77 1 316 1 273 1 52 2 38 1 53 2 39 1 352 3 154 1 
59 1 249 1 129 3 208 1 287 2 69 1 362 1 290 1 235 1 6 1 160 1 294 1 189 1 161 2 296 3 192 1 167 1 368 1 319 1 52 3 38 1 352 4 154 1 
249 1 296 3 192 1 129 3 167 1 208 1 368 1 306 1 287 2 319 1 52 3 38 1 290 1 69 1 6 1 352 4 235 1 160 1 294 1 161 2 189 1 154 1 
299 1 296 1 129 1 52 1 69 1 154 1 
282 1 191 1 296 6 249 2 129 7 117 1 169 1 157 1 52 7 28 1 211 1 290 1 69 3 299 1 292 1 6 2 352 3 136 1 379 1 215 1 154 2 
129 1 42 6 286 1 289 1 290 1 3 1 186 2 11 1 90 1 341 1 238 1 241 2 296 1 94 4 193 1 196 2 140 2 141 2 21 1 52 1 53 2 350 1 352 1 57 2 154 1 249 1 207 1 359 3 309 1 210 1 310 1 28 1 69 1 29 2 110 1 164 1 219 1 366 3 316 1 318 2 225 1 39 2 377 1 231 1 83 1 124 1 330 2 
284 1 129 1 208 2 306 1 307 1 252 1 287 3 44 1 6 1 235 1 109 1 88 1 161 3 189 1 296 1 167 1 271 2 50 1 368 1 319 1 346 2 374 2 224 1 52 1 172 1 227 2 175 1 352 2 
296 2 249 1 129 2 52 2 28 1 211 1 290 1 69 2 299 1 235 1 352 2 149 1 154 1 
219 1 241 2 249 1 296 1 129 1 316 1 286 1 273 1 309 1 52 1 290 1 69 1 53 2 39 1 352 1 6 1 110 1 154 1 
296 1 249 1 192 1 129 1 117 1 169 1 52 1 211 1 290 1 69 2 352 1 215 1 154 1 
53 1 41 1 241 1 198 1 376 1 286 1 122 1 184 1 13 1 
270 1 258 1 13 1 
39 1 198 1 376 1 64 1 13 1 
127 1 165 1 270 1 36 1 355 1 77 1 167 1 368 1 64 2 307 1 287 2 319 1 143 1 39 1 198 2 376 2 258 1 161 2 13 1 
60 1 8 1 9 1 272 1 32 1 1 1 297 1 146 1 
332 1 333 1 60 2 342 1 1 2 297 3 146 4 133 1 70 2 97 1 8 1 302 1 9 4 32 1 
70 1 60 1 114 1 8 1 104 1 9 2 272 1 32 1 1 1 91 1 297 1 146 2 
333 2 60 1 272 1 51 1 1 1 297 1 146 3 133 2 8 1 302 1 9 3 32 1 
214 2 182 1 248 1 297 2 
8 1 9 1 272 1 32 1 150 1 146 1 
70 1 60 1 8 1 9 2 272 1 87 1 32 1 1 1 297 1 146 2 
338 1 
60 1 8 1 9 1 272 1 32 1 1 1 297 1 146 1 
60 1 1 1 297 1 361 1 
60 1 8 1 9 1 32 1 1 1 297 1 146 1 
163 1 156 1 146 1 
333 2 60 1 272 1 1 1 297 1 146 3 133 1 257 1 8 1 9 3 302 1 32 1 
70 1 60 1 86 1 8 1 9 2 32 1 1 1 297 1 146 2 
97 1 158 1 8 1 155 1 9 1 272 1 183 1 32 1 40 1 297 1 146 1 
8 1 9 1 272 1 32 1 1 1 297 1 146 1 
60 1 8 1 9 1 272 1 32 1 1 2 146 1 
15 1 314 1 8 2 9 2 272 1 32 2 1 1 118 1 297 1 146 2 
60 1 342 1 272 1 317 1 87 1 1 1 297 2 146 3 70 2 97 1 8 1 9 3 32 1 
60 1 49 1 343 1 272 1 183 1 1 1 297 1 146 2 70 1 158 1 8 1 9 2 32 1 40 2 92 1 
60 1 342 1 86 1 272 1 1 1 297 2 146 4 70 2 97 1 8 2 9 4 32 2 188 1 
333 1 60 1 272 1 87 1 1 1 297 1 146 3 70 1 8 1 9 3 32 1 
332 1 97 1 342 1 297 1 
1 1 297 1 

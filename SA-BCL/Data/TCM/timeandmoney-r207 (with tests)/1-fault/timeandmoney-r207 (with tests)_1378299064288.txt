#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) (259,301) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (259,301) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) (259,301) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (22,159,226,328) (22,159,226,328) (22,159,226,328) 86 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
207 1 190 1 168 1 
207 1 134 1 101 2 
255 1 315 2 261 2 107 2 199 2 142 2 15 2 291 1 
94 1 0 1 266 1 272 1 142 2 225 2 15 3 274 1 145 1 55 1 228 1 107 2 109 1 108 2 239 1 64 1 158 1 315 3 245 1 281 1 67 2 31 1 200 1 199 2 291 1 326 1 255 1 171 2 330 1 209 1 294 1 261 2 212 1 126 1 216 1 334 2 45 1 
315 1 261 1 107 1 114 1 199 1 139 1 34 1 142 1 15 1 291 1 
25 1 65 1 315 1 112 1 303 1 34 1 15 1 168 1 207 1 257 1 261 1 20 1 332 1 194 1 
25 1 65 1 315 1 112 2 199 1 303 1 34 1 142 1 15 1 168 1 207 1 257 1 261 1 107 1 332 2 
150 1 112 1 268 1 332 1 113 1 
207 1 265 1 150 1 112 2 99 1 332 2 113 1 168 1 
112 1 332 1 113 1 
315 1 112 1 114 1 139 1 199 1 34 1 142 1 291 1 15 1 150 1 261 1 21 1 332 1 107 1 
207 1 
207 1 150 1 112 2 99 1 332 2 113 1 91 1 168 1 
157 1 112 5 99 1 4 1 165 1 113 2 14 1 168 1 207 1 40 2 150 2 59 1 332 5 277 2 89 1 175 1 154 1 92 1 241 2 
255 1 190 1 
97 1 315 2 199 1 142 1 15 2 255 2 261 2 107 1 263 1 
271 1 202 1 51 1 
315 1 266 1 245 1 225 1 15 1 255 1 145 1 55 1 228 1 330 1 209 1 211 1 108 1 334 1 239 1 64 1 
245 1 315 2 266 1 199 1 142 1 225 1 15 2 51 1 145 1 55 1 228 1 330 1 209 1 261 1 191 1 331 1 108 1 334 1 239 1 64 1 
315 5 138 1 199 4 325 1 142 4 15 5 255 1 106 1 261 5 20 1 331 2 191 1 107 1 263 1 
315 2 261 2 114 1 297 1 199 2 34 1 142 2 15 2 
255 1 315 3 261 3 331 1 107 1 199 3 142 3 15 3 
315 1 261 1 114 1 199 1 34 1 142 1 15 1 
97 1 315 1 261 1 107 1 199 1 34 1 142 1 15 1 263 1 
0 1 266 1 303 1 272 1 12 1 142 3 225 1 15 4 274 1 145 1 55 1 228 1 191 1 107 2 109 1 108 1 61 1 239 1 64 1 158 1 25 1 65 1 245 1 315 4 112 1 67 2 31 1 200 1 199 3 34 1 326 1 291 1 255 1 257 1 171 1 330 1 209 1 261 3 331 1 126 1 332 1 216 1 334 1 263 1 
255 1 315 2 261 2 20 1 331 1 138 1 199 1 142 1 15 2 
65 1 25 1 315 3 112 1 199 3 303 1 34 1 142 3 15 3 207 1 257 1 261 3 191 1 331 2 107 1 332 1 44 1 61 1 263 1 
315 2 261 2 331 1 107 1 199 2 271 1 142 2 15 2 263 1 51 1 
315 1 266 1 245 1 225 1 15 1 255 1 145 1 55 1 228 1 330 1 209 1 108 1 334 1 239 1 64 1 
315 1 245 1 225 1 15 1 255 1 145 1 228 1 330 1 152 1 209 1 236 1 108 1 334 1 239 1 64 1 
0 1 1 1 269 1 272 1 271 2 186 1 51 2 17 1 151 1 109 1 281 2 67 2 31 1 69 1 200 1 202 2 252 1 118 1 171 4 172 1 87 1 173 1 126 2 216 1 
25 1 315 1 261 1 199 1 297 1 34 1 142 1 15 1 
295 1 305 1 
295 1 305 1 
123 1 198 1 
123 1 198 1 
123 1 198 1 
295 1 318 1 305 1 
295 1 242 1 305 1 
123 1 295 2 306 1 198 1 90 1 305 2 
295 1 318 1 305 1 
295 1 318 1 305 1 
256 1 295 1 305 1 
256 1 295 1 305 1 
256 1 295 1 305 1 
98 1 270 1 183 1 142 2 15 2 305 1 148 1 233 1 60 1 155 1 308 1 156 1 242 1 315 2 314 1 112 1 317 1 197 1 199 2 255 1 119 1 295 1 261 2 332 1 
98 2 112 2 317 2 164 1 5 1 137 1 286 1 141 1 305 2 207 1 119 1 57 1 295 2 306 1 332 2 60 2 153 2 155 3 156 2 
102 1 37 1 131 1 
124 1 102 1 37 1 
124 1 102 3 249 1 251 1 131 2 105 1 
299 1 124 1 102 2 249 1 131 1 105 1 
124 1 102 2 249 1 131 1 105 2 
134 1 177 1 99 1 269 1 101 3 270 1 14 1 148 1 150 4 151 1 232 1 235 1 59 2 277 1 308 1 241 1 244 2 112 5 162 2 247 1 113 1 70 1 203 1 75 1 168 1 40 1 207 2 172 1 87 1 332 5 130 2 92 3 
134 3 177 3 268 5 99 1 4 1 269 3 101 9 143 1 14 1 187 1 148 4 150 7 151 3 235 1 59 6 277 2 241 2 244 6 160 1 112 9 113 6 203 2 75 2 79 1 168 1 207 5 40 2 42 5 260 1 172 3 87 3 332 9 127 1 130 6 92 8 
134 2 177 1 4 1 269 1 101 4 148 1 150 2 151 1 277 1 59 2 241 1 244 2 112 3 162 1 247 1 70 1 203 1 75 1 168 1 207 3 40 1 172 1 87 1 332 3 130 2 92 3 
134 3 177 2 4 1 269 2 101 7 187 1 148 2 150 3 151 2 277 1 59 4 241 1 244 4 112 4 162 2 247 1 70 1 203 1 75 1 168 1 207 4 40 1 260 1 172 2 87 2 332 4 127 1 130 4 92 5 
209 1 190 1 38 1 
18 1 209 1 
120 1 
228 1 209 1 239 1 
209 1 289 1 
209 1 239 1 
228 1 209 3 300 1 239 1 38 2 117 1 
264 1 66 1 281 4 269 1 182 1 304 2 324 1 252 3 253 1 167 1 118 2 171 7 151 1 19 1 126 3 240 1 310 1 
264 1 66 1 281 4 269 1 182 1 304 2 324 1 252 3 253 1 167 1 118 2 171 7 151 1 19 1 126 3 240 1 310 1 
264 1 66 1 281 4 269 1 182 1 304 2 324 1 252 3 253 1 167 1 118 2 171 7 151 1 19 1 126 3 240 1 310 1 279 1 
0 1 264 5 177 3 7 1 269 4 182 1 103 4 304 3 151 4 19 2 109 1 193 1 240 1 310 2 66 2 281 16 316 1 283 1 67 2 200 1 324 1 253 1 252 10 167 2 36 1 118 5 292 1 171 31 172 3 87 3 88 1 126 15 216 1 132 3 
0 2 264 1 269 1 182 1 304 2 224 1 151 1 19 1 109 2 240 1 111 1 310 1 281 5 66 1 283 1 67 4 200 2 252 4 253 1 167 1 118 3 171 9 126 4 216 2 
328 1 86 1 22 1 35 1 226 1 
328 1 301 1 22 1 35 1 226 1 
159 1 259 1 22 1 35 1 
328 1 301 1 22 1 35 1 226 1 
328 1 86 1 22 1 35 1 226 1 
321 1 
95 2 3 1 99 3 101 2 273 1 14 1 15 1 16 1 20 1 277 1 108 2 194 1 25 1 112 5 282 4 196 1 33 1 32 1 113 6 34 1 287 2 116 1 207 2 40 1 41 2 209 1 296 2 214 1 134 2 135 1 219 1 302 1 303 1 49 2 225 2 59 2 238 1 239 1 64 2 241 1 65 1 245 1 315 1 71 2 73 2 75 1 323 1 168 1 257 1 330 1 261 1 332 5 334 2 262 1 92 2 
65 1 25 1 315 1 112 3 99 1 282 2 196 1 113 2 303 1 34 1 287 1 116 1 15 1 16 1 257 1 261 1 20 1 332 3 214 1 262 1 91 1 194 1 
95 1 65 1 25 1 315 1 112 3 99 1 282 3 196 1 113 1 303 1 34 1 116 1 15 1 168 1 16 1 207 1 257 1 261 1 20 1 332 3 214 1 262 1 91 1 194 1 
95 1 99 1 303 1 15 1 16 1 20 1 194 1 25 1 65 1 315 1 112 3 282 3 196 1 113 2 34 1 116 1 287 1 168 1 207 1 257 1 41 1 261 1 332 3 214 1 262 1 91 1 
95 4 99 3 273 1 15 1 14 1 16 1 20 1 277 1 194 1 25 1 112 5 282 6 196 1 113 7 34 1 287 4 116 1 288 1 207 5 40 1 293 1 41 4 296 2 214 1 134 2 48 1 302 1 303 1 49 2 59 1 307 1 241 1 65 1 315 1 71 2 250 1 73 2 168 5 257 1 261 1 332 5 262 1 91 1 92 1 
95 2 99 2 101 2 273 1 15 1 14 1 16 1 20 1 277 1 194 1 25 1 112 4 282 4 196 1 113 4 34 1 116 1 287 2 40 1 207 2 41 2 296 2 214 1 134 2 302 1 303 1 49 2 59 1 238 1 241 1 65 1 315 1 71 2 73 2 168 1 257 1 261 1 332 4 262 1 92 1 
95 2 134 2 48 1 99 2 302 1 303 1 49 2 273 1 15 1 14 1 16 1 20 1 59 1 277 1 241 1 194 1 25 1 65 1 315 1 112 4 282 4 196 1 113 4 71 2 34 1 250 1 287 2 73 2 116 1 288 1 168 1 207 1 40 1 257 1 41 2 296 2 261 1 332 4 214 1 262 1 92 1 
95 2 134 2 48 1 99 2 302 1 303 1 49 2 273 1 15 1 14 1 16 1 20 1 59 1 277 1 241 1 194 1 25 1 65 1 315 1 112 4 282 4 196 1 113 4 71 2 34 1 250 1 287 2 73 2 116 1 288 1 168 1 207 1 40 1 257 1 41 2 296 2 261 1 332 4 214 1 262 1 92 1 
95 2 48 1 99 2 101 2 302 1 303 1 49 2 13 2 15 1 14 1 16 1 20 1 59 1 277 1 241 1 194 1 25 1 65 1 27 2 315 1 112 4 282 4 246 1 196 1 113 4 71 2 322 1 34 1 287 2 116 1 168 1 207 1 40 1 257 1 41 2 261 1 174 1 332 4 214 1 262 1 92 1 
134 2 95 3 48 1 99 2 302 1 303 1 49 2 273 1 14 1 15 1 16 1 20 1 59 1 277 1 241 1 194 1 25 1 65 1 315 1 112 4 282 5 196 1 71 2 113 5 250 1 34 1 73 2 116 1 287 3 288 1 168 1 207 1 40 1 257 1 293 1 41 3 296 2 261 1 332 4 214 1 262 1 92 1 
134 2 95 3 48 1 99 2 302 1 303 1 49 2 273 1 14 1 15 1 16 1 20 1 59 1 277 1 241 1 194 1 25 1 65 1 315 1 112 4 282 5 196 1 71 2 113 5 250 1 34 1 73 2 116 1 287 3 288 1 168 1 207 1 40 1 257 1 293 1 41 3 296 2 261 1 332 4 214 1 262 1 92 1 
95 2 99 2 101 2 302 1 303 1 49 2 13 2 14 1 15 1 16 1 20 1 59 1 277 1 238 1 241 1 194 1 25 1 65 1 27 2 315 1 112 4 282 4 196 1 113 4 71 2 34 1 287 2 116 1 168 1 207 1 40 1 257 1 41 2 261 1 332 4 174 1 214 1 262 1 92 1 
0 1 269 1 182 1 271 1 272 1 304 1 186 1 51 1 151 1 190 1 19 1 109 1 240 1 66 1 281 3 67 2 31 1 200 1 202 1 253 1 252 2 118 2 255 2 171 6 126 3 216 1 
94 1 96 1 0 2 264 1 177 2 100 1 269 1 103 3 272 2 271 4 51 11 149 1 151 2 109 2 193 1 158 1 281 8 316 1 67 4 31 1 200 2 202 11 252 2 118 1 255 1 208 1 171 14 172 2 87 1 126 6 216 2 176 1 132 3 
0 1 94 1 266 1 271 1 272 1 225 1 142 1 15 2 145 1 55 1 228 1 149 1 191 1 108 1 109 1 239 1 64 1 158 1 245 1 315 2 281 1 31 1 67 2 200 1 199 1 76 1 255 1 330 1 171 2 209 1 261 1 211 1 331 1 126 1 334 1 215 1 216 1 298 1 
94 1 0 3 264 4 266 2 177 2 269 3 182 1 272 3 271 7 184 2 15 3 19 1 191 1 108 3 109 3 281 10 30 2 285 1 31 3 199 1 200 3 202 7 118 4 206 1 209 2 126 10 216 3 304 1 225 3 142 1 51 7 145 2 147 2 55 2 228 2 149 1 151 3 239 2 240 1 64 1 158 1 315 3 245 2 66 1 67 6 253 1 252 8 326 2 255 2 169 2 170 1 171 20 330 2 172 2 261 1 87 2 331 1 333 1 334 3 
0 2 94 1 3 1 8 1 272 2 140 1 142 1 225 7 186 1 15 1 108 8 109 2 278 1 23 1 239 2 64 2 158 1 315 1 245 2 281 1 67 4 31 2 68 1 33 1 199 1 200 2 82 1 170 1 330 2 171 2 122 1 209 3 210 1 261 1 331 1 126 1 334 8 216 2 45 2 
0 1 177 1 269 1 271 1 272 1 142 1 15 1 51 1 146 1 149 1 151 1 107 1 109 1 315 1 281 1 67 2 31 1 200 1 199 1 202 1 252 1 118 1 171 3 172 1 261 1 87 1 126 2 216 1 263 1 
0 1 264 1 281 2 31 1 67 2 69 1 200 1 271 1 202 1 272 1 252 1 186 1 51 1 171 2 151 1 172 1 216 1 109 1 
0 1 31 1 67 2 269 1 200 1 271 1 202 1 272 1 252 1 186 1 118 1 51 1 171 2 173 1 87 1 126 2 216 1 109 1 
0 1 264 1 177 1 281 2 269 1 31 1 67 2 200 1 271 2 202 2 272 1 252 2 186 1 118 1 51 2 171 4 151 1 172 1 87 1 126 2 216 1 109 1 
0 1 264 1 281 2 31 1 67 2 69 1 200 1 271 1 202 1 272 1 252 1 51 1 171 2 151 1 172 1 216 1 109 1 23 1 
0 1 31 1 67 2 269 1 200 1 271 1 202 1 272 1 252 1 118 1 51 1 171 2 173 1 87 1 126 2 216 1 109 1 23 1 
0 1 264 1 177 1 269 1 272 1 271 2 51 2 151 1 109 1 23 1 281 2 67 2 31 1 200 1 202 2 252 2 118 1 171 4 172 1 87 1 126 2 216 1 
0 1 264 1 177 1 281 2 269 1 31 1 67 2 200 1 271 2 202 2 272 1 252 2 118 1 51 2 171 4 151 1 172 1 87 1 126 2 216 1 109 1 
94 1 0 1 266 1 272 1 225 1 15 1 145 1 55 1 228 1 108 1 109 1 239 1 64 1 158 1 245 1 315 1 281 1 31 1 67 2 200 1 326 1 255 1 171 2 330 1 209 1 126 1 334 1 216 1 
94 1 0 1 2 1 272 1 225 1 15 1 145 1 228 1 152 1 236 1 108 1 109 1 239 1 64 1 158 1 245 1 315 1 281 1 31 1 67 2 200 1 255 1 171 2 330 1 209 1 126 1 334 1 216 1 
0 1 264 1 177 1 281 2 269 1 31 1 67 2 200 1 271 2 202 2 272 1 252 2 118 1 51 2 171 4 149 1 151 1 172 1 87 1 126 2 216 1 109 1 
0 1 264 1 266 1 177 1 269 1 8 1 271 2 272 1 225 1 15 1 51 2 145 1 55 1 147 1 228 1 151 1 108 1 109 1 239 1 245 1 315 1 281 2 31 1 67 2 200 1 202 2 252 2 326 1 118 1 171 4 330 1 209 1 172 1 87 1 126 2 334 1 216 1 
0 1 264 1 177 1 269 1 272 1 271 1 142 1 185 1 15 1 51 1 149 1 151 1 107 1 109 1 315 1 281 2 67 2 31 1 200 1 199 1 202 1 252 1 171 3 172 1 87 1 261 1 126 1 216 1 263 1 
0 3 264 4 177 4 267 4 269 5 180 1 181 1 103 4 182 1 104 1 11 1 189 1 19 1 109 3 193 1 26 1 281 20 283 1 200 3 115 1 205 1 118 4 39 2 121 1 43 1 126 21 216 3 129 1 132 3 304 1 222 1 224 1 151 5 240 1 66 1 316 3 67 6 252 8 77 1 253 1 171 41 172 4 87 4 
0 4 264 3 177 4 267 4 181 1 180 1 269 4 182 1 103 4 104 1 11 1 222 1 304 1 224 1 189 1 151 5 19 1 109 4 193 1 240 1 26 1 66 1 281 20 283 2 316 3 67 8 115 1 200 4 253 1 77 1 252 7 205 1 118 4 39 2 121 1 171 38 172 4 87 3 43 1 126 18 216 4 129 1 132 3 
0 2 264 7 177 7 267 4 181 1 180 1 269 8 182 1 103 4 104 1 11 1 222 1 304 1 224 1 189 1 151 8 19 1 109 2 193 2 240 1 26 1 66 1 281 27 283 1 316 2 67 4 115 1 200 2 253 1 77 1 252 14 205 1 118 7 39 1 171 52 172 7 87 7 126 25 216 2 176 2 129 1 132 4 
0 2 264 3 177 3 267 2 180 1 269 3 103 2 104 2 222 1 223 1 224 1 151 3 109 2 193 1 281 9 316 1 67 4 115 1 200 2 252 6 118 3 39 1 121 1 171 19 172 3 87 3 126 10 216 2 129 1 132 1 
0 3 264 2 177 3 267 4 181 1 269 2 180 1 103 2 104 1 11 1 222 1 224 1 189 1 151 3 109 3 26 1 281 14 283 2 316 2 67 6 115 2 200 3 77 1 252 4 205 1 118 2 39 2 171 26 172 3 87 2 126 12 216 3 129 1 132 2 
57 1 98 1 295 1 317 1 306 1 60 1 141 1 156 1 280 1 305 1 
197 1 242 1 
313 1 84 1 98 1 295 1 317 1 163 1 60 1 156 1 305 1 
318 1 192 1 
256 1 90 1 72 1 
98 1 112 1 317 1 164 1 5 1 137 1 141 1 305 1 207 1 119 1 57 1 295 1 306 1 332 1 60 1 153 1 155 2 156 1 
98 1 112 1 317 1 164 1 5 1 137 1 141 1 305 1 207 1 119 1 57 1 295 1 306 1 332 1 60 1 153 1 155 2 156 1 
98 1 112 1 317 1 164 1 5 1 137 1 141 1 305 1 207 1 119 1 57 1 295 1 306 1 332 1 60 1 153 1 155 2 156 1 
318 1 90 1 192 1 
318 1 90 1 192 1 
256 1 72 1 
256 1 90 1 72 1 
314 1 233 1 
98 1 5 1 270 1 183 1 142 2 15 2 305 1 148 1 150 1 233 1 60 1 153 1 155 1 308 1 156 1 242 1 315 2 314 1 112 1 317 1 197 1 199 2 327 1 255 1 295 1 261 2 332 1 
0 1 94 1 6 1 272 1 225 2 15 2 52 1 149 1 237 1 108 2 109 1 239 1 24 1 158 1 245 1 315 2 281 1 29 1 31 1 67 2 68 1 200 1 82 1 330 1 171 2 209 1 261 2 126 1 334 2 216 1 45 2 
93 1 245 1 161 1 136 1 102 2 8 1 251 1 225 2 37 1 275 1 254 1 330 1 170 1 124 1 125 1 213 1 108 2 334 2 131 1 
245 1 161 1 284 1 102 2 251 1 225 1 37 1 275 1 254 1 170 1 330 1 124 1 125 1 213 1 108 1 334 1 131 1 
93 1 245 1 3 1 178 1 33 1 225 1 50 1 330 1 209 1 125 1 108 1 334 1 239 1 64 1 
93 1 245 1 161 1 136 1 102 2 251 1 225 1 37 1 275 1 254 1 330 1 170 1 124 1 125 1 213 1 108 1 334 1 131 1 
329 1 
207 1 157 1 190 1 59 1 165 1 92 1 168 1 
134 1 99 1 101 1 273 1 14 1 59 1 277 1 241 1 112 1 113 1 73 1 168 1 40 1 207 2 296 1 332 1 92 1 
177 2 99 3 179 1 101 12 269 2 8 1 9 2 10 2 14 4 18 3 188 2 277 4 108 3 112 5 30 2 32 1 113 5 289 2 117 1 38 2 40 4 207 8 209 10 46 1 130 6 134 6 225 3 228 3 56 1 231 2 151 2 59 8 239 3 64 1 63 2 241 4 157 1 65 2 244 6 245 3 319 1 165 1 320 2 248 2 75 2 78 2 168 2 81 1 330 4 172 2 87 2 332 5 334 3 92 9 
134 3 177 2 99 1 181 1 221 1 101 6 269 2 103 1 11 1 14 2 189 1 151 2 277 2 59 5 63 1 241 2 244 5 26 1 112 1 316 1 32 1 113 1 75 1 78 2 205 1 168 2 40 2 207 5 83 1 172 2 87 2 332 1 130 5 92 8 132 1 
269 1 182 1 139 1 142 1 15 1 14 1 151 2 19 1 21 1 277 1 59 2 107 1 62 1 63 1 241 1 315 1 66 1 112 1 114 1 199 1 34 1 250 1 78 2 291 1 40 1 261 1 332 1 92 2 
157 1 165 1 14 1 168 1 40 1 207 1 277 1 59 1 241 1 92 1 
134 5 244 5 177 2 30 1 101 10 269 2 78 2 207 5 151 2 172 2 87 2 59 5 63 1 130 5 92 5 
207 1 112 1 99 1 332 1 113 1 168 1 
217 1 135 1 3 1 99 2 4 1 219 1 225 4 14 1 277 2 59 2 108 4 239 1 64 2 241 2 243 1 245 1 112 3 319 2 113 4 32 2 33 1 75 2 40 2 81 1 330 1 209 1 332 3 334 4 92 2 
0 1 266 1 272 1 225 1 142 2 15 3 274 1 145 1 55 1 228 1 107 2 109 1 108 1 239 1 64 1 158 1 315 3 245 1 67 2 31 1 199 2 200 1 291 1 326 1 255 1 171 1 330 1 209 1 261 2 126 1 216 1 334 1 
134 2 244 2 101 4 32 1 304 1 75 1 14 1 168 2 40 1 207 4 59 2 277 1 130 2 241 1 92 1 
317 1 156 1 53 1 
227 1 314 1 317 1 141 1 156 1 
317 1 156 1 53 1 
317 1 156 1 53 1 
317 1 156 1 54 1 
317 1 156 1 54 1 
317 1 156 1 54 1 
317 1 156 1 
295 1 305 1 
0 1 269 1 103 1 182 1 304 1 224 1 151 1 19 1 109 1 240 1 281 4 66 1 316 1 67 2 200 1 253 1 252 2 205 1 118 2 171 8 126 4 216 1 132 1 
0 2 264 1 177 1 269 1 182 1 103 2 304 1 224 1 58 1 151 2 19 1 109 2 193 1 240 1 66 1 281 6 316 1 67 4 200 2 253 1 252 3 205 1 118 2 171 11 172 1 126 5 216 2 132 1 
0 3 264 1 177 2 181 1 269 3 182 1 103 1 11 1 304 1 224 1 58 1 189 1 151 3 19 1 109 3 240 1 26 1 66 1 281 9 316 1 283 1 67 6 200 3 253 1 252 4 205 1 118 3 171 19 172 2 87 2 126 10 216 3 132 1 
0 3 264 2 177 2 269 2 181 1 182 1 103 1 11 1 304 1 224 1 58 1 189 1 151 3 19 1 109 3 240 1 26 1 66 1 281 10 283 1 316 1 67 6 200 3 253 1 252 5 205 1 118 3 171 17 172 2 87 1 126 7 216 3 132 1 
0 1 269 1 103 1 182 1 304 1 224 1 151 1 19 1 109 1 240 1 281 4 66 1 316 1 67 2 200 1 253 1 252 2 205 1 118 2 171 8 126 4 216 1 132 1 
0 1 264 1 177 2 269 2 181 1 103 1 11 1 224 1 189 1 151 2 109 1 26 1 281 6 316 1 67 2 200 1 252 2 205 1 118 1 171 12 172 2 87 2 126 6 216 1 132 1 
0 4 264 2 177 2 181 1 269 2 182 1 103 1 11 1 304 1 224 1 58 1 189 1 151 3 19 1 109 4 240 1 26 1 66 1 281 10 316 1 283 2 67 8 200 4 253 1 252 5 205 1 118 3 171 18 172 2 87 1 126 8 216 4 132 1 
0 4 264 3 177 3 181 1 269 2 103 1 11 1 224 1 189 1 151 3 109 4 26 1 281 9 316 1 283 2 67 8 200 4 252 6 205 1 118 3 121 1 171 16 172 3 87 2 126 7 216 4 132 1 
264 3 66 3 281 3 269 1 182 1 253 2 252 6 118 3 171 7 151 1 19 3 126 4 240 1 
0 4 264 1 177 2 181 1 269 2 182 1 103 1 11 1 304 1 224 1 189 1 151 3 19 1 109 4 240 1 26 1 66 1 281 10 316 1 283 2 67 8 200 4 253 1 252 4 205 1 118 3 121 1 171 18 172 2 87 1 126 8 216 4 132 1 
0 2 264 1 281 4 66 1 283 1 269 1 67 4 182 1 200 2 304 1 252 3 253 1 118 2 171 8 151 1 19 1 126 4 216 2 109 2 240 1 
66 1 281 3 269 1 182 1 304 1 253 1 252 2 118 2 171 6 151 1 190 1 19 1 126 3 240 1 
0 1 264 1 177 1 281 2 269 1 67 2 200 1 252 2 118 1 171 4 58 1 151 1 172 1 87 1 126 2 216 1 109 1 
264 1 177 1 281 3 316 1 269 1 103 2 252 2 118 1 171 7 151 1 172 1 87 1 126 4 193 1 132 1 
96 1 0 2 264 4 177 2 269 3 182 1 103 2 304 1 144 1 151 3 19 2 109 2 193 1 240 1 66 2 281 11 283 2 67 4 200 2 253 1 252 9 118 5 171 23 172 2 87 2 126 12 216 2 176 1 132 2 
171 1 126 1 103 1 
171 1 281 1 132 1 
0 1 264 1 177 1 281 3 30 1 67 2 269 1 200 1 252 3 118 2 171 6 58 1 151 1 172 1 87 1 126 3 109 1 216 1 
0 1 264 1 177 2 269 2 181 1 103 1 11 1 224 1 189 1 151 2 109 1 26 1 281 6 316 1 67 2 200 1 252 2 205 1 118 1 171 12 172 2 87 2 126 6 216 1 132 1 
264 1 281 3 66 1 269 1 182 1 252 2 118 1 171 6 151 1 19 1 126 3 
0 1 264 1 281 1 66 1 283 1 67 2 200 1 252 2 253 1 144 1 118 1 171 3 19 1 126 2 216 1 109 1 240 1 
0 1 264 2 66 2 281 5 67 2 269 2 182 1 200 1 224 1 252 5 118 3 171 10 151 2 19 2 126 5 109 1 216 1 62 1 
0 1 264 1 281 2 67 2 200 1 224 1 252 1 171 2 151 1 172 1 216 1 109 1 
0 1 264 1 177 1 281 2 269 1 67 2 200 1 252 2 224 1 118 1 171 4 151 1 172 1 87 1 126 2 216 1 109 1 
0 3 264 1 66 1 281 1 283 1 67 6 200 3 224 1 252 2 144 1 118 1 121 1 171 3 19 1 126 2 216 3 109 3 
0 5 264 5 177 3 7 1 269 5 182 2 103 4 304 1 224 1 144 1 58 1 151 5 19 3 109 5 193 1 240 1 66 3 281 16 283 2 316 1 67 10 200 5 253 1 252 12 36 1 118 7 121 1 171 34 172 3 87 3 88 1 126 18 216 5 132 3 
255 1 315 1 85 1 261 1 20 1 138 1 15 1 
255 1 315 1 85 1 261 1 20 1 234 1 138 1 166 1 74 1 15 1 309 1 311 1 
330 1 245 1 209 1 3 1 190 1 33 1 334 1 108 1 239 1 225 1 64 1 
315 2 245 1 199 1 142 1 225 1 15 2 255 1 145 1 55 1 228 1 330 1 209 1 261 1 331 1 108 1 334 1 239 1 64 1 
303 1 225 1 142 1 15 2 145 1 55 1 228 2 188 1 108 1 239 2 25 1 245 1 315 2 319 1 199 2 34 1 289 1 255 1 330 1 209 3 261 2 331 1 334 1 
220 1 303 1 225 2 142 1 15 2 145 1 228 2 188 1 236 1 108 2 239 2 25 1 245 1 315 2 319 1 199 2 34 1 289 1 255 1 330 1 209 3 261 2 331 1 334 2 
195 1 65 1 47 1 245 1 112 2 319 1 220 1 113 1 289 1 225 3 168 1 38 1 207 1 18 1 228 1 188 1 330 1 209 4 332 2 108 3 334 3 239 1 64 1 
65 1 245 1 112 2 319 1 220 1 113 1 289 1 225 3 168 1 38 1 207 1 18 1 228 1 188 1 330 1 231 1 209 4 332 2 108 3 334 3 239 1 64 1 
330 1 245 1 210 1 334 1 108 1 225 1 
28 1 245 2 68 1 8 1 140 1 225 6 204 1 117 1 228 1 170 1 330 3 122 1 209 3 210 1 276 1 108 7 334 7 45 1 278 1 239 2 64 2 
0 2 266 1 6 1 269 1 8 1 182 1 271 1 272 2 15 2 19 1 108 1 109 2 281 3 31 2 199 1 200 2 202 1 118 2 209 1 126 3 216 2 304 1 225 1 142 1 51 1 145 1 55 1 147 1 228 1 149 1 151 1 239 1 240 1 315 2 245 1 66 1 67 4 253 1 252 2 326 1 169 1 255 2 330 1 171 6 261 1 331 1 334 1 
99 1 10 1 225 1 14 2 18 1 150 1 231 1 59 1 277 2 108 1 64 1 241 2 157 1 65 1 112 3 165 1 320 1 248 1 113 2 168 1 38 1 207 1 40 2 81 1 209 2 332 3 334 1 92 1 
245 1 8 1 225 2 38 1 117 1 56 1 228 1 330 2 209 2 210 1 108 2 334 2 239 1 
245 1 3 1 220 1 8 1 33 1 225 4 330 1 209 1 108 4 334 4 110 1 239 1 64 1 
133 1 245 1 319 1 225 2 204 1 228 1 258 1 330 2 209 1 276 1 333 1 108 2 334 2 239 1 
330 1 245 1 124 1 102 1 213 1 334 1 108 1 225 1 64 1 37 1 
245 1 8 1 68 1 225 2 170 1 330 1 209 1 237 1 108 2 334 2 239 1 
245 2 3 1 319 1 33 1 8 1 68 1 140 1 225 4 330 2 122 1 209 3 108 5 334 5 110 1 239 2 64 1 
218 1 245 2 3 1 319 1 33 1 8 1 68 1 140 1 225 4 330 2 209 3 108 5 334 5 110 1 239 2 64 1 
315 2 245 1 199 1 142 1 225 1 15 2 255 1 145 1 228 1 330 1 209 1 261 1 331 1 236 1 108 1 334 1 239 1 64 1 
28 1 245 1 319 1 225 1 204 1 117 1 228 1 330 2 209 1 276 1 108 1 334 1 239 1 
80 1 315 1 229 1 261 1 29 1 128 1 15 1 24 1 52 1 
312 1 230 1 128 1 
255 1 80 1 229 1 201 1 128 1 
312 1 65 1 25 1 112 2 303 1 201 2 34 1 290 1 168 1 255 1 207 1 80 2 257 1 150 1 230 1 229 2 332 2 128 1 61 1 

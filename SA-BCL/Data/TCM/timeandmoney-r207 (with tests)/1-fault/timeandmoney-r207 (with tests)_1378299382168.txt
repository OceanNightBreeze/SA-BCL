#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 223 89 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3588 | = null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
363 1 128 5 3 1 342 1 261 2 300 1 184 2 58 1 141 9 189 4 13 1 219 1 325 1 348 2 349 1 193 1 313 9 116 2 351 1 47 1 353 3 202 2 274 1 203 1 172 1 249 2 122 2 28 6 
363 1 128 5 3 1 342 1 261 2 300 1 184 2 58 1 141 9 189 4 13 1 219 1 325 1 348 2 349 1 193 1 313 9 116 2 351 1 47 1 353 3 202 2 274 1 203 1 172 1 249 2 122 2 28 6 
363 1 128 6 3 1 342 1 261 2 300 1 184 2 58 1 141 10 189 5 13 1 219 1 325 1 348 2 349 1 193 1 313 10 116 2 351 1 47 1 353 4 202 2 274 1 203 1 172 1 249 2 122 2 28 7 
363 1 128 4 3 1 342 1 261 2 300 1 184 2 58 1 141 7 189 3 13 1 219 1 325 1 348 2 349 1 193 1 313 7 116 1 47 1 353 2 202 2 274 1 203 1 172 1 249 2 122 2 28 4 
128 3 3 1 313 4 116 2 351 1 261 1 342 1 353 1 202 1 274 1 184 1 58 1 249 1 122 1 141 4 189 2 219 1 28 3 
347 1 348 1 193 1 128 1 3 1 313 2 261 1 202 1 380 1 184 1 58 1 304 1 122 1 141 2 219 1 13 1 
348 1 128 2 3 1 313 3 353 1 202 2 58 1 203 1 122 2 141 3 189 1 219 1 28 1 
348 1 128 5 18 1 3 1 313 9 116 2 351 1 261 1 342 1 300 1 71 1 353 3 202 2 274 1 184 1 58 1 172 1 203 1 249 1 122 2 141 9 189 4 219 1 28 7 
348 1 128 5 18 1 3 1 313 9 116 2 351 1 261 1 342 1 300 1 71 1 353 3 202 2 274 1 184 1 58 1 172 1 203 1 249 1 122 2 141 9 189 4 219 1 28 7 
318 1 86 1 179 1 
86 1 137 2 152 1 
15 1 145 2 26 2 113 2 183 2 153 2 341 1 291 2 
54 1 174 1 129 1 233 1 2 1 296 1 341 1 56 1 260 2 372 1 34 1 262 1 36 1 106 1 183 2 346 1 160 1 110 1 15 1 145 2 146 2 308 1 113 3 284 1 118 1 21 1 291 2 23 2 95 1 26 2 272 1 52 2 153 3 227 2 204 1 335 1 295 1 
145 1 276 1 26 1 113 1 183 1 369 1 153 1 237 1 341 1 291 1 
62 1 318 1 86 1 326 1 276 1 113 1 340 1 354 1 48 1 57 1 183 1 153 1 267 1 252 1 
62 2 318 1 86 1 326 1 145 1 276 1 113 1 340 1 291 1 354 2 26 1 183 1 153 1 267 1 252 1 
62 1 158 1 354 1 224 1 323 1 
62 2 318 1 86 1 354 2 224 1 323 1 275 1 339 1 
62 1 354 1 323 1 
62 1 145 1 276 1 113 1 369 1 237 1 341 1 291 1 224 1 354 1 26 1 183 1 153 1 12 1 
86 1 
62 2 318 1 86 1 354 2 224 1 323 1 275 1 290 1 
62 5 85 1 318 1 86 1 63 1 17 1 319 1 327 1 22 1 199 2 247 2 224 2 354 5 323 2 136 2 275 1 217 1 228 1 140 1 
15 1 179 1 
336 1 145 1 15 2 113 2 288 1 291 1 26 1 183 2 153 2 
264 1 331 1 190 1 
54 1 15 1 308 1 113 1 2 1 296 1 69 1 118 1 260 1 34 1 272 1 106 1 52 1 153 1 227 1 160 1 
54 1 308 1 148 1 113 2 296 1 2 1 118 1 291 1 260 1 34 1 26 1 272 1 106 1 183 1 52 1 153 2 227 1 243 1 190 1 160 1 
145 1 15 1 26 3 148 1 113 3 183 3 153 3 291 3 
276 1 26 1 113 1 183 1 153 1 237 1 291 1 
145 1 336 1 276 1 26 1 113 1 183 1 153 1 288 1 291 1 
54 1 336 1 276 1 129 1 233 1 296 1 2 1 340 1 341 1 260 1 372 1 34 1 36 1 106 1 183 3 346 1 243 1 160 1 267 1 110 1 62 1 326 1 15 1 145 2 146 2 308 1 310 1 148 1 113 4 284 1 118 1 291 3 23 1 354 1 95 1 26 3 272 1 52 1 153 4 227 1 335 1 381 1 252 1 295 1 
15 1 48 1 26 1 148 1 113 2 183 2 153 2 270 1 291 1 
62 1 86 1 326 1 145 1 336 1 276 1 310 1 148 2 113 3 340 1 291 3 354 1 26 3 50 1 183 3 153 3 243 1 252 1 267 1 
336 1 145 1 148 1 113 2 291 2 26 2 331 1 183 2 153 2 190 1 
54 1 15 1 308 1 113 1 2 1 296 1 118 1 260 1 34 1 272 1 106 1 52 1 153 1 227 1 160 1 
54 1 282 1 15 1 308 1 283 1 113 1 2 1 296 1 118 1 260 1 34 1 52 1 153 1 227 1 160 1 
129 2 233 1 131 1 372 1 264 2 9 1 302 1 346 1 190 2 110 1 39 1 111 1 146 2 41 1 246 1 23 4 201 1 25 1 95 1 331 2 358 1 359 1 204 2 335 1 
276 1 213 1 26 1 113 1 183 1 153 1 340 1 291 1 
336 1 145 1 15 1 148 2 113 5 19 1 270 1 291 4 4 1 48 1 26 4 183 5 153 5 243 1 
213 1 276 1 26 2 113 2 183 2 153 2 237 1 291 2 
360 1 124 1 
360 1 124 1 
266 1 305 1 
266 1 305 1 
266 1 305 1 
360 1 187 1 124 1 
360 1 187 1 124 1 
360 1 124 1 149 1 
266 1 360 2 305 1 230 1 251 1 124 2 
360 1 187 1 124 1 
229 1 360 1 124 1 
229 1 360 1 124 1 
229 1 360 1 124 1 
62 2 144 1 86 1 307 2 177 1 68 1 20 3 45 2 354 2 104 2 273 1 265 2 37 1 171 2 109 1 11 1 360 2 251 1 124 2 
77 1 31 1 0 1 258 1 368 1 55 1 81 1 104 1 183 2 62 1 144 1 15 1 307 1 113 2 20 1 45 1 291 2 149 1 354 1 26 2 171 1 153 2 360 1 124 1 
261 1 184 1 249 1 
261 1 184 1 304 1 
254 1 14 1 301 1 184 3 304 1 249 2 
14 1 301 1 16 1 184 2 304 1 249 1 
301 1 14 2 184 2 304 1 249 1 
362 2 318 1 77 1 368 1 131 1 319 3 55 1 344 2 135 1 323 1 136 1 137 3 279 1 217 1 140 2 62 5 40 1 86 2 43 1 115 1 246 1 199 1 247 1 354 5 224 4 201 1 275 1 358 1 152 1 333 1 74 2 250 1 
318 1 368 4 1 1 131 3 297 1 319 8 158 5 344 6 323 6 136 2 137 9 279 2 303 1 217 1 140 6 62 9 86 5 309 1 163 1 327 1 115 1 166 1 246 3 199 2 247 2 354 9 224 7 201 3 275 1 358 3 152 3 120 5 333 2 74 6 250 3 
318 1 362 1 368 1 131 1 319 3 135 1 344 2 136 1 279 1 137 4 140 2 62 3 40 1 86 3 327 1 246 1 199 1 247 1 224 2 354 3 201 1 358 1 152 2 333 1 74 2 250 1 
318 1 362 2 368 2 131 2 297 1 319 5 344 4 135 1 136 1 137 7 279 1 140 4 62 4 40 1 86 4 163 1 327 1 246 2 166 1 199 1 247 1 354 4 224 3 201 2 358 2 152 3 333 1 74 4 250 2 
54 1 8 1 179 1 
54 1 311 1 
142 1 
54 1 118 1 
321 1 54 3 8 2 357 1 118 1 160 1 
54 1 118 1 160 1 
54 1 235 1 
154 1 256 2 129 3 114 1 32 1 117 1 195 1 165 1 23 7 293 1 201 1 25 2 358 1 302 3 241 1 108 1 204 4 
154 1 256 2 129 3 114 1 32 1 117 1 195 1 165 1 23 7 293 1 201 1 25 2 358 1 302 3 241 1 108 1 204 4 
154 1 256 2 129 3 114 1 32 1 117 1 195 1 165 1 23 7 293 1 5 1 201 1 25 2 358 1 302 3 241 1 108 1 204 4 
154 1 256 3 129 15 337 4 131 3 32 2 157 1 372 1 103 1 241 2 280 1 302 10 108 2 139 3 346 1 188 1 146 2 90 1 114 1 376 1 117 1 195 2 165 1 246 3 23 31 293 5 248 1 201 4 25 5 95 1 358 4 204 16 250 3 335 1 
256 2 112 1 146 4 129 4 114 1 277 1 117 1 32 1 195 1 165 1 372 2 103 1 23 9 293 1 201 1 25 3 95 2 358 1 241 1 302 4 108 1 346 2 204 5 335 2 
254 1 364 1 365 1 176 1 128 1 3 1 181 1 260 1 371 1 261 1 34 1 215 1 184 2 58 1 304 1 83 1 141 2 219 1 348 1 308 1 91 1 313 2 49 1 202 1 379 1 52 1 227 1 249 1 122 1 28 1 
254 1 176 1 128 1 101 1 3 1 181 1 260 1 371 1 261 1 34 1 263 1 215 1 184 2 58 1 304 1 83 1 141 3 348 1 308 1 91 1 221 1 313 3 49 1 202 1 379 1 52 1 227 1 249 1 122 1 28 2 
254 1 176 1 128 1 3 1 260 1 371 1 34 1 261 1 263 1 215 1 184 2 58 1 304 1 83 1 141 2 348 1 308 1 221 1 313 2 49 1 379 1 52 1 227 1 249 1 28 2 
54 1 348 2 308 1 101 1 234 1 2 1 313 1 314 1 118 1 260 1 34 1 6 1 49 2 202 1 379 2 215 2 52 1 227 1 361 1 186 1 122 1 141 1 123 1 
254 1 365 1 176 1 181 1 260 1 371 1 261 1 34 1 263 1 215 1 184 2 304 1 83 1 141 1 219 1 348 1 308 1 91 1 313 1 49 1 202 1 379 1 52 1 227 1 249 1 122 1 
366 1 
54 1 207 1 2 2 340 1 260 2 57 1 107 1 217 1 59 1 218 4 267 1 62 5 308 1 113 1 118 1 167 2 354 5 225 1 226 2 275 3 227 2 361 1 317 1 318 1 276 1 367 2 178 2 130 2 132 2 319 2 133 1 34 1 323 6 136 1 137 2 183 1 140 2 186 1 86 2 326 1 87 2 42 1 92 1 197 1 289 1 199 1 247 1 48 1 152 2 52 2 53 1 153 1 97 1 333 1 252 1 
276 1 207 1 340 1 57 1 323 2 183 1 59 1 218 2 267 1 62 3 326 1 113 1 42 1 289 1 290 1 225 1 354 3 48 1 226 1 275 1 153 1 252 1 
318 1 276 1 207 1 340 1 57 1 323 1 183 1 59 1 218 3 267 1 62 3 326 1 86 1 87 1 113 1 42 1 289 1 290 1 225 1 354 3 48 1 275 1 153 1 252 1 
318 1 276 1 207 1 367 1 340 1 57 1 323 2 183 1 59 1 218 3 267 1 62 3 326 1 86 1 87 1 113 1 42 1 290 1 289 1 225 1 354 3 48 1 226 1 275 1 153 1 252 1 
207 1 338 1 340 1 57 1 59 1 217 1 218 6 267 1 62 5 113 1 119 1 167 2 354 5 225 1 169 1 226 4 275 3 318 5 79 1 276 1 367 4 178 2 130 2 319 1 132 2 133 1 323 7 136 1 183 1 140 1 326 1 86 5 87 4 42 1 290 1 289 1 199 1 247 1 330 1 48 1 152 2 153 1 97 1 252 1 
207 1 340 1 57 1 217 1 59 1 218 4 267 1 62 4 113 1 167 2 354 4 225 1 226 2 275 2 317 1 318 1 276 1 367 2 178 2 130 2 319 1 132 2 133 1 323 4 136 1 137 2 183 1 140 1 326 1 86 2 87 2 42 1 289 1 199 1 247 1 48 1 152 2 153 1 97 1 252 1 
318 1 79 1 276 1 367 2 207 1 178 2 130 2 338 1 132 2 319 1 340 1 133 1 57 1 323 4 136 1 183 1 59 1 217 1 140 1 218 4 267 1 62 4 86 1 326 1 87 2 113 1 42 1 289 1 199 1 330 1 247 1 167 2 225 1 354 4 48 1 226 2 275 2 152 2 153 1 97 1 252 1 
318 1 79 1 276 1 367 2 207 1 178 2 130 2 338 1 132 2 319 1 340 1 133 1 57 1 323 4 136 1 183 1 59 1 217 1 140 1 218 4 267 1 62 4 86 1 326 1 87 2 113 1 42 1 289 1 199 1 330 1 247 1 167 2 225 1 354 4 48 1 226 2 275 2 152 2 153 1 97 1 252 1 
318 1 126 2 276 1 367 2 207 1 178 2 80 1 132 2 319 1 340 1 57 1 323 4 136 1 137 2 183 1 59 1 217 1 140 1 218 4 267 1 62 4 86 1 326 1 87 2 113 1 42 1 286 1 289 1 199 1 330 1 247 1 225 1 354 4 315 1 48 1 226 2 275 2 153 1 98 2 97 1 252 1 
318 1 79 1 276 1 207 1 367 3 178 2 130 2 338 1 132 2 319 1 340 1 133 1 57 1 323 5 136 1 183 1 217 1 59 1 140 1 218 5 267 1 62 4 86 1 326 1 87 3 113 1 42 1 289 1 199 1 330 1 247 1 167 2 225 1 354 4 48 1 169 1 226 3 275 2 152 2 153 1 97 1 252 1 
318 1 79 1 276 1 207 1 367 3 178 2 130 2 338 1 132 2 319 1 340 1 133 1 57 1 323 5 136 1 183 1 217 1 59 1 140 1 218 5 267 1 62 4 86 1 326 1 87 3 113 1 42 1 289 1 199 1 330 1 247 1 167 2 225 1 354 4 48 1 169 1 226 3 275 2 152 2 153 1 97 1 252 1 
207 1 340 1 57 1 217 1 59 1 218 4 267 1 62 4 113 1 354 4 225 1 315 1 226 2 275 2 317 1 318 1 126 2 276 1 367 2 178 2 319 1 132 2 323 4 136 1 137 2 183 1 140 1 326 1 86 1 87 2 42 1 289 1 199 1 247 1 48 1 153 1 97 1 98 2 252 1 
39 1 110 1 256 1 15 2 146 2 129 3 233 1 114 1 179 1 117 1 165 1 372 1 23 6 201 1 25 2 264 1 95 1 331 1 358 1 302 2 241 1 108 1 346 1 204 3 190 1 335 1 
78 1 129 6 337 3 208 1 233 2 131 2 157 1 372 2 264 11 302 2 185 1 139 3 346 2 38 1 190 11 110 1 143 1 15 1 146 4 284 1 21 1 246 1 23 14 293 1 248 1 201 2 25 1 95 2 331 4 358 1 204 8 250 2 335 2 
54 1 30 1 129 1 233 1 296 1 2 1 156 1 260 1 372 1 34 1 106 1 183 1 38 1 346 1 243 1 160 1 110 1 15 1 308 1 146 2 148 1 113 2 284 1 118 1 69 1 21 1 291 1 377 1 23 2 95 1 26 1 272 1 331 1 52 1 227 1 153 2 204 1 335 1 
54 2 256 1 2 1 296 2 260 3 263 1 264 7 106 2 10 2 302 8 108 1 346 3 160 2 110 3 15 2 308 2 114 1 113 3 117 1 118 2 21 1 165 1 23 20 25 4 26 1 272 2 358 3 227 3 129 10 233 3 131 2 372 3 34 2 36 2 138 1 183 1 241 1 38 1 243 1 190 7 191 2 245 1 146 6 148 1 284 1 196 2 291 1 328 2 246 2 293 4 201 3 95 3 331 7 51 1 52 3 153 3 250 2 204 10 335 3 
54 3 364 1 125 1 173 1 155 1 129 1 233 2 2 2 260 7 56 2 182 1 372 2 34 2 263 1 183 1 346 2 186 1 39 1 110 2 268 1 192 1 308 2 146 4 148 1 113 1 284 1 118 2 21 1 291 1 23 2 26 1 95 2 52 8 153 1 227 8 361 1 204 1 253 1 335 2 
336 1 129 2 233 1 131 1 372 1 264 1 183 1 302 1 346 1 38 1 190 1 110 1 145 1 146 2 113 1 291 1 246 1 23 3 201 1 25 1 95 1 26 1 331 1 358 1 153 1 250 1 204 1 205 1 335 1 
39 1 110 1 146 2 233 1 41 1 131 1 372 1 23 2 293 1 201 1 264 1 95 1 331 1 302 1 346 1 204 2 190 1 335 1 
39 1 110 1 146 2 129 2 233 1 372 1 246 1 23 2 25 1 264 1 95 1 331 1 9 1 358 1 302 1 346 1 190 1 335 1 
129 2 131 1 233 1 372 1 264 2 302 2 346 1 190 2 110 1 39 1 146 2 246 1 23 4 293 1 201 1 25 1 95 1 331 2 358 1 204 2 250 1 335 1 
110 1 125 1 146 2 233 1 41 1 131 1 372 1 23 2 293 1 201 1 264 1 95 1 331 1 302 1 346 1 204 2 190 1 335 1 
110 1 125 1 146 2 129 2 233 1 372 1 246 1 23 2 25 1 264 1 95 1 331 1 9 1 358 1 302 1 346 1 190 1 335 1 
125 1 129 2 131 1 233 1 372 1 264 2 302 2 346 1 190 2 110 1 146 2 246 1 23 4 293 1 201 1 25 1 95 1 331 2 358 1 204 2 250 1 335 1 
129 2 131 1 233 1 372 1 264 2 302 2 346 1 190 2 110 1 146 2 246 1 23 4 293 1 201 1 25 1 95 1 331 2 358 1 204 2 250 1 335 1 
54 1 129 1 233 1 296 1 2 1 260 1 372 1 34 1 36 1 106 1 346 1 160 1 110 1 15 1 308 1 146 2 113 1 284 1 118 1 21 1 23 2 95 1 272 1 52 1 227 1 153 1 204 1 335 1 
54 1 129 1 233 1 296 1 2 1 260 1 372 1 34 1 346 1 160 1 110 1 282 1 15 1 308 1 146 2 283 1 113 1 284 1 118 1 21 1 23 2 94 1 95 1 52 1 227 1 153 1 204 1 335 1 
129 2 131 1 233 1 372 1 264 2 302 2 346 1 38 1 190 2 110 1 146 2 246 1 23 4 293 1 201 1 25 1 95 1 331 2 358 1 204 2 250 1 335 1 
54 1 364 1 129 2 131 1 233 1 296 1 260 1 372 1 34 1 36 1 264 2 106 1 302 2 346 1 190 2 160 1 110 1 308 1 146 2 113 1 196 1 118 1 246 1 23 4 293 1 201 1 25 1 95 1 331 2 272 1 358 1 52 1 227 1 153 1 204 2 250 1 335 1 
336 1 129 1 233 1 131 1 372 1 264 1 183 1 302 1 216 1 346 1 38 1 190 1 110 1 145 1 146 2 113 1 291 1 246 1 23 3 293 1 201 1 95 1 26 1 331 1 358 1 153 1 250 1 204 2 335 1 
256 1 100 1 232 1 337 4 129 21 131 4 298 1 157 1 239 2 372 3 103 1 35 1 210 1 324 1 241 1 302 8 108 1 139 3 159 1 346 3 244 1 112 1 146 6 114 1 269 1 117 1 164 1 271 1 165 1 246 4 23 41 293 4 151 1 248 3 201 5 25 4 95 3 316 1 358 5 332 4 204 20 250 4 335 3 
256 1 100 1 232 1 337 4 129 18 131 4 298 1 157 1 239 2 372 4 103 2 35 1 210 1 324 1 241 1 302 7 108 1 139 3 159 1 346 4 244 1 112 1 146 8 114 1 269 1 117 1 164 1 271 1 165 1 246 3 23 38 293 3 151 1 248 3 201 5 25 4 95 4 316 1 358 4 332 4 204 20 250 4 335 4 
256 1 78 2 100 1 232 1 337 4 129 25 131 7 298 1 157 2 239 1 372 2 103 1 35 1 210 1 324 1 241 1 302 14 108 1 139 4 159 1 346 2 244 1 112 1 146 4 114 1 269 1 117 1 271 1 165 1 246 7 23 52 293 7 151 1 248 2 201 8 25 7 95 2 358 8 332 4 204 27 250 7 335 2 
232 1 337 2 129 10 131 3 157 1 134 1 239 1 372 2 302 6 139 1 346 2 244 1 112 1 146 4 269 1 271 1 246 3 23 19 293 3 151 2 248 1 201 3 25 3 95 2 316 1 358 3 332 2 204 9 250 3 335 2 
100 1 232 1 129 12 337 2 131 3 298 1 239 2 372 3 103 2 35 1 210 1 324 1 302 4 139 2 346 3 159 1 244 2 112 1 146 6 269 1 271 1 246 2 23 26 293 2 151 1 248 2 201 3 25 2 95 3 358 2 332 4 204 14 250 3 335 3 
72 1 104 1 307 1 68 1 171 1 11 1 360 1 45 1 251 1 124 1 
0 1 149 1 
150 1 104 1 307 1 171 1 194 1 360 1 180 1 45 1 124 1 
62 1 144 1 86 1 307 1 177 1 68 1 20 2 45 1 354 1 104 1 273 1 265 1 37 1 171 1 11 1 360 1 251 1 124 1 
62 1 144 1 86 1 307 1 177 1 68 1 20 2 45 1 354 1 104 1 273 1 265 1 37 1 171 1 11 1 360 1 251 1 124 1 
62 1 144 1 86 1 307 1 177 1 68 1 20 2 45 1 354 1 104 1 273 1 265 1 37 1 171 1 11 1 360 1 251 1 124 1 
230 1 187 1 350 1 
230 1 187 1 350 1 
209 1 229 1 
209 1 229 1 230 1 
258 1 81 1 
77 1 31 1 0 1 258 1 177 1 368 1 55 1 81 1 104 1 265 1 183 2 62 1 15 1 307 1 147 1 113 2 20 1 45 1 291 2 149 1 354 1 224 1 26 2 171 1 153 2 360 1 124 1 
187 1 350 1 
209 1 229 1 230 1 
54 1 76 1 29 1 231 1 129 1 233 1 56 2 260 2 372 1 34 1 7 1 183 2 38 1 346 1 110 1 268 1 306 1 192 1 308 1 146 2 113 2 284 1 118 1 21 1 23 2 95 1 52 2 227 2 153 2 204 1 335 1 
254 1 255 1 364 1 308 1 162 1 91 1 70 1 260 2 371 1 261 1 34 1 263 1 215 1 184 2 52 2 227 2 304 1 249 1 83 1 
254 1 308 1 91 1 44 1 70 1 260 1 371 1 261 1 34 1 263 1 215 1 184 2 52 1 227 1 304 1 249 1 83 1 
54 1 308 1 162 1 2 1 234 1 236 1 118 1 260 1 34 1 215 1 52 1 227 1 361 1 186 1 
254 1 255 1 308 1 162 1 91 1 70 1 260 1 371 1 261 1 34 1 263 1 215 1 184 2 52 1 227 1 304 1 249 1 83 1 
285 1 
318 1 86 1 17 1 319 1 179 1 228 1 140 1 
318 1 130 1 319 1 133 1 323 1 136 1 137 1 217 1 140 1 62 1 86 2 199 1 247 1 167 1 354 1 275 1 152 1 
54 10 206 2 259 2 2 1 260 3 102 1 344 6 8 2 10 2 217 4 160 3 62 5 308 4 311 3 65 2 17 1 118 3 352 2 354 5 357 1 275 3 358 2 227 3 228 1 74 6 27 2 318 2 364 1 127 2 131 2 319 9 235 2 238 1 34 3 323 5 136 4 137 12 140 8 373 1 84 1 374 2 86 8 92 1 199 4 329 1 246 2 247 4 378 2 201 2 152 6 52 3 333 2 250 2 252 2 
318 2 100 1 127 2 337 1 131 2 319 8 35 1 210 1 344 5 323 1 136 2 324 1 137 6 217 2 139 1 159 1 140 5 62 1 86 5 92 1 199 2 246 2 378 1 247 2 168 1 354 1 248 1 201 2 356 1 275 1 152 3 358 2 333 1 74 5 250 2 
276 1 127 2 338 1 319 2 369 1 237 1 341 1 136 1 183 1 241 1 108 1 345 1 217 1 140 2 12 1 62 1 145 1 113 1 291 1 199 1 165 1 378 1 247 1 354 1 201 2 26 1 358 1 153 1 
318 1 86 1 17 1 319 1 199 1 247 1 136 1 217 1 228 1 140 1 
86 5 127 2 131 2 319 5 246 2 378 1 201 2 344 5 137 10 152 5 358 2 10 1 140 5 74 5 250 2 
62 1 318 1 86 1 354 1 323 1 275 1 
54 1 2 2 319 2 260 3 238 1 34 1 323 3 136 2 217 1 140 1 373 1 186 1 62 2 308 1 89 1 327 1 92 1 118 1 197 1 199 2 247 2 223 1 354 2 275 1 52 3 53 1 227 3 333 2 361 1 
54 1 129 1 233 1 2 1 296 1 341 1 260 1 372 1 34 1 36 1 106 1 183 2 346 1 160 1 110 1 15 1 145 2 146 2 308 1 113 3 284 1 118 1 291 2 23 1 95 1 26 2 272 1 52 1 227 1 153 3 335 1 295 1 
318 2 256 1 86 4 319 1 92 1 199 1 247 1 344 2 136 1 137 4 152 2 217 1 333 1 74 2 140 2 
104 1 175 1 45 1 
104 1 175 1 45 1 
104 1 258 1 68 1 45 1 334 1 
104 1 175 1 45 1 
104 1 214 1 45 1 
104 1 214 1 45 1 
104 1 214 1 45 1 
104 1 45 1 
360 1 124 1 
256 1 100 1 129 4 337 1 372 1 241 1 302 2 139 1 108 1 346 1 112 1 146 2 114 1 117 1 165 1 23 8 201 1 248 1 25 2 95 1 358 1 204 4 335 1 
256 1 100 1 129 5 337 2 131 1 157 1 372 2 241 1 302 3 108 1 139 1 346 2 112 1 146 4 114 1 117 1 165 1 23 11 293 1 248 1 201 2 25 2 95 2 96 1 358 1 204 6 250 1 335 2 
256 1 100 1 129 10 337 1 131 2 372 3 103 1 35 1 210 1 324 1 241 1 302 4 108 1 139 1 346 3 159 1 112 1 146 6 114 1 117 1 165 1 246 2 23 19 293 1 248 1 201 3 25 3 95 3 96 1 358 3 204 9 250 2 335 3 
256 1 100 1 129 7 337 1 131 2 372 3 103 1 35 1 210 1 324 1 241 1 302 5 108 1 139 1 346 3 159 1 112 1 146 6 114 1 117 1 165 1 246 1 23 17 293 2 248 1 201 3 25 3 95 3 96 1 358 2 204 10 250 2 335 3 
256 1 100 1 129 4 337 1 372 1 241 1 302 2 139 1 108 1 346 1 112 1 146 2 114 1 117 1 165 1 23 8 201 1 248 1 25 2 95 1 358 1 204 4 335 1 
112 1 100 1 146 2 337 1 129 6 131 2 246 2 372 1 35 1 23 12 293 1 210 1 201 2 248 1 25 1 95 1 324 1 358 2 302 2 139 1 159 1 346 1 250 2 204 6 335 1 
256 1 100 1 129 8 337 1 131 2 372 4 103 2 35 1 210 1 324 1 241 1 302 5 108 1 139 1 346 4 159 1 112 1 146 8 114 1 117 1 165 1 246 1 23 18 293 2 248 1 201 3 25 3 95 4 96 1 358 2 204 10 250 2 335 4 
100 1 129 7 337 1 131 3 372 4 103 2 35 1 210 1 324 1 302 6 139 1 346 4 159 1 112 1 146 8 246 2 23 16 293 3 248 1 201 3 25 3 95 4 316 1 358 2 204 9 250 3 335 4 
129 4 114 2 117 1 165 1 23 7 293 3 201 1 25 3 358 1 241 3 302 6 108 3 204 3 
256 1 100 1 129 8 337 1 131 2 372 4 103 2 35 1 210 1 324 1 241 1 302 4 108 1 139 1 346 4 159 1 112 1 146 8 114 1 117 1 165 1 246 1 23 18 293 1 248 1 201 3 25 3 95 4 316 1 358 2 204 10 250 2 335 4 
256 1 146 4 129 4 114 1 117 1 165 1 372 2 103 1 23 8 293 1 201 1 25 2 95 2 358 1 302 3 241 1 108 1 346 2 204 4 335 2 
23 6 256 1 201 1 25 2 129 3 358 1 114 1 302 2 241 1 108 1 179 1 117 1 204 3 165 1 
146 2 129 2 131 1 246 1 372 1 23 4 293 1 201 1 25 1 95 1 96 1 358 1 302 2 346 1 250 1 204 2 335 1 
337 2 129 4 131 1 157 1 246 1 23 7 293 1 248 1 201 1 25 1 358 1 302 2 139 1 204 3 250 1 
256 1 78 1 129 12 337 2 131 2 157 1 372 2 103 2 322 1 241 2 302 9 108 2 139 2 185 1 346 2 146 4 114 1 117 1 165 1 246 2 23 23 293 4 201 3 25 5 95 2 358 3 250 2 204 11 335 2 
23 1 129 1 337 1 
23 1 139 1 204 1 
146 2 129 3 131 1 372 1 246 1 23 6 293 1 201 1 25 2 95 1 96 1 358 1 10 1 302 3 346 1 250 1 204 3 335 1 
112 1 100 1 146 2 337 1 129 6 131 2 246 2 372 1 35 1 23 12 293 1 210 1 201 2 248 1 25 1 95 1 324 1 358 2 302 2 139 1 159 1 346 1 250 2 204 6 335 1 
129 3 165 1 23 6 293 1 201 1 25 1 358 1 241 1 302 2 108 1 204 3 
146 2 129 2 114 1 117 1 372 1 103 1 322 1 23 3 293 1 25 1 95 1 302 2 241 1 108 1 346 1 204 1 335 1 
112 1 146 2 129 5 372 1 165 1 23 10 293 2 201 2 25 3 95 1 358 2 241 2 302 5 345 1 108 2 346 1 204 5 335 1 
112 1 146 2 131 1 372 1 23 2 293 1 201 1 95 1 302 1 346 1 204 2 335 1 
112 1 146 2 129 2 131 1 246 1 372 1 23 4 293 1 201 1 25 1 95 1 358 1 302 2 346 1 250 1 204 2 335 1 
112 1 146 6 129 2 372 3 103 1 322 1 23 3 293 1 25 1 95 3 316 1 241 1 302 2 108 1 346 3 204 1 335 3 
256 1 129 18 337 4 131 3 157 1 372 5 103 2 322 1 241 3 280 1 302 12 108 3 139 3 346 5 188 1 112 1 146 10 114 1 376 1 117 1 165 2 246 3 23 34 293 5 248 1 201 5 25 7 95 5 96 1 316 1 358 5 204 16 250 3 335 5 
15 1 48 1 294 1 113 1 183 1 153 1 270 1 
281 1 15 1 113 1 46 1 370 1 292 1 270 1 48 1 294 1 183 1 153 1 242 1 
34 1 54 1 308 1 52 1 2 1 179 1 227 1 361 1 118 1 186 1 260 1 
54 1 15 1 308 1 148 1 113 2 296 1 2 1 118 1 291 1 260 1 34 1 26 1 272 1 183 1 52 1 153 2 227 1 160 1 
54 3 15 1 276 1 308 1 65 1 148 1 113 2 296 1 235 1 340 1 118 2 291 1 260 1 34 1 26 2 272 1 183 2 52 1 153 2 227 1 373 1 267 1 160 2 
54 3 276 1 296 1 235 1 340 1 260 2 34 1 183 2 61 1 373 1 160 2 267 1 15 1 308 1 65 1 283 1 148 1 113 2 118 2 291 1 26 2 52 2 227 2 153 2 
54 4 318 1 2 1 235 1 320 1 260 3 34 1 8 1 323 1 61 1 373 1 160 1 62 2 86 1 308 1 311 1 65 1 118 1 354 2 355 1 52 3 227 3 252 1 
62 2 318 1 54 4 86 1 206 1 308 1 65 1 311 1 2 1 235 1 118 1 260 3 34 1 354 2 323 1 8 1 52 3 227 3 61 1 373 1 252 1 160 1 
34 1 308 1 52 1 227 1 260 1 182 1 
268 1 54 3 364 1 173 1 308 3 155 1 88 1 375 1 2 2 118 2 56 1 260 6 182 1 34 2 212 1 263 1 357 1 52 7 227 7 253 1 160 1 
54 1 256 1 296 1 260 1 7 1 264 1 106 1 302 2 108 1 346 2 160 1 110 2 15 2 308 1 113 2 114 1 117 1 118 1 165 1 23 6 25 2 26 1 272 1 358 1 227 1 364 1 129 3 233 2 372 2 34 1 36 1 183 1 241 1 38 1 190 1 191 1 146 4 148 1 196 1 291 1 201 1 95 2 331 1 52 1 153 2 204 3 335 2 
318 1 54 2 206 1 319 1 2 1 259 1 260 1 238 1 323 2 8 1 136 2 217 2 140 1 62 3 86 1 311 1 17 1 199 2 352 1 247 2 354 3 224 1 275 1 52 1 227 1 228 1 27 1 252 1 
34 1 54 2 364 1 308 2 8 1 357 1 52 2 227 2 118 1 260 2 160 1 329 1 182 1 
54 1 364 1 308 1 2 1 118 1 260 4 34 1 105 1 52 4 227 4 361 1 61 1 186 1 
54 1 308 2 375 1 118 1 299 1 260 2 34 1 212 1 278 1 51 1 52 2 227 2 373 1 160 1 
261 1 34 1 308 1 184 1 52 1 2 1 227 1 304 1 260 1 371 1 
268 1 54 1 364 1 308 1 231 1 118 1 260 2 34 1 263 1 52 2 227 2 
268 1 54 3 364 1 173 1 308 2 2 1 118 2 260 4 34 2 105 1 52 5 227 5 361 1 373 1 186 1 253 1 
268 1 54 3 364 1 173 1 308 2 2 1 118 2 260 4 34 2 105 1 52 5 227 5 361 1 373 1 186 1 75 1 
54 1 15 1 308 1 148 1 283 1 113 2 296 1 2 1 118 1 291 1 260 1 34 1 26 1 183 1 52 1 153 2 227 1 160 1 
54 1 308 2 88 1 375 1 118 1 260 1 34 1 212 1 357 1 52 1 227 1 373 1 160 1 
161 1 15 1 64 1 170 1 60 1 
62 2 318 1 86 1 161 2 326 1 15 1 64 2 276 1 310 1 222 1 340 1 224 1 354 2 24 1 240 1 170 2 60 1 252 1 267 1 
76 1 161 1 29 1 64 1 306 1 113 1 183 1 60 1 153 1 
24 1 222 1 60 1 
128 1 3 1 58 1 179 1 
202 1 128 1 3 1 58 1 313 1 141 1 122 1 
348 1 379 1 313 1 
193 2 257 1 202 1 128 1 66 1 3 1 58 1 313 3 141 3 122 1 33 1 219 1 
202 1 128 1 3 1 58 1 313 2 116 1 141 2 122 1 28 1 
128 1 313 1 342 1 261 1 202 1 184 1 249 1 122 1 141 1 189 1 219 1 
202 1 128 1 58 1 313 1 141 1 122 1 219 1 
202 1 3 1 58 2 313 1 141 1 122 1 219 1 
128 1 313 2 287 1 82 1 73 1 202 2 58 1 122 2 141 2 219 1 
128 2 3 1 313 3 300 1 353 1 202 1 58 1 172 1 122 1 141 3 189 1 219 1 28 2 
254 1 220 1 128 1 3 1 313 2 261 1 202 1 184 2 58 1 304 1 249 1 122 1 141 2 219 1 28 1 
128 2 3 1 313 4 116 1 351 1 353 1 202 2 58 1 122 2 141 4 189 1 219 1 28 2 
202 1 128 1 3 1 58 1 313 1 141 1 122 1 219 1 
193 1 257 1 128 3 67 1 3 2 313 4 33 1 353 1 202 1 58 2 141 4 122 1 189 1 28 2 
128 1 3 1 313 2 71 1 211 1 202 1 121 1 58 1 122 1 141 2 219 1 28 1 
257 2 193 2 128 1 3 1 313 3 198 1 33 1 202 1 58 1 122 1 141 3 219 1 
200 1 343 1 128 2 93 2 
202 1 312 1 313 1 141 1 122 1 219 1 
202 1 128 1 3 1 58 1 313 2 172 1 141 2 122 1 28 1 219 1 
99 1 
202 1 128 1 3 1 58 1 313 1 141 1 122 1 219 1 
193 1 128 1 3 1 313 3 202 1 58 1 172 1 122 1 141 3 28 1 219 1 
353 1 128 1 67 1 189 1 
128 1 58 1 

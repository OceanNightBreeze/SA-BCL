#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 1 122 2 180 2 74 1 126 1 291 2 227 2 153 2 4 9 215 1 233 1 131 4 192 1 218 1 219 1 135 2 328 2 165 1 196 9 170 6 305 1 199 1 113 1 140 1 91 1 22 5 352 3 121 1 
54 1 122 2 180 2 74 1 126 1 291 2 227 2 153 2 4 9 215 1 233 1 131 4 192 1 218 1 219 1 135 2 328 2 165 1 196 9 170 6 305 1 199 1 113 1 140 1 91 1 22 5 352 3 121 1 
54 1 122 2 180 2 74 1 126 1 291 2 227 2 153 2 4 10 215 1 233 1 131 5 192 1 218 1 219 1 135 2 328 2 165 1 196 10 170 7 305 1 199 1 113 1 140 1 91 1 22 6 352 4 121 1 
122 2 180 1 74 1 126 1 291 2 227 2 153 2 4 7 215 1 233 1 131 3 192 1 218 1 219 1 135 2 328 2 165 1 196 7 170 4 305 1 199 1 113 1 140 1 91 1 22 4 352 2 121 1 
54 1 122 1 328 1 196 4 180 2 170 3 227 1 291 1 305 1 153 1 4 4 215 1 140 1 131 2 22 3 192 1 352 1 121 1 
122 1 135 1 196 2 74 1 291 1 227 1 305 1 213 1 153 1 243 1 4 2 215 1 140 1 91 1 22 1 334 1 
135 1 4 3 122 2 215 1 140 1 131 1 196 3 22 2 170 1 218 1 291 2 305 1 352 1 
122 2 54 1 180 2 291 2 227 1 153 1 4 9 215 1 131 4 192 1 218 1 219 1 135 1 328 1 104 1 196 9 170 7 305 1 47 1 113 1 140 1 22 5 352 3 121 1 
122 2 54 1 180 2 291 2 227 1 153 1 4 9 215 1 131 4 192 1 218 1 219 1 135 1 328 1 104 1 196 9 170 7 305 1 47 1 113 1 140 1 22 5 352 3 121 1 
141 1 8 1 191 1 
5 2 141 1 258 1 
341 2 175 2 355 2 73 2 79 1 374 2 163 1 19 2 
353 1 147 1 315 1 355 3 73 3 269 1 270 1 212 1 97 1 155 1 271 1 341 2 231 1 102 2 361 2 275 1 324 1 79 1 364 1 234 2 277 1 163 1 368 1 262 2 345 2 169 1 64 1 331 1 374 2 221 1 19 2 333 1 175 2 142 1 285 1 204 1 177 1 
341 1 175 1 350 1 355 1 73 1 79 1 374 1 129 1 278 1 19 1 
355 1 73 1 283 1 152 1 129 1 141 1 232 1 175 1 77 1 191 1 365 1 235 1 143 1 133 1 
355 1 73 1 283 1 152 2 374 1 129 1 19 1 341 1 141 1 175 1 77 1 191 1 365 1 235 1 143 2 
173 1 51 1 152 1 143 1 237 1 
173 1 33 1 141 1 351 1 191 1 51 1 152 2 143 2 
51 1 152 1 143 1 
355 1 73 1 152 1 374 1 129 1 19 1 341 1 173 1 244 1 175 1 350 1 79 1 143 1 278 1 
141 1 
173 1 141 1 351 1 191 1 255 1 51 1 152 2 143 2 
134 1 316 1 167 2 152 5 112 1 173 2 141 1 89 1 375 1 132 2 351 1 191 1 9 1 216 1 225 2 51 2 193 1 143 5 298 1 
8 1 163 1 
355 2 73 2 263 1 374 1 19 1 341 1 175 2 217 1 163 2 
139 1 100 1 290 1 
147 1 315 1 262 1 355 1 73 1 345 1 331 1 155 1 309 1 231 1 361 1 275 1 204 1 364 1 177 1 163 1 
147 1 315 1 262 1 355 2 73 2 345 1 125 1 331 1 290 1 374 1 155 1 341 1 231 1 362 1 175 1 361 1 204 1 275 1 364 1 177 1 
355 5 73 5 263 1 125 1 14 1 374 4 332 1 130 1 19 1 341 4 362 2 175 5 133 1 163 1 
341 2 88 1 175 2 350 1 355 2 73 2 374 2 129 1 
341 3 362 1 175 3 355 3 73 3 374 3 163 1 19 1 
341 1 175 1 350 1 355 1 73 1 374 1 129 1 
341 1 175 1 355 1 73 1 263 1 217 1 374 1 129 1 19 1 
353 1 147 1 315 1 355 4 73 4 125 1 212 1 97 1 152 1 129 1 155 1 341 3 231 1 102 2 362 1 361 1 77 1 275 1 324 1 79 1 364 1 365 1 234 1 235 1 277 1 163 1 80 1 368 1 262 1 42 1 263 1 345 1 169 1 64 1 331 1 283 1 374 3 19 2 175 3 142 1 285 1 204 1 143 1 177 1 
341 1 175 2 362 1 355 2 73 2 14 1 374 1 133 1 163 1 
355 3 252 1 263 1 73 3 125 1 283 1 152 1 374 3 129 1 19 1 341 3 141 1 362 2 175 3 77 1 365 1 235 1 143 1 80 1 
355 2 263 1 73 2 290 1 374 2 19 1 341 2 139 1 362 1 175 2 
147 1 315 1 262 1 355 1 73 1 345 1 331 1 155 1 231 1 361 1 275 1 204 1 364 1 177 1 163 1 
147 1 315 1 262 1 355 1 73 1 345 1 331 1 228 1 222 1 361 1 275 1 204 1 364 1 177 1 163 1 
353 1 210 1 354 1 72 1 96 1 212 1 97 1 290 2 102 2 100 2 324 1 234 4 368 1 240 1 13 1 169 2 87 1 46 1 107 1 306 1 221 2 172 1 139 2 142 1 
341 1 88 1 175 1 355 1 73 1 365 1 374 1 129 1 
349 1 65 1 
349 1 65 1 
179 1 247 1 
179 1 247 1 
179 1 247 1 
349 1 65 1 260 1 
349 1 65 1 260 1 
349 1 93 1 65 1 
230 1 179 1 349 2 247 1 292 1 65 2 
349 1 65 1 260 1 
349 1 181 1 65 1 
349 1 181 1 65 1 
349 1 181 1 65 1 
209 1 317 1 211 1 355 2 73 2 152 1 293 1 320 1 214 1 341 2 272 1 325 1 163 1 370 1 83 1 197 1 65 1 374 2 349 1 175 2 93 1 94 1 143 1 207 1 
330 1 317 2 370 2 211 1 197 2 183 1 86 2 303 1 65 2 152 2 186 1 230 1 360 1 349 2 141 1 325 2 94 3 143 2 53 1 
328 1 227 1 153 1 
334 1 227 1 153 1 
328 2 323 1 253 1 334 1 227 3 195 1 
328 1 2 1 323 1 334 1 227 2 195 1 
328 1 323 2 334 1 227 2 195 1 
337 1 249 2 24 1 72 1 152 5 293 1 320 1 98 1 5 3 132 1 258 1 191 1 37 1 297 2 193 3 298 2 167 1 371 1 44 1 87 1 46 1 306 1 68 2 173 4 375 1 141 2 351 1 116 1 225 1 51 1 143 5 207 1 
24 2 72 3 25 1 152 9 98 3 76 1 5 9 132 2 258 3 191 1 216 1 236 1 297 6 193 8 298 6 237 5 371 1 167 2 87 3 43 5 46 3 306 3 68 6 173 7 141 5 375 1 90 1 50 1 351 1 116 2 225 2 51 6 118 1 143 9 207 4 
337 1 24 1 249 1 72 1 152 3 98 1 5 4 132 1 258 2 191 1 37 1 216 1 193 3 297 2 298 2 167 1 87 1 46 1 306 1 68 2 173 2 141 3 116 1 225 1 143 3 207 1 
337 1 24 1 249 2 72 2 25 1 152 4 98 2 76 1 5 7 132 1 258 3 191 1 216 1 37 1 236 1 297 4 193 5 298 4 167 1 87 2 46 2 306 2 68 4 173 3 141 4 116 1 225 1 143 4 207 2 
8 1 373 1 177 1 
95 1 177 1 
295 1 
204 1 364 1 177 1 
256 1 177 1 
364 1 177 1 
114 1 204 1 364 1 373 2 177 3 138 1 
63 1 55 1 82 1 210 3 169 3 46 1 75 1 306 1 172 2 221 4 359 1 321 1 7 2 310 1 286 1 234 7 336 1 
63 1 55 1 82 1 210 3 169 3 46 1 75 1 306 1 172 2 221 4 359 1 321 1 7 2 310 1 286 1 234 7 336 1 
63 1 55 1 82 1 210 3 169 3 46 1 75 1 306 1 172 2 67 1 221 4 359 1 321 1 7 2 310 1 286 1 234 7 336 1 
353 1 1 1 55 2 56 3 210 10 72 3 75 2 212 1 97 1 98 3 359 1 102 2 101 1 60 1 7 3 321 2 324 1 234 31 63 1 82 2 81 1 106 1 84 1 169 15 87 3 46 4 306 4 221 16 172 5 115 4 310 1 286 1 69 1 336 5 
353 2 55 1 210 4 75 1 212 2 97 2 359 1 32 1 102 4 60 1 7 2 321 1 324 2 234 9 63 1 82 1 169 4 372 1 46 1 306 1 221 5 172 3 310 1 336 1 
122 1 147 1 268 1 288 1 253 1 185 1 291 1 227 2 153 1 4 2 215 1 361 1 275 1 135 1 328 1 281 1 262 1 196 2 345 1 170 1 45 1 305 1 348 1 140 1 49 1 22 1 334 1 266 1 120 1 226 1 
122 1 147 1 288 1 253 1 184 1 291 1 227 2 153 1 4 3 361 1 275 1 194 1 135 1 328 1 281 1 262 1 196 3 345 1 170 2 45 1 305 1 348 1 140 1 284 1 49 1 22 1 334 1 266 1 120 1 226 1 
147 1 288 1 253 1 184 1 227 2 153 1 4 2 361 1 275 1 194 1 135 1 281 1 328 1 262 1 196 2 345 1 170 2 45 1 305 1 348 1 140 1 49 1 22 1 334 1 120 1 
147 1 122 1 288 2 57 1 291 1 4 1 361 1 276 1 275 1 364 1 135 2 262 1 196 1 345 1 331 1 304 1 108 1 18 1 284 1 203 1 49 2 120 2 177 1 
122 1 147 1 288 1 253 1 185 1 291 1 227 2 153 1 4 1 215 1 361 1 275 1 194 1 135 1 328 1 281 1 262 1 196 1 345 1 45 1 348 1 49 1 334 1 266 1 120 1 226 1 
307 1 
147 1 251 1 57 1 152 5 154 1 294 1 3 2 5 2 160 4 258 2 298 2 261 1 262 2 166 2 167 1 345 2 347 2 66 1 308 1 175 1 311 1 351 3 225 1 312 1 177 1 267 2 24 1 355 1 73 1 127 2 319 2 129 1 361 2 232 1 132 1 77 1 275 1 191 1 364 1 365 1 235 1 193 2 133 1 326 1 369 1 331 2 283 1 141 2 203 1 375 1 201 1 246 1 378 2 51 6 143 5 
261 1 355 1 73 1 255 1 283 1 152 3 129 1 154 1 3 1 201 1 232 1 175 1 160 2 77 1 246 1 351 1 365 1 235 1 51 2 143 3 133 1 326 1 
261 1 355 1 73 1 255 1 283 1 152 3 129 1 154 1 141 1 201 1 232 1 175 1 160 3 77 1 246 1 351 1 191 1 378 1 365 1 235 1 51 1 143 3 133 1 326 1 
355 1 73 1 255 1 152 3 154 1 129 1 3 1 232 1 77 1 160 3 365 1 191 1 235 1 133 1 326 1 261 1 283 1 347 1 175 1 201 1 141 1 246 1 351 1 378 1 51 2 143 3 
251 1 255 1 58 1 152 5 154 1 3 4 159 1 160 6 258 2 298 1 261 1 166 2 167 1 347 4 175 1 351 3 225 1 267 2 355 1 73 1 127 2 319 2 129 1 31 1 232 1 273 1 132 1 77 1 365 1 191 5 235 1 193 1 133 1 38 1 326 1 369 1 283 1 201 1 141 5 375 1 246 1 378 4 51 7 143 5 
251 1 355 1 73 1 127 2 319 2 152 4 154 1 129 1 3 2 5 2 232 1 132 1 77 1 160 4 258 2 191 1 365 1 235 1 193 1 298 1 133 1 326 1 261 1 369 1 166 2 167 1 347 2 283 1 66 1 141 2 201 1 375 1 175 1 246 1 351 2 378 2 225 1 51 4 143 4 267 2 
251 1 355 1 73 1 127 2 58 1 319 2 152 4 154 1 129 1 3 2 31 1 232 1 132 1 77 1 160 4 258 2 191 1 365 1 235 1 193 1 38 1 298 1 133 1 326 1 261 1 369 1 166 2 167 1 347 2 283 1 141 1 175 1 201 1 375 1 246 1 351 2 378 2 225 1 51 4 143 4 267 2 
251 1 355 1 73 1 127 2 58 1 319 2 152 4 154 1 129 1 3 2 31 1 232 1 132 1 77 1 160 4 258 2 191 1 365 1 235 1 193 1 38 1 298 1 133 1 326 1 261 1 369 1 166 2 167 1 347 2 283 1 141 1 175 1 201 1 375 1 246 1 351 2 378 2 225 1 51 4 143 4 267 2 
208 2 248 1 251 1 355 1 73 1 127 2 152 4 154 1 129 1 3 2 5 2 232 1 132 1 274 1 77 1 160 4 191 1 365 1 235 1 193 1 38 1 298 1 133 1 326 1 261 1 166 2 167 1 347 2 283 1 141 1 175 1 201 1 375 1 246 1 351 2 378 2 205 1 225 1 51 4 143 4 146 2 
251 1 355 1 73 1 127 2 58 1 319 2 152 4 154 1 129 1 3 3 31 1 232 1 132 1 273 1 77 1 160 5 258 2 191 1 365 1 235 1 193 1 38 1 298 1 133 1 326 1 261 1 369 1 166 2 167 1 283 1 347 3 141 1 375 1 175 1 201 1 246 1 351 2 378 3 225 1 51 5 143 4 267 2 
251 1 355 1 73 1 127 2 58 1 319 2 152 4 154 1 129 1 3 3 31 1 232 1 132 1 273 1 77 1 160 5 258 2 191 1 365 1 235 1 193 1 38 1 298 1 133 1 326 1 261 1 369 1 166 2 167 1 283 1 347 3 141 1 375 1 175 1 201 1 246 1 351 2 378 3 225 1 51 5 143 4 267 2 
208 2 251 1 355 1 73 1 127 2 152 4 154 1 129 1 3 2 5 2 232 1 132 1 77 1 160 4 274 1 191 1 365 1 235 1 193 1 298 1 133 1 326 1 261 1 166 2 167 1 347 2 283 1 66 1 141 1 201 1 375 1 175 1 246 1 351 2 378 2 225 1 51 4 143 4 146 2 
353 1 210 2 75 1 290 1 212 1 97 1 359 1 102 2 100 1 8 1 7 1 324 1 234 6 163 2 63 1 82 1 368 1 13 1 169 3 46 1 306 1 172 2 221 3 139 1 310 1 142 1 
353 2 1 1 56 3 210 2 72 2 269 1 128 1 212 2 97 2 290 11 98 2 102 4 100 11 324 2 234 14 163 1 300 1 81 1 368 2 168 1 169 6 64 1 87 1 198 1 46 1 306 2 172 1 221 8 115 3 139 4 142 1 264 1 336 1 
147 1 353 1 315 1 355 2 73 2 125 1 59 1 269 1 97 1 212 1 155 1 341 1 231 1 102 2 361 1 362 1 363 1 275 1 324 1 364 1 234 2 163 1 368 1 262 1 345 1 169 1 64 1 331 1 198 1 374 1 221 1 309 1 139 1 175 1 142 1 204 1 177 1 71 1 
147 2 210 8 212 3 97 3 290 7 155 2 98 2 341 1 102 6 100 7 7 1 163 2 63 1 262 3 345 3 169 10 64 1 15 1 306 3 110 1 111 2 172 4 221 10 20 2 310 1 175 1 223 2 177 2 353 3 315 2 72 2 355 3 73 3 125 1 269 1 75 1 30 2 359 1 231 2 361 3 362 1 275 2 190 1 324 3 364 2 234 20 194 1 82 1 368 3 331 1 87 2 46 3 198 1 374 1 139 7 142 3 285 2 204 2 336 4 
147 2 353 2 268 1 355 1 123 1 57 1 73 1 269 1 270 2 212 2 97 2 29 1 341 1 102 4 362 1 361 8 275 2 324 2 364 2 234 2 194 1 239 1 368 2 262 7 345 8 13 1 169 1 64 1 331 2 374 1 16 1 221 1 200 1 175 1 203 1 142 2 52 1 177 3 23 1 
353 1 210 1 72 1 355 1 73 1 290 1 212 1 97 1 98 1 341 1 100 1 102 2 324 1 234 3 368 1 263 1 85 1 169 2 87 1 198 1 46 1 374 1 306 1 172 1 19 1 221 1 139 1 175 1 142 1 
353 1 368 1 210 1 72 1 13 1 107 1 290 1 97 1 212 1 306 1 221 2 139 1 100 1 102 2 142 1 324 1 234 2 336 1 
353 1 368 1 210 1 240 1 13 1 169 2 87 1 46 1 290 1 97 1 212 1 172 1 139 1 100 1 102 2 142 1 324 1 234 2 
353 1 368 1 210 2 72 1 169 2 13 1 87 1 46 1 290 2 97 1 212 1 306 1 98 1 172 1 221 2 139 2 100 2 102 2 142 1 324 1 234 4 336 1 
353 1 368 1 210 1 72 1 123 1 107 1 290 1 97 1 212 1 306 1 221 2 139 1 100 1 102 2 142 1 324 1 234 2 336 1 
353 1 368 1 210 1 240 1 123 1 169 2 87 1 46 1 290 1 97 1 212 1 172 1 139 1 100 1 102 2 142 1 324 1 234 2 
353 1 368 1 210 2 72 1 123 1 169 2 87 1 46 1 290 2 97 1 212 1 306 1 98 1 172 1 221 2 139 2 100 2 102 2 142 1 324 1 234 4 336 1 
353 1 368 1 210 2 72 1 169 2 87 1 46 1 290 2 97 1 212 1 306 1 98 1 172 1 221 2 139 2 100 2 102 2 142 1 324 1 234 4 336 1 
147 1 353 1 315 1 355 1 73 1 269 1 97 1 212 1 155 1 231 1 102 2 361 1 275 1 324 1 364 1 234 2 163 1 368 1 262 1 345 1 169 1 64 1 331 1 221 1 285 1 142 1 204 1 177 1 
147 1 353 1 315 1 355 1 73 1 269 1 97 1 212 1 228 1 102 2 361 1 275 1 324 1 364 1 234 2 163 1 368 1 262 1 345 1 169 1 64 1 331 1 221 1 222 1 142 1 204 1 177 1 145 1 
353 1 368 1 210 2 72 1 169 2 87 1 46 1 198 1 290 2 97 1 212 1 306 1 98 1 172 1 221 2 139 2 100 2 102 2 142 1 324 1 234 4 336 1 
147 1 353 1 268 1 315 1 210 2 72 1 355 1 73 1 290 2 97 1 212 1 155 1 98 1 231 1 100 2 102 2 361 1 275 1 324 1 364 1 234 4 368 1 262 1 345 1 169 2 87 1 46 1 306 1 172 1 221 2 139 2 20 1 285 1 142 1 204 1 336 1 177 1 
353 1 210 1 72 1 355 1 73 1 212 1 97 1 290 1 98 1 341 1 102 2 100 1 324 1 234 3 368 1 263 1 169 1 87 1 46 1 198 1 374 1 306 1 19 1 221 2 139 1 175 1 142 1 336 1 380 1 
353 3 178 1 1 1 56 3 210 8 289 1 72 4 75 1 212 3 97 3 358 1 98 4 359 1 99 4 187 1 158 1 32 1 60 1 102 6 7 1 34 1 296 1 103 1 324 3 234 41 161 1 162 1 279 1 63 1 11 1 82 1 81 3 136 1 282 2 169 21 87 4 46 5 306 5 172 4 221 20 115 4 310 1 336 4 
353 4 178 1 1 1 56 3 210 7 289 1 72 4 75 1 212 4 97 4 358 1 98 4 359 1 99 4 187 1 158 1 32 1 60 2 102 8 7 1 34 1 296 1 103 1 324 4 234 38 161 1 162 1 279 1 63 1 11 1 82 1 81 3 136 1 282 2 169 18 87 3 46 4 306 5 172 4 221 20 115 4 310 1 336 3 
353 2 1 2 56 4 210 14 289 1 72 7 75 1 212 2 97 2 358 1 98 7 359 1 99 4 187 1 158 1 32 1 60 1 102 4 7 1 34 1 296 1 103 1 324 2 234 52 161 1 162 1 300 2 279 1 63 1 11 1 82 1 81 2 282 1 169 25 87 7 46 8 306 8 172 7 221 27 115 4 310 1 336 7 
353 2 178 1 1 1 56 1 210 6 289 1 72 3 212 2 97 2 98 3 99 2 187 1 158 2 32 1 102 4 324 2 234 19 161 1 162 1 81 1 301 1 282 1 169 10 87 3 46 3 306 3 172 3 221 9 115 2 336 3 
353 3 56 2 210 4 289 1 72 3 212 3 97 3 358 1 98 3 99 4 187 1 158 1 32 1 60 2 102 6 34 1 296 1 103 1 324 3 234 26 161 1 162 2 279 1 11 1 81 2 282 2 169 12 87 2 46 2 306 3 172 2 221 14 115 2 336 2 
230 1 360 1 0 1 349 1 370 1 317 1 197 1 325 1 65 1 186 1 
209 1 93 1 
349 1 370 1 317 1 356 1 197 1 379 1 325 1 65 1 340 1 
280 1 260 1 
250 1 181 1 292 1 
330 1 317 1 370 1 211 1 197 1 86 1 303 1 152 1 65 1 186 1 230 1 360 1 349 1 141 1 325 1 94 2 143 1 53 1 
330 1 317 1 370 1 211 1 197 1 86 1 303 1 152 1 65 1 186 1 230 1 360 1 349 1 141 1 325 1 94 2 143 1 53 1 
330 1 317 1 370 1 211 1 197 1 86 1 303 1 152 1 65 1 186 1 230 1 360 1 349 1 141 1 325 1 94 2 143 1 53 1 
280 1 292 1 260 1 
280 1 292 1 260 1 
250 1 181 1 
250 1 181 1 292 1 
272 1 214 1 
209 1 317 1 355 2 73 2 152 1 293 1 320 1 214 1 341 2 272 1 325 1 163 1 299 1 330 1 370 1 83 1 197 1 86 1 65 1 374 2 173 1 349 1 175 2 93 1 94 1 143 1 207 1 
147 1 353 1 355 2 73 2 269 1 270 2 97 1 318 1 212 1 29 1 102 2 361 2 275 1 324 1 364 1 234 2 10 1 368 1 262 2 345 2 169 1 346 1 220 1 64 1 198 1 221 1 175 2 142 1 206 1 177 1 23 1 
147 1 328 1 313 1 268 1 281 1 262 2 253 1 345 2 227 2 153 1 348 1 361 2 49 1 275 1 176 1 334 1 266 1 70 1 194 1 
147 1 328 1 281 1 262 1 253 1 345 1 227 2 153 1 348 1 361 1 49 1 176 1 275 1 334 1 266 1 194 1 164 1 
147 1 313 1 262 1 57 1 345 1 331 1 304 1 361 1 203 1 49 1 376 1 275 1 364 1 177 1 
147 1 328 1 313 1 281 1 262 1 253 1 345 1 227 2 153 1 348 1 361 1 49 1 176 1 275 1 334 1 266 1 70 1 194 1 
329 1 
141 1 316 1 89 1 8 1 191 1 193 1 298 1 
319 1 152 1 5 1 132 1 258 1 191 1 193 1 298 1 369 1 167 1 375 1 141 2 351 1 225 1 51 1 143 1 267 1 
147 4 151 2 95 3 339 2 152 5 98 2 256 2 5 12 258 6 297 6 298 8 262 3 167 4 345 3 171 1 306 2 114 1 68 6 308 1 265 2 351 3 224 2 225 4 117 2 177 10 268 1 24 2 316 1 72 2 28 2 30 2 361 3 188 1 132 4 35 1 78 2 275 3 191 2 364 3 193 9 366 1 331 1 373 2 87 2 242 1 283 2 46 2 89 1 375 4 141 8 204 3 51 5 143 5 287 2 
24 1 151 2 56 1 72 2 152 1 358 1 98 2 5 6 61 1 132 2 34 1 258 3 103 1 191 2 297 5 193 8 298 5 279 1 11 1 81 1 167 2 87 2 46 2 109 1 306 2 68 5 308 1 115 1 375 2 141 5 351 1 225 2 117 1 51 1 143 1 
151 2 355 1 73 1 254 1 58 1 75 1 152 1 129 1 359 1 341 1 132 1 79 1 193 2 298 2 278 1 82 1 167 1 46 1 374 1 306 2 19 1 375 1 244 1 175 1 350 1 225 1 117 1 143 1 
316 1 167 1 89 1 375 1 141 1 132 1 191 1 225 1 193 1 298 1 
151 2 72 2 87 2 46 2 306 2 30 1 98 2 68 5 5 10 141 5 258 5 117 1 297 5 193 5 298 5 
141 1 351 1 191 1 152 1 51 1 143 1 
147 3 24 1 314 1 57 1 152 2 26 1 157 1 361 3 132 2 35 1 275 2 364 2 216 1 193 1 298 1 12 1 262 3 167 2 345 3 331 2 242 1 308 1 375 1 203 1 21 1 204 1 311 1 351 1 225 2 312 1 51 2 143 2 177 2 
353 1 147 1 315 1 355 3 73 3 212 1 97 1 155 1 341 2 231 1 102 2 361 1 275 1 324 1 79 1 364 1 234 1 277 1 163 1 368 1 262 1 345 1 169 1 64 1 331 1 374 2 19 2 175 2 285 1 142 1 204 1 177 1 
24 1 167 1 68 2 308 1 5 4 7 1 375 1 141 4 132 1 258 2 191 2 225 1 297 2 193 1 298 2 
338 1 197 1 325 1 
338 1 197 1 325 1 
344 1 197 1 325 1 186 1 214 1 
338 1 197 1 325 1 
257 1 197 1 325 1 
257 1 197 1 325 1 
257 1 197 1 325 1 
197 1 325 1 
349 1 65 1 
353 1 56 1 210 2 75 1 212 1 97 1 359 1 32 1 102 2 7 1 324 1 234 8 279 1 63 1 81 1 82 1 169 4 46 1 306 1 221 4 172 2 115 1 310 1 
353 2 1 1 56 1 210 3 72 1 75 1 212 2 97 2 98 1 359 1 32 1 102 4 7 1 324 2 234 11 279 1 63 1 82 1 81 1 105 1 169 5 46 1 306 2 172 2 221 6 115 2 310 1 336 1 
353 3 56 1 210 4 72 2 75 1 212 3 97 3 358 1 98 2 359 1 32 1 102 6 60 1 7 1 34 1 103 1 324 3 234 19 279 1 63 1 11 1 82 1 81 1 105 1 169 10 87 2 46 3 306 3 221 9 172 3 115 1 310 1 336 1 
353 3 56 1 210 5 72 2 75 1 212 3 97 3 358 1 98 2 359 1 32 1 60 1 102 6 7 1 34 1 324 3 103 1 234 17 279 1 63 1 11 1 82 1 81 1 105 1 169 7 87 1 46 2 306 3 221 10 172 3 115 1 310 1 336 2 
353 1 56 1 210 2 75 1 212 1 97 1 359 1 32 1 102 2 7 1 324 1 234 8 279 1 63 1 81 1 82 1 169 4 46 1 306 1 221 4 172 2 115 1 310 1 
11 1 353 1 81 1 56 1 210 2 72 2 169 6 87 2 46 2 97 1 212 1 306 2 358 1 98 2 172 1 221 6 32 1 115 1 102 2 34 1 103 1 324 1 234 12 336 1 279 1 
353 4 56 1 210 5 72 2 75 1 212 4 97 4 358 1 98 2 359 1 32 1 102 8 60 2 7 1 34 1 103 1 324 4 234 18 279 1 63 1 11 1 82 1 81 1 105 1 169 8 87 1 46 2 306 3 221 10 172 3 115 1 310 1 336 2 
353 4 178 1 56 1 210 6 72 3 212 4 97 4 358 1 98 3 32 1 102 8 60 2 34 1 103 1 324 4 234 16 279 1 11 1 81 1 169 7 87 2 46 2 306 3 221 9 172 3 115 1 336 3 
63 2 82 3 210 6 169 4 46 1 75 3 306 1 172 3 221 3 359 1 310 1 234 7 336 3 
353 4 178 1 56 1 210 4 72 2 75 1 212 4 97 4 358 1 98 2 359 1 32 1 102 8 60 2 7 1 34 1 103 1 324 4 234 18 279 1 63 1 11 1 82 1 81 1 169 8 87 1 46 2 306 3 221 10 172 3 115 1 310 1 336 1 
353 2 63 1 82 1 210 3 169 4 46 1 75 1 97 2 212 2 306 1 221 4 172 2 359 1 102 4 60 1 7 1 310 1 324 2 234 8 336 1 
63 1 82 1 210 2 169 3 75 1 46 1 306 1 172 2 221 3 359 1 7 1 8 1 310 1 234 6 
353 1 210 2 72 1 105 1 169 2 87 1 46 1 97 1 212 1 306 1 98 1 172 1 221 2 102 2 324 1 234 4 336 1 
1 1 81 1 56 1 210 2 72 1 169 4 87 1 46 1 306 1 98 1 172 1 221 3 115 2 234 7 336 1 
353 2 1 1 56 2 210 9 72 2 75 2 97 2 212 2 98 2 359 1 60 2 102 4 7 1 324 2 234 23 300 1 63 1 82 2 169 12 87 2 46 3 306 3 221 11 172 5 115 2 310 1 264 1 336 4 144 1 
115 1 169 1 234 1 
56 1 234 1 221 1 
353 1 210 3 72 1 105 1 169 3 87 1 46 1 212 1 97 1 306 1 30 1 98 1 221 3 172 2 102 2 324 1 234 6 336 1 
11 1 353 1 81 1 56 1 210 2 72 2 169 6 87 2 46 2 97 1 212 1 306 2 358 1 98 2 172 1 221 6 32 1 115 1 102 2 34 1 103 1 324 1 234 12 336 1 279 1 
82 1 210 2 169 3 46 1 75 1 306 1 221 3 172 1 359 1 234 6 336 1 
63 1 353 1 82 1 210 2 169 2 75 1 97 1 212 1 221 1 172 1 60 1 102 2 310 1 324 1 234 3 336 1 144 1 
353 1 82 2 210 5 254 1 169 5 75 2 46 2 212 1 97 1 306 2 172 3 221 5 359 1 32 1 102 2 324 1 234 10 336 2 
353 1 210 1 72 1 97 1 212 1 306 1 221 2 32 1 102 2 324 1 234 2 336 1 
353 1 210 2 72 1 169 2 87 1 46 1 97 1 212 1 306 1 98 1 172 1 221 2 32 1 102 2 324 1 234 4 336 1 
353 3 178 1 82 1 210 2 169 2 75 1 97 3 212 3 172 1 221 1 32 1 60 1 102 6 324 3 234 3 336 1 144 1 
353 5 178 1 1 1 56 3 210 12 72 3 75 3 212 5 97 5 98 3 359 2 32 1 60 2 101 1 102 10 7 1 324 5 234 34 63 1 82 3 81 1 105 1 84 1 169 18 87 3 46 5 306 5 221 16 172 7 115 4 310 1 69 1 336 5 144 1 
175 1 202 1 355 1 73 1 14 1 133 1 163 1 
302 1 355 1 73 1 14 1 17 1 202 1 175 1 189 1 343 1 119 1 133 1 163 1 
147 1 203 1 8 1 361 1 262 1 57 1 275 1 345 1 364 1 331 1 177 1 
147 1 315 1 262 1 355 2 73 2 345 1 331 1 374 1 155 1 341 1 362 1 175 1 361 1 204 1 275 1 364 1 177 1 163 1 
147 1 315 1 262 1 355 2 73 2 345 1 374 2 129 1 155 1 341 1 256 1 362 1 175 2 361 1 77 1 204 2 35 1 275 1 365 1 364 2 224 1 177 3 163 1 
147 1 315 1 355 2 73 2 129 1 228 1 341 1 6 1 256 1 361 2 362 1 77 1 275 1 35 1 364 2 365 1 163 1 262 2 345 2 374 2 175 2 204 2 224 1 177 3 
147 1 149 1 95 1 152 2 27 1 6 1 256 1 361 3 275 1 35 1 364 1 191 1 262 3 345 3 373 1 331 1 283 1 141 1 204 1 224 1 51 1 143 2 177 4 
147 1 262 3 95 1 345 3 331 1 339 1 373 1 283 1 152 2 6 1 256 1 141 1 361 3 204 1 35 1 275 1 191 1 364 1 224 1 51 1 143 2 177 4 
147 1 361 1 262 1 275 1 345 1 52 1 
147 3 268 1 39 1 314 1 262 6 345 7 270 1 331 2 16 1 26 1 29 1 114 1 200 1 361 7 204 1 275 2 364 2 52 1 194 1 177 3 239 1 
147 1 353 2 268 1 315 1 210 2 355 2 73 2 75 1 290 1 97 2 212 2 155 1 359 1 341 1 231 1 100 1 102 4 7 1 362 1 361 1 275 1 324 2 364 1 234 6 163 2 63 1 82 1 368 2 262 1 345 1 169 3 346 1 46 1 198 1 374 1 306 1 111 1 221 3 172 2 139 1 20 1 310 1 175 1 142 2 285 1 204 1 177 1 
316 1 95 1 339 1 152 3 361 1 132 2 78 1 191 1 193 1 298 1 262 1 167 2 345 1 331 1 373 1 242 1 283 1 173 1 141 1 89 1 375 2 265 1 351 1 225 2 51 2 143 3 287 1 177 2 
147 2 114 1 268 1 188 1 361 2 262 2 275 1 204 1 345 2 364 1 373 1 52 1 177 2 
147 1 268 1 262 4 57 1 345 4 331 1 6 1 361 4 203 1 275 1 364 1 238 1 177 1 
147 2 314 1 262 2 12 1 345 2 26 1 110 1 157 1 361 2 35 1 204 1 275 1 364 1 177 1 
147 1 361 1 262 1 275 1 345 1 334 1 331 1 227 1 153 1 348 1 
147 1 268 1 262 2 345 2 29 1 361 2 275 1 364 1 10 1 194 1 177 1 
147 2 268 1 262 4 57 1 345 5 331 1 16 1 29 1 203 1 361 5 35 1 275 2 364 2 238 1 177 3 239 1 
147 2 268 1 262 4 57 1 345 5 331 1 29 1 203 1 361 5 35 1 275 2 62 1 364 2 238 1 177 3 239 1 
147 1 315 1 262 1 355 2 73 2 345 1 331 1 374 1 228 1 341 1 362 1 175 1 361 1 204 1 275 1 364 1 177 1 163 1 
147 2 39 1 314 1 262 1 345 1 26 1 114 1 361 1 35 1 204 1 275 1 364 1 177 1 
156 1 322 1 92 1 357 1 163 1 
241 1 357 1 283 1 152 2 129 1 48 1 156 2 173 1 141 1 245 1 322 2 77 1 92 2 191 1 365 1 235 1 143 2 163 1 80 1 
355 1 73 1 357 1 220 1 318 1 156 1 175 1 92 1 206 1 
245 1 357 1 48 1 
140 1 8 1 22 1 305 1 
4 1 122 1 140 1 196 1 22 1 291 1 305 1 
135 1 288 1 196 1 
4 3 122 1 148 1 215 1 140 1 91 2 196 3 22 1 259 1 291 1 305 1 229 1 
4 2 122 1 140 1 180 1 196 2 22 1 170 1 291 1 305 1 
4 1 122 1 328 1 215 1 131 1 196 1 22 1 192 1 227 1 291 1 153 1 
4 1 122 1 215 1 140 1 196 1 22 1 291 1 
4 1 122 1 215 1 140 2 196 1 291 1 305 1 
122 2 196 2 41 1 291 2 4 2 215 1 140 1 174 1 22 1 327 1 
122 1 196 3 170 2 291 1 305 1 4 3 113 1 215 1 140 1 131 1 22 2 219 1 352 1 
122 1 328 1 196 2 182 1 253 1 170 1 227 2 291 1 305 1 153 1 4 2 215 1 140 1 22 1 334 1 
54 1 4 4 122 2 215 1 140 1 131 1 180 1 196 4 22 2 170 2 291 2 305 1 352 1 
4 1 122 1 215 1 140 1 196 1 22 1 291 1 305 1 
122 1 148 1 196 4 170 2 291 1 305 2 4 4 140 2 131 1 91 1 22 3 259 1 367 1 352 1 
4 2 122 1 215 1 140 1 196 2 40 1 22 1 170 1 335 1 291 1 305 1 47 1 
122 1 148 2 196 3 291 1 305 1 4 3 215 1 140 1 91 2 22 1 36 1 259 1 
342 2 377 1 22 2 137 1 
4 1 122 1 215 1 150 1 196 1 291 1 
113 1 4 2 122 1 215 1 140 1 196 2 22 1 170 1 291 1 305 1 
124 1 
4 1 122 1 215 1 140 1 196 1 22 1 291 1 305 1 
113 1 4 3 122 1 215 1 140 1 91 1 196 3 22 1 170 1 291 1 305 1 
131 1 22 1 367 1 352 1 
140 1 22 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 115 195 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
351 2 41 1 231 1 104 1 232 2 59 1 159 2 81 1 108 6 263 5 87 2 3 1 22 1 316 1 188 1 27 9 26 2 365 1 297 2 97 3 372 9 276 1 219 1 255 1 119 1 376 2 226 4 121 1 
351 2 41 1 231 1 104 1 232 2 59 1 81 1 159 2 108 6 263 5 87 2 3 1 22 1 316 1 188 1 26 2 27 9 365 1 297 2 97 3 372 9 276 1 219 1 255 1 119 1 376 2 226 4 121 1 
351 2 41 1 231 1 104 1 232 2 59 1 81 1 159 2 108 7 263 6 87 2 3 1 22 1 316 1 188 1 26 2 27 10 365 1 297 2 97 4 372 10 276 1 219 1 255 1 119 1 376 2 226 5 121 1 
351 2 41 1 231 1 104 1 232 2 81 1 159 1 108 4 263 4 87 2 3 1 22 1 316 1 188 1 26 2 27 7 365 1 297 2 97 2 372 7 276 1 219 1 255 1 119 1 376 2 226 3 121 1 
297 1 351 1 232 1 97 1 59 1 159 2 372 4 276 1 219 1 108 3 263 3 255 1 3 1 119 1 376 1 226 2 27 4 26 1 
297 1 351 1 231 1 232 1 324 1 372 2 276 1 219 1 74 1 252 1 263 1 87 1 119 1 376 1 188 1 27 2 
297 2 232 2 97 1 372 3 276 1 219 1 108 1 263 2 87 1 119 1 316 1 226 1 27 3 
283 1 311 1 351 1 232 2 159 2 59 1 108 7 263 5 87 1 3 1 22 1 316 1 27 9 26 1 297 2 97 3 372 9 276 1 219 1 255 1 119 1 226 4 376 1 121 1 
283 1 311 1 351 1 232 2 159 2 59 1 108 7 263 5 87 1 3 1 22 1 316 1 27 9 26 1 297 2 97 3 372 9 276 1 219 1 255 1 119 1 226 4 376 1 121 1 
31 1 94 1 279 1 
144 2 31 1 228 1 
143 2 344 1 277 2 346 2 269 2 347 2 294 1 6 2 
126 1 285 1 58 1 202 1 130 2 234 1 359 2 186 1 187 1 4 1 207 1 294 1 362 2 90 1 112 2 137 1 6 2 368 1 322 1 267 1 269 2 270 1 300 1 215 1 192 1 323 1 217 1 325 1 143 3 344 1 277 2 307 1 345 1 346 2 15 1 347 3 149 2 
143 1 277 1 346 1 269 1 301 1 347 1 294 1 183 1 172 1 6 1 
339 1 31 1 298 1 286 1 116 1 230 1 235 1 183 1 143 1 117 1 346 1 279 1 347 1 377 1 
31 1 269 1 286 1 116 2 230 2 235 1 183 1 143 1 277 1 117 1 346 1 279 1 347 1 377 1 6 1 
21 1 56 1 116 1 200 1 230 1 
205 1 167 1 56 1 31 1 279 1 116 2 200 1 230 2 
56 1 116 1 230 1 
269 1 200 1 116 1 301 1 230 1 183 1 172 1 133 1 143 1 277 1 346 1 294 1 347 1 6 1 
31 1 
167 1 56 1 31 1 175 1 279 1 116 2 200 1 230 2 
167 1 312 1 56 2 152 1 284 2 31 1 200 2 116 5 230 5 273 1 275 2 73 1 238 1 278 2 279 1 101 1 243 1 295 1 16 1 
344 1 94 1 
269 1 260 1 143 2 277 1 344 2 346 2 88 1 347 2 6 1 
237 1 8 1 141 1 
368 1 322 1 267 1 285 1 42 1 215 1 130 1 234 1 325 1 143 1 344 1 187 1 207 1 347 1 149 1 362 1 
339 1 310 1 178 1 258 2 269 4 260 1 354 1 143 5 277 1 344 1 239 1 346 5 347 5 6 4 
143 2 346 2 269 2 347 2 317 1 183 1 172 1 6 2 
310 1 368 1 285 1 267 1 322 1 258 1 269 1 215 1 141 1 234 1 130 1 325 1 143 2 346 1 187 1 207 1 347 2 149 1 362 1 6 1 
143 3 277 1 344 1 258 1 346 3 269 3 347 3 6 3 
143 1 346 1 269 1 347 1 183 1 172 1 6 1 
143 1 277 1 346 1 269 1 260 1 88 1 347 1 183 1 6 1 
310 1 19 1 126 1 285 1 258 1 260 1 286 1 58 1 202 1 230 1 234 1 130 1 235 1 183 1 359 1 187 1 4 1 207 1 294 1 362 1 90 1 112 2 137 1 6 3 368 1 267 1 322 1 269 3 270 1 116 1 215 1 323 1 13 1 217 1 325 1 143 4 344 1 117 1 277 2 346 3 15 1 347 4 149 1 377 1 
143 2 344 1 339 1 239 1 258 1 346 2 269 1 347 2 6 1 
310 1 19 1 31 1 258 2 269 3 260 1 116 1 286 1 230 1 183 1 235 1 143 3 277 1 117 1 346 3 241 1 347 3 377 1 6 3 
143 2 277 1 258 1 346 2 269 2 260 1 8 1 347 2 141 1 6 2 
368 1 322 1 267 1 285 1 215 1 130 1 234 1 325 1 143 1 344 1 187 1 207 1 347 1 149 1 362 1 
368 1 322 1 285 1 130 1 234 1 325 1 143 1 344 1 187 1 109 1 207 1 347 1 149 1 362 1 209 1 
126 1 202 1 358 1 160 1 237 2 359 4 62 1 90 2 112 2 137 1 50 1 92 1 189 1 212 1 299 1 270 1 8 2 141 2 323 1 35 1 307 2 99 1 15 1 151 1 
143 1 346 1 269 1 286 1 347 1 317 1 183 1 6 1 
148 1 79 1 
148 1 79 1 
146 1 122 1 
146 1 122 1 
146 1 122 1 
148 1 155 1 79 1 
148 1 155 1 79 1 
148 1 79 1 242 1 
0 1 146 1 148 2 79 2 370 1 122 1 
148 1 155 1 79 1 
148 1 79 1 288 1 
148 1 79 1 288 1 
148 1 79 1 288 1 
352 1 79 1 230 1 44 1 162 1 242 1 338 1 6 2 7 1 65 1 168 1 269 2 116 1 70 1 191 1 143 2 344 1 36 1 148 1 346 2 375 1 347 2 37 1 379 1 
0 1 168 2 31 1 116 2 79 2 230 2 44 2 191 2 72 1 36 3 148 2 162 2 166 1 318 1 266 1 24 2 280 1 113 1 379 1 
351 1 376 1 26 1 
252 1 351 1 376 1 
252 1 351 3 363 1 332 1 26 2 111 1 
366 1 252 1 351 2 363 1 26 1 111 1 
252 1 351 2 363 2 26 1 111 1 
312 1 56 1 284 1 199 1 200 4 230 5 356 1 107 1 208 2 319 1 91 1 65 1 167 1 212 1 68 1 31 2 299 1 116 5 142 1 341 2 275 1 35 1 144 3 73 2 278 1 99 1 308 2 279 1 375 1 37 1 101 3 228 1 
257 1 56 6 312 1 284 2 103 1 199 2 200 7 229 1 127 1 230 9 238 1 21 5 107 1 163 1 244 5 91 2 167 1 212 3 68 3 31 5 299 3 116 9 9 1 341 6 275 2 35 3 144 9 73 6 278 2 99 3 308 6 279 1 375 4 101 8 228 3 
284 1 199 1 200 2 230 3 238 1 208 1 319 1 91 1 212 1 31 3 68 1 299 1 116 3 142 1 341 2 275 1 35 1 73 2 144 4 278 1 99 1 308 2 279 1 375 1 101 3 228 2 
257 1 284 1 103 1 199 1 200 3 229 1 230 4 238 1 208 2 319 1 91 1 212 2 31 4 68 2 299 2 116 4 142 1 341 4 275 1 35 2 144 7 73 4 278 1 99 2 308 4 279 1 375 2 101 5 228 3 
368 1 135 1 94 1 
115 1 368 1 
150 1 
368 1 285 1 187 1 
368 1 182 1 
368 1 285 1 
135 2 368 3 285 1 93 1 187 1 129 1 
55 1 189 2 124 1 299 1 190 2 271 1 305 1 35 1 262 1 75 1 307 4 359 7 62 3 292 1 256 1 90 3 5 1 
55 1 189 2 124 1 299 1 190 2 271 1 305 1 35 1 262 1 75 1 307 4 359 7 62 3 292 1 256 1 90 3 5 1 
55 1 189 2 124 1 299 1 190 2 271 1 305 1 35 1 262 1 75 1 307 4 359 7 62 3 292 1 256 1 90 3 5 1 28 1 
55 5 17 1 124 1 57 4 202 1 355 1 262 1 359 31 292 2 62 10 293 1 136 1 361 3 90 15 5 2 112 2 137 1 189 5 212 3 68 3 299 4 270 1 190 3 271 1 11 1 305 1 342 1 35 4 118 1 75 2 307 16 99 3 15 1 256 2 
55 1 202 2 262 1 359 9 292 1 62 4 48 1 89 1 90 4 112 4 137 2 5 1 189 3 299 1 270 2 190 2 271 1 342 1 305 1 35 1 307 5 75 1 15 2 256 1 
197 1 351 2 232 1 130 1 234 1 85 1 108 1 263 1 87 1 161 1 362 1 26 1 27 2 210 1 320 1 297 1 268 1 214 1 248 1 71 1 372 2 325 1 276 1 219 1 252 1 149 1 119 1 376 1 349 1 332 1 
197 1 351 2 201 1 287 1 232 1 130 1 234 1 46 1 85 1 108 2 263 1 87 1 161 1 362 1 26 1 27 3 210 1 320 1 297 1 214 1 248 1 71 1 372 3 325 1 276 1 252 1 149 1 119 1 376 1 332 1 
197 1 351 2 201 1 287 1 130 1 234 1 108 2 263 1 87 1 161 1 362 1 27 2 26 1 210 1 320 1 214 1 71 1 372 2 325 1 276 1 252 1 149 1 119 1 332 1 376 1 
197 2 285 1 179 1 232 1 234 1 130 1 46 1 87 2 2 1 362 1 27 1 320 2 297 1 368 1 322 1 71 2 249 1 372 1 325 1 326 1 254 1 149 1 120 1 
197 1 351 2 287 1 232 1 130 1 234 1 85 1 87 1 161 1 362 1 26 1 27 1 210 1 320 1 297 1 268 1 214 1 248 1 71 1 372 1 325 1 219 1 252 1 149 1 376 1 332 1 
313 1 
1 1 285 1 284 1 39 1 286 1 230 5 130 2 234 1 235 1 183 1 83 1 289 2 134 2 339 1 138 1 298 1 247 1 10 2 12 1 250 2 143 1 144 2 254 1 253 1 346 1 149 2 347 1 101 2 56 6 312 1 18 1 154 1 199 1 158 2 362 2 30 2 167 3 367 1 368 1 322 2 67 1 31 2 116 5 272 1 216 4 325 1 275 1 117 1 73 2 278 1 279 1 225 2 120 1 377 1 228 2 
167 1 339 1 56 2 18 1 39 1 138 1 298 1 247 1 286 1 116 3 272 1 230 3 216 2 183 1 235 1 143 1 117 1 134 1 175 1 346 1 347 1 377 1 
56 1 18 1 39 1 286 1 230 3 235 1 183 1 339 1 167 1 298 1 138 1 31 1 247 1 116 3 272 1 216 3 143 1 250 1 117 1 175 1 346 1 279 1 347 1 377 1 
18 1 56 2 39 1 286 1 230 3 235 1 183 1 134 1 30 1 167 1 339 1 298 1 138 1 31 1 247 1 116 3 272 1 216 3 143 1 250 1 117 1 175 1 346 1 279 1 347 1 377 1 
312 1 18 1 56 7 284 1 39 1 286 1 230 5 158 2 105 1 235 1 183 1 289 2 84 1 134 4 23 1 30 4 339 1 167 3 367 1 31 5 298 1 138 1 247 1 116 5 272 1 10 2 216 6 173 1 275 1 250 4 143 1 117 1 73 1 253 1 147 1 278 1 175 1 346 1 279 5 225 2 347 1 101 1 377 1 228 2 
284 1 39 1 286 1 230 4 183 1 235 1 289 2 134 2 339 1 138 1 298 1 247 1 10 2 12 1 143 1 250 2 253 1 144 2 346 1 347 1 101 1 312 1 18 1 56 4 158 2 30 2 167 2 367 1 31 2 116 4 272 1 216 4 275 1 117 1 73 1 278 1 279 1 225 2 377 1 228 2 
56 4 18 1 312 1 284 1 39 1 286 1 230 4 158 2 235 1 183 1 105 1 289 2 134 2 23 1 30 2 167 2 339 1 367 1 31 1 298 1 138 1 247 1 116 4 272 1 10 2 216 4 250 2 143 1 275 1 117 1 73 1 253 1 147 1 278 1 346 1 279 1 225 2 347 1 101 1 377 1 228 2 
56 4 18 1 312 1 284 1 39 1 286 1 230 4 158 2 235 1 183 1 105 1 289 2 134 2 23 1 30 2 167 2 339 1 367 1 31 1 298 1 138 1 247 1 116 4 272 1 10 2 216 4 250 2 143 1 275 1 117 1 73 1 253 1 147 1 278 1 346 1 279 1 225 2 347 1 101 1 377 1 228 2 
56 4 18 1 312 1 284 1 39 1 156 2 286 1 230 4 158 2 235 1 183 1 134 2 336 1 165 1 30 2 167 2 339 1 52 1 367 1 31 1 298 1 138 1 247 1 116 4 272 1 10 2 216 4 250 2 143 1 275 1 117 1 144 2 73 1 147 1 278 1 346 1 279 1 347 1 101 1 377 1 281 2 
312 1 18 1 56 5 284 1 39 1 286 1 230 4 158 2 235 1 183 1 105 1 289 2 84 1 134 3 23 1 30 3 167 2 339 1 367 1 31 1 298 1 138 1 247 1 116 4 272 1 10 2 216 5 275 1 143 1 250 3 117 1 73 1 253 1 147 1 278 1 346 1 279 1 225 2 347 1 101 1 377 1 228 2 
312 1 18 1 56 5 284 1 39 1 286 1 230 4 158 2 235 1 183 1 105 1 289 2 84 1 134 3 23 1 30 3 167 2 339 1 367 1 31 1 298 1 138 1 247 1 116 4 272 1 10 2 216 5 275 1 143 1 250 3 117 1 73 1 253 1 147 1 278 1 346 1 279 1 225 2 347 1 101 1 377 1 228 2 
56 4 18 1 312 1 284 1 39 1 156 2 286 1 230 4 158 2 235 1 183 1 134 2 336 1 30 2 167 2 339 1 367 1 31 1 298 1 138 1 247 1 116 4 272 1 10 2 216 4 12 1 250 2 275 1 143 1 117 1 144 2 73 1 278 1 346 1 279 1 347 1 101 1 377 1 281 2 
126 1 202 1 358 1 237 1 262 1 359 6 62 2 90 3 5 1 112 2 137 1 189 2 94 1 299 1 270 1 190 1 8 1 271 1 141 1 323 1 305 1 35 1 344 2 75 1 307 3 15 1 
55 1 17 1 126 1 57 3 180 1 202 2 132 1 237 11 359 14 186 1 86 1 62 2 136 1 264 1 361 3 90 6 112 4 137 2 189 1 212 2 68 2 299 1 270 2 8 4 141 11 323 2 217 1 344 1 35 2 145 1 307 8 99 1 15 2 
310 1 102 1 285 1 126 1 258 1 202 1 42 1 233 1 234 1 130 1 359 2 186 1 187 1 207 1 362 1 90 1 137 1 6 1 112 2 64 1 368 1 267 1 322 1 269 1 270 1 8 1 215 1 323 1 325 1 217 1 143 2 344 1 145 1 307 1 346 1 149 1 347 2 15 1 
126 3 285 2 287 1 130 3 234 2 237 7 186 1 335 2 4 2 187 2 90 10 5 1 6 1 137 3 189 4 299 3 190 1 8 7 95 1 141 7 305 1 143 3 343 2 344 2 145 1 307 10 99 2 346 1 149 3 15 3 347 3 55 4 310 1 258 1 353 1 202 3 262 1 359 20 315 2 62 8 207 2 362 3 112 6 368 2 322 1 267 2 212 2 68 2 269 1 270 3 271 1 215 2 323 3 217 1 325 2 35 3 75 1 331 1 227 2 
125 1 126 2 285 2 258 1 202 2 287 1 234 2 130 7 358 1 185 1 359 2 186 1 362 8 164 1 90 1 6 1 112 4 137 2 29 1 368 3 322 2 269 1 270 2 171 1 96 1 323 2 325 2 217 1 143 1 254 1 307 1 345 2 346 1 347 1 149 8 15 2 349 1 176 1 120 1 
333 1 126 1 260 1 202 1 237 1 359 3 62 1 90 2 6 1 112 2 137 1 189 1 212 1 68 1 269 1 299 1 270 1 8 1 141 1 323 1 143 1 277 1 35 1 145 1 307 1 99 1 346 1 15 1 347 1 
55 1 50 1 126 1 212 1 270 1 8 1 202 1 141 1 323 1 358 1 237 1 35 1 359 2 307 2 62 1 15 1 137 1 112 2 
189 1 126 1 299 1 270 1 8 1 202 1 141 1 323 1 358 1 237 1 359 2 62 1 99 1 15 1 151 1 90 2 137 1 112 2 
55 1 126 1 202 1 358 1 237 2 359 4 62 2 90 2 112 2 137 1 189 1 212 1 68 1 299 1 270 1 8 2 141 2 323 1 35 1 307 2 99 1 15 1 
55 1 50 1 126 1 212 1 270 1 8 1 202 1 141 1 323 1 237 1 35 1 359 2 307 2 62 1 15 1 29 1 137 1 112 2 
189 1 126 1 299 1 270 1 8 1 202 1 141 1 323 1 237 1 359 2 62 1 99 1 15 1 151 1 90 2 29 1 137 1 112 2 
55 1 126 1 202 1 237 2 359 4 62 2 90 2 112 2 137 1 29 1 189 1 212 1 68 1 299 1 270 1 8 2 141 2 323 1 35 1 307 2 99 1 15 1 
55 1 126 1 202 1 237 2 359 4 62 2 90 2 112 2 137 1 189 1 212 1 68 1 299 1 270 1 8 2 141 2 323 1 35 1 307 2 99 1 15 1 
285 1 126 1 202 1 234 1 130 1 359 2 186 1 187 1 4 1 207 1 362 1 90 1 137 1 112 2 368 1 267 1 322 1 270 1 215 1 323 1 325 1 217 1 143 1 344 1 307 1 149 1 347 1 15 1 
285 1 126 1 202 1 234 1 130 1 359 2 186 1 187 1 207 1 109 1 362 1 90 1 209 1 137 1 112 2 368 1 322 1 270 1 140 1 323 1 325 1 217 1 143 1 344 1 307 1 149 1 347 1 15 1 
55 1 126 1 202 1 237 2 359 4 62 2 90 2 112 2 137 1 189 1 212 1 68 1 299 1 270 1 8 2 141 2 323 1 35 1 307 2 145 1 99 1 15 1 
55 1 285 1 126 1 202 1 234 1 130 1 237 2 359 4 62 2 187 1 4 1 207 1 362 1 90 2 137 1 112 2 189 1 368 1 212 1 267 1 68 1 299 1 270 1 8 2 215 1 141 2 323 1 325 1 143 1 35 1 307 2 99 1 149 1 347 1 15 1 349 1 227 1 
55 1 126 1 260 1 202 1 357 1 237 1 359 3 62 1 90 1 6 1 112 2 137 1 212 1 68 1 299 1 269 1 270 1 8 1 141 1 323 1 143 1 277 1 35 1 145 1 307 2 99 1 346 1 15 1 347 1 
196 1 55 3 17 1 57 2 202 2 261 1 157 1 359 19 62 6 48 1 136 1 361 1 90 10 112 4 137 2 189 3 212 3 68 3 299 3 270 2 304 1 373 2 35 3 374 1 307 9 222 2 99 3 15 2 309 1 177 1 
123 1 55 2 196 2 17 2 57 2 202 3 157 1 314 1 203 1 359 26 290 1 62 4 48 1 361 2 90 12 245 1 112 6 137 3 189 2 212 3 68 3 299 2 369 1 270 3 304 1 342 2 373 4 35 3 374 1 307 14 222 1 99 2 15 3 309 2 
123 1 196 2 55 4 17 3 57 4 202 3 261 1 157 1 314 1 203 1 262 1 359 41 290 1 206 1 62 8 48 1 136 1 361 3 245 1 90 21 5 1 112 6 137 3 189 4 212 4 68 4 299 5 190 1 369 1 270 3 271 1 304 1 305 1 342 1 373 4 35 5 374 1 75 1 307 20 222 1 99 4 15 3 309 1 
123 1 196 2 55 3 17 3 57 4 202 4 261 1 157 1 314 1 203 1 262 1 359 38 290 1 206 1 62 7 48 1 136 1 361 3 245 1 90 18 5 1 112 8 137 4 189 4 212 4 68 4 299 4 190 1 369 1 270 4 271 1 304 1 305 1 342 2 373 4 35 5 374 1 75 1 307 20 222 1 99 3 15 4 309 1 
123 1 196 1 55 7 17 2 57 4 202 2 157 1 314 1 203 1 262 1 359 52 290 1 62 14 48 1 136 2 264 2 361 4 245 1 90 25 5 1 112 4 137 2 189 7 212 7 68 7 299 8 190 1 369 1 270 2 271 1 304 1 305 1 342 1 373 4 35 8 374 1 75 1 307 27 222 1 99 7 15 2 309 1 
72 1 0 1 168 1 148 1 162 1 79 1 44 1 166 1 303 1 191 1 
352 1 242 1 
204 1 282 1 168 1 148 1 162 1 79 1 44 1 191 1 378 1 
155 1 174 1 
370 1 288 1 350 1 
0 1 168 1 31 1 116 1 79 1 230 1 44 1 191 1 72 1 36 2 148 1 162 1 166 1 318 1 266 1 24 1 280 1 379 1 
0 1 168 1 31 1 116 1 79 1 230 1 44 1 191 1 72 1 36 2 148 1 162 1 166 1 318 1 266 1 24 1 280 1 379 1 
0 1 168 1 31 1 116 1 79 1 230 1 44 1 191 1 72 1 36 2 148 1 162 1 166 1 318 1 266 1 24 1 280 1 379 1 
155 1 370 1 174 1 
155 1 370 1 174 1 
288 1 350 1 
370 1 288 1 350 1 
70 1 338 1 
38 1 352 1 200 1 79 1 230 1 44 1 162 1 242 1 24 1 266 1 338 1 6 2 7 1 65 1 168 1 269 2 116 1 70 1 191 1 143 2 344 1 36 1 148 1 346 2 375 1 347 2 37 1 
285 1 126 1 202 1 234 1 130 2 185 1 359 2 186 1 362 2 164 1 90 1 296 1 137 1 112 2 246 1 368 1 270 1 323 1 325 1 217 1 306 1 143 2 145 1 307 1 345 2 346 2 330 1 77 1 149 2 347 2 15 1 
320 1 351 2 214 1 287 1 234 1 130 2 325 1 60 1 85 1 252 1 98 1 53 1 149 2 376 1 332 1 362 2 349 1 26 1 210 1 
320 1 351 2 66 1 214 1 287 1 130 1 234 1 325 1 85 1 252 1 53 1 149 1 376 1 332 1 362 1 26 1 210 1 
320 1 368 1 285 1 322 1 234 1 130 1 325 1 60 1 254 1 2 1 334 1 149 1 362 1 120 1 
320 1 351 2 214 1 287 1 234 1 130 1 60 1 325 1 85 1 252 1 98 1 53 1 149 1 376 1 332 1 362 1 26 1 210 1 
40 1 
73 1 152 1 31 1 94 1 279 1 101 1 243 1 
312 1 56 1 284 1 230 1 289 1 167 1 31 2 116 1 275 1 73 1 253 1 144 1 278 1 279 1 225 1 101 1 228 1 
115 1 51 1 368 1 312 1 285 1 284 1 322 1 129 1 234 2 130 1 325 1 275 1 278 1 187 1 149 1 362 1 195 1 
123 1 56 1 17 1 312 2 154 1 284 2 199 1 57 1 230 1 314 1 80 2 203 1 290 1 361 1 245 1 167 1 212 2 213 1 31 5 68 2 299 2 116 1 341 5 275 2 35 2 144 6 73 5 327 1 278 2 99 2 308 5 329 1 279 2 101 8 228 3 
312 1 284 1 230 1 80 2 183 1 133 1 360 1 294 1 23 1 5 1 6 1 213 1 299 1 269 1 116 1 301 1 172 1 305 1 143 1 275 1 35 2 277 1 73 2 75 1 278 1 346 1 347 1 101 2 
312 1 284 1 152 1 31 1 275 1 73 1 278 1 279 1 243 1 101 1 
212 2 213 1 68 2 31 5 299 2 80 2 341 5 343 1 35 2 73 5 144 10 99 2 308 5 101 5 228 5 
167 1 56 1 31 1 279 1 116 1 230 1 
312 1 56 4 285 1 284 2 154 2 199 2 128 1 230 3 234 1 130 4 83 1 238 1 240 2 265 1 362 4 167 2 368 1 67 1 322 2 116 3 170 1 325 1 275 2 73 2 254 1 278 2 149 4 101 2 120 1 
285 1 126 1 58 1 202 1 130 1 234 1 359 1 4 1 187 1 207 1 294 1 362 1 90 1 112 2 6 2 137 1 368 1 322 1 267 1 269 2 270 1 215 1 323 1 217 1 325 1 143 3 344 1 277 2 346 2 15 1 149 1 347 3 
312 1 284 1 154 1 199 1 31 4 190 1 341 2 275 1 144 4 73 2 278 1 308 2 279 2 101 1 228 2 
168 1 162 1 54 1 
168 1 162 1 54 1 
72 1 168 1 162 1 45 1 338 1 
168 1 162 1 54 1 
168 1 162 1 348 1 
168 1 162 1 348 1 
168 1 162 1 348 1 
168 1 162 1 
148 1 79 1 
55 1 189 2 299 1 190 1 270 2 202 2 271 1 305 1 342 1 35 1 262 1 359 8 307 4 75 1 62 3 15 2 90 4 137 2 112 4 5 1 
35 1 189 2 262 1 359 6 307 3 75 1 62 2 299 1 94 1 190 1 271 1 90 3 5 1 305 1 
55 1 189 1 212 1 68 1 299 1 69 1 270 1 202 1 35 1 307 2 359 4 99 1 62 2 15 1 90 2 137 1 112 2 
55 1 189 1 17 1 212 1 57 2 68 1 299 1 35 1 359 7 307 3 99 1 62 2 136 1 361 1 90 4 
55 4 57 2 202 2 106 1 262 1 359 23 86 1 62 9 136 1 361 2 264 1 90 12 5 2 137 2 112 4 189 5 212 2 68 2 299 3 190 1 270 2 271 1 305 1 342 2 35 3 75 2 307 11 99 2 15 2 
359 1 57 1 90 1 
359 1 307 1 361 1 
55 1 189 2 212 1 68 1 69 1 299 1 270 1 202 1 343 1 35 1 359 6 307 3 62 3 99 1 15 1 90 3 112 2 137 1 
123 1 55 1 17 1 57 1 202 1 314 1 203 1 359 12 290 1 62 2 48 1 361 1 90 6 245 1 112 2 137 1 189 1 212 2 68 2 299 2 270 1 35 2 307 6 99 2 15 1 
55 1 189 1 299 1 305 1 35 1 307 3 359 6 75 1 62 2 90 3 5 1 
55 1 189 1 270 1 202 1 271 1 342 1 106 1 262 1 307 1 75 1 359 3 62 2 15 1 90 2 5 1 137 1 112 2 
55 2 189 3 299 2 270 1 202 1 305 1 35 2 75 2 307 5 359 10 62 5 360 1 15 1 48 1 90 5 112 2 137 1 5 2 
55 1 212 1 270 1 202 1 35 1 307 2 359 2 62 1 48 1 15 1 137 1 112 2 
55 1 189 1 212 1 68 1 299 1 270 1 202 1 35 1 307 2 359 4 99 1 62 2 48 1 15 1 90 2 137 1 112 2 
55 1 189 1 270 3 202 3 261 1 342 1 106 1 359 3 75 1 307 1 62 2 48 1 15 3 90 2 137 3 112 6 5 1 
55 5 17 1 57 4 202 5 261 1 355 1 106 1 262 1 359 34 62 12 293 1 48 1 136 1 361 3 90 18 5 3 112 10 137 5 189 7 212 3 68 3 69 1 299 5 190 1 270 5 271 1 305 2 342 2 35 5 118 1 75 3 307 16 99 3 15 5 
17 1 57 1 202 1 262 1 359 8 62 2 48 1 361 1 90 4 245 1 112 2 137 1 5 1 189 2 299 1 190 1 270 1 271 1 305 1 35 1 307 4 75 1 15 1 
55 1 17 1 57 2 202 2 262 1 359 11 62 3 48 1 136 1 361 1 90 5 245 1 5 1 112 4 137 2 189 2 212 1 68 1 299 1 69 1 190 1 270 2 271 1 305 1 35 2 75 1 307 6 15 2 
123 1 55 1 17 1 57 1 202 3 314 1 203 1 262 1 359 19 290 1 62 4 48 1 361 1 90 10 245 1 5 1 112 6 137 3 189 3 212 2 68 2 69 1 299 3 190 1 270 3 271 1 305 1 342 1 35 3 75 1 307 9 99 2 15 3 
123 1 55 2 17 1 57 1 202 3 314 1 203 1 262 1 359 17 290 1 62 5 48 1 361 1 90 7 245 1 5 1 112 6 137 3 189 3 212 2 68 2 69 1 299 2 190 1 270 3 271 1 305 1 342 1 35 3 75 1 307 10 99 1 15 3 
17 1 57 1 202 1 262 1 359 8 62 2 48 1 361 1 90 4 245 1 112 2 137 1 5 1 189 2 299 1 190 1 270 1 271 1 305 1 35 1 307 4 75 1 15 1 
123 1 55 1 17 1 57 1 202 1 314 1 203 1 359 12 290 1 62 2 48 1 361 1 90 6 245 1 112 2 137 1 189 1 212 2 68 2 299 2 270 1 35 2 307 6 99 2 15 1 
123 1 55 2 17 1 57 1 202 4 314 1 203 1 262 1 359 18 290 1 62 5 48 1 361 1 90 8 245 1 5 1 112 8 137 4 189 3 212 2 68 2 69 1 299 2 190 1 270 4 271 1 305 1 342 2 35 3 75 1 307 10 99 1 15 4 
123 1 55 3 17 1 57 1 202 4 261 1 314 1 203 1 359 16 290 1 62 6 48 1 361 1 90 7 245 1 112 8 137 4 189 3 212 3 68 3 299 2 270 4 342 2 35 3 307 9 99 2 15 4 
55 3 189 3 299 1 271 2 305 1 35 1 262 1 359 7 75 3 307 3 62 6 90 4 5 3 
123 1 55 1 17 1 57 1 202 4 261 1 314 1 203 1 262 1 359 18 290 1 62 4 48 1 361 1 90 8 245 1 5 1 112 8 137 4 189 3 212 2 68 2 299 2 190 1 270 4 271 1 305 1 342 2 35 3 75 1 307 10 99 1 15 4 
143 1 344 1 339 1 239 1 346 1 347 1 364 1 
339 1 211 1 32 1 181 1 131 1 143 1 344 1 239 1 221 1 346 1 347 1 364 1 
254 1 368 1 285 1 322 1 94 1 149 1 362 1 120 1 234 1 130 1 325 1 
368 1 285 1 322 1 267 1 258 1 269 1 234 1 130 1 325 1 143 2 344 1 346 1 187 1 207 1 347 2 149 1 362 1 6 1 
285 2 258 1 286 1 182 1 130 1 234 1 235 1 183 1 240 1 187 2 207 1 362 1 6 1 114 1 368 3 267 1 269 2 325 1 143 2 344 1 346 2 149 1 347 2 
285 2 258 1 286 1 182 1 130 2 234 1 235 1 183 1 291 1 240 1 187 2 207 1 362 2 209 1 6 1 114 1 368 3 269 2 325 1 143 2 344 1 346 2 149 2 347 2 
56 1 285 1 230 2 182 1 130 3 234 1 135 1 291 1 240 1 187 1 362 3 337 1 110 1 114 1 115 1 368 4 322 1 31 1 116 2 325 1 279 1 149 3 377 1 
114 1 115 1 368 4 56 1 322 1 285 1 31 1 116 2 230 2 182 1 234 1 130 3 325 1 251 1 135 1 291 1 240 1 279 1 187 1 149 3 362 3 377 1 
149 1 362 1 234 1 130 1 96 1 325 1 
368 3 125 1 322 2 285 2 287 1 171 1 302 1 129 1 96 1 130 6 234 3 325 2 236 1 185 1 345 1 224 1 187 1 149 7 349 1 176 1 362 7 
285 1 126 2 258 1 202 2 234 1 130 1 237 1 262 1 359 6 62 2 335 1 187 1 4 1 207 1 362 1 90 3 5 1 137 2 6 1 112 4 189 2 368 1 267 1 299 1 269 1 190 1 270 2 8 1 271 1 215 1 141 1 323 2 305 1 325 1 306 1 143 2 344 2 35 1 307 3 75 1 145 1 346 1 347 2 15 2 149 1 349 1 227 1 
312 2 56 2 152 1 284 2 20 1 200 1 230 3 130 1 61 1 135 1 243 1 362 1 115 1 167 1 368 2 322 1 31 1 116 3 170 1 275 2 251 1 73 1 220 1 278 2 279 1 149 1 101 1 377 1 
51 1 368 1 285 1 129 1 96 1 130 1 234 2 325 1 135 1 187 1 149 1 150 1 362 1 
368 1 322 1 285 1 234 1 130 4 325 1 254 1 291 1 76 1 149 4 362 4 349 1 120 1 
368 1 285 1 353 1 130 2 234 2 325 1 236 1 184 1 240 1 224 1 14 1 187 1 149 2 362 2 
252 1 351 1 322 1 214 1 149 1 376 1 362 1 234 1 130 1 325 1 
368 1 185 1 285 1 77 1 287 1 149 2 362 2 349 1 234 1 130 2 325 1 
254 1 368 3 185 1 125 1 285 2 322 1 240 1 76 1 149 5 171 1 349 1 362 5 120 1 234 2 130 4 325 2 
368 3 322 1 285 2 125 1 130 4 234 2 325 2 254 1 185 1 240 1 328 1 76 1 149 5 362 5 349 1 120 1 
368 1 285 1 322 1 258 1 269 1 234 1 130 1 325 1 143 2 344 1 346 1 187 1 207 1 347 2 149 1 362 1 209 1 6 1 
368 1 285 1 302 1 129 1 130 1 234 2 325 1 236 1 240 1 224 1 187 1 149 1 362 1 
344 1 340 1 321 1 223 1 82 1 
321 2 340 2 19 1 198 1 31 1 286 1 200 1 116 2 230 2 183 1 235 1 82 2 344 1 117 1 223 1 47 1 279 1 377 1 25 1 
246 1 321 1 340 1 143 1 223 1 346 1 330 1 347 1 296 1 
223 1 47 1 25 1 
276 1 263 1 94 1 119 1 
276 1 263 1 297 1 119 1 232 1 27 1 372 1 
197 1 87 1 372 1 
297 1 153 1 232 1 218 1 372 3 276 1 219 1 193 1 263 1 119 1 188 2 27 3 
276 1 108 1 263 1 297 1 119 1 232 1 159 1 27 2 372 2 
219 1 263 1 297 1 351 1 3 1 376 1 226 1 232 1 26 1 27 1 372 1 
276 1 219 1 263 1 297 1 232 1 27 1 372 1 
276 2 219 1 297 1 119 1 232 1 27 1 372 1 
297 2 139 1 232 2 372 2 276 1 219 1 263 1 194 1 100 1 27 2 
297 1 232 1 97 1 372 3 276 1 219 1 108 2 263 2 22 1 119 1 226 1 121 1 27 3 
297 1 351 2 232 1 372 2 276 1 252 1 219 1 108 1 263 1 119 1 332 1 376 1 27 2 26 1 78 1 
297 2 232 2 59 1 159 1 97 1 372 4 276 1 219 1 108 2 263 2 119 1 226 1 27 4 
276 1 219 1 263 1 297 1 119 1 232 1 27 1 372 1 
297 1 153 1 232 1 97 1 372 4 276 2 193 1 108 2 263 3 119 2 226 1 188 1 49 1 27 4 
283 1 297 1 259 1 232 1 372 2 276 1 219 1 108 1 263 1 63 1 119 1 27 2 
297 1 153 1 232 1 372 3 274 1 276 1 219 1 193 2 263 1 119 1 188 2 27 3 
34 1 263 2 43 2 371 1 
219 1 297 1 169 1 232 1 27 1 372 1 
276 1 108 1 219 1 263 1 297 1 22 1 119 1 232 1 27 2 372 2 
33 1 
276 1 219 1 263 1 297 1 119 1 232 1 27 1 372 1 
297 1 232 1 372 3 276 1 108 1 219 1 263 1 22 1 119 1 188 1 27 3 
263 1 226 1 49 1 97 1 
276 1 263 1 

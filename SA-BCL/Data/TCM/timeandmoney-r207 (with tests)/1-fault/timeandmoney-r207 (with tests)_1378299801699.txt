#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 2 275 2 229 2 361 1 129 1 248 4 285 1 50 2 51 1 135 1 104 1 340 1 107 5 160 6 32 2 34 9 109 3 297 1 374 1 217 1 237 1 36 1 60 1 116 9 327 1 328 2 63 1 269 2 
23 2 275 2 229 2 361 1 129 1 248 4 285 1 50 2 51 1 135 1 104 1 340 1 107 5 160 6 32 2 34 9 109 3 297 1 374 1 217 1 237 1 36 1 60 1 116 9 327 1 328 2 63 1 269 2 
23 2 275 2 229 2 361 1 129 1 248 5 285 1 50 2 51 1 135 1 104 1 340 1 107 6 160 7 32 2 34 10 109 4 297 1 374 1 217 1 237 1 36 1 60 1 116 10 327 1 328 2 63 1 269 2 
23 2 275 1 229 2 361 1 129 1 248 3 285 1 50 2 51 1 135 1 340 1 107 4 160 4 32 2 34 7 109 2 297 1 374 1 217 1 237 1 36 1 60 1 116 7 327 1 328 2 63 1 269 2 
135 1 23 1 275 2 104 1 340 1 160 3 107 3 32 1 34 4 109 1 217 1 361 1 248 2 116 4 50 1 327 1 328 1 269 1 
135 1 23 1 226 1 107 1 229 1 34 2 81 1 217 1 83 1 361 1 237 1 116 2 50 1 328 1 269 1 51 1 
135 1 23 2 107 2 160 1 229 1 34 3 109 1 374 1 217 1 361 1 248 1 116 3 269 2 
28 1 135 1 23 2 275 2 104 1 340 1 107 5 160 7 32 1 229 1 34 9 109 3 374 1 217 1 361 1 60 1 248 4 116 9 50 1 42 1 327 1 328 1 63 1 269 2 
28 1 135 1 23 2 275 2 104 1 340 1 107 5 160 7 32 1 229 1 34 9 109 3 374 1 217 1 361 1 60 1 248 4 116 9 50 1 42 1 327 1 328 1 63 1 269 2 
117 1 71 1 84 1 
249 1 71 1 52 2 
274 1 314 2 263 2 192 2 105 1 16 2 174 2 290 2 
305 1 241 1 90 1 274 1 355 1 331 2 246 1 167 1 310 1 311 1 150 2 231 1 314 2 200 2 171 1 174 2 8 1 290 2 257 1 318 2 11 1 192 3 105 1 77 1 14 1 16 3 236 1 35 2 263 2 298 1 219 1 179 1 88 1 61 1 198 1 144 1 240 1 
314 1 263 1 192 1 87 1 105 1 277 1 16 1 174 1 169 1 290 1 
192 1 78 1 294 1 373 1 16 1 296 1 359 1 314 1 140 1 336 1 117 1 87 1 71 1 265 1 
192 1 78 1 294 1 373 1 16 1 140 2 263 1 314 1 336 2 117 1 87 1 71 1 265 1 174 1 290 1 
140 1 336 1 178 1 22 1 262 1 
114 1 140 2 336 2 178 1 349 1 117 1 71 1 262 1 
140 1 336 1 262 1 
291 1 192 1 105 1 277 1 16 1 169 1 140 1 263 1 314 1 178 1 336 1 87 1 174 1 290 1 
71 1 
114 1 362 1 140 2 336 2 178 1 117 1 71 1 262 1 
0 1 233 1 339 1 45 1 106 1 4 2 347 1 360 1 262 2 114 1 140 5 178 2 336 5 130 1 117 1 71 1 239 1 64 2 156 2 
274 1 84 1 
274 2 192 2 16 2 314 2 263 1 98 1 174 1 369 1 290 1 
24 1 26 1 206 1 
90 1 274 1 318 1 11 1 331 1 192 1 246 1 167 1 16 1 311 1 279 1 236 1 35 1 171 1 8 1 240 1 
90 1 44 1 318 1 11 1 331 1 192 2 246 1 167 1 311 1 16 2 236 1 35 1 314 1 49 1 171 1 174 1 206 1 8 1 240 1 290 1 
263 1 274 1 314 3 192 3 49 1 16 3 174 3 290 3 
314 1 192 1 87 1 16 1 174 1 169 1 290 1 
314 1 263 1 192 1 87 1 98 1 16 1 174 1 369 1 290 1 
305 1 241 1 90 1 274 1 44 1 331 1 246 1 167 1 310 1 311 1 150 1 231 1 314 3 200 2 336 1 49 1 171 1 174 3 369 1 8 1 290 3 257 1 318 1 11 1 192 4 105 1 77 1 159 1 78 1 294 1 373 1 295 1 14 1 16 4 236 1 35 1 263 2 140 1 298 1 87 1 179 1 61 1 265 1 240 1 
274 1 314 2 158 1 192 2 49 1 16 2 174 1 359 1 290 1 
44 1 192 3 69 1 78 1 373 1 294 1 295 1 16 3 263 1 140 1 314 3 336 1 87 1 49 2 71 1 265 1 174 3 369 1 290 3 
192 2 16 2 263 1 314 2 49 1 26 1 174 2 369 1 206 1 290 2 
90 1 274 1 318 1 11 1 331 1 192 1 246 1 167 1 16 1 311 1 236 1 35 1 171 1 240 1 8 1 
90 1 274 1 318 1 11 1 331 1 192 1 246 1 228 1 16 1 236 1 35 1 202 1 171 1 240 1 8 1 
91 1 145 1 241 1 24 2 227 1 150 4 312 1 281 1 231 1 199 1 200 2 132 1 365 1 26 2 206 2 257 2 77 1 322 1 14 1 86 1 298 1 179 1 88 2 220 1 
314 1 146 1 192 1 87 1 294 1 16 1 174 1 290 1 
274 1 44 1 158 1 192 5 16 5 176 1 359 1 314 5 263 1 37 1 49 2 174 4 369 1 290 4 
314 2 146 1 192 2 87 1 16 2 174 2 169 1 290 2 
164 1 270 1 
164 1 270 1 
256 1 126 1 
256 1 126 1 
256 1 126 1 
164 1 125 1 270 1 
164 1 125 1 270 1 
164 1 20 1 270 1 
256 1 164 2 92 1 126 1 261 1 270 2 123 1 
164 1 125 1 270 1 
164 1 230 1 270 1 
164 1 230 1 270 1 
164 1 230 1 270 1 
124 2 92 1 309 1 357 2 149 1 358 2 280 2 196 1 177 3 140 2 164 2 336 2 378 1 71 1 351 2 287 1 222 1 270 2 6 1 
274 1 357 1 358 1 280 1 314 2 336 1 174 2 254 1 255 1 290 2 232 1 192 2 16 2 212 1 215 1 177 1 196 1 140 1 164 1 238 1 20 1 351 1 180 1 270 1 
50 1 32 1 328 1 
50 1 328 1 81 1 
245 1 50 3 32 2 81 1 346 1 75 1 
245 1 50 2 32 1 33 1 81 1 346 1 
245 2 50 2 32 1 81 1 346 1 
68 1 45 3 276 2 227 1 127 2 4 1 281 1 249 1 199 1 336 5 132 1 71 2 286 1 156 1 254 1 232 1 52 3 339 1 320 2 209 1 80 1 235 1 212 1 347 2 262 1 114 1 140 5 115 1 178 4 117 1 64 1 352 1 
45 8 276 6 227 3 186 1 4 2 281 3 249 3 199 3 336 9 132 3 71 5 189 1 286 2 254 4 156 2 316 1 52 9 76 5 9 1 339 1 320 6 106 1 209 1 235 2 347 6 262 6 324 1 140 9 114 1 115 3 178 7 117 1 22 5 64 2 122 1 
68 1 45 3 276 2 227 1 127 1 4 1 281 1 249 2 336 3 199 1 132 1 71 3 286 1 156 1 254 1 52 4 320 2 106 1 80 1 235 1 347 2 140 3 178 2 115 1 117 1 64 1 
68 1 45 5 276 4 227 2 127 2 4 1 281 2 249 3 336 4 199 2 132 2 71 4 286 1 156 1 254 2 316 1 52 7 320 4 106 1 80 1 235 1 347 4 324 1 140 4 178 3 115 2 117 1 64 1 122 1 
376 1 8 1 84 1 
319 1 8 1 
243 1 
90 1 8 1 
90 1 162 1 154 1 376 2 236 1 8 3 
90 1 236 1 8 1 
205 1 8 1 
257 3 322 2 344 1 193 1 56 2 343 1 150 7 110 1 199 1 250 1 132 1 220 3 88 4 252 1 301 1 302 1 303 1 
257 3 322 2 344 1 193 1 56 2 343 1 150 7 110 1 199 1 250 1 132 1 220 3 88 4 252 1 301 1 302 1 303 1 
257 3 322 2 344 1 193 1 56 2 343 1 345 1 150 7 110 1 199 1 250 1 132 1 220 3 88 4 252 1 301 1 302 1 303 1 
241 1 227 3 150 31 5 1 281 3 200 2 199 4 70 1 250 2 132 4 252 1 188 1 367 1 133 1 257 15 77 1 322 5 137 1 343 1 344 2 56 3 193 2 110 1 115 3 298 1 179 1 88 16 220 10 267 4 266 1 301 2 302 5 303 1 89 3 
166 1 241 2 183 1 150 9 199 1 200 4 250 1 132 1 188 1 257 4 77 2 322 3 56 2 193 1 343 1 344 1 110 1 298 2 179 2 88 5 220 4 301 1 302 1 303 1 
224 1 354 1 23 1 331 1 67 1 356 1 184 1 246 1 229 1 333 1 361 1 50 2 201 1 75 1 318 1 135 1 107 1 160 1 32 1 34 2 81 1 217 1 35 1 116 2 39 1 165 1 328 1 269 1 181 1 240 1 
224 1 23 1 331 1 356 1 184 1 246 1 229 1 148 1 333 1 361 1 50 2 201 1 99 1 75 1 318 1 107 1 160 2 32 1 34 3 81 1 216 1 217 1 35 1 116 3 39 1 165 1 328 1 269 1 181 1 240 1 
224 1 331 1 184 1 246 1 229 1 333 1 361 1 50 2 99 1 75 1 318 1 107 1 160 2 32 1 34 2 81 1 216 1 217 1 35 1 116 2 39 1 165 1 328 1 181 1 240 1 
224 2 90 1 23 1 331 1 246 1 229 2 148 1 333 2 253 1 134 1 8 1 318 1 10 1 11 1 55 1 34 1 35 1 19 1 116 1 39 2 269 1 382 1 240 1 
224 1 135 1 23 1 318 1 67 1 331 1 246 1 184 1 356 1 32 1 229 1 34 1 333 1 81 1 216 1 35 1 116 1 39 1 50 2 201 1 165 1 328 1 269 1 181 1 75 1 240 1 
292 1 
90 1 331 2 45 2 335 1 4 1 336 5 153 2 286 1 155 1 156 1 52 2 8 1 338 2 339 1 11 2 293 1 192 1 13 2 294 1 16 1 296 1 347 2 18 2 19 1 114 3 117 1 120 1 64 1 240 1 306 2 246 1 247 2 359 1 314 1 249 2 71 2 73 1 366 1 253 1 318 2 175 1 78 1 373 1 213 1 323 1 262 6 35 2 140 5 264 1 87 1 141 2 381 1 265 1 329 1 268 4 
359 1 314 1 362 1 336 3 192 1 175 1 78 1 13 1 294 1 373 1 16 1 213 1 296 1 262 2 140 3 114 1 264 1 87 1 265 1 329 1 268 2 120 1 
359 1 314 1 362 1 336 3 71 1 192 1 175 1 78 1 294 1 373 1 16 1 213 1 296 1 262 1 140 3 114 1 264 1 87 1 117 1 141 1 265 1 329 1 268 3 120 1 
359 1 362 1 314 1 336 3 71 1 192 1 175 1 78 1 13 1 294 1 373 1 16 1 213 1 296 1 262 2 18 1 114 1 140 3 264 1 87 1 117 1 141 1 265 1 329 1 268 3 120 1 
45 1 335 1 4 1 336 5 284 1 153 2 156 1 338 2 103 1 339 1 192 1 13 4 294 1 16 1 296 1 347 1 18 4 195 1 114 3 117 5 120 1 64 1 306 2 247 2 359 1 362 1 314 1 249 2 71 5 175 1 78 1 373 1 259 1 213 1 323 1 262 7 140 5 264 1 87 1 41 1 141 4 265 1 268 6 329 1 
45 1 306 2 247 2 335 1 4 1 359 1 314 1 249 2 336 4 153 2 71 2 73 1 156 1 52 2 338 2 339 1 192 1 175 1 78 1 13 2 294 1 373 1 213 1 16 1 296 1 323 1 262 4 347 1 18 2 114 2 140 4 264 1 117 1 87 1 141 2 265 1 329 1 268 4 120 1 64 1 
45 1 306 2 247 2 335 1 359 1 4 1 314 1 249 2 284 1 336 4 153 2 71 1 156 1 338 2 103 1 339 1 192 1 175 1 78 1 13 2 294 1 373 1 16 1 213 1 296 1 323 1 262 4 347 1 18 2 195 1 114 2 140 4 264 1 117 1 87 1 141 2 265 1 329 1 268 4 120 1 64 1 
45 1 306 2 247 2 335 1 359 1 4 1 314 1 249 2 284 1 336 4 153 2 71 1 156 1 338 2 103 1 339 1 192 1 175 1 78 1 13 2 294 1 373 1 16 1 213 1 296 1 323 1 262 4 347 1 18 2 195 1 114 2 140 4 264 1 117 1 87 1 141 2 265 1 329 1 268 4 120 1 64 1 
45 1 306 2 185 2 308 1 359 1 4 1 314 1 284 1 336 4 363 2 153 2 71 1 156 1 52 2 339 1 192 1 175 1 78 1 13 2 294 1 373 1 16 1 213 1 296 1 323 1 262 4 347 1 82 1 18 2 114 2 140 4 264 1 117 1 87 1 299 1 141 2 265 1 329 1 268 4 120 1 64 1 
45 1 306 2 247 2 335 1 4 1 359 1 314 1 249 2 284 1 336 4 153 2 71 1 156 1 338 2 339 1 103 1 192 1 175 1 78 1 13 3 294 1 373 1 259 1 16 1 213 1 296 1 323 1 347 1 262 5 18 3 195 1 114 2 140 4 264 1 117 1 87 1 141 3 265 1 329 1 268 5 120 1 64 1 
45 1 306 2 247 2 335 1 4 1 359 1 314 1 249 2 284 1 336 4 153 2 71 1 156 1 338 2 339 1 103 1 192 1 175 1 78 1 13 3 294 1 373 1 259 1 16 1 213 1 296 1 323 1 347 1 262 5 18 3 195 1 114 2 140 4 264 1 117 1 87 1 141 3 265 1 329 1 268 5 120 1 64 1 
45 1 306 2 185 2 308 1 4 1 359 1 314 1 336 4 363 2 153 2 71 1 73 1 156 1 52 2 339 1 192 1 175 1 78 1 13 2 294 1 373 1 213 1 16 1 296 1 323 1 262 4 347 1 18 2 114 2 140 4 264 1 117 1 87 1 141 2 265 1 329 1 268 4 120 1 64 1 
241 1 274 2 24 1 150 6 312 1 231 1 200 2 199 1 250 1 132 1 26 1 206 1 257 3 77 1 322 2 343 1 14 1 344 1 56 1 84 1 110 1 298 1 179 1 220 2 88 3 303 1 
305 1 241 2 274 1 355 1 24 11 227 2 93 1 150 14 231 2 281 1 200 4 199 2 132 1 72 1 26 4 206 11 101 1 257 6 30 1 341 1 77 2 322 1 137 1 14 1 298 2 115 2 179 2 220 2 88 8 266 1 267 3 302 1 89 3 
90 1 241 1 305 1 274 1 44 1 331 1 355 1 246 1 167 1 311 1 279 1 150 2 231 1 314 1 200 2 49 1 171 1 203 1 289 1 26 1 174 1 8 1 290 1 257 1 318 1 11 1 30 1 192 2 77 1 210 1 14 1 16 2 236 1 35 1 298 1 179 1 88 1 240 1 
90 2 274 2 44 1 331 3 227 2 150 20 231 3 281 2 48 1 151 2 49 1 290 1 8 2 11 1 192 3 56 1 344 1 343 1 16 3 14 3 236 2 110 1 298 3 163 2 115 2 118 1 302 4 303 1 240 2 305 1 241 3 66 2 355 1 246 2 24 7 167 2 310 2 311 2 314 1 200 6 199 3 250 1 131 2 132 3 171 2 174 1 26 7 206 7 257 10 318 3 30 1 77 3 322 4 216 1 35 3 38 1 179 3 88 10 220 8 
354 1 241 2 305 1 90 2 331 7 355 1 246 2 150 2 312 1 231 2 314 1 152 1 200 4 49 1 74 1 253 1 174 1 290 1 8 3 257 1 318 8 11 2 192 1 77 2 372 1 16 1 14 2 216 1 35 8 19 1 218 1 298 2 179 2 21 1 88 1 121 1 198 2 223 1 240 2 
241 1 24 1 227 1 150 3 231 1 281 1 314 1 200 2 199 1 132 1 26 1 174 1 369 1 206 1 290 1 257 2 30 1 192 1 77 1 322 1 14 1 16 1 57 1 263 1 298 1 115 1 179 1 220 1 88 1 
241 1 24 1 77 1 227 1 14 1 150 2 312 1 231 1 86 1 298 1 200 2 199 1 179 1 220 1 88 2 302 1 26 1 206 1 
241 1 91 1 257 2 24 1 77 1 322 1 14 1 150 2 312 1 231 1 281 1 298 1 200 2 179 1 132 1 220 1 26 1 206 1 
241 1 227 1 24 2 150 4 312 1 231 1 281 1 199 1 200 2 132 1 26 2 206 2 257 2 77 1 322 1 14 1 115 1 298 1 179 1 88 2 220 2 302 1 
241 1 24 1 77 1 227 1 14 1 150 2 231 1 86 1 298 1 200 2 199 1 179 1 220 1 88 2 74 1 302 1 26 1 206 1 
241 1 91 1 257 2 24 1 77 1 322 1 14 1 150 2 231 1 281 1 298 1 200 2 179 1 132 1 220 1 74 1 26 1 206 1 
241 1 227 1 24 2 150 4 231 1 281 1 199 1 200 2 132 1 74 1 26 2 206 2 257 2 77 1 322 1 14 1 115 1 298 1 179 1 88 2 220 2 302 1 
241 1 227 1 24 2 150 4 231 1 281 1 199 1 200 2 132 1 26 2 206 2 257 2 77 1 322 1 14 1 115 1 298 1 179 1 88 2 220 2 302 1 
90 1 241 1 305 1 274 1 355 1 331 1 246 1 167 1 310 1 311 1 150 2 231 1 200 2 171 1 8 1 257 1 318 1 11 1 192 1 77 1 16 1 14 1 236 1 35 1 298 1 179 1 88 1 240 1 
90 1 241 1 305 1 274 1 355 1 331 1 246 1 228 1 150 2 231 1 200 2 171 1 202 1 157 1 8 1 257 1 318 1 11 1 192 1 77 1 16 1 14 1 236 1 35 1 298 1 179 1 88 1 240 1 
241 1 227 1 24 2 150 4 231 1 281 1 199 1 200 2 132 1 26 2 206 2 257 2 30 1 77 1 322 1 14 1 115 1 298 1 179 1 88 2 220 2 302 1 
66 1 354 1 90 1 241 1 331 1 24 2 227 1 246 1 167 1 310 1 311 1 150 4 281 1 231 1 199 1 200 2 132 1 171 1 26 2 206 2 8 1 257 2 318 1 192 1 77 1 322 1 16 1 14 1 236 1 35 1 298 1 115 1 179 1 220 2 88 2 302 1 240 1 
241 1 147 1 227 1 24 1 150 3 281 1 231 1 314 1 200 2 199 1 132 1 174 1 26 1 369 1 206 1 290 1 257 1 30 1 192 1 77 1 14 1 16 1 263 1 298 1 115 1 179 1 220 1 88 2 302 1 
241 2 244 1 183 1 227 3 2 1 3 1 150 19 281 3 25 1 200 4 199 3 337 1 132 3 257 10 370 1 136 1 54 2 77 2 322 3 137 1 298 2 115 3 179 2 88 9 220 6 119 2 267 2 266 1 302 3 89 1 
241 3 244 1 183 1 227 3 2 1 150 26 281 2 200 6 199 3 337 1 132 2 188 2 251 1 288 1 257 12 370 2 136 2 54 4 77 3 322 2 211 1 161 1 112 1 298 3 115 3 179 3 220 4 88 14 119 1 266 2 267 2 62 1 302 2 89 2 
183 1 227 4 2 1 150 41 281 4 337 1 188 1 288 1 54 4 343 1 344 1 56 1 15 1 161 1 110 1 112 1 115 4 298 3 62 1 119 1 302 4 303 1 241 3 244 1 25 1 199 5 200 6 250 1 132 5 251 1 257 21 370 2 136 1 77 3 322 4 137 1 211 1 179 3 220 8 88 20 266 3 267 4 89 3 
241 4 244 1 183 1 227 4 2 1 150 38 281 3 25 1 200 8 199 5 250 1 337 1 132 4 188 2 251 1 288 1 257 18 370 2 136 1 54 4 77 4 322 4 211 1 137 1 15 1 56 1 344 1 343 1 161 1 110 1 112 1 298 4 115 4 179 4 88 20 220 7 119 1 62 1 267 4 266 3 302 3 303 1 89 3 
241 2 244 1 183 1 227 7 2 1 150 52 281 7 200 4 199 8 250 1 337 1 132 8 188 1 251 1 72 2 288 1 257 25 370 1 136 1 54 4 77 2 322 7 211 1 137 2 56 1 344 1 343 1 161 1 110 1 112 1 298 2 115 7 179 2 88 27 220 14 119 1 62 1 267 4 266 2 302 7 303 1 89 4 
164 1 92 1 278 1 357 1 351 1 287 1 358 1 222 1 280 1 270 1 
20 1 255 1 
194 1 242 1 282 1 164 1 357 1 351 1 358 1 280 1 270 1 
124 1 92 1 309 1 357 1 149 1 358 1 280 1 196 1 177 2 140 1 336 1 164 1 378 1 71 1 351 1 287 1 222 1 270 1 
124 1 92 1 309 1 357 1 149 1 358 1 280 1 196 1 177 2 140 1 336 1 164 1 378 1 71 1 351 1 287 1 222 1 270 1 
124 1 92 1 309 1 357 1 149 1 358 1 280 1 196 1 177 2 140 1 336 1 164 1 378 1 71 1 351 1 287 1 222 1 270 1 
191 1 125 1 123 1 
191 1 125 1 123 1 
379 1 230 1 
379 1 230 1 123 1 
238 1 180 1 
124 1 274 1 357 1 358 1 280 1 314 2 336 1 174 2 254 1 255 1 232 1 290 2 102 1 192 2 16 2 212 1 215 1 177 1 140 1 178 1 164 1 378 1 238 1 20 1 351 1 180 1 270 1 
191 1 125 1 
379 1 230 1 123 1 
90 1 241 1 305 1 355 1 331 2 246 1 150 2 231 1 314 2 200 2 364 1 172 1 368 1 8 1 257 1 318 2 30 1 192 2 77 1 372 1 14 1 16 2 35 2 218 1 298 1 179 1 88 1 198 2 330 1 65 1 240 1 
354 1 318 2 1 1 331 2 246 1 208 1 184 1 32 1 81 1 216 1 35 2 39 1 50 2 201 1 165 1 328 1 197 1 75 1 240 1 
318 1 1 1 331 1 184 1 246 1 32 1 81 1 334 1 216 1 35 1 39 1 50 2 201 1 165 1 328 1 75 1 240 1 
90 1 272 1 318 1 11 1 331 1 246 1 35 1 19 1 39 1 197 1 253 1 240 1 8 1 134 1 
318 1 1 1 331 1 246 1 208 1 184 1 32 1 81 1 216 1 35 1 39 1 50 2 201 1 165 1 328 1 197 1 75 1 240 1 
380 1 
0 1 45 1 117 1 71 1 347 1 360 1 84 1 
45 1 247 1 335 1 4 1 249 1 336 1 71 2 156 1 52 1 338 1 339 1 347 1 262 1 114 1 140 1 117 1 64 1 
90 3 273 2 0 1 182 1 331 3 45 9 276 6 227 2 95 1 4 4 281 2 336 5 97 2 286 2 156 4 7 1 8 10 52 12 339 4 11 1 236 3 347 8 162 1 114 3 163 2 115 2 117 2 64 4 240 3 354 1 246 4 168 2 360 1 249 6 199 2 170 2 132 2 71 8 204 2 366 1 315 2 205 2 318 3 319 3 320 6 258 1 373 2 376 2 262 5 377 2 35 3 140 5 221 1 143 2 
45 8 276 5 227 2 4 2 281 2 336 1 249 3 199 2 170 1 132 2 71 5 251 1 366 1 286 1 156 2 52 6 190 1 339 2 320 5 138 1 211 1 161 1 262 1 347 5 112 1 140 1 114 1 115 2 117 2 143 2 267 1 266 1 62 1 64 2 89 1 
45 2 277 1 4 1 169 1 314 1 336 1 199 2 250 1 170 1 132 1 174 1 27 1 156 1 290 1 291 1 339 1 103 1 192 1 105 1 16 1 344 1 110 1 347 2 140 1 263 1 87 1 143 2 64 1 
0 1 339 1 45 1 4 1 360 1 347 1 117 1 71 1 64 1 156 1 
320 5 45 5 276 5 227 2 347 5 281 2 163 1 115 2 199 2 249 5 170 1 132 2 71 5 143 2 52 10 
140 1 114 1 336 1 117 1 71 1 262 1 
90 1 331 4 45 2 246 1 4 2 336 3 366 2 286 2 155 1 253 1 156 2 7 2 8 1 318 4 339 1 11 2 106 1 214 1 262 4 347 2 85 1 35 4 19 1 114 2 140 3 381 1 221 1 64 2 240 1 
305 1 241 1 90 1 274 1 331 1 246 1 167 1 310 1 311 1 150 1 231 1 314 2 200 2 171 1 174 2 290 2 8 1 257 1 318 1 11 1 192 3 105 1 77 1 16 3 14 1 236 1 35 1 263 2 298 1 179 1 61 1 240 1 
339 1 320 2 45 1 276 2 56 1 4 1 347 2 249 2 117 2 71 4 366 1 286 1 64 1 156 1 52 4 
43 1 357 1 280 1 
43 1 357 1 280 1 
238 1 357 1 287 1 46 1 280 1 
43 1 357 1 280 1 
357 1 280 1 271 1 
357 1 280 1 271 1 
357 1 280 1 271 1 
357 1 280 1 
164 1 270 1 
241 2 257 4 77 2 322 2 56 1 343 1 344 1 150 8 110 1 199 1 298 2 200 4 250 1 132 1 179 2 88 4 220 3 188 1 302 1 303 1 
257 3 322 2 56 1 343 1 344 1 150 6 84 1 110 1 199 1 250 1 132 1 220 2 88 3 303 1 
241 1 257 2 77 1 227 1 322 1 150 4 281 1 298 1 200 2 115 1 199 1 132 1 179 1 220 2 88 2 302 1 353 1 
257 4 227 1 322 1 137 1 150 7 281 1 115 1 199 1 132 1 88 3 220 2 266 1 267 2 302 1 89 1 
241 2 227 2 150 23 128 1 281 2 199 3 200 4 250 2 132 3 188 2 72 1 257 12 341 1 77 2 322 5 137 1 56 1 344 2 343 1 110 1 115 2 298 2 179 2 220 9 88 11 267 2 302 4 303 1 89 2 
257 1 267 1 150 1 
88 1 150 1 89 1 
241 1 257 3 77 1 227 1 322 2 150 6 281 1 200 2 298 1 163 1 115 1 199 1 179 1 132 1 88 3 220 3 302 1 353 1 
241 1 183 1 227 2 150 12 281 2 200 2 199 2 132 2 251 1 257 6 77 1 322 1 211 1 161 1 112 1 298 1 115 2 179 1 88 6 220 2 267 1 266 1 62 1 302 1 89 1 
257 3 322 1 344 1 150 6 110 1 199 1 250 1 132 1 88 3 220 2 302 1 
241 1 257 2 77 1 322 1 344 1 343 1 150 3 128 1 298 1 200 2 250 1 179 1 88 1 220 2 188 1 302 1 303 1 
241 1 257 5 183 1 77 1 322 3 344 2 150 10 110 1 200 2 298 1 199 2 250 2 179 1 132 2 220 5 88 5 302 2 27 1 
241 1 183 1 77 1 227 1 150 2 298 1 200 2 199 1 179 1 88 2 220 1 302 1 
241 1 257 2 183 1 77 1 227 1 322 1 150 4 281 1 298 1 200 2 115 1 199 1 132 1 179 1 220 2 88 2 302 1 
241 3 257 2 183 1 77 3 322 1 344 1 150 3 128 1 25 1 298 3 200 6 250 1 179 3 188 1 220 2 88 1 302 1 
241 5 183 1 227 3 150 34 128 1 281 3 25 1 200 10 199 5 70 1 250 3 132 5 188 2 367 1 133 1 257 18 77 5 322 7 137 1 56 1 344 3 343 1 110 2 298 5 115 3 179 5 88 16 220 12 267 4 266 1 302 5 353 1 303 1 89 3 
241 1 183 1 150 8 199 1 200 2 250 1 132 1 257 4 77 1 322 2 56 1 343 1 344 1 161 1 110 1 298 1 179 1 88 4 220 2 267 1 266 1 303 1 89 1 
241 2 183 1 227 1 150 11 200 4 199 2 250 1 132 1 257 5 77 2 322 2 137 1 56 1 344 1 343 1 161 1 110 1 298 2 115 1 179 2 88 6 220 3 267 2 266 1 302 1 353 1 303 1 89 1 
241 3 183 1 227 2 150 19 281 2 200 6 199 3 250 1 132 3 251 1 188 1 257 10 77 3 322 3 211 1 56 1 344 1 343 1 161 1 110 1 112 1 298 3 115 2 179 3 88 9 220 4 267 1 266 1 62 1 302 1 353 1 303 1 89 1 
241 3 183 1 227 2 150 17 281 1 200 6 199 3 250 1 132 2 188 1 251 1 257 7 77 3 322 3 211 1 56 1 344 1 343 1 161 1 110 1 112 1 298 3 115 2 179 3 88 10 220 5 267 1 266 1 62 1 302 2 353 1 303 1 89 1 
241 1 183 1 150 8 199 1 200 2 250 1 132 1 257 4 77 1 322 2 56 1 343 1 344 1 161 1 110 1 298 1 179 1 88 4 220 2 267 1 266 1 303 1 89 1 
241 1 183 1 227 2 150 12 281 2 200 2 199 2 132 2 251 1 257 6 77 1 322 1 211 1 161 1 112 1 298 1 115 2 179 1 88 6 220 2 267 1 266 1 62 1 302 1 89 1 
241 4 183 1 227 2 150 18 281 1 200 8 199 3 250 1 132 2 251 1 188 2 257 8 77 4 322 3 211 1 56 1 344 1 343 1 161 1 110 1 112 1 298 4 115 2 179 4 88 10 220 5 267 1 266 1 62 1 302 2 353 1 303 1 89 1 
241 4 183 1 227 3 150 16 281 2 25 1 200 8 199 3 132 2 251 1 188 2 257 7 77 4 322 3 211 1 161 1 112 1 298 4 115 3 179 4 88 9 220 6 267 1 266 1 62 1 302 3 89 1 
257 4 322 3 343 1 344 3 150 7 110 1 199 1 250 3 132 1 220 6 88 3 302 3 303 2 
241 4 183 1 227 2 150 18 281 1 25 1 200 8 199 3 250 1 132 2 251 1 188 2 257 8 77 4 322 3 211 1 56 1 344 1 343 1 161 1 110 1 112 1 298 4 115 2 179 4 88 10 220 4 267 1 266 1 62 1 302 1 303 1 89 1 
274 1 314 1 158 1 192 1 16 1 108 1 359 1 
304 1 274 1 158 1 192 1 307 1 108 1 16 1 17 1 359 1 58 1 314 1 40 1 
90 1 19 1 35 1 318 1 331 1 11 1 246 1 253 1 240 1 8 1 84 1 
90 1 274 1 318 1 11 1 331 1 192 2 246 1 16 2 311 1 236 1 35 1 314 1 49 1 171 1 174 1 8 1 290 1 240 1 
90 2 274 1 331 1 246 1 311 1 314 2 49 1 171 1 204 1 174 1 205 1 7 1 290 2 8 3 318 1 192 2 294 1 16 2 236 2 35 1 87 1 265 1 240 1 
90 2 274 1 331 2 246 1 314 2 49 1 202 1 171 1 204 1 174 1 205 1 7 1 290 2 8 3 318 2 192 2 294 1 16 2 236 2 35 2 87 1 300 1 265 1 240 1 
90 1 318 3 11 1 331 3 319 1 246 1 373 1 260 1 236 1 375 1 376 1 262 1 35 3 140 2 336 2 117 1 300 1 71 1 204 1 205 1 7 1 8 4 240 1 
90 1 273 1 318 3 11 1 331 3 319 1 246 1 373 1 236 1 376 1 262 1 35 3 140 2 336 2 117 1 300 1 71 1 204 1 205 1 7 1 8 4 240 1 
35 1 318 1 331 1 246 1 21 1 240 1 
354 1 53 1 90 2 318 7 371 1 11 2 331 6 246 3 342 1 216 1 236 1 162 1 35 7 218 1 152 1 21 1 198 1 121 1 223 1 8 3 240 2 
90 1 274 2 331 1 150 6 231 2 49 1 290 1 8 1 192 2 16 2 14 2 343 1 344 1 56 1 236 1 110 1 298 2 303 1 240 1 66 1 354 1 241 2 246 1 24 1 167 1 310 1 311 1 314 1 200 4 199 1 131 1 250 1 364 1 132 1 171 1 26 1 174 1 206 1 257 3 318 1 30 1 77 2 322 2 35 1 179 2 220 2 88 3 
273 1 0 1 331 1 45 1 4 2 360 1 336 3 97 1 71 1 315 1 156 2 8 2 318 1 11 1 339 2 319 1 373 1 376 1 347 1 262 2 377 1 35 1 140 3 114 1 178 1 117 1 221 1 64 2 
354 1 90 1 318 2 331 2 258 1 246 2 376 1 236 1 162 1 35 2 21 1 8 2 240 1 
354 1 90 1 318 4 11 1 331 4 246 1 35 4 19 1 300 1 142 1 253 1 8 1 240 1 
90 1 318 2 371 1 331 2 12 1 246 2 342 1 236 1 35 2 113 1 118 1 7 1 8 1 240 1 
35 1 318 1 331 1 11 1 50 1 246 1 184 1 328 1 81 1 240 1 
354 1 90 1 318 2 331 2 246 1 216 1 35 2 218 1 368 1 8 1 240 1 
354 1 90 2 318 5 11 1 331 4 246 2 19 1 35 5 218 1 142 1 253 1 121 1 223 1 7 1 8 3 240 2 
354 1 90 2 318 5 11 1 331 4 246 2 234 1 19 1 35 5 218 1 142 1 253 1 121 1 7 1 8 3 240 2 
90 1 274 1 318 1 11 1 331 1 192 2 246 1 16 2 236 1 35 1 314 1 49 1 171 1 202 1 174 1 8 1 290 1 240 1 
53 1 90 1 318 1 371 1 331 1 246 2 342 1 236 1 162 1 35 1 7 1 8 1 240 1 
325 1 274 1 29 1 59 1 79 1 
274 1 29 2 78 1 373 1 294 1 96 1 79 2 295 1 111 1 313 1 325 1 140 2 59 2 178 1 336 2 117 1 87 1 71 1 265 1 
192 1 79 1 16 1 325 1 59 1 314 1 172 1 65 1 330 1 
325 1 96 1 313 1 
361 1 107 1 217 1 84 1 
361 1 23 1 116 1 107 1 34 1 269 1 217 1 
224 1 116 1 229 1 
135 1 23 1 207 1 107 1 31 1 34 3 217 1 237 2 361 1 116 3 187 1 269 1 
361 1 23 1 275 1 116 2 107 1 160 1 34 2 269 1 217 1 
135 1 23 1 340 1 107 1 32 1 34 1 248 1 116 1 50 1 328 1 269 1 
361 1 23 1 135 1 116 1 107 1 34 1 269 1 
361 2 23 1 135 1 116 1 34 1 269 1 217 1 
135 1 23 2 107 1 321 1 34 2 361 1 139 1 348 1 116 2 269 2 
135 1 23 1 160 2 107 2 34 3 109 1 217 1 361 1 60 1 248 1 116 3 63 1 269 1 
135 1 23 1 332 1 107 1 160 1 32 1 34 2 81 1 217 1 361 1 116 2 50 2 328 1 269 1 75 1 
135 1 23 2 275 1 104 1 160 2 107 2 34 4 109 1 217 1 361 1 248 1 116 4 269 2 
361 1 23 1 135 1 116 1 107 1 34 1 269 1 217 1 
23 1 31 1 160 2 107 3 94 1 34 4 109 1 217 2 237 1 361 2 248 1 116 4 187 1 269 1 
28 1 135 1 23 1 107 1 160 1 34 2 217 1 361 1 116 2 283 1 269 1 317 1 
135 1 23 1 225 1 107 1 31 2 34 3 217 1 237 2 361 1 116 3 187 1 269 1 
100 1 107 2 350 2 173 1 
23 1 135 1 116 1 326 1 34 1 269 1 
361 1 23 1 135 1 116 2 107 1 160 1 63 1 34 2 269 1 217 1 
47 1 
361 1 23 1 135 1 116 1 107 1 34 1 269 1 217 1 
135 1 23 1 160 1 107 1 34 3 217 1 237 1 361 1 116 3 63 1 269 1 
248 1 107 1 94 1 109 1 
361 1 107 1 

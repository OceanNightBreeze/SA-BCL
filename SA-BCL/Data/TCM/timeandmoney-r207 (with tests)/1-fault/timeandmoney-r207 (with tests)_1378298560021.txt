#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
296 1 104 1 180 1 244 1 300 1 321 6 158 3 326 2 368 1 273 2 274 1 352 1 329 1 252 5 258 2 281 2 33 1 310 9 61 2 13 1 175 9 312 1 337 1 218 4 96 2 97 1 66 2 316 1 
296 1 104 1 180 1 244 1 300 1 321 6 158 3 326 2 368 1 273 2 274 1 352 1 329 1 252 5 258 2 281 2 33 1 310 9 61 2 13 1 175 9 312 1 337 1 218 4 96 2 97 1 66 2 316 1 
296 1 104 1 180 1 244 1 300 1 321 7 158 4 326 2 368 1 273 2 274 1 352 1 329 1 252 6 258 2 281 2 33 1 310 10 61 2 13 1 175 10 312 1 337 1 218 5 96 2 97 1 66 2 316 1 
296 1 104 1 180 1 244 1 321 4 158 2 326 2 368 1 273 2 274 1 352 1 329 1 252 4 258 2 281 2 33 1 310 7 61 2 13 1 175 7 312 1 337 1 218 3 96 2 97 1 66 1 316 1 
258 1 281 1 33 1 300 1 310 4 321 3 61 1 175 4 158 1 312 1 326 1 218 2 273 1 368 1 352 1 329 1 252 3 66 2 
278 1 258 1 33 1 310 2 130 1 61 1 175 2 312 1 326 1 337 1 273 1 274 1 96 1 220 1 252 1 329 1 
258 2 244 1 33 1 310 3 321 1 175 3 158 1 312 1 218 1 273 2 96 1 329 1 252 2 
104 1 244 1 300 1 321 7 245 1 158 3 326 1 273 2 368 1 352 1 83 1 329 1 252 5 258 2 281 1 33 1 310 9 61 1 175 9 312 1 218 4 96 1 66 2 316 1 
104 1 244 1 300 1 321 7 245 1 158 3 326 1 273 2 368 1 352 1 83 1 329 1 252 5 258 2 281 1 33 1 310 9 61 1 175 9 312 1 218 4 96 1 66 2 316 1 
5 1 126 1 166 1 
5 1 106 1 208 2 
4 1 57 2 11 2 148 2 121 2 163 2 100 2 122 1 
298 1 205 1 344 2 157 1 4 1 79 1 53 1 185 2 250 1 230 1 8 1 137 1 163 2 275 1 330 1 86 1 57 3 168 1 11 2 90 1 120 1 121 2 334 1 261 1 284 1 173 2 143 1 176 1 39 1 148 2 100 3 122 1 42 2 381 1 68 2 317 1 150 1 
4 1 57 1 11 1 40 1 32 1 148 1 121 1 163 1 100 1 17 1 
366 1 4 1 81 1 5 1 351 1 305 1 163 1 166 1 57 2 190 1 11 2 32 1 171 1 333 1 121 1 145 1 40 2 148 1 100 2 123 1 17 1 
57 2 11 2 190 1 32 1 171 2 121 2 4 1 366 1 81 1 5 1 351 1 305 1 148 2 40 2 163 2 100 2 17 1 123 2 166 1 
256 1 127 1 161 1 171 1 123 1 
256 1 5 1 127 1 171 2 123 2 166 1 241 1 342 1 
256 1 171 1 123 1 
57 1 11 1 127 1 32 1 171 1 121 1 4 1 81 1 40 1 148 1 163 1 100 1 123 1 17 1 
5 1 
256 1 5 1 1 1 127 1 171 2 123 2 166 1 241 1 
225 2 256 2 127 2 171 5 203 1 75 1 12 1 247 1 237 1 338 2 5 1 248 1 370 1 7 1 276 1 123 5 149 2 166 1 241 1 
126 1 122 1 
57 2 11 2 121 1 217 1 206 1 148 1 163 1 100 2 122 2 
201 1 128 1 221 1 
57 1 261 1 284 1 157 1 79 1 176 1 185 1 39 1 250 1 230 1 275 1 100 1 122 1 65 1 42 1 68 1 
57 2 201 1 355 1 11 1 59 1 121 1 261 1 284 1 157 1 79 1 176 1 185 1 39 1 250 1 230 1 163 1 275 1 100 2 42 1 68 1 
57 3 355 1 11 3 148 1 121 3 163 3 100 3 122 1 
57 1 11 1 40 1 32 1 121 1 163 1 100 1 
57 1 11 1 40 1 148 1 121 1 163 1 100 1 217 1 206 1 
298 1 344 2 205 1 157 1 4 1 351 1 305 1 8 1 250 1 163 3 57 4 355 1 11 3 215 1 171 1 59 1 121 3 261 1 217 1 173 1 176 1 362 1 123 1 122 1 68 1 317 1 366 1 79 1 185 1 230 1 275 1 137 1 330 1 190 1 90 1 192 1 284 1 143 1 39 1 40 2 148 2 100 4 42 1 381 1 150 1 
57 2 11 2 355 1 333 1 121 1 163 1 172 1 100 2 122 1 
57 3 355 2 11 3 190 1 91 1 215 1 171 1 59 1 121 3 217 1 366 1 5 1 351 1 305 1 148 1 40 1 163 3 100 3 123 1 
57 2 355 1 11 2 201 1 128 1 121 2 217 1 148 1 163 2 100 2 
57 1 261 1 284 1 157 1 79 1 176 1 185 1 39 1 230 1 250 1 275 1 100 1 122 1 42 1 68 1 
57 1 129 1 261 1 157 1 79 1 176 1 185 1 39 1 230 1 250 1 100 1 122 1 42 1 85 1 68 1 
124 1 201 2 298 1 128 2 202 1 301 1 302 1 344 2 205 2 22 1 184 1 113 1 137 1 27 1 330 1 90 1 120 2 173 4 359 1 339 1 221 2 43 1 381 1 317 1 
57 1 0 1 11 1 305 1 40 1 121 1 163 1 100 1 
57 5 355 2 11 5 309 1 59 1 333 1 121 4 172 1 217 1 148 1 163 4 100 5 101 1 122 1 
57 2 0 1 11 2 40 1 32 1 121 2 163 2 100 2 
159 1 72 1 
159 1 72 1 
297 1 243 1 
297 1 243 1 
297 1 243 1 
318 1 159 1 72 1 
318 1 159 1 72 1 
188 1 159 1 72 1 
313 1 297 1 159 2 72 2 243 1 95 1 
318 1 159 1 72 1 
159 1 72 1 73 1 
159 1 72 1 73 1 
159 1 72 1 73 1 
233 1 279 2 72 2 320 2 171 2 260 1 20 2 235 2 262 1 286 1 313 1 159 2 5 1 147 3 84 1 25 2 123 2 223 1 103 1 
72 1 47 1 320 1 20 1 159 1 350 1 163 2 25 1 188 1 167 1 57 2 279 1 11 2 259 1 171 1 121 2 286 1 146 1 147 1 361 1 293 1 100 2 122 1 123 1 
326 1 281 1 61 1 
326 1 278 1 61 1 
278 1 18 1 281 2 340 1 328 1 61 3 
278 1 18 1 281 1 328 1 76 1 61 2 
278 1 18 2 281 1 328 1 61 2 
225 1 69 1 47 1 127 4 106 1 75 2 208 3 271 1 184 1 5 2 113 1 276 3 27 1 231 1 166 1 211 1 256 1 259 1 171 5 191 1 92 1 12 1 142 1 336 2 338 1 265 2 359 1 15 2 293 1 149 1 123 5 241 1 
225 2 69 2 127 7 106 3 75 6 208 9 52 1 184 3 5 5 249 5 161 5 113 3 372 1 276 8 26 1 27 3 231 2 166 1 256 6 171 9 60 1 191 3 141 1 12 1 142 1 237 1 336 6 338 2 265 6 359 3 177 1 293 4 123 9 149 2 241 1 
225 1 69 1 127 2 106 2 75 2 208 4 184 1 5 3 113 1 276 3 231 1 27 1 166 1 211 1 171 3 92 1 191 1 237 1 336 2 338 1 359 1 265 2 15 1 293 1 149 1 123 3 
225 1 69 1 127 3 106 3 75 4 208 7 52 1 184 2 5 4 113 2 276 5 26 1 231 1 27 2 166 1 211 1 171 4 92 1 191 2 141 1 336 4 237 1 338 1 265 4 359 2 15 2 293 2 149 1 123 4 
126 1 250 1 224 1 
250 1 263 1 
232 1 
250 1 230 1 
88 1 39 1 170 1 250 3 230 1 224 2 
39 1 250 1 230 1 
250 1 131 1 
200 1 139 1 202 3 120 4 302 2 205 3 110 1 21 1 173 7 111 2 196 1 290 1 184 1 359 1 198 1 99 1 118 1 
200 1 139 1 202 3 120 4 302 2 205 3 110 1 21 1 173 7 111 2 196 1 290 1 184 1 359 1 198 1 99 1 118 1 
200 1 139 1 169 1 202 3 120 4 302 2 205 3 110 1 21 1 173 7 111 2 196 1 290 1 184 1 359 1 198 1 99 1 118 1 
200 2 298 1 202 10 302 5 344 2 205 15 110 1 50 1 21 5 111 3 78 4 367 1 184 4 113 3 137 1 27 3 118 1 210 1 374 1 139 1 308 1 120 16 191 3 193 1 173 31 288 3 196 2 290 2 359 4 198 2 268 1 99 1 381 1 317 1 
200 1 319 1 298 2 202 4 302 3 344 4 205 4 110 1 21 1 111 2 184 1 137 2 118 1 308 1 120 5 173 9 357 1 196 1 290 1 359 1 198 1 99 1 381 2 317 2 
70 1 45 1 321 1 207 1 157 1 326 1 273 1 185 1 353 1 252 1 164 1 329 1 254 1 278 1 258 1 119 1 58 1 281 1 33 1 310 2 377 1 261 1 61 2 175 2 312 1 144 1 96 1 340 1 42 1 68 1 
70 1 321 2 324 1 207 1 157 1 326 1 273 1 185 1 353 1 252 1 164 1 254 1 278 1 258 1 58 1 281 1 33 1 310 3 377 1 261 1 61 2 175 3 312 1 144 1 96 1 340 1 239 1 42 1 68 1 152 1 
70 1 321 2 324 1 157 1 326 1 185 1 353 1 252 1 164 1 254 1 278 1 58 1 281 1 33 1 310 2 377 1 261 1 61 2 175 2 312 1 96 1 340 1 239 1 42 1 68 1 
254 2 70 2 258 1 310 1 261 1 183 1 157 1 175 1 272 1 238 1 273 1 291 1 176 1 185 1 267 1 96 2 250 1 230 1 222 1 164 2 42 1 68 1 152 1 
70 1 324 1 207 1 157 1 326 1 273 1 185 1 353 1 164 1 329 1 254 1 278 1 258 1 119 1 58 1 281 1 310 1 377 1 261 1 61 2 175 1 144 1 96 1 340 1 42 1 68 1 
28 1 
153 2 3 1 106 2 108 2 345 2 208 2 157 1 51 2 5 3 351 1 305 1 250 1 116 2 165 1 117 1 166 2 255 1 256 6 57 1 11 1 171 5 261 1 12 1 176 2 222 1 16 4 64 1 123 5 68 2 225 1 125 1 183 1 75 2 365 1 366 1 327 2 82 1 185 2 230 1 276 2 231 1 138 1 189 1 190 1 376 1 333 1 194 2 338 1 145 1 40 1 100 1 41 1 149 1 42 2 241 3 
1 1 125 1 365 1 366 1 5 2 82 1 351 1 305 1 165 1 166 2 256 2 57 1 190 1 11 1 171 3 333 1 194 1 145 1 40 1 16 2 100 1 41 1 123 3 241 1 
153 1 57 1 11 1 190 1 125 1 171 2 333 1 365 1 366 1 145 1 5 2 351 1 82 1 305 1 40 1 16 3 41 1 100 1 123 2 165 1 166 2 
153 1 1 1 125 1 345 1 365 1 366 1 5 3 82 1 351 1 305 1 165 1 166 3 256 2 57 1 190 1 11 1 171 3 333 1 194 1 145 1 40 1 16 3 100 1 41 1 123 3 241 1 
153 3 1 1 106 2 108 2 345 4 4 1 51 2 5 4 160 1 351 1 305 1 163 1 354 1 116 2 165 1 166 4 255 1 256 7 57 2 11 2 171 5 121 1 174 1 12 1 16 5 17 1 123 5 225 1 125 1 75 1 365 1 366 1 81 1 327 2 82 1 276 1 138 1 190 1 32 1 333 1 194 4 285 1 145 1 338 1 148 1 40 2 41 1 100 2 149 1 240 1 241 3 
153 2 106 2 3 1 108 2 345 2 208 2 51 2 5 4 351 1 305 1 116 2 165 1 166 3 255 1 256 4 57 1 11 1 171 4 12 1 16 4 123 4 225 1 125 1 75 1 365 1 366 1 327 2 82 1 276 1 138 1 190 1 333 1 194 2 338 1 145 1 40 1 100 1 41 1 149 1 241 2 
225 1 153 2 125 1 106 2 108 2 75 1 345 2 365 1 51 2 366 1 327 2 5 3 82 1 351 1 305 1 276 1 116 2 354 1 165 1 166 3 138 1 255 1 256 4 57 1 190 1 11 1 171 4 333 1 194 2 174 1 12 1 338 1 145 1 40 1 16 4 100 1 41 1 123 4 149 1 240 1 241 2 
225 1 153 2 125 1 106 2 108 2 75 1 345 2 365 1 51 2 366 1 327 2 5 3 82 1 351 1 305 1 276 1 116 2 354 1 165 1 166 3 138 1 255 1 256 4 57 1 190 1 11 1 171 4 333 1 194 2 174 1 12 1 338 1 145 1 40 1 16 4 100 1 41 1 123 4 149 1 240 1 241 2 
225 1 153 2 2 1 125 1 270 2 108 2 107 1 343 1 75 1 345 2 208 2 365 1 366 1 5 3 82 1 351 1 305 1 276 1 253 2 116 2 165 1 166 3 138 1 256 4 57 1 190 1 11 1 171 4 333 1 194 2 174 1 12 1 338 1 145 1 40 1 16 4 100 1 41 1 123 4 149 1 241 2 
225 1 153 3 125 1 106 2 108 2 75 1 345 3 365 1 51 2 366 1 327 2 5 3 160 1 82 1 351 1 305 1 276 1 116 2 354 1 165 1 166 3 138 1 255 1 256 5 57 1 190 1 11 1 171 4 333 1 194 3 174 1 12 1 338 1 145 1 40 1 16 5 100 1 41 1 149 1 123 4 240 1 241 2 
225 1 153 3 125 1 106 2 108 2 75 1 345 3 365 1 51 2 366 1 327 2 5 3 160 1 82 1 351 1 305 1 276 1 116 2 354 1 165 1 166 3 138 1 255 1 256 5 57 1 190 1 11 1 171 4 333 1 194 3 174 1 12 1 338 1 145 1 40 1 16 5 100 1 41 1 149 1 123 4 240 1 241 2 
153 2 3 1 107 1 108 2 345 2 208 2 5 3 351 1 305 1 253 2 116 2 165 1 166 3 256 4 57 1 11 1 171 4 12 1 16 4 123 4 225 1 125 1 270 2 75 1 365 1 366 1 82 1 276 1 138 1 190 1 333 1 194 2 338 1 145 1 40 1 100 1 41 1 149 1 241 2 
200 1 201 1 90 1 298 1 126 1 128 1 120 3 202 2 302 2 205 3 344 2 110 1 173 6 111 1 290 1 184 1 359 1 221 1 339 1 99 1 137 1 122 2 381 1 317 1 118 1 330 1 
201 11 298 2 128 4 202 2 322 1 302 1 205 6 344 4 109 1 50 1 21 1 78 3 184 1 113 1 137 2 27 2 210 1 330 2 90 1 280 1 120 8 191 2 334 1 356 1 173 14 288 3 143 1 358 1 359 2 221 11 122 1 381 2 317 2 
298 1 128 1 344 2 205 1 157 1 79 1 185 1 250 1 230 1 275 1 137 1 163 1 330 1 331 1 10 1 57 2 11 1 355 1 90 1 59 1 120 1 121 1 334 1 261 1 356 1 284 1 173 2 36 1 143 1 176 1 39 1 100 2 122 1 42 1 65 1 68 1 381 1 317 1 
200 1 201 7 46 1 298 3 202 8 302 4 205 10 344 6 110 1 111 1 157 2 250 2 113 2 163 1 118 1 57 3 355 1 11 1 59 1 120 10 121 1 356 1 261 2 173 20 359 3 360 2 176 1 219 1 221 7 122 2 68 3 317 3 128 7 363 2 324 1 364 1 21 4 79 2 184 3 185 3 230 2 137 3 275 2 27 2 330 3 90 3 191 2 334 1 284 2 290 1 143 1 38 2 39 2 99 1 100 3 380 2 42 3 381 3 150 2 
242 1 178 1 45 1 19 1 298 2 324 1 344 4 205 1 183 1 157 2 6 1 185 8 250 3 230 2 163 1 137 2 332 1 330 2 57 1 86 2 11 1 355 1 90 2 120 1 121 1 334 1 261 2 173 2 287 1 143 1 176 2 339 1 222 1 341 1 100 1 42 8 68 7 381 2 317 2 
201 1 298 1 128 1 202 1 302 1 344 2 205 2 184 1 113 1 163 1 137 1 27 1 330 1 212 1 57 1 11 1 90 1 120 1 121 1 191 1 356 1 217 1 173 3 359 1 221 1 148 1 100 1 381 1 317 1 
201 1 90 1 298 1 128 1 202 1 120 2 344 2 21 1 173 2 22 1 359 1 221 1 339 1 137 1 27 1 381 1 317 1 330 1 
124 1 201 1 90 1 298 1 128 1 202 1 302 1 344 2 205 2 173 2 184 1 221 1 339 1 113 1 137 1 381 1 317 1 330 1 
201 2 90 1 298 1 128 2 202 2 120 2 191 1 302 1 205 2 344 2 21 1 173 4 184 1 359 1 221 2 339 1 113 1 137 1 27 1 381 1 317 1 330 1 
242 1 201 1 90 1 298 1 128 1 202 1 120 2 344 2 21 1 173 2 22 1 359 1 221 1 137 1 27 1 381 1 317 1 330 1 
124 1 242 1 201 1 90 1 298 1 128 1 202 1 302 1 344 2 205 2 173 2 184 1 221 1 113 1 137 1 381 1 317 1 330 1 
242 1 201 2 298 1 128 2 202 2 302 1 344 2 205 2 21 1 184 1 113 1 137 1 27 1 330 1 90 1 120 2 191 1 173 4 359 1 221 2 381 1 317 1 
201 2 90 1 298 1 128 2 202 2 120 2 191 1 302 1 205 2 344 2 21 1 173 4 184 1 359 1 221 2 113 1 137 1 27 1 381 1 317 1 330 1 
298 1 344 2 205 1 157 1 79 1 185 1 230 1 250 1 275 1 137 1 330 1 57 1 90 1 120 1 334 1 261 1 284 1 173 2 143 1 176 1 39 1 100 1 122 1 42 1 68 1 381 1 150 1 317 1 
155 1 298 1 129 1 344 2 205 1 157 1 79 1 185 1 230 1 250 1 137 1 85 1 330 1 57 1 90 1 120 1 334 1 261 1 173 2 143 1 176 1 39 1 100 1 122 1 42 1 68 1 381 1 317 1 
201 2 90 1 298 1 128 2 202 2 120 2 191 1 302 1 205 2 356 1 344 2 21 1 173 4 184 1 359 1 221 2 113 1 137 1 27 1 381 1 317 1 330 1 
45 1 201 2 298 1 128 2 202 2 302 1 205 2 344 2 21 1 157 1 79 1 184 1 185 1 230 1 250 1 113 1 275 1 137 1 27 1 330 1 57 1 90 1 120 2 191 1 261 1 284 1 173 4 359 1 39 1 221 2 380 1 100 1 42 1 68 1 381 1 150 1 317 1 
201 1 298 1 128 1 202 1 205 1 344 2 21 1 184 1 113 1 163 1 137 1 27 1 330 1 57 1 11 1 90 1 120 2 121 1 191 1 356 1 217 1 173 3 359 1 292 1 148 1 221 1 100 1 381 1 317 1 
226 1 71 1 319 1 298 2 202 6 302 3 344 4 205 10 346 1 50 1 21 3 78 2 80 1 135 1 184 3 113 3 137 2 27 3 373 2 210 1 214 2 282 1 120 9 191 3 173 19 288 1 37 1 359 3 381 2 317 2 
154 1 226 2 319 1 298 3 269 1 202 4 302 2 205 12 344 6 346 2 21 2 50 2 78 2 135 1 184 2 186 1 113 2 137 3 27 3 373 4 9 1 308 2 214 1 282 1 120 14 191 3 173 26 288 2 34 1 289 1 37 1 359 3 381 3 317 3 
154 1 200 1 298 3 202 8 302 4 205 21 344 6 346 2 110 1 50 3 111 1 113 4 9 1 210 1 118 1 308 1 214 1 120 20 173 41 359 5 317 3 226 1 319 1 269 1 21 4 78 4 80 1 184 5 135 1 186 1 137 3 27 4 373 4 89 1 282 1 191 4 288 3 34 1 289 1 290 1 37 1 99 1 381 3 
200 1 154 1 226 1 319 1 298 4 269 1 202 7 302 4 344 8 205 18 110 1 346 2 50 3 21 3 111 1 78 4 80 1 135 1 184 4 186 1 113 3 137 4 27 4 9 1 373 4 118 1 210 1 308 2 89 1 214 1 282 1 120 20 191 4 173 38 34 1 288 3 290 1 289 1 37 1 359 5 99 1 381 4 317 4 
200 1 154 1 226 1 319 1 298 2 269 1 202 14 322 2 302 7 344 4 205 25 110 1 346 1 50 2 21 7 111 1 78 4 135 1 184 8 186 1 113 7 137 2 27 7 9 1 373 4 118 1 210 2 308 1 214 1 282 1 120 27 191 7 173 52 34 1 288 4 290 1 289 1 37 1 359 8 99 1 381 2 317 2 
313 1 159 1 279 1 72 1 320 1 112 1 20 1 25 1 262 1 103 1 
188 1 361 1 
159 1 279 1 72 1 320 1 181 1 20 1 182 1 306 1 25 1 
279 1 72 1 320 1 171 1 260 1 20 1 235 1 262 1 286 1 313 1 159 1 5 1 147 2 84 1 25 1 123 1 223 1 103 1 
279 1 72 1 320 1 171 1 260 1 20 1 235 1 262 1 286 1 313 1 159 1 5 1 147 2 84 1 25 1 123 1 223 1 103 1 
279 1 72 1 320 1 171 1 260 1 20 1 235 1 262 1 286 1 313 1 159 1 5 1 147 2 84 1 25 1 123 1 223 1 103 1 
318 1 95 1 98 1 
318 1 95 1 98 1 
73 1 24 1 
73 1 24 1 95 1 
167 1 146 1 
72 1 47 1 127 1 320 1 20 1 159 1 350 1 163 2 25 1 188 1 167 1 57 2 279 1 11 2 31 1 259 1 171 1 235 1 121 2 146 1 147 1 361 1 293 1 100 2 122 1 123 1 223 1 
318 1 98 1 
73 1 24 1 95 1 
105 1 19 1 298 1 49 1 344 2 205 1 157 1 209 1 348 1 185 2 250 1 230 1 137 1 330 1 57 2 86 2 11 2 90 1 120 1 334 1 261 1 356 1 93 1 173 2 143 1 341 1 100 2 42 2 381 1 68 2 317 1 
254 1 278 1 45 1 58 1 281 1 261 1 324 1 61 2 62 1 157 1 195 1 326 1 144 1 266 1 185 2 340 1 353 1 42 2 68 2 
254 1 278 1 58 1 281 1 324 1 261 1 61 2 62 1 157 1 326 1 144 1 185 1 340 1 353 1 295 1 42 1 68 1 
254 1 261 1 204 1 183 1 157 1 272 1 266 1 176 1 185 1 250 1 230 1 222 1 42 1 68 1 
254 1 278 1 58 1 281 1 324 1 261 1 61 2 62 1 157 1 195 1 326 1 144 1 266 1 185 1 340 1 353 1 42 1 68 1 
14 1 
5 1 126 1 370 1 276 1 203 1 75 1 166 1 
225 1 106 1 75 1 208 1 51 1 327 1 5 2 276 1 166 1 255 1 256 1 171 1 12 1 338 1 149 1 123 1 241 1 
225 2 299 1 106 3 323 1 75 3 208 6 157 2 132 1 23 1 349 1 184 1 5 3 351 1 185 1 230 1 250 4 113 1 276 4 27 1 231 1 256 2 88 1 375 1 171 2 191 1 261 1 263 2 12 2 336 3 338 2 359 1 265 3 360 1 176 1 314 1 39 1 294 1 123 2 42 1 149 2 68 1 224 1 241 1 
225 2 154 1 269 1 106 3 75 5 50 1 208 6 78 1 133 1 349 2 5 5 184 2 113 2 276 8 231 1 27 2 9 1 166 2 256 1 171 1 191 2 140 1 34 1 288 1 12 2 289 1 336 5 338 2 265 5 359 2 379 1 64 1 123 1 149 2 241 1 
225 1 200 1 75 2 4 1 133 1 349 2 81 1 184 1 276 2 163 1 115 1 354 1 57 1 11 1 32 1 171 1 121 1 12 1 290 1 338 1 359 2 40 1 148 1 99 1 100 1 149 1 123 1 17 1 
225 1 203 1 75 1 12 1 338 1 5 1 370 1 276 1 149 1 166 1 
106 5 191 2 75 5 208 10 336 5 133 1 349 2 359 2 265 5 5 5 184 2 360 1 113 2 276 5 27 2 
256 1 5 1 171 1 123 1 166 1 241 1 
225 2 75 2 183 1 303 2 157 1 185 4 250 1 230 1 276 2 231 2 307 1 256 4 189 1 30 1 376 1 171 3 261 1 12 1 237 1 338 2 197 1 176 2 222 1 64 2 149 2 42 4 123 3 68 4 241 2 
298 1 205 1 344 2 157 1 4 1 79 1 185 1 8 1 230 1 250 1 163 2 275 1 137 1 330 1 57 3 11 2 90 1 121 2 261 1 284 1 173 1 143 1 176 1 39 1 148 2 100 3 122 1 42 1 381 1 68 1 317 1 150 1 
225 1 106 2 75 2 111 1 208 4 12 1 336 2 338 1 265 2 5 4 276 1 64 1 149 1 231 1 166 2 
378 1 20 1 25 1 
378 1 20 1 25 1 
146 1 187 1 20 1 25 1 262 1 
378 1 20 1 25 1 
236 1 20 1 25 1 
236 1 20 1 25 1 
236 1 20 1 25 1 
20 1 25 1 
159 1 72 1 
200 1 308 1 298 2 120 4 202 3 302 2 205 4 344 4 110 1 173 8 21 1 111 1 290 1 184 1 359 1 99 1 137 2 381 2 317 2 118 1 
200 1 126 1 202 2 120 3 302 2 205 3 110 1 173 6 111 1 290 1 359 1 184 1 99 1 118 1 
298 1 202 2 120 2 191 1 302 1 205 2 344 2 246 1 173 4 21 1 184 1 359 1 113 1 137 1 27 1 381 1 317 1 
120 3 202 2 191 1 302 1 205 4 50 1 173 7 21 1 288 1 78 2 184 1 359 1 113 1 27 1 210 1 
200 2 298 2 202 9 302 5 322 1 205 12 344 4 110 1 109 1 21 4 111 1 78 2 184 3 369 1 113 2 137 2 27 2 118 1 210 1 308 2 120 11 191 2 173 23 288 2 290 2 359 3 99 1 381 2 317 2 
205 1 173 1 78 1 
120 1 173 1 288 1 
298 1 120 3 202 3 191 1 302 2 344 2 205 3 246 1 173 6 21 1 359 1 184 1 360 1 113 1 137 1 27 1 381 1 317 1 
154 1 319 1 298 1 269 1 202 2 302 1 205 6 344 2 21 1 50 1 78 1 184 2 113 2 137 1 27 2 9 1 120 6 191 2 173 12 288 1 34 1 289 1 359 2 381 1 317 1 
200 1 120 3 202 2 302 1 205 3 173 6 21 1 290 1 359 1 184 1 99 1 
200 1 308 1 298 1 120 1 202 2 302 1 205 2 344 2 110 1 21 1 173 3 290 1 369 1 137 1 381 1 317 1 118 1 
200 2 319 1 298 1 202 5 120 5 302 3 344 2 205 5 21 2 173 10 290 2 359 2 184 2 137 1 99 1 381 1 115 1 317 1 
319 1 298 1 120 2 202 1 344 2 173 2 21 1 359 1 137 1 27 1 381 1 317 1 
319 1 298 1 202 2 120 2 191 1 302 1 205 2 344 2 173 4 21 1 184 1 359 1 113 1 137 1 27 1 381 1 317 1 
200 1 308 1 319 1 298 3 202 2 120 1 302 1 205 2 344 6 173 3 21 1 290 1 80 1 369 1 137 3 381 3 317 3 
200 3 319 1 298 5 202 12 302 7 205 18 344 10 110 1 50 1 246 1 21 5 111 1 78 4 367 1 80 1 184 5 369 1 113 3 137 5 27 3 118 1 210 1 374 1 308 2 120 16 191 3 193 1 173 34 288 3 290 3 359 5 99 2 381 5 317 5 
200 1 319 1 298 1 202 2 302 2 205 4 344 2 110 1 50 1 111 1 78 1 184 1 137 1 118 1 120 4 173 8 288 1 34 1 290 1 359 1 99 1 381 1 317 1 
200 1 319 1 298 2 202 3 302 2 205 5 344 4 110 1 50 1 246 1 21 1 111 1 78 2 184 1 137 2 27 1 118 1 210 1 120 6 191 1 173 11 34 1 288 1 290 1 359 2 99 1 381 2 317 2 
200 1 154 1 319 1 298 3 269 1 202 4 302 3 205 10 344 6 110 1 246 1 21 1 50 1 111 1 78 1 184 3 113 2 137 3 27 2 9 1 118 1 308 1 120 9 191 2 173 19 288 1 34 1 290 1 289 1 359 3 99 1 381 3 317 3 
200 1 154 1 319 1 298 3 269 1 202 5 302 3 205 7 344 6 110 1 246 1 21 2 50 1 111 1 78 1 184 2 113 1 137 3 27 2 9 1 118 1 308 1 120 10 191 2 173 17 288 1 34 1 290 1 289 1 359 3 99 1 381 3 317 3 
200 1 319 1 298 1 202 2 302 2 205 4 344 2 110 1 50 1 111 1 78 1 184 1 137 1 118 1 120 4 173 8 288 1 34 1 290 1 359 1 99 1 381 1 317 1 
154 1 319 1 298 1 269 1 202 2 302 1 205 6 344 2 21 1 50 1 78 1 184 2 113 2 137 1 27 2 9 1 120 6 191 2 173 12 288 1 34 1 289 1 359 2 381 1 317 1 
200 1 154 1 319 1 298 4 269 1 202 5 302 3 205 8 344 8 110 1 21 2 50 1 246 1 111 1 78 1 184 2 113 1 137 4 27 2 9 1 118 1 308 2 120 10 191 2 173 18 34 1 288 1 290 1 289 1 359 3 99 1 381 4 317 4 
154 1 319 1 298 4 269 1 202 6 302 3 205 7 344 8 21 3 50 1 78 1 80 1 184 2 113 2 137 4 27 3 9 1 308 2 120 9 191 3 173 16 34 1 288 1 289 1 359 3 381 4 317 4 
200 3 202 6 120 3 302 3 205 4 110 2 173 7 21 3 290 3 184 1 359 1 99 1 118 1 
200 1 154 1 319 1 298 4 269 1 202 4 302 3 205 8 344 8 110 1 21 1 50 1 111 1 78 1 80 1 184 2 113 1 137 4 27 2 9 1 118 1 308 2 120 10 191 2 173 18 34 1 288 1 290 1 289 1 359 3 99 1 381 4 317 4 
257 1 57 1 11 1 333 1 100 1 172 1 122 1 
56 1 257 1 87 1 57 1 11 1 333 1 172 1 304 1 251 1 100 1 122 1 151 1 
126 1 185 1 176 1 250 1 230 1 222 1 261 1 183 1 42 1 68 1 157 1 
57 2 355 1 11 1 121 1 261 1 284 1 157 1 79 1 176 1 185 1 39 1 250 1 230 1 163 1 100 2 122 1 42 1 68 1 
131 1 303 1 157 1 79 1 366 1 185 1 305 1 230 2 250 3 371 1 163 1 57 2 11 2 355 1 121 2 261 1 284 1 39 2 40 1 100 2 122 1 42 1 68 1 
129 1 131 1 303 1 157 1 79 1 366 1 185 2 305 1 230 2 250 3 371 1 163 1 57 2 11 2 355 1 121 2 261 1 63 1 39 2 40 1 100 2 122 1 42 2 68 2 
131 1 303 1 157 1 4 1 81 1 5 1 351 1 185 1 250 4 371 1 230 1 163 1 277 1 166 1 256 1 57 1 11 1 32 1 171 2 121 1 261 1 263 1 39 1 40 1 148 1 100 1 17 1 42 1 123 2 199 1 68 1 224 1 
323 1 131 1 303 1 157 1 4 1 81 1 5 1 351 1 185 1 250 4 371 1 230 1 163 1 166 1 256 1 57 1 11 1 32 1 171 2 121 1 261 1 263 1 39 1 40 1 148 1 100 1 17 1 42 1 123 2 68 1 224 1 
185 1 261 1 42 1 68 1 157 1 332 1 
86 1 88 1 178 1 45 1 216 1 324 1 261 2 287 1 157 3 347 1 6 1 176 2 185 7 54 1 39 1 230 2 250 3 341 1 42 7 68 6 332 1 
200 1 45 1 201 1 298 2 128 1 202 2 302 2 363 1 205 3 344 4 110 1 111 1 157 1 79 1 184 1 185 1 250 1 230 1 137 2 163 1 275 1 118 1 330 2 57 2 11 1 355 1 90 2 120 3 121 1 261 1 356 1 284 1 173 6 93 1 290 1 359 1 39 1 221 1 99 1 100 2 380 1 122 2 42 1 381 2 68 1 317 2 150 1 
200 1 203 1 4 1 349 2 5 2 351 1 250 2 163 1 115 1 307 1 166 2 256 2 57 1 11 1 171 3 121 1 263 1 12 2 359 2 314 1 176 1 123 3 17 1 68 1 224 1 225 2 127 1 323 1 75 5 132 1 133 1 81 1 184 2 185 1 370 1 276 4 375 1 32 1 290 1 338 2 40 1 148 1 99 1 100 1 42 1 149 2 241 1 
88 1 45 1 261 1 157 2 185 2 39 1 230 1 250 2 294 1 42 2 68 2 224 1 332 1 
45 1 213 1 183 1 261 1 157 1 63 1 176 1 185 4 230 1 250 1 222 1 42 4 68 4 
46 1 216 1 283 1 261 1 303 1 157 2 185 2 54 1 39 1 230 1 250 1 114 1 42 2 68 2 
326 1 278 1 185 1 176 1 353 1 261 1 42 1 61 1 68 1 157 1 
348 1 45 1 185 2 250 1 230 1 261 1 341 1 324 1 42 2 68 2 157 1 
45 1 178 1 213 1 183 1 261 2 303 1 287 1 157 2 176 1 185 5 230 2 250 3 222 1 341 1 42 5 68 4 
45 1 178 1 213 1 183 1 261 2 303 1 157 2 264 1 176 1 185 5 230 2 250 3 222 1 341 1 42 5 68 4 
57 2 355 1 11 1 121 1 129 1 261 1 157 1 79 1 176 1 185 1 39 1 250 1 230 1 163 1 100 2 122 1 42 1 68 1 
88 1 216 1 261 1 303 1 157 2 347 1 185 1 54 1 39 1 230 1 250 1 42 1 68 1 
94 1 227 1 122 1 325 1 77 1 
227 1 127 1 325 1 77 1 4 1 366 1 81 1 5 1 351 1 305 1 162 1 163 1 166 1 57 1 11 1 190 1 29 1 215 1 32 1 171 2 121 1 311 1 94 1 148 1 40 2 100 1 123 2 17 1 
105 1 57 1 227 1 11 1 49 1 325 1 77 1 209 1 100 1 
29 1 162 1 325 1 
312 1 126 1 33 1 252 1 
312 1 273 1 258 1 33 1 310 1 252 1 175 1 
70 1 96 1 310 1 
234 1 258 1 33 1 310 3 156 1 35 1 175 3 312 1 337 2 273 1 252 1 329 1 
312 1 273 1 258 1 33 1 321 1 310 2 252 1 66 1 175 2 
258 1 281 1 310 1 61 1 175 1 326 1 218 1 273 1 368 1 329 1 252 1 
273 1 258 1 33 1 310 1 252 1 329 1 175 1 
312 1 273 1 258 1 33 2 310 1 329 1 175 1 
258 2 179 1 33 1 310 2 175 2 134 1 273 2 136 1 252 1 329 1 
104 1 258 1 33 1 310 3 321 2 175 3 158 1 312 1 218 1 273 1 329 1 252 2 316 1 
278 1 258 1 281 1 33 1 310 2 321 1 61 2 335 1 175 2 312 1 326 1 273 1 340 1 252 1 329 1 
258 2 33 1 300 1 310 4 321 2 175 4 158 1 312 1 218 1 273 2 329 1 252 2 66 1 
312 1 273 1 258 1 33 1 310 1 252 1 329 1 175 1 
55 1 234 1 258 1 33 2 321 2 310 4 156 1 175 4 158 1 312 2 337 1 218 1 273 1 252 3 
258 1 228 1 33 1 310 2 321 1 175 2 312 1 273 1 83 1 252 1 329 1 102 1 
234 2 258 1 33 1 310 3 156 1 175 3 312 1 337 2 273 1 252 1 329 1 315 1 
44 1 252 2 48 2 67 1 
273 1 258 1 74 1 310 1 329 1 175 1 
312 1 104 1 273 1 258 1 33 1 321 1 310 2 252 1 329 1 175 2 
229 1 
312 1 273 1 258 1 33 1 310 1 252 1 329 1 175 1 
104 1 258 1 33 1 321 1 310 3 175 3 312 1 337 1 273 1 329 1 252 1 
55 1 158 1 218 1 252 1 
33 1 252 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 5 162 1 290 1 1 2 50 1 332 1 359 1 7 2 149 1 99 4 53 9 34 1 271 2 250 1 202 2 79 1 37 2 340 2 176 1 371 1 207 1 299 6 346 1 210 3 379 1 136 1 157 2 287 9 
114 5 162 1 290 1 1 2 50 1 332 1 359 1 7 2 149 1 99 4 53 9 34 1 271 2 250 1 202 2 79 1 37 2 340 2 176 1 371 1 207 1 299 6 346 1 210 3 379 1 136 1 157 2 287 9 
114 6 162 1 290 1 1 2 50 1 332 1 359 1 7 2 149 1 99 5 53 10 34 1 271 2 250 1 202 2 79 1 37 2 340 2 176 1 371 1 207 1 299 7 346 1 210 4 379 1 136 1 157 2 287 10 
114 4 162 1 290 1 1 2 50 1 332 1 359 1 7 1 99 3 53 7 34 1 271 2 250 1 202 2 79 1 37 2 340 2 176 1 371 1 207 1 299 4 346 1 210 2 379 1 136 1 157 2 287 7 
114 3 37 1 162 1 1 1 340 1 176 1 371 1 299 3 7 2 149 1 99 2 53 4 346 1 210 1 271 1 379 1 157 1 287 4 
114 1 10 1 228 1 163 1 1 1 340 1 176 1 207 1 50 1 53 2 346 1 271 1 202 1 379 1 157 1 287 2 
114 2 1 2 176 1 299 1 99 1 53 3 346 1 210 1 271 2 250 1 202 1 379 1 287 3 
303 1 114 5 162 1 1 2 332 1 7 2 99 4 149 1 53 9 54 1 271 2 250 1 202 1 79 1 37 1 340 1 176 1 371 1 299 7 346 1 210 3 379 1 157 1 287 9 
303 1 114 5 162 1 1 2 332 1 7 2 99 4 149 1 53 9 54 1 271 2 250 1 202 1 79 1 37 1 340 1 176 1 371 1 299 7 346 1 210 3 379 1 157 1 287 9 
235 1 0 1 23 1 
307 1 44 2 0 1 
177 2 106 2 159 1 310 2 200 1 318 2 297 2 82 2 
159 1 68 1 91 1 138 1 115 1 188 1 352 1 94 2 265 1 166 1 310 2 220 1 49 1 222 2 200 1 360 1 297 3 36 1 170 1 171 1 314 1 318 2 18 1 154 1 82 3 341 1 370 2 177 2 106 2 108 1 155 1 21 1 88 2 322 1 65 1 378 1 240 2 
177 1 106 1 159 1 310 1 318 1 28 1 297 1 9 1 66 1 82 1 
90 1 161 1 318 1 0 1 16 1 28 1 230 1 194 1 82 1 235 1 3 1 297 1 89 1 185 1 
90 1 161 1 318 1 0 1 16 1 28 1 230 1 194 2 82 1 106 1 177 1 235 1 310 1 3 2 297 1 
25 1 3 1 338 1 104 1 194 1 
235 1 3 2 344 1 338 1 0 1 104 1 194 2 158 1 
3 1 104 1 194 1 
159 1 338 1 318 1 28 1 194 1 82 1 106 1 177 1 3 1 310 1 282 1 297 1 9 1 66 1 
0 1 
235 1 3 2 338 1 0 1 33 1 104 1 194 2 158 1 
362 2 27 1 338 2 0 1 364 1 194 5 215 1 104 2 231 1 234 2 109 1 235 1 3 5 167 2 63 1 76 1 8 1 113 1 158 1 
128 2 204 1 213 1 318 5 174 1 82 5 177 4 106 1 247 1 310 4 200 1 297 5 89 1 241 1 
177 2 310 2 318 2 117 1 28 1 297 2 66 1 82 2 
200 1 23 1 
92 1 318 2 82 2 106 1 177 1 310 1 200 2 297 2 241 1 
219 1 80 1 268 1 
188 1 154 1 82 1 341 1 370 1 166 1 309 1 108 1 155 1 200 1 297 1 21 1 88 1 65 1 240 1 171 1 
128 1 188 1 204 1 318 1 154 1 82 2 341 1 370 1 166 1 177 1 108 1 219 1 310 1 155 1 21 1 297 2 88 1 65 1 240 1 171 1 
106 1 177 3 128 1 310 3 200 1 318 3 297 3 82 3 
177 1 310 1 318 1 28 1 297 1 66 1 82 1 
177 1 106 1 310 1 92 1 318 1 28 1 297 1 82 1 241 1 
90 1 159 1 91 1 115 1 188 1 161 1 352 1 28 1 94 1 194 1 265 1 292 1 166 1 310 3 3 1 220 1 49 1 222 2 200 1 360 1 297 4 171 1 314 1 128 1 56 1 204 1 318 3 16 1 230 1 18 1 154 1 82 4 341 1 370 1 106 2 177 3 108 1 155 1 21 1 88 1 65 1 322 1 240 1 241 1 
177 1 310 1 128 1 200 1 213 1 318 2 297 2 89 1 82 2 
90 1 128 2 161 1 204 1 56 1 318 3 0 1 16 1 28 1 230 1 194 1 82 3 106 1 177 3 3 1 310 3 297 3 285 1 241 1 
128 1 318 2 82 2 106 1 177 2 310 2 219 1 268 1 297 2 241 1 
188 1 154 1 82 1 341 1 370 1 166 1 108 1 155 1 200 1 297 1 21 1 88 1 65 1 240 1 171 1 
189 1 154 1 82 1 341 1 370 1 166 1 108 1 96 1 155 1 200 1 297 1 21 1 88 1 240 1 171 1 
91 2 160 1 115 1 305 1 94 4 142 1 265 1 219 2 220 1 221 1 198 1 222 2 268 2 360 1 36 2 252 1 314 1 80 2 173 1 278 1 367 1 18 1 376 1 85 1 
177 1 310 1 318 1 117 1 28 1 297 1 230 1 82 1 
12 1 355 1 
12 1 355 1 
181 1 203 1 
181 1 203 1 
181 1 203 1 
12 1 164 1 355 1 
12 1 199 1 355 1 
12 2 51 1 181 1 120 1 203 1 355 2 
12 1 164 1 355 1 
12 1 164 1 355 1 
12 1 110 1 355 1 
12 1 110 1 355 1 
12 1 110 1 355 1 
186 1 71 1 194 1 355 1 308 1 75 1 145 1 310 2 3 1 97 1 199 1 200 1 297 2 101 1 127 1 12 1 38 1 318 2 205 1 339 1 82 2 257 1 177 2 84 1 
186 1 12 2 127 3 363 2 38 2 0 1 205 2 118 1 214 1 326 1 195 1 194 2 355 2 372 1 3 2 51 1 97 2 84 2 5 1 
37 1 340 1 157 1 
163 1 340 1 157 1 
107 1 61 1 37 2 163 1 340 3 83 1 
61 1 37 1 163 1 269 1 340 2 83 1 
61 2 37 1 163 1 340 2 83 1 
159 1 69 1 44 3 0 2 305 1 191 2 28 1 194 5 216 1 121 2 307 1 308 1 310 1 3 5 296 2 123 1 167 1 297 1 9 1 362 1 318 1 338 4 173 1 153 1 104 1 367 1 82 1 177 1 106 1 234 1 109 3 235 1 282 1 237 1 85 1 132 1 63 1 66 1 113 2 158 1 
44 3 0 2 191 2 194 5 3 5 4 2 296 2 331 1 297 1 9 1 338 4 104 3 106 1 109 3 63 1 66 1 158 1 113 2 159 1 25 2 69 1 305 1 28 1 307 1 308 1 310 1 123 1 167 1 223 1 362 1 318 1 173 1 367 1 82 1 177 1 234 1 235 1 282 1 237 1 132 1 85 1 
159 1 44 3 0 2 28 1 305 1 191 2 216 1 194 3 121 1 307 1 308 1 310 1 3 3 123 1 296 2 167 1 297 1 9 1 362 1 318 1 338 2 364 1 173 1 153 1 367 1 82 1 177 1 106 1 234 1 235 1 109 3 282 1 237 1 132 1 85 1 66 1 113 2 
44 7 0 4 191 4 194 4 3 4 296 4 297 1 9 1 338 3 153 1 206 1 106 1 19 1 109 5 66 1 113 4 159 1 28 1 305 2 216 1 121 2 307 3 308 2 310 1 123 2 167 1 362 1 318 1 364 1 173 2 367 2 82 1 234 1 178 1 177 1 235 1 282 1 237 1 85 2 132 1 
108 1 155 1 341 1 
286 1 341 1 
73 1 23 1 341 1 
64 1 341 1 
156 1 
108 1 341 1 
108 1 155 1 333 1 73 2 341 3 2 1 
275 1 91 3 160 2 173 1 94 7 17 1 367 1 47 1 20 1 111 1 376 3 32 1 261 1 183 2 274 1 211 1 36 4 
275 1 91 3 160 2 173 1 94 7 17 1 367 1 47 1 20 1 111 1 376 3 32 1 261 1 183 2 274 1 211 1 36 4 
275 1 91 3 160 2 173 1 94 7 17 1 367 1 47 1 20 1 111 1 376 3 32 1 261 1 183 2 225 1 274 1 211 1 36 4 
242 1 91 15 160 5 305 3 94 31 265 1 165 1 47 2 197 1 123 3 220 1 147 1 222 2 32 2 360 1 270 3 274 2 36 16 275 1 314 1 317 1 173 4 17 1 367 4 131 1 20 2 111 5 376 10 85 3 261 1 238 4 183 3 211 1 288 1 
91 4 160 3 94 9 265 2 47 1 220 2 222 4 32 1 360 2 274 1 36 5 275 1 314 2 173 1 367 1 131 1 209 1 20 1 376 4 111 1 87 1 261 1 183 2 211 1 
114 1 187 1 70 1 163 1 1 1 328 1 53 2 271 1 202 1 102 1 37 1 368 1 154 1 340 2 176 1 175 1 370 1 299 1 107 1 208 1 300 1 301 1 21 1 346 1 88 1 240 1 212 1 379 1 157 1 287 2 
114 1 187 1 70 1 163 1 1 1 328 1 53 3 336 1 271 1 202 1 37 1 368 1 154 1 340 2 175 1 370 1 107 1 299 2 300 1 40 1 301 1 21 1 346 1 88 1 239 1 240 1 212 1 379 1 157 1 287 3 
114 1 187 1 70 1 163 1 328 1 53 2 202 1 37 1 368 1 154 1 340 2 175 1 370 1 299 2 107 1 40 1 21 1 346 1 88 1 239 1 240 1 212 1 379 1 157 1 287 2 
70 2 72 1 325 1 1 1 328 2 53 1 336 1 271 1 77 1 202 2 171 1 255 1 81 1 368 2 154 1 341 1 370 1 108 1 21 1 88 1 377 1 240 1 287 1 
187 1 70 1 37 1 163 1 1 1 154 1 368 1 340 2 175 1 176 1 370 1 107 1 328 1 300 1 301 1 40 1 21 1 53 1 88 1 271 1 212 1 102 1 202 1 240 1 157 1 287 1 
144 1 
243 2 90 1 44 2 325 1 0 2 194 5 291 1 248 1 3 5 98 1 297 1 201 1 254 2 14 2 16 1 104 6 154 1 341 1 108 1 109 2 259 4 63 1 21 1 67 1 158 3 113 2 24 1 161 1 28 1 74 1 354 1 307 2 167 1 312 2 125 1 78 2 126 2 171 2 362 1 172 2 318 1 230 1 319 1 82 1 232 1 370 2 234 1 235 1 237 1 134 1 377 1 88 2 89 1 240 2 185 1 
90 1 24 1 161 1 28 1 74 1 194 3 291 1 354 1 3 3 33 1 125 1 297 1 78 1 318 1 16 1 230 1 104 2 82 1 259 2 89 1 185 1 158 1 
90 1 24 1 161 1 0 1 28 1 74 1 194 3 291 1 354 1 3 3 33 1 125 1 297 1 172 1 318 1 16 1 230 1 104 1 82 1 235 1 259 3 89 1 185 1 158 1 
90 1 24 1 161 1 0 1 28 1 74 1 194 3 291 1 354 1 3 3 33 1 125 1 297 1 78 1 126 1 172 1 318 1 16 1 230 1 104 2 82 1 235 1 259 3 89 1 185 1 158 1 
90 1 243 2 324 1 0 5 245 1 194 5 291 1 3 5 297 1 201 1 253 1 254 2 14 2 16 1 104 7 109 1 259 6 63 1 158 3 113 1 24 1 161 1 28 1 74 1 354 1 307 2 167 1 312 2 33 1 125 1 78 4 126 4 362 1 172 4 318 1 230 1 319 1 82 1 233 1 234 1 280 1 235 5 89 1 185 1 
243 2 90 1 24 1 44 2 161 1 0 2 28 1 74 1 194 4 291 1 354 1 307 2 3 4 167 1 98 1 312 2 125 1 297 1 201 1 78 2 126 2 254 2 362 1 172 2 14 2 318 1 16 1 230 1 104 4 319 1 82 1 234 1 235 1 109 1 259 4 63 1 89 1 185 1 158 2 113 1 
243 2 90 1 24 1 161 1 324 1 0 1 28 1 245 1 74 1 194 4 291 1 354 1 307 2 3 4 167 1 312 2 125 1 297 1 201 1 78 2 126 2 254 2 362 1 172 2 14 2 318 1 16 1 230 1 104 4 319 1 82 1 233 1 234 1 235 1 109 1 259 4 63 1 89 1 185 1 158 2 113 1 
243 2 90 1 24 1 161 1 324 1 0 1 28 1 245 1 74 1 194 4 291 1 354 1 307 2 3 4 167 1 312 2 125 1 297 1 201 1 78 2 126 2 254 2 362 1 172 2 14 2 318 1 16 1 230 1 104 4 319 1 82 1 233 1 234 1 235 1 109 1 259 4 63 1 89 1 185 1 158 2 113 1 
90 1 24 1 44 2 244 1 161 1 0 1 28 1 245 1 74 1 194 4 291 1 354 1 3 4 167 1 312 2 335 2 125 1 168 2 297 1 78 2 151 1 126 2 254 2 362 1 172 2 318 1 16 1 230 1 104 4 319 1 82 1 234 1 235 1 109 1 259 4 63 1 135 1 89 1 185 1 158 2 113 1 
243 2 90 1 24 1 161 1 324 1 0 1 28 1 245 1 74 1 194 4 291 1 354 1 307 2 3 4 167 1 312 2 125 1 297 1 201 1 78 3 126 3 254 2 362 1 253 1 14 2 172 3 318 1 16 1 230 1 104 5 319 1 82 1 233 1 234 1 235 1 109 1 259 5 63 1 89 1 185 1 158 2 113 1 
243 2 90 1 24 1 161 1 324 1 0 1 28 1 245 1 74 1 194 4 291 1 354 1 307 2 3 4 167 1 312 2 125 1 297 1 201 1 78 3 126 3 254 2 362 1 253 1 14 2 172 3 318 1 16 1 230 1 104 5 319 1 82 1 233 1 234 1 235 1 109 1 259 5 63 1 89 1 185 1 158 2 113 1 
90 1 24 1 44 2 161 1 0 1 28 1 74 1 194 4 291 1 354 1 3 4 167 1 98 1 312 2 335 2 125 1 168 2 297 1 78 2 126 2 254 2 362 1 172 2 318 1 16 1 230 1 104 4 319 1 82 1 234 1 235 1 109 1 259 4 63 1 135 1 89 1 185 1 158 2 113 1 
275 1 91 3 160 2 314 1 115 1 80 1 173 1 94 6 142 1 367 1 18 1 265 1 219 1 220 1 20 1 222 2 200 2 376 2 32 1 268 1 261 1 360 1 183 1 23 1 211 1 36 3 
242 1 160 1 91 6 115 1 352 1 305 1 94 14 265 2 267 1 122 1 219 11 220 2 123 2 147 1 124 1 222 4 200 1 268 4 360 2 270 3 170 1 36 8 337 1 314 2 80 11 173 2 18 2 367 1 111 1 376 2 85 2 182 1 238 3 
91 1 115 1 188 1 352 1 94 2 265 1 122 1 166 1 309 1 310 1 146 1 330 1 220 1 222 2 200 1 268 1 297 2 360 1 150 1 170 1 36 1 171 1 314 1 128 1 204 1 318 1 154 1 18 1 82 2 341 1 370 1 177 1 108 1 155 1 21 1 88 1 65 1 240 1 
91 10 140 1 188 2 289 1 94 20 200 2 297 3 204 1 18 3 154 2 341 2 108 2 20 1 155 2 111 4 261 1 21 2 65 2 211 1 160 4 115 3 263 1 352 1 305 2 265 3 122 1 166 2 310 1 219 7 220 3 123 2 222 6 32 1 268 7 360 3 35 2 170 1 36 10 171 1 275 1 314 3 128 1 318 1 80 7 173 3 367 3 369 2 39 2 82 3 370 3 177 1 283 2 376 8 85 2 40 1 88 3 183 1 322 2 240 3 
91 1 115 2 325 1 352 1 94 2 142 1 265 2 310 1 220 2 249 1 222 4 334 1 297 1 360 2 361 1 170 1 36 1 171 2 314 2 128 1 318 1 366 1 130 1 154 2 18 2 82 1 341 3 370 8 177 1 108 2 208 1 375 1 40 1 21 2 41 1 88 7 377 1 240 8 378 2 
160 1 91 2 115 1 305 1 94 3 265 1 122 1 219 1 310 1 220 1 123 1 222 2 268 1 360 1 297 1 36 1 314 1 80 1 318 1 173 1 18 1 367 1 82 1 106 1 177 1 376 1 85 1 133 1 241 1 
314 1 115 1 80 1 173 1 94 2 142 1 278 1 18 1 265 1 219 1 220 1 222 2 376 1 111 1 85 1 268 1 360 1 36 2 
160 1 314 1 91 2 115 1 80 1 305 1 94 2 142 1 18 1 367 1 265 1 219 1 220 1 221 1 222 2 376 1 268 1 360 1 
160 1 91 2 314 1 115 1 80 2 305 1 173 1 94 4 142 1 367 1 18 1 265 1 219 2 220 1 123 1 222 2 376 2 111 1 85 1 268 2 360 1 36 2 
314 1 115 1 80 1 173 1 366 1 94 2 278 1 18 1 265 1 219 1 220 1 222 2 376 1 111 1 85 1 268 1 360 1 36 2 
160 1 314 1 91 2 115 1 80 1 305 1 366 1 94 2 18 1 367 1 265 1 219 1 220 1 221 1 222 2 376 1 268 1 360 1 
160 1 91 2 314 1 115 1 80 2 305 1 173 1 366 1 94 4 367 1 18 1 265 1 219 2 220 1 123 1 222 2 376 2 111 1 85 1 268 2 360 1 36 2 
160 1 91 2 314 1 115 1 80 2 305 1 173 1 94 4 367 1 18 1 265 1 219 2 220 1 123 1 222 2 376 2 111 1 85 1 268 2 360 1 36 2 
91 1 115 1 188 1 352 1 94 2 265 1 166 1 220 1 222 2 200 1 297 1 360 1 36 1 170 1 171 1 314 1 154 1 18 1 82 1 341 1 370 1 108 1 155 1 21 1 88 1 65 1 322 1 240 1 
91 1 115 1 189 1 352 1 94 2 265 1 166 1 96 1 220 1 222 2 200 1 297 1 360 1 36 1 170 1 171 1 314 1 154 1 18 1 82 1 341 1 370 1 108 1 60 1 155 1 21 1 88 1 240 1 
160 1 91 2 314 1 115 1 80 2 305 1 173 1 94 4 367 1 18 1 265 1 122 1 219 2 220 1 123 1 222 2 376 2 111 1 85 1 268 2 360 1 36 2 
160 1 91 2 115 1 188 1 305 1 94 4 265 1 166 1 219 2 220 1 123 1 222 2 268 2 297 1 360 1 36 2 314 1 80 2 173 1 367 1 154 1 369 1 18 1 82 1 341 1 370 1 108 1 208 1 155 1 376 2 111 1 85 1 21 1 88 1 65 1 322 1 240 1 
91 1 304 1 115 1 305 1 94 3 265 1 122 1 310 1 219 1 220 1 123 1 222 2 268 1 360 1 297 1 36 2 314 1 318 1 80 1 173 1 367 1 18 1 82 1 106 1 177 1 376 1 111 1 85 1 241 1 
242 1 137 1 160 3 91 10 350 2 305 3 94 19 95 1 265 2 311 2 329 1 220 2 123 3 147 1 222 4 360 2 270 1 36 9 314 2 315 1 15 1 173 3 367 3 320 1 209 1 111 3 376 6 85 3 238 2 112 1 
242 2 160 2 91 12 350 1 190 1 305 2 94 26 265 3 311 4 329 2 220 3 123 3 222 6 360 3 270 2 100 1 313 1 36 14 314 3 315 1 15 1 173 3 131 2 367 2 320 2 281 1 209 1 111 2 376 4 85 3 238 2 112 1 348 1 347 1 
242 3 160 4 91 21 350 1 190 1 305 4 94 41 95 1 265 3 143 1 311 4 329 1 220 3 123 4 147 1 222 6 32 1 360 3 270 3 100 1 313 1 36 20 275 1 314 3 315 1 15 1 173 5 131 1 367 5 320 2 281 1 209 1 20 1 111 4 376 8 85 4 261 1 238 4 183 1 211 1 112 1 347 1 348 1 
242 3 160 4 91 18 350 1 190 1 305 3 94 38 95 1 265 4 143 1 311 4 329 1 220 4 123 4 147 1 222 8 32 1 360 4 270 3 100 1 313 1 36 20 275 1 314 4 315 1 15 1 173 5 131 2 367 4 320 2 281 1 209 1 20 1 111 3 376 7 85 4 261 1 238 4 183 1 211 1 112 1 347 1 348 1 
242 2 160 7 91 25 350 1 190 1 305 7 94 52 265 2 311 4 329 1 220 2 123 7 147 2 222 4 32 1 360 2 270 4 100 1 313 1 36 27 275 1 337 2 314 2 315 1 15 1 173 8 131 1 367 8 320 1 281 1 209 1 20 1 111 7 376 14 85 7 261 1 238 4 183 1 211 1 112 1 347 1 348 1 
164 1 262 1 
295 1 110 1 120 1 
12 1 51 1 38 1 84 1 97 1 205 1 214 1 326 1 184 1 355 1 
199 1 339 1 
12 1 38 1 84 1 97 1 227 1 205 1 224 1 251 1 355 1 
186 1 12 1 127 2 363 1 38 1 0 1 205 1 214 1 326 1 195 1 194 1 355 1 372 1 3 1 51 1 97 1 84 1 5 1 
186 1 12 1 127 2 363 1 38 1 0 1 205 1 214 1 326 1 195 1 194 1 355 1 372 1 3 1 51 1 97 1 84 1 5 1 
186 1 12 1 127 2 363 1 38 1 0 1 205 1 214 1 326 1 195 1 194 1 355 1 372 1 3 1 51 1 97 1 84 1 5 1 
164 1 120 1 262 1 
164 1 120 1 262 1 
295 1 110 1 
295 1 110 1 120 1 
145 1 101 1 
71 1 194 1 355 1 308 1 75 1 145 1 3 1 310 2 5 1 97 1 199 1 200 1 297 2 101 1 12 1 127 1 363 1 38 1 338 1 318 2 276 1 205 1 339 1 82 2 257 1 177 2 84 1 
91 1 115 1 352 1 306 1 94 2 265 1 122 1 220 1 222 2 297 2 360 1 298 1 361 1 170 1 36 1 314 1 55 1 318 2 130 1 154 1 18 1 82 2 341 1 370 2 108 1 62 1 179 1 21 1 88 2 240 2 378 2 
187 1 37 1 163 1 256 1 154 1 368 1 340 2 196 1 370 2 107 1 208 1 300 1 40 1 260 1 21 1 88 2 240 2 212 1 157 1 
187 1 37 1 163 1 368 1 154 1 340 2 196 1 370 1 107 1 300 1 40 1 21 1 88 1 22 1 240 1 212 1 157 1 
11 1 255 1 325 1 154 1 368 1 341 1 370 1 108 1 260 1 21 1 88 1 377 1 240 1 171 1 
187 1 37 1 163 1 256 1 368 1 154 1 340 2 196 1 370 1 107 1 300 1 40 1 260 1 21 1 88 1 240 1 212 1 157 1 
374 1 
109 1 235 1 0 1 8 1 23 1 231 1 113 1 
243 1 44 1 0 2 194 1 307 1 3 1 167 1 201 1 362 1 14 1 104 1 234 1 109 1 235 1 63 1 113 1 158 1 
44 12 139 2 0 8 191 6 141 1 93 2 194 5 293 1 3 5 296 6 333 1 8 1 13 1 104 5 154 3 342 2 341 10 108 3 208 1 109 9 155 3 63 4 64 3 21 4 158 3 113 8 161 2 349 1 73 2 305 2 353 2 29 2 307 6 123 2 167 4 272 2 171 1 362 4 229 1 129 2 173 2 39 2 367 2 231 1 232 1 370 3 234 4 235 2 237 2 180 2 85 2 88 3 240 3 286 2 
242 1 44 6 139 1 190 1 0 5 191 5 305 2 192 1 46 1 194 1 307 3 3 1 296 5 123 2 167 2 270 1 100 1 362 2 173 2 104 1 367 2 232 1 234 2 281 1 109 8 235 2 237 1 180 2 85 2 63 2 238 1 158 1 113 5 348 1 347 1 
159 1 139 1 324 1 28 1 246 1 194 1 3 1 310 1 167 1 32 1 297 1 9 1 362 1 318 1 173 2 367 1 82 1 234 1 106 1 177 1 109 2 282 1 20 1 180 2 63 1 261 1 66 1 113 2 
362 1 0 1 231 1 234 1 235 1 109 1 167 1 63 1 8 1 113 1 
44 10 139 1 0 5 173 2 191 5 305 2 39 1 367 2 307 5 109 5 123 2 296 5 180 2 85 2 113 5 
235 1 3 1 0 1 194 1 104 1 158 1 
349 2 325 1 141 1 194 3 248 1 3 3 148 1 167 2 171 2 362 2 364 1 104 4 154 1 341 1 370 4 232 2 234 2 258 1 108 1 109 2 237 2 63 1 21 1 88 4 377 1 67 1 240 4 113 2 158 2 
159 1 91 1 115 1 188 1 352 1 94 1 265 1 166 1 310 2 49 1 220 1 222 2 200 1 360 1 297 3 171 1 314 1 318 2 154 1 18 1 82 3 341 1 370 1 177 2 106 2 108 1 155 1 21 1 88 1 322 1 65 1 240 1 
362 1 44 4 0 4 191 2 232 1 307 2 234 1 109 1 235 2 296 2 237 1 167 1 63 1 183 1 113 2 
236 1 38 1 205 1 
343 1 145 1 38 1 205 1 326 1 
236 1 38 1 205 1 
236 1 38 1 205 1 
38 1 31 1 205 1 
38 1 31 1 205 1 
38 1 31 1 205 1 
38 1 205 1 
12 1 355 1 
275 1 91 4 160 2 314 2 173 1 94 8 367 1 131 1 265 2 220 2 20 1 222 4 111 1 376 3 32 1 261 1 360 2 183 1 211 1 36 4 
275 1 91 3 160 2 173 1 94 6 367 1 20 1 376 2 32 1 261 1 183 1 23 1 211 1 36 3 
160 1 91 2 314 1 305 1 173 1 94 4 367 1 265 1 105 1 220 1 123 1 222 2 376 2 111 1 85 1 360 1 36 2 
242 1 160 1 91 4 305 1 173 1 94 7 367 1 123 1 147 1 111 1 376 2 85 1 270 1 238 2 36 3 
91 12 160 5 305 2 94 23 265 2 294 1 123 2 220 2 147 1 222 4 32 2 270 2 360 2 36 11 275 1 337 1 314 2 173 3 367 3 131 2 20 2 376 9 111 4 85 2 261 1 182 1 238 2 183 1 211 1 
91 1 94 1 238 1 
270 1 94 1 36 1 
314 1 91 3 160 2 173 1 305 1 94 6 39 1 367 1 265 1 105 1 220 1 123 1 222 2 111 1 376 3 85 1 360 1 36 3 
242 1 91 6 160 1 190 1 305 2 94 12 265 1 220 1 123 2 222 2 270 1 360 1 100 1 36 6 314 1 173 2 367 2 281 1 209 1 111 1 376 2 85 2 238 1 348 1 347 1 
160 1 91 3 20 1 111 1 376 2 32 1 173 1 261 1 94 6 367 1 36 3 
275 1 160 1 91 2 314 1 94 3 131 1 265 1 294 1 220 1 20 1 222 2 111 1 376 2 32 1 360 1 211 1 36 1 
314 1 160 3 91 5 173 2 94 10 246 1 367 2 265 1 220 1 209 1 20 2 222 2 376 5 111 2 32 2 360 1 261 1 36 5 
314 1 173 1 94 2 265 1 209 1 220 1 222 2 111 1 376 1 85 1 360 1 36 2 
160 1 91 2 314 1 305 1 173 1 94 4 367 1 265 1 209 1 220 1 123 1 222 2 376 2 111 1 85 1 360 1 36 2 
91 2 314 3 160 1 94 3 95 1 131 1 265 3 294 1 209 1 220 3 20 1 222 6 376 2 111 1 32 1 360 3 36 1 
242 1 91 18 160 7 305 3 94 34 95 1 265 5 294 1 165 1 220 5 123 3 147 1 222 10 32 3 360 5 270 3 36 16 275 1 314 5 317 1 173 5 131 2 367 5 105 1 209 1 20 3 111 5 376 12 85 3 261 2 238 4 183 1 211 1 288 1 
275 1 242 1 160 2 314 1 91 4 190 1 173 1 94 8 367 1 265 1 209 1 220 1 20 1 222 2 376 2 32 1 261 1 360 1 270 1 238 1 183 1 211 1 36 4 
242 1 160 2 91 5 190 1 94 11 265 2 220 2 123 1 147 1 222 4 32 1 360 2 270 1 36 6 275 1 314 2 173 2 367 1 105 1 209 1 20 1 111 1 376 3 85 1 261 1 238 2 183 1 211 1 
242 1 91 10 160 3 190 1 305 2 94 19 265 3 220 3 123 2 222 6 32 1 270 1 360 3 100 1 36 9 275 1 314 3 173 3 367 3 131 1 105 1 281 1 209 1 20 1 111 1 376 4 85 2 261 1 238 1 183 1 211 1 348 1 347 1 
242 1 91 7 160 3 190 1 305 1 94 17 265 3 220 3 123 2 222 6 32 1 270 1 360 3 100 1 36 10 275 1 314 3 173 3 131 1 367 2 105 1 281 1 209 1 20 1 111 2 376 5 85 2 261 1 238 1 183 1 211 1 348 1 347 1 
275 1 242 1 160 2 314 1 91 4 190 1 173 1 94 8 367 1 265 1 209 1 220 1 20 1 222 2 376 2 32 1 261 1 360 1 270 1 238 1 183 1 211 1 36 4 
242 1 91 6 160 1 190 1 305 2 94 12 265 1 220 1 123 2 222 2 270 1 360 1 100 1 36 6 314 1 173 2 367 2 281 1 209 1 111 1 376 2 85 2 238 1 348 1 347 1 
242 1 91 8 160 3 190 1 305 1 94 18 265 4 220 4 123 2 222 8 32 1 360 4 270 1 100 1 36 10 275 1 314 4 173 3 367 2 131 2 105 1 281 1 209 1 20 1 111 2 376 5 85 2 261 1 238 1 183 1 211 1 348 1 347 1 
242 1 91 7 160 3 190 1 305 2 94 16 95 1 265 4 220 4 123 3 222 8 360 4 270 1 100 1 36 9 314 4 173 3 367 2 131 2 281 1 209 1 111 3 376 6 85 3 238 1 348 1 347 1 
275 2 91 4 160 3 173 1 94 7 367 1 20 3 376 6 111 3 32 3 261 1 211 1 36 3 
242 1 91 8 160 3 190 1 305 1 94 18 95 1 265 4 220 4 123 2 222 8 32 1 360 4 270 1 100 1 36 10 275 1 314 4 173 3 367 2 131 2 281 1 209 1 20 1 111 1 376 4 85 2 261 1 238 1 183 1 211 1 348 1 347 1 
321 1 200 1 318 1 213 1 297 1 89 1 82 1 
264 1 213 1 318 1 279 1 82 1 356 1 321 1 200 1 86 1 297 1 284 1 89 1 
128 1 318 1 154 1 82 2 341 1 370 1 166 1 177 1 108 1 310 1 96 1 155 1 200 1 21 1 297 2 88 1 240 1 171 1 
152 1 57 1 349 1 154 1 341 1 370 1 108 1 327 1 155 1 333 1 21 2 88 1 240 1 
108 1 325 1 21 1 377 1 88 1 154 1 23 1 240 1 341 1 370 1 171 1 
128 1 188 1 318 1 154 1 82 2 341 1 370 1 166 1 177 1 108 1 310 1 155 1 200 1 21 1 297 2 88 1 240 1 171 1 
90 1 128 1 188 1 349 1 318 2 129 1 28 1 230 1 154 1 82 2 341 3 370 1 166 1 177 2 108 2 310 1 155 2 200 1 21 1 297 2 88 1 286 1 240 1 
90 1 128 1 349 1 318 2 58 1 129 1 28 1 230 1 154 1 82 2 341 3 370 2 166 1 177 2 108 2 310 1 96 1 155 2 200 1 21 1 297 2 88 2 286 1 240 2 
161 1 349 1 73 1 0 1 194 2 357 1 3 2 273 1 171 1 58 1 129 1 104 1 154 1 341 4 370 3 108 1 235 1 155 1 64 1 21 1 88 3 240 3 286 1 
161 1 349 1 58 1 0 1 73 1 129 1 93 1 194 2 104 1 154 1 341 4 370 3 108 1 235 1 3 2 155 1 21 1 64 1 88 3 286 1 240 3 171 1 
249 1 21 1 88 1 154 1 240 1 370 1 
152 1 57 1 154 2 341 3 370 7 108 2 208 1 327 1 249 1 375 1 155 1 333 1 40 1 334 1 21 3 41 1 88 6 378 1 240 7 361 1 171 2 
91 3 160 2 115 2 188 1 306 1 94 6 265 2 122 1 166 1 219 1 310 1 220 2 222 4 200 2 32 1 268 1 297 2 360 2 36 3 275 1 314 2 128 1 80 1 318 1 173 1 367 1 154 1 18 2 369 1 82 2 341 1 370 1 177 1 108 1 208 1 20 1 283 1 155 1 376 2 261 1 21 1 88 1 183 1 322 1 65 1 211 1 240 1 
161 1 0 1 73 1 141 1 353 1 93 1 194 3 29 1 3 3 167 2 8 1 171 1 362 2 338 1 104 2 231 1 342 1 341 2 370 1 234 2 109 1 235 1 63 2 64 1 88 1 240 1 113 1 158 1 
73 1 154 1 293 1 341 2 370 2 108 1 208 1 249 1 155 1 333 1 21 2 88 2 240 2 
43 1 325 1 58 1 154 1 341 1 370 4 108 1 208 1 21 1 88 4 377 1 240 4 171 1 
57 1 349 1 263 1 119 1 154 1 341 1 370 2 108 1 327 1 155 1 21 2 88 2 323 1 240 2 
187 1 163 1 21 1 88 1 154 1 340 1 240 1 157 1 370 1 171 1 
108 1 208 1 55 1 40 1 21 1 88 2 154 1 240 2 341 1 361 1 370 2 
43 1 349 1 325 1 154 2 341 3 370 5 108 2 208 1 375 1 334 1 21 2 377 1 88 4 240 5 361 1 171 1 
103 1 43 1 349 1 325 1 154 2 341 3 370 5 108 2 208 1 334 1 21 2 377 1 88 4 240 5 361 1 171 1 
42 1 218 1 200 1 351 1 52 1 
90 1 42 2 161 1 56 1 338 1 0 1 351 2 16 1 28 1 365 1 230 1 194 2 217 1 266 1 235 1 3 2 218 2 200 1 52 1 
318 1 351 1 82 1 218 1 62 1 179 1 52 1 297 1 298 1 
52 1 365 1 266 1 
114 1 346 1 23 1 379 1 
114 1 1 1 53 1 346 1 271 1 379 1 287 1 
70 1 202 1 287 1 
114 1 1 1 176 1 50 2 6 1 53 3 346 1 271 1 226 1 169 1 379 1 287 3 
114 1 299 1 7 1 1 1 53 2 346 1 271 1 379 1 287 2 
114 1 37 1 162 1 99 1 1 1 53 1 271 1 340 1 157 1 176 1 287 1 
114 1 1 1 53 1 346 1 271 1 176 1 287 1 
1 1 53 1 346 2 271 1 379 1 176 1 287 1 
114 1 316 1 358 1 116 1 1 2 53 2 346 1 271 2 176 1 287 2 
114 2 79 1 1 1 176 1 299 2 332 1 99 1 53 3 346 1 210 1 271 1 379 1 287 3 
114 1 37 1 163 1 1 1 340 2 176 1 107 1 299 1 345 1 53 2 346 1 271 1 379 1 157 1 287 2 
114 2 1 2 176 1 299 2 7 1 149 1 99 1 53 4 346 1 210 1 271 2 379 1 287 4 
114 1 1 1 53 1 346 1 271 1 379 1 176 1 287 1 
114 3 1 1 299 2 30 1 50 1 6 1 99 1 53 4 346 2 210 1 271 1 169 1 379 2 287 4 
114 1 299 1 277 1 1 1 193 1 53 2 346 1 54 1 271 1 379 1 176 1 287 2 
114 1 50 2 26 1 6 2 1 1 53 3 346 1 271 1 169 1 379 1 176 1 287 3 
114 2 48 1 59 1 302 2 
373 1 1 1 53 1 271 1 176 1 287 1 
114 1 299 1 332 1 1 1 53 2 346 1 271 1 379 1 176 1 287 2 
45 1 
114 1 1 1 53 1 346 1 271 1 379 1 176 1 287 1 
114 1 299 1 332 1 50 1 1 1 53 3 346 1 271 1 379 1 176 1 287 3 
114 1 30 1 99 1 210 1 
114 1 346 1 

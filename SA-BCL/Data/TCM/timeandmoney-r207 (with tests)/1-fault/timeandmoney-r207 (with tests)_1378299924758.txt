#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
175 1 17 1 224 2 73 2 263 1 188 1 113 1 179 2 276 3 133 1 361 3 15 1 259 1 
224 2 3 1 263 7 188 1 113 1 370 1 64 1 276 9 249 1 15 3 373 2 175 1 17 1 73 5 352 1 194 1 24 1 234 1 358 1 179 2 133 1 361 9 56 1 259 4 
224 2 3 1 263 7 188 1 113 1 370 1 64 1 276 9 249 1 15 3 373 2 175 1 17 1 73 5 352 1 194 1 24 1 234 1 358 1 179 2 133 1 361 9 56 1 259 4 
224 2 34 1 263 6 188 1 113 1 370 2 64 2 316 1 276 9 249 1 15 3 373 2 319 1 175 2 17 1 352 1 73 5 194 1 195 1 24 1 356 1 285 1 358 1 179 2 133 1 361 9 56 2 259 4 
224 2 34 1 263 6 188 1 113 1 370 2 64 2 316 1 276 9 249 1 15 3 373 2 319 1 175 2 17 1 352 1 73 5 194 1 195 1 24 1 356 1 285 1 358 1 179 2 133 1 361 9 56 2 259 4 
224 2 34 1 263 7 188 1 113 1 370 2 64 2 316 1 276 10 249 1 15 4 373 2 319 1 175 2 17 1 352 1 73 6 194 1 195 1 24 1 356 1 285 1 358 1 179 2 133 1 361 10 56 2 259 5 
224 2 34 1 263 4 188 1 113 1 370 2 64 2 316 1 276 7 249 1 15 2 373 1 319 1 175 2 17 1 73 4 194 1 195 1 24 1 356 1 285 1 358 1 179 2 133 1 361 7 56 2 259 3 
17 1 352 1 224 1 73 3 263 3 194 1 24 1 113 1 370 1 64 1 179 1 276 4 133 1 56 1 361 4 15 1 373 2 259 2 
175 1 17 1 73 1 34 1 224 1 322 1 113 1 306 1 370 1 179 1 54 1 276 2 133 1 361 2 56 1 319 1 
289 1 138 1 291 1 218 1 7 1 75 1 304 1 226 1 325 1 371 1 219 1 43 1 248 1 332 1 
1 1 
228 1 1 1 156 1 219 2 289 1 218 2 30 1 196 1 
1 1 0 1 289 2 218 5 5 1 51 1 253 1 61 1 62 1 345 1 294 2 228 2 156 1 219 5 102 1 30 1 260 2 172 2 122 1 
1 1 156 1 270 1 
164 1 223 2 136 1 367 1 291 1 6 1 7 3 168 1 292 1 244 1 246 1 209 1 189 1 247 1 118 1 90 1 144 1 315 1 43 3 248 2 211 1 93 1 45 1 173 1 191 1 375 2 46 2 231 1 282 1 284 2 75 2 304 2 256 1 310 1 332 2 333 2 240 1 
325 1 43 1 138 1 291 1 248 1 332 1 7 1 75 1 304 1 226 1 
1 1 37 1 82 1 218 1 151 1 7 1 75 1 343 1 325 1 178 1 156 1 219 1 66 1 43 1 
1 1 37 1 218 2 7 1 75 1 304 1 343 1 325 1 178 1 156 1 219 2 66 1 43 1 248 1 332 1 
228 1 35 1 219 1 289 1 218 1 
228 1 115 1 1 1 156 1 219 2 289 1 218 2 30 1 
228 1 219 1 218 1 
1 1 89 1 257 2 
43 2 291 1 248 2 93 1 332 2 7 2 75 2 304 2 
32 1 7 2 75 2 313 1 304 1 43 2 248 1 332 1 93 2 
251 1 299 1 105 1 
374 1 164 1 223 1 7 1 284 1 168 1 292 1 244 1 209 1 118 1 90 1 247 1 43 1 93 1 333 1 240 1 
164 1 223 1 7 2 284 1 168 1 75 1 292 1 304 1 244 1 209 1 247 1 90 1 118 1 43 2 105 1 277 1 332 1 106 1 333 1 240 1 
270 1 93 1 
43 3 248 1 93 1 332 3 7 3 106 1 75 3 304 3 
325 1 43 1 138 1 332 1 7 1 75 1 304 1 
325 1 32 1 43 1 248 1 332 1 7 1 75 1 313 1 304 1 
164 1 223 1 367 1 37 1 291 1 6 1 7 4 168 1 313 1 292 1 343 1 41 1 244 1 246 1 209 1 247 1 90 1 66 1 118 1 144 1 315 1 43 4 248 2 93 1 277 1 45 1 173 1 191 1 375 1 46 2 378 1 231 1 282 1 218 1 284 1 75 3 304 3 325 1 178 1 219 1 332 3 106 1 333 1 240 1 
43 2 151 1 93 1 332 1 7 2 75 2 106 1 304 1 324 1 
1 1 37 1 218 1 7 3 313 1 75 3 304 3 343 1 305 1 41 1 178 1 325 1 219 1 66 1 43 3 248 1 277 1 332 3 106 2 
299 1 7 2 313 1 75 2 304 2 43 2 248 1 332 2 105 1 106 1 
164 1 223 1 7 1 284 1 168 1 292 1 244 1 209 1 118 1 90 1 247 1 43 1 93 1 333 1 240 1 
223 1 7 1 284 1 168 1 355 1 292 1 63 1 244 1 118 1 90 1 247 1 43 1 93 1 333 1 240 1 
136 2 367 1 137 1 264 1 111 1 6 1 87 1 268 1 269 1 119 1 315 1 70 1 45 1 191 2 46 2 375 4 251 2 299 2 231 1 282 1 126 1 354 1 105 2 203 1 
325 1 180 1 43 1 332 1 7 1 75 1 343 1 304 1 
151 1 7 5 75 5 313 1 304 4 324 1 220 1 43 5 248 1 332 4 93 1 277 1 106 2 95 1 
325 1 180 1 43 2 138 1 332 2 7 2 75 2 304 2 
227 2 272 1 28 1 342 2 84 1 362 1 
227 1 4 1 342 1 
227 1 342 1 
227 1 342 1 
227 1 272 1 342 1 362 1 
227 1 272 1 342 1 362 1 
272 1 362 1 
227 1 58 1 342 1 
227 1 58 1 342 1 
227 1 58 1 342 1 
227 1 377 1 342 1 
227 1 377 1 342 1 
227 1 377 1 342 1 
261 1 241 1 81 1 340 1 4 1 342 1 7 2 227 1 267 1 43 2 93 1 71 1 376 1 97 1 281 1 302 1 218 1 353 1 75 2 304 2 219 1 332 2 107 1 204 1 
1 1 81 2 97 2 281 2 302 1 218 2 233 1 342 2 227 2 219 2 183 2 28 1 360 1 160 1 161 1 69 1 221 1 107 2 71 3 
198 1 64 1 54 1 120 2 56 2 
198 1 64 1 230 1 54 1 120 1 56 2 
64 1 56 1 370 1 
54 1 56 1 370 1 
198 1 64 2 54 1 239 1 120 1 56 3 
261 1 1 2 338 2 340 1 289 4 312 2 140 1 368 1 5 3 87 1 294 1 267 1 228 1 89 1 314 2 68 1 172 1 124 1 123 1 321 1 126 1 218 5 127 1 51 2 253 1 354 1 219 5 156 1 257 3 203 1 30 1 260 1 
261 4 35 5 1 5 338 6 289 7 312 6 140 1 5 8 87 3 294 2 8 1 228 6 208 5 89 3 67 1 68 2 372 1 172 2 123 2 321 3 298 1 126 3 218 9 51 6 253 1 354 3 102 1 219 9 156 1 257 9 238 1 29 1 203 3 30 1 260 2 
261 1 1 3 338 2 289 2 312 2 5 3 87 1 294 1 89 2 314 1 68 1 172 1 124 1 123 1 321 1 126 1 218 3 127 1 51 2 354 1 156 1 219 3 102 1 257 4 203 1 260 1 
261 2 1 4 338 4 289 3 312 4 5 5 87 2 294 1 8 1 89 3 314 2 68 1 172 1 124 1 123 1 321 2 298 1 126 2 218 4 127 1 51 4 354 2 156 1 219 4 102 1 257 7 29 1 203 2 260 1 
335 1 
365 1 270 1 292 1 
247 1 292 1 
365 2 18 1 247 1 348 1 292 3 240 1 
247 1 292 1 240 1 
292 1 207 1 
212 1 292 1 
191 3 375 7 176 1 193 1 136 4 98 1 290 1 50 1 111 3 354 1 87 1 42 2 268 2 155 1 91 1 329 1 190 1 162 1 
366 4 136 16 187 3 290 1 110 1 242 1 111 10 167 1 141 1 6 1 87 4 42 3 268 5 91 2 190 2 45 1 191 15 46 2 375 31 321 3 176 5 231 1 282 1 98 2 126 3 50 1 354 4 155 2 131 1 329 1 132 1 203 3 162 1 31 1 
191 4 375 9 46 4 176 1 136 5 290 1 98 1 282 2 231 2 50 1 167 1 111 4 6 2 354 1 87 1 42 2 268 3 155 1 91 1 329 1 308 1 190 1 78 1 45 2 
191 3 375 7 176 1 136 4 98 1 290 1 50 1 111 3 354 1 87 1 42 2 268 2 155 1 91 1 329 1 190 1 162 1 
191 3 375 7 176 1 136 4 98 1 290 1 50 1 111 3 354 1 87 1 42 2 268 2 155 1 91 1 329 1 190 1 162 1 
57 1 175 2 223 1 148 1 149 1 224 1 341 2 284 1 99 1 168 1 292 1 344 1 76 2 244 1 27 1 179 1 247 1 118 1 181 2 276 1 361 1 333 1 108 1 
80 1 223 1 109 1 224 1 262 1 139 1 341 1 168 1 370 1 244 1 64 1 171 1 276 1 175 1 17 1 284 1 76 1 154 1 179 1 181 1 182 1 54 1 239 1 361 1 56 2 333 1 
80 1 223 1 109 1 224 1 262 1 263 1 139 1 341 1 168 1 113 1 370 1 244 1 64 1 171 1 276 2 175 1 17 1 73 1 379 1 284 1 76 1 179 1 181 1 182 1 54 1 239 1 133 1 361 2 56 2 333 1 
223 1 109 1 224 1 262 1 263 2 139 1 341 1 168 1 113 1 370 1 244 1 64 1 171 1 276 3 175 1 73 1 149 1 284 1 76 1 154 1 179 1 181 1 182 1 54 1 239 1 133 1 361 3 56 2 333 1 135 1 
223 1 109 1 262 1 263 2 341 1 168 1 113 1 370 1 244 1 64 1 171 1 276 2 175 1 73 1 284 1 76 1 154 1 181 1 54 1 239 1 133 1 361 2 56 2 333 1 135 1 
10 1 
1 1 37 1 206 1 82 1 5 1 7 1 225 3 343 1 294 1 88 1 9 1 228 5 89 2 65 2 66 1 12 1 43 1 274 1 349 1 121 1 172 1 147 2 320 1 323 2 218 4 151 1 51 1 253 1 75 1 52 1 325 1 178 1 77 3 326 3 357 1 156 1 219 4 158 2 307 1 202 5 30 2 260 1 
1 1 37 1 206 1 82 1 5 1 7 1 225 3 343 1 294 1 88 1 9 1 228 5 89 2 65 2 66 1 12 1 43 1 274 1 349 1 121 1 172 1 147 2 320 1 323 2 218 4 151 1 51 1 253 1 75 1 325 1 178 1 77 3 326 3 52 1 357 1 156 1 219 4 158 2 307 1 202 5 30 2 260 1 
1 1 37 1 82 1 5 1 7 1 225 2 343 1 294 1 88 1 228 4 9 1 66 1 11 2 43 1 274 1 121 1 172 1 297 2 147 2 74 1 218 4 151 1 51 1 253 1 75 1 326 2 77 2 325 1 178 1 357 1 156 1 219 4 158 2 307 1 257 2 202 4 30 2 260 1 163 1 
1 2 5 2 7 1 168 1 292 1 343 1 344 1 294 1 244 1 9 1 65 2 247 1 118 2 66 1 12 1 121 1 172 1 123 1 21 1 218 5 253 1 75 1 128 1 77 2 178 1 357 1 27 1 219 5 307 1 257 2 30 3 260 1 223 2 37 1 82 1 225 2 40 1 88 1 228 6 89 2 43 1 273 1 274 1 147 2 323 2 151 1 51 2 284 2 326 2 325 1 156 1 158 2 202 4 333 2 163 1 
37 1 218 3 82 1 151 1 7 1 196 1 75 1 343 1 326 1 178 1 325 1 357 1 88 1 228 2 219 3 66 1 307 1 43 1 274 1 202 2 30 1 121 1 
1 1 37 1 218 3 82 1 151 1 7 1 196 1 225 1 75 1 343 1 178 1 325 1 357 1 88 1 228 1 156 1 219 3 66 1 307 1 43 1 274 1 202 3 30 1 121 1 
1 1 37 1 82 1 7 1 225 1 343 1 88 1 228 2 66 1 43 1 274 1 121 1 218 3 151 1 196 1 75 1 325 1 178 1 77 1 326 1 357 1 219 3 156 1 307 1 202 3 30 1 
1 5 206 1 5 1 7 1 343 1 294 1 9 1 66 1 65 2 12 1 121 1 349 1 213 1 172 1 218 5 253 1 75 1 77 4 178 1 357 1 219 5 307 1 30 3 260 1 37 1 82 1 225 4 88 1 228 7 89 2 43 1 274 1 147 2 320 1 323 2 151 1 51 1 196 1 326 4 325 1 52 1 156 5 158 2 202 6 
1 2 5 1 7 1 343 1 294 1 9 1 66 1 65 2 12 1 121 1 172 1 218 4 253 1 75 1 178 1 77 2 357 1 219 4 307 1 257 2 30 2 260 1 37 1 82 1 225 2 88 1 228 4 89 2 43 1 274 1 147 2 323 2 151 1 51 1 325 1 326 2 156 1 158 2 202 4 163 1 
1 1 37 1 82 1 5 1 7 1 225 2 343 1 294 1 88 1 228 4 9 1 89 2 65 2 66 1 12 1 43 1 274 1 349 1 121 1 172 1 147 2 320 1 323 2 218 4 151 1 51 1 253 1 75 1 326 2 77 2 325 1 178 1 52 1 357 1 156 1 219 4 158 2 307 1 202 4 30 2 260 1 
1 1 37 1 82 1 5 1 7 1 225 2 343 1 294 1 88 1 228 4 9 1 89 2 65 2 66 1 12 1 43 1 274 1 349 1 121 1 172 1 147 2 320 1 323 2 218 4 151 1 51 1 253 1 75 1 326 2 77 2 325 1 178 1 52 1 357 1 156 1 219 4 158 2 307 1 202 4 30 2 260 1 
1 1 37 1 82 1 5 1 7 1 225 2 343 1 294 1 88 1 228 4 9 1 66 1 11 2 43 1 274 1 349 1 121 1 172 1 297 2 147 2 74 1 218 4 151 1 51 1 253 1 75 1 326 2 77 2 325 1 178 1 357 1 156 1 219 4 157 1 158 2 307 1 257 2 202 4 30 2 186 1 260 1 
223 8 367 2 136 1 39 1 7 1 6 2 168 2 292 3 344 1 244 2 118 2 247 2 43 1 315 2 144 1 347 1 211 2 13 1 44 1 70 1 45 2 191 1 46 4 375 2 231 2 282 2 379 1 284 8 283 1 75 1 304 1 154 1 199 1 27 1 237 1 310 1 332 1 106 1 333 7 
367 1 136 1 111 1 6 1 7 1 313 1 87 1 268 1 315 1 43 1 248 1 45 1 191 2 46 2 375 3 251 1 321 1 125 1 299 1 231 1 282 1 126 1 75 1 354 1 304 1 309 1 105 1 332 1 203 1 
367 1 136 3 290 1 111 2 6 1 87 1 42 1 268 2 270 1 91 1 315 1 93 2 70 1 45 1 191 3 46 2 375 6 251 1 299 1 231 1 282 1 50 1 354 1 155 1 329 1 105 1 
366 3 367 1 136 8 36 1 187 3 110 1 111 2 141 1 6 2 87 1 268 1 144 1 315 2 93 1 45 2 191 6 46 4 375 14 176 1 215 1 251 11 321 2 125 1 299 4 231 2 282 2 126 2 354 2 129 1 380 1 310 1 105 11 203 1 
164 1 223 1 367 1 136 1 59 1 265 1 7 2 6 1 168 1 292 1 244 1 209 1 247 1 90 1 118 1 315 1 43 2 144 1 93 1 277 1 45 1 374 1 191 1 46 2 375 2 125 1 299 1 282 1 231 1 284 1 75 1 304 1 359 1 310 1 332 1 333 1 106 1 240 1 
164 2 290 1 111 8 6 3 7 3 168 2 292 2 244 2 295 2 209 2 118 1 247 2 173 2 251 7 176 4 20 1 125 1 252 2 299 7 126 2 177 1 75 1 354 3 304 1 310 1 185 1 223 3 364 2 367 3 136 10 87 3 42 1 268 4 91 1 90 2 144 1 43 3 315 3 93 2 277 1 45 3 191 10 46 6 375 20 321 2 231 3 282 3 50 1 284 3 154 1 155 1 328 2 329 1 332 1 105 7 203 2 333 3 106 1 240 2 
375 2 46 2 176 1 251 1 367 1 136 2 299 1 282 1 231 1 126 1 111 1 6 1 354 1 119 1 315 1 105 1 70 1 45 1 
191 2 375 2 46 2 251 1 367 1 299 1 137 1 282 1 231 1 111 1 6 1 87 1 268 1 315 1 105 1 203 1 70 1 45 1 
136 2 367 1 111 2 6 1 87 1 268 1 315 1 70 1 45 1 191 2 46 2 375 4 321 1 251 2 176 1 299 2 126 1 231 1 282 1 354 1 105 2 203 1 
375 2 46 2 176 1 251 1 367 1 136 2 299 1 282 1 231 1 126 1 111 1 283 1 6 1 354 1 119 1 315 1 105 1 45 1 
191 2 375 2 46 2 251 1 367 1 299 1 137 1 282 1 231 1 111 1 283 1 6 1 87 1 268 1 315 1 105 1 203 1 45 1 
136 2 367 1 111 2 6 1 87 1 268 1 315 1 45 1 191 2 46 2 375 4 321 1 251 2 176 1 299 2 126 1 231 1 282 1 283 1 354 1 105 2 203 1 
191 2 46 2 375 4 176 1 251 2 321 1 367 1 136 2 299 2 282 1 231 1 126 1 111 2 6 1 354 1 87 1 268 1 315 1 105 2 203 1 45 1 
164 1 223 1 136 1 367 1 7 1 6 1 168 1 292 1 244 1 209 1 247 1 90 1 118 1 43 1 315 1 144 1 93 1 45 1 173 1 191 1 375 2 46 2 282 1 231 1 284 1 310 1 333 1 240 1 
223 1 136 1 367 1 7 1 6 1 168 1 292 1 244 1 63 1 247 1 90 1 118 1 43 1 315 1 144 1 93 1 45 1 250 1 191 1 375 2 46 2 282 1 231 1 284 1 355 1 310 1 333 1 240 1 
136 2 367 1 111 2 6 1 87 1 268 1 315 1 45 1 191 2 46 2 375 4 321 1 251 2 176 1 125 1 299 2 126 1 231 1 282 1 354 1 105 2 203 1 
164 1 223 1 136 2 367 1 111 2 7 1 6 1 168 1 292 1 87 1 244 1 268 1 209 1 90 1 247 1 43 1 315 1 45 1 173 1 191 2 375 4 46 2 176 1 251 2 321 1 299 2 126 1 282 1 231 1 379 1 284 1 354 1 328 1 105 2 203 1 333 1 240 1 
367 1 136 2 111 1 6 1 7 1 313 1 87 1 315 1 43 1 248 1 45 1 191 1 174 1 46 2 375 3 176 1 321 1 251 1 125 1 299 1 231 1 282 1 126 1 75 1 354 1 304 1 332 1 105 1 203 1 
366 2 136 9 187 1 110 1 243 1 111 6 141 1 6 2 293 1 87 3 268 3 275 1 229 1 45 2 350 1 191 10 46 4 375 19 321 3 176 3 231 2 282 2 126 3 354 3 130 1 53 1 103 2 308 1 55 2 203 3 
366 2 136 14 187 2 167 2 111 4 141 2 6 3 293 2 87 2 268 2 229 1 14 1 45 3 350 2 191 12 46 6 375 26 176 2 321 3 231 3 282 3 126 3 232 1 354 3 25 1 26 1 130 1 103 1 53 1 308 1 286 1 55 4 134 1 203 2 
110 1 290 1 111 8 167 1 6 3 293 1 14 1 350 2 176 4 126 4 354 5 25 1 26 1 130 1 308 1 134 1 366 4 136 20 187 3 141 3 87 5 42 1 268 4 91 1 275 1 229 1 45 3 191 21 375 41 46 6 321 4 282 3 231 3 50 1 232 1 197 1 155 1 329 1 53 1 103 1 55 4 286 1 203 4 
366 4 136 20 187 3 290 1 110 1 167 2 111 7 141 3 6 4 293 1 87 4 42 1 268 4 91 1 275 1 14 1 229 1 45 4 350 2 191 18 46 8 375 38 321 4 176 3 231 4 282 4 126 4 50 1 232 1 197 1 354 5 25 1 26 1 155 1 130 1 103 1 53 1 329 1 308 1 286 1 55 4 134 1 203 3 
366 4 136 27 187 4 290 1 110 2 167 1 111 14 141 2 6 2 293 1 87 8 42 1 268 7 91 1 14 1 229 1 45 2 350 1 191 25 46 4 375 52 321 7 176 7 231 2 282 2 126 7 50 1 232 1 354 8 25 1 26 1 129 2 155 1 130 1 103 1 53 1 329 1 308 1 286 1 55 4 134 1 203 7 
227 1 97 1 81 1 143 1 28 1 281 1 161 1 342 1 69 1 107 1 
4 1 204 1 
72 1 227 1 255 1 97 1 81 1 281 1 166 1 342 1 107 1 
301 1 58 1 
377 1 300 1 84 1 
1 1 81 1 97 1 302 1 281 1 218 1 233 1 342 1 227 1 219 1 183 1 28 1 360 1 161 1 69 1 221 1 107 1 71 2 
1 1 81 1 97 1 302 1 281 1 218 1 233 1 342 1 227 1 219 1 183 1 28 1 360 1 161 1 69 1 221 1 107 1 71 2 
1 1 81 1 97 1 302 1 281 1 218 1 233 1 342 1 227 1 219 1 183 1 28 1 360 1 161 1 69 1 221 1 107 1 71 2 
301 1 58 1 84 1 
301 1 58 1 84 1 
377 1 300 1 
377 1 300 1 84 1 
376 1 241 1 
261 1 205 1 241 1 81 1 340 1 289 1 4 1 7 2 342 1 227 1 267 1 43 2 93 1 71 1 376 1 97 1 281 1 218 1 353 1 75 2 304 2 219 1 183 1 360 1 332 2 107 1 204 1 
223 2 367 1 136 1 7 2 6 1 168 1 292 1 244 1 247 1 315 1 43 2 144 1 211 2 318 1 45 1 351 1 191 1 46 2 375 2 125 1 96 1 217 1 282 1 231 1 284 2 75 2 199 1 237 1 310 1 333 2 222 1 
57 1 223 1 341 1 284 1 168 1 292 1 344 1 244 1 27 1 247 1 118 1 184 1 145 1 333 1 
223 1 262 1 139 1 341 1 284 1 168 1 370 1 244 1 245 1 64 1 154 1 171 1 54 1 239 1 56 2 145 1 311 1 333 1 
223 2 262 1 379 1 139 1 341 1 284 2 168 1 370 1 244 1 245 1 64 1 154 1 171 1 54 1 239 1 56 2 145 1 311 1 333 2 
223 1 262 1 139 1 341 1 284 1 168 1 100 1 370 1 244 1 245 1 64 1 154 1 171 1 54 1 239 1 56 2 333 1 
22 1 
1 1 51 1 5 1 253 1 61 1 345 1 294 1 156 1 260 1 172 1 
364 1 321 2 1 5 338 5 126 2 312 5 23 1 51 5 5 5 354 2 87 2 101 2 89 5 257 10 203 2 
228 1 1 1 156 1 219 1 218 1 30 1 
223 4 5 2 168 1 40 1 292 1 344 1 244 1 294 2 228 4 247 1 118 2 92 1 273 2 172 2 123 2 21 1 218 3 51 2 253 1 284 4 303 2 235 1 27 1 102 1 219 3 200 1 30 2 260 2 333 4 
345 1 1 1 156 1 270 1 5 1 51 1 61 1 
1 2 5 1 294 1 228 1 89 1 65 1 12 1 172 1 323 1 218 1 51 1 253 1 219 1 156 1 257 1 30 1 260 1 
334 1 1 8 338 6 165 2 5 9 61 1 168 4 292 10 207 2 345 1 244 3 294 4 247 3 118 1 212 3 172 4 123 2 18 1 126 2 218 5 23 2 253 4 354 2 303 1 178 2 219 5 257 12 30 3 260 4 363 2 223 3 365 2 364 2 312 6 83 2 87 2 228 5 89 6 273 1 146 2 321 2 150 1 379 1 49 2 51 8 284 3 101 2 156 2 327 2 200 1 381 1 203 2 333 3 240 3 
366 1 1 5 338 5 187 1 312 5 5 8 141 1 87 2 294 2 228 1 89 3 273 1 14 1 172 2 123 1 214 1 321 2 126 2 23 1 218 1 51 5 232 1 253 2 354 2 25 1 26 1 101 2 219 1 156 2 286 1 201 1 257 6 30 1 203 2 260 2 
138 1 38 1 291 1 5 2 7 1 87 1 226 1 294 1 371 1 91 1 43 1 248 1 172 1 320 1 23 1 218 1 50 1 51 2 253 1 354 2 75 1 304 1 325 1 101 2 155 1 219 1 332 1 260 1 
164 1 223 1 367 1 291 1 6 1 7 3 168 1 292 1 244 1 246 1 209 1 118 1 90 1 247 1 144 1 43 3 315 1 248 2 93 1 45 1 173 1 191 1 375 1 46 2 231 1 282 1 284 1 75 2 304 2 332 2 333 1 240 1 
123 1 1 4 338 2 312 2 51 2 5 1 253 1 42 1 294 1 89 2 156 2 273 1 257 4 260 1 172 1 
376 1 281 1 159 1 161 1 107 1 
281 1 107 1 153 1 
281 1 107 1 153 1 
281 1 107 1 153 1 
116 1 281 1 107 1 
116 1 281 1 107 1 
116 1 281 1 107 1 
281 1 107 1 
227 1 342 1 
191 5 46 2 375 10 176 2 136 5 231 1 282 1 38 1 111 5 50 1 6 1 354 2 87 2 268 3 155 2 91 2 308 1 45 1 
46 2 375 2 176 1 136 2 282 1 231 1 126 1 111 1 6 1 354 1 308 1 45 1 
191 2 46 2 375 4 321 1 176 1 136 2 282 1 231 1 126 1 111 2 6 1 354 1 87 1 268 1 308 1 203 1 45 1 
191 2 375 3 46 6 176 1 136 1 282 3 231 3 167 1 111 2 6 3 268 1 155 1 91 1 308 1 275 1 79 1 45 3 
366 4 136 16 187 3 290 1 110 1 167 2 111 12 141 1 6 5 87 5 42 1 268 7 91 3 275 1 45 5 191 18 46 10 375 34 321 3 176 5 231 5 282 5 126 3 50 2 354 5 155 3 131 1 329 1 132 1 308 1 331 1 203 3 79 1 31 1 
191 4 375 8 46 4 176 1 136 4 282 2 231 2 290 1 50 1 111 3 167 1 6 2 354 1 87 1 42 1 268 2 155 1 91 1 329 1 45 2 
191 3 375 6 136 3 290 1 111 2 50 1 354 1 87 1 42 1 268 2 155 1 270 1 91 1 329 1 
191 2 46 2 375 4 321 1 176 1 136 2 282 1 231 1 126 1 111 2 6 1 354 1 87 1 268 1 331 1 203 1 45 1 
191 4 375 7 321 1 176 1 366 2 136 3 187 1 110 1 126 1 111 2 141 1 354 1 87 1 268 1 203 1 
366 2 136 11 187 2 290 1 110 1 111 9 167 2 6 2 87 3 42 1 268 5 91 2 45 2 191 12 375 23 46 4 176 4 321 2 215 1 126 2 282 2 231 2 50 1 354 3 129 1 155 2 329 1 203 2 79 1 
191 1 375 1 366 1 
375 1 136 1 187 1 
191 3 46 2 375 6 364 1 321 1 176 1 136 3 231 1 282 1 126 1 111 3 6 1 354 1 87 1 268 2 331 1 203 1 45 1 
366 1 136 6 187 1 111 2 141 1 6 1 87 2 268 1 14 1 45 1 191 6 375 12 46 2 176 1 321 2 231 1 282 1 126 2 232 1 354 2 25 1 26 1 308 1 286 1 203 2 
191 3 375 6 176 1 136 3 50 1 111 2 354 1 87 1 268 1 155 1 91 1 
191 2 375 3 46 2 176 1 136 1 282 1 231 1 290 1 111 2 167 1 6 1 268 1 155 1 91 1 329 1 79 1 45 1 
366 1 136 4 187 1 290 1 111 2 141 1 6 1 87 1 42 1 268 2 91 1 14 1 45 1 191 4 375 8 46 2 231 1 282 1 50 1 354 1 155 1 308 1 329 1 
366 2 136 6 187 1 290 1 110 1 111 3 141 1 6 2 87 1 42 1 268 2 91 1 14 1 45 2 191 5 375 11 46 4 321 1 176 1 231 2 282 2 126 1 50 1 354 2 155 1 329 1 308 1 331 1 
366 1 136 9 187 1 290 1 111 4 167 1 141 1 6 3 87 3 42 1 268 3 91 1 14 1 45 3 191 10 375 19 46 6 176 1 321 2 231 3 282 3 126 2 50 1 232 1 354 3 25 1 26 1 155 1 329 1 308 1 331 1 286 1 203 2 
366 1 136 10 187 1 290 1 167 1 111 5 141 1 6 3 87 2 42 1 268 3 91 1 14 1 45 3 191 7 375 17 46 6 176 2 321 2 231 3 282 3 126 2 50 1 232 1 354 3 25 1 26 1 155 1 329 1 308 1 331 1 286 1 203 1 
366 1 136 4 187 1 290 1 111 2 141 1 6 1 87 1 42 1 268 2 91 1 14 1 45 1 191 4 375 8 46 2 231 1 282 1 50 1 354 1 155 1 308 1 329 1 
366 1 136 6 187 1 111 2 141 1 6 1 87 2 268 1 14 1 45 1 191 6 375 12 46 2 176 1 321 2 231 1 282 1 126 2 232 1 354 2 25 1 26 1 308 1 286 1 203 2 
366 1 136 10 187 1 290 1 111 5 167 2 141 1 6 4 87 2 42 1 268 3 91 1 14 1 45 4 191 8 375 18 46 8 176 2 321 2 231 4 282 4 126 2 50 1 232 1 354 3 25 1 26 1 155 1 329 1 308 1 286 1 331 1 203 1 
366 1 136 9 187 1 111 6 167 2 141 1 6 4 87 2 268 3 275 1 14 1 45 4 191 7 375 16 46 8 176 3 321 3 231 4 282 4 126 3 232 1 354 3 25 1 26 1 308 1 286 1 203 2 
191 4 375 7 176 3 136 3 290 1 111 6 50 1 354 1 87 1 268 3 155 3 91 3 329 2 
366 1 136 10 187 1 290 1 111 4 167 2 141 1 6 4 87 2 42 1 268 3 91 1 275 1 14 1 45 4 191 8 375 18 46 8 176 1 321 2 231 4 282 4 126 2 50 1 232 1 354 3 25 1 26 1 155 1 329 1 308 1 286 1 203 1 
280 1 19 1 48 1 266 1 151 1 7 1 85 1 75 1 324 1 43 1 210 1 93 1 
43 1 48 1 151 1 93 1 7 1 75 1 324 1 
223 4 216 1 379 1 284 4 168 1 292 1 344 1 244 1 27 1 118 1 247 1 278 1 333 4 
223 2 284 2 177 1 168 2 303 1 292 1 346 1 244 1 170 1 247 1 104 1 287 1 333 2 240 1 
244 1 223 1 262 1 118 1 54 1 56 1 284 1 168 1 333 1 370 1 
244 1 199 1 154 1 223 2 247 1 379 1 284 2 168 1 318 1 333 2 292 1 
223 5 216 1 379 1 284 5 168 2 303 1 292 3 344 1 244 2 199 1 27 1 118 1 247 2 347 1 333 4 44 1 
223 5 216 1 379 1 284 5 168 2 303 1 292 3 344 1 169 1 244 2 199 1 27 1 118 1 247 2 333 4 44 1 
244 1 223 1 27 1 270 1 247 1 118 1 284 1 168 1 333 1 292 1 344 1 
164 1 223 1 7 2 284 1 168 1 75 1 292 1 304 1 244 1 247 1 90 1 118 1 43 2 93 1 332 1 106 1 333 1 240 1 
164 1 223 1 7 2 168 1 292 3 343 1 207 1 244 1 90 1 247 2 66 1 43 2 93 1 49 1 284 1 75 2 303 1 304 2 325 1 332 1 333 1 106 1 240 2 
223 2 7 2 168 1 292 3 343 1 207 1 244 1 63 1 90 1 247 2 66 1 43 2 93 1 278 1 49 1 284 2 75 2 303 1 304 2 325 1 332 1 333 2 106 1 240 2 
223 3 365 1 1 1 49 1 218 2 284 3 168 1 207 1 303 1 292 4 178 1 244 1 236 1 228 1 156 1 219 2 118 1 247 1 317 1 212 1 278 1 333 3 240 1 
223 3 365 1 1 1 49 1 218 2 284 3 168 1 207 1 303 1 292 4 178 1 244 1 228 1 156 1 219 2 118 1 247 1 212 1 278 1 333 3 146 1 240 1 
244 1 223 1 13 1 284 1 168 1 333 1 
223 7 18 1 379 1 60 1 39 1 284 7 168 3 292 3 244 2 154 1 199 1 170 1 118 2 247 2 347 1 287 1 211 1 13 1 44 1 333 6 240 1 
164 1 223 1 136 3 367 2 290 1 111 2 7 2 6 2 168 1 292 1 87 1 42 1 244 1 268 2 295 1 209 1 91 1 247 1 90 1 315 2 43 2 93 2 45 2 173 1 191 3 351 1 375 6 46 4 251 1 125 1 299 1 282 2 231 2 379 1 50 1 284 1 354 1 75 1 304 1 155 1 328 1 329 1 105 1 332 1 106 1 333 1 240 1 
363 1 223 1 365 1 1 1 289 1 165 1 5 1 61 1 292 2 345 1 294 2 228 2 118 1 212 1 172 2 146 1 218 3 51 1 284 1 253 2 178 1 156 1 219 3 327 1 200 1 30 1 333 1 260 2 
334 1 223 2 365 1 18 1 379 1 284 2 168 2 292 2 244 1 247 1 13 1 333 2 240 1 
223 1 7 2 284 1 168 1 75 1 292 1 304 1 63 1 244 1 247 1 90 1 118 1 43 2 93 1 332 1 106 1 333 1 240 1 
223 1 18 1 60 1 284 1 168 2 303 1 292 1 244 1 170 1 247 1 287 1 333 1 240 1 
2 1 336 1 271 1 93 1 94 1 
288 1 1 1 336 1 2 2 289 1 37 1 218 2 343 1 41 1 178 1 325 1 254 1 156 1 219 2 66 1 271 2 93 1 94 2 16 1 
336 1 96 1 217 1 7 1 75 1 271 1 43 1 94 1 222 1 
288 1 336 1 16 1 
179 1 17 1 73 1 224 1 276 1 133 1 361 1 113 1 
34 1 337 1 224 1 73 3 263 2 113 2 369 1 179 1 296 1 276 4 133 2 361 4 15 1 259 1 
17 1 73 1 224 1 263 1 47 1 113 1 112 1 234 1 179 1 276 2 361 2 133 1 
33 1 17 1 73 1 224 1 337 2 34 2 113 1 369 1 179 1 276 3 361 3 133 1 
73 2 330 1 258 1 86 2 
179 1 17 1 142 1 224 1 276 1 361 1 
358 1 179 1 17 1 73 1 224 1 263 1 276 2 133 1 361 2 113 1 
192 1 
179 1 17 1 73 1 224 1 276 1 133 1 361 1 113 1 
73 1 270 1 133 1 113 1 
179 1 73 1 224 1 276 1 133 1 361 1 113 1 
175 1 361 1 76 1 
279 1 17 1 73 1 224 1 337 1 34 2 113 1 369 1 179 1 276 3 361 3 133 1 
179 1 73 1 224 1 263 1 276 2 133 1 361 2 373 1 113 1 
17 1 224 1 73 1 194 1 370 1 64 1 179 1 276 1 361 1 56 1 259 1 
179 1 17 1 73 1 224 1 276 1 361 1 113 1 
179 1 17 1 224 1 276 1 133 1 361 1 113 2 
17 1 73 1 224 2 339 1 113 1 114 1 179 2 117 1 276 2 361 2 
17 1 224 1 73 2 263 2 113 1 358 1 179 1 276 3 133 1 361 3 249 1 15 1 259 1 
17 1 73 1 224 1 263 1 152 1 113 1 370 1 64 1 179 1 54 1 276 2 239 1 133 1 56 2 361 2 
17 1 224 2 352 1 73 2 263 2 113 1 179 2 276 4 133 1 361 4 373 1 15 1 259 1 
358 1 179 1 17 1 73 1 34 1 224 1 263 1 276 3 133 1 361 3 113 1 
73 1 296 1 259 1 15 1 
73 1 113 1 

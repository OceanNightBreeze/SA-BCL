#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
347 1 327 1 109 2 306 2 240 1 335 1 174 1 336 1 31 1 32 1 265 4 179 3 38 1 139 1 272 2 64 1 316 2 371 1 123 1 299 2 343 2 214 9 345 6 106 1 346 1 238 9 326 2 303 5 
347 1 327 1 306 2 109 2 240 1 335 1 174 1 336 1 31 1 32 1 265 4 179 3 38 1 139 1 272 2 64 1 316 2 371 1 123 1 299 2 343 2 214 9 345 6 106 1 346 1 238 9 326 2 303 5 
347 1 327 1 306 2 109 2 240 1 335 1 174 1 336 1 31 1 32 1 265 5 179 4 38 1 139 1 272 2 64 1 316 2 371 1 123 1 299 2 343 2 214 10 345 7 106 1 346 1 238 10 326 2 303 6 
327 1 306 2 109 1 240 1 335 1 174 1 336 1 31 1 32 1 265 3 179 2 38 1 139 1 272 2 64 1 316 2 371 1 123 1 299 2 343 2 214 7 345 4 106 1 346 1 238 7 326 2 303 4 
64 1 347 1 316 1 109 2 306 1 123 1 343 1 31 1 32 1 265 2 214 4 345 3 179 1 326 1 238 4 346 1 272 1 303 3 
64 1 316 1 29 1 371 1 299 1 343 1 31 1 32 1 214 2 359 1 139 1 326 1 238 2 287 1 272 1 303 1 
64 1 299 1 31 1 32 1 265 1 214 3 345 1 179 1 38 1 326 2 238 3 272 2 303 2 
347 1 109 2 306 1 240 1 336 1 31 1 265 4 32 1 179 3 38 1 272 2 64 1 316 1 123 1 299 1 343 1 214 9 24 1 345 7 151 1 238 9 326 2 346 1 303 5 
347 1 109 2 306 1 240 1 336 1 31 1 265 4 32 1 179 3 38 1 272 2 64 1 316 1 123 1 299 1 343 1 214 9 24 1 345 7 151 1 238 9 326 2 346 1 303 5 
340 1 130 1 334 1 
264 1 130 1 370 2 
253 2 339 1 331 2 25 2 234 2 67 2 81 2 150 1 
28 1 154 1 259 1 331 2 290 1 353 1 30 1 307 1 333 1 80 1 81 2 83 1 247 2 86 2 337 1 222 1 158 1 203 1 224 1 8 1 116 1 253 3 339 1 278 2 208 1 228 2 67 2 15 1 144 1 125 1 48 1 102 1 25 3 234 2 150 1 288 1 170 2 
339 1 253 1 331 1 330 1 67 1 81 1 111 1 234 1 25 1 204 1 
253 1 130 1 329 1 331 1 260 1 210 1 82 1 334 1 230 1 232 1 111 1 281 1 25 1 377 1 
253 1 130 1 329 1 331 1 260 1 210 1 67 1 81 1 82 2 334 1 232 1 111 1 234 1 25 1 377 2 
295 1 156 1 377 1 82 1 93 1 
130 1 295 1 156 1 229 1 377 2 82 2 334 1 285 1 
295 1 377 1 82 1 
339 1 253 1 330 1 331 1 156 1 67 1 82 1 81 1 2 1 111 1 234 1 25 1 204 1 377 1 
130 1 
367 1 130 1 295 1 156 1 229 1 377 2 82 2 334 1 
276 1 42 1 130 1 219 1 156 2 229 1 82 5 334 1 202 1 97 1 68 2 145 1 103 1 37 2 295 2 377 5 138 1 301 1 39 2 
253 2 278 1 28 1 331 1 353 1 67 1 144 1 48 1 17 1 374 1 86 1 320 1 222 1 102 1 158 1 234 1 25 2 224 1 116 1 170 1 
340 1 150 1 
253 2 331 2 354 1 67 1 81 1 111 1 100 1 25 2 234 1 150 1 73 1 
146 1 17 1 181 1 
253 1 278 1 28 1 353 1 144 1 48 1 86 1 102 1 222 1 158 1 35 1 25 1 224 1 150 1 116 1 170 1 
253 3 331 3 67 3 354 1 81 1 111 1 320 1 234 3 25 3 150 1 
111 1 253 1 330 1 331 1 25 1 234 1 67 1 
253 1 331 1 67 1 81 1 100 1 111 1 234 1 25 1 73 1 
28 1 218 1 154 1 259 1 329 1 331 3 260 1 290 1 353 1 30 1 80 1 81 2 82 1 83 1 247 1 86 1 111 1 358 1 222 1 158 1 203 1 224 1 116 1 253 4 339 1 278 1 208 1 210 1 228 2 67 3 15 1 144 1 48 1 374 1 232 1 100 1 320 1 102 1 25 4 234 3 377 1 150 1 288 1 170 1 
253 2 320 1 281 1 331 2 131 1 25 2 234 1 67 1 150 1 
253 3 130 1 329 1 331 3 260 1 210 1 67 3 81 1 82 1 374 1 232 1 100 1 111 1 320 2 358 1 234 3 25 3 377 1 61 1 
253 2 331 2 67 2 81 1 17 1 320 1 100 1 146 1 234 2 25 2 
253 1 278 1 28 1 353 1 144 1 48 1 86 1 102 1 222 1 158 1 25 1 224 1 150 1 116 1 170 1 
253 1 278 1 28 1 144 1 48 1 86 1 56 1 102 1 158 1 25 1 224 1 194 1 150 1 116 1 170 1 
171 1 348 1 259 2 155 1 290 1 261 1 30 1 262 1 307 2 80 1 247 4 112 1 178 1 5 1 203 1 181 2 208 1 256 1 228 2 122 1 17 2 146 2 288 1 196 1 
111 1 253 1 331 1 210 1 25 1 234 1 67 1 376 1 
253 2 331 2 354 1 67 2 81 1 111 1 320 1 100 1 234 2 25 2 150 1 
111 1 253 2 330 1 331 2 25 2 234 2 67 2 376 1 
317 1 169 1 
317 1 169 1 
163 1 175 1 
163 1 175 1 
163 1 175 1 
317 1 98 1 169 1 
317 1 98 1 169 1 
315 1 317 1 169 1 
163 1 341 1 317 2 175 1 292 1 169 2 
317 1 98 1 169 1 
317 1 273 1 169 1 
317 1 273 1 169 1 
317 1 273 1 169 1 
305 1 254 2 130 1 317 2 46 2 165 1 185 1 82 2 201 3 245 1 292 1 189 1 49 1 375 2 34 2 360 1 90 2 377 2 169 2 
253 2 254 1 315 1 317 1 331 2 373 1 165 1 67 2 82 1 201 1 375 1 321 1 266 1 34 1 191 1 90 1 312 1 25 2 234 2 36 1 377 1 115 1 150 1 169 1 
343 1 316 1 306 1 
343 1 316 1 287 1 
343 3 19 1 306 2 356 1 126 1 287 1 
343 2 19 1 306 1 166 1 356 1 287 1 
343 2 19 1 306 1 356 2 287 1 
130 2 262 1 199 1 156 4 82 5 334 1 202 1 264 1 134 1 112 1 266 1 5 1 58 1 137 2 37 1 295 1 39 1 117 2 42 2 370 3 256 1 14 1 229 1 68 1 321 1 191 1 72 1 377 5 193 1 236 1 301 3 27 2 
130 5 262 3 199 1 156 7 82 9 334 1 202 1 135 1 264 3 112 3 311 1 5 3 137 6 295 6 37 2 93 5 363 1 39 2 117 6 10 5 42 6 370 9 120 1 256 3 14 2 211 1 229 1 68 2 70 1 103 1 191 4 72 3 377 9 193 2 301 8 
130 3 262 1 156 2 82 3 334 1 264 2 134 1 112 1 5 1 58 1 37 1 137 2 39 1 117 2 42 2 370 4 256 1 14 1 68 1 103 1 191 1 72 1 377 3 193 1 301 3 27 1 
130 4 262 2 156 3 82 4 334 1 264 3 134 1 112 2 311 1 5 2 58 1 137 4 37 1 363 1 39 1 117 4 42 4 370 7 256 2 14 1 211 1 68 1 103 1 191 2 72 2 377 4 193 1 301 5 27 2 
340 1 158 1 220 1 
158 1 257 1 
313 1 
158 1 144 1 
158 3 159 1 224 1 144 1 128 1 220 2 
158 1 224 1 144 1 
239 1 158 1 
143 1 171 3 153 1 259 3 351 1 256 1 261 2 77 1 198 1 307 4 132 1 342 1 247 7 190 1 112 1 149 1 206 2 
143 1 171 3 153 1 259 3 351 1 256 1 261 2 77 1 198 1 307 4 132 1 342 1 247 7 190 1 112 1 149 1 206 2 
143 1 171 3 153 1 259 3 351 1 256 1 261 2 77 1 198 1 263 1 307 4 132 1 342 1 247 7 190 1 112 1 149 1 206 2 
171 10 153 5 351 2 259 15 290 1 261 5 198 1 77 1 30 1 262 3 307 16 78 1 355 1 132 2 247 31 1 1 112 4 88 4 5 3 203 1 206 3 114 1 143 1 184 1 208 1 256 4 228 2 342 1 99 3 190 2 148 1 149 2 72 3 50 1 
171 4 153 1 259 4 351 1 290 2 261 3 30 2 198 1 307 5 132 1 247 9 112 1 203 2 6 1 206 2 143 1 208 2 256 1 228 4 342 1 319 1 190 1 149 1 50 1 
28 1 306 1 53 1 246 1 54 1 84 1 86 1 31 1 32 1 268 1 314 1 162 1 272 1 116 1 64 1 278 1 41 1 316 1 212 1 126 1 299 1 343 2 214 2 215 1 345 1 238 2 326 1 287 1 303 1 170 1 
28 1 306 1 53 1 246 1 54 1 84 1 86 1 31 1 252 1 162 1 272 1 116 1 64 1 278 1 41 1 316 1 12 1 372 1 212 1 126 1 299 1 343 2 214 3 215 1 345 2 238 3 326 1 287 1 303 1 170 1 
28 1 306 1 53 1 54 1 86 1 31 1 162 1 116 1 64 1 278 1 41 1 316 1 12 1 372 1 212 1 126 1 299 1 343 2 214 2 215 1 345 2 238 2 287 1 303 1 170 1 
28 1 54 2 86 1 293 1 251 1 57 1 158 1 269 1 59 1 252 1 162 2 116 1 207 1 272 1 278 1 144 1 299 2 102 1 214 1 215 2 238 1 326 1 170 1 
28 1 306 1 53 1 246 1 54 1 84 1 86 1 32 1 314 1 162 1 272 1 116 1 278 1 41 1 316 1 12 1 212 1 126 1 299 1 343 2 214 1 215 1 238 1 326 1 287 1 170 1 
344 1 
0 2 329 1 331 1 334 1 202 1 293 1 111 1 158 1 295 6 161 1 116 1 253 1 14 1 210 1 167 2 68 1 69 1 300 2 23 2 25 1 301 2 170 2 28 1 130 2 260 1 82 5 221 1 86 2 264 2 223 2 310 4 269 1 37 1 180 2 39 1 141 1 366 1 40 1 278 2 183 1 42 2 370 2 45 1 47 1 229 3 230 1 186 1 144 1 232 1 101 1 102 2 147 1 281 1 283 2 377 5 
329 1 331 1 260 1 82 3 111 1 310 2 161 1 295 2 141 1 253 1 367 1 210 1 229 1 230 1 167 1 232 1 101 1 69 1 147 1 281 1 25 1 377 3 
329 1 130 1 331 1 260 1 82 3 334 1 111 1 310 3 295 1 161 1 180 1 141 1 253 1 367 1 210 1 229 1 230 1 232 1 101 1 69 1 147 1 281 1 25 1 377 3 
329 1 130 1 331 1 260 1 82 3 334 1 111 1 310 3 161 1 295 2 180 1 141 1 367 1 253 1 210 1 229 1 230 1 167 1 232 1 101 1 69 1 147 1 300 1 281 1 25 1 377 3 
0 2 329 1 331 1 334 5 202 1 111 1 157 1 161 1 295 7 253 1 210 1 167 4 16 1 69 1 68 1 300 4 23 2 25 1 301 1 217 1 130 5 260 1 82 5 221 1 264 2 310 6 223 2 37 1 180 4 141 1 39 1 366 1 367 1 42 1 229 3 230 1 232 1 101 1 147 1 281 1 283 2 322 1 192 1 377 5 
0 2 329 1 331 1 334 1 202 1 111 1 161 1 295 4 253 1 210 1 167 2 68 1 69 1 300 2 23 2 25 1 301 1 130 2 260 1 82 4 221 1 264 2 310 4 223 2 37 1 180 2 39 1 141 1 366 1 42 1 370 2 229 2 47 1 230 1 232 1 101 1 147 1 281 1 283 2 377 4 
217 1 0 2 130 1 329 1 331 1 260 1 82 4 334 1 221 1 202 1 264 2 111 1 223 2 310 4 295 4 161 1 37 1 180 2 39 1 141 1 366 1 253 1 42 1 210 1 229 2 230 1 167 2 16 1 232 1 101 1 69 1 68 1 300 2 147 1 281 1 23 2 283 2 25 1 192 1 377 4 301 1 
217 1 0 2 130 1 329 1 331 1 260 1 82 4 334 1 221 1 202 1 264 2 111 1 223 2 310 4 295 4 161 1 37 1 180 2 39 1 141 1 366 1 253 1 42 1 210 1 229 2 230 1 167 2 16 1 232 1 101 1 69 1 68 1 300 2 147 1 281 1 23 2 283 2 25 1 192 1 377 4 301 1 
0 2 130 1 329 1 289 1 331 1 260 1 82 4 334 1 202 1 111 1 223 2 310 4 295 4 161 1 37 1 271 1 180 2 39 1 141 1 366 1 253 1 118 2 42 1 370 2 210 1 229 2 230 1 167 2 16 1 232 1 101 1 69 1 68 1 300 2 147 1 281 1 258 2 25 1 377 4 301 1 26 1 
217 1 0 2 130 1 329 1 331 1 260 1 82 4 334 1 221 1 202 1 264 2 111 1 223 2 310 5 37 1 161 1 295 5 180 3 39 1 141 1 366 1 253 1 42 1 210 1 229 2 230 1 16 1 167 3 232 1 101 1 68 1 69 1 147 1 300 3 281 1 23 2 283 2 322 1 192 1 25 1 377 4 301 1 
217 1 0 2 130 1 329 1 331 1 260 1 82 4 334 1 221 1 202 1 264 2 111 1 223 2 310 5 37 1 161 1 295 5 180 3 39 1 141 1 366 1 253 1 42 1 210 1 229 2 230 1 16 1 167 3 232 1 101 1 68 1 69 1 147 1 300 3 281 1 23 2 283 2 322 1 192 1 25 1 377 4 301 1 
0 2 329 1 331 1 334 1 202 1 111 1 161 1 295 4 253 1 118 2 210 1 167 2 68 1 69 1 300 2 25 1 258 2 301 1 130 1 260 1 82 4 310 4 223 2 37 1 271 1 180 2 39 1 141 1 366 1 42 1 370 2 229 2 47 1 230 1 232 1 101 1 147 1 281 1 377 4 
143 1 171 2 340 1 259 3 351 1 208 1 256 1 261 2 290 1 228 2 30 1 198 1 307 3 122 1 80 1 342 1 247 6 17 1 190 1 112 1 146 1 203 1 206 1 150 2 181 1 288 1 
171 2 153 1 259 6 261 1 290 2 30 2 262 2 307 8 80 1 355 1 247 14 1 1 112 2 88 3 5 1 203 2 8 1 181 11 208 2 256 1 228 4 297 1 15 1 280 1 96 1 17 11 99 3 146 4 72 2 104 1 235 1 150 1 288 2 
28 1 259 1 331 1 353 1 290 1 332 1 30 1 307 1 80 1 244 1 247 2 86 1 3 1 222 1 158 1 35 1 203 1 224 1 8 1 116 1 253 2 278 1 208 1 228 2 67 1 144 1 15 1 48 1 96 1 374 1 320 1 146 1 102 1 25 2 234 1 150 1 170 1 288 1 
153 4 154 2 328 2 331 1 290 3 198 1 247 20 112 3 158 2 5 2 203 3 206 1 8 1 9 1 116 2 253 3 12 1 208 3 256 3 67 1 342 1 15 1 17 7 25 3 72 2 170 3 171 8 28 2 351 1 259 10 261 4 353 2 30 3 262 2 79 2 307 10 80 3 86 3 85 2 222 2 136 2 224 2 181 7 143 1 278 3 43 1 228 6 144 2 96 1 48 2 374 1 190 1 320 1 146 7 102 1 234 1 323 1 150 2 288 3 
28 2 259 1 331 1 290 2 30 2 307 1 80 2 247 2 291 1 86 8 249 1 337 2 293 1 250 1 158 3 268 1 269 1 270 1 203 2 8 1 116 2 253 1 278 8 368 1 12 1 208 2 228 4 67 1 122 1 15 1 144 2 231 1 320 1 102 2 25 1 234 1 237 1 170 7 288 2 
171 1 259 2 331 1 261 1 290 1 30 1 262 1 307 1 81 1 80 1 247 3 112 1 5 1 203 1 181 1 253 1 208 1 256 1 228 2 67 1 96 1 17 1 213 1 100 1 146 1 234 1 25 1 72 1 288 1 
171 1 153 1 348 1 208 1 290 1 228 2 30 1 262 1 307 2 122 1 80 1 247 2 17 1 112 1 146 1 203 1 181 1 288 1 
171 1 208 1 259 2 155 1 261 1 290 1 256 1 228 2 30 1 122 1 80 1 247 2 17 1 146 1 5 1 203 1 181 1 288 1 
171 2 153 1 259 2 290 1 261 1 262 1 30 1 307 2 80 1 247 4 112 1 5 1 203 1 181 2 208 1 256 1 228 2 122 1 17 2 146 2 72 1 288 1 
171 1 153 1 348 1 208 1 290 1 228 2 30 1 262 1 307 2 80 1 247 2 17 1 249 1 112 1 146 1 203 1 181 1 288 1 
171 1 208 1 259 2 155 1 261 1 290 1 256 1 228 2 30 1 80 1 247 2 17 1 249 1 146 1 5 1 203 1 181 1 288 1 
171 2 153 1 259 2 290 1 261 1 262 1 30 1 307 2 80 1 247 4 249 1 112 1 5 1 203 1 181 2 208 1 256 1 228 2 17 2 146 2 72 1 288 1 
171 2 153 1 259 2 290 1 261 1 262 1 30 1 307 2 80 1 247 4 112 1 5 1 203 1 181 2 208 1 256 1 228 2 17 2 146 2 72 1 288 1 
28 1 154 1 259 1 353 1 290 1 30 1 307 1 80 1 247 2 86 1 222 1 158 1 203 1 224 1 8 1 116 1 253 1 278 1 208 1 228 2 144 1 15 1 48 1 102 1 25 1 150 1 170 1 288 1 
28 1 259 1 290 1 30 1 307 1 80 1 247 2 86 1 56 1 158 1 203 1 224 1 8 1 116 1 275 1 253 1 278 1 208 1 228 2 144 1 15 1 48 1 102 1 25 1 194 1 150 1 170 1 288 1 
171 2 153 1 259 2 290 1 261 1 262 1 30 1 307 2 80 1 247 4 112 1 5 1 203 1 181 2 208 1 256 1 228 2 96 1 17 2 146 2 72 1 288 1 
171 2 153 1 28 1 154 1 259 2 261 1 353 1 290 1 262 1 30 1 307 2 79 1 80 1 247 4 86 1 112 1 222 1 158 1 5 1 268 1 203 1 224 1 181 2 116 1 253 1 278 1 208 1 256 1 228 2 144 1 48 1 17 2 146 2 25 1 72 1 170 1 288 1 
171 1 153 1 259 1 331 1 290 1 30 1 262 1 307 2 81 1 80 1 247 3 112 1 5 1 203 1 181 1 253 1 277 1 208 1 256 1 228 2 67 1 96 1 17 1 100 1 146 1 234 1 25 1 72 1 288 1 
153 4 52 1 290 3 198 1 247 41 248 1 1 3 55 4 112 5 5 4 203 3 206 1 208 3 256 5 124 1 342 1 21 2 72 4 129 1 74 1 171 8 75 1 259 21 351 1 173 1 261 4 262 4 30 3 307 20 355 1 88 4 362 1 143 1 44 1 228 6 99 3 319 1 190 1 284 1 50 1 51 1 325 1 380 1 
74 1 171 7 153 3 75 1 351 1 52 1 259 18 173 1 261 4 290 4 198 1 30 4 262 4 307 20 355 1 248 1 247 38 1 3 55 4 112 5 88 4 5 3 203 4 206 1 362 1 143 1 208 4 44 1 256 4 228 8 342 1 124 1 99 3 319 1 190 1 21 2 284 1 72 4 50 2 129 1 51 1 325 1 380 1 
74 1 171 14 153 7 75 1 351 1 52 1 259 25 261 7 290 2 198 1 30 2 262 7 307 27 355 2 248 1 247 52 1 2 55 4 112 8 88 4 5 7 203 2 206 1 362 1 143 1 208 2 44 1 256 8 228 4 297 2 342 1 124 1 99 4 319 1 190 1 21 1 284 1 72 7 50 1 129 1 51 1 380 1 
74 1 171 6 153 3 259 10 173 1 261 3 290 2 30 2 262 3 242 1 307 9 355 1 248 1 247 19 1 1 55 2 112 3 88 2 5 3 203 2 362 1 208 2 256 3 228 4 99 1 319 1 21 1 72 3 51 1 380 2 
74 1 171 4 153 2 75 1 52 1 259 12 261 2 290 3 30 3 262 3 307 14 248 1 247 26 1 2 55 4 112 3 88 2 5 2 203 3 362 2 208 3 44 1 256 2 228 6 124 1 99 2 319 1 21 2 284 1 72 3 50 2 129 1 51 1 380 1 
305 1 189 1 254 1 375 1 317 1 34 1 71 1 90 1 292 1 169 1 
315 1 115 1 
254 1 375 1 317 1 34 1 90 1 205 1 188 1 308 1 169 1 
305 1 254 1 130 1 317 1 46 1 165 1 82 1 201 2 245 1 292 1 189 1 49 1 375 1 34 1 360 1 90 1 377 1 169 1 
305 1 254 1 130 1 317 1 46 1 165 1 82 1 201 2 245 1 292 1 189 1 49 1 375 1 34 1 360 1 90 1 377 1 169 1 
305 1 254 1 130 1 317 1 46 1 165 1 82 1 201 2 245 1 292 1 189 1 49 1 375 1 34 1 360 1 90 1 377 1 169 1 
341 1 98 1 127 1 
341 1 98 1 127 1 
243 1 273 1 
341 1 243 1 273 1 
312 1 36 1 
331 2 156 1 82 1 245 1 201 1 176 1 34 1 266 1 90 1 312 1 36 1 115 1 253 2 254 1 315 1 317 1 46 1 373 1 67 2 375 1 321 1 191 1 25 2 234 2 377 1 150 1 169 1 
98 1 127 1 
341 1 243 1 273 1 
28 1 349 1 259 1 331 2 290 1 30 1 307 1 80 1 247 2 86 2 337 2 87 1 158 1 203 1 8 1 116 1 253 2 278 2 368 1 164 1 208 1 209 1 228 2 144 1 15 1 96 1 231 1 25 2 286 1 288 1 170 2 
278 2 28 1 41 1 316 1 306 1 12 1 110 1 212 1 84 1 126 1 86 2 343 2 268 1 361 1 162 1 287 1 302 1 116 1 170 2 
278 1 41 1 28 1 316 1 306 1 12 1 318 1 212 1 84 1 126 1 86 1 343 2 361 1 162 1 287 1 116 1 170 1 
278 1 28 1 296 1 110 1 144 1 86 1 293 1 102 1 57 1 158 1 269 1 162 1 116 1 170 1 
278 1 41 1 28 1 316 1 306 1 12 1 110 1 212 1 84 1 126 1 86 1 343 2 361 1 162 1 287 1 302 1 116 1 170 1 
91 1 
276 1 340 1 42 1 130 1 334 1 138 1 301 1 
130 2 82 1 334 1 221 1 202 1 264 1 37 1 295 1 39 1 42 1 370 1 229 1 68 1 283 1 23 1 377 1 301 1 
239 2 328 2 329 2 334 2 202 4 112 2 158 10 5 2 338 2 159 1 295 5 116 4 117 6 14 2 256 2 257 3 298 2 68 4 216 1 72 2 168 2 301 9 170 3 304 1 28 3 130 8 262 2 82 5 220 2 86 3 133 1 264 6 177 2 33 2 268 1 224 3 37 4 137 6 138 1 364 1 39 4 276 1 278 3 42 8 94 2 370 12 45 1 95 2 229 3 144 3 279 1 102 1 377 5 152 2 
75 1 52 1 130 5 262 2 82 1 334 2 1 1 202 2 177 1 264 3 112 2 88 1 5 2 295 1 137 5 37 2 39 2 117 5 142 1 274 1 42 5 370 6 44 1 45 1 14 1 256 2 95 2 229 1 99 1 68 2 284 1 72 2 377 1 129 1 301 8 
351 1 330 1 331 1 82 1 81 1 202 1 2 1 177 1 111 1 112 2 37 1 204 1 39 1 253 1 339 1 42 2 119 1 256 1 95 2 67 1 342 1 190 1 68 1 25 1 192 1 234 1 377 1 301 2 
276 1 42 1 130 1 334 1 202 1 68 1 37 1 138 1 301 1 39 1 
328 1 42 5 130 5 370 10 256 2 95 2 262 2 177 1 264 5 112 2 5 2 72 2 137 5 301 5 117 5 
130 1 295 1 377 1 82 1 229 1 334 1 
28 1 352 1 82 3 202 1 86 4 293 1 158 1 269 1 37 2 295 4 364 1 39 2 116 1 40 1 278 4 183 1 42 2 14 2 45 2 229 2 144 1 279 2 68 2 102 2 103 1 377 3 324 1 301 2 170 4 
28 1 154 1 259 1 331 2 290 1 353 1 30 1 81 2 80 1 83 1 247 1 86 1 222 1 158 1 203 1 224 1 116 1 253 3 339 1 278 1 208 1 228 2 67 2 15 1 144 1 48 1 102 1 25 3 234 2 150 1 170 1 288 1 
42 2 130 4 370 4 14 1 45 1 334 2 202 1 264 2 68 1 137 2 37 1 206 1 301 1 39 1 117 2 
254 1 90 1 105 1 
254 1 90 1 105 1 
305 1 254 1 90 1 36 1 63 1 
254 1 90 1 105 1 
254 1 90 1 7 1 
254 1 90 1 7 1 
254 1 90 1 7 1 
254 1 90 1 
317 1 169 1 
171 2 259 4 351 1 290 1 261 2 30 1 198 1 307 4 247 8 1 1 112 1 88 1 203 1 206 1 143 1 208 1 256 1 228 2 342 1 99 1 319 1 190 1 284 1 
171 3 153 1 351 1 259 5 261 2 290 2 198 1 30 2 262 1 307 6 355 1 247 11 1 1 112 2 88 2 203 2 206 1 143 1 208 2 256 1 228 4 342 1 99 1 319 1 190 1 284 1 233 1 72 1 
171 4 153 1 75 1 351 1 259 10 52 1 290 3 261 3 198 1 30 3 262 2 307 9 247 19 1 1 112 3 88 1 5 2 203 3 206 1 143 1 208 3 44 1 256 3 228 6 342 1 99 1 319 1 190 1 233 1 284 1 72 2 50 1 129 1 
171 5 153 2 75 1 351 1 259 7 52 1 290 3 261 3 198 1 30 3 262 2 307 10 247 17 1 1 112 3 88 1 5 1 203 3 206 1 143 1 208 3 44 1 256 2 228 6 342 1 99 1 319 1 190 1 233 1 284 1 72 2 50 1 129 1 
171 2 259 4 351 1 290 1 261 2 30 1 198 1 307 4 247 8 1 1 112 1 88 1 203 1 206 1 143 1 208 1 256 1 228 2 342 1 99 1 319 1 190 1 284 1 
171 2 153 1 75 1 259 6 52 1 290 1 261 1 30 1 262 2 307 6 247 12 1 1 112 2 88 1 5 2 203 1 208 1 44 1 256 2 228 2 99 1 319 1 284 1 72 2 129 1 
171 5 153 2 75 1 351 1 52 1 259 8 290 4 261 3 198 1 30 4 262 2 307 10 247 18 1 1 112 3 88 1 5 1 203 4 206 1 143 1 208 4 44 1 256 2 228 8 342 1 99 1 319 1 190 1 284 1 233 1 72 2 50 2 129 1 
171 6 153 3 75 1 52 1 259 7 173 1 290 4 261 3 30 4 262 3 307 9 247 16 1 1 112 3 88 1 5 2 203 4 208 4 44 1 256 2 228 8 99 1 319 1 284 1 72 3 50 2 129 1 
143 2 171 6 153 3 259 4 351 3 256 1 261 3 198 1 307 3 342 1 247 7 190 3 112 1 
171 4 153 1 75 1 351 1 52 1 259 8 173 1 290 4 261 3 198 1 30 4 262 2 307 10 247 18 1 1 112 3 88 1 5 1 203 4 206 1 143 1 208 4 44 1 256 2 228 8 342 1 99 1 319 1 190 1 284 1 72 2 50 2 129 1 
143 1 171 3 153 1 259 4 208 2 351 1 256 1 261 2 290 2 228 4 30 2 198 1 307 4 342 1 247 8 190 1 112 1 203 2 50 1 206 1 
143 1 171 2 340 1 259 3 351 1 261 2 256 1 198 1 307 3 342 1 247 6 190 1 112 1 206 1 
171 2 153 1 259 2 208 1 261 1 256 1 290 1 228 2 30 1 262 1 307 2 247 4 112 1 5 1 233 1 203 1 72 1 
171 2 153 1 259 4 261 1 256 1 262 1 307 3 355 1 247 7 1 1 99 1 112 1 88 2 5 1 72 1 
171 9 153 4 351 2 259 12 261 5 290 2 198 1 262 2 30 2 307 11 355 1 247 23 357 1 112 3 88 2 5 2 203 2 206 1 143 1 208 2 256 3 228 4 297 1 342 1 280 1 99 2 190 2 72 2 50 2 
88 1 259 1 247 1 
307 1 247 1 99 1 
171 3 153 1 328 1 208 1 259 3 290 1 256 1 261 2 30 1 228 2 262 1 307 3 247 6 112 1 233 1 5 1 203 1 72 1 
171 2 153 1 75 1 259 6 52 1 290 1 261 1 30 1 262 2 307 6 247 12 1 1 112 2 88 1 5 2 203 1 208 1 44 1 256 2 228 2 99 1 319 1 284 1 72 2 129 1 
171 2 153 1 259 3 351 1 256 1 261 1 307 3 342 1 247 6 190 1 112 1 
143 1 171 2 153 1 351 1 259 2 208 1 261 1 290 1 228 2 30 1 198 1 307 1 247 3 357 1 190 1 203 1 50 1 
171 5 153 2 208 1 119 1 351 2 259 5 290 1 261 3 256 2 30 1 228 2 307 5 342 1 247 10 319 1 190 2 112 2 203 1 
171 1 153 1 208 1 290 1 228 2 30 1 262 1 307 2 247 2 319 1 112 1 203 1 
171 2 153 1 259 2 208 1 261 1 256 1 290 1 228 2 30 1 262 1 307 2 247 4 319 1 112 1 5 1 203 1 72 1 
171 2 153 1 259 2 208 3 351 1 173 1 290 3 261 1 228 6 30 3 307 1 247 3 357 1 319 1 190 1 203 3 50 1 
171 12 153 5 351 3 259 18 173 1 290 5 261 7 198 1 30 5 262 3 78 1 307 16 355 1 247 34 1 1 357 1 112 5 88 4 5 3 203 5 206 1 114 1 143 1 208 5 256 5 228 10 342 2 99 3 319 1 190 3 233 1 148 1 72 3 50 2 
253 1 281 1 172 1 331 1 131 1 25 1 150 1 
253 1 108 1 172 1 65 1 331 1 131 1 187 1 281 1 25 1 378 1 150 1 62 1 
293 1 278 1 28 1 340 1 102 1 158 1 269 1 144 1 116 1 86 1 170 1 
253 2 278 1 28 1 331 1 67 1 144 1 48 1 86 1 320 1 102 1 222 1 158 1 234 1 25 2 224 1 150 1 116 1 170 1 
253 2 239 1 278 1 28 1 260 1 331 2 210 1 67 2 144 2 48 1 279 1 86 1 111 1 320 1 222 1 158 3 234 1 25 2 168 1 224 2 150 1 116 1 170 1 
253 2 239 1 278 2 28 1 260 1 331 2 210 1 67 2 144 2 48 1 279 1 86 2 111 1 320 1 56 1 158 3 234 1 25 2 168 1 224 2 92 1 150 1 116 1 170 2 
239 1 278 3 28 1 76 1 130 1 329 1 257 1 82 2 334 1 144 1 220 1 279 1 86 3 309 1 102 1 158 4 224 1 168 1 295 1 377 2 92 1 116 1 170 3 
239 1 278 3 28 1 130 1 329 1 257 1 82 2 334 1 144 1 220 1 279 1 86 3 102 1 33 1 158 4 224 1 168 1 295 1 377 2 92 1 116 1 170 3 
278 1 28 1 270 1 116 1 86 1 170 1 
278 7 368 1 28 2 369 1 12 1 144 2 291 1 86 7 337 1 250 1 102 2 282 1 158 3 294 1 268 1 270 1 159 1 224 1 237 1 116 3 170 6 
171 2 28 1 154 1 259 3 351 1 349 1 331 1 261 2 290 2 353 1 198 1 30 2 307 3 79 1 80 2 247 6 86 1 85 1 112 1 222 1 158 1 268 1 203 2 224 1 206 1 181 1 116 1 143 1 253 2 278 1 208 2 256 1 228 4 67 1 342 1 144 1 48 1 96 1 17 1 190 1 320 1 146 1 25 2 234 1 150 2 288 2 170 1 
130 1 329 1 156 1 82 3 334 1 220 1 202 2 86 1 33 1 158 2 338 1 37 2 295 2 138 1 364 1 39 2 276 1 278 1 42 1 94 1 257 1 229 1 298 1 68 2 102 1 377 3 301 1 170 1 
278 2 28 1 158 2 268 1 159 1 270 1 224 1 144 1 220 1 116 2 133 1 86 2 170 2 
278 4 11 1 28 1 144 1 86 4 293 1 102 1 158 1 268 1 269 1 92 1 116 1 170 4 
278 2 28 1 369 1 13 1 144 1 279 1 86 2 158 1 294 1 224 1 140 1 9 1 116 2 170 2 
343 1 278 1 28 1 316 1 102 1 212 1 287 1 116 1 86 1 170 1 
278 2 28 1 368 1 158 1 12 1 209 1 268 1 144 1 116 1 86 2 170 2 
278 5 11 1 368 1 28 2 144 2 279 1 291 1 86 5 293 1 102 1 250 1 158 3 268 1 269 1 116 2 170 4 
278 5 11 1 368 1 28 2 227 1 144 2 279 1 291 1 86 5 293 1 102 1 158 3 268 1 269 1 116 2 170 4 
253 2 278 1 28 1 331 1 67 1 144 1 48 1 86 1 320 1 56 1 102 1 158 1 234 1 25 2 224 1 150 1 116 1 170 1 
278 1 28 1 369 1 144 1 279 1 86 1 282 1 158 1 294 1 159 1 224 1 116 2 170 1 
253 1 18 1 87 1 164 1 331 1 197 1 25 1 200 1 286 1 
113 1 200 1 107 1 
18 1 197 1 60 1 200 1 150 1 
130 1 329 1 260 1 197 2 210 1 156 1 82 2 334 1 200 1 232 1 111 1 18 2 358 1 267 1 113 1 377 2 60 2 107 1 150 1 
64 1 31 1 340 1 303 1 
64 1 31 1 214 1 238 1 326 1 272 1 303 1 
54 1 238 1 299 1 
255 1 64 1 20 1 31 1 32 1 89 1 214 3 139 2 326 1 238 3 272 1 303 1 
64 1 31 1 109 1 214 2 345 1 238 2 326 1 272 1 303 1 
343 1 265 1 32 1 316 1 306 1 214 1 346 1 238 1 326 1 272 1 303 1 
64 1 32 1 214 1 238 1 326 1 272 1 303 1 
64 2 31 1 32 1 214 1 238 1 326 1 272 1 
64 1 225 1 32 1 22 1 214 2 326 2 238 2 379 1 272 2 303 1 
64 1 240 1 336 1 31 1 32 1 265 1 214 3 345 2 179 1 326 1 238 3 272 1 303 2 
182 1 64 1 316 1 306 1 126 1 343 2 31 1 32 1 214 2 345 1 287 1 326 1 238 2 272 1 303 1 
64 1 347 1 109 1 31 1 32 1 265 1 214 4 345 2 179 1 326 2 238 4 272 2 303 2 
64 1 31 1 32 1 214 1 238 1 326 1 272 1 303 1 
64 2 20 1 31 2 265 1 89 1 214 4 345 2 179 1 139 1 365 1 238 4 326 1 272 1 303 3 
64 1 226 1 241 1 31 1 32 1 214 2 24 1 345 1 326 1 238 2 272 1 303 1 
64 1 4 1 20 1 31 1 32 1 89 2 214 3 139 2 326 1 238 3 272 1 303 1 
350 2 66 1 195 1 303 2 
32 1 214 1 121 1 238 1 326 1 272 1 
336 1 64 1 31 1 32 1 214 2 345 1 238 2 326 1 272 1 303 1 
160 1 
64 1 31 1 32 1 214 1 238 1 326 1 272 1 303 1 
64 1 336 1 31 1 32 1 214 3 345 1 139 1 326 1 238 3 272 1 303 1 
265 1 179 1 365 1 303 1 
64 1 303 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
314 2 4 1 57 6 198 1 253 1 360 1 363 2 225 1 339 1 67 9 107 1 204 1 205 1 148 4 206 2 233 1 21 2 370 1 182 9 155 2 112 3 376 2 306 2 217 1 51 1 162 5 77 1 164 1 
314 2 4 1 57 6 198 1 253 1 360 1 225 1 339 1 363 2 67 9 107 1 204 1 205 1 148 4 206 2 233 1 21 2 370 1 182 9 155 2 112 3 376 2 306 2 217 1 51 1 162 5 77 1 164 1 
314 2 4 1 57 7 198 1 253 1 360 1 225 1 339 1 363 2 67 10 107 1 204 1 205 1 148 5 206 2 233 1 21 2 370 1 182 10 155 2 112 4 376 2 306 2 217 1 51 1 162 6 77 1 164 1 
314 2 4 1 57 4 253 1 360 1 225 1 339 1 363 1 67 7 107 1 204 1 205 1 148 3 206 2 233 1 21 2 370 1 182 7 155 2 112 2 376 2 306 2 217 1 51 1 162 4 77 1 164 1 
206 1 233 1 314 1 4 1 57 3 21 1 112 1 155 1 182 4 198 1 253 1 306 1 217 1 339 1 363 2 162 3 67 4 148 2 
206 1 79 1 233 1 314 1 4 1 155 1 182 2 295 1 376 1 253 1 306 1 162 1 220 1 107 1 67 2 205 1 
206 2 233 1 4 1 57 1 155 2 182 3 112 1 376 1 253 1 162 2 67 3 204 1 148 1 
314 1 57 7 4 1 198 1 253 1 339 1 363 2 204 1 67 9 148 4 126 1 206 2 233 1 21 1 370 1 112 3 182 9 155 2 185 1 376 1 306 1 217 1 162 5 77 1 
314 1 57 7 4 1 198 1 253 1 339 1 363 2 204 1 67 9 148 4 126 1 206 2 233 1 21 1 370 1 112 3 182 9 155 2 185 1 376 1 306 1 217 1 162 5 77 1 
212 1 231 1 65 1 
212 1 189 2 110 1 
254 2 297 1 25 2 73 2 333 2 316 2 84 1 328 2 
0 1 245 1 168 1 196 1 103 1 120 2 5 2 60 1 82 1 316 3 84 1 254 2 297 1 40 1 41 1 361 1 146 1 323 1 175 1 230 1 129 1 344 1 260 1 133 1 328 2 238 1 25 3 73 2 52 2 333 2 286 1 136 1 30 2 289 1 349 2 98 1 118 1 
254 1 297 1 216 1 25 1 73 1 333 1 94 1 181 1 316 1 328 1 
231 1 313 1 207 1 141 1 142 1 181 1 316 1 212 1 159 1 25 1 73 1 274 1 287 1 45 1 
231 1 207 2 142 2 141 1 181 1 316 1 328 1 212 1 254 1 159 1 25 1 73 1 274 1 333 1 45 1 
207 1 142 1 315 1 239 1 237 1 
212 1 114 1 231 1 207 2 142 2 315 1 239 1 170 1 
207 1 142 1 315 1 
207 1 336 1 142 1 181 1 316 1 328 1 297 1 254 1 216 1 25 1 73 1 94 1 333 1 239 1 
212 1 
212 1 231 1 207 2 222 1 142 2 315 1 239 1 170 1 
33 2 193 1 270 1 231 1 20 1 207 5 166 1 142 5 180 2 315 2 3 1 170 1 212 1 239 2 191 1 300 2 44 1 17 1 381 1 
65 1 84 1 
109 1 316 2 84 2 328 1 254 1 25 2 73 2 333 1 378 1 
11 1 70 1 22 1 
103 1 120 1 82 1 316 1 84 1 40 1 41 1 25 1 27 1 52 1 286 1 30 1 289 1 175 1 118 1 98 1 
244 1 22 1 103 1 120 1 82 1 316 2 328 1 254 1 40 1 41 1 25 2 160 1 73 1 52 1 286 1 30 1 289 1 175 1 98 1 118 1 
244 2 243 1 234 1 109 1 316 5 84 1 328 4 254 4 319 1 25 5 73 5 160 1 333 1 287 1 
145 1 254 2 216 1 25 2 73 2 181 1 316 2 328 2 
244 1 254 3 25 3 73 3 333 1 316 3 84 1 328 3 
254 1 216 1 25 1 73 1 181 1 316 1 328 1 
254 1 25 1 73 1 333 1 109 1 378 1 181 1 316 1 328 1 
244 1 168 1 141 1 142 1 103 1 120 1 5 2 82 1 316 4 84 1 254 3 297 1 40 1 41 1 361 1 274 1 146 1 323 1 175 1 176 1 45 1 230 1 207 1 129 1 109 1 344 1 48 1 181 1 260 1 133 1 328 3 238 1 159 1 25 4 73 3 160 1 52 1 286 1 333 2 30 1 289 1 349 1 98 1 118 1 
254 1 244 1 319 1 25 2 73 2 287 1 316 2 84 1 328 1 
244 2 207 1 119 1 142 1 141 1 109 1 181 1 316 3 328 3 212 1 254 3 159 1 25 3 160 1 73 3 274 1 333 1 176 1 45 1 
244 1 109 1 70 1 22 1 316 2 328 2 254 2 25 2 73 2 333 1 
120 1 103 1 82 1 316 1 84 1 40 1 41 1 25 1 52 1 286 1 30 1 289 1 175 1 118 1 98 1 
120 1 103 1 82 1 316 1 84 1 214 1 41 1 25 1 52 1 218 1 286 1 30 1 289 1 118 1 98 1 
0 2 230 1 2 1 90 1 168 1 129 1 70 2 22 2 5 2 260 1 282 1 199 1 263 1 173 1 361 2 11 2 146 1 66 1 137 1 122 1 323 1 257 1 349 4 228 1 
254 1 145 1 159 1 25 1 73 1 181 1 316 1 328 1 
194 1 209 1 
194 1 209 1 
284 1 350 1 
284 1 350 1 
194 1 284 1 209 1 350 1 
327 1 194 1 209 1 
327 1 194 1 209 1 
327 1 194 1 209 1 
194 1 202 1 209 1 
72 1 194 1 209 1 
194 2 284 1 209 2 54 1 350 1 139 1 
194 1 202 1 209 1 
194 1 202 1 209 1 
269 1 312 1 1 1 194 1 246 1 142 1 197 1 316 2 84 1 254 2 367 1 326 1 207 1 208 1 209 1 111 1 93 1 328 2 72 1 158 1 308 1 377 1 25 2 73 2 
290 1 367 2 312 2 326 1 194 2 207 2 142 2 143 1 209 2 208 2 111 3 93 2 372 2 212 1 105 1 115 1 227 1 68 1 139 1 
306 1 314 1 21 1 
79 1 306 1 314 1 
296 1 79 1 314 3 63 1 53 1 21 2 
79 1 56 1 314 2 63 1 53 1 21 1 
79 1 314 2 53 1 63 2 21 1 
33 1 193 2 270 1 1 1 2 1 195 1 246 1 142 5 315 1 271 2 170 1 223 1 340 1 66 1 300 1 44 3 207 5 89 2 231 1 180 1 305 1 369 1 110 1 151 1 210 1 49 2 212 2 263 1 158 1 189 3 239 4 137 1 
33 2 193 6 1 4 270 1 2 3 195 2 166 1 142 9 315 6 249 1 271 6 170 1 223 2 358 1 224 1 66 3 300 2 44 8 207 9 231 1 180 2 110 3 151 3 210 1 236 1 49 6 237 5 212 5 263 3 330 1 266 1 189 9 239 7 137 3 96 5 
33 1 1 1 193 2 2 1 195 1 166 1 142 3 271 2 223 1 340 1 66 1 300 1 44 3 231 1 207 3 89 1 180 1 369 1 110 2 151 1 49 2 212 3 263 1 189 4 239 2 137 1 
33 1 1 2 193 4 2 2 195 1 166 1 142 4 249 1 271 4 223 1 224 1 340 1 66 2 300 1 44 5 231 1 207 4 89 2 180 1 369 1 110 3 151 2 49 4 212 4 263 2 330 1 189 7 239 3 137 2 
103 1 65 1 268 1 
103 1 226 1 
364 1 
103 1 82 1 98 1 
103 1 108 1 
103 1 98 1 
10 1 103 3 82 1 268 2 98 1 113 1 
165 1 0 4 81 1 47 1 261 1 183 1 7 1 263 1 121 1 173 2 361 3 320 2 66 1 122 3 123 1 88 1 349 7 
165 1 0 4 81 1 47 1 261 1 183 1 7 1 263 1 121 1 173 2 361 3 320 2 66 1 122 3 123 1 88 1 349 7 
165 1 0 4 81 1 47 1 261 1 183 1 7 1 263 1 121 1 173 2 361 3 320 2 66 1 122 3 13 1 123 1 88 1 349 7 
165 2 0 16 81 1 353 1 2 3 248 1 168 1 5 2 7 5 200 4 121 1 173 5 361 15 320 3 146 1 66 4 86 1 122 10 12 1 123 1 323 1 88 2 128 1 129 1 47 2 151 3 183 1 261 2 263 4 309 1 137 3 348 1 55 3 349 31 
165 1 0 5 81 1 128 1 168 2 129 2 47 1 251 1 5 4 153 1 261 1 7 1 263 1 121 1 173 3 361 4 320 2 146 2 66 1 122 4 123 1 323 2 88 1 349 9 
79 1 314 2 57 1 4 1 120 1 273 1 318 1 296 1 253 1 41 1 67 2 87 1 125 1 206 1 233 1 71 1 21 1 182 2 155 1 375 1 376 1 306 1 52 1 162 1 163 1 30 1 78 1 380 1 351 1 118 1 
79 1 314 2 57 2 120 1 104 1 273 1 318 1 296 1 253 1 41 1 276 1 67 3 125 1 206 1 233 1 71 1 21 1 371 1 182 3 155 1 376 1 306 1 52 1 162 1 163 1 30 1 78 1 380 1 351 1 118 1 
79 1 314 2 57 2 120 1 104 1 273 1 296 1 253 1 41 1 276 1 67 2 233 1 71 1 21 1 182 2 376 1 306 1 52 1 162 1 163 1 30 1 78 1 380 1 351 1 118 1 
80 1 120 1 103 1 41 1 67 1 206 1 341 1 259 1 371 1 182 1 155 1 376 2 50 1 52 1 346 1 163 2 30 1 32 1 289 1 380 2 118 1 351 2 98 1 
79 1 314 2 4 1 120 1 104 1 273 1 318 1 296 1 41 1 67 1 87 1 125 1 206 1 71 1 21 1 182 1 155 1 376 1 306 1 52 1 163 1 30 1 78 1 380 1 351 1 118 1 
83 1 
193 2 247 2 142 5 141 1 103 1 250 1 252 2 8 1 255 1 256 2 64 2 300 1 207 5 150 1 110 2 212 2 215 1 157 1 159 1 25 1 73 1 347 2 74 1 30 2 118 1 80 1 33 1 34 1 270 1 352 1 313 1 315 6 120 2 316 1 170 3 223 1 359 1 172 1 41 1 274 1 44 2 45 1 231 1 180 1 181 1 281 1 50 1 52 2 188 4 135 2 189 2 287 1 289 2 99 2 98 1 
207 3 313 1 222 1 141 1 142 3 315 2 250 1 181 1 316 1 170 1 281 1 359 1 172 1 159 1 256 1 25 1 188 2 73 1 274 1 74 1 287 1 45 1 
231 1 207 3 313 1 222 1 141 1 142 3 315 1 250 1 181 1 316 1 170 1 281 1 212 1 359 1 172 1 159 1 25 1 188 3 73 1 274 1 347 1 74 1 287 1 45 1 
313 1 222 1 142 3 141 1 315 2 250 1 316 1 170 1 359 1 172 1 256 1 274 1 64 1 45 1 207 3 231 1 181 1 281 1 212 1 159 1 25 1 73 1 188 3 287 1 74 1 347 1 
193 1 247 2 141 1 142 5 294 1 250 1 252 2 8 1 256 4 64 4 300 1 207 5 23 1 110 2 212 5 213 1 157 1 159 1 25 1 73 1 74 1 347 4 76 1 33 1 270 1 313 1 222 1 315 7 316 1 170 3 359 1 172 1 274 1 44 1 45 1 231 5 180 1 181 1 281 1 188 6 135 2 287 1 241 1 99 2 
193 1 247 2 141 1 142 4 250 1 252 2 8 1 255 1 256 2 64 2 300 1 207 4 110 2 212 2 157 1 159 1 25 1 73 1 74 1 347 2 33 1 270 1 313 1 315 4 316 1 170 2 359 1 172 1 274 1 44 1 45 1 231 1 180 1 181 1 281 1 188 4 135 2 287 1 189 2 99 2 
33 1 193 1 270 1 313 1 247 2 142 4 141 1 315 4 250 1 252 2 316 1 170 2 8 1 359 1 172 1 256 2 274 1 64 2 300 1 44 1 45 1 231 1 207 4 180 1 110 2 181 1 281 1 212 1 213 1 157 1 159 1 25 1 73 1 188 4 135 2 347 2 287 1 74 1 76 1 241 1 99 2 
33 1 193 1 270 1 313 1 247 2 142 4 141 1 315 4 250 1 252 2 316 1 170 2 8 1 359 1 172 1 256 2 274 1 64 2 300 1 44 1 45 1 231 1 207 4 180 1 110 2 181 1 281 1 212 1 213 1 157 1 159 1 25 1 73 1 188 4 135 2 347 2 287 1 74 1 76 1 241 1 99 2 
33 1 193 1 270 1 313 1 247 2 142 4 141 1 315 4 250 1 316 1 170 2 8 1 359 1 172 1 256 2 42 2 274 1 64 2 300 1 44 1 45 1 231 1 207 4 180 1 181 1 281 1 212 1 159 1 25 1 73 1 188 4 310 1 347 2 189 2 311 2 95 1 287 1 74 1 116 1 241 1 99 2 
33 1 193 1 270 1 313 1 247 2 142 4 141 1 315 5 250 1 252 2 316 1 170 2 8 1 359 1 172 1 256 3 274 1 64 3 300 1 44 1 45 1 231 1 207 4 180 1 110 2 23 1 181 1 281 1 212 1 213 1 157 1 159 1 25 1 73 1 188 5 135 2 287 1 74 1 347 3 76 1 241 1 99 2 
33 1 193 1 270 1 313 1 247 2 142 4 141 1 315 5 250 1 252 2 316 1 170 2 8 1 359 1 172 1 256 3 274 1 64 3 300 1 44 1 45 1 231 1 207 4 180 1 110 2 23 1 181 1 281 1 212 1 213 1 157 1 159 1 25 1 73 1 188 5 135 2 287 1 74 1 347 3 76 1 241 1 99 2 
193 1 247 2 141 1 142 4 250 1 8 1 255 1 256 2 64 2 300 1 207 4 212 1 159 1 25 1 73 1 74 1 311 2 347 2 33 1 270 1 313 1 315 4 316 1 170 2 359 1 172 1 42 2 274 1 44 1 45 1 231 1 180 1 181 1 281 1 188 4 95 1 287 1 189 2 99 2 
0 3 165 1 230 1 81 1 168 1 129 1 70 1 22 1 5 2 260 1 261 1 84 2 199 1 263 1 121 1 173 2 320 1 361 3 11 1 146 1 66 1 65 1 122 2 123 1 323 1 349 6 
0 8 245 1 2 2 35 1 168 2 5 4 84 1 7 1 200 3 173 1 361 6 201 1 11 11 146 2 66 1 122 2 323 2 15 1 230 1 19 1 69 1 129 2 70 4 22 11 151 2 260 2 263 2 238 1 309 1 137 1 348 1 55 3 349 14 
0 1 244 1 245 1 354 1 168 1 103 1 120 1 5 2 82 1 316 2 84 1 254 1 40 1 41 1 361 1 146 1 323 1 175 1 325 1 230 1 69 1 129 1 70 1 260 1 134 1 328 1 238 1 25 2 52 1 27 1 73 1 160 1 286 1 30 1 289 1 349 2 98 1 118 1 
0 10 245 1 244 1 2 2 103 2 5 6 104 1 59 2 7 4 254 1 11 7 146 3 66 3 69 1 70 7 22 7 151 2 260 3 261 1 263 3 264 1 25 3 160 1 73 1 30 3 349 20 118 2 165 1 81 1 168 3 36 1 120 3 82 2 316 3 84 2 121 1 40 2 173 4 41 2 320 1 361 10 122 8 123 1 323 3 124 2 175 2 324 1 230 3 129 3 132 2 133 2 328 1 238 1 187 2 52 3 286 2 137 2 289 1 98 2 
0 1 80 1 244 1 245 1 168 2 103 3 120 8 5 4 104 1 60 2 356 1 316 1 199 1 254 1 41 2 361 1 146 2 323 2 16 1 366 1 230 2 178 1 179 1 129 2 260 2 375 1 328 1 50 1 238 1 25 1 73 1 52 8 28 1 30 7 289 2 379 1 349 2 118 2 98 2 
0 1 2 1 168 1 5 2 316 1 254 1 173 1 361 2 11 1 146 1 66 1 122 1 323 1 18 1 230 1 69 1 109 1 129 1 70 1 22 1 151 1 260 1 328 1 263 1 25 1 73 1 333 1 137 1 349 3 
0 2 230 1 2 1 90 1 168 1 129 1 70 1 22 1 5 2 260 1 7 1 199 1 263 1 11 1 146 1 122 1 323 1 349 2 
230 1 168 1 129 1 70 1 22 1 5 2 260 1 199 1 173 1 361 2 11 1 146 1 66 1 137 1 122 1 323 1 349 2 228 1 
0 2 2 1 168 1 5 2 7 1 199 1 173 1 361 2 11 2 146 1 66 1 122 2 323 1 230 1 129 1 70 2 22 2 151 1 260 1 263 1 137 1 349 4 
0 2 230 1 2 1 90 1 168 1 129 1 70 1 22 1 5 2 260 1 7 1 263 1 28 1 11 1 146 1 122 1 323 1 349 2 
230 1 168 1 129 1 70 1 22 1 5 2 260 1 173 1 361 2 28 1 11 1 146 1 66 1 137 1 122 1 323 1 349 2 228 1 
0 2 2 1 168 1 5 2 7 1 173 1 361 2 11 2 146 1 66 1 122 2 323 1 230 1 129 1 70 2 22 2 151 1 260 1 263 1 28 1 137 1 349 4 
0 2 2 1 168 1 5 2 7 1 173 1 361 2 11 2 146 1 66 1 122 2 323 1 230 1 129 1 70 2 22 2 151 1 260 1 263 1 137 1 349 4 
0 1 245 1 168 1 120 1 103 1 5 2 82 1 316 1 84 1 40 1 41 1 361 1 146 1 323 1 175 1 230 1 129 1 133 1 260 1 238 1 25 1 52 1 286 1 30 1 289 1 349 2 98 1 118 1 
0 1 245 1 168 1 101 1 120 1 103 1 5 2 82 1 316 1 84 1 41 1 361 1 146 1 323 1 230 1 129 1 260 1 214 1 238 1 25 1 52 1 286 1 218 1 30 1 289 1 349 2 98 1 118 1 
0 2 2 1 168 1 5 2 7 1 173 1 361 2 11 2 146 1 66 1 122 2 323 1 230 1 69 1 129 1 70 2 22 2 151 1 260 1 263 1 137 1 349 4 
0 2 2 1 168 1 120 1 103 1 5 2 82 1 316 1 7 1 40 1 173 1 41 1 361 2 11 2 146 1 66 1 122 2 323 1 175 1 124 1 230 1 129 1 70 2 22 2 151 1 133 1 260 1 375 1 263 1 25 1 52 1 286 1 137 1 30 1 349 4 118 1 98 1 
0 2 2 1 168 1 5 2 6 1 316 1 7 1 254 1 361 1 11 1 146 1 66 1 122 1 323 1 230 1 69 1 109 1 129 1 70 1 22 1 151 1 260 1 328 1 263 1 25 1 73 1 333 1 137 1 349 3 
0 9 2 3 293 1 168 2 272 1 5 4 251 1 62 2 7 3 200 2 173 3 361 10 146 2 66 3 122 6 301 1 323 2 177 1 304 1 129 2 151 3 235 1 263 3 309 1 267 2 29 1 137 3 348 1 55 1 349 19 
0 14 2 3 168 3 167 1 272 2 5 6 251 1 62 1 7 2 200 2 173 2 361 12 146 3 203 1 66 2 122 4 301 1 323 3 177 1 128 2 129 3 151 3 235 2 373 1 263 3 329 1 309 2 267 4 190 1 29 1 137 2 192 1 55 2 349 26 
0 20 2 4 140 1 293 1 251 1 5 6 62 1 7 4 200 4 146 3 66 5 203 1 301 1 151 4 261 1 263 5 309 3 267 4 29 1 348 1 349 41 165 1 81 1 168 3 167 1 272 1 121 1 173 4 361 21 320 1 122 8 323 3 123 1 177 1 128 1 129 3 235 2 373 1 329 1 190 1 137 4 192 1 55 3 
165 1 0 20 81 1 140 1 2 4 293 1 167 1 168 4 272 1 5 8 251 1 62 1 7 3 200 4 121 1 173 4 320 1 361 18 146 4 203 1 66 4 122 7 301 1 123 1 323 4 177 1 128 2 129 4 151 4 235 2 373 1 261 1 263 5 329 1 309 3 267 4 190 1 29 1 137 3 192 1 348 1 55 3 349 38 
165 1 0 27 81 1 2 7 167 1 35 2 168 2 272 1 5 4 251 1 62 1 7 7 200 4 121 1 173 7 320 1 361 25 146 2 203 1 66 8 122 14 301 1 123 1 323 2 177 1 128 1 129 2 151 7 235 1 373 1 261 1 263 8 329 1 309 2 267 4 190 1 29 1 137 7 192 1 348 2 55 4 349 52 
290 1 312 1 367 1 194 1 208 1 209 1 334 1 68 1 93 1 139 1 
72 1 308 1 
302 1 312 1 367 1 194 1 298 1 343 1 208 1 209 1 93 1 
327 1 127 1 
202 1 54 1 229 1 
290 1 326 1 367 1 312 1 207 1 194 1 142 1 209 1 208 1 111 2 93 1 372 1 212 1 105 1 115 1 227 1 68 1 139 1 
290 1 326 1 367 1 312 1 207 1 194 1 142 1 209 1 208 1 111 2 93 1 372 1 212 1 105 1 115 1 227 1 68 1 139 1 
290 1 326 1 367 1 312 1 207 1 194 1 142 1 209 1 208 1 111 2 93 1 372 1 212 1 105 1 115 1 227 1 68 1 139 1 
327 1 127 1 54 1 
327 1 127 1 54 1 
202 1 229 1 
202 1 54 1 229 1 
269 1 377 1 
269 1 312 1 1 1 194 1 246 1 142 1 197 1 316 2 84 1 254 2 227 1 367 1 207 1 208 1 209 1 111 1 372 1 93 1 328 2 72 1 158 1 308 1 377 1 25 2 73 2 219 1 239 1 
0 1 221 1 245 1 168 1 103 1 120 2 5 2 60 2 316 2 41 1 361 1 362 1 146 1 323 1 366 1 230 1 303 1 232 1 69 1 46 1 129 1 260 1 238 1 25 2 52 2 73 2 30 2 379 1 349 2 118 1 98 1 
79 1 314 2 71 1 21 1 120 2 104 1 273 1 375 1 38 1 318 1 296 1 306 1 41 1 52 2 26 1 265 1 30 2 118 1 351 1 
79 1 314 2 71 1 21 1 120 1 104 1 273 1 38 1 318 1 296 1 144 1 306 1 41 1 52 1 30 1 351 1 118 1 
80 1 259 1 92 1 103 1 120 1 50 1 41 1 52 1 265 1 30 1 289 1 118 1 98 1 351 1 
79 1 314 2 71 1 21 1 120 1 104 1 273 1 38 1 318 1 296 1 306 1 41 1 52 1 26 1 265 1 30 1 118 1 351 1 
85 1 
212 1 193 1 231 1 20 1 65 1 191 1 44 1 
33 1 270 1 193 1 231 1 207 1 142 1 315 1 180 1 110 1 252 1 170 1 212 2 157 1 135 1 189 1 300 1 44 1 
193 8 2 2 142 5 103 10 61 2 299 2 106 2 66 2 300 4 258 2 108 2 20 1 207 5 110 6 151 2 113 1 212 8 263 2 215 1 30 3 268 2 118 4 33 4 270 4 315 5 271 6 120 3 355 1 82 3 223 2 170 3 171 2 41 3 322 1 226 3 44 9 43 1 45 2 231 2 180 4 130 1 132 2 375 1 49 6 331 1 52 3 189 12 240 2 137 2 191 1 289 1 97 2 98 3 242 2 
33 2 270 2 193 5 2 2 142 1 167 1 315 1 271 5 61 1 223 1 170 1 200 1 203 1 106 2 66 2 300 2 277 1 44 8 207 1 231 2 149 1 180 2 110 3 151 2 49 5 212 5 263 2 215 1 329 1 309 1 189 6 190 1 137 2 192 1 55 1 
165 1 33 1 270 1 193 2 336 1 142 1 61 1 316 1 297 1 254 1 106 2 66 1 300 1 123 1 44 2 207 1 368 1 180 1 181 1 261 1 328 1 213 1 263 2 216 1 25 1 73 1 94 1 333 1 
33 1 270 1 193 1 20 1 231 1 180 1 212 1 191 1 300 1 44 1 
193 5 2 2 271 5 110 5 132 1 151 2 61 1 49 5 212 5 263 2 189 10 106 2 66 2 137 2 44 5 
212 1 231 1 207 1 142 1 315 1 170 1 
33 2 80 1 34 1 270 1 193 2 166 1 142 3 315 4 103 1 120 4 355 2 223 2 170 2 41 1 338 1 275 1 300 2 44 2 207 3 180 2 150 1 215 2 50 1 331 1 52 4 30 4 289 2 118 1 98 1 
168 1 120 1 103 1 5 2 82 1 316 3 84 1 254 2 297 1 40 1 41 1 361 1 146 1 323 1 175 1 230 1 129 1 344 1 133 1 260 1 328 2 238 1 25 3 52 1 73 2 333 2 286 1 30 1 289 1 349 1 118 1 98 1 
33 1 193 2 270 1 231 2 180 1 271 2 110 2 223 1 49 2 212 4 215 1 320 1 189 4 300 1 44 1 
312 1 208 1 184 1 
312 1 208 1 184 1 
312 1 208 1 184 1 
312 1 208 1 39 1 
290 1 269 1 312 1 208 1 374 1 
312 1 208 1 39 1 
312 1 208 1 39 1 
312 1 208 1 
194 1 209 1 
0 4 165 1 81 1 128 1 168 2 129 2 5 4 261 1 7 1 263 1 121 1 173 2 320 1 361 4 146 2 66 1 122 3 123 1 323 2 349 8 
165 1 0 3 81 1 261 1 263 1 121 1 173 2 320 1 361 3 65 1 66 1 122 2 123 1 349 6 
0 2 2 1 168 1 129 1 151 1 5 2 357 1 7 1 263 1 173 1 361 2 146 1 66 1 137 1 122 2 323 1 349 4 
0 3 2 1 151 1 7 1 200 2 263 1 173 1 361 4 309 1 66 1 137 1 348 1 122 2 55 1 349 7 
165 2 0 11 81 1 2 2 35 1 168 2 5 4 7 4 317 1 200 2 121 1 173 5 320 1 361 12 201 1 146 2 66 3 122 9 123 1 323 2 128 2 129 2 151 2 261 2 263 3 137 2 348 1 55 2 349 23 
200 1 361 1 349 1 
0 1 55 1 349 1 
0 3 2 1 168 1 129 1 132 1 151 1 5 2 357 1 7 1 263 1 173 2 361 3 146 1 66 1 137 1 122 3 323 1 349 6 
0 6 2 2 167 1 168 1 129 1 151 2 251 1 5 2 7 1 263 2 200 1 329 1 173 1 361 6 309 1 146 1 190 1 203 1 66 2 137 2 122 2 192 1 323 1 55 1 349 12 
0 3 165 1 261 1 7 1 263 1 173 1 361 3 66 1 122 2 123 1 349 6 
0 1 165 1 81 1 128 1 168 1 129 1 5 2 261 1 7 1 317 1 121 1 173 1 361 2 146 1 122 2 323 1 349 3 
165 2 0 5 168 1 368 1 129 1 5 2 251 1 261 2 7 2 263 2 173 3 361 5 146 1 66 2 122 5 323 1 123 1 349 10 
0 2 2 1 168 1 129 1 251 1 5 2 7 1 263 1 146 1 122 1 323 1 349 2 
0 2 2 1 168 1 129 1 151 1 251 1 5 2 7 1 263 1 173 1 361 2 146 1 66 1 137 1 122 2 323 1 349 4 
165 1 0 1 128 1 293 1 168 3 129 3 251 1 5 6 261 1 317 1 7 1 173 1 361 2 146 3 122 2 323 3 349 3 
165 3 0 16 81 1 353 1 2 3 293 1 168 5 5 10 251 1 357 1 317 1 7 5 200 4 121 1 173 7 320 1 361 18 146 5 86 1 66 5 12 1 122 12 123 2 323 5 128 2 129 5 151 3 261 3 263 5 309 1 137 3 348 1 55 3 349 34 
0 4 165 1 81 1 168 1 5 2 251 1 200 1 121 1 173 2 320 1 361 4 146 1 66 1 122 2 323 1 123 1 129 1 261 1 263 1 309 1 192 1 55 1 349 8 
165 1 0 6 81 1 2 1 168 2 251 1 5 4 357 1 7 1 200 2 121 1 173 2 320 1 361 5 146 2 66 1 122 3 123 1 323 2 129 2 151 1 261 1 263 2 309 1 192 1 348 1 55 1 349 11 
165 1 0 9 81 1 2 2 168 3 167 1 5 6 251 1 357 1 7 1 200 1 121 1 173 3 320 1 361 10 146 3 66 3 203 1 122 4 123 1 323 3 128 1 129 3 151 2 261 1 263 3 329 1 309 1 190 1 137 2 192 1 55 1 349 19 
165 1 0 10 81 1 2 2 168 3 167 1 5 6 251 1 357 1 7 2 200 1 121 1 173 3 320 1 361 7 146 3 66 2 203 1 122 5 123 1 323 3 128 1 129 3 151 2 261 1 263 3 329 1 309 1 190 1 137 1 192 1 55 1 349 17 
0 4 165 1 81 1 168 1 5 2 251 1 200 1 121 1 173 2 320 1 361 4 146 1 66 1 122 2 323 1 123 1 129 1 261 1 263 1 309 1 192 1 55 1 349 8 
0 6 2 2 167 1 168 1 129 1 151 2 251 1 5 2 7 1 263 2 200 1 329 1 173 1 361 6 309 1 146 1 190 1 203 1 66 2 137 2 122 2 192 1 323 1 55 1 349 12 
165 1 0 10 81 1 2 2 168 4 167 1 5 8 251 1 357 1 7 2 200 1 121 1 173 3 320 1 361 8 146 4 203 1 66 2 122 5 123 1 323 4 128 2 129 4 151 2 261 1 263 3 329 1 309 1 190 1 137 1 192 1 55 1 349 18 
0 9 2 3 168 4 293 1 167 1 251 1 5 8 7 3 200 1 173 3 361 7 146 4 203 1 66 2 122 6 323 4 128 2 129 4 151 3 263 3 329 1 309 1 190 1 137 2 192 1 55 1 349 16 
165 3 0 3 81 1 261 3 7 3 263 1 121 2 173 3 361 4 66 1 122 6 123 1 349 7 
165 1 0 10 81 1 2 2 168 4 293 1 167 1 251 1 5 8 7 1 200 1 121 1 173 3 320 1 361 8 146 4 203 1 66 2 122 4 123 1 323 4 128 2 129 4 151 2 261 1 263 3 329 1 309 1 190 1 137 1 192 1 55 1 349 18 
319 1 25 1 73 1 287 1 102 1 316 1 84 1 
102 1 154 1 345 1 316 1 84 1 280 1 319 1 25 1 73 1 287 1 75 1 335 1 
80 1 50 1 41 1 52 1 103 1 65 1 120 1 30 1 289 1 118 1 98 1 
244 1 103 1 120 1 82 1 316 2 84 1 328 1 254 1 40 1 41 1 25 2 73 1 52 1 286 1 30 1 289 1 98 1 118 1 
244 1 141 1 103 3 120 1 181 1 82 2 355 1 316 2 84 1 328 2 254 1 40 1 159 1 41 1 25 2 299 1 73 2 52 1 286 1 30 1 108 1 98 2 118 1 
244 1 292 1 141 1 103 3 120 2 181 1 82 2 355 1 316 2 84 1 328 2 214 1 254 1 159 1 41 1 25 2 299 1 73 2 52 2 286 1 30 2 108 1 98 2 118 1 
292 1 142 2 315 1 169 1 103 4 120 3 355 1 82 1 41 1 299 1 226 1 108 1 45 1 207 2 231 1 212 1 52 3 30 3 288 1 289 1 268 1 118 1 98 1 
292 1 231 1 207 2 142 2 315 1 120 3 103 4 82 1 355 1 212 1 41 1 299 1 52 3 226 1 30 3 289 1 108 1 258 1 268 1 45 1 98 1 118 1 
41 1 178 1 52 1 120 1 30 1 118 1 
178 1 179 1 342 1 120 7 103 3 60 1 104 1 356 1 82 1 375 1 262 1 113 1 41 2 52 7 30 6 16 1 289 2 147 1 379 1 98 2 118 3 
0 3 165 1 81 1 244 1 168 2 103 1 120 1 5 4 82 1 316 2 84 2 254 1 121 1 40 1 173 2 41 1 320 1 361 3 11 1 146 2 66 1 122 2 123 1 323 2 124 1 175 1 230 2 69 1 46 1 129 2 70 1 22 1 260 2 133 1 261 1 328 1 375 1 263 1 25 2 187 1 73 1 52 1 286 1 30 1 349 6 98 1 118 1 
33 2 193 1 270 2 142 3 315 2 120 1 103 2 170 1 171 1 226 1 300 2 258 1 44 1 45 1 231 1 20 1 207 3 180 2 212 1 331 1 52 1 239 1 30 1 191 1 289 1 268 1 97 1 242 1 
178 1 130 1 120 2 103 2 82 1 375 1 113 1 41 1 52 2 30 2 268 1 98 1 118 2 
80 1 292 1 120 4 103 1 375 1 50 1 41 1 52 4 30 4 138 1 289 1 118 1 98 1 
291 1 342 1 36 1 120 2 103 1 58 1 355 1 82 1 41 1 52 2 30 2 147 1 98 1 118 2 
79 1 306 1 41 1 314 1 52 1 71 1 120 1 30 1 289 1 118 1 
303 1 120 2 103 1 104 1 375 1 41 1 52 2 30 2 379 1 98 1 118 1 
80 1 179 1 120 5 103 3 355 1 356 1 375 1 50 1 41 2 52 5 30 4 138 1 289 1 379 1 98 2 118 2 
80 1 120 5 131 1 103 3 355 1 356 1 375 1 50 1 41 2 52 5 30 4 138 1 289 1 379 1 98 2 118 2 
244 1 103 1 120 1 82 1 316 2 84 1 328 1 214 1 254 1 41 1 25 2 73 1 52 1 286 1 30 1 289 1 98 1 118 1 
342 1 120 1 103 1 355 1 82 1 262 1 113 1 41 1 52 1 30 1 147 1 98 1 118 2 
211 1 100 1 365 1 24 1 84 1 
231 1 207 2 278 1 141 1 142 2 91 1 100 2 181 1 24 1 84 1 212 1 211 2 307 1 159 1 274 1 239 1 365 2 176 1 45 1 
211 1 221 1 232 1 25 1 73 1 362 1 365 1 316 1 24 1 
307 1 91 1 24 1 
253 1 233 1 162 1 65 1 
206 1 253 1 233 1 162 1 67 1 182 1 155 1 
376 1 163 1 182 1 
206 1 233 1 4 1 155 1 182 3 156 1 253 1 285 1 9 1 162 1 67 3 107 2 
206 1 253 1 233 1 162 1 57 1 363 1 67 2 182 2 155 1 
206 1 314 1 4 1 21 1 155 1 182 1 306 1 217 1 162 1 67 1 148 1 
206 1 233 1 162 1 4 1 67 1 182 1 155 1 
206 1 253 1 233 2 4 1 67 1 182 1 155 1 
206 2 233 1 4 1 152 1 155 2 182 2 321 1 162 1 161 1 67 2 
206 1 233 1 4 1 57 2 370 1 155 1 182 3 112 1 253 1 162 2 67 3 77 1 148 1 
79 1 206 1 233 1 314 2 4 1 57 1 21 1 155 1 182 2 296 1 253 1 306 1 162 1 117 1 67 2 
206 2 233 1 4 1 57 2 155 2 182 4 112 1 198 1 253 1 363 1 162 2 67 4 148 1 
206 1 253 1 233 1 162 1 4 1 67 1 182 1 155 1 
206 1 233 2 57 2 182 4 155 1 112 1 253 2 285 1 9 1 332 1 162 3 107 1 67 4 148 1 
206 1 233 1 4 1 57 1 155 1 182 2 337 1 253 1 162 1 67 2 14 1 126 1 
206 1 233 1 4 1 155 1 182 3 283 1 253 1 285 1 9 2 162 1 67 3 107 2 
186 1 162 2 31 2 37 1 
206 1 4 1 174 1 67 1 182 1 155 1 
206 1 253 1 233 1 162 1 57 1 4 1 77 1 67 2 182 2 155 1 
279 1 
206 1 253 1 233 1 162 1 4 1 67 1 182 1 155 1 
206 1 233 1 57 1 4 1 155 1 182 3 253 1 162 1 67 3 107 1 77 1 
332 1 162 1 112 1 148 1 
233 1 162 1 

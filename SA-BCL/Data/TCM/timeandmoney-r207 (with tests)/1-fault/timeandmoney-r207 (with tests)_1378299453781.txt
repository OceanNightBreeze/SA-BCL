#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 60 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 9 186 1 140 6 276 2 214 1 189 1 26 2 234 1 124 1 103 1 105 2 340 1 282 1 197 5 199 4 218 2 153 1 203 2 202 3 374 1 375 1 245 1 90 1 89 2 181 1 378 1 351 9 208 2 
225 9 186 1 140 6 276 2 214 1 26 2 189 1 234 1 124 1 103 1 105 2 340 1 282 1 197 5 199 4 218 2 153 1 202 3 203 2 374 1 375 1 245 1 90 1 89 2 181 1 378 1 351 9 208 2 
225 10 186 1 140 7 276 2 214 1 26 2 189 1 234 1 124 1 103 1 105 2 340 1 282 1 197 6 199 5 218 2 153 1 202 4 203 2 374 1 375 1 245 1 90 1 89 2 181 1 378 1 351 10 208 2 
225 7 186 1 140 4 276 2 214 1 26 2 189 1 234 1 124 1 105 2 340 1 282 1 197 4 199 3 218 2 153 1 202 2 203 1 374 1 375 1 245 1 90 1 89 2 181 1 378 1 351 7 208 2 
197 3 199 2 218 1 225 4 202 1 203 2 140 3 276 1 375 1 90 1 89 1 26 1 234 1 103 1 351 4 208 1 340 1 282 1 
197 1 218 1 225 2 319 1 109 1 324 1 276 1 214 1 90 1 89 1 234 1 378 1 351 2 105 1 208 1 282 1 
197 2 199 1 218 2 225 3 202 1 140 1 276 2 90 1 234 1 124 1 351 3 105 1 282 1 
225 9 186 1 140 7 276 2 257 1 277 1 26 1 234 1 124 1 103 1 105 1 340 1 282 1 197 5 199 4 218 2 202 3 203 2 374 1 375 1 90 1 89 1 351 9 208 1 
225 9 186 1 140 7 276 2 257 1 277 1 26 1 234 1 124 1 103 1 105 1 340 1 282 1 197 5 199 4 218 2 202 3 203 2 374 1 375 1 90 1 89 1 351 9 208 1 
20 1 273 1 116 1 
20 1 348 1 242 2 
334 2 294 1 125 2 47 1 68 2 93 2 128 2 148 2 
358 1 254 1 213 1 259 1 366 1 55 1 334 2 336 2 125 3 315 1 279 1 193 1 128 2 370 1 77 1 148 2 267 1 10 2 38 1 373 1 14 1 323 1 134 2 135 1 17 2 91 1 44 1 294 1 46 1 47 1 115 2 68 2 93 3 250 1 354 1 274 1 251 1 
334 1 294 1 110 1 125 1 83 1 68 1 93 1 128 1 179 1 148 1 
20 1 301 1 268 1 12 1 303 1 83 1 331 1 272 1 334 1 125 1 93 1 116 1 317 1 353 1 
20 1 268 1 12 1 303 1 83 1 331 2 334 1 125 1 68 1 128 1 93 1 116 1 317 2 148 1 353 1 
230 1 231 1 18 1 317 1 331 1 
20 1 364 1 231 1 18 1 116 1 69 1 317 2 331 2 
18 1 317 1 331 1 
110 1 83 1 179 1 331 1 231 1 246 1 334 1 294 1 125 1 68 1 128 1 93 1 317 1 148 1 
20 1 
20 1 231 1 18 1 144 1 116 1 69 1 317 2 331 2 
20 1 96 1 2 1 344 1 139 2 331 5 363 1 132 2 244 2 220 1 231 2 18 2 166 1 311 1 207 1 116 1 69 1 280 1 317 5 
273 1 47 1 
330 1 141 1 334 2 125 2 47 2 68 1 93 2 128 1 148 1 
27 1 275 1 170 1 
267 1 10 1 358 1 14 1 290 1 366 1 336 1 44 1 125 1 46 1 47 1 115 1 279 1 93 1 274 1 251 1 
267 1 358 1 10 1 14 1 15 1 27 1 366 1 44 1 334 1 336 1 46 1 125 2 115 1 279 1 128 1 93 2 146 1 148 1 274 1 251 1 
330 1 15 1 272 1 334 5 125 5 47 1 249 1 68 1 30 1 128 4 93 5 146 2 298 1 148 4 
334 2 110 1 125 2 83 1 93 2 128 2 104 1 148 2 
334 3 125 3 47 1 68 1 93 3 128 3 146 1 148 3 
334 1 110 1 125 1 83 1 93 1 128 1 148 1 
330 1 334 1 125 1 83 1 68 1 93 1 128 1 141 1 148 1 
330 1 358 1 95 1 303 1 331 1 366 1 55 1 334 3 336 1 125 4 315 1 279 1 193 1 128 3 370 1 146 1 77 1 317 1 148 3 267 1 268 1 10 1 12 1 83 1 14 1 323 1 15 1 16 1 134 2 135 1 17 1 91 1 44 1 294 1 46 1 47 1 115 1 68 2 250 1 93 4 274 1 353 1 354 1 251 1 
272 1 334 2 125 2 47 1 93 2 128 1 146 1 298 1 148 1 
20 1 330 1 268 1 12 1 303 1 305 1 83 1 331 1 15 1 16 1 334 3 125 3 68 1 128 3 93 3 146 2 317 1 148 3 353 1 
27 1 330 1 334 2 125 2 275 1 68 1 93 2 128 2 146 1 148 2 
267 1 10 1 358 1 14 1 366 1 336 1 44 1 125 1 46 1 47 1 115 1 279 1 93 1 274 1 251 1 
267 1 10 1 358 1 14 1 336 1 75 1 44 1 125 1 46 1 47 1 115 1 279 1 93 1 300 1 251 1 
275 2 255 1 54 1 27 2 167 1 315 1 170 2 193 1 370 1 77 1 80 1 241 1 284 1 373 2 176 1 111 1 323 1 134 2 135 1 349 1 17 4 91 2 66 1 299 1 
303 1 334 1 125 1 83 1 93 1 128 1 104 1 148 1 
145 1 196 1 
145 1 196 1 
321 1 87 1 
321 1 87 1 
321 1 87 1 
145 1 196 1 229 1 
145 1 196 1 229 1 
122 1 145 1 196 1 
123 1 321 1 145 2 196 2 185 1 87 1 
145 1 196 1 229 1 
145 1 196 1 133 1 
145 1 196 1 133 1 
145 1 196 1 133 1 
175 1 37 1 269 1 289 1 63 1 331 1 88 1 98 1 327 1 113 1 122 1 334 2 235 1 125 2 47 1 93 2 145 1 128 2 217 1 317 1 70 1 196 1 147 1 148 2 
20 1 175 2 37 3 13 1 331 2 120 1 309 2 88 1 327 2 293 1 123 1 235 2 205 1 338 1 145 2 317 2 196 2 147 2 106 1 
89 1 26 1 208 1 
89 1 208 1 324 1 
89 3 26 2 233 1 82 1 29 1 324 1 
89 2 26 1 130 1 233 1 82 1 324 1 
89 2 26 1 233 2 82 1 324 1 
21 1 20 2 210 1 96 2 139 1 331 5 54 1 310 1 98 1 231 4 166 1 99 2 367 2 8 1 317 5 241 1 284 1 242 3 39 1 269 1 111 1 322 1 63 1 244 1 132 1 348 1 18 1 292 1 69 1 116 1 207 3 355 2 
20 5 96 6 139 2 256 5 331 9 54 3 230 5 310 2 231 7 166 1 367 6 8 1 369 1 280 1 317 9 241 3 284 3 61 1 242 9 39 3 111 3 63 4 326 1 86 1 132 2 244 2 348 3 18 6 292 2 204 1 297 1 116 1 69 1 207 8 355 6 
20 3 21 1 96 2 139 1 331 3 54 1 310 1 231 2 99 1 367 2 280 1 317 3 241 1 284 1 242 4 39 1 111 1 322 1 63 1 244 1 132 1 348 2 292 1 116 1 207 3 355 2 
20 4 21 1 96 4 139 1 331 4 54 2 310 1 231 3 99 2 367 4 369 1 280 1 317 4 241 2 284 2 242 7 39 2 111 2 322 1 63 2 326 1 244 1 132 1 348 3 292 1 297 1 116 1 207 5 355 4 
267 1 273 1 339 1 
267 1 198 1 
243 1 
267 1 14 1 251 1 
267 1 232 1 
267 1 251 1 
150 1 267 3 14 1 339 2 251 1 283 1 
241 1 11 1 359 1 1 1 373 4 176 3 3 1 228 2 42 1 54 1 350 1 17 7 91 3 158 1 182 1 66 2 117 1 
241 1 11 1 359 1 1 1 373 4 176 3 3 1 228 2 42 1 54 1 350 1 17 7 91 3 158 1 182 1 66 2 117 1 
241 1 11 1 359 1 1 1 373 4 176 3 3 1 228 2 42 1 54 1 350 1 17 7 91 3 158 1 182 1 66 2 49 1 117 1 
60 1 17 1 350 1 11 2 373 1 228 1 
359 1 360 1 1 1 3 1 228 2 54 1 315 2 193 2 77 2 241 1 11 1 373 5 176 4 42 1 134 4 135 2 154 1 17 9 350 1 43 1 91 4 158 1 66 3 117 1 
357 1 225 2 358 1 227 1 140 1 143 1 276 1 26 1 332 1 365 1 336 1 234 1 127 1 29 1 105 1 237 1 172 1 282 1 197 1 174 1 218 1 10 1 324 1 90 1 89 2 46 1 115 1 183 1 351 2 208 1 
357 1 225 3 358 1 227 1 308 1 140 2 5 1 143 1 276 1 26 1 332 1 336 1 127 1 29 1 105 1 237 1 282 1 197 1 174 1 218 1 10 1 324 1 90 1 89 2 46 1 115 1 48 1 183 1 351 3 208 1 
357 1 225 2 358 1 227 1 140 2 308 1 5 1 143 1 332 1 26 1 336 1 127 1 29 1 105 1 237 1 282 1 197 1 10 1 324 1 90 1 89 2 46 1 115 1 351 2 208 1 
357 2 267 1 240 1 218 1 358 1 225 1 10 1 119 1 143 2 276 1 332 2 221 1 56 1 336 1 46 1 115 1 59 1 48 1 279 1 351 1 50 1 105 2 251 1 
357 1 225 1 358 1 227 1 5 1 143 1 276 1 26 1 332 1 336 1 234 1 127 1 29 1 105 1 237 1 172 1 174 1 218 1 10 1 324 1 89 2 46 1 115 1 183 1 351 1 208 1 
191 1 
51 1 96 2 139 1 331 5 336 2 334 1 57 2 337 1 192 1 59 1 279 2 240 1 10 2 242 2 12 1 288 2 244 1 348 2 155 1 18 6 115 2 116 1 69 3 207 2 353 1 251 1 71 1 20 2 22 1 209 1 358 1 301 1 303 1 310 1 165 4 166 1 125 1 169 1 317 5 264 2 173 2 266 2 267 1 318 1 268 1 83 1 84 2 85 1 132 1 272 1 45 1 377 1 46 1 93 1 184 2 
266 1 209 1 268 1 318 1 301 1 303 1 12 1 83 1 85 1 331 3 272 1 18 2 165 2 377 1 334 1 144 1 125 1 169 1 93 1 69 1 317 3 353 1 
209 1 20 1 301 1 303 1 331 3 165 3 334 1 125 1 144 1 169 1 317 3 173 1 318 1 268 1 12 1 83 1 85 1 272 1 18 1 377 1 93 1 116 1 69 1 353 1 
209 1 20 1 301 1 303 1 331 3 165 3 334 1 144 1 125 1 169 1 317 3 264 1 173 1 266 1 318 1 268 1 12 1 83 1 85 1 272 1 18 2 377 1 93 1 69 1 116 1 353 1 
20 5 209 1 301 1 96 1 303 1 139 1 306 1 331 5 165 6 334 1 166 1 57 2 144 1 125 1 192 1 168 1 169 1 317 5 264 4 173 4 266 4 318 1 268 1 12 1 83 1 288 2 84 2 85 1 244 1 132 1 348 2 155 1 272 1 156 1 18 7 65 1 376 1 377 1 93 1 207 1 116 5 69 3 184 2 353 1 
96 1 139 1 331 4 334 1 57 2 192 1 12 1 242 2 288 2 244 1 155 1 348 2 18 4 207 1 69 2 116 1 353 1 209 1 22 1 20 2 301 1 303 1 165 4 166 1 125 1 169 1 317 4 264 2 173 2 266 2 268 1 318 1 83 1 84 2 85 1 132 1 272 1 377 1 93 1 184 2 
20 1 209 1 301 1 96 1 303 1 139 1 306 1 331 4 165 4 334 1 166 1 57 2 125 1 192 1 168 1 169 1 317 4 264 2 173 2 266 2 318 1 268 1 12 1 83 1 288 2 84 2 85 1 244 1 132 1 348 2 155 1 272 1 18 4 377 1 376 1 93 1 116 1 69 2 207 1 184 2 353 1 
20 1 209 1 301 1 96 1 303 1 139 1 306 1 331 4 165 4 334 1 166 1 57 2 125 1 192 1 168 1 169 1 317 4 264 2 173 2 266 2 318 1 268 1 12 1 83 1 288 2 84 2 85 1 244 1 132 1 348 2 155 1 272 1 18 4 377 1 376 1 93 1 116 1 69 2 207 1 184 2 353 1 
20 1 209 1 301 1 96 1 303 1 139 1 331 4 278 2 165 4 334 1 166 1 125 1 192 1 168 1 169 1 236 1 317 4 264 2 173 2 266 2 318 1 268 1 242 2 12 1 286 1 83 1 288 2 219 1 85 1 244 1 132 1 272 1 18 4 291 2 377 1 93 1 116 1 69 2 207 1 184 2 353 1 
20 1 209 1 301 1 96 1 303 1 139 1 306 1 331 4 165 5 334 1 166 1 57 2 125 1 192 1 168 1 169 1 317 4 264 3 173 3 266 3 318 1 268 1 12 1 83 1 288 2 84 2 85 1 244 1 132 1 348 2 155 1 272 1 18 5 65 1 376 1 377 1 93 1 116 1 69 2 207 1 184 2 353 1 
20 1 209 1 301 1 96 1 303 1 139 1 306 1 331 4 165 5 334 1 166 1 57 2 125 1 192 1 168 1 169 1 317 4 264 3 173 3 266 3 318 1 268 1 12 1 83 1 288 2 84 2 85 1 244 1 132 1 348 2 155 1 272 1 18 5 65 1 376 1 377 1 93 1 116 1 69 2 207 1 184 2 353 1 
20 1 22 1 209 1 301 1 96 1 303 1 139 1 331 4 278 2 165 4 334 1 166 1 125 1 192 1 169 1 317 4 264 2 173 2 266 2 318 1 268 1 242 2 12 1 83 1 288 2 85 1 219 1 244 1 132 1 272 1 18 4 291 2 377 1 93 1 116 1 69 2 207 1 184 2 353 1 
359 1 275 1 3 1 228 1 54 1 27 1 315 1 170 1 193 1 370 1 77 1 241 1 373 3 176 2 323 1 42 1 134 2 135 1 349 1 17 6 91 3 158 1 273 1 47 2 66 2 117 1 
1 1 275 4 213 1 54 2 188 1 6 1 27 11 55 1 315 2 170 11 193 2 370 1 77 2 78 1 79 1 149 3 81 1 241 1 284 1 39 2 373 8 177 1 176 2 111 2 323 2 134 4 135 2 271 3 112 1 17 14 91 6 47 1 66 1 
358 1 275 1 213 1 121 1 6 1 366 1 336 1 334 1 55 1 125 2 279 1 315 1 128 1 193 1 370 1 146 1 77 1 148 1 267 1 10 1 62 1 373 1 14 1 323 1 290 1 15 1 135 1 134 2 17 2 91 1 44 1 46 1 114 1 47 1 115 1 93 2 274 1 251 1 
137 1 275 7 1 4 53 2 3 1 228 1 5 1 54 3 6 1 55 1 336 3 334 1 279 1 193 3 146 1 148 1 241 3 10 3 284 2 287 1 111 2 14 2 15 1 347 2 17 20 157 2 158 1 115 3 66 4 250 2 117 1 251 2 358 2 359 1 213 1 27 7 366 2 125 3 216 2 315 3 170 7 128 1 370 3 77 3 267 2 36 1 39 2 373 10 176 8 42 1 323 3 134 6 135 3 91 10 44 2 46 2 47 2 93 3 274 2 
358 2 254 2 138 1 213 1 5 1 362 1 215 1 365 1 334 1 336 8 55 1 125 1 279 2 315 2 59 1 101 1 128 1 193 2 146 1 370 2 77 2 148 1 267 3 240 1 10 7 285 1 372 1 373 1 323 2 134 4 135 2 349 1 64 1 17 2 91 1 46 2 115 8 93 1 251 2 
330 1 275 1 54 1 6 1 27 1 334 1 125 1 170 1 315 1 7 1 128 1 193 1 370 1 77 1 148 1 241 1 284 1 39 1 373 1 176 1 111 1 323 1 134 2 135 1 17 3 91 2 66 1 68 1 93 1 
1 1 275 1 373 2 176 1 111 1 323 1 135 1 134 2 54 1 27 1 349 1 17 2 170 1 315 1 193 1 370 1 77 1 299 1 
241 1 284 1 275 1 176 1 323 1 135 1 134 2 27 1 349 1 17 2 91 2 66 1 170 1 315 1 193 1 370 1 77 1 80 1 
275 2 1 1 54 1 27 2 315 1 170 2 193 1 370 1 77 1 241 1 284 1 39 1 373 2 176 2 111 1 323 1 134 2 135 1 349 1 17 4 91 2 66 1 
1 1 275 1 373 2 176 1 111 1 323 1 135 1 134 2 54 1 27 1 17 2 64 1 170 1 315 1 193 1 370 1 77 1 299 1 
241 1 284 1 275 1 176 1 323 1 135 1 134 2 27 1 17 2 64 1 91 2 66 1 170 1 315 1 193 1 370 1 77 1 80 1 
275 2 1 1 54 1 27 2 315 1 170 2 193 1 370 1 77 1 241 1 284 1 39 1 373 2 176 2 111 1 323 1 134 2 135 1 64 1 17 4 91 2 66 1 
241 1 284 1 39 1 1 1 275 2 373 2 176 2 111 1 323 1 135 1 134 2 54 1 27 2 17 4 91 2 66 1 170 2 315 1 193 1 370 1 77 1 
358 1 213 1 366 1 336 1 55 1 125 1 279 1 315 1 193 1 370 1 77 1 267 1 10 1 373 1 14 1 323 1 135 1 134 2 17 2 91 1 44 1 46 1 47 1 115 1 250 1 93 1 274 1 251 1 
252 1 358 1 213 1 75 1 336 1 55 1 125 1 279 1 315 1 193 1 370 1 77 1 267 1 10 1 373 1 14 1 323 1 135 1 134 2 17 2 91 1 44 1 46 1 47 1 115 1 93 1 251 1 300 1 
275 2 1 1 54 1 6 1 27 2 315 1 170 2 193 1 370 1 77 1 241 1 284 1 39 1 373 2 176 2 111 1 323 1 134 2 135 1 17 4 91 2 66 1 
358 1 1 1 275 2 53 1 54 1 27 2 366 1 365 1 336 1 125 1 170 2 315 1 193 1 370 1 77 1 267 1 241 1 284 1 10 1 39 1 373 2 176 2 111 1 14 1 323 1 135 1 134 2 17 4 91 2 44 1 46 1 115 1 66 1 250 1 93 1 274 1 251 1 
330 1 24 1 1 1 275 1 54 1 6 1 27 1 334 1 125 1 315 1 170 1 128 1 193 1 370 1 77 1 148 1 241 1 284 1 39 1 373 2 176 1 111 1 323 1 134 2 135 1 17 3 91 1 68 1 93 1 
160 1 360 1 1 3 212 1 307 2 74 2 54 3 258 1 163 1 368 1 315 2 193 2 77 2 78 1 149 2 79 1 241 3 284 3 39 3 373 9 176 6 111 3 134 4 135 2 271 1 17 19 91 10 159 1 66 3 352 1 
304 1 160 2 360 1 1 2 212 1 307 4 4 1 74 1 54 3 258 1 315 3 193 3 77 3 341 1 79 2 149 2 265 1 241 2 284 2 39 3 373 14 176 4 270 1 111 3 134 6 135 3 271 2 154 2 17 26 91 12 295 1 159 1 66 2 352 2 
359 1 304 1 160 1 360 1 1 4 212 1 3 1 228 1 4 1 307 4 74 1 54 5 258 1 368 1 315 3 193 3 77 3 78 1 341 1 149 4 79 3 265 1 241 5 284 4 39 4 373 20 176 8 270 1 111 4 42 1 134 6 135 3 271 3 154 1 17 41 91 21 158 1 295 1 159 1 67 1 66 4 117 1 352 2 
359 1 304 1 160 1 360 1 1 3 212 1 3 1 228 1 4 1 307 4 74 1 54 5 258 1 368 1 315 4 193 4 77 4 78 1 341 1 149 4 79 3 265 1 241 4 284 3 39 4 373 20 176 7 270 1 111 4 42 1 134 8 135 4 271 3 154 2 17 38 91 18 158 1 295 1 159 1 67 1 66 4 117 1 352 2 
359 1 304 1 160 1 360 1 1 7 212 1 3 1 228 1 4 1 307 4 74 1 54 8 188 2 258 1 315 2 193 2 77 2 78 2 341 1 149 4 79 2 265 1 241 8 284 7 39 7 373 27 176 14 270 1 111 7 42 1 134 4 135 2 271 4 154 1 17 52 91 25 158 1 295 1 159 1 66 7 117 1 352 1 
175 1 327 1 293 1 76 1 123 1 235 1 13 1 145 1 147 1 196 1 
122 1 70 1 
175 1 260 1 327 1 235 1 248 1 145 1 33 1 147 1 196 1 
107 1 229 1 
19 1 185 1 133 1 
20 1 175 1 37 2 13 1 331 1 120 1 309 1 88 1 327 1 293 1 123 1 235 1 205 1 338 1 145 1 317 1 196 1 147 1 
20 1 175 1 37 2 13 1 331 1 120 1 309 1 88 1 327 1 293 1 123 1 235 1 205 1 338 1 145 1 317 1 196 1 147 1 
20 1 175 1 37 2 13 1 331 1 120 1 309 1 88 1 327 1 293 1 123 1 235 1 205 1 338 1 145 1 317 1 196 1 147 1 
107 1 229 1 185 1 
107 1 229 1 185 1 
19 1 133 1 
19 1 185 1 133 1 
113 1 217 1 
331 1 120 1 309 1 231 1 98 1 190 1 122 1 334 2 235 1 125 2 145 1 128 2 217 1 317 1 147 1 196 1 148 2 175 1 37 1 269 1 289 1 63 1 327 1 113 1 47 1 93 2 70 1 
358 1 254 2 138 1 213 1 142 1 6 1 336 2 334 2 55 1 125 2 315 1 193 1 370 1 77 1 34 1 267 1 10 2 372 1 40 1 373 1 323 1 135 1 134 2 17 2 91 1 46 1 247 1 115 2 93 2 251 1 356 1 
174 1 358 1 10 2 227 1 152 1 324 1 5 1 143 1 89 2 26 1 365 1 336 2 46 1 115 2 29 1 136 1 171 1 208 1 237 1 
174 1 10 1 358 1 227 1 152 1 324 1 5 1 143 1 89 2 26 1 336 1 46 1 115 1 29 1 208 1 237 1 223 1 
267 1 240 1 358 1 10 1 119 1 73 1 143 1 336 1 46 1 115 1 279 1 59 1 171 1 251 1 
174 1 10 1 358 1 227 1 152 1 324 1 5 1 143 1 89 2 26 1 336 1 46 1 115 1 29 1 136 1 171 1 208 1 237 1 
0 1 
20 1 96 1 273 1 344 1 207 1 116 1 363 1 
20 2 96 1 139 1 331 1 166 1 57 1 317 1 242 1 84 1 244 1 132 1 348 1 155 1 18 1 207 1 69 1 116 1 
51 1 226 1 96 8 52 1 139 4 331 5 54 2 232 2 336 3 58 1 279 1 339 2 150 1 198 3 241 2 10 3 284 2 342 2 242 12 344 1 111 2 14 3 244 4 347 2 348 6 18 5 115 3 116 2 207 9 69 3 355 6 251 3 20 8 118 1 358 3 302 2 162 2 25 1 363 1 310 2 365 1 262 2 166 4 263 2 367 6 314 2 317 5 267 10 268 2 39 2 132 4 46 4 92 2 329 2 
20 5 51 1 96 5 304 1 162 2 139 2 4 1 331 1 54 2 310 1 263 1 166 2 312 1 367 5 317 1 341 1 149 1 79 1 265 1 241 2 284 2 242 6 39 2 345 1 111 2 244 2 132 2 271 1 348 3 18 1 295 1 69 1 207 8 116 2 355 5 
96 2 3 1 161 1 162 2 139 1 331 1 54 2 334 1 263 1 166 1 125 1 128 1 317 1 148 1 241 1 110 1 83 1 42 1 179 1 244 1 132 1 246 1 376 1 294 1 68 1 93 1 207 2 117 1 
20 1 96 1 344 1 139 1 132 1 244 1 363 1 166 1 116 1 207 1 
20 5 241 2 284 2 96 5 242 10 39 2 111 2 162 2 54 2 347 1 348 5 263 1 367 5 207 5 355 5 
20 1 18 1 116 1 69 1 317 1 331 1 
118 2 51 2 358 1 96 2 139 2 331 3 25 1 310 2 336 4 166 1 337 1 279 2 59 1 280 1 317 3 129 1 267 1 240 1 10 4 151 1 244 2 132 2 18 4 45 1 46 1 115 4 207 2 69 2 251 1 
358 1 366 1 55 1 336 1 334 2 125 3 315 1 279 1 193 1 128 2 370 1 77 1 148 2 267 1 10 1 14 1 323 1 134 2 135 1 17 1 91 1 44 1 294 1 46 1 47 1 115 1 68 2 93 3 250 1 354 1 274 1 251 1 
20 4 51 1 242 4 96 2 228 1 139 1 132 1 244 1 348 2 310 1 166 1 367 2 207 1 116 2 355 2 
35 1 235 1 147 1 
35 1 235 1 147 1 
293 1 113 1 187 1 235 1 147 1 
35 1 235 1 147 1 
235 1 194 1 147 1 
235 1 194 1 147 1 
235 1 194 1 147 1 
235 1 147 1 
145 1 196 1 
241 1 359 1 1 1 373 4 176 3 3 1 228 1 42 1 54 1 135 2 134 4 154 1 17 8 91 4 158 1 66 2 315 2 193 2 117 1 77 2 
241 1 17 6 91 3 359 1 158 1 273 1 373 3 176 2 66 2 3 1 228 1 117 1 42 1 54 1 
241 1 284 1 39 1 1 1 373 2 176 2 111 1 135 1 134 2 54 1 17 4 91 2 66 1 315 1 193 1 77 1 238 1 
241 1 284 1 39 1 1 1 373 3 176 2 111 1 271 1 54 1 17 7 91 4 66 1 78 1 79 1 149 2 
359 1 1 4 3 2 228 1 54 3 188 1 315 2 193 2 102 1 77 2 78 1 149 2 81 1 241 3 284 2 39 2 373 11 176 9 111 2 42 2 271 2 135 2 134 4 154 2 17 23 91 12 158 1 66 5 117 1 
17 1 91 1 149 1 
17 1 373 1 271 1 
241 1 284 1 39 1 1 1 373 3 176 3 111 1 134 2 135 1 54 1 347 1 17 6 91 3 315 1 66 2 193 1 77 1 238 1 
360 1 304 1 1 1 4 1 54 2 315 1 193 1 77 1 149 1 79 1 341 1 265 1 241 2 284 2 39 2 373 6 176 2 111 2 271 1 134 2 135 1 17 12 91 6 295 1 66 1 
241 1 1 1 373 3 176 2 3 1 42 1 54 1 17 6 91 3 66 1 117 1 
359 1 1 1 373 1 176 2 3 1 42 1 135 1 134 2 154 1 17 3 91 2 158 1 66 1 315 1 102 1 193 1 77 1 
241 2 360 1 1 2 373 5 176 5 161 1 3 2 42 2 134 2 135 1 54 2 17 10 91 5 315 1 66 3 193 1 77 1 117 1 
360 1 1 1 373 2 176 1 111 1 135 1 134 2 54 1 17 2 315 1 193 1 77 1 
241 1 284 1 360 1 39 1 1 1 373 2 176 2 111 1 135 1 134 2 54 1 17 4 91 2 66 1 315 1 193 1 77 1 
360 1 1 1 373 1 176 2 3 1 42 1 135 3 134 6 154 1 17 3 91 2 368 1 315 3 66 1 102 1 193 3 77 3 
72 1 359 1 360 1 1 5 3 3 228 1 54 5 368 1 315 5 102 1 193 5 77 5 78 1 149 4 79 1 238 1 241 5 284 3 200 1 39 3 373 16 176 12 111 3 42 3 134 10 135 5 271 3 154 2 17 34 91 18 158 1 66 7 117 2 222 1 
359 1 360 1 3 1 228 1 4 1 54 1 315 1 193 1 77 1 149 1 79 1 241 1 373 4 176 2 42 1 271 1 134 2 135 1 17 8 91 4 158 1 66 2 117 1 
359 1 360 1 1 1 3 1 228 1 4 1 54 2 315 2 193 2 77 2 78 1 149 2 79 1 238 1 241 1 39 1 373 6 176 3 111 1 42 1 134 4 135 2 271 1 17 11 91 5 158 1 66 2 117 1 
359 1 360 1 304 1 1 1 3 1 228 1 4 1 54 3 315 3 193 3 77 3 238 1 341 1 149 1 79 1 265 1 241 3 284 2 39 2 373 9 176 4 111 2 42 1 271 1 134 6 135 3 154 1 17 19 91 10 158 1 295 1 66 3 117 1 
359 1 360 1 304 1 1 2 3 1 228 1 4 1 54 3 315 3 193 3 77 3 238 1 149 1 79 1 341 1 265 1 241 2 284 1 39 2 373 10 176 5 111 2 42 1 271 1 134 6 135 3 154 1 17 17 91 7 158 1 295 1 66 3 117 1 
359 1 360 1 3 1 228 1 4 1 54 1 315 1 193 1 77 1 149 1 79 1 241 1 373 4 176 2 42 1 271 1 134 2 135 1 17 8 91 4 158 1 66 2 117 1 
360 1 304 1 1 1 4 1 54 2 315 1 193 1 77 1 149 1 79 1 341 1 265 1 241 2 284 2 39 2 373 6 176 2 111 2 271 1 134 2 135 1 17 12 91 6 295 1 66 1 
359 1 304 1 360 1 1 2 3 1 228 1 4 1 54 3 315 4 193 4 77 4 341 1 149 1 79 1 238 1 265 1 241 2 284 1 39 2 373 10 176 5 111 2 42 1 134 8 135 4 271 1 154 2 17 18 91 8 158 1 295 1 66 3 117 1 
304 1 360 1 1 3 4 1 54 3 315 4 368 1 193 4 77 4 341 1 149 1 79 1 265 1 241 2 284 2 39 3 373 9 176 6 111 3 134 8 135 4 271 1 154 2 17 16 91 7 295 1 66 3 
241 1 359 1 1 3 373 3 176 6 3 3 42 3 54 1 17 7 91 4 158 2 66 3 117 1 
359 1 304 1 360 1 1 1 3 1 228 1 4 1 54 3 315 4 368 1 193 4 77 4 341 1 149 1 79 1 265 1 241 2 284 1 39 2 373 10 176 4 111 2 42 1 134 8 135 4 271 1 154 2 17 18 91 8 158 1 295 1 66 3 117 1 
272 1 334 1 253 1 125 1 47 1 93 1 298 1 
211 1 253 1 178 1 272 1 164 1 334 1 28 1 125 1 100 1 47 1 93 1 298 1 
267 1 240 1 358 1 10 1 336 1 46 1 273 1 115 1 59 1 279 1 251 1 
267 1 10 1 358 1 14 1 44 1 334 1 336 1 46 1 125 2 47 1 115 1 279 1 128 1 93 2 146 1 148 1 274 1 251 1 
118 1 358 1 303 1 232 1 336 1 334 2 125 2 128 1 146 1 148 2 267 3 10 1 12 1 83 1 14 2 44 1 46 1 47 1 115 1 93 2 329 1 274 1 251 2 
118 1 358 1 303 1 232 1 336 2 334 2 125 2 128 1 146 1 32 1 148 2 267 3 10 2 12 1 83 1 14 2 44 1 46 1 47 1 115 2 93 2 329 1 300 1 251 2 
20 1 239 1 198 1 267 4 118 1 268 1 10 3 358 1 14 1 131 1 331 2 18 1 232 1 336 3 46 1 115 3 279 1 116 1 329 1 317 2 339 1 32 1 251 1 
20 1 198 1 267 4 118 1 268 1 10 3 358 1 14 1 331 2 18 1 232 1 336 3 46 1 92 1 115 3 279 1 116 1 329 1 317 2 339 1 32 1 251 1 
215 1 358 1 10 1 336 1 46 1 115 1 
150 1 267 3 10 6 358 2 285 1 254 1 138 1 14 1 5 1 362 1 215 1 365 1 336 7 126 1 46 3 115 7 279 2 101 1 316 1 195 1 251 2 
358 1 359 1 275 1 53 1 3 1 228 1 54 1 6 1 27 1 365 1 366 1 334 1 336 1 125 2 216 1 170 1 315 2 128 1 193 2 370 2 146 1 77 2 148 1 267 1 241 1 10 1 373 3 176 2 14 1 42 1 323 2 135 2 134 4 17 6 91 3 44 1 158 1 46 1 247 1 47 2 115 1 66 2 93 2 250 1 117 1 274 1 251 1 
20 1 302 1 96 1 139 2 331 3 25 1 363 1 231 1 336 1 262 1 166 2 314 1 279 1 317 3 339 1 198 1 267 2 10 1 268 1 344 1 244 2 132 2 18 2 92 1 115 1 207 1 116 1 69 1 
150 1 267 2 10 2 226 1 358 1 14 1 215 1 365 1 336 2 46 2 115 2 339 1 251 1 
267 1 240 1 371 1 10 4 358 1 365 1 336 4 46 1 115 4 279 1 59 1 32 1 251 1 
267 1 118 1 10 2 358 1 137 1 14 1 261 1 336 2 126 1 46 2 115 2 328 1 316 1 251 1 
89 1 358 1 10 1 336 1 46 1 115 1 279 1 208 1 324 1 237 1 
267 1 10 2 358 1 40 1 138 1 5 1 365 1 336 2 46 1 115 2 251 1 
267 3 118 1 240 1 371 1 10 4 358 2 285 1 138 1 362 1 365 1 336 5 46 2 115 5 59 1 279 1 251 2 
224 1 267 3 118 1 240 1 371 1 10 4 358 2 285 1 138 1 365 1 336 5 46 2 115 5 59 1 279 1 251 2 
267 1 10 1 358 1 14 1 44 1 334 1 336 1 46 1 125 2 47 1 115 1 279 1 128 1 93 2 146 1 148 1 251 1 300 1 
150 1 267 1 118 1 10 1 358 1 14 1 336 1 126 1 46 2 115 1 316 1 195 1 251 1 
320 1 296 1 47 1 380 1 281 1 
20 1 268 1 303 1 12 1 320 2 83 1 325 1 331 2 16 1 346 1 231 1 296 2 47 1 116 1 380 1 317 2 381 1 281 2 353 1 
320 1 142 1 334 1 125 1 93 1 380 1 281 1 34 1 356 1 
380 1 381 1 346 1 
197 1 90 1 273 1 282 1 
197 1 90 1 218 1 225 1 351 1 282 1 276 1 
332 1 351 1 105 1 
197 1 218 1 225 3 108 1 276 1 214 2 90 1 234 1 206 1 351 3 31 1 282 1 
197 1 90 1 218 1 225 2 351 2 140 1 203 1 282 1 276 1 
197 1 199 1 218 1 225 1 276 1 89 1 26 1 234 1 351 1 208 1 340 1 
197 1 218 1 225 1 234 1 351 1 282 1 276 1 
90 1 218 1 225 1 234 1 351 1 282 2 276 1 
197 1 23 1 218 2 225 2 41 1 276 2 180 1 234 1 351 2 282 1 
197 2 199 1 218 1 225 3 186 1 140 2 202 1 374 1 276 1 90 1 234 1 351 3 282 1 
197 1 218 1 225 2 343 1 324 1 140 1 276 1 90 1 89 2 26 1 234 1 29 1 351 2 208 1 282 1 
197 2 199 1 218 2 225 4 203 1 140 2 202 1 276 2 90 1 234 1 351 4 103 1 282 1 
197 1 90 1 218 1 225 1 234 1 351 1 282 1 276 1 
197 3 199 1 218 1 225 4 140 2 202 1 276 1 214 1 90 2 379 1 206 1 31 1 351 4 282 2 
197 1 218 1 225 2 94 1 140 1 276 1 257 1 90 1 333 1 234 1 351 2 282 1 
197 1 218 1 225 3 276 1 214 2 90 1 234 1 206 2 31 1 351 3 9 1 282 1 
197 2 335 2 313 1 361 1 
218 1 225 1 234 1 201 1 351 1 276 1 
197 1 90 1 218 1 225 2 234 1 351 2 140 1 374 1 282 1 276 1 
97 1 
197 1 90 1 218 1 225 1 234 1 351 1 282 1 276 1 
197 1 90 1 218 1 225 3 234 1 351 3 140 1 374 1 282 1 276 1 214 1 
197 1 199 1 379 1 202 1 
197 1 282 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
273 2 91 1 48 3 347 1 229 2 32 1 8 1 231 1 9 1 122 2 97 6 130 4 60 1 190 1 132 1 61 2 223 1 16 9 222 1 341 1 18 2 105 1 225 2 108 2 344 1 226 5 88 9 379 1 
273 2 91 1 48 3 347 1 229 2 32 1 8 1 231 1 9 1 122 2 97 6 130 4 60 1 190 1 132 1 61 2 223 1 16 9 222 1 341 1 18 2 105 1 225 2 108 2 344 1 226 5 88 9 379 1 
273 2 91 1 48 4 347 1 229 2 32 1 8 1 231 1 9 1 122 2 97 7 130 5 60 1 190 1 132 1 61 2 223 1 16 10 222 1 341 1 18 2 105 1 225 2 108 2 344 1 226 6 88 10 379 1 
273 2 91 1 48 2 347 1 229 2 32 1 8 1 231 1 9 1 122 2 97 4 130 3 60 1 190 1 61 2 223 1 16 7 222 1 341 1 18 2 105 1 225 2 108 1 344 1 226 4 88 7 379 1 
273 1 91 1 48 1 130 2 60 1 132 1 61 1 16 4 341 1 229 1 32 1 225 1 108 2 226 3 122 1 88 4 97 3 379 1 
273 1 91 1 170 1 235 1 60 1 347 1 61 1 222 1 16 2 229 1 18 1 32 1 226 1 122 1 88 2 228 1 
91 1 48 1 130 1 60 1 61 2 16 3 18 1 32 1 9 1 226 2 122 2 88 3 97 1 
273 1 91 1 48 3 251 1 229 1 32 1 9 1 97 7 122 2 55 1 130 4 60 1 190 1 61 2 132 1 16 9 341 1 18 1 225 1 108 2 344 1 226 5 88 9 379 1 
273 1 91 1 48 3 251 1 229 1 32 1 9 1 97 7 122 2 55 1 130 4 60 1 190 1 61 2 132 1 16 9 341 1 18 1 225 1 108 2 344 1 226 5 88 9 379 1 
99 1 295 1 126 1 
335 1 369 2 126 1 
174 2 100 1 351 2 149 2 376 2 367 2 331 2 75 1 
178 1 276 1 70 2 253 1 28 1 300 1 349 1 75 1 30 2 119 1 351 2 149 3 356 1 303 1 151 1 78 1 152 2 331 2 79 1 217 1 100 1 129 1 312 1 188 2 103 1 367 2 133 1 368 1 41 1 224 2 174 2 192 1 160 1 246 1 376 3 198 1 89 1 
174 1 100 1 351 1 326 1 149 1 376 1 367 1 221 1 331 1 257 1 
141 1 189 1 338 1 367 1 38 1 267 1 326 1 149 1 245 1 376 1 283 1 295 1 35 1 126 1 
141 2 338 1 367 1 38 1 174 1 351 1 326 1 149 1 245 1 376 1 283 2 295 1 331 1 35 1 126 1 
20 1 315 1 141 1 283 1 324 1 
321 1 20 1 354 1 141 2 283 2 324 1 295 1 126 1 
20 1 141 1 283 1 
100 1 141 1 366 1 324 1 367 1 221 1 257 1 174 1 351 1 326 1 149 1 376 1 283 1 331 1 
126 1 
321 1 20 1 141 2 283 2 324 1 295 1 126 1 68 1 
90 1 69 1 321 1 141 5 324 2 239 1 117 1 52 1 240 2 20 2 211 2 269 1 195 2 283 5 295 1 56 1 272 1 307 1 126 1 
178 1 333 1 312 1 264 1 367 1 368 1 41 1 349 1 30 1 224 1 119 1 174 1 192 1 351 1 87 1 149 2 151 1 376 2 152 1 217 1 
99 1 75 1 
233 1 367 2 40 1 75 2 174 1 351 1 149 2 376 2 331 1 
19 1 87 1 294 1 
178 1 203 1 312 1 368 1 349 1 41 1 75 1 30 1 224 1 119 1 192 1 149 1 151 1 376 1 152 1 217 1 
333 2 233 1 264 1 367 5 267 1 75 1 174 4 351 4 149 5 21 1 376 5 331 1 67 1 332 1 
174 2 351 2 326 1 149 2 376 2 367 2 221 1 309 1 
174 3 333 1 351 3 149 3 376 3 367 3 331 1 75 1 
174 1 351 1 326 1 149 1 376 1 367 1 221 1 
174 1 351 1 233 1 326 1 149 1 376 1 367 1 40 1 331 1 
178 1 141 1 276 1 70 1 253 1 300 1 349 1 75 1 30 1 119 1 351 3 326 1 149 4 151 1 78 1 152 1 283 1 331 2 79 1 217 1 35 1 333 1 100 1 101 1 233 1 129 1 312 1 188 2 264 1 338 1 367 3 38 1 133 1 368 1 41 1 224 1 174 3 192 1 160 1 245 1 246 1 376 4 199 1 89 1 
174 1 333 1 351 1 149 2 21 1 376 2 367 2 75 1 267 1 
333 2 233 1 101 1 141 1 264 1 338 1 367 3 38 1 27 1 174 3 351 3 326 1 149 3 245 1 376 3 283 1 331 1 35 1 126 1 
333 1 233 1 367 2 174 2 351 2 149 2 87 1 376 2 294 1 331 1 
178 1 312 1 368 1 349 1 41 1 75 1 30 1 224 1 119 1 192 1 149 1 151 1 376 1 152 1 217 1 
178 1 312 1 368 1 349 1 75 1 30 1 224 1 119 1 192 1 149 1 270 1 376 1 152 1 177 1 217 1 
23 1 346 1 70 4 28 2 120 1 78 1 358 1 79 1 215 1 37 1 129 1 188 2 133 1 342 1 372 1 17 1 266 1 19 2 158 1 160 1 87 2 246 1 294 2 89 2 
174 1 351 1 326 1 149 1 376 1 38 1 367 1 309 1 
182 1 66 1 
182 1 66 1 
181 1 362 1 
181 1 362 1 
181 1 362 1 
182 1 250 1 66 1 
182 1 250 1 66 1 
373 1 182 1 66 1 
181 1 362 1 182 2 323 1 3 1 66 2 
182 1 250 1 66 1 
182 1 66 1 370 1 
182 1 66 1 370 1 
182 1 66 1 370 1 
262 1 248 1 285 1 218 1 141 1 71 1 131 1 367 2 238 1 73 1 299 1 191 1 75 1 373 1 174 2 241 1 182 1 351 2 149 2 357 1 376 2 110 1 283 1 66 1 
285 2 248 1 218 2 141 2 323 1 238 2 73 3 7 1 53 1 182 2 184 1 110 2 227 1 66 2 283 2 162 1 153 2 216 1 126 1 
273 1 225 1 229 1 
273 1 229 1 228 1 
169 1 273 3 225 2 4 1 29 1 228 1 
169 1 273 2 225 1 137 1 4 1 228 1 
169 2 273 2 225 1 4 1 228 1 
69 2 321 1 141 5 346 1 166 2 71 1 324 4 325 1 352 1 211 1 34 2 358 1 283 5 13 1 56 1 126 2 335 1 59 2 171 1 290 1 342 1 172 1 369 3 239 3 191 1 266 1 240 1 242 1 241 1 20 1 195 1 295 1 
90 1 69 6 321 1 141 9 275 1 346 3 324 7 95 1 352 1 211 2 34 6 358 3 283 9 56 1 260 5 126 5 186 1 284 1 335 3 59 6 236 1 82 1 171 3 290 2 342 3 369 9 239 8 266 3 240 2 241 4 242 2 20 6 315 5 195 2 295 1 
90 1 69 2 141 3 346 1 166 1 324 2 325 1 211 1 34 2 358 1 13 1 283 3 126 3 335 2 59 2 290 1 171 1 342 1 239 3 369 4 266 1 240 1 242 1 241 1 195 1 295 1 
90 1 69 4 141 4 346 2 166 2 324 3 325 1 95 1 211 1 34 4 358 2 283 4 13 1 126 4 335 3 59 4 236 1 82 1 290 1 171 2 342 2 369 7 239 5 266 2 240 1 242 1 241 2 195 1 295 1 
119 1 99 1 115 1 
119 1 72 1 
159 1 
119 1 178 1 312 1 
119 1 5 1 
119 1 178 1 
119 3 178 1 364 1 115 2 312 1 15 1 
164 1 0 1 70 7 28 4 83 1 266 1 350 1 158 3 268 1 106 2 148 1 280 1 176 1 358 1 197 1 215 2 89 3 
164 1 0 1 70 7 28 4 83 1 266 1 350 1 158 3 268 1 106 2 148 1 280 1 176 1 358 1 197 1 215 2 89 3 
164 1 0 1 70 7 28 4 83 1 266 1 76 1 350 1 158 3 268 1 106 2 148 1 280 1 176 1 358 1 197 1 215 2 89 3 
164 2 0 1 346 3 70 31 28 16 93 1 118 1 350 2 230 4 148 1 280 2 78 1 358 4 215 5 79 1 288 1 188 2 171 3 133 1 342 3 83 1 62 3 266 4 84 1 158 10 268 2 85 1 106 3 160 1 176 5 197 1 378 1 201 1 89 15 
164 1 0 1 143 1 70 9 28 5 93 1 350 1 280 1 78 2 358 1 79 2 215 3 188 4 133 2 83 1 266 1 158 4 268 1 106 2 160 2 176 1 197 1 111 1 89 4 
273 2 91 1 24 1 229 1 74 1 29 1 30 1 32 1 302 1 167 1 281 1 152 1 97 1 122 1 308 1 217 1 361 1 60 1 61 1 16 2 368 1 224 1 18 1 225 1 193 1 86 1 375 1 226 1 88 2 228 1 
273 2 91 1 229 1 29 1 74 1 30 1 32 1 302 1 355 1 167 1 281 1 152 1 122 1 97 2 308 1 217 1 39 1 61 1 16 3 368 1 224 1 18 1 225 1 193 1 243 1 86 1 375 1 226 1 88 3 228 1 
273 2 91 1 74 1 29 1 229 1 30 1 32 1 302 1 167 1 152 1 97 2 217 1 39 1 16 2 368 1 224 1 18 1 193 1 225 1 243 1 86 1 375 1 226 1 88 2 228 1 
178 1 144 1 254 1 179 1 74 2 349 1 30 1 119 1 302 2 355 1 152 1 122 1 217 1 261 1 58 1 61 1 368 1 16 1 224 1 18 2 193 2 196 1 88 1 
273 2 24 1 229 1 74 1 29 1 30 1 302 1 167 1 281 1 152 1 122 1 308 1 217 1 60 1 39 1 61 1 16 1 368 1 224 1 18 1 225 1 193 1 86 1 375 1 88 1 228 1 
65 1 
178 1 321 3 141 5 140 1 47 1 144 1 180 2 96 2 326 1 149 1 152 2 283 5 56 1 335 2 334 1 155 2 102 4 287 1 189 1 338 1 290 1 339 1 239 2 240 1 20 6 195 1 245 1 196 1 295 1 113 2 297 1 69 2 247 1 348 2 349 2 30 2 258 1 119 1 211 1 305 2 125 1 217 1 35 1 126 2 310 1 219 1 81 1 367 1 38 1 368 1 369 2 224 2 267 1 271 2 376 1 
297 1 247 1 321 1 102 2 141 3 140 1 219 1 189 1 338 1 38 1 367 1 339 1 267 1 20 2 96 1 326 1 149 1 245 1 376 1 283 3 35 1 68 1 
297 1 247 1 321 1 102 3 141 3 140 1 219 1 189 1 338 1 38 1 367 1 339 1 267 1 180 1 20 1 326 1 149 1 245 1 376 1 283 3 295 1 35 1 68 1 126 1 
297 1 247 1 321 1 140 1 141 3 180 1 96 1 326 1 149 1 305 1 283 3 35 1 126 1 102 3 219 1 189 1 338 1 367 1 38 1 339 1 267 1 20 2 245 1 376 1 295 1 68 1 
321 3 141 5 140 1 47 1 146 1 180 4 96 4 326 1 149 1 283 5 154 1 56 1 335 2 155 2 102 6 189 1 338 1 339 1 239 1 240 1 20 7 245 1 195 1 295 5 68 1 297 1 113 2 247 1 69 1 348 2 77 1 211 1 305 4 35 1 126 5 263 1 219 1 81 1 313 1 38 1 367 1 267 1 376 1 271 2 
113 2 297 1 69 1 247 1 321 2 140 1 141 4 47 1 348 2 180 2 96 2 211 1 326 1 149 1 305 2 283 4 56 1 125 1 35 1 126 2 335 2 155 2 102 4 219 1 189 1 81 1 338 1 367 1 38 1 339 1 369 2 239 1 267 1 240 1 20 4 195 1 245 1 271 2 376 1 295 1 
113 2 297 1 69 1 247 1 321 2 140 1 141 4 47 1 146 1 348 2 180 2 77 1 96 2 326 1 211 1 149 1 305 2 283 4 56 1 35 1 126 1 335 2 155 2 102 4 219 1 81 1 189 1 338 1 313 1 367 1 38 1 339 1 239 1 267 1 240 1 20 4 245 1 195 1 271 2 376 1 295 1 
113 2 297 1 69 1 247 1 321 2 140 1 141 4 47 1 146 1 348 2 180 2 77 1 96 2 326 1 211 1 149 1 305 2 283 4 56 1 35 1 126 1 335 2 155 2 102 4 219 1 81 1 189 1 338 1 313 1 367 1 38 1 339 1 239 1 267 1 240 1 20 4 245 1 195 1 271 2 376 1 295 1 
113 2 297 1 69 1 247 1 321 2 140 1 141 4 47 1 146 1 348 2 180 2 210 2 96 2 326 1 211 1 149 1 328 1 329 1 305 2 283 4 56 1 35 1 126 1 336 1 102 4 219 1 189 1 338 1 367 1 38 1 339 1 369 2 239 1 267 1 240 1 20 4 245 1 195 1 376 1 295 1 296 2 
113 2 297 1 69 1 247 1 321 2 140 1 141 4 47 1 146 1 348 2 180 3 77 1 96 3 211 1 326 1 149 1 305 3 283 4 56 1 154 1 35 1 126 1 335 2 155 2 102 5 219 1 81 1 189 1 338 1 313 1 367 1 38 1 339 1 239 1 267 1 240 1 20 5 195 1 245 1 271 2 376 1 295 1 
113 2 297 1 69 1 247 1 321 2 140 1 141 4 47 1 146 1 348 2 180 3 77 1 96 3 211 1 326 1 149 1 305 3 283 4 56 1 154 1 35 1 126 1 335 2 155 2 102 5 219 1 81 1 189 1 338 1 313 1 367 1 38 1 339 1 239 1 267 1 240 1 20 5 195 1 245 1 271 2 376 1 295 1 
113 2 297 1 69 1 247 1 321 2 140 1 141 4 47 1 348 2 180 2 210 2 96 2 211 1 326 1 149 1 328 1 305 2 283 4 56 1 125 1 35 1 126 1 102 4 219 1 189 1 338 1 367 1 38 1 339 1 369 2 239 1 267 1 240 1 20 4 195 1 245 1 376 1 295 1 296 2 
0 1 70 6 28 3 75 2 280 1 78 1 358 1 79 1 215 2 99 1 37 1 129 1 188 2 133 1 83 1 266 1 158 2 19 1 268 1 106 1 160 1 87 1 246 1 197 1 294 1 89 3 
346 1 70 14 6 1 28 8 300 1 75 1 118 1 230 3 78 2 358 1 123 1 215 1 79 2 129 2 188 4 103 1 171 2 133 2 342 2 62 3 266 2 84 1 158 2 19 11 160 2 343 1 87 11 246 1 161 1 176 1 294 4 163 1 89 6 
178 1 203 1 70 2 28 1 349 1 300 1 75 1 30 1 119 1 351 1 149 2 151 1 33 1 152 1 78 1 79 1 217 1 333 1 286 1 129 1 312 1 188 2 264 1 367 1 103 1 133 1 368 1 41 1 135 1 224 1 174 1 192 1 160 1 246 1 161 1 376 2 294 1 89 1 
70 1 349 1 300 1 30 1 351 1 149 1 78 1 152 1 79 1 333 1 129 1 188 2 264 1 367 1 133 1 224 1 174 1 160 1 175 1 246 1 161 1 376 1 89 1 
178 2 144 1 206 1 70 2 28 1 349 2 300 1 30 8 119 3 351 1 149 1 303 2 282 1 152 7 78 2 79 2 217 2 124 1 361 1 37 1 333 1 337 1 156 1 129 2 187 1 188 4 367 1 103 1 39 1 133 2 368 2 224 8 174 1 160 2 345 1 246 2 376 1 196 1 89 1 
346 1 70 3 28 1 351 1 279 1 149 1 78 1 358 1 331 1 215 1 79 1 233 1 129 1 188 2 367 1 171 1 133 1 342 1 266 1 174 1 158 1 19 1 160 1 87 1 246 1 161 1 376 1 294 1 89 2 
37 1 129 1 188 2 70 2 133 1 28 2 342 1 372 1 266 1 158 1 19 1 160 1 87 1 246 1 176 1 78 1 294 1 79 1 
37 1 129 1 346 1 188 2 70 2 133 1 17 1 158 1 19 1 160 1 87 1 246 1 78 1 358 1 294 1 215 1 79 1 89 2 
346 1 70 4 28 2 78 1 358 1 79 1 215 1 37 1 129 1 188 2 171 1 133 1 342 1 266 1 19 2 158 2 160 1 87 2 246 1 176 1 294 2 89 2 
129 1 188 2 70 2 133 1 28 2 342 1 372 1 266 1 158 1 19 1 160 1 87 1 246 1 176 1 78 1 294 1 79 1 124 1 
129 1 346 1 188 2 70 2 133 1 17 1 158 1 19 1 160 1 87 1 246 1 78 1 358 1 294 1 215 1 79 1 124 1 89 2 
346 1 70 4 28 2 78 1 358 1 79 1 215 1 124 1 129 1 188 2 171 1 133 1 342 1 266 1 19 2 158 2 160 1 87 2 246 1 176 1 294 2 89 2 
346 1 129 1 188 2 70 4 171 1 133 1 28 2 342 1 266 1 158 2 19 2 160 1 87 2 246 1 176 1 78 1 358 1 294 2 215 1 79 1 89 2 
178 1 70 2 253 1 28 1 349 1 300 1 75 1 30 1 119 1 149 1 151 1 152 1 78 1 79 1 217 1 129 1 312 1 188 2 103 1 133 1 368 1 41 1 224 1 192 1 160 1 246 1 376 1 89 1 
178 1 70 2 28 1 147 1 349 1 300 1 75 1 30 1 119 1 149 1 152 1 78 1 79 1 217 1 129 1 312 1 188 2 103 1 133 1 368 1 224 1 192 1 160 1 270 1 246 1 376 1 177 1 89 1 
346 1 70 4 28 2 78 1 358 1 79 1 215 1 129 1 188 2 171 1 133 1 342 1 266 1 19 2 158 2 160 1 87 2 246 1 161 1 176 1 294 2 89 2 
178 1 346 1 49 1 70 4 253 1 28 2 30 1 119 1 149 1 151 1 152 1 78 1 358 1 215 1 79 1 217 1 361 1 129 1 312 1 188 2 171 1 133 1 342 1 368 1 41 1 266 1 224 1 158 2 19 2 192 1 160 1 87 2 246 1 176 1 376 1 294 2 89 2 
346 1 70 3 28 2 351 1 149 1 78 1 358 1 331 1 79 1 233 1 129 1 188 2 367 1 171 1 133 1 342 1 266 1 174 1 158 1 19 1 160 1 87 1 246 1 161 1 176 1 376 1 200 1 294 1 89 1 
0 1 142 1 346 4 204 1 252 1 70 41 93 1 28 20 118 1 230 4 301 1 327 1 280 1 10 2 78 3 330 1 12 1 358 5 215 4 79 3 234 1 188 6 171 4 133 3 342 4 371 1 83 1 62 3 266 5 84 3 158 8 268 1 106 1 316 1 160 3 194 1 22 1 109 1 44 4 176 4 197 1 111 1 89 21 
0 1 142 1 346 3 204 1 252 1 70 38 93 2 28 20 118 1 230 4 301 1 327 1 280 1 10 2 78 4 330 1 12 1 358 4 215 4 79 4 234 1 188 8 171 4 133 4 342 4 371 1 83 1 62 3 266 5 84 3 158 7 268 1 106 1 316 1 160 4 194 1 22 1 109 1 44 4 176 3 197 1 111 1 89 18 
0 1 142 1 346 7 204 1 70 52 93 1 28 27 118 2 230 4 301 1 327 1 280 1 10 1 78 2 12 1 358 8 123 2 215 7 79 2 234 1 188 4 171 7 133 2 342 7 371 1 83 1 62 4 266 8 84 2 158 14 268 1 106 1 316 1 160 2 194 1 22 1 109 1 44 4 176 7 197 1 111 1 89 25 
142 1 346 3 204 1 252 1 70 19 26 1 28 9 118 1 230 2 10 1 78 2 358 3 215 3 79 2 188 4 171 3 133 2 342 3 371 2 62 1 266 3 84 1 158 6 160 2 194 1 22 1 44 2 176 3 111 1 89 10 
142 1 346 2 204 2 70 26 93 2 28 14 230 2 301 1 327 1 10 2 78 3 358 2 12 1 215 2 79 3 234 1 188 6 171 3 133 3 342 3 371 1 62 2 266 3 158 4 84 2 316 1 160 3 194 1 22 1 109 1 44 4 176 2 111 1 89 12 
285 1 218 1 182 1 323 1 184 1 110 1 66 1 162 1 238 1 320 1 
373 1 357 1 
285 1 218 1 182 1 374 1 110 1 66 1 94 1 238 1 259 1 
250 1 50 1 
3 1 256 1 370 1 
248 1 285 1 218 1 141 1 323 1 238 1 73 2 7 1 182 1 184 1 110 1 227 1 283 1 66 1 162 1 153 1 216 1 126 1 
248 1 285 1 218 1 141 1 323 1 238 1 73 2 7 1 182 1 184 1 110 1 227 1 283 1 66 1 162 1 153 1 216 1 126 1 
248 1 285 1 218 1 141 1 323 1 238 1 73 2 7 1 182 1 184 1 110 1 227 1 283 1 66 1 162 1 153 1 216 1 126 1 
3 1 250 1 50 1 
3 1 250 1 50 1 
256 1 370 1 
3 1 256 1 370 1 
262 1 299 1 
141 1 71 1 324 1 73 1 299 1 75 1 182 1 351 2 149 2 357 1 283 1 153 1 216 1 262 1 285 1 232 1 218 1 131 1 367 2 238 1 191 1 373 1 174 2 241 1 376 2 110 1 66 1 
178 1 139 1 116 1 70 2 28 1 300 1 30 2 119 1 149 2 303 2 78 1 152 2 79 1 217 1 156 1 129 1 187 1 188 2 367 2 103 1 133 1 368 1 224 2 292 1 244 1 43 1 160 1 246 1 161 1 376 2 89 1 
273 2 361 1 365 1 39 1 340 1 368 1 229 1 29 1 74 1 30 2 224 2 225 1 167 1 375 1 152 2 213 1 308 1 228 1 217 1 
273 2 25 1 39 1 368 1 229 1 29 1 74 1 30 1 224 1 225 1 167 1 375 1 152 1 213 1 308 1 228 1 217 1 
178 1 365 1 144 1 368 1 74 1 349 1 30 1 224 1 119 1 152 1 196 1 57 1 217 1 261 1 
273 2 365 1 39 1 340 1 368 1 229 1 29 1 74 1 30 1 224 1 225 1 167 1 375 1 152 1 213 1 308 1 228 1 217 1 
291 1 
52 1 99 1 69 1 295 1 307 1 239 1 126 1 
69 1 321 1 141 1 211 1 283 1 56 1 126 2 335 1 155 1 81 1 239 1 369 1 240 1 20 1 195 1 271 1 295 1 
178 3 321 3 141 5 5 2 92 2 51 1 52 1 150 2 152 3 283 5 56 4 335 6 59 6 290 2 237 2 342 2 239 9 240 4 20 5 195 4 245 2 295 2 69 8 165 1 249 2 115 2 346 2 207 2 72 3 349 1 30 3 258 1 119 10 353 1 211 4 34 6 358 2 307 1 217 3 360 2 126 8 361 1 127 2 364 1 312 3 80 1 171 2 368 4 265 2 369 12 224 3 266 2 42 2 318 1 
69 5 321 1 141 1 346 2 207 1 92 2 258 1 230 1 301 1 327 1 211 2 34 5 12 1 358 2 283 1 56 2 126 5 335 3 234 1 59 5 290 1 171 2 104 1 342 2 369 6 239 8 62 1 266 2 240 2 84 1 20 1 195 2 109 1 45 1 295 2 
69 2 0 1 141 1 207 1 92 2 257 1 77 1 351 1 326 1 211 1 149 1 280 1 11 1 358 1 283 1 56 1 331 1 100 1 366 1 367 1 221 1 239 2 266 2 240 1 174 1 268 1 195 1 376 1 
69 1 239 1 240 1 52 1 211 1 195 1 56 1 295 1 307 1 126 1 
69 5 335 5 346 2 59 5 207 1 92 2 171 2 265 1 342 2 369 10 239 5 266 2 34 5 358 2 126 5 
321 1 20 1 141 1 283 1 295 1 126 1 
90 1 178 1 69 2 321 2 141 3 144 1 255 1 51 1 349 2 30 4 119 1 258 2 211 2 152 4 283 3 56 1 217 1 310 1 287 1 290 2 368 1 239 2 224 4 240 2 20 4 195 2 196 1 377 1 318 2 
178 1 276 1 70 1 253 1 300 1 349 1 75 1 30 1 119 1 351 2 149 3 151 1 78 1 152 1 331 2 79 1 217 1 100 1 129 1 312 1 188 2 367 2 133 1 368 1 41 1 224 1 174 2 192 1 160 1 246 1 376 3 89 1 
335 2 69 2 59 2 290 1 369 4 239 1 240 1 258 1 106 1 211 1 195 1 34 2 56 1 295 2 126 4 
285 1 218 1 212 1 
285 1 218 1 212 1 
262 1 285 1 218 1 107 1 162 1 
285 1 218 1 212 1 
14 1 285 1 218 1 
14 1 285 1 218 1 
14 1 285 1 218 1 
285 1 218 1 
182 1 66 1 
0 1 70 8 28 4 230 1 327 1 280 1 78 1 358 1 79 1 215 2 188 2 133 1 83 1 62 1 266 1 84 1 158 2 268 1 106 1 160 1 197 1 111 1 89 4 
0 1 70 11 28 6 118 1 230 2 327 1 280 1 78 2 358 1 215 2 79 2 128 1 188 4 171 1 133 2 342 1 83 1 62 1 266 2 84 1 158 3 268 1 106 1 160 2 176 1 197 1 111 1 89 5 
0 1 346 2 70 19 28 9 93 1 230 1 301 1 327 1 280 1 78 3 12 1 358 3 79 3 215 3 234 1 128 1 188 6 171 2 133 3 342 2 83 1 62 1 266 3 84 1 158 4 268 1 106 1 160 3 109 1 176 1 197 1 111 1 89 10 
0 1 346 1 70 17 93 1 28 10 230 1 301 1 327 1 280 1 78 3 12 1 358 2 79 3 215 3 234 1 128 1 188 6 171 2 133 3 342 2 83 1 62 1 266 3 84 1 158 5 268 1 106 1 160 3 109 1 176 2 197 1 111 1 89 7 
0 1 70 8 28 4 230 1 327 1 280 1 78 1 358 1 79 1 215 2 188 2 133 1 83 1 62 1 266 1 84 1 158 2 268 1 106 1 160 1 197 1 111 1 89 4 
346 2 70 12 28 6 230 1 301 1 327 1 78 1 12 1 358 2 79 1 215 1 234 1 188 2 171 2 133 1 342 2 62 1 266 2 84 1 158 2 160 1 109 1 176 1 111 1 89 6 
0 1 346 1 70 18 28 10 93 2 230 1 301 1 327 1 280 1 78 4 12 1 358 2 79 4 215 3 234 1 128 1 188 8 171 2 133 4 342 2 83 1 62 1 266 3 84 1 158 5 268 1 106 1 160 4 109 1 176 2 197 1 111 1 89 8 
346 2 70 16 252 1 28 9 93 2 230 1 301 1 327 1 78 4 12 1 358 2 79 4 215 3 234 1 188 8 171 3 133 4 342 3 62 1 266 3 84 1 158 6 160 4 109 1 176 3 111 1 89 7 
0 1 70 7 28 3 83 2 266 1 158 6 268 3 280 3 176 3 358 1 197 1 215 3 89 4 
0 1 346 1 70 18 252 1 28 10 93 2 230 1 301 1 327 1 280 1 78 4 12 1 358 2 79 4 215 3 234 1 188 8 171 2 133 4 342 2 83 1 62 1 266 3 84 1 158 4 268 1 106 1 160 4 109 1 176 1 197 1 111 1 89 8 
0 1 188 4 70 8 28 4 133 2 93 1 83 1 266 1 158 3 268 1 106 1 160 2 280 1 176 1 78 2 358 1 197 1 215 2 79 2 89 4 
99 1 0 1 70 6 28 3 83 1 266 1 158 2 268 1 106 1 280 1 197 1 358 1 215 2 89 3 
346 1 128 1 188 2 70 4 171 1 133 1 28 2 342 1 266 1 158 2 160 1 78 1 176 1 358 1 215 1 79 1 89 2 
346 1 70 7 171 1 28 3 342 1 62 1 118 1 266 1 230 2 84 1 158 2 176 1 358 1 215 1 89 4 
0 1 114 1 346 2 70 23 28 11 93 2 118 1 230 2 280 2 78 2 358 3 215 5 123 1 79 2 188 4 171 2 133 2 342 2 83 1 62 2 266 3 158 9 268 2 106 1 160 2 176 4 197 1 163 1 89 12 
230 1 70 1 89 1 
70 1 28 1 62 1 
128 1 346 1 188 2 70 6 171 1 133 1 28 3 265 1 342 1 266 1 158 3 160 1 78 1 176 1 358 1 79 1 215 2 89 3 
346 2 70 12 28 6 230 1 301 1 327 1 78 1 12 1 358 2 79 1 215 1 234 1 188 2 171 2 133 1 342 2 62 1 266 2 84 1 158 2 160 1 109 1 176 1 111 1 89 6 
0 1 70 6 28 3 266 1 158 2 268 1 280 1 176 1 358 1 215 1 89 3 
114 1 188 2 70 3 28 1 93 1 133 1 83 1 158 2 268 1 160 1 280 1 176 1 78 1 197 1 215 1 79 1 89 2 
0 1 188 2 70 10 133 1 28 5 266 2 158 5 268 2 160 1 280 2 78 1 11 1 176 2 358 2 111 1 79 1 215 3 89 5 
188 2 70 2 133 1 28 2 342 1 266 1 158 1 160 1 78 1 176 1 111 1 79 1 
346 1 188 2 70 4 171 1 133 1 28 2 342 1 266 1 158 2 160 1 78 1 176 1 358 1 111 1 215 1 79 1 89 2 
114 1 188 6 252 1 70 3 93 1 133 3 28 1 158 2 268 1 160 3 280 1 78 3 176 1 111 1 79 3 215 1 89 2 
0 2 114 1 346 3 252 1 70 34 93 2 28 16 118 1 230 4 280 3 78 5 358 5 79 5 215 7 128 1 188 10 171 3 133 5 342 3 83 1 62 3 266 5 84 1 158 12 268 3 85 1 106 1 160 5 176 5 197 1 111 1 378 1 201 1 89 18 
149 1 21 1 376 1 317 1 367 1 75 1 267 1 
208 1 367 1 298 1 75 1 267 1 183 1 149 1 21 1 376 1 317 1 98 1 112 1 
119 1 178 1 99 1 144 1 196 1 152 1 368 1 217 1 349 1 224 1 30 1 
178 1 333 1 312 1 367 1 368 1 349 1 41 1 75 1 30 1 224 1 119 1 174 1 192 1 351 1 149 2 376 2 152 1 217 1 
178 2 5 1 75 1 30 1 119 3 351 1 326 1 149 2 152 1 217 1 35 1 360 1 333 1 312 2 367 2 38 1 368 1 41 1 224 1 174 2 192 1 376 2 318 1 
178 2 5 1 75 1 30 2 31 1 119 3 351 1 326 1 149 2 152 2 217 1 35 1 360 1 333 1 312 2 367 2 38 1 368 1 224 2 174 2 192 1 376 2 318 1 177 1 
178 1 141 2 115 1 5 1 72 1 209 1 349 1 30 3 31 1 119 4 152 3 283 2 217 1 360 1 126 1 312 1 368 1 224 3 314 1 20 1 245 1 318 1 295 1 
178 1 141 2 115 1 312 1 5 1 368 1 72 1 349 1 30 3 224 3 31 1 119 4 20 1 245 1 150 1 152 3 283 2 295 1 318 1 217 1 126 1 360 1 
337 1 152 1 368 1 217 1 224 1 30 1 
178 2 361 1 1 1 337 1 364 1 156 1 312 1 206 1 39 1 134 1 368 3 349 2 30 7 224 7 119 3 293 1 303 1 345 1 282 1 152 6 217 2 
178 1 0 1 49 1 70 6 253 1 28 3 75 2 30 1 119 1 351 1 280 1 149 2 151 1 78 2 152 1 358 1 215 2 79 2 217 1 333 1 361 1 129 2 312 1 188 4 367 1 133 2 368 1 83 1 173 1 41 1 266 1 224 1 174 1 19 1 158 2 192 1 268 1 106 1 244 1 160 2 87 1 246 2 161 1 376 2 197 1 294 1 89 3 
69 1 321 1 141 3 249 1 115 1 324 1 72 1 51 1 349 1 30 1 52 1 119 2 211 2 150 1 152 1 283 3 56 2 307 1 126 1 237 1 239 1 224 1 240 2 42 1 20 2 195 2 245 1 295 1 
178 1 361 1 337 1 364 1 115 1 312 1 80 1 368 2 30 2 224 2 119 2 152 2 217 1 
178 1 361 1 144 1 368 1 349 1 30 4 224 4 31 1 119 1 152 4 196 1 217 1 138 1 
178 1 1 1 312 1 289 1 134 1 368 2 30 2 224 2 119 1 152 2 359 1 318 1 319 1 217 1 
273 1 167 1 152 1 368 1 229 1 228 1 217 1 349 1 224 1 30 1 
178 1 361 1 156 1 116 1 39 1 368 1 30 2 224 2 119 1 152 2 217 1 
178 2 361 1 156 1 144 1 206 1 368 2 349 1 30 5 224 5 119 3 345 1 196 1 152 4 318 1 217 2 138 1 
178 2 361 1 2 1 156 1 144 1 206 1 368 2 349 1 30 5 224 5 119 3 196 1 152 4 318 1 217 2 138 1 
178 1 333 1 312 1 367 1 368 1 349 1 75 1 30 1 224 1 119 1 174 1 192 1 351 1 149 2 376 2 152 1 177 1 217 1 
178 1 1 1 364 1 312 1 134 1 368 2 30 1 224 1 119 1 293 1 152 1 318 1 217 1 
220 1 54 1 278 1 157 1 75 1 
101 1 141 2 322 1 220 2 277 1 338 1 38 1 324 1 278 2 157 2 75 1 326 1 245 1 54 1 283 2 295 1 35 1 185 1 126 1 
139 1 292 1 43 1 149 1 376 1 367 1 54 1 278 1 157 1 
277 1 54 1 185 1 
99 1 32 1 91 1 226 1 
32 1 91 1 226 1 88 1 122 1 61 1 16 1 
18 1 302 1 88 1 
91 1 60 1 61 1 16 3 222 2 32 1 121 1 168 1 226 1 122 1 88 3 306 1 
32 1 91 1 108 1 226 1 97 1 88 2 122 1 61 1 16 2 
273 1 225 1 130 1 226 1 88 1 122 1 60 1 61 1 16 1 229 1 379 1 
91 1 226 1 88 1 122 1 60 1 61 1 16 1 
32 1 91 2 88 1 122 1 60 1 61 1 16 1 
36 1 91 1 311 1 60 1 61 2 16 2 63 1 226 1 122 2 88 2 
32 1 91 1 130 1 48 1 344 1 226 2 97 2 88 3 122 1 190 1 60 1 61 1 16 3 
273 2 274 1 91 1 60 1 61 1 16 2 29 1 229 1 32 1 225 1 226 1 122 1 88 2 97 1 228 1 
91 1 48 1 130 1 60 1 61 2 132 1 16 4 32 1 108 1 226 2 122 2 88 4 97 2 
32 1 91 1 226 1 88 1 122 1 60 1 61 1 16 1 
91 2 48 1 130 1 61 1 222 1 16 4 32 2 64 1 121 1 226 3 97 2 88 4 122 1 306 1 
32 1 91 1 226 1 251 1 145 1 205 1 97 1 88 2 122 1 60 1 61 1 16 2 
32 1 91 1 121 1 226 1 88 3 122 1 60 1 306 2 46 1 61 1 222 2 16 3 
363 2 226 2 304 1 136 1 
88 1 122 1 60 1 61 1 16 1 202 1 
32 1 91 1 344 1 226 1 97 1 88 2 122 1 60 1 61 1 16 2 
214 1 
32 1 91 1 226 1 88 1 122 1 60 1 61 1 16 1 
91 1 60 1 61 1 16 3 222 1 32 1 344 1 226 1 97 1 122 1 88 3 
64 1 130 1 48 1 226 1 
91 1 226 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
311 4 140 1 208 6 142 2 45 1 47 1 182 1 259 1 95 2 78 5 7 1 121 9 216 9 53 2 169 2 270 1 20 1 271 1 195 1 300 1 85 1 331 1 349 2 38 2 377 2 200 1 233 3 309 1 
311 4 140 1 208 6 142 2 45 1 47 1 182 1 259 1 95 2 78 5 7 1 121 9 216 9 53 2 169 2 270 1 20 1 271 1 195 1 300 1 85 1 331 1 349 2 38 2 377 2 200 1 233 3 309 1 
311 5 140 1 208 7 142 2 45 1 47 1 182 1 259 1 95 2 78 6 7 1 121 10 216 10 53 2 169 2 270 1 20 1 271 1 195 1 300 1 85 1 331 1 349 2 38 2 377 2 200 1 233 4 309 1 
311 3 140 1 208 4 142 2 45 1 47 1 182 1 259 1 95 2 78 4 121 7 216 7 53 1 169 2 270 1 20 1 271 1 195 1 300 1 85 1 331 1 349 2 38 2 377 2 200 1 233 2 309 1 
311 2 169 1 208 3 142 1 271 1 95 1 182 1 78 3 7 1 85 1 38 1 349 1 121 4 216 4 200 1 233 1 53 2 309 1 
142 1 270 1 271 1 78 1 95 1 259 1 330 1 85 1 349 1 38 1 121 2 216 2 377 1 201 1 309 1 252 1 
311 1 208 1 142 2 47 1 271 1 95 2 78 2 85 1 121 3 216 3 377 1 233 1 309 1 
169 1 311 4 140 1 208 7 45 1 142 2 47 1 271 1 182 1 78 5 95 2 7 1 85 1 38 1 349 1 121 9 154 1 216 9 377 1 200 1 233 3 378 1 53 2 309 1 
169 1 311 4 140 1 208 7 45 1 142 2 47 1 271 1 182 1 78 5 95 2 7 1 85 1 38 1 349 1 121 9 154 1 216 9 377 1 200 1 233 3 378 1 53 2 309 1 
126 1 368 1 25 1 
368 1 263 1 284 2 
144 2 345 1 170 2 266 2 62 2 106 2 71 2 101 1 
237 1 27 1 116 2 3 1 143 2 29 1 316 1 144 2 278 1 359 1 261 1 217 1 364 1 344 1 343 1 188 1 101 1 54 2 345 1 367 1 170 2 105 1 265 1 266 3 369 1 348 1 62 2 347 1 106 2 151 1 150 2 329 2 134 1 153 1 155 1 71 3 114 1 
144 1 1 1 170 1 266 1 62 1 16 1 164 1 106 1 71 1 101 1 
254 1 368 1 72 1 190 1 266 1 191 1 16 1 144 1 145 1 25 1 10 1 283 1 71 1 352 1 
254 1 170 1 368 1 190 2 266 1 191 1 62 1 16 1 106 1 144 1 145 1 25 1 10 1 71 1 352 2 
190 1 275 1 352 1 298 1 244 1 
368 1 190 2 340 1 275 1 192 1 25 1 352 2 244 1 
190 1 275 1 352 1 
1 1 170 1 190 1 266 1 62 1 16 1 106 1 194 1 144 1 164 1 101 1 71 1 352 1 244 1 
368 1 
97 1 368 1 190 2 340 1 275 1 25 1 352 2 244 1 
221 1 189 1 368 1 190 5 44 1 275 2 246 1 212 1 227 1 132 2 373 1 339 2 340 1 68 1 24 1 25 1 352 5 244 2 274 2 
126 1 345 1 
205 1 345 2 170 1 266 2 62 1 106 1 144 2 232 1 71 2 
287 1 63 1 168 1 
345 1 179 1 105 1 266 1 369 1 143 1 347 1 316 1 150 1 278 1 134 1 155 1 364 1 71 1 343 1 54 1 
102 1 287 1 170 1 105 1 266 2 128 1 369 1 347 1 62 1 143 1 316 1 150 1 144 1 278 1 134 1 155 1 364 1 343 1 71 2 54 1 
102 1 345 1 170 4 266 5 128 2 62 4 106 1 131 1 30 1 144 5 229 1 232 1 283 1 71 5 
144 2 1 1 170 2 171 1 266 2 62 2 16 1 71 2 
144 3 345 1 170 3 266 3 128 1 62 3 106 1 71 3 
144 1 1 1 170 1 266 1 62 1 16 1 71 1 
144 1 205 1 170 1 266 1 62 1 16 1 232 1 106 1 71 1 
237 1 27 1 116 1 254 1 3 1 143 1 316 1 29 1 277 1 144 3 278 1 359 1 145 1 10 1 364 1 344 1 343 1 101 1 54 1 102 1 345 1 367 1 170 3 105 1 190 1 265 1 266 4 191 1 369 1 128 1 348 1 347 1 62 3 16 1 106 2 65 1 150 1 329 2 134 1 232 1 155 1 71 4 352 1 114 1 
144 2 345 1 170 1 266 2 128 1 62 1 283 1 30 1 71 2 
102 1 254 1 170 3 336 1 368 1 190 1 266 3 191 1 128 2 62 3 16 1 106 1 277 1 144 3 145 1 232 1 10 1 71 3 352 1 
144 2 287 1 170 2 266 2 128 1 62 2 232 1 106 1 71 2 168 1 
345 1 105 1 266 1 369 1 143 1 347 1 316 1 150 1 278 1 134 1 155 1 364 1 71 1 343 1 54 1 
345 1 105 1 266 1 143 1 18 1 316 1 150 1 278 1 134 1 155 1 81 1 364 1 71 1 343 1 54 1 
237 2 27 1 116 4 253 1 46 1 356 1 260 1 359 1 217 2 344 1 12 1 168 2 287 2 265 1 348 1 269 1 63 2 21 1 226 1 329 2 272 1 67 1 112 1 114 1 
144 1 170 1 191 1 266 1 171 1 62 1 16 1 71 1 
335 1 148 1 
335 1 148 1 
376 1 135 1 
376 1 135 1 
376 1 135 1 
335 1 148 1 8 1 
335 1 148 1 8 1 
335 1 148 1 8 1 
335 1 148 1 294 1 
6 1 335 2 148 2 376 1 135 1 257 1 
335 1 148 1 75 1 
335 1 148 1 75 1 
335 1 148 1 75 1 
138 1 335 1 115 1 73 1 118 1 144 2 361 1 187 1 125 1 148 1 345 1 170 2 288 1 190 1 266 2 61 1 62 2 294 1 328 1 111 1 230 1 304 1 71 2 352 1 
148 2 335 2 115 1 368 1 190 2 61 2 118 2 257 1 174 1 50 1 163 1 111 3 110 1 304 2 361 2 176 2 32 1 351 1 352 2 
169 1 38 1 349 1 
38 1 349 1 201 1 
169 2 349 3 313 1 43 1 181 1 201 1 
169 1 349 2 313 1 43 1 201 1 297 1 
169 1 349 2 43 1 313 2 201 1 
253 1 93 1 73 1 275 1 211 1 212 3 260 1 339 1 340 1 263 1 34 1 187 1 125 1 284 3 244 4 221 2 190 5 368 2 14 1 327 1 226 1 132 1 373 1 175 2 69 1 25 1 235 2 203 1 307 2 352 5 112 1 274 1 
206 1 253 3 41 1 275 6 212 8 260 3 185 1 339 2 340 1 263 3 342 5 34 2 187 4 284 9 244 7 221 6 190 9 368 5 14 2 327 1 246 1 295 1 226 3 132 2 298 5 299 1 373 1 175 6 69 3 25 1 380 1 307 6 352 9 112 3 274 2 
253 1 211 1 212 3 260 1 339 1 263 2 34 1 187 1 284 4 244 2 221 2 368 3 190 3 14 1 246 1 226 1 132 1 175 2 69 1 25 1 235 1 203 1 307 2 352 3 112 1 274 1 
253 2 41 1 211 1 212 5 260 2 185 1 339 1 263 3 34 1 187 2 284 7 244 3 221 4 368 4 190 4 14 1 246 1 226 2 132 1 175 4 69 2 25 1 235 2 203 1 307 4 380 1 352 4 112 2 274 1 
126 1 120 1 155 1 
238 1 155 1 
249 1 
155 1 364 1 343 1 
48 1 155 1 
155 1 364 1 
109 1 220 1 120 2 155 3 364 1 343 1 
237 3 116 7 245 1 58 2 46 3 247 1 17 1 356 2 371 1 260 1 319 1 360 1 217 4 165 1 33 1 323 1 112 1 
237 3 116 7 245 1 58 2 46 3 247 1 17 1 356 2 371 1 260 1 319 1 360 1 217 4 165 1 33 1 323 1 112 1 
237 3 116 7 245 1 58 2 46 3 247 1 17 1 356 2 371 1 260 1 319 1 360 1 23 1 217 4 165 1 33 1 323 1 112 1 
237 15 27 1 116 31 253 3 46 10 356 5 241 4 319 1 359 1 260 4 360 2 217 16 165 2 363 3 166 1 33 2 323 1 344 1 219 1 55 1 245 2 58 3 267 1 291 1 17 1 247 5 371 1 226 3 329 2 303 1 69 3 90 1 112 4 114 1 
237 4 27 2 116 9 46 4 356 3 260 1 359 2 319 1 360 1 217 5 165 1 33 1 323 1 344 2 35 1 245 1 58 2 267 1 247 1 371 1 329 4 66 1 112 1 114 2 
92 1 208 1 142 1 143 1 181 1 28 1 316 1 160 1 78 1 95 1 31 1 121 2 99 1 216 2 147 1 80 1 218 1 54 1 169 1 105 1 293 1 271 1 150 1 85 1 38 1 349 2 377 1 177 1 201 1 309 1 
92 1 208 2 142 1 143 1 181 1 28 1 316 1 160 1 78 1 95 1 31 1 121 3 216 3 80 1 218 1 54 1 169 1 105 1 268 1 173 1 293 1 296 1 271 1 150 1 38 1 349 2 377 1 177 1 201 1 309 1 
169 1 92 1 105 1 208 2 143 1 181 1 268 1 293 1 316 1 28 1 296 1 271 1 150 1 78 1 31 1 38 1 349 2 121 2 216 2 377 1 201 1 177 1 218 1 54 1 309 1 
92 2 354 1 142 1 143 1 355 1 316 1 28 2 94 1 255 1 95 1 121 1 242 1 216 1 218 2 364 1 54 1 56 1 105 1 173 1 150 1 134 1 377 2 155 1 
92 1 142 1 143 1 181 1 28 1 316 1 160 1 95 1 31 1 121 1 216 1 147 1 80 1 218 1 54 1 169 1 105 1 268 1 293 1 150 1 85 1 38 1 349 2 377 1 177 1 201 1 
357 1 
275 6 143 2 144 1 145 1 339 1 340 3 186 2 49 1 10 1 283 1 284 2 54 2 243 1 103 1 285 1 14 1 190 5 105 1 191 1 15 1 16 1 150 2 196 1 25 1 70 1 155 1 71 1 352 5 254 1 354 1 72 1 314 2 158 4 117 2 76 2 210 1 316 1 255 1 212 2 263 2 123 1 124 2 364 1 221 2 368 2 266 1 172 1 225 2 132 1 373 1 374 1 134 2 137 2 234 1 274 1 
254 1 72 1 158 2 275 2 144 1 97 1 145 1 340 1 10 1 283 1 285 1 103 1 190 3 266 1 191 1 15 1 16 1 196 1 137 1 234 1 71 1 352 3 
254 1 72 1 275 1 158 3 144 1 97 1 145 1 340 1 10 1 124 1 283 1 285 1 103 1 190 3 368 1 266 1 191 1 15 1 16 1 196 1 25 1 234 1 71 1 352 3 
254 1 72 1 314 1 158 3 275 2 144 1 97 1 145 1 340 1 10 1 124 1 283 1 285 1 103 1 190 3 368 1 266 1 191 1 15 1 16 1 196 1 137 1 25 1 234 1 71 1 352 3 
275 7 144 1 97 1 145 1 184 1 339 1 340 3 49 1 186 2 100 1 10 1 283 1 103 1 285 1 190 5 191 1 15 1 16 1 196 1 197 1 25 5 71 1 352 5 254 1 72 1 314 4 158 6 76 2 117 2 210 1 212 1 263 2 124 4 366 1 221 1 368 5 266 1 225 2 132 1 373 1 137 4 234 1 381 1 274 1 
275 4 144 1 145 1 339 1 340 2 49 1 186 2 10 1 283 1 284 2 103 1 285 1 190 4 191 1 15 1 16 1 196 1 25 1 71 1 352 4 254 1 72 1 314 2 158 4 76 2 117 2 210 1 212 1 263 2 124 2 221 1 368 2 266 1 225 2 132 1 373 1 374 1 137 2 234 1 274 1 
254 1 72 1 314 2 275 4 158 4 117 2 76 2 210 1 212 1 144 1 145 1 184 1 339 1 340 2 186 2 49 1 263 2 100 1 124 2 10 1 283 1 285 1 103 1 221 1 368 1 190 4 266 1 191 1 15 1 16 1 225 2 132 1 196 1 373 1 197 1 25 1 137 2 234 1 71 1 352 4 274 1 
254 1 72 1 314 2 275 4 158 4 117 2 76 2 210 1 212 1 144 1 145 1 184 1 339 1 340 2 186 2 49 1 263 2 100 1 124 2 10 1 283 1 285 1 103 1 221 1 368 1 190 4 266 1 191 1 15 1 16 1 225 2 132 1 196 1 373 1 197 1 25 1 137 2 234 1 71 1 352 4 274 1 
254 1 72 1 314 2 275 4 158 4 76 2 337 2 210 1 212 1 144 1 145 1 339 1 340 2 124 2 10 1 362 1 283 1 284 2 285 1 103 1 221 1 368 1 190 4 266 1 191 1 15 1 16 1 129 1 225 2 132 1 196 1 373 1 197 1 88 2 25 1 137 2 234 1 71 1 273 1 352 4 274 1 
254 1 72 1 314 3 158 5 275 5 117 2 76 2 210 1 212 1 144 1 145 1 184 1 339 1 340 2 186 2 49 1 263 2 100 1 10 1 124 3 283 1 285 1 103 1 366 1 221 1 368 1 190 4 266 1 191 1 15 1 16 1 225 2 132 1 373 1 196 1 197 1 25 1 137 3 234 1 71 1 352 4 274 1 
254 1 72 1 314 3 158 5 275 5 117 2 76 2 210 1 212 1 144 1 145 1 184 1 339 1 340 2 186 2 49 1 263 2 100 1 10 1 124 3 283 1 285 1 103 1 366 1 221 1 368 1 190 4 266 1 191 1 15 1 16 1 225 2 132 1 373 1 196 1 197 1 25 1 137 3 234 1 71 1 352 4 274 1 
275 4 337 2 144 1 145 1 339 1 340 2 10 1 283 1 284 2 103 1 285 1 190 4 191 1 15 1 16 1 196 1 25 1 71 1 352 4 254 1 72 1 314 2 158 4 76 2 210 1 212 1 124 2 221 1 368 1 266 1 129 1 225 2 132 1 373 1 374 1 88 2 137 2 234 1 274 1 
237 3 27 1 116 6 46 2 356 2 359 1 319 1 260 1 360 1 217 3 323 1 344 1 168 1 126 1 287 1 345 2 245 1 265 1 58 1 348 1 63 1 371 1 329 2 272 1 114 1 112 1 
237 6 27 2 116 14 253 2 209 1 46 2 356 1 256 1 241 3 79 1 359 2 260 2 217 8 166 1 363 3 344 2 168 4 345 1 104 1 287 11 367 1 265 2 348 1 247 1 63 11 226 1 329 4 133 1 303 1 153 1 69 2 114 2 112 1 
237 1 27 1 116 2 179 1 209 1 143 1 316 1 159 1 144 1 278 1 359 1 215 1 217 1 364 1 343 1 344 1 54 1 168 1 102 1 345 1 170 1 367 1 105 1 82 1 265 1 266 2 369 1 128 1 347 1 348 1 62 1 150 1 329 2 134 1 153 1 155 1 71 2 114 1 
237 10 143 3 46 8 144 1 278 2 11 2 344 3 343 2 54 3 102 1 345 2 287 7 245 1 105 2 58 1 62 1 348 3 347 2 247 4 63 7 150 3 153 1 69 2 155 2 71 3 112 3 114 3 113 2 27 3 116 20 253 2 209 1 356 4 29 2 316 2 358 2 319 1 359 3 260 3 360 1 217 10 264 1 323 1 364 2 168 7 367 1 170 1 266 3 265 3 128 1 369 2 268 1 84 1 371 1 226 2 329 6 37 2 87 1 134 1 
237 1 27 2 116 2 354 1 143 8 316 2 255 1 77 1 338 1 258 1 144 1 359 2 99 1 217 1 364 2 344 2 188 2 54 7 170 1 367 1 105 2 266 1 265 2 59 1 128 1 60 1 62 1 348 2 268 1 224 1 150 8 329 4 272 1 134 2 153 1 155 3 202 1 71 1 114 2 
237 2 27 1 253 1 116 3 209 1 46 1 356 1 144 1 359 1 260 1 217 1 344 1 168 1 287 1 170 1 265 1 266 1 290 1 348 1 62 1 63 1 106 1 226 1 329 2 69 1 232 1 71 1 114 1 112 1 
27 1 287 1 116 2 253 1 265 1 348 1 46 1 247 1 63 1 329 2 272 1 359 1 260 1 217 2 344 1 12 1 168 1 114 1 
237 2 27 1 287 1 116 2 265 1 348 1 46 1 63 1 356 1 21 1 226 1 329 2 272 1 359 1 344 1 168 1 114 1 112 1 
237 2 27 1 253 1 116 4 46 2 356 1 260 1 359 1 217 2 344 1 168 2 287 2 265 1 348 1 247 1 63 2 226 1 329 2 272 1 69 1 114 1 112 1 
27 1 287 1 116 2 253 1 265 1 60 1 348 1 46 1 247 1 63 1 329 2 359 1 260 1 217 2 344 1 12 1 168 1 114 1 
237 2 27 1 287 1 116 2 265 1 60 1 348 1 46 1 63 1 356 1 21 1 226 1 329 2 359 1 344 1 168 1 114 1 112 1 
237 2 27 1 253 1 116 4 46 2 356 1 260 1 359 1 217 2 344 1 168 2 287 2 265 1 60 1 348 1 247 1 63 2 226 1 329 2 69 1 114 1 112 1 
237 2 27 1 287 2 253 1 116 4 265 1 348 1 46 2 247 1 63 2 356 1 226 1 329 2 359 1 260 1 69 1 217 2 344 1 112 1 168 2 114 1 
237 1 27 1 116 2 143 1 316 1 29 1 278 1 359 1 217 1 364 1 343 1 344 1 54 1 345 1 367 1 105 1 266 1 265 1 369 1 347 1 348 1 150 1 329 2 134 1 153 1 155 1 71 1 114 1 
237 1 27 1 116 2 143 1 316 1 278 1 359 1 217 1 81 1 364 1 343 1 344 1 54 1 345 1 367 1 105 1 266 1 265 1 348 1 18 1 370 1 150 1 329 2 134 1 153 1 155 1 71 1 114 1 
237 2 27 1 253 1 116 4 209 1 46 2 356 1 260 1 359 1 217 2 344 1 168 2 287 2 265 1 348 1 247 1 63 2 226 1 329 2 69 1 114 1 112 1 
237 2 27 1 116 4 253 1 143 1 46 2 356 1 316 1 29 1 278 1 358 1 260 1 359 1 99 1 217 2 364 1 343 1 344 1 54 1 168 2 287 2 105 1 266 1 265 1 369 1 347 1 348 1 247 1 63 2 226 1 150 1 329 2 69 1 155 1 71 1 112 1 114 1 
237 1 27 1 253 1 116 3 209 1 46 1 144 1 359 1 260 1 217 2 344 1 168 1 287 1 170 1 265 1 266 1 348 1 62 1 247 1 106 1 63 1 226 1 329 2 250 1 69 1 232 1 71 1 112 1 114 1 
237 10 27 2 116 19 253 3 141 2 46 6 240 1 356 3 241 2 359 2 260 3 9 1 146 1 217 9 166 1 363 1 344 2 13 1 247 3 107 1 226 3 329 4 66 1 302 1 303 1 69 3 333 1 334 2 114 2 112 3 
237 12 27 3 116 26 253 3 141 1 46 4 356 2 241 2 359 3 260 3 280 1 9 1 51 1 217 14 166 2 363 2 344 3 13 2 346 1 267 2 247 2 19 1 107 1 226 2 329 6 66 1 86 1 302 1 305 1 69 3 333 2 334 4 112 2 114 3 
237 21 27 3 116 41 253 4 141 1 46 8 240 1 356 4 241 4 319 1 359 3 260 5 360 1 280 1 9 1 51 1 217 20 166 3 363 3 323 1 344 3 245 1 346 1 13 1 58 1 267 1 247 4 19 1 107 1 371 1 226 4 329 6 66 1 86 1 302 1 303 1 305 1 69 4 333 2 379 1 334 4 114 3 112 5 
237 18 27 4 116 38 253 4 141 1 46 7 240 1 356 4 241 4 319 1 359 4 260 5 360 1 280 1 9 1 51 1 217 20 166 3 363 3 323 1 344 4 245 1 346 1 13 1 58 1 267 2 247 3 19 1 107 1 371 1 226 3 329 8 66 1 86 1 302 1 303 1 305 1 69 4 333 2 379 1 334 4 114 4 112 4 
237 25 27 2 116 52 253 7 141 1 46 14 356 7 256 2 241 4 319 1 359 2 260 8 360 1 280 1 9 1 51 1 217 27 166 2 363 4 323 1 344 2 245 1 346 1 13 1 58 1 267 1 247 7 19 1 107 1 371 1 226 7 329 4 66 1 86 1 302 1 303 2 305 1 69 7 333 1 334 4 114 2 112 8 
335 1 148 1 50 1 163 1 61 1 361 1 304 1 118 1 257 1 213 1 
288 1 294 1 
335 1 148 1 149 1 22 1 61 1 322 1 361 1 304 1 118 1 
8 1 199 1 
6 1 75 1 91 1 
148 1 335 1 115 1 368 1 190 1 61 1 118 1 257 1 174 1 50 1 163 1 111 2 110 1 304 1 361 1 176 1 351 1 352 1 
148 1 335 1 115 1 368 1 190 1 61 1 118 1 257 1 174 1 50 1 163 1 111 2 110 1 304 1 361 1 176 1 351 1 352 1 
148 1 335 1 115 1 368 1 190 1 61 1 118 1 257 1 174 1 50 1 163 1 111 2 110 1 304 1 361 1 176 1 351 1 352 1 
6 1 8 1 199 1 
6 1 8 1 199 1 
75 1 91 1 
6 1 75 1 91 1 
138 1 230 1 
138 1 335 1 73 1 315 1 118 1 144 2 361 1 187 1 125 1 244 1 148 1 345 1 288 1 170 2 190 1 266 2 61 1 62 2 294 1 328 1 110 1 111 1 230 1 304 1 176 1 71 2 352 1 
237 1 27 1 157 1 2 1 116 2 209 1 143 2 316 1 338 1 144 2 359 1 217 1 364 1 344 1 188 2 54 2 367 1 105 1 265 1 266 2 59 1 222 1 348 1 193 1 130 1 150 2 329 2 153 1 155 1 71 2 114 1 
169 1 105 1 143 2 181 1 268 1 293 1 316 1 28 1 160 1 150 2 262 1 38 1 349 2 122 1 99 1 306 1 201 1 177 1 54 2 
169 1 312 1 105 1 143 1 181 1 268 1 293 1 28 1 316 1 160 1 150 1 38 1 349 2 122 1 201 1 177 1 54 1 
105 1 354 1 143 1 355 1 316 1 28 1 255 1 150 1 134 1 89 1 306 1 155 1 364 1 54 1 
169 1 105 1 143 1 181 1 268 1 293 1 316 1 28 1 160 1 150 1 262 1 38 1 349 2 122 1 306 1 201 1 177 1 54 1 
178 1 
126 1 221 1 368 1 44 1 68 1 25 1 212 1 
275 1 117 1 212 1 339 1 340 1 186 1 49 1 263 1 284 1 221 1 368 2 190 1 132 1 373 1 25 1 352 1 274 1 
238 3 44 1 4 2 143 3 275 5 48 2 279 2 339 4 340 3 99 1 343 3 54 3 284 12 14 2 105 3 190 5 292 2 150 3 248 1 152 1 301 2 68 1 198 2 69 2 25 2 155 10 307 6 352 5 113 2 112 2 254 2 253 2 316 4 212 9 120 2 260 2 263 6 364 3 167 1 326 1 220 1 221 8 368 8 172 1 223 2 83 1 226 2 132 4 373 4 134 1 175 6 231 2 274 4 40 2 
253 2 275 1 212 8 241 1 260 2 279 2 339 2 340 1 280 1 263 3 51 1 166 1 363 1 284 6 127 1 221 5 14 1 190 1 368 5 346 1 172 1 226 2 132 2 373 2 301 1 86 1 175 5 251 1 305 1 69 2 25 2 307 5 352 1 274 2 112 2 
1 1 212 2 144 1 319 1 260 2 279 2 360 1 339 1 100 1 164 1 101 1 245 1 221 2 170 1 190 1 266 1 62 1 16 1 106 1 194 1 132 1 373 1 301 1 26 1 71 1 352 1 274 1 112 1 
221 1 368 1 44 1 212 1 132 1 373 1 339 1 68 1 25 1 274 1 
253 2 221 5 368 5 212 5 226 2 260 2 301 1 279 2 175 5 263 5 69 2 307 5 284 10 113 1 112 2 
368 1 190 1 340 1 275 1 25 1 352 1 
354 1 143 4 275 4 316 1 212 2 255 1 339 2 340 2 123 1 52 1 364 1 54 4 326 1 221 2 105 1 14 2 190 3 36 1 172 2 246 1 132 2 150 4 152 2 373 1 134 2 155 1 70 1 352 3 274 2 
237 1 27 1 116 1 3 1 143 1 29 1 316 1 144 2 278 1 359 1 364 1 344 1 101 1 343 1 54 1 345 1 367 1 170 2 105 1 266 3 265 1 369 1 62 2 347 1 348 1 106 2 150 1 329 2 134 1 155 1 71 3 114 1 
221 2 14 1 368 4 58 1 172 1 212 1 132 1 373 1 339 1 175 2 263 2 25 2 307 2 284 4 274 1 
61 1 282 1 361 1 
61 1 282 1 361 1 
61 1 282 1 361 1 
138 1 50 1 61 1 361 1 108 1 
61 1 361 1 325 1 
61 1 361 1 325 1 
61 1 361 1 325 1 
61 1 361 1 
335 1 148 1 
237 4 27 2 116 8 245 1 58 1 267 1 46 3 247 1 356 2 371 1 329 4 260 1 319 1 359 2 360 1 217 4 323 1 344 2 112 1 114 2 
237 3 126 1 116 6 260 1 319 1 245 1 360 1 58 1 217 3 46 2 356 2 371 1 323 1 112 1 
237 2 204 1 27 1 253 1 116 4 46 2 247 1 356 1 226 1 329 2 359 1 260 1 69 1 217 2 344 1 112 1 114 1 
237 4 116 7 253 1 46 2 247 1 356 1 226 1 241 2 260 1 303 1 217 3 69 1 166 1 363 1 112 1 
237 12 27 2 253 2 116 23 156 1 46 9 356 5 256 1 241 2 319 1 260 3 359 2 360 2 217 11 363 2 323 1 344 2 245 2 58 1 267 2 247 4 371 1 226 2 329 4 133 1 303 1 69 2 112 3 114 2 
237 1 116 1 241 1 
116 1 217 1 363 1 
237 3 27 1 204 1 116 6 253 1 46 3 247 1 356 2 226 1 329 2 359 1 260 1 69 1 217 3 344 1 114 1 113 1 112 1 
237 6 27 1 116 12 253 2 46 2 356 1 241 1 359 1 260 2 280 1 51 1 217 6 363 1 166 1 344 1 346 1 247 1 226 2 329 2 66 1 86 1 305 1 69 2 114 1 112 2 
237 3 116 6 245 1 46 2 247 1 356 1 319 1 260 1 360 1 217 3 112 1 
237 2 27 1 156 1 116 3 245 1 267 1 46 2 247 1 356 1 371 1 329 2 359 1 360 1 217 1 323 1 344 1 114 1 
237 5 27 1 116 10 245 2 46 5 247 2 356 3 329 2 66 1 359 1 319 1 260 2 360 2 217 5 26 1 344 1 114 1 112 2 
27 1 253 1 116 2 46 1 247 1 66 1 329 2 359 1 260 1 217 2 344 1 114 1 
237 2 27 1 253 1 116 4 46 2 247 1 356 1 226 1 66 1 329 2 359 1 260 1 69 1 217 2 344 1 112 1 114 1 
237 2 27 3 156 1 116 3 245 1 267 1 46 2 247 1 240 1 356 1 66 1 329 6 359 3 360 1 217 1 344 3 114 3 
237 18 204 1 27 5 156 1 116 34 253 3 46 12 240 1 356 7 241 4 319 2 359 5 260 5 360 3 217 16 166 1 363 3 323 1 344 5 55 1 245 3 58 1 267 2 291 1 247 5 371 1 226 3 329 10 66 1 303 1 69 3 90 1 114 5 112 5 
237 4 27 1 116 8 46 2 356 2 241 1 260 1 359 1 319 1 360 1 217 4 363 1 166 1 323 1 344 1 245 1 58 1 371 1 329 2 66 1 305 1 112 1 114 1 
237 5 27 2 204 1 116 11 253 1 46 3 356 2 241 2 319 1 359 2 260 2 360 1 217 6 166 1 363 1 323 1 344 2 245 1 58 1 247 1 371 1 66 1 329 4 303 1 305 1 69 1 112 1 114 2 
237 10 204 1 27 3 116 19 253 2 46 4 356 3 241 1 319 1 359 3 260 3 360 1 280 1 51 1 217 9 363 1 166 1 323 1 344 3 245 1 346 1 58 1 267 1 247 1 371 1 226 2 329 6 66 1 86 1 305 1 69 2 114 3 112 3 
237 7 204 1 27 3 116 17 253 2 46 5 356 3 241 1 319 1 359 3 260 3 360 1 280 1 51 1 217 10 363 1 166 1 323 1 344 3 245 1 346 1 58 1 267 1 247 2 371 1 226 1 329 6 66 1 86 1 305 1 69 2 114 3 112 2 
237 4 27 1 116 8 46 2 356 2 241 1 260 1 359 1 319 1 360 1 217 4 363 1 166 1 323 1 344 1 245 1 58 1 371 1 329 2 66 1 305 1 112 1 114 1 
237 6 27 1 116 12 253 2 46 2 356 1 241 1 359 1 260 2 280 1 51 1 217 6 363 1 166 1 344 1 346 1 247 1 226 2 329 2 66 1 86 1 305 1 69 2 114 1 112 2 
237 8 204 1 27 4 116 18 253 2 46 5 356 3 241 1 319 1 359 4 260 3 360 1 280 1 51 1 217 10 166 1 363 1 323 1 344 4 245 1 346 1 58 1 267 2 247 2 371 1 226 1 329 8 66 1 86 1 305 1 69 2 114 4 112 2 
237 7 27 4 116 16 253 3 46 6 240 1 356 3 241 1 359 4 260 3 280 1 51 1 217 9 166 1 363 1 344 4 346 1 267 2 247 3 226 2 66 1 329 8 86 1 305 1 69 3 114 4 112 2 
237 4 116 7 245 3 46 6 247 3 371 2 356 3 319 1 260 1 360 3 217 3 323 1 112 1 
237 8 27 4 116 18 253 2 46 4 240 1 356 3 241 1 319 1 359 4 260 3 360 1 280 1 51 1 217 10 166 1 363 1 323 1 344 4 245 1 346 1 58 1 267 2 247 1 371 1 226 1 66 1 329 8 86 1 305 1 69 2 114 4 112 2 
144 1 345 1 266 1 136 1 283 1 71 1 30 1 
144 1 345 1 57 1 266 1 289 1 341 1 281 1 74 1 136 1 283 1 71 1 30 1 
126 1 105 1 354 1 134 1 143 1 155 1 316 1 364 1 255 1 150 1 54 1 
345 1 170 1 105 1 266 2 128 1 62 1 143 1 347 1 316 1 150 1 144 1 278 1 134 1 155 1 364 1 343 1 71 2 54 1 
345 1 170 1 105 1 4 1 191 1 266 2 128 1 62 2 143 1 347 1 16 1 316 1 150 1 144 2 152 1 278 1 48 1 10 1 155 3 364 2 343 2 71 2 54 1 
4 1 143 2 316 1 144 2 278 1 318 1 48 1 10 1 364 2 343 2 54 2 345 1 170 1 105 1 266 2 191 1 128 1 62 2 16 1 18 1 150 2 152 1 155 3 71 2 
238 1 254 1 4 1 275 1 143 3 316 1 318 1 120 1 48 1 320 1 364 1 343 1 54 3 105 1 190 2 368 1 150 3 152 1 375 1 134 1 155 4 25 1 352 2 
254 1 238 1 368 1 190 2 105 1 4 1 143 3 275 1 316 1 150 3 152 1 318 1 48 1 120 1 134 1 198 1 25 1 155 4 364 1 343 1 352 2 54 3 
105 1 143 1 316 1 150 1 54 1 258 1 
220 1 105 2 180 1 143 7 268 1 316 3 224 1 77 1 338 1 150 7 258 1 214 1 321 1 134 2 99 1 155 3 202 1 364 2 188 1 343 1 54 6 
237 3 27 2 116 6 209 1 143 1 46 2 356 2 316 1 29 1 144 1 278 1 358 1 260 1 319 1 359 2 360 1 99 1 217 3 323 1 364 1 11 1 343 1 344 2 54 1 168 1 287 1 345 2 245 1 170 1 105 1 58 1 265 2 266 2 128 1 369 1 348 2 62 1 347 1 63 1 193 1 371 1 150 1 329 4 155 1 71 2 112 1 114 2 
238 1 254 1 44 1 143 1 275 2 212 1 120 1 339 2 340 1 54 1 244 1 326 1 221 1 368 1 190 3 223 1 292 1 132 2 150 1 373 2 134 1 68 1 198 1 231 1 25 1 155 2 352 3 274 2 
220 1 105 1 143 2 83 1 316 2 150 2 258 1 120 1 99 1 155 2 364 1 343 1 54 2 
354 1 105 1 143 4 64 1 316 1 255 1 150 4 318 1 134 1 99 1 155 1 364 1 54 4 
105 1 143 2 316 2 150 2 152 1 161 1 214 1 87 1 321 1 155 1 324 1 364 1 343 1 54 2 
38 1 349 1 105 1 134 1 143 1 201 1 177 1 316 1 150 1 54 1 
105 1 143 2 99 1 268 1 155 1 316 1 130 1 364 1 338 1 150 2 54 2 
354 1 105 2 143 5 64 1 316 2 255 1 77 1 150 5 338 1 152 1 134 1 99 1 155 3 202 1 364 2 54 4 
354 1 105 2 143 5 64 1 316 2 255 1 150 5 317 1 338 1 152 1 134 1 99 1 155 3 202 1 364 2 54 4 
345 1 170 1 105 1 266 2 128 1 62 1 143 1 18 1 316 1 150 1 144 1 278 1 134 1 155 1 364 1 343 1 71 2 54 1 
220 1 105 1 180 1 143 1 316 2 150 1 152 1 214 1 321 1 155 1 364 1 343 1 54 1 
96 1 183 1 0 1 345 1 42 1 
0 1 345 1 254 1 207 1 368 1 190 2 42 2 191 1 16 1 277 1 96 2 183 2 145 1 39 1 25 1 10 1 352 2 308 1 244 1 
0 1 2 1 157 1 266 1 222 1 96 1 144 1 183 1 71 1 
0 1 39 1 308 1 
126 1 271 1 78 1 309 1 
121 1 142 1 216 1 271 1 78 1 309 1 95 1 
121 1 377 1 218 1 
142 1 239 1 270 2 271 1 78 1 95 1 228 1 85 1 121 3 216 3 332 1 309 1 
208 1 121 2 142 1 216 2 271 1 53 1 78 1 309 1 95 1 
311 1 169 1 142 1 95 1 182 1 78 1 85 1 349 1 38 1 121 1 216 1 
85 1 121 1 142 1 216 1 78 1 309 1 95 1 
85 1 121 1 142 1 216 1 271 1 309 2 95 1 
286 1 139 1 142 2 78 1 95 2 85 1 119 1 121 2 216 2 309 1 
311 1 140 1 208 2 142 1 45 1 271 1 95 1 78 2 85 1 121 3 216 3 233 1 309 1 
169 1 208 1 142 1 181 1 271 1 78 1 95 1 85 1 349 2 38 1 121 2 98 1 216 2 201 1 309 1 
311 1 208 2 142 2 271 1 95 2 78 2 85 1 7 1 121 4 216 4 233 1 53 1 309 1 
85 1 121 1 142 1 216 1 271 1 78 1 309 1 95 1 
311 1 208 2 142 1 270 1 271 2 95 1 78 3 228 1 121 4 332 1 216 4 233 1 236 1 309 2 
208 1 142 1 276 1 271 1 78 1 95 1 85 1 121 2 216 2 350 1 378 1 309 1 
365 1 142 1 270 2 271 1 78 1 95 1 228 1 85 1 121 3 216 3 332 2 309 1 
310 1 5 2 78 2 353 1 
85 1 121 1 142 1 216 1 372 1 95 1 
140 1 85 1 208 1 121 2 142 1 216 2 271 1 78 1 309 1 95 1 
162 1 
85 1 121 1 142 1 216 1 271 1 78 1 309 1 95 1 
140 1 208 1 142 1 270 1 271 1 95 1 78 1 85 1 121 3 216 3 309 1 
311 1 121 1 208 1 216 1 233 1 78 1 
78 1 309 1 

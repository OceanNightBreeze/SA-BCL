#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 1 25 1 120 1 269 4 100 2 320 7 158 1 278 1 233 2 78 9 161 1 104 1 107 9 300 1 301 1 286 3 82 2 15 5 136 1 306 1 257 1 351 1 88 1 219 1 
222 1 25 1 120 1 269 4 100 2 320 7 158 1 278 1 233 2 78 9 161 1 104 1 107 9 300 1 301 1 286 3 82 2 15 5 136 1 306 1 257 1 351 1 88 1 219 1 
222 1 25 2 263 1 120 1 357 1 269 4 100 2 361 1 320 6 158 1 233 2 78 9 161 1 104 2 107 9 369 1 301 2 300 1 82 2 286 3 15 5 306 1 136 1 53 1 351 1 88 1 219 2 262 1 
222 1 25 2 263 1 120 1 357 1 269 4 100 2 361 1 320 6 158 1 233 2 78 9 161 1 104 2 107 9 369 1 301 2 300 1 82 2 286 3 15 5 306 1 136 1 53 1 351 1 88 1 219 2 262 1 
222 1 25 2 263 1 120 1 357 1 269 5 100 2 361 1 320 7 158 1 233 2 78 10 161 1 104 2 107 10 369 1 301 2 300 1 82 2 286 4 15 6 306 1 136 1 53 1 351 1 88 1 219 2 262 1 
25 2 263 1 120 1 357 1 269 3 100 1 361 1 320 4 158 1 233 2 78 7 161 1 104 2 107 7 369 1 301 2 300 1 82 2 286 2 15 4 306 1 136 1 53 1 351 1 88 1 219 2 262 1 
222 1 107 4 301 1 120 1 286 1 82 1 15 3 136 1 306 1 269 2 100 2 320 3 158 1 88 1 219 1 233 1 78 4 104 1 
107 2 369 1 25 1 120 1 82 1 183 1 15 1 136 1 296 1 19 1 53 1 88 1 219 1 233 1 78 2 104 1 
107 3 25 1 120 1 82 2 286 1 15 2 136 1 269 1 351 1 320 1 88 1 233 2 78 3 
258 1 377 1 285 1 
108 2 285 1 125 1 
346 2 81 2 102 2 20 2 327 1 315 1 8 2 241 2 
196 1 27 1 315 1 151 2 176 1 127 1 154 1 232 1 179 1 102 2 61 1 8 2 130 1 10 1 252 2 282 1 12 1 81 2 64 1 327 1 329 1 288 2 138 1 346 3 331 1 48 2 184 1 236 1 51 1 170 1 20 2 143 1 144 1 380 1 22 1 241 3 24 2 
346 1 81 1 76 1 102 1 20 1 327 1 188 1 295 1 8 1 241 1 
71 1 371 1 13 1 285 1 374 1 295 1 58 1 346 1 258 1 203 1 102 1 67 1 249 1 241 1 
371 1 81 1 13 2 285 1 374 2 295 1 58 1 346 1 258 1 203 1 102 1 67 1 20 1 8 1 241 1 
5 1 13 1 96 1 374 1 74 1 
258 1 5 1 13 2 285 1 374 2 60 1 230 1 74 1 
13 1 374 1 74 1 
13 1 81 1 28 1 374 1 327 1 295 1 346 1 5 1 76 1 102 1 20 1 188 1 8 1 241 1 
285 1 
258 1 5 1 13 2 285 1 374 2 60 1 74 1 126 1 
322 1 281 1 79 2 163 1 212 1 13 5 195 1 285 1 374 5 287 2 44 1 74 2 308 2 258 1 5 2 333 1 297 1 60 1 365 1 
193 1 194 1 81 1 64 1 135 1 151 1 346 2 48 1 184 1 154 1 236 1 170 1 102 1 143 1 20 1 61 1 144 1 22 1 241 2 24 1 
377 1 315 1 
346 2 81 1 102 2 20 1 117 1 315 2 8 1 241 2 201 1 
193 1 63 1 69 1 
64 1 315 1 151 1 346 1 48 1 184 1 154 1 236 1 170 1 143 1 144 1 61 1 207 1 22 1 241 1 24 1 
346 3 81 3 102 3 20 3 135 1 315 1 8 1 241 3 
346 1 81 1 76 1 102 1 20 1 295 1 241 1 
346 1 81 1 102 1 20 1 117 1 295 1 8 1 201 1 241 1 
194 1 196 1 315 1 295 1 245 1 58 1 151 1 176 1 127 1 203 1 154 1 232 1 179 1 102 3 61 1 8 2 130 1 10 1 252 2 371 1 282 1 12 1 81 3 13 1 64 1 164 1 374 1 327 1 135 1 288 1 138 1 346 4 48 1 184 1 236 1 170 1 67 1 143 1 20 3 144 1 117 1 22 1 241 4 24 1 
346 2 81 1 102 2 249 1 275 1 20 1 135 1 315 1 241 2 
371 1 194 1 13 1 81 3 285 1 374 1 135 2 295 1 58 1 245 1 346 3 203 1 102 3 67 1 20 3 117 1 334 1 8 1 241 3 
193 1 81 2 135 1 346 2 102 2 20 2 117 1 8 1 69 1 241 2 
64 1 315 1 151 1 346 1 48 1 154 1 184 1 236 1 170 1 143 1 144 1 61 1 22 1 241 1 24 1 
64 1 315 1 151 1 346 1 169 1 48 1 154 1 184 1 236 1 115 1 143 1 61 1 22 1 241 1 24 1 
311 1 312 1 193 2 123 1 268 1 176 1 232 1 128 1 179 1 77 1 130 1 10 1 252 2 211 1 63 2 282 1 329 2 288 4 290 1 138 2 376 1 52 1 239 1 69 2 
346 1 366 1 371 1 81 1 102 1 20 1 295 1 241 1 
194 1 372 1 81 4 135 2 315 1 346 5 102 5 249 1 275 1 20 4 117 1 8 1 251 1 241 5 
366 1 346 2 81 2 76 1 102 2 20 2 295 1 241 2 
156 1 244 1 
156 1 244 1 
210 1 119 1 
210 1 119 1 
210 1 119 1 
156 1 4 1 244 1 
156 1 4 1 244 1 
156 1 381 1 244 1 
210 1 119 1 274 1 156 2 35 1 244 2 
156 1 4 1 244 1 
291 1 156 1 244 1 
291 1 156 1 244 1 
291 1 156 1 244 1 
132 2 94 1 13 2 303 1 285 1 374 2 165 2 43 1 244 2 304 2 305 3 307 2 347 1 116 1 274 1 156 2 362 2 379 1 191 1 
315 1 244 1 102 2 156 1 157 1 363 1 367 1 132 1 81 2 13 1 14 1 374 1 165 1 305 1 304 1 330 1 307 1 139 1 346 2 218 1 20 2 379 1 381 1 241 2 
301 1 219 1 104 1 
219 1 296 1 104 1 
301 2 276 1 187 1 199 1 296 1 104 3 
301 1 187 1 16 1 199 1 296 1 104 2 
301 1 187 1 199 2 296 1 104 2 
336 2 147 2 195 2 175 2 125 1 74 1 99 1 5 4 270 1 31 1 273 1 128 1 297 3 60 1 77 1 182 1 367 1 79 1 323 1 108 3 134 1 13 5 285 2 374 5 287 1 330 1 139 1 308 1 258 1 376 1 52 1 333 1 
336 6 92 1 93 1 195 6 96 5 3 1 175 6 125 3 74 6 99 3 59 5 5 7 270 1 31 2 128 3 297 8 60 1 77 3 62 1 182 2 322 1 253 1 79 2 108 9 13 9 285 5 374 9 256 1 287 2 330 4 308 2 258 1 376 3 52 3 333 1 
336 2 147 1 195 2 175 2 125 2 99 1 5 2 31 1 128 1 297 3 77 1 182 1 322 1 323 1 79 1 108 4 134 1 13 3 285 3 374 3 287 1 330 1 308 1 258 1 376 1 52 1 
336 4 147 2 92 1 195 4 3 1 175 4 125 3 99 2 5 3 31 1 128 2 297 5 77 2 62 1 182 1 322 1 79 1 323 1 108 7 13 4 134 1 285 4 374 4 287 1 330 2 308 1 258 1 376 2 52 2 
184 1 142 1 377 1 
184 1 197 1 
280 1 
184 1 64 1 
359 1 184 3 142 2 64 1 339 1 22 1 
184 1 64 1 22 1 
184 1 133 1 
211 2 40 1 264 1 340 1 329 4 290 3 288 7 138 3 376 1 152 1 231 1 140 1 272 1 52 1 319 1 208 1 221 2 
211 2 40 1 264 1 340 1 329 4 290 3 288 7 138 3 376 1 152 1 231 1 140 1 272 1 52 1 319 1 208 1 221 2 
211 2 40 1 264 1 340 1 329 4 290 3 288 7 113 1 138 3 376 1 152 1 231 1 140 1 272 1 52 1 319 1 208 1 221 2 
272 2 319 1 325 1 329 1 208 1 288 1 221 1 
264 1 340 1 176 2 177 1 101 1 152 1 231 1 272 1 155 1 208 1 130 2 10 2 252 4 211 3 40 1 282 2 329 5 288 9 290 4 138 4 376 1 140 1 52 1 221 2 
25 1 120 1 122 1 338 1 98 1 296 1 151 1 320 1 276 1 233 1 78 2 104 2 107 2 301 1 82 1 15 1 41 1 255 1 136 1 17 1 48 1 65 1 141 1 260 1 236 1 143 1 88 1 219 1 89 1 24 1 
25 1 91 1 120 1 338 1 98 1 296 1 151 1 247 1 276 1 320 2 233 1 78 3 104 2 107 3 301 1 82 1 15 1 41 1 255 1 17 1 48 1 141 1 260 1 236 1 143 1 88 1 219 1 354 1 89 1 24 1 
25 1 91 1 120 1 338 1 296 1 151 1 320 2 276 1 78 2 104 2 107 2 301 1 15 1 41 1 255 1 17 1 48 1 260 1 236 1 143 1 88 1 219 1 354 1 89 1 24 1 
107 1 0 1 25 2 242 1 64 1 82 1 338 2 41 2 46 1 151 1 247 1 48 1 17 2 184 1 178 1 154 1 204 1 236 1 143 1 118 1 233 1 78 1 24 1 
107 1 25 1 301 1 122 1 82 1 338 1 98 1 255 1 41 1 296 1 136 1 151 1 48 1 17 1 236 1 260 1 141 1 276 1 143 1 219 1 354 1 89 1 233 1 78 1 24 1 104 2 
299 1 
292 1 95 1 195 1 2 3 295 1 58 1 203 1 102 1 249 1 297 1 60 2 298 1 13 4 111 1 254 1 168 1 308 1 346 1 258 1 67 1 23 1 68 2 171 3 225 3 71 1 227 2 173 2 265 1 72 5 316 1 125 2 74 5 33 1 364 2 79 1 38 1 371 1 285 1 374 4 287 1 333 1 241 1 
171 3 71 1 225 3 292 1 173 2 227 2 95 1 195 1 265 1 72 5 2 3 316 1 125 2 295 1 58 1 74 5 203 1 33 1 102 1 249 1 297 1 60 2 298 1 364 2 38 1 79 1 371 1 13 4 285 1 254 1 111 1 374 4 287 1 168 1 308 1 346 1 258 1 333 1 67 1 68 2 23 1 241 1 
335 1 55 2 292 1 195 1 2 2 295 1 58 1 203 1 102 1 249 1 297 1 60 2 298 1 108 2 13 4 111 1 166 1 168 1 308 1 346 1 258 1 67 1 68 2 171 2 71 1 225 2 227 2 265 1 72 4 74 4 317 2 33 1 79 1 371 1 285 1 374 4 287 1 333 1 241 1 
335 1 90 1 242 1 292 1 195 2 2 2 295 1 151 2 58 1 203 1 154 2 102 1 249 1 297 2 60 3 298 1 108 2 13 5 64 1 111 1 254 1 168 1 308 1 346 1 258 1 67 1 118 1 68 2 24 2 171 2 225 2 71 1 173 2 227 2 265 1 72 4 125 2 74 6 29 1 75 1 31 1 33 1 364 2 79 1 371 1 285 2 374 5 287 1 48 2 184 1 49 1 236 1 333 1 143 1 241 1 
71 1 225 1 265 1 72 2 295 1 58 1 74 2 126 1 203 1 33 1 102 1 249 1 60 1 298 1 371 1 13 3 111 1 374 3 168 1 346 1 67 1 241 1 
71 1 265 1 72 3 2 1 295 1 74 1 58 1 126 1 203 1 33 1 102 1 249 1 60 1 298 1 371 1 13 3 111 1 285 1 374 3 168 1 346 1 258 1 67 1 241 1 
171 1 71 1 225 1 265 1 72 3 2 1 295 1 126 1 58 1 74 2 203 1 33 1 102 1 249 1 60 1 298 1 371 1 13 3 111 1 285 1 374 3 168 1 346 1 258 1 67 1 241 1 
292 1 95 1 195 1 2 4 295 1 58 1 203 1 102 1 249 1 297 1 60 3 298 1 13 5 111 1 254 1 168 1 308 1 346 1 258 5 67 1 23 1 68 2 171 4 225 4 71 1 227 2 173 2 265 1 72 6 316 1 125 2 126 1 74 7 180 1 33 1 364 2 79 1 38 1 371 1 285 5 374 5 287 1 333 1 241 1 
335 1 292 1 195 1 2 2 295 1 58 1 203 1 102 1 249 1 297 1 60 2 298 1 108 2 13 4 254 1 111 1 168 1 308 1 346 1 258 1 67 1 68 2 171 2 71 1 225 2 227 2 173 2 265 1 72 4 125 2 74 4 33 1 364 2 79 1 371 1 285 2 374 4 287 1 333 1 241 1 
171 2 225 2 71 1 292 1 173 2 227 2 95 1 195 1 265 1 72 4 2 2 316 1 125 2 295 1 74 4 58 1 203 1 33 1 102 1 249 1 297 1 60 2 298 1 364 2 38 1 79 1 371 1 13 4 285 1 254 1 111 1 374 4 287 1 168 1 308 1 346 1 258 1 333 1 67 1 68 2 241 1 
171 2 225 2 71 1 292 1 173 2 227 2 95 1 195 1 265 1 72 4 2 2 316 1 125 2 295 1 74 4 58 1 203 1 33 1 102 1 249 1 297 1 60 2 298 1 364 2 38 1 79 1 371 1 13 4 285 1 254 1 111 1 374 4 287 1 168 1 308 1 346 1 258 1 333 1 67 1 68 2 241 1 
171 2 225 2 55 2 71 1 56 1 292 1 227 2 195 1 265 1 72 4 2 2 295 1 74 4 58 1 203 1 317 2 33 1 102 1 249 1 297 1 60 2 298 1 38 1 79 1 108 2 371 1 13 4 285 1 111 1 374 4 287 1 166 1 168 1 308 1 346 1 258 1 18 1 333 1 67 1 68 2 241 1 
193 1 264 1 340 1 315 2 176 1 231 1 232 1 179 1 130 1 10 1 252 2 40 1 211 2 63 1 282 1 329 3 290 2 288 6 138 3 376 1 140 1 377 1 52 1 239 1 221 1 69 1 
145 1 224 1 193 11 315 1 176 2 99 2 152 1 232 2 128 1 179 1 77 2 9 1 130 2 106 3 10 2 105 3 252 4 211 1 80 1 63 11 282 2 12 1 284 1 329 8 290 2 288 14 138 6 376 2 114 1 51 1 52 1 186 1 69 4 
223 1 194 1 26 1 294 1 315 1 151 1 176 1 154 1 232 1 179 1 102 1 61 1 207 1 130 1 10 1 252 2 282 1 81 1 12 1 64 1 284 1 135 1 329 1 288 2 138 1 346 2 48 1 184 1 236 1 170 1 51 1 143 1 20 1 144 1 22 1 24 1 69 1 241 2 
193 7 194 1 196 2 340 1 151 3 99 2 152 4 154 1 102 1 61 2 10 3 252 6 211 4 63 7 12 1 64 2 345 2 346 3 170 2 350 2 20 1 354 1 22 2 221 1 24 3 69 7 314 1 264 1 266 2 315 2 176 3 231 1 32 1 232 3 128 2 179 3 34 1 77 2 130 3 40 1 282 3 81 1 373 2 284 1 135 1 329 10 288 20 290 8 138 10 48 3 376 3 140 1 184 2 236 2 51 1 52 3 143 2 144 2 241 3 
242 1 198 1 151 8 176 2 154 2 232 2 179 2 360 1 129 1 102 1 130 2 10 2 209 1 252 4 282 2 81 1 12 1 64 2 83 1 135 1 329 1 288 2 138 1 346 1 48 8 331 2 65 1 184 3 236 2 51 1 261 1 239 1 20 1 143 2 354 1 240 1 118 1 241 1 24 7 
193 1 176 1 99 1 232 1 128 1 179 1 102 1 77 1 8 1 130 1 10 1 252 2 211 1 63 1 282 1 81 1 284 1 329 1 290 1 288 3 138 2 346 1 376 1 378 1 52 1 20 1 117 1 69 1 241 1 
10 1 312 1 252 2 193 1 63 1 282 1 329 2 290 1 288 2 176 1 152 1 376 1 232 1 179 1 239 1 77 1 69 1 130 1 
10 1 252 2 211 1 193 1 63 1 282 1 123 1 290 1 288 2 176 1 138 2 232 1 128 1 179 1 52 1 239 1 69 1 130 1 
193 2 99 1 176 1 152 1 232 1 128 1 179 1 77 1 130 1 10 1 252 2 211 1 63 2 282 1 329 2 288 4 290 2 138 2 376 1 52 1 239 1 69 2 
10 1 312 1 252 2 193 1 63 1 282 1 329 2 290 1 288 2 176 1 152 1 376 1 232 1 360 1 179 1 77 1 69 1 130 1 
10 1 252 2 211 1 193 1 63 1 282 1 123 1 290 1 288 2 176 1 138 2 232 1 128 1 360 1 179 1 52 1 69 1 130 1 
193 2 99 1 176 1 152 1 232 1 128 1 179 1 360 1 77 1 130 1 10 1 252 2 211 1 63 2 282 1 329 2 288 4 290 2 138 2 376 1 52 1 69 2 
193 2 99 1 176 1 152 1 232 1 128 1 179 1 77 1 130 1 10 1 252 2 211 1 63 2 282 1 329 2 288 4 290 2 138 2 376 1 52 1 69 2 
196 1 315 1 151 1 176 1 154 1 232 1 179 1 61 1 130 1 10 1 252 2 282 1 12 1 64 1 329 1 288 2 138 1 346 1 48 1 184 1 236 1 51 1 170 1 143 1 144 1 22 1 24 1 241 1 
315 1 151 1 176 1 154 1 232 1 179 1 61 1 130 1 10 1 252 2 282 1 12 1 64 1 329 1 288 2 138 1 346 1 169 1 48 1 184 1 236 1 51 1 115 1 143 1 21 1 22 1 24 1 241 1 
193 2 99 1 176 1 152 1 232 1 128 1 179 1 77 1 130 1 10 1 252 2 211 1 63 2 282 1 284 1 329 2 288 4 290 2 138 2 376 1 52 1 69 2 
193 2 196 1 266 1 151 1 176 1 99 1 152 1 232 1 128 1 179 1 61 1 77 1 130 1 10 1 252 2 211 1 63 2 282 1 64 1 329 2 290 2 288 4 138 2 346 1 376 1 48 1 65 1 184 1 236 1 52 1 170 1 143 1 144 1 22 1 69 2 24 1 241 1 
193 1 176 1 99 1 152 1 232 1 128 1 179 1 7 1 102 1 77 1 8 1 130 1 10 1 252 2 63 1 282 1 81 1 284 1 329 2 290 1 288 3 138 1 346 1 376 1 52 1 20 1 117 1 241 1 69 1 
148 1 340 1 99 4 152 4 248 1 155 1 103 1 250 1 9 3 105 3 10 3 106 4 252 6 211 4 217 1 221 1 264 1 267 1 228 1 177 1 176 3 231 1 128 4 77 4 321 1 36 1 130 3 234 1 39 1 40 1 282 3 42 1 329 20 290 8 288 41 138 21 376 5 140 1 52 5 186 1 238 4 86 2 54 1 
148 1 264 1 267 1 228 1 340 1 176 4 177 1 99 4 248 1 152 3 231 1 155 2 128 3 103 1 77 4 321 1 250 1 36 1 9 3 130 4 234 1 106 4 10 4 105 3 252 8 40 1 211 4 39 1 282 4 42 1 329 20 288 38 290 7 138 18 376 5 140 1 217 1 52 4 238 4 186 1 86 2 221 1 54 1 
148 1 264 1 267 1 228 1 340 1 176 2 177 1 99 7 248 1 152 7 231 1 155 1 128 7 103 1 77 7 321 1 250 1 9 2 130 2 234 1 106 4 10 2 105 4 252 4 40 1 211 7 39 1 282 2 329 27 288 52 290 14 138 25 376 8 140 1 217 1 114 2 52 8 238 4 186 2 86 1 221 1 54 1 
267 1 200 1 176 2 177 1 99 3 152 3 128 3 77 3 250 1 36 1 9 1 130 2 234 1 106 2 10 2 105 1 252 4 211 3 39 1 282 2 329 9 288 19 290 6 138 10 376 3 52 3 238 2 186 1 86 1 54 2 
148 1 267 1 228 1 176 3 177 1 99 3 152 2 248 1 155 2 128 2 103 1 77 3 250 2 321 1 9 2 130 3 234 1 10 3 106 2 105 2 252 6 211 2 39 1 282 3 329 14 290 4 288 26 138 12 376 3 217 1 52 2 238 4 86 2 54 1 
132 1 116 1 274 1 156 1 165 1 43 1 304 1 244 1 307 1 37 1 
381 1 363 1 
348 1 132 1 324 1 205 1 156 1 165 1 304 1 244 1 307 1 
132 1 13 1 303 1 285 1 374 1 165 1 43 1 244 1 304 1 305 2 307 1 347 1 116 1 274 1 156 1 362 1 379 1 191 1 
132 1 13 1 303 1 285 1 374 1 165 1 43 1 244 1 304 1 305 2 307 1 347 1 116 1 274 1 156 1 362 1 379 1 191 1 
132 1 13 1 303 1 285 1 374 1 165 1 43 1 244 1 304 1 305 2 307 1 347 1 116 1 274 1 156 1 362 1 379 1 191 1 
237 1 35 1 4 1 
237 1 35 1 4 1 
291 1 185 1 
291 1 185 1 35 1 
218 1 14 1 
355 1 315 1 244 1 5 1 102 2 156 1 157 1 362 1 363 1 367 1 132 1 303 1 13 1 81 2 14 1 374 1 165 1 304 1 305 1 330 1 307 1 139 1 346 2 218 1 20 2 381 1 241 2 
237 1 4 1 
291 1 185 1 35 1 
1 1 151 2 176 1 232 1 6 1 179 1 102 2 130 1 10 1 252 2 282 1 109 1 12 1 64 1 284 1 83 1 343 1 329 1 288 2 138 1 346 2 48 2 331 2 184 1 236 1 50 1 51 1 261 1 143 1 241 2 24 2 
301 1 229 1 41 1 255 1 167 1 296 1 151 2 48 2 65 1 236 1 141 1 276 1 143 1 219 1 189 1 354 1 89 1 24 2 104 2 
368 1 301 1 229 1 41 1 255 1 296 1 151 1 48 1 141 1 236 1 276 1 143 1 219 1 354 1 89 1 24 1 104 2 
242 1 11 1 64 1 41 1 167 1 151 1 48 1 184 1 154 1 204 1 236 1 143 1 118 1 24 1 
301 1 229 1 41 1 255 1 167 1 296 1 151 1 48 1 236 1 141 1 276 1 143 1 219 1 189 1 354 1 89 1 24 1 104 2 
313 1 
196 1 315 1 151 1 176 1 127 1 154 1 232 1 179 1 102 2 61 1 8 2 130 1 10 1 252 2 282 1 12 1 81 2 64 1 327 1 288 1 138 1 346 3 48 1 184 1 236 1 170 1 20 2 143 1 144 1 22 1 24 1 241 3 
336 2 79 1 108 4 195 2 285 4 175 2 287 1 125 2 308 1 75 1 258 2 31 1 333 1 297 1 221 1 
258 1 281 1 163 1 377 1 195 1 285 1 297 1 
173 1 195 1 125 1 74 1 297 1 60 1 364 1 79 1 108 1 13 1 254 1 285 2 374 1 287 1 308 1 258 1 333 1 
336 6 146 1 150 2 195 8 197 3 57 1 151 3 58 2 99 2 154 1 297 9 60 3 159 1 341 2 163 1 108 12 13 5 64 3 345 2 308 4 258 2 65 1 353 2 22 3 24 3 70 2 175 6 73 2 125 6 74 5 75 1 359 1 31 2 128 2 181 1 77 2 131 1 281 1 79 4 133 2 283 2 285 8 374 5 235 2 287 4 48 3 376 2 184 10 236 4 142 2 333 4 52 2 87 2 143 3 
336 5 148 1 149 1 195 5 175 5 125 3 74 1 99 2 75 1 248 1 31 1 128 2 103 1 297 8 60 1 77 2 321 1 9 1 106 1 105 1 79 2 108 6 13 1 285 5 374 1 235 1 287 2 308 2 258 2 376 2 349 1 217 1 333 2 52 2 87 2 
264 1 195 2 28 1 340 1 316 1 295 1 231 1 76 1 102 1 297 2 8 1 79 1 13 1 81 1 374 1 327 1 235 1 287 1 308 1 346 1 376 2 333 1 52 1 87 2 20 1 188 1 190 1 241 1 
281 1 79 1 163 1 195 1 285 1 287 1 308 1 258 1 333 1 297 1 
336 5 108 10 195 5 285 5 235 1 175 5 345 1 125 5 99 2 376 2 128 2 52 2 87 2 297 5 77 2 
258 1 13 1 285 1 374 1 60 1 74 1 
90 1 242 1 195 2 57 1 151 4 74 4 75 2 154 2 31 2 297 2 60 2 131 2 322 1 79 2 342 1 13 3 64 1 374 3 287 2 308 2 309 1 48 4 184 1 49 1 236 1 333 1 143 1 118 1 24 4 
165 1 344 1 304 1 
165 1 344 1 304 1 
116 1 14 1 165 1 220 1 304 1 
165 1 344 1 304 1 
332 1 165 1 304 1 
332 1 165 1 304 1 
332 1 165 1 304 1 
165 1 304 1 
156 1 244 1 
264 1 340 1 176 1 177 1 231 1 321 1 9 1 130 1 105 1 106 1 10 1 252 2 40 1 211 2 282 1 329 4 288 8 290 2 138 4 376 1 140 1 52 1 221 1 
226 1 264 1 340 1 177 1 176 2 99 1 152 1 231 1 77 1 321 1 9 1 130 2 106 2 10 2 105 1 252 4 211 2 40 1 282 2 329 6 288 11 290 3 138 5 376 2 140 1 52 1 186 1 221 1 
148 1 226 1 264 1 340 1 176 3 177 1 99 2 152 1 248 1 231 1 128 2 155 1 103 1 77 2 321 1 9 1 130 3 105 1 106 1 10 3 252 6 40 1 211 3 282 3 329 9 288 19 290 4 138 10 376 3 140 1 217 1 52 3 221 1 
148 1 226 1 264 1 340 1 176 3 177 1 99 2 152 2 248 1 231 1 155 1 128 1 103 1 77 2 321 1 9 1 130 3 105 1 106 1 10 3 252 6 40 1 211 3 282 3 329 10 288 17 290 5 138 7 376 3 140 1 217 1 52 2 221 1 
264 1 340 1 176 1 177 1 231 1 321 1 9 1 130 1 105 1 106 1 10 1 252 2 40 1 211 2 282 1 329 4 288 8 290 2 138 4 376 1 140 1 52 1 221 1 
148 1 176 1 177 1 99 2 152 1 248 1 128 2 103 1 77 2 321 1 9 1 130 1 105 1 106 1 10 1 252 2 211 1 282 1 329 6 288 12 290 2 138 6 376 2 217 1 52 2 
148 1 226 1 264 1 340 1 176 4 177 1 99 2 152 2 248 1 231 1 128 1 155 2 103 1 77 2 321 1 9 1 130 4 106 1 10 4 105 1 252 8 40 1 211 3 282 4 329 10 288 18 290 5 138 8 376 3 140 1 217 1 52 2 221 1 
148 1 177 1 176 4 99 3 152 3 248 1 128 2 155 2 103 1 77 3 321 1 9 1 36 1 130 4 106 1 10 4 105 1 252 8 211 3 282 4 329 9 288 16 290 6 138 7 376 3 217 1 52 2 
40 1 211 3 264 1 340 3 329 3 288 7 290 6 138 4 152 3 376 1 140 2 231 3 52 1 
148 1 264 1 340 1 177 1 176 4 99 2 152 1 248 1 231 1 128 1 155 2 103 1 77 2 321 1 9 1 36 1 130 4 106 1 10 4 105 1 252 8 40 1 211 3 282 4 329 10 288 18 290 4 138 8 376 3 140 1 217 1 52 2 221 1 
10 2 252 4 211 2 40 1 282 2 264 1 329 4 340 1 288 8 290 3 138 4 176 2 376 1 152 1 140 1 231 1 155 1 52 1 221 1 130 2 
40 1 211 2 264 1 340 1 329 3 290 2 288 6 138 3 376 1 140 1 231 1 377 1 52 1 221 1 
10 1 252 2 211 1 226 1 282 1 329 2 290 2 288 4 138 2 176 1 99 1 376 1 152 1 128 1 52 1 77 1 130 1 
105 1 106 2 152 1 376 1 211 1 128 1 52 1 186 1 77 1 329 3 290 2 288 7 9 1 99 1 138 4 
264 1 243 1 340 2 99 2 176 2 152 4 231 2 128 2 155 2 77 2 130 2 105 2 106 2 10 2 252 4 40 1 80 1 211 5 282 2 329 11 290 9 288 23 138 12 376 3 140 1 114 1 52 3 186 1 221 1 
106 1 288 1 138 1 
105 1 329 1 288 1 
10 1 252 2 211 2 226 1 282 1 329 3 345 1 288 6 290 3 176 1 138 3 99 1 376 1 152 1 128 1 52 1 77 1 130 1 
148 1 176 1 177 1 99 2 152 1 248 1 128 2 103 1 77 2 321 1 9 1 130 1 105 1 106 1 10 1 252 2 211 1 282 1 329 6 288 12 290 2 138 6 376 2 217 1 52 2 
152 1 376 1 211 1 231 1 52 1 264 1 340 1 329 3 290 2 288 6 138 3 
10 1 252 2 211 1 40 1 282 1 243 1 329 1 340 1 290 2 288 3 138 2 176 1 152 1 231 1 140 1 155 1 130 1 
10 1 252 2 211 3 282 1 264 1 340 2 329 5 290 5 288 10 176 1 177 1 138 5 152 2 376 2 231 2 52 2 190 1 130 1 
10 1 252 2 282 1 329 2 288 2 290 1 177 1 176 1 376 1 152 1 77 1 130 1 
10 1 252 2 211 1 282 1 329 2 290 2 288 4 138 2 177 1 176 1 99 1 376 1 152 1 128 1 52 1 77 1 130 1 
10 3 252 6 211 1 282 3 243 1 340 1 329 1 288 3 290 2 138 2 177 1 176 3 152 1 231 1 155 1 36 1 130 3 
226 1 264 2 243 1 340 3 176 5 177 1 99 3 152 5 231 3 155 2 128 3 77 3 9 1 160 1 36 1 130 5 106 4 10 5 105 3 252 10 40 1 211 7 282 5 329 16 137 1 288 34 290 12 138 18 376 5 140 1 259 1 52 5 186 1 221 1 
346 1 102 1 249 1 275 1 293 1 315 1 241 1 
121 1 356 1 293 1 315 1 45 1 375 1 346 1 153 1 102 1 275 1 249 1 241 1 
242 1 48 1 184 1 154 1 236 1 377 1 64 1 143 1 118 1 151 1 24 1 
81 1 64 1 135 1 315 1 151 1 346 2 48 1 184 1 154 1 236 1 170 1 102 1 20 1 143 1 61 1 22 1 241 2 24 1 
131 1 371 1 133 1 150 1 81 1 64 2 135 1 315 1 295 1 151 1 346 2 203 1 48 1 184 3 236 1 170 1 102 2 20 2 143 1 61 1 22 2 241 2 24 1 
150 1 315 1 295 1 151 2 203 1 102 2 61 1 131 1 371 1 133 1 81 1 64 2 135 1 346 2 48 2 184 3 236 1 115 1 84 1 143 1 20 2 22 2 24 2 241 2 
192 1 131 1 133 1 150 1 13 2 64 1 285 1 197 1 374 2 58 1 151 3 74 1 258 1 47 1 48 3 154 1 184 4 236 1 142 1 84 1 143 1 22 1 24 3 
131 1 133 1 150 1 13 2 64 1 285 1 197 1 374 2 58 1 151 3 74 1 258 1 48 3 154 1 184 4 236 1 142 1 84 1 143 1 353 1 22 1 24 3 
48 1 236 1 129 1 143 1 151 1 24 1 
209 1 64 2 97 1 83 1 198 1 151 7 202 1 331 1 48 7 359 1 65 1 154 2 184 3 271 1 236 3 129 1 143 2 354 1 240 1 22 1 24 6 
193 1 196 1 340 1 151 1 102 1 61 1 10 2 252 4 211 2 63 1 64 1 343 1 346 2 65 1 170 1 350 1 20 1 22 1 221 1 69 1 24 1 264 1 266 1 315 2 176 2 231 1 232 2 179 2 130 2 40 1 282 2 81 1 284 1 135 1 329 3 290 2 288 6 138 3 48 1 376 1 184 1 140 1 236 1 52 1 143 1 144 1 241 2 
70 1 195 1 197 1 57 1 73 1 151 1 74 2 58 1 5 1 154 1 297 1 60 1 341 1 281 1 79 2 163 1 13 3 285 1 374 3 287 2 308 2 258 1 48 1 184 2 142 1 333 2 353 1 24 1 
146 1 64 1 151 2 48 2 359 1 65 1 184 2 142 1 236 2 129 1 143 1 22 1 24 2 
242 1 64 1 151 4 48 4 154 1 65 1 184 1 236 1 84 1 143 1 118 1 310 1 24 4 
131 1 64 1 151 2 202 1 48 2 66 1 184 1 271 1 32 1 236 2 143 1 206 1 22 1 24 2 
48 1 154 1 236 1 143 1 219 1 255 1 296 1 151 1 24 1 104 1 
48 2 184 1 65 1 236 1 50 1 64 1 143 1 83 1 354 1 151 2 24 2 
131 1 242 1 209 1 64 2 83 1 151 5 48 5 154 1 65 1 184 3 236 2 143 2 118 1 240 1 310 1 24 4 
131 1 242 1 209 1 64 2 83 1 289 1 151 5 48 5 154 1 65 1 184 3 236 2 143 2 118 1 310 1 24 4 
81 1 64 1 135 1 315 1 151 1 346 2 48 1 184 1 154 1 236 1 115 1 102 1 20 1 143 1 61 1 22 1 241 2 24 1 
131 1 64 1 97 1 151 1 202 1 48 1 359 1 184 1 271 1 236 2 143 1 22 1 24 1 
213 1 109 1 124 1 1 1 246 1 346 1 6 1 102 1 241 1 
213 1 85 1 112 1 
246 1 213 1 302 1 124 1 315 1 
371 1 213 1 13 2 302 2 124 2 285 1 374 2 315 1 295 1 112 1 58 1 245 1 246 2 258 1 203 1 5 1 85 1 67 1 352 1 
107 3 369 1 300 1 120 1 82 1 15 1 136 1 320 1 88 1 233 1 78 3 
30 1 286 1 15 1 269 1 
15 1 88 1 
120 1 377 1 15 1 88 1 
107 1 120 1 82 1 15 1 88 1 233 1 78 1 
25 1 17 1 78 1 
107 3 369 2 120 1 172 1 82 1 328 1 15 1 136 1 277 1 88 1 233 1 78 3 
100 1 107 2 120 1 320 1 82 1 15 1 88 1 233 1 78 2 
107 1 301 1 82 1 15 1 136 1 306 1 269 1 219 1 233 1 78 1 104 1 
107 1 82 1 15 1 88 1 233 1 136 1 78 1 
107 1 120 1 82 1 88 2 233 1 136 1 78 1 
107 2 337 1 82 2 15 1 136 1 358 1 216 1 88 1 233 2 78 2 
107 3 300 1 120 1 82 1 286 1 15 2 136 1 269 1 320 2 88 1 233 1 78 3 161 1 
107 2 301 1 120 1 82 1 215 1 15 1 296 1 136 1 276 1 320 1 88 1 219 1 233 1 78 2 104 2 
107 4 222 1 120 1 82 2 286 1 15 2 136 1 269 1 100 1 320 2 88 1 233 2 78 4 
107 1 120 1 82 1 15 1 88 1 233 1 136 1 78 1 
107 4 369 1 120 2 82 1 286 1 328 1 15 3 269 1 30 1 320 2 277 1 88 2 233 1 78 4 
107 2 370 1 120 1 82 1 174 1 15 1 136 1 257 1 320 1 88 1 233 1 78 2 
107 3 369 2 120 1 82 1 328 2 15 1 136 1 277 1 88 1 233 1 279 1 78 3 
162 2 110 1 326 1 15 2 
107 1 318 1 82 1 233 1 136 1 78 1 
107 2 300 1 120 1 320 1 82 1 15 1 88 1 233 1 136 1 78 2 
214 1 
107 1 120 1 82 1 15 1 88 1 233 1 136 1 78 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
347 1 316 1 47 1 4 2 353 1 187 6 6 2 295 4 223 1 355 1 327 1 151 1 259 9 357 3 7 1 264 1 374 1 334 2 156 1 238 1 176 2 42 9 41 5 16 2 119 1 290 2 346 1 123 2 
347 1 316 1 47 1 4 2 353 1 187 6 6 2 295 4 223 1 355 1 327 1 151 1 259 9 357 3 7 1 264 1 374 1 334 2 156 1 238 1 176 2 42 9 41 5 119 1 16 2 290 2 346 1 123 2 
347 1 316 1 47 1 4 2 353 1 187 7 6 2 295 5 223 1 355 1 327 1 151 1 259 10 357 4 7 1 264 1 374 1 334 2 156 1 238 1 176 2 42 10 41 6 119 1 16 2 290 2 346 1 123 2 
347 1 316 1 47 1 4 2 353 1 187 4 6 2 295 3 223 1 355 1 151 1 259 7 357 2 7 1 264 1 374 1 334 2 156 1 238 1 176 2 42 7 41 4 119 1 16 1 290 2 346 1 123 2 
357 1 316 1 334 1 353 1 187 3 6 1 295 2 176 1 223 1 42 4 41 3 355 1 16 2 327 1 290 1 151 1 259 4 123 1 
7 1 349 1 264 1 48 1 4 1 334 1 353 1 6 1 176 1 41 1 42 2 355 1 290 1 151 1 259 2 121 1 
357 1 4 1 353 1 187 1 295 1 176 2 42 3 41 2 355 1 290 2 151 1 259 3 346 1 
350 1 47 1 316 1 4 1 353 1 187 7 295 4 6 1 223 1 355 1 327 1 151 1 259 9 357 3 286 1 156 1 334 1 176 2 42 9 41 5 16 2 290 2 346 1 123 1 
350 1 47 1 316 1 4 1 353 1 187 7 295 4 6 1 223 1 355 1 327 1 151 1 259 9 357 3 286 1 156 1 334 1 176 2 42 9 41 5 16 2 290 2 346 1 123 1 
194 1 12 1 240 1 
82 2 52 1 12 1 
38 1 248 2 53 1 79 2 363 2 87 2 281 2 97 2 
249 1 248 2 3 2 184 2 73 1 367 1 368 1 53 1 79 2 56 1 170 1 281 3 153 1 32 1 105 1 263 1 83 1 284 1 34 1 85 1 237 1 372 1 303 1 87 3 376 1 38 1 378 1 243 1 272 2 361 1 363 2 275 2 43 2 216 1 181 1 97 2 217 1 
38 1 248 1 277 1 79 1 71 1 363 1 87 1 171 1 281 1 97 1 
98 1 71 1 332 1 74 1 87 1 12 1 194 1 212 1 270 1 93 1 168 1 97 1 281 1 136 1 
248 1 71 1 74 1 87 1 12 1 194 1 212 1 270 1 79 1 93 1 168 2 363 1 136 2 97 1 281 1 
379 1 109 1 168 1 10 1 136 1 
51 1 194 1 379 1 109 1 168 2 251 1 12 1 136 2 
379 1 168 1 136 1 
45 1 248 1 109 1 71 1 87 1 38 1 277 1 168 1 79 1 363 1 171 1 136 1 97 1 281 1 
12 1 
159 1 194 1 379 1 109 1 168 2 251 1 12 1 136 2 
8 2 70 1 109 2 359 1 127 1 330 2 251 1 12 1 64 1 242 1 194 1 89 1 91 2 379 2 28 1 168 5 232 1 198 1 136 5 
53 1 240 1 
166 1 248 1 87 2 230 1 53 2 79 1 363 1 97 2 281 2 
60 1 213 1 62 1 
32 1 83 1 263 1 283 1 85 1 237 1 184 1 372 1 87 1 367 1 53 1 272 1 43 1 216 1 181 1 281 1 
32 1 263 1 83 1 85 1 372 1 301 1 237 1 184 1 87 2 367 1 254 1 213 1 79 1 272 1 363 1 43 1 216 1 181 1 97 1 281 2 
364 1 248 1 139 1 111 1 301 1 332 1 87 5 254 2 230 1 53 1 79 4 363 4 97 5 281 5 
314 1 79 2 71 1 363 2 87 2 171 1 281 2 97 2 
248 1 254 1 53 1 79 3 363 3 87 3 281 3 97 3 
79 1 71 1 363 1 87 1 171 1 281 1 97 1 
166 1 248 1 230 1 79 1 71 1 363 1 87 1 281 1 97 1 
249 1 248 2 71 1 3 1 184 1 73 1 128 1 74 1 367 1 254 1 368 1 53 1 230 1 79 3 168 1 56 1 170 1 281 4 136 1 153 1 32 1 105 1 263 1 83 1 34 1 85 1 372 1 301 1 237 1 87 4 376 1 38 1 212 1 270 1 93 1 272 1 361 1 363 3 275 2 43 1 216 1 181 1 381 1 97 3 
254 1 53 1 139 1 79 1 363 1 332 1 87 2 281 2 97 2 
248 1 71 1 301 1 74 1 128 1 87 3 12 1 254 2 191 1 212 1 230 1 270 1 168 1 79 3 93 1 363 3 136 1 97 3 281 3 
248 1 62 1 87 2 254 1 230 1 213 1 79 2 363 2 97 2 281 2 
32 1 83 1 263 1 85 1 237 1 184 1 372 1 87 1 367 1 53 1 272 1 43 1 181 1 216 1 281 1 
173 1 263 1 85 1 237 1 184 1 372 1 87 1 367 1 53 1 272 1 279 1 43 1 181 1 216 1 281 1 
249 1 3 4 56 1 57 1 102 1 170 1 153 1 60 2 284 2 34 1 373 1 62 2 140 1 376 1 336 1 14 1 306 1 268 1 360 1 341 1 213 2 361 2 275 2 344 1 
314 1 93 1 79 1 71 1 363 1 87 1 281 1 97 1 
233 1 125 1 
233 1 125 1 
262 1 84 1 
262 1 84 1 
262 1 84 1 
233 1 125 1 106 1 
233 1 125 1 106 1 
233 1 125 1 208 1 
338 1 233 2 125 2 77 1 262 1 84 1 
233 1 125 1 106 1 
233 1 100 1 125 1 
233 1 100 1 125 1 
233 1 100 1 125 1 
125 1 69 1 2 1 99 1 229 1 53 1 79 2 134 1 168 1 78 1 298 1 136 1 281 2 233 1 234 1 202 1 87 2 208 1 113 1 114 1 363 2 309 1 44 1 97 2 
233 2 125 2 203 2 2 2 86 1 12 1 113 3 338 1 337 1 114 2 29 1 178 1 134 2 168 2 245 1 309 2 18 1 136 2 44 1 
334 1 6 1 123 1 
349 1 334 1 6 1 
252 1 349 1 214 1 334 3 49 1 123 2 
252 1 349 1 214 1 110 1 334 2 123 1 
252 2 349 1 214 1 334 2 123 1 
365 1 69 1 70 1 23 2 251 1 352 2 25 1 229 1 52 1 228 1 194 1 168 5 28 3 78 1 81 1 57 1 102 1 232 2 58 1 136 5 172 1 82 3 8 1 109 4 330 1 373 1 158 1 12 2 360 1 91 1 379 1 179 2 
219 1 365 2 70 1 127 1 23 6 322 1 251 1 352 6 25 1 52 3 194 1 78 4 168 9 28 8 81 3 57 3 102 3 232 6 257 1 136 9 82 9 8 2 109 7 330 2 373 3 10 5 304 1 158 2 12 5 241 1 360 3 379 6 91 2 92 5 291 1 
365 1 127 1 23 2 352 2 194 1 52 2 228 1 168 3 28 3 78 1 81 1 57 1 102 1 232 2 136 3 172 1 82 4 8 1 109 2 330 1 373 1 158 1 12 3 360 1 91 1 179 1 
219 1 365 1 23 4 127 1 352 4 194 1 52 3 228 1 168 4 28 5 78 2 81 2 57 2 102 2 232 4 257 1 136 4 172 1 82 7 8 1 109 3 330 1 373 2 158 1 12 4 360 2 91 1 291 1 179 2 
216 1 280 1 240 1 
255 1 216 1 
21 1 
263 1 85 1 216 1 
211 1 216 1 
263 1 216 1 
311 1 263 1 85 1 297 1 216 3 280 2 
137 1 299 1 366 1 284 4 3 7 373 1 185 1 265 1 207 1 13 1 306 3 360 1 361 3 274 2 344 2 356 1 165 1 
137 1 299 1 366 1 284 4 3 7 373 1 185 1 265 1 207 1 13 1 306 3 360 1 361 3 274 2 344 2 356 1 165 1 
137 1 299 1 366 1 284 4 3 7 373 1 185 1 112 1 265 1 207 1 13 1 306 3 360 1 361 3 274 2 344 2 356 1 165 1 
249 1 366 2 3 31 185 1 56 1 81 3 102 3 57 3 231 1 356 5 137 1 299 2 153 1 138 1 331 4 284 16 34 1 9 1 373 4 265 1 305 1 207 2 13 2 306 10 377 1 269 1 360 4 343 3 361 15 274 3 275 2 344 5 345 1 165 1 
249 2 366 1 3 9 185 1 56 2 356 1 299 1 137 1 153 2 138 1 34 2 284 5 373 1 265 1 207 1 13 1 306 4 339 1 360 1 361 4 274 2 275 4 344 3 380 1 
349 1 315 1 184 1 320 1 4 1 49 1 353 1 187 1 367 1 6 1 355 1 150 1 151 1 259 2 59 1 104 1 174 1 33 1 108 1 372 1 334 2 176 1 340 1 41 1 42 2 90 1 272 1 290 1 43 1 123 1 
349 1 315 1 184 1 318 1 320 1 4 1 49 1 353 1 187 2 367 1 6 1 355 1 150 1 259 3 59 1 104 1 33 1 108 1 372 1 334 2 176 1 289 1 41 1 42 3 90 1 272 1 290 1 43 1 123 1 145 1 
349 1 315 1 184 1 4 1 320 1 49 1 353 1 187 2 367 1 6 1 355 1 150 1 259 2 59 1 104 1 372 1 334 2 289 1 41 1 42 2 90 1 272 1 43 1 145 1 123 1 
184 1 318 1 320 2 4 2 250 1 367 1 31 1 150 2 259 1 104 2 263 1 372 1 237 1 36 1 239 1 176 1 42 1 272 1 362 1 290 1 43 1 216 1 144 1 
349 1 315 1 184 1 320 1 4 1 49 1 367 1 6 1 150 1 151 1 259 1 59 1 104 1 33 1 108 1 372 1 334 2 176 1 340 1 42 1 90 1 272 1 290 1 43 1 123 1 145 1 
321 1 
292 1 348 1 247 1 293 1 98 1 184 2 250 1 186 2 251 3 194 1 52 2 196 4 200 1 260 2 103 1 8 1 263 1 155 2 12 2 307 2 212 1 270 1 117 1 272 2 216 1 124 1 365 1 312 2 70 1 71 1 74 1 367 1 225 1 132 1 76 1 326 2 28 2 168 5 232 2 136 5 281 1 82 2 330 1 237 2 372 1 332 1 239 1 87 1 177 2 379 6 91 1 93 1 43 2 180 1 97 1 
292 1 293 1 98 1 71 1 74 1 251 1 132 1 168 3 196 2 200 1 281 1 136 3 332 1 87 1 159 1 212 1 177 1 270 1 379 2 93 1 180 1 97 1 
292 1 293 1 98 1 71 1 74 1 251 1 132 1 194 1 168 3 196 3 200 1 281 1 136 3 332 1 87 1 12 1 307 1 159 1 212 1 379 1 270 1 93 1 180 1 97 1 
292 1 293 1 98 1 71 1 74 1 251 1 132 1 194 1 168 3 196 3 200 1 281 1 136 3 260 1 332 1 87 1 12 1 159 1 307 1 212 1 177 1 270 1 379 2 93 1 180 1 97 1 
292 1 293 1 348 1 98 1 251 3 186 2 194 5 52 2 196 6 200 1 260 4 8 1 155 2 12 5 159 1 307 4 212 1 270 1 161 1 164 1 312 2 70 1 71 1 74 1 132 1 76 1 135 1 168 5 28 1 326 2 232 1 281 1 136 5 282 1 330 1 332 1 87 1 177 4 379 7 91 1 93 1 95 1 180 1 97 1 
292 1 293 1 348 1 98 1 186 2 251 2 52 2 194 1 196 4 200 1 260 2 8 1 155 2 12 2 307 2 212 1 270 1 124 1 312 2 70 1 71 1 74 1 132 1 76 1 168 4 28 1 326 2 232 1 281 1 136 4 82 2 330 1 332 1 87 1 177 2 91 1 379 4 93 1 180 1 97 1 
292 1 348 1 293 1 98 1 312 2 70 1 71 1 74 1 251 2 186 2 132 1 194 1 52 2 76 1 326 2 28 1 168 4 196 4 232 1 200 1 260 2 281 1 136 4 282 1 8 1 330 1 155 2 332 1 87 1 12 1 307 2 177 2 212 1 379 4 270 1 91 1 93 1 161 1 95 1 180 1 97 1 
292 1 348 1 293 1 98 1 312 2 70 1 71 1 74 1 251 2 186 2 132 1 194 1 52 2 76 1 326 2 28 1 168 4 196 4 232 1 200 1 260 2 281 1 136 4 282 1 8 1 330 1 155 2 332 1 87 1 12 1 307 2 177 2 212 1 379 4 270 1 91 1 93 1 161 1 95 1 180 1 97 1 
292 1 348 1 293 1 220 2 98 1 312 2 167 1 70 1 71 1 74 1 251 2 253 1 27 2 132 1 194 1 28 1 168 4 196 4 232 1 328 1 200 1 260 2 281 1 136 4 82 2 282 1 8 1 330 1 155 2 332 1 87 1 12 1 307 2 177 2 212 1 379 4 270 1 91 1 93 1 180 1 97 1 
292 1 348 1 293 1 98 1 312 2 70 1 71 1 74 1 251 2 186 2 132 1 194 1 52 2 76 1 326 2 28 1 168 4 196 5 232 1 200 1 281 1 136 4 260 3 282 1 8 1 330 1 155 2 332 1 87 1 12 1 307 3 212 1 177 3 91 1 270 1 379 5 93 1 161 1 95 1 180 1 164 1 97 1 
292 1 348 1 293 1 98 1 312 2 70 1 71 1 74 1 251 2 186 2 132 1 194 1 52 2 76 1 326 2 28 1 168 4 196 5 232 1 200 1 281 1 136 4 260 3 282 1 8 1 330 1 155 2 332 1 87 1 12 1 307 3 212 1 177 3 91 1 270 1 379 5 93 1 161 1 95 1 180 1 164 1 97 1 
292 1 293 1 348 1 98 1 251 2 194 1 196 4 200 1 260 2 8 1 155 2 12 1 307 2 212 1 270 1 124 1 220 2 312 2 70 1 71 1 74 1 27 2 132 1 168 4 28 1 328 1 232 1 281 1 136 4 82 2 330 1 332 1 87 1 177 2 91 1 379 4 93 1 180 1 97 1 
249 1 3 6 185 1 53 2 56 1 170 1 299 1 137 1 153 1 60 1 34 1 284 3 62 1 373 1 265 1 376 1 207 1 240 1 306 2 341 1 360 1 213 1 361 3 274 1 275 2 344 2 
249 2 3 14 188 1 368 1 193 1 53 1 56 2 81 2 102 2 57 1 371 1 356 1 170 1 153 2 60 11 331 3 34 2 284 8 62 4 373 1 376 2 88 1 306 2 160 1 269 1 360 2 243 1 213 11 343 3 361 6 344 1 275 4 345 1 
249 1 184 1 319 1 3 2 367 1 254 1 368 1 53 1 79 1 56 1 170 1 281 2 153 1 32 1 263 1 83 1 283 1 85 1 34 1 284 1 372 1 237 1 301 1 62 1 87 2 376 1 37 1 267 1 160 1 243 1 272 1 361 1 363 1 43 1 275 2 216 1 181 1 97 1 
249 3 0 2 184 3 3 20 185 1 254 1 53 2 56 3 102 2 57 2 356 4 299 1 153 3 60 7 263 2 301 1 62 7 265 1 207 1 306 8 160 1 360 3 213 7 271 1 272 3 361 10 274 1 363 1 275 6 216 2 73 2 367 2 222 2 368 1 79 1 30 2 80 2 81 2 170 3 281 3 137 1 32 2 83 2 34 3 85 2 284 10 237 1 372 2 373 3 287 1 87 3 376 3 342 1 243 1 344 4 43 3 181 2 145 1 97 1 
249 2 184 8 3 2 250 1 367 2 254 1 368 1 79 1 101 1 149 1 56 2 199 1 170 2 281 1 153 2 174 1 175 1 263 2 285 1 34 2 284 1 372 2 237 2 87 1 239 1 376 2 341 1 378 2 65 1 243 1 272 8 361 1 363 1 43 7 275 4 216 3 122 1 145 1 97 1 
248 1 249 1 3 3 294 1 230 1 79 1 56 1 81 1 102 1 57 1 170 1 281 1 153 1 60 1 34 1 284 1 62 1 373 1 87 1 376 1 306 1 160 1 360 1 213 1 361 2 363 1 344 1 275 2 97 1 
153 1 60 1 249 1 34 1 284 2 3 2 62 1 140 1 376 1 306 1 341 1 360 1 213 1 56 1 102 1 275 2 356 1 170 1 
153 1 60 1 249 1 34 1 3 2 62 1 373 1 376 1 306 1 268 1 341 1 213 1 361 2 56 1 57 1 344 1 275 2 170 1 
153 1 60 2 249 1 34 1 284 2 3 4 373 1 62 2 376 1 306 2 341 1 360 1 213 2 361 2 56 1 81 1 57 1 102 1 344 1 275 2 356 1 170 1 
153 1 60 1 249 1 34 1 284 2 3 2 62 1 140 1 376 1 306 1 360 1 213 1 56 1 102 1 275 2 356 1 170 1 122 1 
153 1 60 1 249 1 34 1 3 2 62 1 373 1 376 1 306 1 268 1 213 1 361 2 56 1 57 1 344 1 275 2 170 1 122 1 
153 1 60 2 249 1 34 1 284 2 3 4 373 1 62 2 376 1 306 2 360 1 213 2 361 2 56 1 81 1 57 1 102 1 344 1 275 2 356 1 170 1 122 1 
153 1 60 2 249 1 34 1 284 2 3 4 373 1 62 2 376 1 306 2 360 1 213 2 361 2 56 1 81 1 57 1 102 1 344 1 275 2 356 1 170 1 
249 1 3 2 184 1 73 1 367 1 368 1 53 1 56 1 170 1 281 1 153 1 32 1 263 1 83 1 284 1 85 1 34 1 372 1 237 1 87 1 376 1 243 1 272 1 361 1 43 1 275 2 181 1 216 1 
249 1 3 2 184 1 367 1 190 1 368 1 53 1 279 1 56 1 170 1 281 1 173 1 153 1 263 1 284 1 85 1 34 1 372 1 237 1 87 1 376 1 243 1 272 1 361 1 43 1 275 2 181 1 216 1 
249 1 3 4 81 1 56 1 102 1 57 1 170 1 356 1 153 1 60 2 284 2 34 1 62 2 373 1 376 1 306 2 160 1 360 1 213 2 361 2 275 2 344 1 
249 1 3 4 184 1 73 1 367 1 222 1 56 1 81 1 57 1 102 1 356 1 170 1 281 1 153 1 32 1 60 2 174 1 83 1 263 1 284 2 85 1 34 1 372 1 373 1 62 2 87 1 376 1 306 2 360 1 213 2 272 1 361 2 344 1 43 1 275 2 181 1 216 1 
248 1 249 1 3 3 227 1 230 1 79 1 56 1 81 1 57 1 102 1 356 1 170 1 281 1 153 1 60 1 34 1 284 2 373 1 62 1 87 1 376 1 306 1 160 1 360 1 213 1 361 1 363 1 275 2 97 1 
218 1 249 2 317 1 3 19 26 1 224 2 226 2 56 2 81 3 102 3 57 3 256 1 356 3 153 2 331 2 34 2 284 9 373 3 206 1 306 6 40 1 269 1 360 3 343 1 361 10 143 1 344 3 275 4 380 1 345 1 
249 3 317 1 3 26 129 1 26 2 224 1 226 4 56 3 81 3 169 1 102 3 57 2 256 2 258 1 356 2 153 3 138 2 34 3 284 14 331 2 373 2 302 1 63 1 306 4 210 1 40 1 269 2 360 3 343 2 361 12 143 1 344 2 275 6 380 1 
249 3 1 1 3 41 185 1 56 3 57 4 102 4 256 1 258 1 356 4 299 1 153 3 302 1 265 1 63 1 207 1 306 8 210 1 360 5 269 3 361 21 274 1 275 6 218 1 317 1 129 1 26 2 224 1 226 4 81 4 169 1 137 1 138 1 284 20 34 3 331 4 373 5 40 1 343 3 344 4 143 1 345 1 380 1 
218 1 249 4 1 1 317 1 3 38 185 1 129 1 26 2 224 1 226 4 56 4 81 4 169 1 102 4 57 3 258 1 256 1 356 3 137 1 299 1 153 4 138 2 331 4 34 4 284 20 373 4 302 1 265 1 63 1 207 1 306 7 210 1 40 1 269 3 360 5 343 3 361 18 274 1 143 1 344 4 275 8 380 1 345 1 
249 2 317 1 3 52 185 1 129 1 26 1 224 1 226 4 56 2 81 7 169 1 102 7 57 7 258 1 256 1 356 7 137 1 299 1 153 2 138 1 331 4 34 2 284 27 373 8 302 1 265 1 63 1 207 1 88 2 306 14 210 1 40 1 269 2 360 8 343 4 361 25 274 1 143 1 344 7 275 4 380 1 345 2 
338 1 233 1 146 1 125 1 114 1 134 1 2 1 86 1 245 1 309 1 
298 1 208 1 
233 1 125 1 147 1 114 1 134 1 2 1 236 1 309 1 329 1 
75 1 106 1 
100 1 77 1 54 1 
233 1 125 1 203 1 2 1 86 1 12 1 113 2 338 1 337 1 114 1 29 1 178 1 168 1 134 1 245 1 309 1 44 1 136 1 
233 1 125 1 203 1 2 1 86 1 12 1 113 2 338 1 337 1 114 1 29 1 178 1 168 1 134 1 245 1 309 1 44 1 136 1 
233 1 125 1 203 1 2 1 86 1 12 1 113 2 338 1 337 1 114 1 29 1 178 1 168 1 134 1 245 1 309 1 44 1 136 1 
75 1 77 1 106 1 
75 1 77 1 106 1 
100 1 54 1 
100 1 77 1 54 1 
202 1 99 1 
233 1 125 1 115 1 114 1 109 1 168 1 134 1 2 1 309 1 136 1 
249 1 313 1 184 2 3 2 367 1 368 1 354 1 101 1 56 1 170 1 281 2 153 1 235 1 261 1 263 1 175 1 34 1 284 1 372 1 35 1 87 2 376 1 160 1 378 2 243 1 272 2 361 1 275 2 43 2 216 1 97 2 
152 1 104 1 349 1 174 1 33 1 315 1 372 1 184 2 334 2 49 1 367 1 6 1 323 1 39 1 90 1 272 2 43 2 123 1 145 1 
104 1 349 1 33 1 315 1 184 1 372 1 334 2 49 1 367 1 6 1 39 1 90 1 272 1 278 1 43 1 123 1 145 1 
104 1 263 1 372 1 237 1 184 1 250 1 239 1 367 1 323 1 133 1 272 1 362 1 43 1 216 1 
152 1 104 1 349 1 33 1 315 1 372 1 184 1 334 2 49 1 367 1 6 1 323 1 39 1 90 1 272 1 43 1 123 1 145 1 
209 1 
194 1 89 1 28 1 359 1 232 1 12 1 240 1 
70 1 186 1 251 1 52 1 76 1 194 1 28 1 326 1 168 1 232 1 136 1 82 1 8 1 330 1 12 2 91 1 379 1 
0 2 46 1 184 3 251 3 148 2 352 6 194 2 52 6 255 3 55 1 195 2 297 1 102 2 57 2 154 2 8 4 300 2 263 3 359 1 12 8 211 2 360 2 117 1 272 3 163 1 118 2 66 2 216 10 20 1 365 2 70 4 23 6 74 2 276 1 367 3 325 2 28 9 168 5 81 2 232 8 280 2 136 5 82 12 174 1 85 3 330 4 372 4 237 1 373 2 142 2 89 1 91 4 379 5 43 3 
365 1 70 2 23 5 72 1 251 1 129 1 148 1 352 5 52 3 194 2 168 1 28 8 195 2 81 2 169 1 102 2 57 2 232 5 258 1 136 1 82 6 8 2 331 1 330 2 373 2 63 1 375 1 12 5 210 1 269 1 360 2 379 1 91 2 117 1 343 1 
45 1 248 1 70 1 71 1 148 1 277 1 168 1 28 2 79 1 195 2 232 2 171 1 281 1 136 1 299 1 137 1 8 1 330 1 373 1 87 1 207 1 38 1 308 1 360 2 91 1 363 1 95 1 97 1 
8 1 70 1 359 1 330 1 12 1 89 1 194 1 91 1 28 1 232 1 
82 10 0 1 23 5 373 2 148 1 352 5 12 5 360 2 52 5 28 5 195 2 81 2 102 2 57 2 232 5 
194 1 379 1 168 1 251 1 12 1 136 1 
247 1 20 2 365 2 70 1 127 1 184 4 250 1 251 2 367 1 324 1 28 2 168 3 197 1 232 2 136 3 103 1 8 2 263 1 330 2 372 1 237 2 239 1 91 2 379 4 272 4 117 2 163 1 43 4 216 1 
249 1 248 2 3 1 184 1 73 1 367 1 368 1 53 1 79 2 56 1 170 1 281 3 153 1 32 1 105 1 83 1 263 1 85 1 34 1 237 1 372 1 87 3 376 1 38 1 272 1 361 1 363 2 275 2 43 1 181 1 216 1 97 2 
82 4 8 1 365 1 70 1 23 2 330 1 352 2 12 4 52 2 194 2 91 1 28 1 117 1 274 1 232 2 
2 1 333 1 309 1 
2 1 333 1 309 1 
202 1 116 1 2 1 86 1 309 1 
2 1 333 1 309 1 
2 1 309 1 182 1 
2 1 309 1 182 1 
2 1 309 1 182 1 
2 1 309 1 
233 1 125 1 
137 1 299 1 153 2 138 1 249 2 284 4 34 2 3 8 373 1 185 1 265 1 207 1 306 3 360 1 361 4 274 1 56 2 344 2 275 4 356 1 
299 1 137 1 284 3 3 6 185 1 373 1 265 1 207 1 240 1 306 2 360 1 361 3 274 1 344 2 
153 1 249 1 34 1 284 2 3 4 373 1 306 2 360 1 369 1 361 2 56 1 81 1 57 1 102 1 344 1 275 2 356 1 
331 2 284 3 3 7 373 1 306 2 269 1 360 1 343 1 361 4 81 1 57 1 102 1 344 1 345 1 356 1 
249 2 3 23 185 1 193 1 81 2 56 2 102 2 57 2 356 4 137 1 299 2 153 2 138 2 284 11 331 2 34 2 373 3 265 1 157 1 207 2 88 1 306 9 360 3 343 2 361 12 274 1 344 5 275 4 345 1 
361 1 331 1 3 1 
343 1 284 1 3 1 
153 1 249 1 0 1 34 1 284 3 3 6 373 1 306 3 360 1 369 1 361 3 56 1 81 1 102 1 57 1 275 2 344 2 356 1 
249 1 3 12 129 1 56 1 81 2 102 2 57 2 169 1 258 1 356 1 153 1 331 1 34 1 284 6 373 2 63 1 306 2 210 1 269 1 360 2 343 1 361 6 275 2 344 1 380 1 
137 1 299 1 284 3 3 6 373 1 207 1 306 2 360 1 361 3 344 1 356 1 
299 1 153 1 138 1 249 1 284 1 34 1 3 3 185 1 265 1 157 1 207 1 306 2 361 2 56 1 344 1 275 2 356 1 
299 2 137 1 153 1 249 1 34 1 284 5 3 10 373 2 207 2 306 5 308 1 360 2 361 5 56 1 275 2 344 3 380 1 356 2 
153 1 249 1 34 1 284 2 3 2 306 1 360 1 56 1 102 1 275 2 380 1 356 1 
153 1 249 1 34 1 284 2 3 4 373 1 306 2 360 1 361 2 56 1 81 1 57 1 102 1 344 1 275 2 380 1 356 1 
299 1 218 1 153 3 138 1 249 3 34 3 284 1 3 3 157 1 207 1 306 2 361 2 56 3 275 6 344 1 380 1 356 1 
218 1 249 5 3 34 185 1 369 1 56 5 81 3 231 1 102 3 57 3 356 5 137 2 299 3 153 5 138 2 331 4 34 5 284 16 9 1 373 5 265 1 157 1 207 3 306 12 377 1 269 1 360 5 343 3 361 18 274 1 275 10 344 7 380 1 345 1 
249 1 3 8 185 1 56 1 258 1 299 1 137 1 153 1 331 1 34 1 284 4 373 1 265 1 207 1 306 2 360 1 269 1 343 1 361 4 274 1 275 2 344 2 380 1 
249 2 3 11 185 1 369 1 56 2 81 1 102 1 258 1 356 1 137 1 299 1 153 2 331 2 34 2 284 6 373 1 265 1 207 1 306 3 269 1 360 2 343 1 361 5 274 1 344 2 275 4 380 1 345 1 
249 3 3 19 185 1 129 1 369 1 56 3 81 2 102 2 57 2 169 1 258 1 356 1 137 1 299 1 153 3 138 1 331 1 34 3 284 9 373 3 265 1 63 1 207 1 306 4 210 1 269 1 360 3 343 1 361 10 274 1 275 6 344 3 380 1 
249 3 3 17 185 1 129 1 369 1 56 3 81 2 102 2 57 1 169 1 258 1 356 2 137 1 299 1 153 3 138 1 331 1 34 3 284 10 373 2 265 1 63 1 207 1 306 5 210 1 269 1 360 3 343 1 361 7 274 1 275 6 344 3 380 1 
249 1 3 8 185 1 56 1 258 1 299 1 137 1 153 1 331 1 34 1 284 4 373 1 265 1 207 1 306 2 360 1 269 1 343 1 361 4 274 1 275 2 344 2 380 1 
249 1 3 12 129 1 56 1 81 2 102 2 57 2 169 1 258 1 356 1 153 1 331 1 34 1 284 6 373 2 63 1 306 2 210 1 269 1 360 2 343 1 361 6 275 2 344 1 380 1 
249 4 3 18 185 1 129 1 369 1 56 4 81 2 169 1 102 2 57 1 258 1 356 2 137 1 299 1 153 4 138 2 331 1 34 4 284 10 373 2 265 1 63 1 207 1 306 5 210 1 269 1 360 3 343 1 361 8 274 1 275 8 344 3 380 1 
218 1 249 4 3 16 129 1 56 4 81 3 169 1 102 3 57 2 258 1 356 3 153 4 138 2 331 1 34 4 284 9 373 2 63 1 306 6 210 1 269 1 360 3 343 1 361 7 275 8 344 3 380 1 
299 3 137 1 284 3 3 7 373 1 185 2 265 1 207 3 306 6 360 1 361 4 344 3 356 3 
218 1 249 4 3 18 185 1 129 1 56 4 81 2 169 1 102 2 57 1 258 1 356 1 137 1 299 1 153 4 138 2 331 1 34 4 284 10 373 2 265 1 63 1 207 1 306 4 210 1 269 1 360 3 343 1 361 8 274 1 275 8 344 3 380 1 
53 1 15 1 139 1 332 1 87 1 281 1 97 1 
139 1 332 1 87 1 53 1 15 1 244 1 94 1 246 1 183 1 96 1 97 1 281 1 
263 1 272 1 372 1 184 1 237 1 250 1 43 1 216 1 239 1 367 1 240 1 
32 1 263 1 85 1 372 1 237 1 184 1 87 2 367 1 254 1 53 1 79 1 272 1 363 1 43 1 216 1 181 1 97 1 281 2 
20 1 71 1 184 1 367 1 254 1 53 1 79 1 281 2 32 1 300 1 263 2 85 2 372 1 87 2 211 1 270 1 272 1 93 1 363 2 43 1 181 1 216 3 97 2 
20 1 71 1 184 2 367 1 254 1 53 1 79 1 281 2 173 1 300 1 263 2 85 2 372 1 87 2 211 1 270 1 272 2 93 1 363 2 43 2 181 1 216 3 19 1 97 2 
20 1 184 3 74 1 367 1 130 1 189 1 194 1 168 2 255 1 280 1 136 2 300 1 263 1 85 1 372 1 237 1 12 1 211 1 379 1 272 3 43 3 216 4 19 1 
20 1 300 1 263 1 85 1 237 1 372 1 184 3 74 1 367 1 12 1 142 1 211 1 194 1 379 1 168 2 272 3 255 1 43 3 216 4 280 1 19 1 136 2 
272 1 372 1 184 1 149 1 43 1 367 1 
174 1 126 1 175 1 263 2 285 1 85 1 237 2 184 7 372 3 367 2 131 1 378 1 65 1 272 7 149 1 120 1 297 1 43 6 199 1 216 3 145 1 
249 2 184 1 3 6 185 1 254 1 53 2 56 2 299 1 153 2 60 1 263 1 62 1 265 1 207 1 306 2 160 1 360 1 213 1 272 1 361 3 363 1 274 1 275 4 216 1 73 1 367 1 222 1 79 1 30 1 170 2 281 2 137 1 32 1 235 1 174 1 83 1 34 2 85 1 284 3 372 1 373 1 87 2 376 2 43 1 344 2 181 1 97 1 
70 2 184 1 74 1 251 1 194 1 325 1 28 1 168 3 255 1 232 1 280 1 136 3 8 2 109 1 359 1 330 2 237 1 12 1 142 1 89 1 91 2 379 2 272 1 163 1 118 1 66 1 43 1 216 2 
174 1 263 1 46 1 85 1 184 2 372 2 367 1 272 2 149 1 297 1 43 2 216 2 280 1 
174 1 263 1 372 1 237 1 184 4 250 1 239 1 141 1 367 1 272 4 43 4 216 1 19 1 
20 1 263 1 61 1 85 1 184 2 372 2 367 1 131 1 342 1 272 2 370 1 120 1 43 2 216 1 
349 1 315 1 272 1 372 1 184 1 237 1 334 1 43 1 367 1 6 1 
174 1 354 1 263 1 175 1 272 2 372 1 184 2 43 2 216 1 367 1 145 1 
20 1 174 1 175 1 263 2 285 1 237 1 184 5 372 2 250 1 239 1 141 1 367 2 272 5 43 4 199 1 216 3 
20 1 174 1 175 1 263 2 285 1 237 1 184 5 372 2 250 1 205 1 239 1 141 1 367 2 272 5 43 4 216 3 
173 1 263 1 85 1 372 1 237 1 184 1 87 2 367 1 254 1 53 1 79 1 272 1 363 1 43 1 216 1 181 1 97 1 281 2 
20 1 126 1 263 1 85 1 184 1 372 2 367 1 131 1 272 1 120 1 297 1 43 1 216 1 
53 1 22 1 204 1 11 1 335 1 
109 1 22 2 71 1 204 1 24 1 74 1 128 1 11 2 335 2 12 1 194 1 212 1 53 1 270 1 93 1 168 2 162 1 17 1 136 2 
261 1 313 1 204 1 35 1 11 1 87 1 335 1 97 1 281 1 
162 1 204 1 17 1 
41 1 355 1 353 1 240 1 
176 1 41 1 42 1 355 1 290 1 353 1 259 1 
4 1 150 1 259 1 
67 1 7 2 221 1 353 1 176 1 192 1 41 1 42 3 355 1 290 1 151 1 259 3 
176 1 41 1 42 2 355 1 16 1 290 1 353 1 187 1 259 2 
316 1 334 1 295 1 6 1 176 1 42 1 41 1 290 1 151 1 259 1 123 1 
176 1 41 1 42 1 355 1 290 1 151 1 259 1 
176 1 42 1 355 2 290 1 151 1 353 1 259 1 
107 1 50 1 288 1 176 2 41 1 42 2 355 1 290 2 151 1 259 2 
357 1 47 1 156 1 353 1 187 2 295 1 176 1 42 3 41 2 355 1 290 1 151 1 259 3 
349 1 351 1 334 2 49 1 353 1 187 1 6 1 176 1 41 1 42 2 355 1 290 1 151 1 259 2 123 1 
357 1 353 1 187 2 295 1 176 2 42 4 41 2 355 1 16 1 290 2 327 1 151 1 259 4 
176 1 41 1 42 1 355 1 290 1 151 1 353 1 259 1 
67 1 357 1 7 1 353 2 187 2 295 1 176 1 192 1 42 4 41 3 355 2 273 1 290 1 259 4 
201 1 286 1 187 1 353 1 176 1 41 1 42 2 355 1 290 1 215 1 151 1 259 2 
67 1 7 2 5 1 353 1 176 1 192 2 41 1 42 3 355 1 290 1 151 1 259 3 
68 2 296 1 41 2 358 1 
176 1 42 1 290 1 151 1 310 1 259 1 
176 1 41 1 42 2 47 1 355 1 290 1 151 1 353 1 187 1 259 2 
266 1 
176 1 41 1 42 1 355 1 290 1 151 1 353 1 259 1 
7 1 47 1 187 1 353 1 176 1 42 3 41 1 355 1 290 1 151 1 259 3 
357 1 41 1 273 1 295 1 
41 1 355 1 

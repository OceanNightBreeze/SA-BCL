#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 307 31 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 307 31 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 307 31 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 307 31 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 307 31 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
69 1 120 2 328 6 122 1 44 2 139 1 75 2 187 1 240 1 28 9 104 1 285 2 106 2 287 1 145 1 81 1 357 1 197 5 56 1 35 2 153 9 59 1 180 1 21 1 228 2 369 4 319 3 206 1 
69 1 120 2 328 6 122 1 44 2 139 1 75 2 187 1 240 1 28 9 104 1 285 2 106 2 287 1 145 1 81 1 357 1 197 5 56 1 35 2 153 9 59 1 180 1 21 1 369 4 228 2 319 3 206 1 
69 1 120 2 328 7 122 1 44 2 139 1 75 2 187 1 240 1 28 10 104 1 285 2 106 2 287 1 145 1 81 1 357 1 197 6 56 1 35 2 153 10 59 1 180 1 21 1 369 5 228 2 319 4 206 1 
69 1 120 2 328 4 122 1 44 2 139 1 75 2 187 1 240 1 28 7 104 1 285 2 106 2 287 1 145 1 81 1 357 1 197 4 56 1 35 2 153 7 180 1 21 1 369 3 228 1 319 2 206 1 
69 1 328 3 35 1 153 4 44 1 75 1 59 1 28 4 285 1 21 1 228 2 369 2 106 1 319 1 287 1 145 1 81 1 197 3 
69 1 120 1 35 1 153 2 44 1 75 1 104 1 28 2 240 1 285 1 213 1 145 1 267 1 63 1 81 1 197 1 
69 1 120 1 328 1 35 2 153 3 44 2 28 3 369 1 319 1 145 1 206 1 81 1 197 2 
69 1 120 1 328 7 44 2 123 1 75 1 28 9 285 1 241 1 106 1 287 1 145 1 81 1 357 1 197 5 56 1 35 2 153 9 59 1 21 1 369 4 228 2 319 3 206 1 
69 1 120 1 328 7 44 2 123 1 75 1 28 9 285 1 241 1 106 1 287 1 145 1 81 1 357 1 197 5 56 1 35 2 153 9 59 1 21 1 369 4 228 2 319 3 206 1 
340 1 262 1 295 1 
2 2 295 1 156 1 
189 2 83 2 109 2 322 1 323 2 305 2 99 2 333 1 
136 1 72 1 305 3 99 2 76 1 333 1 100 1 102 2 264 1 189 2 215 1 353 1 245 1 290 1 291 1 149 2 310 1 175 2 199 1 83 2 132 2 109 2 110 1 316 1 179 1 112 1 225 1 87 1 345 1 115 1 279 2 322 1 323 3 93 1 118 1 64 1 230 1 
189 1 83 1 109 1 322 1 323 1 305 1 99 1 195 1 355 1 251 1 
1 1 83 1 360 1 340 1 305 1 331 1 317 1 295 1 251 1 335 1 253 1 323 1 51 1 80 1 
1 2 83 1 360 1 340 1 109 1 305 1 331 1 99 1 295 1 251 1 189 1 335 2 253 1 323 1 80 1 
1 1 335 1 36 1 53 1 55 1 
1 2 335 2 126 1 340 1 36 1 14 1 295 1 55 1 
1 1 335 1 55 1 
1 1 83 1 109 1 36 1 305 1 99 1 251 1 242 1 189 1 335 1 322 1 323 1 195 1 355 1 
295 1 
1 2 335 2 11 1 126 1 340 1 36 1 295 1 55 1 
293 1 1 5 259 1 340 1 152 1 95 1 36 2 37 1 168 1 295 1 88 2 143 1 335 5 126 1 372 2 42 1 373 1 55 2 150 2 
262 1 333 1 
83 2 109 1 155 1 305 2 99 1 333 2 189 1 320 1 323 2 
166 1 200 1 311 1 
175 1 136 1 132 1 274 1 305 1 76 1 179 1 333 1 102 1 87 1 264 1 215 1 323 1 93 1 291 1 230 1 
175 1 83 1 136 1 132 1 109 1 305 2 99 1 76 1 179 1 170 1 102 1 87 1 264 1 280 1 215 1 323 2 93 1 291 1 230 1 311 1 
83 5 109 4 26 1 305 5 98 1 99 4 317 1 333 1 170 1 189 1 320 1 280 2 323 5 325 1 
83 2 109 2 323 2 305 2 99 2 195 1 251 1 344 1 
189 1 83 3 280 1 109 3 323 3 305 3 99 3 333 1 
83 1 109 1 323 1 305 1 99 1 195 1 251 1 
189 1 83 1 320 1 109 1 155 1 323 1 305 1 99 1 251 1 
1 1 136 1 305 4 331 1 99 3 76 1 333 1 100 1 306 1 170 1 102 1 264 1 189 2 335 1 266 1 215 1 245 1 290 1 291 1 80 1 149 2 310 1 175 1 199 1 83 3 360 1 132 1 110 1 109 3 316 1 179 1 112 1 225 1 87 1 251 1 320 1 253 1 279 1 280 1 322 1 93 1 323 4 118 1 230 1 
83 2 280 1 109 1 323 2 305 2 99 1 333 1 317 1 325 1 
1 1 83 3 360 1 109 3 305 3 331 1 99 3 170 1 306 1 295 1 251 1 189 1 320 1 335 1 253 1 280 2 323 3 80 1 247 1 
83 2 166 1 109 2 305 2 99 2 189 1 320 1 280 1 323 2 311 1 
175 1 136 1 132 1 305 1 179 1 76 1 333 1 102 1 87 1 264 1 215 1 323 1 93 1 291 1 230 1 
175 1 136 1 132 1 305 1 179 1 45 1 76 1 333 1 102 1 87 1 264 1 215 1 323 1 291 1 270 1 
166 2 100 1 211 1 47 1 245 2 149 2 310 1 311 2 151 1 58 1 16 1 200 2 316 1 112 1 225 1 39 1 343 1 277 1 279 4 118 1 64 2 162 1 256 1 303 1 
83 1 253 1 109 1 323 1 305 1 99 1 251 1 344 1 
332 1 347 1 
332 1 347 1 
288 1 117 1 
288 1 117 1 
288 1 117 1 
190 1 332 1 347 1 
190 1 332 1 347 1 
332 1 347 1 194 1 
90 1 288 1 138 1 117 1 332 2 347 2 
190 1 332 1 347 1 
326 1 332 1 347 1 
326 1 332 1 347 1 
326 1 332 1 347 1 
176 1 1 1 165 1 83 2 273 1 109 2 305 2 332 1 99 2 333 1 124 1 335 1 144 1 243 1 49 1 323 2 23 1 347 1 324 1 194 1 66 1 163 1 257 1 258 1 
1 2 165 1 273 2 138 1 85 1 365 1 332 2 263 1 295 1 124 3 335 2 351 2 243 2 23 2 347 2 324 2 348 1 356 1 271 1 
106 1 75 1 285 1 
213 1 75 1 285 1 
106 2 213 1 207 1 268 1 82 1 285 3 
106 1 213 1 207 1 268 1 101 1 285 2 
106 1 213 1 207 1 268 2 285 2 
1 5 259 3 2 3 71 2 3 1 236 2 211 1 335 5 126 1 49 1 55 1 312 1 150 1 293 2 151 1 58 1 16 1 361 2 340 1 36 4 86 1 295 2 156 1 88 1 116 1 372 1 42 1 301 1 163 1 232 1 185 1 258 1 
164 1 1 9 259 8 2 9 71 6 349 1 77 1 168 1 211 3 335 9 126 1 53 5 55 6 150 2 313 1 293 6 151 3 58 3 16 3 361 6 340 1 178 5 36 7 86 2 295 5 156 3 88 2 114 1 61 1 372 2 42 1 301 2 232 3 258 4 185 1 
1 3 259 3 71 2 2 4 3 1 236 1 168 1 211 1 335 3 150 1 293 2 151 1 58 1 16 1 361 2 340 1 36 2 86 1 295 3 156 2 88 1 116 1 372 1 301 1 232 1 258 1 
164 1 1 4 259 5 2 7 71 4 349 1 3 1 236 2 168 1 211 2 335 4 150 1 293 4 151 2 58 2 16 2 361 4 340 1 36 3 86 1 295 4 156 3 88 1 61 1 116 1 372 1 301 1 232 2 258 2 
229 1 262 1 76 1 
315 1 76 1 
57 1 
215 1 76 1 291 1 
50 1 76 1 
76 1 291 1 
229 2 215 1 221 1 76 3 291 1 148 1 
233 1 16 1 84 1 275 1 9 1 211 1 32 1 279 7 47 3 146 1 245 3 94 1 129 1 13 1 269 2 64 4 256 2 
233 1 16 1 84 1 275 1 9 1 211 1 32 1 279 7 47 3 146 1 245 3 94 1 129 1 13 1 269 2 64 4 256 2 
233 1 16 1 84 1 275 1 9 1 211 1 32 1 370 1 279 7 47 3 146 1 245 3 94 1 129 1 13 1 269 2 64 4 256 2 
233 2 100 1 9 1 103 1 211 4 32 1 171 4 47 10 46 1 146 2 289 3 245 15 244 1 129 2 269 3 13 5 149 2 310 1 58 3 151 3 16 4 84 1 17 1 275 1 316 1 112 1 368 1 227 1 279 31 94 2 371 1 64 16 256 5 232 3 
233 1 16 1 84 1 275 1 316 2 96 1 112 2 100 2 141 1 211 1 227 1 32 1 279 9 47 4 146 1 245 4 94 1 129 1 13 1 269 2 64 5 256 3 149 4 310 2 
69 1 120 1 328 1 136 1 24 1 44 1 75 1 78 1 102 1 210 1 28 2 285 2 106 1 213 1 145 1 216 1 81 1 82 1 309 1 218 1 197 1 175 1 35 1 198 1 339 1 132 1 153 2 250 1 87 1 92 1 
69 1 120 1 328 2 136 1 24 1 44 1 75 1 78 1 102 1 28 3 285 2 106 1 213 1 145 1 216 1 193 1 82 1 309 1 218 1 197 1 175 1 35 1 198 1 339 1 132 1 153 3 223 1 87 1 92 1 299 1 
69 1 120 1 328 2 136 1 75 1 102 1 28 2 285 2 213 1 106 1 145 1 216 1 82 1 309 1 218 1 197 1 175 1 198 1 339 1 132 1 153 2 223 1 87 1 92 1 299 1 
120 2 175 1 0 1 35 1 136 1 132 1 153 1 44 1 186 1 76 1 179 1 28 1 102 1 87 1 29 1 191 1 216 2 92 2 352 1 161 1 291 1 193 1 218 2 
120 1 136 1 24 1 44 1 75 1 78 1 102 1 28 1 285 2 106 1 213 1 216 1 81 1 82 1 309 1 218 1 175 1 35 1 198 1 339 1 132 1 153 1 223 1 250 1 87 1 92 1 
113 1 
1 5 2 2 136 1 284 2 331 1 186 1 237 1 238 2 102 2 335 5 52 2 291 1 51 1 337 1 107 2 55 6 150 1 293 2 340 1 295 2 156 2 251 1 158 1 253 1 300 1 301 1 68 1 70 1 259 2 261 2 25 1 305 1 76 1 212 1 126 3 352 1 34 1 80 1 173 1 175 2 219 2 220 1 83 1 360 1 132 2 179 2 317 1 88 1 87 1 323 1 372 1 374 2 42 1 281 4 231 1 
1 3 284 1 305 1 331 1 335 3 11 1 126 1 34 1 51 1 80 1 173 1 55 2 83 1 360 1 317 1 251 1 158 1 253 1 323 1 281 2 231 1 68 1 
1 3 261 1 305 1 331 1 335 3 11 1 126 1 34 1 51 1 80 1 55 1 173 1 83 1 360 1 340 1 317 1 295 1 251 1 158 1 253 1 323 1 281 3 231 1 68 1 
1 3 284 1 261 1 305 1 331 1 335 3 11 1 126 1 34 1 51 1 80 1 107 1 173 1 55 2 83 1 360 1 340 1 317 1 295 1 251 1 158 1 253 1 323 1 281 3 231 1 68 1 
1 5 284 4 6 1 331 1 238 2 335 5 11 1 51 1 52 2 337 1 107 4 55 7 150 1 293 1 340 5 295 5 251 1 156 2 158 1 253 1 68 1 259 1 261 4 305 1 209 1 30 1 126 3 354 1 34 1 80 1 173 1 272 1 219 2 83 1 220 1 360 1 317 1 88 1 323 1 372 1 42 1 374 2 281 6 231 1 
1 4 259 1 2 2 261 2 284 2 305 1 331 1 238 2 335 4 126 2 34 1 52 2 51 1 80 1 337 1 107 2 55 4 173 1 150 1 293 1 219 2 220 1 83 1 360 1 340 1 317 1 295 2 156 2 88 1 251 1 158 1 253 1 323 1 300 1 372 1 374 2 42 1 281 4 231 1 68 1 
1 4 259 1 261 2 284 2 6 1 305 1 331 1 209 1 238 2 335 4 126 2 354 1 34 1 52 2 51 1 80 1 337 1 107 2 55 4 173 1 150 1 293 1 219 2 220 1 83 1 360 1 340 1 317 1 295 1 156 2 251 1 88 1 158 1 253 1 323 1 372 1 374 2 42 1 281 4 231 1 68 1 
1 4 259 1 261 2 284 2 6 1 305 1 331 1 209 1 238 2 335 4 126 2 354 1 34 1 52 2 51 1 80 1 337 1 107 2 55 4 173 1 150 1 293 1 219 2 220 1 83 1 360 1 340 1 317 1 295 1 156 2 251 1 88 1 158 1 253 1 323 1 372 1 374 2 42 1 281 4 231 1 68 1 
1 4 259 1 2 2 261 2 284 2 305 1 331 1 335 4 126 2 354 1 34 1 51 1 336 1 80 1 107 2 55 4 173 1 358 1 150 1 293 1 338 1 219 2 220 1 83 1 360 1 340 1 363 2 317 1 295 1 251 1 88 1 158 1 253 1 323 1 372 1 374 2 42 1 281 4 231 1 65 2 68 1 
1 4 259 1 284 3 261 3 6 1 209 1 305 1 331 1 238 2 30 1 335 4 126 2 354 1 34 1 52 2 51 1 80 1 337 1 107 3 173 1 55 5 150 1 293 1 219 2 220 1 83 1 360 1 340 1 317 1 295 1 156 2 88 1 251 1 158 1 253 1 323 1 372 1 374 2 42 1 281 5 231 1 68 1 
1 4 259 1 284 3 261 3 6 1 209 1 305 1 331 1 238 2 30 1 335 4 126 2 354 1 34 1 52 2 51 1 80 1 337 1 107 3 173 1 55 5 150 1 293 1 219 2 220 1 83 1 360 1 340 1 317 1 295 1 156 2 88 1 251 1 158 1 253 1 323 1 372 1 374 2 42 1 281 5 231 1 68 1 
1 4 259 1 2 2 261 2 284 2 305 1 331 1 335 4 126 2 34 1 51 1 80 1 336 1 107 2 55 4 173 1 150 1 293 1 219 2 220 1 83 1 360 1 340 1 363 2 317 1 295 1 88 1 251 1 158 1 253 1 323 1 300 1 372 1 374 2 42 1 281 4 231 1 65 2 68 1 
166 1 262 1 100 1 333 2 211 1 32 1 47 2 146 1 245 3 269 1 149 2 310 1 311 1 16 1 200 1 84 1 275 1 316 1 112 1 225 1 279 6 94 1 118 1 64 3 162 1 256 2 
329 1 166 4 72 1 333 1 100 2 169 1 211 2 171 3 47 2 289 3 245 6 13 1 149 4 310 2 311 11 58 2 151 1 199 1 16 1 200 11 201 1 17 1 316 2 112 2 225 2 226 1 279 14 371 1 118 1 64 8 256 1 232 2 304 1 
136 1 166 1 72 1 305 2 99 1 76 1 333 1 100 1 170 1 102 1 264 1 10 1 215 1 127 1 245 1 291 1 130 1 149 2 310 1 175 1 83 1 199 1 132 1 274 1 109 1 316 1 179 1 112 1 87 1 225 1 226 1 280 1 279 2 93 1 323 2 118 1 230 1 64 1 
135 2 136 2 99 1 333 2 100 3 102 3 47 8 146 1 245 10 291 2 13 4 149 6 58 2 151 2 16 3 199 1 200 7 109 1 202 2 110 2 112 3 297 2 118 3 346 2 64 10 256 4 166 7 72 1 305 3 76 2 170 1 211 3 264 2 32 1 215 2 269 1 308 1 310 3 311 7 175 3 83 1 84 1 132 3 275 1 316 3 223 1 179 1 225 3 87 2 133 1 226 1 280 1 279 20 184 1 323 3 93 2 94 1 230 2 232 2 
136 2 73 1 72 1 305 1 99 1 186 1 76 3 100 2 210 1 102 7 125 1 352 1 245 1 33 1 291 2 172 1 149 4 196 1 310 2 175 8 83 1 199 1 132 8 109 1 316 2 223 1 179 2 112 2 87 2 225 2 345 2 252 1 280 1 279 2 323 1 118 2 22 1 64 1 162 1 
166 1 305 1 99 1 100 1 211 1 189 1 47 1 245 2 149 2 310 1 311 1 58 1 151 1 83 1 16 1 200 1 109 1 316 1 112 1 225 1 226 1 41 1 320 1 279 3 323 1 118 1 64 1 256 1 232 1 
58 1 166 1 200 1 316 1 112 1 100 1 225 1 39 1 211 1 279 2 47 1 118 1 13 1 64 2 162 1 149 2 310 1 311 1 
151 1 16 1 166 1 200 1 316 1 112 1 100 1 225 1 343 1 279 2 47 1 245 2 118 1 256 1 162 1 149 2 310 1 311 1 
166 2 100 1 211 1 47 2 245 2 13 1 149 2 310 1 311 2 58 1 151 1 16 1 200 2 316 1 112 1 225 1 279 4 118 1 64 2 162 1 256 1 232 1 
58 1 166 1 200 1 316 1 112 1 100 1 225 1 39 1 211 1 125 1 279 2 47 1 118 1 13 1 64 2 149 2 310 1 311 1 
151 1 16 1 166 1 200 1 316 1 112 1 100 1 225 1 343 1 125 1 279 2 47 1 245 2 118 1 256 1 149 2 310 1 311 1 
166 2 100 1 211 1 125 1 47 2 245 2 13 1 149 2 310 1 311 2 58 1 151 1 16 1 200 2 316 1 112 1 225 1 279 4 118 1 64 2 256 1 232 1 
151 1 58 1 16 1 166 2 200 2 316 1 112 1 100 1 225 1 211 1 279 4 47 2 245 2 118 1 13 1 64 2 256 1 149 2 310 1 311 2 232 1 
136 1 72 1 305 1 76 1 333 1 100 1 102 1 264 1 215 1 245 1 291 1 149 2 310 1 175 1 199 1 132 1 110 1 316 1 179 1 112 1 87 1 225 1 279 2 93 1 323 1 118 1 64 1 230 1 
136 1 72 1 305 1 45 1 76 1 333 1 100 1 102 1 264 1 214 1 215 1 245 1 291 1 270 1 149 2 310 1 175 1 199 1 132 1 316 1 179 1 112 1 87 1 225 1 279 2 323 1 118 1 64 1 
166 2 100 1 211 1 47 2 245 2 13 1 149 2 310 1 311 2 58 1 151 1 16 1 200 2 316 1 112 1 225 1 226 1 279 4 118 1 64 2 256 1 232 1 
166 2 136 1 305 1 76 1 100 1 102 1 210 1 211 1 264 1 47 2 215 1 245 2 291 1 13 1 149 2 310 1 311 2 175 1 151 1 58 1 16 1 200 2 132 1 110 1 202 1 316 1 112 1 87 1 225 1 279 4 93 1 323 1 118 1 64 2 230 1 256 1 232 1 
166 1 305 1 99 1 100 1 334 1 211 1 189 1 47 1 245 1 13 1 149 2 310 1 311 1 151 1 58 1 16 1 83 1 200 1 109 1 316 1 112 1 225 1 226 1 320 1 279 3 323 1 118 1 64 2 232 1 
31 1 298 1 307 1 316 1 100 1 112 1 149 2 310 1 141 1 
31 1 298 1 307 1 316 1 100 1 112 1 149 2 310 1 141 1 
31 1 298 1 307 1 316 1 100 1 112 1 149 2 310 1 141 1 
31 1 298 1 307 1 316 1 100 1 112 1 149 2 310 1 141 1 
31 1 298 1 307 1 316 1 100 1 112 1 149 2 310 1 141 1 
273 1 138 1 243 1 332 1 111 1 324 1 347 1 23 1 263 1 348 1 
194 1 66 1 
273 1 137 1 314 1 243 1 350 1 332 1 324 1 347 1 23 1 
190 1 154 1 
326 1 90 1 181 1 
1 1 165 1 273 1 138 1 85 1 365 1 332 1 263 1 295 1 124 2 335 1 351 1 243 1 23 1 347 1 324 1 348 1 356 1 
1 1 165 1 273 1 138 1 85 1 365 1 332 1 263 1 295 1 124 2 335 1 351 1 243 1 23 1 347 1 324 1 348 1 356 1 
1 1 165 1 273 1 138 1 85 1 365 1 332 1 263 1 295 1 124 2 335 1 351 1 243 1 23 1 347 1 324 1 348 1 356 1 
90 1 190 1 154 1 
90 1 190 1 154 1 
326 1 181 1 
326 1 90 1 181 1 
176 1 257 1 
1 1 305 2 332 1 99 2 333 1 124 1 335 1 144 1 351 1 243 1 49 1 194 1 176 1 273 1 83 2 109 2 36 1 365 1 89 1 323 2 324 1 347 1 23 1 163 1 66 1 258 1 257 1 
136 1 72 1 305 2 76 1 100 1 102 2 79 1 12 1 245 1 291 1 172 1 149 2 54 1 310 1 175 2 83 2 199 1 132 2 316 1 112 1 366 1 87 1 225 1 226 1 157 1 345 2 279 2 323 2 118 1 22 1 64 1 
175 2 292 1 136 1 234 1 339 1 132 2 223 1 75 1 78 1 102 2 210 1 285 2 87 1 159 1 106 1 213 1 82 1 309 1 218 1 
175 1 234 1 339 1 136 1 132 1 223 1 75 1 78 1 102 1 285 2 87 1 106 1 213 1 246 1 82 1 309 1 218 1 
175 1 136 1 132 1 186 1 76 1 179 1 102 1 87 1 159 1 276 1 191 1 352 1 291 1 218 1 
175 1 292 1 234 1 339 1 136 1 132 1 223 1 75 1 78 1 102 1 285 2 87 1 159 1 106 1 213 1 82 1 309 1 218 1 
20 1 
293 1 143 1 259 1 340 1 262 1 37 1 295 1 
1 1 293 1 259 1 2 1 340 1 238 1 295 2 88 1 156 1 335 1 126 1 372 1 52 1 42 1 337 1 55 1 150 1 
1 5 43 1 2 12 136 3 5 2 97 2 102 3 188 1 143 1 335 5 50 2 291 3 55 5 150 4 293 8 58 2 151 2 16 2 340 2 19 2 295 8 342 2 156 6 60 1 254 2 346 2 301 2 67 2 259 9 71 6 25 1 27 2 76 10 210 1 211 2 126 3 215 3 175 3 360 2 361 6 132 3 315 3 221 1 37 1 179 1 87 4 88 4 321 1 134 2 229 2 372 4 42 4 232 2 283 1 
1 1 259 8 2 6 71 5 4 1 25 1 97 2 211 2 335 1 171 1 126 1 289 1 48 1 217 1 131 1 55 1 150 2 293 5 58 2 151 2 16 2 361 5 340 2 364 1 19 1 367 1 295 5 88 2 156 3 278 1 371 1 372 2 42 2 301 1 232 2 
1 1 259 2 208 1 305 1 97 2 209 1 99 1 211 2 242 1 189 1 335 1 146 1 195 1 355 1 150 1 293 2 16 1 83 1 84 1 109 1 19 1 251 1 88 1 322 1 323 1 94 1 372 1 42 1 
293 1 259 1 340 1 37 1 295 1 88 1 143 1 372 1 42 1 150 1 
293 5 58 2 151 2 259 5 71 5 2 10 16 2 361 5 97 2 19 1 295 5 211 2 156 5 346 1 232 2 
1 1 335 1 126 1 340 1 295 1 55 1 
70 1 1 3 259 2 136 1 25 2 237 1 186 1 76 1 168 1 102 4 335 3 126 2 352 1 291 1 55 4 150 2 175 4 293 2 132 4 179 2 87 1 88 2 60 2 62 1 205 1 372 2 42 1 301 2 283 1 
136 1 305 3 99 2 76 1 333 1 100 1 102 1 264 1 189 2 215 1 245 1 290 1 291 1 149 2 310 1 175 1 199 1 83 2 132 1 109 2 110 1 316 1 179 1 112 1 87 1 225 1 279 1 322 1 323 3 93 1 118 1 230 1 
293 2 259 1 2 4 71 2 361 2 340 2 25 1 295 4 156 2 88 1 372 1 42 1 269 1 301 1 150 1 
174 1 273 1 324 1 
174 1 273 1 324 1 
176 1 273 1 235 1 324 1 348 1 
174 1 273 1 324 1 
273 1 167 1 324 1 
273 1 167 1 324 1 
273 1 167 1 324 1 
273 1 324 1 
332 1 347 1 
16 1 84 1 316 2 275 1 112 2 100 2 211 1 227 1 32 1 279 8 47 3 146 1 245 4 94 1 269 1 64 4 13 1 256 2 149 4 310 2 
16 1 84 1 262 1 275 1 211 1 32 1 279 6 47 2 146 1 245 3 94 1 269 1 64 3 256 2 
151 1 58 1 16 1 316 1 112 1 100 1 105 1 211 1 279 4 47 2 245 2 64 2 13 1 256 1 149 2 310 1 232 1 
151 1 58 1 16 1 17 1 211 1 171 2 279 7 47 2 289 1 245 4 371 1 64 3 13 1 256 1 232 1 
100 2 211 3 32 1 171 2 47 9 146 2 289 2 245 12 269 1 13 4 149 4 310 2 58 2 151 2 16 3 84 1 17 1 201 1 275 1 316 2 112 2 227 2 182 1 279 23 94 2 64 11 256 5 232 2 304 1 
171 1 279 1 245 1 
279 1 289 1 64 1 
58 1 151 1 16 1 316 1 100 1 112 1 105 1 211 1 279 6 47 3 245 3 346 1 64 3 13 1 149 2 256 2 310 1 232 1 
4 1 100 1 141 1 211 2 171 1 47 2 289 1 48 1 245 6 217 1 13 1 149 2 310 1 58 2 151 2 16 2 316 1 364 1 112 1 367 1 279 12 371 1 64 6 256 1 232 2 
16 1 84 1 211 1 279 6 47 2 146 1 245 3 94 1 64 3 13 1 256 1 
316 1 275 1 112 1 100 1 227 1 182 1 32 1 279 3 47 2 146 1 245 2 94 1 64 1 13 1 256 1 149 2 310 1 
16 2 84 1 316 1 208 1 100 1 112 1 141 1 211 2 279 10 47 5 146 2 245 5 94 2 13 2 64 5 149 2 256 3 310 1 
58 1 316 1 112 1 100 1 141 1 211 1 279 2 47 1 64 2 13 1 149 2 310 1 
151 1 58 1 16 1 316 1 112 1 100 1 141 1 211 1 279 4 47 2 245 2 64 2 13 1 256 1 149 2 310 1 232 1 
316 3 222 1 112 3 100 3 141 1 227 1 182 1 279 3 47 2 146 1 245 2 94 1 13 1 64 1 149 6 256 1 310 3 
100 5 103 1 141 1 105 1 211 5 32 1 171 4 46 1 47 12 146 3 289 3 245 18 269 1 13 5 149 10 310 5 58 3 151 3 16 5 84 2 17 1 275 1 316 5 222 1 112 5 368 1 227 2 182 1 279 34 94 3 371 1 64 16 256 7 232 3 
100 1 141 1 211 1 171 1 32 1 47 2 289 1 146 1 245 4 217 1 269 1 149 2 310 1 16 1 84 1 316 1 275 1 112 1 279 8 371 1 94 1 64 4 256 2 
100 2 141 1 105 1 211 2 32 1 171 2 47 3 146 1 289 1 245 5 217 1 269 1 13 1 149 4 310 2 58 1 16 1 84 1 17 1 275 1 316 2 112 2 279 11 94 1 371 1 64 6 256 2 232 1 
4 1 100 3 141 1 105 1 211 3 32 1 171 1 47 4 146 1 289 1 48 1 245 10 217 1 269 1 13 1 149 6 310 3 58 2 151 2 16 3 84 1 275 1 316 3 364 1 112 3 367 1 227 1 279 19 94 1 371 1 64 9 256 3 232 2 
4 1 100 3 141 1 105 1 211 3 32 1 171 1 47 5 146 1 289 1 48 1 245 7 217 1 269 1 13 2 149 6 310 3 58 2 151 1 16 2 84 1 275 1 316 3 364 1 112 3 367 1 227 1 279 17 94 1 371 1 64 10 256 3 232 2 
100 1 141 1 211 1 171 1 32 1 47 2 289 1 146 1 245 4 217 1 269 1 149 2 310 1 16 1 84 1 316 1 275 1 112 1 279 8 371 1 94 1 64 4 256 2 
4 1 100 1 141 1 211 2 171 1 47 2 289 1 48 1 245 6 217 1 13 1 149 2 310 1 58 2 151 2 16 2 316 1 364 1 112 1 367 1 279 12 371 1 64 6 256 1 232 2 
4 1 100 4 141 1 105 1 211 3 32 1 171 1 47 5 146 1 289 1 48 1 245 8 217 1 269 1 13 2 149 8 310 4 58 2 151 1 16 2 84 1 275 1 364 1 316 4 112 4 367 1 227 2 279 18 94 1 371 1 64 10 256 3 232 2 
4 1 100 4 141 1 211 3 171 1 47 6 289 1 48 1 245 7 217 1 13 3 149 8 310 4 58 3 151 2 16 2 364 1 316 4 222 1 112 4 367 1 227 2 279 16 371 1 64 9 256 3 232 3 
16 1 84 1 275 1 211 1 32 2 279 7 47 6 146 3 245 4 94 3 13 3 64 3 256 3 
4 1 100 4 141 1 211 3 32 1 171 1 47 4 146 1 289 1 48 1 245 8 217 1 269 1 13 1 149 8 310 4 58 2 151 1 16 2 84 1 275 1 364 1 316 4 222 1 112 4 367 1 227 2 279 18 94 1 371 1 64 10 256 3 232 2 
83 1 323 1 305 1 249 1 333 1 317 1 325 1 
248 1 83 1 305 1 249 1 333 1 317 1 8 1 239 1 91 1 323 1 119 1 325 1 
175 1 136 1 132 1 352 1 262 1 186 1 76 1 291 1 179 1 102 1 87 1 
175 1 83 1 136 1 132 1 109 1 305 2 99 1 76 1 179 1 333 1 102 1 87 1 264 1 280 1 215 1 323 2 291 1 230 1 
175 1 83 2 136 1 132 1 109 2 331 1 305 2 99 1 76 3 333 1 102 1 251 1 87 1 264 1 60 1 253 1 280 1 215 2 323 2 50 1 254 1 291 2 230 1 
175 2 83 2 136 1 132 2 109 2 331 1 305 2 99 1 76 3 45 1 333 1 102 2 251 1 87 1 264 1 60 1 183 1 253 1 280 1 215 2 323 2 50 1 254 1 291 2 
1 2 136 1 76 4 102 3 335 2 215 1 128 1 50 1 291 1 55 1 175 3 360 1 132 3 362 1 340 1 315 1 179 1 295 1 87 1 60 1 183 1 229 1 254 1 
175 3 1 2 360 1 136 1 132 3 340 1 5 1 315 1 179 1 76 4 295 1 102 3 87 1 60 1 183 1 335 2 215 1 229 1 50 1 254 1 291 1 55 1 
175 1 136 1 132 1 102 1 196 1 87 1 
175 7 136 2 132 7 73 1 221 1 223 1 179 2 76 3 341 1 210 1 102 6 224 1 38 1 87 3 345 1 252 1 215 1 33 1 291 2 172 1 196 1 
135 1 136 1 99 1 100 2 333 2 102 1 47 2 12 1 146 1 245 3 291 1 149 4 16 1 200 1 110 1 202 1 109 1 112 2 118 2 64 3 256 2 166 1 305 2 76 1 210 1 211 1 264 1 32 1 215 1 269 1 310 2 311 1 175 1 83 1 132 1 84 1 316 2 275 1 225 2 87 1 226 1 280 1 279 6 93 1 323 2 94 1 230 1 
1 3 259 1 5 1 27 1 76 2 102 1 143 1 335 3 126 1 55 2 150 2 175 1 293 1 360 1 132 1 340 1 36 1 315 1 37 1 179 1 295 1 88 2 342 1 134 1 229 1 372 2 42 2 283 1 
175 2 43 1 136 1 132 2 221 1 76 2 210 1 102 2 87 2 229 1 215 1 291 1 196 1 
175 4 136 1 132 4 186 1 179 1 76 1 102 4 210 1 87 1 183 1 160 1 352 1 291 1 
175 2 136 1 132 2 76 1 341 1 102 2 38 1 87 2 133 1 60 1 296 1 215 1 291 1 15 1 
213 1 175 1 136 1 339 1 132 1 75 1 179 1 102 1 285 1 87 1 
175 2 79 1 136 1 132 2 223 1 76 1 291 1 172 1 102 2 210 1 87 1 
175 5 136 2 132 5 73 1 186 1 179 1 76 3 102 4 210 1 87 2 60 1 160 1 352 1 33 1 291 2 172 1 
175 5 136 2 132 5 73 1 186 1 179 1 76 3 102 4 210 1 87 2 60 1 203 1 160 1 352 1 291 2 172 1 
175 1 83 1 136 1 132 1 109 1 305 2 99 1 76 1 179 1 45 1 333 1 102 1 87 1 264 1 280 1 215 1 323 2 291 1 
175 1 136 1 132 1 221 1 76 1 341 1 102 1 224 1 38 1 87 2 60 1 215 1 291 1 
286 1 204 1 333 1 282 1 40 1 
1 2 121 1 360 1 359 1 340 1 36 1 331 1 333 1 306 1 295 1 251 1 40 2 286 2 335 2 253 1 265 1 204 1 80 1 282 2 
83 1 305 1 366 1 40 1 157 1 204 1 323 1 54 1 282 1 
121 1 359 1 204 1 
69 1 145 1 262 1 197 1 
69 1 35 1 145 1 153 1 44 1 28 1 197 1 
120 1 92 1 28 1 
69 1 177 1 35 1 330 1 153 3 294 1 44 1 28 3 104 2 145 1 81 1 197 1 
69 1 228 1 328 1 35 1 145 1 153 2 44 1 28 2 197 1 
106 1 369 1 35 1 287 1 153 1 44 1 75 1 81 1 28 1 285 1 197 1 
69 1 35 1 153 1 44 1 81 1 28 1 197 1 
69 2 35 1 145 1 153 1 44 1 81 1 28 1 
69 1 35 2 18 1 153 2 44 2 7 1 28 2 142 1 81 1 197 1 
69 1 328 2 35 1 153 3 44 1 28 3 369 1 319 1 145 1 81 1 357 1 56 1 197 2 
69 1 328 1 35 1 153 2 44 1 75 1 28 2 285 2 213 1 106 1 145 1 192 1 81 1 82 1 197 1 
69 1 328 2 35 2 153 4 44 2 59 1 28 4 228 1 369 1 319 1 145 1 81 1 197 2 
69 1 35 1 145 1 153 1 44 1 81 1 28 1 197 1 
69 2 327 1 328 2 330 1 35 1 153 4 294 1 44 1 104 1 28 4 369 1 319 1 145 2 197 3 
69 1 328 1 35 1 145 1 153 2 44 1 123 1 140 1 81 1 318 1 28 2 197 1 
69 1 35 1 330 2 260 1 153 3 294 1 44 1 28 3 104 2 145 1 81 1 197 1 
74 1 255 2 302 1 197 2 
108 1 35 1 153 1 44 1 81 1 28 1 
69 1 328 1 35 1 145 1 153 2 44 1 81 1 28 2 357 1 197 1 
147 1 
69 1 35 1 145 1 153 1 44 1 81 1 28 1 197 1 
69 1 328 1 35 1 145 1 153 3 44 1 81 1 104 1 28 3 357 1 197 1 
327 1 369 1 319 1 197 1 
69 1 197 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 23 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
175 4 1 1 28 1 154 1 316 2 59 9 290 2 217 6 271 9 60 5 244 1 87 1 160 1 296 2 10 1 162 3 350 2 92 1 202 1 203 1 139 1 326 2 253 1 170 1 121 1 206 2 331 1 228 2 
175 4 1 1 28 1 154 1 316 2 59 9 290 2 217 6 271 9 60 5 244 1 87 1 160 1 296 2 10 1 162 3 350 2 92 1 202 1 203 1 139 1 326 2 253 1 170 1 206 2 121 1 331 1 228 2 
175 5 1 1 28 1 154 1 316 2 59 10 290 2 217 7 271 10 60 6 244 1 87 1 160 1 296 2 10 1 162 4 350 2 92 1 202 1 203 1 139 1 326 2 253 1 170 1 206 2 121 1 331 1 228 2 
175 3 1 1 28 1 154 1 316 2 59 7 290 2 217 4 271 7 60 4 244 1 87 1 160 1 296 2 162 2 350 2 92 1 202 1 203 1 139 1 326 2 253 1 170 1 206 2 121 1 331 1 228 1 
296 1 175 2 10 1 162 1 350 1 92 1 202 1 154 1 316 1 59 4 170 1 206 1 290 1 217 3 271 4 228 2 60 3 244 1 
296 1 350 1 92 1 190 1 13 1 338 1 28 1 139 1 326 1 154 1 316 1 59 2 170 1 290 1 271 2 60 1 
160 1 296 2 175 1 162 1 92 1 326 1 154 1 59 3 170 1 290 2 217 1 271 3 60 2 
160 1 296 2 175 4 10 1 162 3 350 1 1 1 92 1 202 1 16 1 326 1 154 1 316 1 59 9 170 1 206 1 356 1 290 2 217 7 228 2 271 9 60 5 244 1 87 1 
160 1 296 2 175 4 10 1 162 3 350 1 1 1 92 1 202 1 16 1 326 1 154 1 316 1 59 9 170 1 206 1 356 1 290 2 217 7 228 2 271 9 60 5 244 1 87 1 
131 1 23 1 66 1 
367 2 66 1 231 1 
111 1 168 2 311 2 227 2 77 2 264 2 44 2 250 1 
311 3 77 2 3 1 264 2 267 1 182 1 366 2 79 1 58 1 82 1 133 1 84 2 8 1 34 1 61 1 109 1 111 1 88 1 138 2 137 1 222 1 301 2 300 1 281 1 223 1 44 3 250 1 252 2 305 1 256 1 168 2 49 1 194 1 171 1 227 2 333 1 230 1 
168 1 270 1 311 1 227 1 77 1 264 1 44 1 250 1 192 1 275 1 
311 1 359 1 264 1 130 1 44 1 66 1 164 1 192 1 304 1 131 1 269 1 169 1 344 1 135 1 
311 1 359 2 77 1 264 1 44 1 66 1 164 1 192 1 304 1 131 1 168 1 169 2 344 1 227 1 135 1 
359 1 169 1 7 1 22 1 291 1 
131 1 359 2 169 2 7 1 22 1 242 1 173 1 66 1 
359 1 169 1 7 1 
359 1 311 1 77 1 264 1 4 1 250 1 44 1 192 1 168 1 270 1 169 1 227 1 22 1 275 1 
66 1 
131 1 359 2 169 2 7 1 22 1 242 1 180 1 66 1 
320 1 297 1 359 5 361 2 179 1 324 1 75 2 66 1 251 1 131 1 169 5 239 1 7 2 22 2 242 1 108 1 318 2 219 1 272 1 
111 1 23 1 
111 2 311 2 77 1 264 2 44 2 373 1 20 1 168 1 227 1 
276 1 208 1 55 1 
111 1 311 1 137 1 300 1 44 1 282 1 252 1 182 1 366 1 256 1 58 1 79 1 84 1 8 1 333 1 230 1 
111 1 148 1 311 5 177 1 77 1 264 5 44 5 373 1 168 4 269 1 83 1 240 2 227 4 377 1 
168 2 307 1 270 1 311 2 227 2 264 2 44 2 192 1 
137 1 311 2 177 1 300 1 55 1 264 1 44 2 252 1 182 1 256 1 366 1 168 1 79 1 58 1 84 1 240 1 227 1 8 1 333 1 230 1 
111 1 168 3 311 3 240 1 227 3 77 1 264 3 44 3 
168 1 270 1 311 1 227 1 264 1 44 1 192 1 
168 1 311 1 227 1 77 1 264 1 44 1 373 1 192 1 20 1 
311 4 359 1 128 1 177 1 77 2 3 1 264 3 29 1 267 1 182 1 366 1 79 1 58 1 82 1 344 1 84 1 240 1 8 1 34 1 61 1 135 1 109 1 111 1 138 1 137 1 301 2 300 1 223 1 373 1 44 4 250 1 164 1 192 1 252 1 304 1 256 1 168 3 49 1 169 1 194 1 171 1 227 3 333 1 230 1 
111 1 148 1 168 1 269 1 311 2 240 1 227 1 264 2 44 2 
359 1 311 3 177 1 128 1 77 1 264 3 373 1 44 3 66 1 192 1 164 1 304 1 168 3 169 1 344 1 240 2 227 3 135 1 125 1 
311 2 77 1 264 2 55 1 373 1 44 2 168 2 240 1 227 2 208 1 
111 1 311 1 137 1 300 1 44 1 252 1 182 1 366 1 256 1 58 1 79 1 84 1 8 1 333 1 230 1 
111 1 311 1 299 1 44 1 252 1 182 1 366 1 256 1 257 1 58 1 79 1 84 1 8 1 333 1 230 1 
310 1 3 1 55 2 181 1 267 1 104 1 82 1 133 2 34 2 187 1 109 1 294 1 247 1 276 2 277 1 138 4 301 2 223 1 327 1 330 1 171 1 51 1 208 2 285 1 
168 1 311 1 307 1 227 1 264 1 44 1 192 1 164 1 
76 1 335 1 
76 1 335 1 
209 1 97 1 
209 1 97 1 
209 1 97 1 
234 1 76 1 335 1 
336 1 76 1 335 1 
209 1 97 1 76 2 339 1 67 1 335 2 
234 1 76 1 335 1 
234 1 76 1 335 1 
193 1 76 1 335 1 
193 1 76 1 335 1 
193 1 76 1 335 1 
111 1 197 1 311 2 359 1 336 1 76 1 264 2 44 2 152 1 18 1 57 1 205 1 168 2 169 1 119 1 260 1 227 2 134 1 207 1 122 1 123 1 335 1 246 1 196 1 
197 2 298 1 359 2 212 1 263 2 76 2 339 1 66 1 152 2 205 3 98 1 169 2 119 2 317 1 260 2 273 1 348 1 335 2 196 1 
316 1 350 1 206 1 
316 1 350 1 338 1 
316 3 349 1 206 2 338 1 45 1 115 1 
316 2 69 1 349 1 206 1 338 1 115 1 
316 2 349 1 206 1 338 1 115 2 
359 5 176 2 361 1 75 1 129 1 181 1 362 1 57 1 367 3 104 1 343 1 131 1 268 2 238 2 239 1 7 1 242 1 318 1 110 1 320 3 277 1 43 1 66 2 251 2 255 1 169 5 50 1 207 1 51 1 22 4 123 1 231 1 
359 9 176 6 361 2 75 2 181 3 362 3 153 1 57 4 367 9 104 3 131 1 238 6 239 1 7 6 108 1 242 1 318 2 291 5 320 8 277 3 90 1 43 2 325 1 66 5 251 6 255 2 166 5 283 1 329 1 169 9 50 1 284 1 51 3 22 7 231 3 
359 3 176 2 361 1 75 1 181 1 362 1 57 1 131 1 343 1 104 1 367 4 268 1 238 2 108 1 318 1 110 1 320 3 277 1 43 1 66 3 251 2 255 1 169 3 22 2 51 1 231 2 
359 4 176 4 361 1 75 1 181 2 362 2 57 2 131 1 367 7 343 1 104 2 268 2 238 4 108 1 318 1 110 1 320 5 277 2 90 1 43 1 325 1 66 4 251 4 255 1 169 4 284 1 22 3 51 2 231 3 
353 1 8 1 23 1 
94 1 8 1 
165 1 
256 1 79 1 8 1 
37 1 8 1 
256 1 8 1 
256 1 353 2 79 1 70 1 8 3 358 1 
371 1 221 1 138 7 235 1 54 1 315 1 181 1 132 1 183 1 133 4 100 1 51 1 200 2 34 3 187 3 285 2 188 1 
371 1 221 1 138 7 235 1 54 1 315 1 181 1 132 1 183 1 133 4 100 1 51 1 200 2 34 3 187 3 285 2 188 1 
371 1 221 1 138 7 235 1 54 1 315 1 181 1 132 1 183 1 133 4 100 1 51 1 200 2 34 3 187 3 285 2 292 1 188 1 
101 1 287 1 235 5 54 1 315 1 3 1 362 3 181 4 267 1 132 1 104 3 183 2 133 16 200 3 34 15 187 10 109 1 293 1 188 1 371 2 138 31 221 2 277 3 279 3 301 2 249 4 113 1 95 1 225 1 100 2 171 1 51 4 285 5 286 1 
235 1 3 2 315 1 181 1 341 1 267 2 132 1 80 1 183 1 133 5 200 2 34 4 187 4 109 2 188 1 371 1 138 9 221 1 301 4 113 1 171 2 100 1 51 1 285 3 
53 1 337 1 338 1 236 1 340 1 154 1 102 1 366 1 316 2 58 1 31 1 59 2 84 1 217 1 290 1 271 2 60 1 63 1 296 1 112 1 350 1 92 1 14 1 45 1 252 1 326 1 170 1 120 1 206 1 230 1 
53 1 337 1 338 1 236 1 340 1 102 1 366 1 156 1 316 2 58 1 31 1 59 3 84 1 290 1 217 2 271 3 60 1 35 1 63 1 296 1 350 1 92 1 45 1 252 1 326 1 143 1 170 1 120 1 206 1 230 1 
53 1 337 1 338 1 236 1 366 1 156 1 316 2 58 1 31 1 59 2 84 1 217 2 271 2 60 1 35 1 63 1 350 1 92 1 45 1 326 1 252 1 170 1 120 1 206 1 230 1 
74 1 337 2 182 1 155 1 366 1 58 2 79 1 59 1 84 1 184 1 345 1 290 1 107 1 271 1 8 1 63 2 296 1 323 1 252 1 326 2 114 1 140 1 141 1 256 1 328 1 354 1 143 1 120 2 230 1 
296 1 112 1 350 1 53 1 337 1 338 1 236 1 45 1 340 1 326 1 252 1 102 1 154 1 366 1 316 2 58 1 31 1 59 1 84 1 120 1 206 1 290 1 271 1 35 1 230 1 63 1 
319 1 
359 2 361 1 74 1 75 1 198 1 182 2 155 1 366 2 58 2 79 1 84 2 239 1 184 1 7 2 8 1 242 1 318 1 320 1 43 1 252 2 251 1 256 1 328 1 354 1 169 2 195 1 230 1 308 1 
309 1 311 1 359 3 264 1 130 1 180 1 269 1 344 1 7 2 242 1 186 1 135 1 91 1 64 1 65 1 44 1 164 1 192 1 304 1 169 3 376 1 24 2 
309 1 359 3 311 1 91 1 64 1 264 1 180 1 130 1 44 1 66 1 192 1 164 1 304 1 131 1 269 1 169 3 344 1 7 1 185 1 242 1 186 1 376 1 24 3 135 1 
309 1 311 1 359 3 264 1 180 1 130 1 131 1 269 1 344 1 7 2 185 1 242 1 186 1 135 1 91 1 64 1 65 1 44 1 164 1 192 1 66 1 304 1 116 1 169 3 376 1 24 3 
237 1 288 1 289 1 344 1 239 1 7 7 242 3 64 1 65 4 164 1 66 5 251 1 116 4 304 1 169 5 258 2 24 6 309 1 311 1 359 5 361 1 178 2 75 1 264 1 180 1 130 1 131 5 269 1 216 1 185 4 186 1 318 1 135 1 274 1 320 1 89 1 39 2 91 1 191 2 44 1 192 1 224 1 376 1 231 2 
288 1 344 1 239 1 7 4 242 2 64 1 65 2 164 1 66 2 251 1 304 1 116 2 169 4 258 2 24 4 309 1 311 1 359 4 361 1 178 2 75 1 264 1 130 1 367 2 131 1 269 1 185 2 186 1 318 1 135 1 274 1 320 1 39 2 91 1 191 2 44 1 192 1 142 1 376 1 231 2 
309 1 311 1 359 4 361 1 178 2 75 1 264 1 130 1 288 1 237 1 131 1 289 1 269 1 344 1 239 1 7 4 185 2 242 2 186 1 318 1 135 1 274 1 320 1 89 1 39 2 91 1 191 2 64 1 65 2 44 1 66 1 164 1 192 1 251 1 116 2 304 1 169 4 258 2 376 1 24 4 231 2 
309 1 311 1 359 4 361 1 178 2 75 1 264 1 130 1 288 1 237 1 131 1 289 1 269 1 344 1 239 1 7 4 185 2 242 2 186 1 318 1 135 1 274 1 320 1 89 1 39 2 91 1 191 2 64 1 65 2 44 1 66 1 164 1 192 1 251 1 116 2 304 1 169 4 258 2 376 1 24 4 231 2 
309 1 311 1 359 4 361 1 313 1 75 1 264 1 130 1 288 1 131 1 367 2 269 1 81 1 344 1 239 1 7 4 185 2 242 2 186 1 318 1 135 1 320 1 89 1 39 2 163 2 91 1 191 2 64 1 65 2 44 1 66 1 164 1 192 1 251 1 116 2 304 1 21 2 169 4 376 1 24 4 262 1 
309 1 311 1 359 4 361 1 178 2 75 1 264 1 130 1 288 1 237 1 131 1 289 1 269 1 344 1 216 1 239 1 7 5 185 3 242 2 186 1 318 1 135 1 274 1 320 1 89 1 39 2 91 1 191 2 64 1 65 3 44 1 66 1 164 1 192 1 251 1 304 1 116 3 169 4 258 2 376 1 24 5 231 2 
309 1 311 1 359 4 361 1 178 2 75 1 264 1 130 1 288 1 237 1 131 1 289 1 269 1 344 1 216 1 239 1 7 5 185 3 242 2 186 1 318 1 135 1 274 1 320 1 89 1 39 2 91 1 191 2 64 1 65 3 44 1 66 1 164 1 192 1 251 1 304 1 116 3 169 4 258 2 376 1 24 5 231 2 
309 1 359 4 311 1 361 1 75 1 313 1 264 1 130 1 288 1 131 1 367 2 269 1 344 1 239 1 7 4 185 2 242 2 186 1 318 1 135 1 320 1 39 2 163 2 91 1 191 2 64 1 65 2 44 1 66 1 164 1 192 1 251 1 116 2 304 1 21 2 142 1 169 4 376 1 24 4 
55 1 3 1 315 1 181 1 267 1 132 1 82 1 183 1 133 3 200 1 187 2 34 3 109 1 188 1 247 1 276 1 111 2 138 6 301 2 223 1 171 1 100 1 51 1 208 1 23 1 285 2 
101 1 0 1 235 1 3 2 55 11 362 2 181 1 267 2 104 2 82 2 106 1 133 8 187 2 34 6 109 2 276 11 111 1 138 14 277 1 279 3 249 3 301 4 281 1 204 1 223 1 303 1 48 1 49 1 171 2 51 2 208 4 285 1 286 1 
311 2 177 1 151 1 3 1 264 1 182 1 267 1 366 1 79 1 58 1 82 1 84 1 133 1 240 1 8 1 243 1 34 1 109 1 136 1 111 1 137 1 138 2 300 1 301 2 281 1 204 1 223 1 44 2 282 1 252 1 256 1 168 1 49 1 171 1 227 1 208 1 333 1 230 1 
235 4 3 3 55 7 104 2 58 2 240 1 6 2 200 1 8 2 61 2 109 3 111 2 301 6 300 2 204 1 352 2 252 3 256 2 168 1 171 3 208 7 357 2 311 3 177 1 315 1 264 1 181 3 362 2 182 1 267 3 366 3 132 1 79 2 82 3 183 1 84 3 133 10 35 1 34 10 187 8 188 1 276 7 138 20 137 2 277 2 41 1 281 1 44 3 223 3 46 1 49 1 374 1 100 1 227 1 51 3 145 2 285 4 333 2 230 2 
210 1 74 1 3 1 182 1 267 1 155 1 366 2 58 2 79 1 82 1 84 2 133 1 184 1 8 1 62 1 34 1 109 1 138 2 222 1 301 2 281 1 223 1 252 2 256 1 328 1 354 1 49 1 171 1 230 1 
311 1 77 1 55 1 3 1 264 1 362 1 181 1 267 1 104 1 82 1 133 1 187 1 34 2 109 1 276 1 138 3 277 1 301 2 204 1 373 1 223 1 44 1 168 1 227 1 171 1 51 1 208 1 144 1 285 1 
276 1 310 1 138 2 301 2 235 1 55 1 3 1 223 1 267 1 104 1 82 1 133 2 171 1 51 1 208 1 187 1 109 1 247 1 
276 1 138 2 277 1 301 2 55 1 3 1 223 1 181 1 267 1 82 1 330 1 171 1 208 1 187 1 34 2 285 1 109 1 247 1 
276 2 277 1 138 4 301 2 235 1 55 2 3 1 223 1 181 1 362 1 267 1 104 1 82 1 133 2 171 1 51 1 208 2 34 2 187 2 285 1 109 1 247 1 
276 1 310 1 138 2 301 2 235 1 55 1 3 1 223 1 267 1 104 1 82 1 133 2 171 1 51 1 208 1 187 1 62 1 109 1 
276 1 138 2 277 1 301 2 55 1 3 1 223 1 181 1 267 1 82 1 330 1 171 1 208 1 187 1 62 1 34 2 285 1 109 1 
276 2 277 1 138 4 301 2 235 1 55 2 3 1 223 1 181 1 362 1 267 1 104 1 82 1 133 2 171 1 51 1 208 2 34 2 187 2 62 1 285 1 109 1 
276 2 277 1 138 4 301 2 235 1 55 2 3 1 223 1 181 1 362 1 267 1 104 1 82 1 133 2 171 1 51 1 208 2 34 2 187 2 285 1 109 1 
311 1 3 1 182 1 267 1 366 1 79 1 58 1 82 1 133 1 84 1 8 1 61 1 34 1 109 1 111 1 138 2 137 1 300 1 301 2 281 1 44 1 223 1 252 1 256 1 49 1 171 1 333 1 230 1 
311 1 3 1 182 1 267 1 366 1 79 1 58 1 368 1 82 1 133 1 84 1 8 1 34 1 109 1 111 1 138 2 299 1 301 2 281 1 44 1 223 1 252 1 256 1 257 1 49 1 171 1 333 1 230 1 
276 2 277 1 138 4 301 2 235 1 204 1 55 2 3 1 223 1 181 1 362 1 267 1 104 1 82 1 133 2 171 1 51 1 208 2 34 2 187 2 285 1 109 1 
311 1 235 1 55 2 3 1 181 1 362 1 267 1 366 1 104 1 79 1 58 1 82 1 133 2 84 1 6 1 8 1 34 2 187 2 61 1 109 1 276 2 277 1 138 4 137 1 300 1 301 2 14 1 44 1 223 1 252 1 256 1 171 1 51 1 208 2 285 1 333 1 230 1 
311 1 235 1 77 1 3 1 264 1 55 1 181 1 362 1 267 1 104 1 82 1 133 2 34 1 187 1 109 1 276 1 277 1 138 3 301 2 204 1 373 1 223 1 44 1 168 1 227 1 171 1 51 1 208 1 229 1 
101 1 27 1 360 1 235 3 312 1 3 2 362 3 181 3 341 1 267 2 104 3 133 9 34 10 187 6 109 2 322 1 138 19 277 3 279 1 351 2 12 2 249 2 301 4 17 1 118 1 355 1 171 2 51 3 285 3 286 1 
27 1 235 2 312 2 3 3 181 2 362 3 341 1 267 3 104 3 133 14 187 4 34 12 109 3 161 1 322 2 138 26 277 2 279 2 351 4 12 1 301 6 249 2 113 2 17 1 96 1 19 1 254 1 355 1 171 3 51 3 285 2 286 2 334 1 126 1 
101 1 27 1 360 1 235 4 312 1 315 1 3 3 362 4 181 5 341 1 267 3 132 1 104 4 183 1 133 20 200 1 34 21 187 8 109 3 188 1 161 1 322 2 138 41 277 4 279 3 351 4 12 1 249 4 301 6 113 1 17 1 96 1 19 1 254 1 355 1 259 1 100 1 171 3 51 5 285 4 334 1 286 3 126 1 
101 1 27 1 360 1 235 3 312 1 315 1 3 4 362 4 181 4 341 1 267 4 132 1 104 4 183 1 133 20 200 1 34 18 187 7 109 4 188 1 161 1 322 2 138 38 277 3 279 3 351 4 12 1 249 4 301 8 113 2 17 1 96 1 19 1 254 1 355 1 259 1 100 1 171 4 51 5 285 4 334 1 286 3 126 1 
101 2 27 1 235 7 312 1 315 1 3 2 362 7 181 8 341 1 267 2 132 1 104 7 183 1 133 27 200 1 34 25 187 14 109 2 188 1 161 1 322 1 138 52 277 7 279 4 351 4 12 1 249 4 301 4 113 1 17 1 96 1 303 2 19 1 254 1 355 1 100 1 171 2 51 8 285 7 334 1 286 2 126 1 
197 1 233 1 119 1 212 1 260 1 76 1 339 1 152 1 273 1 335 1 
336 1 134 1 
197 1 119 1 149 1 260 1 172 1 76 1 152 1 335 1 36 1 
234 1 215 1 
9 1 193 1 67 1 
197 1 298 1 359 1 212 1 263 1 76 1 339 1 66 1 152 1 205 2 169 1 119 1 317 1 260 1 273 1 348 1 335 1 196 1 
197 1 298 1 359 1 212 1 263 1 76 1 339 1 66 1 152 1 205 2 169 1 119 1 317 1 260 1 273 1 348 1 335 1 196 1 
197 1 298 1 359 1 212 1 263 1 76 1 339 1 66 1 152 1 205 2 169 1 119 1 317 1 260 1 273 1 348 1 335 1 196 1 
234 1 67 1 215 1 
234 1 67 1 215 1 
9 1 193 1 
9 1 193 1 67 1 
18 1 246 1 
197 1 311 2 359 1 336 1 263 1 76 1 264 2 152 1 57 1 317 1 134 1 246 1 111 1 38 1 44 2 18 1 205 1 168 2 169 1 119 1 260 1 227 2 22 1 207 1 122 1 123 1 335 1 
127 1 210 1 311 2 3 1 264 2 267 1 366 2 103 1 58 1 82 1 84 2 133 1 218 1 8 1 34 1 109 1 138 2 222 2 301 2 281 1 204 1 223 1 44 2 252 2 68 1 256 1 47 1 167 1 49 1 171 1 230 1 
147 1 73 1 350 1 53 1 150 1 338 1 14 1 45 1 340 1 252 2 366 2 316 2 58 1 31 1 84 2 206 1 35 1 230 1 63 1 
73 1 350 1 53 1 338 1 56 1 45 1 340 1 252 1 366 1 316 2 58 1 31 1 84 1 206 1 35 1 63 1 230 1 
147 1 74 1 252 1 363 1 182 1 141 1 155 1 256 1 366 1 328 1 354 1 58 2 79 1 84 1 184 1 345 1 8 1 230 1 63 1 
147 1 73 1 350 1 53 1 150 1 338 1 45 1 340 1 252 1 366 1 316 2 58 1 31 1 84 1 206 1 35 1 63 1 230 1 
157 1 
320 1 131 1 179 1 324 1 23 1 66 1 251 1 
359 1 361 1 178 1 75 1 367 1 131 1 239 1 7 1 242 1 318 1 274 1 320 1 66 2 251 1 169 1 258 1 231 1 
198 1 5 2 104 2 58 4 105 2 238 6 239 4 7 5 346 2 8 10 242 3 158 2 245 2 11 2 14 1 352 2 66 8 252 3 251 8 304 2 256 3 306 2 353 2 169 5 70 1 359 5 176 6 361 4 179 1 75 4 265 1 362 2 181 2 182 1 364 1 366 3 131 2 367 12 79 3 84 3 32 2 318 4 86 1 320 9 321 1 37 2 277 2 42 1 43 2 94 3 324 1 51 2 230 3 231 6 
359 1 176 5 361 2 75 2 198 1 362 2 181 2 367 6 104 2 131 2 238 5 239 2 7 1 242 1 318 2 158 1 370 1 245 2 320 8 161 1 278 1 277 2 279 1 249 1 43 1 96 1 66 5 251 5 254 1 169 1 51 2 286 1 334 1 231 3 126 1 
311 1 359 1 361 1 75 1 77 1 315 1 264 1 4 1 181 1 365 1 289 1 270 1 183 1 239 1 318 1 158 1 245 2 275 1 320 2 44 1 250 1 192 1 251 2 168 1 169 1 100 1 227 1 51 2 
320 1 361 1 179 1 324 1 75 1 66 1 251 1 131 1 239 1 318 1 
320 5 277 2 176 5 352 1 362 2 66 5 181 2 251 5 104 2 367 10 238 5 51 2 158 1 245 2 231 5 
131 1 359 1 169 1 7 1 242 1 66 1 
359 1 361 1 74 1 75 1 265 1 198 1 182 2 155 1 366 2 58 2 79 1 239 1 84 2 184 1 7 2 8 1 242 1 318 1 320 1 43 1 252 2 251 1 256 1 328 1 354 1 169 1 195 1 230 1 308 1 
311 3 77 2 264 2 3 1 267 1 182 1 366 1 58 1 79 1 82 1 84 1 8 1 34 1 61 1 109 1 111 1 138 1 137 1 301 2 300 1 44 3 250 1 223 1 252 1 256 1 168 2 49 1 194 1 171 1 227 2 333 1 230 1 
320 1 176 2 361 1 43 1 75 1 198 1 66 4 251 2 367 4 131 2 238 2 239 1 200 1 318 1 231 2 
375 1 260 1 152 1 
372 1 212 1 260 1 152 1 18 1 
375 1 260 1 152 1 
375 1 260 1 152 1 
26 1 260 1 152 1 
26 1 260 1 152 1 
26 1 260 1 152 1 
260 1 152 1 
76 1 335 1 
138 8 301 4 113 1 235 1 315 1 3 2 181 1 267 2 132 1 183 1 133 4 171 2 100 1 200 1 51 1 34 4 187 3 285 2 109 2 188 1 
138 6 315 1 181 1 132 1 183 1 133 3 100 1 200 1 51 1 23 1 34 3 187 2 285 2 188 1 
277 1 138 4 301 2 235 1 3 1 181 1 362 1 267 1 104 1 133 2 171 1 51 1 34 2 187 2 285 1 109 1 174 1 
101 1 277 1 138 7 279 1 249 2 235 1 181 1 362 1 104 1 133 3 51 1 34 4 187 2 285 1 286 1 
101 1 235 4 2 1 315 1 3 2 362 2 181 3 267 2 132 1 104 2 183 2 133 11 200 1 187 9 34 12 109 2 188 1 138 23 277 2 279 2 249 2 301 4 113 2 303 1 48 1 100 2 171 2 51 3 285 5 
138 1 249 1 34 1 
138 1 279 1 133 1 
138 6 277 1 301 2 235 1 3 1 352 1 362 1 181 1 267 1 104 1 133 3 171 1 51 1 34 3 187 3 109 1 285 2 174 1 
235 1 3 1 362 2 181 2 341 1 267 1 104 2 133 6 34 6 187 2 109 1 161 1 138 12 277 2 279 1 249 1 301 2 96 1 254 1 171 1 51 2 285 1 286 1 334 1 126 1 
138 6 235 1 315 1 181 1 183 1 133 3 100 1 51 1 34 3 187 2 285 1 
138 3 301 2 113 1 235 1 2 1 3 1 267 1 132 1 183 1 133 1 100 1 171 1 187 2 34 2 285 1 109 1 188 1 
138 10 301 2 235 2 3 1 315 1 181 2 341 1 267 1 365 1 183 2 133 5 171 1 100 2 51 2 187 5 34 5 109 1 285 3 
138 2 301 2 235 1 3 1 341 1 267 1 104 1 133 2 171 1 51 1 187 1 109 1 
277 1 138 4 301 2 235 1 3 1 181 1 362 1 341 1 267 1 104 1 133 2 171 1 51 1 34 2 187 2 285 1 109 1 
138 3 360 1 301 6 113 1 2 1 235 1 3 3 341 1 267 3 183 1 133 1 171 3 100 1 34 2 187 2 109 3 285 1 
287 1 101 1 360 1 2 1 235 5 315 2 3 5 362 3 181 5 341 1 267 5 132 1 104 3 183 3 133 16 200 1 34 18 187 12 109 5 293 1 188 1 138 34 277 3 279 3 249 4 301 10 113 2 225 1 100 3 171 5 51 5 285 7 286 1 174 1 
3 1 315 1 181 1 341 1 267 1 132 1 183 1 133 4 200 1 34 4 187 2 109 1 188 1 138 8 279 1 249 1 301 2 171 1 100 1 51 1 285 2 286 1 334 1 
101 1 235 1 315 1 3 2 181 1 362 1 341 1 267 2 132 1 104 1 183 1 133 6 200 1 34 5 187 3 109 2 188 1 138 11 279 1 249 2 301 4 100 1 171 2 51 2 285 2 286 1 334 1 174 1 
235 1 315 1 3 3 362 2 181 3 341 1 267 3 132 1 104 2 183 1 133 9 200 1 34 10 187 4 109 3 188 1 161 1 138 19 277 2 279 1 249 1 301 6 113 1 96 1 254 1 100 1 171 3 51 3 285 3 174 1 286 1 334 1 126 1 
235 2 315 1 3 3 362 2 181 2 341 1 267 3 132 1 104 2 183 1 133 10 200 1 34 7 187 5 109 3 188 1 161 1 138 17 277 1 279 1 249 1 301 6 113 1 96 1 254 1 100 1 171 3 51 3 285 3 174 1 286 1 334 1 126 1 
3 1 315 1 181 1 341 1 267 1 132 1 183 1 133 4 200 1 34 4 187 2 109 1 188 1 138 8 279 1 249 1 301 2 171 1 100 1 51 1 285 2 286 1 334 1 
235 1 3 1 362 2 181 2 341 1 267 1 104 2 133 6 34 6 187 2 109 1 161 1 138 12 277 2 279 1 249 1 301 2 96 1 254 1 171 1 51 2 285 1 286 1 334 1 126 1 
235 2 315 1 3 4 362 2 181 2 341 1 267 4 132 1 104 2 183 1 133 10 200 1 34 8 187 5 109 4 188 1 161 1 138 18 277 1 279 1 249 1 301 8 113 2 96 1 254 1 100 1 171 4 51 3 285 3 286 1 334 1 174 1 126 1 
360 1 235 3 3 4 362 3 181 2 341 1 267 4 104 3 133 9 34 7 187 6 109 4 161 1 138 16 277 2 279 1 249 1 301 8 113 2 96 1 254 1 171 4 51 3 285 3 286 1 334 1 126 1 
138 7 235 3 315 1 181 1 132 2 183 3 133 3 100 3 51 1 34 4 187 6 285 3 188 1 
360 1 235 1 315 1 3 4 362 2 181 2 341 1 267 4 132 1 104 2 183 1 133 10 200 1 34 8 187 4 109 4 188 1 161 1 138 18 277 1 279 1 249 1 301 8 113 2 96 1 254 1 100 1 171 4 51 3 285 3 286 1 334 1 126 1 
111 1 148 1 311 1 269 1 213 1 264 1 44 1 
111 1 148 1 311 1 40 1 213 1 264 1 302 1 44 1 30 1 117 1 269 1 199 1 
366 1 328 1 84 1 23 1 252 1 182 1 
111 1 311 2 137 1 264 1 44 2 252 1 182 1 256 1 366 1 168 1 79 1 58 1 84 1 240 1 227 1 8 1 333 1 230 1 
311 2 264 2 366 1 5 1 58 1 79 2 84 1 240 1 8 3 135 1 111 1 37 1 137 1 42 1 44 2 164 1 192 1 252 1 256 2 168 2 227 1 333 1 230 1 
311 2 264 2 366 2 5 1 58 1 79 2 84 2 240 1 8 3 135 1 111 1 37 1 42 1 44 2 164 1 192 1 252 2 256 2 168 2 257 1 99 1 227 1 333 1 230 1 
359 2 182 1 366 3 5 1 131 1 58 1 79 1 84 3 7 1 8 4 33 1 37 1 42 1 94 1 66 1 252 3 304 1 256 1 353 1 99 1 169 2 71 1 230 1 
37 1 359 2 42 1 94 1 66 1 252 3 182 1 304 1 256 1 366 3 306 1 131 1 5 1 353 1 79 1 58 1 99 1 169 2 84 3 7 1 8 4 230 1 
232 1 366 1 58 1 84 1 252 1 230 1 
232 1 211 1 222 1 74 1 14 1 252 6 182 2 366 7 256 2 167 1 354 1 79 1 58 3 70 1 84 7 226 1 8 3 35 1 201 1 146 1 230 2 
3 2 55 1 58 1 6 1 240 1 200 1 8 1 61 1 109 2 111 2 300 1 301 4 14 1 204 1 252 1 256 1 168 1 171 2 208 1 311 2 264 1 315 1 181 1 267 2 366 1 132 1 79 1 82 2 183 1 84 1 133 3 218 1 187 2 34 3 188 1 276 1 137 1 138 6 44 2 223 2 227 1 100 1 51 1 145 1 333 1 285 2 230 1 
359 3 361 2 179 1 75 2 265 1 182 1 366 1 131 1 105 1 84 1 239 2 7 2 32 1 8 2 242 1 318 2 320 1 11 1 94 1 324 1 66 1 251 1 252 1 304 1 306 1 353 1 169 3 22 1 
232 1 321 1 14 1 252 2 366 2 256 1 353 1 79 1 58 2 70 1 84 2 8 2 230 1 
74 1 14 1 252 2 182 1 155 1 256 1 366 2 328 1 354 1 58 2 79 1 84 2 184 1 8 1 230 1 
42 1 74 1 252 2 155 1 366 2 256 1 354 1 79 1 58 2 374 1 84 2 184 1 8 1 230 1 
366 1 316 1 58 1 350 1 53 1 84 1 338 1 252 1 230 1 182 1 
14 1 252 2 366 2 47 1 256 1 167 1 58 1 84 2 8 1 35 1 230 1 
211 1 74 1 14 1 252 2 182 1 155 1 366 3 256 2 328 1 167 1 354 1 79 1 58 3 84 3 184 1 8 3 201 1 230 2 
211 1 74 1 14 1 252 2 182 1 155 1 366 3 256 2 328 1 167 1 354 1 79 1 58 3 369 1 84 3 184 1 8 3 230 2 
111 1 311 2 264 1 44 2 252 1 182 1 256 1 366 1 168 1 79 1 58 1 257 1 84 1 240 1 227 1 8 1 333 1 230 1 
42 1 74 1 252 1 366 1 256 1 354 1 79 1 58 2 70 1 84 1 226 1 8 1 230 1 
78 1 111 1 332 1 314 1 72 1 
111 1 359 2 189 1 280 1 128 1 314 2 66 1 192 1 164 1 304 1 78 2 131 1 169 2 344 1 85 1 332 1 22 1 135 1 72 2 
127 1 311 1 264 1 44 1 68 1 78 1 103 1 332 1 72 1 
189 1 85 1 332 1 
92 1 170 1 23 1 60 1 
296 1 59 1 92 1 170 1 290 1 271 1 60 1 
337 1 271 1 326 1 
296 1 248 1 92 1 15 1 139 2 154 1 59 3 170 1 290 1 271 3 60 1 347 1 
296 1 59 2 92 1 170 1 217 1 290 1 228 1 271 2 60 1 
175 1 296 1 316 1 350 1 59 1 206 1 290 1 271 1 60 1 244 1 154 1 
296 1 59 1 92 1 290 1 271 1 60 1 154 1 
296 1 59 1 92 2 170 1 290 1 271 1 154 1 
220 1 296 2 59 2 92 1 290 2 241 1 271 2 60 1 266 1 154 1 
296 1 175 1 162 1 1 1 92 1 154 1 59 3 170 1 290 1 217 2 271 3 60 2 87 1 
295 1 296 1 350 1 92 1 338 1 45 1 154 1 316 2 59 2 170 1 206 1 290 1 217 1 271 2 60 1 
296 2 175 1 10 1 162 1 92 1 154 1 59 4 170 1 290 2 217 2 271 4 228 1 60 2 
296 1 59 1 92 1 170 1 290 1 271 1 60 1 154 1 
296 1 175 1 162 1 52 1 248 1 92 2 139 1 59 4 170 2 217 2 290 1 271 4 60 3 347 1 
159 1 296 1 92 1 16 1 154 1 342 1 59 2 170 1 290 1 217 1 271 2 60 1 
296 1 59 3 92 1 170 1 248 2 290 1 93 1 271 3 60 1 139 2 347 1 154 1 
60 2 214 1 261 1 378 2 
296 1 59 1 290 1 271 1 124 1 154 1 
296 1 1 1 59 2 92 1 170 1 217 1 290 1 271 2 60 1 154 1 
25 1 
296 1 59 1 92 1 170 1 290 1 271 1 60 1 154 1 
296 1 1 1 92 1 139 1 154 1 59 3 170 1 217 1 290 1 271 3 60 1 
175 1 162 1 52 1 60 1 
92 1 60 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 298 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 1 168 1 1 9 355 6 263 1 77 1 116 2 80 2 148 1 172 1 102 1 313 1 230 2 27 4 250 1 11 9 272 1 64 3 376 2 69 1 16 1 110 1 43 5 142 2 240 1 302 2 303 2 329 1 
112 1 168 1 1 9 355 6 263 1 77 1 116 2 80 2 148 1 172 1 102 1 313 1 230 2 27 4 250 1 11 9 272 1 64 3 376 2 69 1 16 1 110 1 43 5 142 2 240 1 302 2 303 2 329 1 
112 1 168 1 1 10 355 7 263 1 77 1 116 2 80 2 148 1 172 1 102 1 313 1 230 2 27 5 250 1 11 10 272 1 64 4 376 2 69 1 16 1 110 1 43 6 142 2 240 1 302 2 303 2 329 1 
112 1 168 1 1 7 355 4 263 1 77 1 116 2 80 1 148 1 172 1 102 1 313 1 230 2 27 3 250 1 11 7 272 1 64 2 376 2 69 1 16 1 110 1 43 4 142 2 302 2 303 2 329 1 
112 1 1 4 11 4 355 3 64 1 116 1 80 2 376 1 102 1 69 1 16 1 43 3 142 1 230 1 240 1 329 1 303 1 27 2 
112 1 367 1 1 2 11 2 272 1 135 1 116 1 376 1 172 1 69 1 43 1 249 1 142 1 329 1 303 1 302 1 
112 1 1 3 11 3 355 1 64 1 116 2 69 1 110 1 43 2 329 1 303 2 302 1 27 1 
112 1 1 9 11 9 355 7 263 1 64 3 372 1 116 2 80 2 376 1 102 1 69 1 16 1 110 1 43 5 142 1 230 1 205 1 240 1 329 1 303 2 302 1 250 1 27 4 
112 1 1 9 11 9 355 7 263 1 64 3 372 1 116 2 80 2 376 1 102 1 69 1 16 1 110 1 43 5 142 1 230 1 205 1 240 1 329 1 303 2 302 1 250 1 27 4 
226 1 248 1 357 1 
248 1 322 2 200 1 
370 2 280 1 75 2 309 2 166 2 18 2 91 2 154 1 
113 1 351 1 145 1 50 1 280 1 356 2 75 2 281 1 309 3 79 2 6 1 151 1 337 2 247 1 293 1 154 1 128 1 233 1 318 1 235 1 368 1 131 1 370 2 132 1 134 1 66 1 91 2 109 1 217 1 42 1 189 1 301 2 72 2 328 1 380 1 166 2 18 3 
370 1 75 1 124 1 199 1 309 1 24 1 166 1 18 1 91 1 154 1 
252 1 226 1 370 1 36 1 309 1 53 1 246 1 248 1 124 1 317 1 143 1 258 1 18 1 294 1 
226 1 370 1 75 1 36 1 309 1 91 1 53 2 246 1 248 1 124 1 143 2 166 1 317 1 18 1 294 1 
53 1 10 1 164 1 143 1 231 1 
226 1 53 2 10 1 88 1 306 1 248 1 143 2 231 1 
53 1 10 1 143 1 
370 1 75 1 199 1 309 1 91 1 53 1 124 1 24 1 143 1 166 1 58 1 18 1 231 1 154 1 
248 1 
226 1 53 2 10 1 344 1 306 1 248 1 143 2 231 1 
167 2 226 1 10 2 354 1 306 1 236 2 37 1 244 1 273 2 53 5 239 1 93 1 248 1 315 1 165 1 222 1 143 5 73 1 231 2 
233 1 351 1 235 1 131 1 370 1 75 1 134 1 309 2 79 1 6 1 118 1 217 1 301 1 72 1 192 1 328 1 293 1 339 1 166 1 18 2 
280 1 357 1 
370 2 280 2 75 1 309 2 331 1 91 1 274 1 166 1 18 2 
185 1 336 1 192 1 
233 1 351 1 99 1 235 1 131 1 280 1 134 1 309 1 79 1 6 1 217 1 301 1 72 1 328 1 293 1 18 1 
370 3 280 1 75 3 339 1 309 3 166 3 18 3 91 1 
370 1 75 1 124 1 199 1 309 1 166 1 18 1 
274 1 370 1 75 1 124 1 309 1 331 1 166 1 18 1 91 1 
351 1 113 1 145 1 280 1 356 2 75 3 281 1 309 4 79 1 6 1 118 1 53 1 246 1 337 1 247 1 314 1 293 1 339 1 124 1 125 1 317 1 294 1 154 1 233 1 235 1 368 1 131 1 132 1 370 3 134 1 36 1 91 2 109 1 274 1 217 1 42 1 189 1 301 1 72 1 328 1 380 1 166 3 143 1 18 4 
252 1 210 1 370 2 280 1 75 1 309 2 339 1 166 1 18 2 
255 1 370 3 75 3 36 1 309 3 91 1 274 1 53 1 118 1 246 1 248 1 124 1 339 2 125 1 143 1 166 3 317 1 18 3 294 1 
370 2 75 2 309 2 91 1 274 1 336 1 192 1 339 1 166 2 18 2 
233 1 351 1 235 1 131 1 280 1 134 1 309 1 79 1 6 1 217 1 301 1 72 1 293 1 328 1 18 1 
351 1 235 1 131 1 280 1 309 1 213 1 79 1 374 1 6 1 217 1 301 1 72 1 293 1 328 1 18 1 
74 1 145 1 356 2 281 2 336 2 247 1 337 4 316 1 342 1 254 1 34 1 66 2 109 1 299 1 375 1 185 2 160 1 277 1 348 1 42 1 189 1 192 2 350 1 380 1 
267 1 370 1 75 1 124 1 309 1 317 1 166 1 18 1 
252 1 210 1 370 5 280 1 75 4 309 5 91 1 274 1 118 1 161 1 54 1 339 2 166 4 18 5 
267 1 370 2 75 2 124 1 199 1 309 2 166 2 18 2 
22 1 371 1 
22 1 371 1 
68 1 38 1 
68 1 38 1 
68 1 38 1 
176 1 22 1 371 1 
176 1 22 1 371 1 
22 1 371 1 359 1 
68 1 22 2 190 1 100 1 371 2 38 1 
176 1 22 1 371 1 
130 1 22 1 371 1 
130 1 22 1 371 1 
130 1 22 1 371 1 
61 2 352 3 181 2 371 2 282 2 332 2 324 1 202 1 53 2 311 2 300 1 312 1 275 1 22 2 349 1 190 1 248 1 143 2 85 1 
48 1 352 1 144 1 115 1 280 1 75 2 309 2 198 1 282 1 359 1 53 1 311 1 22 1 365 1 61 1 370 2 133 1 181 1 371 1 349 1 141 1 166 2 143 1 18 2 
376 1 142 1 230 1 
376 1 142 1 135 1 
259 1 376 3 12 1 230 2 147 1 135 1 
259 1 376 2 287 1 230 1 147 1 135 1 
259 2 376 2 230 1 147 1 135 1 
48 1 167 1 226 1 354 3 306 1 307 1 308 1 200 1 53 5 149 2 361 1 315 2 248 2 26 1 251 1 28 2 231 4 342 1 10 1 133 1 322 3 236 1 273 1 325 1 160 1 277 1 348 1 378 1 141 1 222 1 143 5 241 2 
167 2 226 1 354 8 306 1 307 2 308 3 19 1 200 3 117 5 53 9 315 6 248 5 26 1 251 2 28 6 232 1 231 7 342 3 10 6 321 1 133 4 322 9 236 2 273 2 137 1 160 3 93 1 277 3 348 3 164 5 143 9 222 1 241 6 47 1 46 1 
167 1 226 1 354 3 307 1 308 1 200 2 53 3 149 1 361 1 248 3 315 2 251 1 28 2 231 2 342 1 133 1 236 1 322 4 273 1 160 1 93 1 277 1 348 1 378 1 143 3 241 2 
167 1 226 1 354 5 307 1 308 2 200 3 53 4 149 2 361 1 248 4 315 4 251 1 28 4 232 1 231 3 342 2 133 2 322 7 236 1 273 1 137 1 160 2 93 1 277 2 348 2 378 1 143 4 241 4 47 1 
150 1 328 1 357 1 
60 1 328 1 
127 1 
328 1 293 1 
298 1 
6 1 328 1 293 1 
106 1 328 1 
342 1 98 1 169 1 256 1 197 2 281 3 51 1 358 1 66 4 227 1 299 2 334 1 337 7 277 1 219 1 316 3 207 1 
342 1 98 1 169 1 256 1 197 2 281 3 51 1 358 1 66 4 227 1 299 2 334 1 337 7 277 1 219 1 316 3 207 1 
104 1 342 1 98 1 169 1 256 1 197 2 281 3 51 1 358 1 66 4 227 1 299 2 334 1 337 7 277 1 219 1 316 3 207 1 
195 1 98 1 169 2 242 1 3 1 356 2 308 3 197 3 281 15 51 2 358 2 227 5 310 1 333 1 334 1 247 1 337 31 316 10 207 1 153 1 342 4 33 1 256 2 35 3 237 4 66 16 299 5 109 1 160 3 42 1 189 1 348 3 277 4 219 1 
169 1 98 1 356 4 197 2 281 4 358 1 51 1 227 1 310 1 247 2 337 9 316 4 55 1 207 1 342 1 256 1 66 5 109 2 299 3 377 1 277 1 42 2 189 2 219 1 
112 1 353 1 262 1 0 1 1 2 355 1 79 1 116 1 20 1 83 1 292 1 230 1 123 1 32 1 235 1 131 1 11 2 12 1 15 1 135 1 376 2 69 1 17 1 301 1 43 1 72 1 142 1 303 1 329 1 302 1 
112 1 262 1 0 1 1 3 355 2 5 1 79 1 116 1 20 1 120 1 83 1 292 1 230 1 123 1 103 1 235 1 131 1 11 3 12 1 15 1 135 1 376 2 69 1 17 1 301 1 43 1 72 1 142 1 303 1 302 1 
112 1 0 1 1 2 355 2 79 1 120 1 83 1 292 1 123 1 230 1 103 1 235 1 131 1 11 2 12 1 15 1 135 1 376 2 69 1 17 1 301 1 43 1 72 1 142 1 302 1 
235 1 131 1 0 2 1 1 11 1 5 1 15 2 116 1 79 1 265 1 238 1 217 1 290 1 301 1 204 1 17 2 71 1 72 1 328 1 293 1 302 2 303 1 364 1 
262 1 0 1 1 1 79 1 116 1 20 1 83 1 292 1 230 1 123 1 103 1 32 1 235 1 131 1 11 1 12 1 15 1 135 1 376 2 17 1 301 1 72 1 142 1 303 1 329 1 302 1 
157 1 
200 2 53 5 203 1 246 1 335 4 248 2 293 1 294 1 252 1 253 2 211 2 10 6 297 1 345 1 67 1 217 2 70 1 301 2 71 1 72 2 222 1 258 1 18 1 167 1 226 1 114 1 354 2 306 3 307 1 309 1 79 2 21 2 360 2 121 2 23 1 174 2 315 2 124 1 317 1 234 1 175 1 129 2 235 1 131 1 370 1 180 1 322 2 236 1 36 1 273 1 238 1 140 1 328 1 44 1 143 5 
252 1 10 2 344 1 297 1 370 1 306 1 345 1 36 1 309 1 53 3 335 2 246 1 203 1 70 1 121 1 23 1 124 1 317 1 143 3 294 1 258 1 18 1 
226 1 306 1 309 1 53 3 360 1 203 1 246 1 335 3 23 1 248 1 124 1 317 1 294 1 252 1 10 1 370 1 297 1 344 1 345 1 36 1 70 1 143 3 18 1 258 1 
226 1 306 1 309 1 21 1 53 3 360 1 203 1 246 1 335 3 23 1 121 1 248 1 124 1 317 1 294 1 252 1 10 2 344 1 370 1 297 1 345 1 36 1 70 1 143 3 18 1 258 1 
200 2 53 5 335 6 246 1 203 1 248 5 294 1 252 1 211 2 253 2 10 7 344 1 297 1 345 1 214 1 70 1 222 1 18 1 258 1 167 1 226 5 354 1 306 3 309 1 21 4 228 1 360 4 119 1 121 4 23 1 174 2 315 1 124 1 317 1 175 1 129 2 370 1 180 1 236 1 36 1 183 1 273 1 136 1 143 5 
200 2 53 4 335 4 246 1 203 1 248 2 294 1 252 1 211 2 253 2 10 4 297 1 345 1 70 1 222 1 18 1 258 1 167 1 226 1 354 1 306 2 309 1 21 2 360 2 23 1 121 2 174 2 315 1 124 1 317 1 175 1 129 2 370 1 180 1 236 1 322 2 36 1 273 1 44 1 143 4 
167 1 226 1 354 1 306 2 309 1 200 2 21 2 228 1 53 4 360 2 203 1 246 1 335 4 121 2 23 1 174 2 248 1 315 1 124 1 317 1 294 1 252 1 253 2 211 2 175 1 129 2 10 4 370 1 297 1 180 1 345 1 236 1 36 1 214 1 273 1 136 1 70 1 143 4 222 1 18 1 258 1 
167 1 226 1 354 1 306 2 309 1 200 2 21 2 228 1 53 4 360 2 203 1 246 1 335 4 121 2 23 1 174 2 248 1 315 1 124 1 317 1 294 1 252 1 253 2 211 2 175 1 129 2 10 4 370 1 297 1 180 1 345 1 236 1 36 1 214 1 273 1 136 1 70 1 143 4 222 1 18 1 258 1 
167 1 226 1 354 1 306 2 309 1 21 2 53 4 360 2 203 1 246 1 335 4 121 2 23 1 248 1 315 1 124 1 317 1 294 1 209 2 252 1 211 2 129 2 296 1 343 1 10 4 370 1 297 1 90 1 180 1 345 1 322 2 236 1 36 1 39 2 214 1 273 1 70 1 143 4 222 1 18 1 258 1 
167 1 226 1 354 1 306 2 309 1 200 2 21 3 228 1 53 4 360 3 203 1 246 1 335 5 119 1 23 1 121 3 174 2 248 1 315 1 124 1 317 1 294 1 252 1 253 2 211 2 175 1 129 2 10 5 370 1 297 1 180 1 345 1 236 1 36 1 214 1 273 1 136 1 70 1 222 1 143 4 18 1 258 1 
167 1 226 1 354 1 306 2 309 1 200 2 21 3 228 1 53 4 360 3 203 1 246 1 335 5 119 1 23 1 121 3 174 2 248 1 315 1 124 1 317 1 294 1 252 1 253 2 211 2 175 1 129 2 10 5 370 1 297 1 180 1 345 1 236 1 36 1 214 1 273 1 136 1 70 1 222 1 143 4 18 1 258 1 
167 1 226 1 354 1 306 2 309 1 21 2 53 4 360 2 203 1 246 1 335 4 121 2 23 1 248 1 315 1 124 1 317 1 294 1 209 2 252 1 211 2 129 2 296 1 10 4 297 1 370 1 180 1 345 1 322 2 236 1 36 1 39 2 273 1 70 1 44 1 222 1 143 4 258 1 18 1 
145 1 98 1 280 2 356 2 197 1 281 3 357 1 51 1 336 1 247 1 337 6 316 2 207 1 342 1 256 1 66 3 109 1 299 2 375 1 185 1 42 1 189 1 277 1 219 1 192 1 380 1 
145 1 280 1 356 4 308 2 281 6 227 1 333 1 336 4 151 1 338 1 247 2 337 14 316 2 57 1 153 1 342 2 368 1 35 3 237 3 66 8 299 1 109 2 185 11 160 2 188 1 42 2 189 2 348 1 277 1 192 11 380 2 225 1 381 1 
351 1 99 1 145 1 280 1 75 1 356 2 309 2 281 1 79 1 6 1 118 1 336 1 247 1 337 2 151 1 293 1 339 1 233 1 235 1 62 1 368 1 131 1 370 1 134 1 182 1 66 1 109 1 217 1 187 1 301 1 189 1 42 1 72 1 328 1 380 1 166 1 18 2 381 1 
98 1 145 3 280 2 197 1 281 10 51 1 245 2 6 2 336 7 151 1 247 3 337 20 293 2 103 1 339 1 207 1 342 3 256 1 346 1 107 2 66 10 299 4 109 3 160 2 217 1 301 3 348 2 219 1 72 3 221 1 166 1 18 3 304 2 351 2 356 6 75 1 308 2 309 3 264 1 79 3 227 4 118 1 316 8 233 2 235 2 368 1 131 2 370 1 132 2 134 2 40 2 185 7 277 3 42 3 189 3 328 2 192 7 380 3 381 1 
353 1 145 2 75 1 356 4 309 1 281 1 79 7 201 1 289 1 247 2 151 1 337 2 84 1 293 2 103 1 339 1 318 2 235 2 179 1 368 1 131 2 370 1 66 1 373 1 109 2 375 1 238 1 217 2 41 1 276 1 301 8 42 2 189 2 72 8 71 1 328 3 380 2 166 1 18 1 
145 1 75 1 356 2 76 1 308 1 309 1 281 2 336 1 247 1 337 3 316 1 342 1 370 1 66 1 91 1 299 1 109 1 185 1 274 1 160 1 42 1 189 1 348 1 277 1 192 1 380 1 166 1 18 1 381 1 
342 1 145 1 34 1 356 2 66 2 227 1 109 1 185 1 375 1 160 1 336 1 337 2 247 1 189 1 42 1 316 1 192 1 380 1 
145 1 356 2 281 2 299 1 109 1 185 1 375 1 336 1 337 2 247 1 189 1 42 1 348 1 277 1 316 1 192 1 380 1 350 1 
145 1 308 1 356 2 281 2 227 1 336 2 247 1 337 4 316 2 342 1 66 2 109 1 299 1 160 1 375 1 185 2 42 1 189 1 348 1 277 1 192 2 380 1 
342 1 145 1 34 1 356 2 66 2 227 1 109 1 185 1 201 1 160 1 336 1 337 2 247 1 189 1 42 1 316 1 192 1 380 1 
145 1 356 2 281 2 299 1 109 1 185 1 201 1 336 1 337 2 247 1 189 1 42 1 348 1 277 1 316 1 192 1 380 1 350 1 
145 1 308 1 356 2 281 2 227 1 201 1 336 2 247 1 337 4 316 2 342 1 66 2 109 1 299 1 160 1 185 2 42 1 189 1 348 1 277 1 192 2 380 1 
145 1 308 1 356 2 281 2 227 1 336 2 337 4 247 1 316 2 342 1 66 2 109 1 299 1 160 1 185 2 42 1 189 1 348 1 277 1 192 2 380 1 
351 1 145 1 280 1 356 2 309 1 281 1 79 1 6 1 151 1 337 2 247 1 293 1 233 1 235 1 368 1 131 1 132 1 134 1 66 1 109 1 217 1 301 1 189 1 42 1 72 1 328 1 380 1 18 1 
96 1 351 1 145 1 280 1 356 2 309 1 281 1 79 1 6 1 151 1 337 2 247 1 293 1 235 1 368 1 131 1 213 1 66 1 374 1 109 1 217 1 301 1 189 1 42 1 72 1 328 1 380 1 18 1 
145 1 308 1 356 2 281 2 227 1 336 2 247 1 337 4 316 2 342 1 66 2 109 1 299 1 160 1 185 2 42 1 189 1 348 1 277 1 192 2 380 1 381 1 
351 1 353 1 145 1 356 2 308 1 281 2 309 1 79 1 227 1 6 1 336 2 337 4 247 1 316 2 293 1 233 1 342 1 235 1 131 1 132 1 134 1 66 2 40 1 299 1 109 1 185 2 160 1 277 1 348 1 301 1 189 1 42 1 72 1 192 2 328 1 380 1 18 1 
145 1 260 1 75 1 356 2 308 1 281 1 309 1 227 1 336 1 247 1 337 3 316 1 342 1 370 1 66 2 91 1 109 1 274 1 160 1 185 1 277 1 348 1 42 1 189 1 192 1 380 1 166 1 18 1 381 1 
97 1 356 4 308 3 78 1 281 10 227 3 333 1 122 2 247 2 337 19 316 6 55 1 341 1 153 1 31 1 342 3 35 1 237 2 66 9 108 1 299 3 109 2 159 1 160 3 186 1 42 2 189 2 348 3 277 3 220 2 
49 1 356 6 308 3 281 12 227 2 310 2 333 2 122 1 247 3 337 26 316 4 55 1 126 1 341 1 31 2 342 3 35 2 66 14 237 2 108 1 299 2 109 3 215 1 159 1 160 3 186 2 138 1 277 2 42 3 189 3 348 2 95 1 220 4 111 1 
97 1 98 1 49 1 197 1 281 21 51 1 333 3 337 41 247 3 55 1 207 1 153 1 341 1 342 5 256 1 66 20 108 1 109 3 299 4 215 1 160 4 159 1 163 1 348 4 219 1 220 4 111 1 308 4 356 6 227 4 310 1 122 1 316 8 126 1 31 2 35 3 237 4 186 1 138 1 277 5 189 3 42 3 95 1 
97 1 98 1 49 1 356 8 308 4 197 1 281 18 51 1 227 3 310 2 333 3 122 1 247 4 337 38 316 7 55 1 207 1 126 1 341 1 153 1 31 2 342 5 256 1 35 3 237 4 66 20 108 1 215 1 299 4 109 4 159 1 160 4 138 1 186 1 163 1 42 4 189 4 348 3 277 4 219 1 95 1 220 4 111 1 
98 1 49 1 356 4 308 7 197 1 281 25 51 1 227 7 310 1 333 2 122 1 247 2 337 52 316 14 55 1 207 1 57 2 126 1 341 1 153 2 31 1 342 8 256 1 35 4 237 4 66 27 108 1 215 1 299 7 109 2 159 1 160 7 138 1 186 1 42 2 189 2 348 7 277 8 219 1 95 1 220 4 111 1 
61 1 311 1 312 1 22 1 190 1 191 1 181 1 371 1 282 1 85 1 
359 1 365 1 
285 1 61 1 311 1 89 1 22 1 13 1 181 1 371 1 282 1 
61 1 352 2 181 1 371 1 282 1 332 1 324 1 202 1 53 1 311 1 312 1 275 1 22 1 349 1 190 1 248 1 143 1 85 1 
61 1 352 2 181 1 371 1 282 1 332 1 324 1 202 1 53 1 311 1 312 1 275 1 22 1 349 1 190 1 248 1 143 1 85 1 
61 1 352 2 181 1 371 1 282 1 332 1 324 1 202 1 53 1 311 1 312 1 275 1 22 1 349 1 190 1 248 1 143 1 85 1 
176 1 100 1 65 1 
176 1 100 1 65 1 
130 1 288 1 
130 1 288 1 100 1 
144 1 198 1 
48 1 352 1 144 1 115 1 280 1 75 2 309 2 198 1 282 1 332 1 359 1 53 1 311 1 22 1 229 1 231 1 365 1 61 1 370 2 133 1 181 1 371 1 324 1 141 1 143 1 166 2 18 2 
176 1 65 1 
130 1 288 1 100 1 
145 1 356 2 309 2 281 1 79 2 289 1 247 1 151 1 337 2 293 1 84 1 208 1 269 1 318 2 235 1 177 1 368 1 131 1 271 1 370 2 66 1 109 1 301 2 189 1 42 1 72 2 328 1 193 1 380 1 18 2 381 1 
235 1 353 1 261 1 131 1 0 1 12 1 135 1 79 2 20 1 376 2 301 2 72 2 83 1 292 1 142 1 230 1 103 1 56 1 340 1 
235 1 261 1 0 1 131 1 12 1 14 1 135 1 79 1 20 1 376 2 301 1 72 1 83 1 292 1 142 1 230 1 103 1 
235 1 105 1 131 1 0 1 79 1 265 1 238 1 217 1 301 1 72 1 71 1 328 1 293 1 340 1 
235 1 261 1 0 1 131 1 12 1 135 1 79 1 20 1 376 2 301 1 72 1 83 1 292 1 142 1 230 1 103 1 56 1 340 1 
283 1 
226 1 354 1 248 1 315 1 357 1 244 1 73 1 
167 1 226 1 354 1 306 1 200 1 53 1 174 1 315 1 248 2 175 1 253 1 10 1 236 1 322 1 273 1 222 1 143 1 
200 6 244 1 6 3 53 5 246 2 150 2 293 3 248 8 206 2 60 3 295 2 342 2 10 5 106 2 63 1 216 2 160 2 217 1 301 3 348 2 72 3 222 4 73 1 304 2 167 4 226 2 353 1 354 9 305 1 307 2 306 3 308 2 171 1 79 3 81 1 315 8 28 6 234 1 366 2 235 4 131 3 369 2 236 4 322 12 273 4 323 1 94 2 277 2 326 2 328 10 327 1 45 2 143 5 241 6 
167 2 226 2 354 8 49 1 307 1 306 1 308 2 52 1 200 3 53 1 333 1 152 1 248 5 315 5 206 1 28 5 234 1 342 2 10 1 322 6 236 2 35 1 237 1 273 2 215 1 160 2 138 1 348 2 277 2 95 1 45 2 143 1 222 2 111 1 241 5 
167 1 98 1 354 2 75 1 199 1 309 1 4 1 51 1 228 1 53 1 315 2 206 1 124 1 24 1 58 1 154 1 342 2 256 1 370 1 236 1 273 1 91 1 277 1 45 2 222 1 143 1 166 1 18 1 
167 1 226 1 354 1 236 1 244 1 273 1 315 1 248 1 222 1 73 1 
342 2 160 2 354 5 277 2 348 2 248 5 322 10 315 5 308 2 206 1 45 2 200 5 28 5 241 5 304 1 
226 1 53 1 10 1 306 1 248 1 143 1 
167 2 354 2 307 2 306 2 79 4 53 3 7 1 81 2 173 1 293 1 315 2 234 2 235 1 10 4 131 1 236 2 67 1 273 2 323 1 238 1 140 1 217 2 93 1 301 4 72 4 71 1 328 1 222 1 143 3 
113 1 351 1 145 1 280 1 356 2 75 2 281 1 309 3 79 1 6 1 337 1 247 1 293 1 154 1 233 1 235 1 368 1 131 1 370 2 132 1 134 1 91 2 109 1 217 1 42 1 189 1 301 1 72 1 328 1 380 1 166 2 18 3 
234 1 167 1 226 2 354 1 307 1 322 4 236 1 197 1 200 2 273 1 315 2 248 4 222 1 241 2 28 2 
61 1 279 1 282 1 
61 1 279 1 282 1 
61 1 144 1 194 1 282 1 85 1 
61 1 279 1 282 1 
86 1 61 1 282 1 
86 1 61 1 282 1 
86 1 61 1 282 1 
61 1 282 1 
22 1 371 1 
342 1 98 1 256 1 356 4 197 1 281 4 66 4 51 1 227 1 299 2 109 2 310 1 337 8 247 2 277 1 189 2 42 2 219 1 316 3 207 1 
299 2 342 1 98 1 337 6 277 1 256 1 219 1 316 2 197 1 281 3 357 1 66 3 51 1 207 1 
342 1 101 1 356 2 308 1 281 2 66 2 227 1 299 1 109 1 160 1 247 1 337 4 277 1 348 1 189 1 42 1 316 2 
342 1 35 1 308 1 281 4 237 2 66 3 227 1 299 1 333 1 160 1 337 7 277 1 348 1 316 2 153 1 
98 1 308 2 356 4 197 1 281 12 51 2 227 4 310 2 337 23 338 1 247 2 316 9 207 1 57 1 153 1 342 3 256 2 35 2 66 11 237 2 299 5 109 2 160 2 218 1 348 2 277 3 189 2 42 2 219 1 
337 1 281 1 237 1 
337 1 35 1 66 1 
342 1 101 1 356 2 308 1 281 3 66 3 227 1 109 1 299 2 160 1 247 1 337 6 42 1 189 1 348 1 277 1 316 3 304 1 
49 1 356 2 308 2 281 6 227 1 333 1 337 12 247 1 316 2 55 1 342 2 35 1 237 1 66 6 215 1 109 1 299 1 160 2 138 1 42 1 189 1 348 2 277 2 95 1 111 1 
342 1 98 1 256 1 281 3 66 3 51 1 227 1 299 1 337 6 277 1 316 2 
256 1 356 2 281 2 66 1 51 1 227 1 299 1 310 1 109 1 218 1 337 3 247 1 189 1 42 1 219 1 316 2 207 1 
342 2 98 1 256 2 356 2 4 1 281 5 51 2 66 5 227 2 109 1 299 3 247 1 337 10 42 1 189 1 277 2 316 5 55 1 
342 1 356 2 66 2 227 1 109 1 160 1 247 1 337 2 189 1 42 1 316 1 55 1 
342 1 356 2 308 1 281 2 66 2 227 1 299 1 109 1 160 1 247 1 337 4 277 1 348 1 189 1 42 1 316 2 55 1 
97 1 256 1 356 6 281 2 51 1 66 1 227 1 310 1 109 3 299 1 218 1 337 3 247 3 189 3 42 3 316 2 55 1 
97 1 98 2 242 1 3 1 101 1 356 10 308 3 197 1 281 18 51 3 227 5 310 2 333 1 247 5 337 34 316 12 55 1 207 1 153 1 342 5 33 1 256 3 35 3 237 4 66 16 109 5 299 7 160 3 218 1 42 5 189 5 348 3 277 5 219 1 
98 1 356 2 197 1 281 4 51 1 333 1 337 8 247 1 316 2 55 1 207 1 342 1 256 1 35 1 237 1 66 4 215 1 109 1 299 2 277 1 42 1 189 1 219 1 
98 1 101 1 356 4 308 1 197 1 281 5 51 1 227 1 333 1 337 11 247 2 316 3 55 1 207 1 153 1 342 2 256 1 35 1 237 2 66 6 299 2 215 1 109 2 160 1 277 1 42 2 189 2 219 1 
98 1 49 1 101 1 356 6 308 2 197 1 281 10 51 1 227 1 310 1 333 1 337 19 247 3 316 4 55 1 207 1 342 3 256 1 35 1 237 1 66 9 215 1 109 3 299 3 160 2 138 1 42 3 189 3 348 2 277 3 219 1 95 1 111 1 
98 1 49 1 101 1 356 6 308 2 197 1 281 7 51 1 227 2 310 1 333 1 337 17 247 3 316 5 55 1 207 1 342 3 256 1 35 1 237 1 66 10 215 1 109 3 299 3 160 2 138 1 42 3 189 3 348 1 277 2 219 1 95 1 111 1 
98 1 356 2 197 1 281 4 51 1 333 1 337 8 247 1 316 2 55 1 207 1 342 1 256 1 35 1 237 1 66 4 215 1 109 1 299 2 277 1 42 1 189 1 219 1 
49 1 356 2 308 2 281 6 227 1 333 1 337 12 247 1 316 2 55 1 342 2 35 1 237 1 66 6 215 1 109 1 299 1 160 2 138 1 42 1 189 1 348 2 277 2 95 1 111 1 
98 1 49 1 101 1 356 8 308 2 197 1 281 8 51 1 227 2 310 2 333 1 337 18 247 4 316 5 55 1 207 1 342 3 256 1 35 1 237 1 66 10 215 1 109 4 299 3 160 2 138 1 42 4 189 4 348 1 277 2 219 1 95 1 111 1 
97 1 49 1 356 8 308 3 281 7 227 3 310 2 333 1 337 16 247 4 316 6 55 1 342 3 35 1 237 1 66 9 215 1 109 4 299 3 160 3 138 1 42 4 189 4 348 2 277 2 95 1 111 1 
342 1 98 1 256 3 281 4 51 3 66 3 227 3 299 3 337 7 277 1 219 1 316 6 207 2 
97 1 98 1 49 1 356 8 308 2 197 1 281 8 51 1 227 1 310 2 333 1 337 18 247 4 316 4 55 1 207 1 342 3 256 1 35 1 237 1 66 10 215 1 109 4 299 3 160 2 138 1 42 4 189 4 348 1 277 2 219 1 95 1 111 1 
252 1 210 1 370 1 82 1 280 1 309 1 18 1 
252 1 210 1 87 1 270 1 347 1 370 1 82 1 280 1 278 1 309 1 18 1 158 1 
238 1 235 1 217 1 131 1 301 1 71 1 72 1 328 1 293 1 357 1 79 1 
351 1 235 1 131 1 370 1 280 1 75 1 134 1 309 2 79 1 6 1 217 1 301 1 72 1 328 1 293 1 339 1 166 1 18 2 
351 1 235 1 106 1 131 1 369 1 370 2 280 1 75 1 134 1 309 2 79 1 6 2 81 1 301 1 72 1 328 3 293 2 124 1 339 1 317 1 166 2 294 1 18 2 
351 1 235 1 320 1 106 1 131 1 369 1 370 2 280 1 75 1 309 2 213 1 79 2 6 2 81 1 301 2 72 2 328 3 293 2 124 1 339 1 317 1 166 2 294 1 18 2 
226 1 2 1 79 3 6 1 53 2 81 1 246 1 150 1 293 1 248 1 60 1 235 1 320 1 10 1 131 1 106 1 369 1 217 1 301 3 72 3 328 4 223 1 143 2 
60 1 226 1 235 1 320 1 10 1 106 1 131 1 369 1 79 3 6 1 53 2 217 1 246 1 81 1 150 1 301 3 72 3 326 1 248 1 293 1 328 4 143 2 
373 1 235 1 131 1 301 1 72 1 79 1 
318 1 353 1 319 1 235 3 179 1 131 2 79 6 373 1 6 1 217 2 41 1 276 1 8 1 289 1 301 7 72 7 327 1 293 2 328 3 103 1 379 1 
351 1 98 1 145 2 353 1 280 2 75 1 356 4 197 1 281 3 309 2 51 1 79 1 6 1 336 1 337 6 247 2 316 2 293 1 339 1 207 1 208 1 233 1 342 1 235 1 131 1 256 1 370 1 132 1 134 1 66 3 107 1 40 1 299 2 109 2 185 1 277 1 189 2 42 2 301 1 219 1 72 1 192 1 328 1 380 2 166 1 18 2 381 1 
167 2 226 1 354 1 306 1 244 1 79 1 53 3 246 1 150 1 248 1 315 1 231 1 60 1 366 1 295 1 10 2 236 2 273 2 323 1 217 1 301 1 94 1 72 1 326 1 328 2 222 2 143 3 73 1 
353 1 235 2 131 1 305 1 79 2 373 1 6 1 150 1 301 2 72 2 327 1 293 1 328 2 
235 1 353 1 320 1 131 1 79 4 238 1 217 1 301 4 72 4 71 1 293 1 328 1 363 1 
319 1 235 2 131 1 346 1 79 2 6 1 81 1 92 1 257 1 8 1 301 2 72 2 293 1 328 1 
376 1 235 1 217 1 131 1 301 1 292 1 72 1 142 1 135 1 79 1 
353 1 235 1 177 1 131 1 79 2 289 1 301 2 72 2 293 1 328 1 103 1 
353 1 235 2 179 1 131 2 79 4 238 1 217 1 81 1 276 1 289 1 301 5 71 1 72 5 293 2 328 3 363 1 
353 1 235 2 179 1 170 1 131 2 79 4 238 1 217 1 81 1 289 1 301 5 71 1 72 5 293 2 328 3 363 1 
351 1 235 1 131 1 370 1 280 1 75 1 309 2 213 1 79 1 6 1 217 1 301 1 72 1 328 1 293 1 339 1 166 1 18 2 
319 1 235 2 131 1 79 1 6 1 81 1 8 1 301 1 72 1 327 1 293 1 328 1 379 1 
271 1 370 1 330 1 309 1 184 1 362 1 193 1 269 1 18 1 
291 1 243 1 330 1 
280 1 362 1 330 1 184 1 155 1 
226 1 280 1 330 1 243 1 36 1 184 2 284 1 53 2 246 1 291 1 362 2 248 1 124 1 125 1 317 1 143 2 294 1 231 1 155 2 
112 1 69 1 43 1 357 1 
112 1 69 1 1 1 11 1 43 1 303 1 116 1 
11 1 17 1 302 1 
112 1 178 1 1 3 11 3 212 1 272 2 116 1 69 1 43 1 9 1 329 1 303 1 
112 1 80 1 69 1 1 2 355 1 11 2 43 1 303 1 116 1 
1 1 11 1 116 1 376 1 16 1 43 1 230 1 142 1 329 1 303 1 27 1 
69 1 1 1 11 1 43 1 303 1 329 1 116 1 
112 1 69 2 1 1 11 1 303 1 329 1 116 1 
30 1 1 2 11 2 196 1 116 2 69 1 268 1 43 1 329 1 303 2 
112 1 1 3 11 3 355 2 263 1 64 1 116 1 69 1 43 2 329 1 303 1 250 1 27 1 
112 1 1 2 11 2 355 1 12 1 135 1 116 1 376 2 162 1 69 1 43 1 230 1 142 1 329 1 303 1 
112 1 1 4 11 4 355 2 64 1 116 2 80 1 69 1 43 2 240 1 329 1 303 2 27 1 
112 1 69 1 1 1 11 1 43 1 303 1 329 1 116 1 
112 2 29 1 1 4 355 2 11 4 272 1 212 1 64 1 116 1 69 2 9 1 43 3 303 1 27 1 
112 1 156 1 1 2 11 2 355 1 372 1 116 1 139 1 69 1 43 1 329 1 303 1 
112 1 1 3 11 3 212 2 272 2 116 1 69 1 9 1 43 1 329 1 303 1 224 1 
286 1 43 2 146 1 59 2 
266 1 1 1 11 1 303 1 329 1 116 1 
112 1 69 1 1 2 355 1 11 2 43 1 263 1 303 1 329 1 116 1 
25 1 
112 1 69 1 1 1 11 1 43 1 303 1 329 1 116 1 
112 1 1 3 355 1 11 3 272 1 263 1 116 1 69 1 43 1 329 1 303 1 
29 1 43 1 64 1 27 1 
69 1 43 1 

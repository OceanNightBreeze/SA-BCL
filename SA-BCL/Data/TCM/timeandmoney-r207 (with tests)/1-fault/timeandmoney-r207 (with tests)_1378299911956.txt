#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 1 364 1 7 1 140 2 365 1 61 4 367 1 62 2 193 1 108 1 369 1 111 2 300 2 228 1 151 9 44 1 373 5 260 1 20 1 22 9 326 1 376 2 155 2 327 3 159 2 51 1 265 6 118 1 
119 1 364 1 7 1 140 2 365 1 61 4 367 1 62 2 193 1 108 1 369 1 111 2 300 2 228 1 151 9 44 1 373 5 260 1 20 1 22 9 326 1 376 2 155 2 327 3 159 2 51 1 265 6 118 1 
119 1 364 1 7 1 140 2 365 1 61 5 367 1 62 2 193 1 108 1 369 1 111 2 300 2 228 1 151 10 44 1 373 6 260 1 20 1 22 10 326 1 376 2 155 2 327 4 159 2 51 1 265 7 118 1 
119 1 364 1 7 1 140 2 365 1 61 3 367 1 62 2 193 1 108 1 369 1 111 2 300 2 228 1 151 7 44 1 373 4 20 1 22 7 326 1 376 1 155 2 327 2 159 2 51 1 265 4 118 1 
111 1 300 1 151 4 7 1 140 1 373 3 260 1 22 4 61 2 62 1 376 2 326 1 327 1 155 1 369 1 51 1 265 3 118 1 
111 1 322 1 151 2 140 1 365 1 373 1 22 2 62 1 367 1 155 1 97 1 369 1 51 1 159 1 118 1 294 1 
151 3 373 2 22 3 61 1 62 2 193 1 155 2 327 1 369 1 51 1 159 1 265 1 118 1 
364 1 7 1 140 1 61 4 62 2 193 1 146 1 369 1 111 1 300 1 151 9 127 1 373 5 20 1 260 1 22 9 376 2 326 1 327 3 155 2 159 1 265 7 51 1 118 1 
364 1 7 1 140 1 61 4 62 2 193 1 146 1 369 1 111 1 300 1 151 9 127 1 373 5 20 1 260 1 22 9 376 2 326 1 327 3 155 2 159 1 265 7 51 1 118 1 
185 1 0 1 67 1 
185 1 362 1 349 2 
350 2 335 1 138 1 139 2 165 2 69 2 171 2 129 2 
308 1 163 1 335 1 30 1 138 1 139 3 165 2 170 1 122 2 171 2 9 1 83 1 104 1 343 1 344 2 192 1 177 1 86 1 317 1 39 1 222 1 318 1 90 1 255 1 350 2 197 2 301 1 352 1 274 1 69 2 129 3 21 1 132 2 181 2 77 1 307 1 210 1 
350 1 309 1 335 1 74 1 139 1 165 1 69 1 59 1 171 1 129 1 
1 1 0 1 185 1 309 2 136 1 335 1 139 2 165 1 100 1 216 1 59 1 171 1 346 1 350 2 298 1 150 1 69 1 152 1 129 2 95 1 74 1 
185 1 0 1 350 1 1 1 309 1 298 1 136 2 165 1 139 1 69 1 100 1 216 2 171 1 129 1 95 1 
136 1 85 1 216 1 239 1 161 1 
185 1 0 1 136 2 85 1 116 1 216 2 379 1 239 1 
136 1 85 1 216 1 
350 1 309 1 136 1 335 1 165 1 139 1 69 1 216 1 59 1 171 1 129 1 74 1 346 1 239 1 
185 1 
185 1 0 1 84 1 136 2 85 1 216 2 379 1 239 1 
185 1 0 1 244 1 136 5 29 2 214 2 70 1 216 5 267 1 247 1 94 1 314 1 143 1 85 2 379 1 239 2 134 2 241 1 243 1 
138 1 67 1 
350 2 138 2 165 1 139 2 69 1 203 1 171 1 10 1 129 2 
296 1 99 1 358 1 
197 1 138 1 139 1 311 1 122 1 9 1 83 1 129 1 344 1 86 1 307 1 210 1 39 1 222 1 318 1 255 1 
350 5 309 1 165 4 139 5 138 1 257 1 69 4 166 1 152 1 171 1 342 1 10 1 129 5 377 1 345 2 196 1 
350 2 309 1 137 1 74 1 139 2 165 2 69 2 129 2 
350 1 197 1 165 1 139 2 99 1 69 1 122 1 9 1 83 1 342 1 129 2 344 1 86 1 345 1 307 1 210 1 39 1 222 1 318 1 255 1 
350 3 138 1 139 3 165 3 345 1 69 3 171 1 129 3 
350 1 309 1 74 1 139 1 165 1 69 1 129 1 
350 1 309 1 139 1 165 1 69 1 203 1 171 1 10 1 129 1 
1 1 308 1 309 1 163 1 136 1 335 1 138 1 139 4 165 3 100 1 216 1 170 1 122 1 171 2 9 1 83 1 10 1 342 1 343 1 344 1 192 1 86 1 345 1 317 1 39 1 222 1 318 1 255 1 350 3 197 1 298 1 352 1 274 1 69 3 129 4 21 1 95 1 132 1 181 2 77 1 307 1 210 1 240 1 81 1 
350 2 309 1 165 1 139 2 138 1 69 1 152 1 129 2 377 1 345 1 196 1 
185 1 350 3 1 1 298 1 309 1 136 1 165 3 139 3 69 3 100 1 216 1 171 1 233 1 10 1 342 1 129 3 95 1 345 2 240 1 
350 2 165 2 139 2 99 1 69 2 171 1 10 1 129 2 345 1 358 1 
197 1 138 1 139 1 122 1 9 1 83 1 129 1 344 1 86 1 307 1 210 1 39 1 222 1 255 1 318 1 
197 1 138 1 139 1 122 1 9 1 83 1 129 1 344 1 86 1 357 1 210 1 316 1 39 1 255 1 318 1 
308 1 213 1 163 1 30 2 164 1 99 2 8 1 343 1 192 1 89 1 110 1 296 2 126 1 352 2 274 1 71 1 21 1 235 1 132 4 181 2 209 1 358 2 133 1 25 1 
1 1 350 1 309 1 137 1 139 1 165 1 69 1 129 1 
72 1 355 1 
72 1 355 1 
156 1 230 1 
156 1 230 1 
156 1 230 1 
112 1 72 1 355 1 
112 1 72 1 355 1 
315 1 72 1 355 1 
156 1 378 1 230 1 72 2 242 1 355 2 
112 1 72 1 355 1 
198 1 72 1 355 1 
198 1 72 1 355 1 
198 1 72 1 355 1 
136 1 138 1 165 2 139 2 363 1 216 1 32 1 172 1 315 1 195 1 147 1 350 2 200 1 69 2 303 1 72 1 355 1 374 1 129 2 261 1 306 1 157 1 359 1 53 1 
148 1 185 1 256 1 136 2 216 2 32 2 303 2 72 2 355 2 248 1 11 1 105 2 250 1 378 1 157 2 253 1 195 2 53 1 147 3 
111 1 300 1 140 1 
111 1 140 1 294 1 
275 1 111 3 300 2 107 1 294 1 218 1 
275 1 111 2 300 1 107 1 158 1 294 1 
275 1 111 2 300 1 107 2 294 1 
0 1 185 2 362 1 213 1 29 1 136 5 214 1 363 1 215 2 216 5 172 1 60 1 366 2 143 2 249 1 85 1 349 3 89 1 351 1 91 1 14 1 302 1 202 2 70 1 204 1 374 1 133 1 134 1 379 1 239 4 241 3 25 1 
0 1 185 5 362 3 213 3 136 9 29 2 363 4 214 2 215 6 216 9 101 1 123 1 143 6 36 1 249 2 85 6 66 1 349 9 89 3 351 3 91 2 224 5 199 1 92 1 202 6 204 1 70 1 133 3 239 7 379 1 134 2 241 8 25 3 243 1 161 5 
0 1 185 3 362 2 213 1 29 1 136 3 214 1 363 1 215 2 216 3 366 1 143 2 249 1 89 1 349 4 91 1 351 1 14 1 302 1 202 2 133 1 239 2 134 1 241 3 25 1 243 1 
0 1 185 4 362 3 213 2 29 1 136 4 214 1 363 2 215 4 216 4 123 1 366 2 143 4 36 1 249 1 349 7 89 2 91 1 351 2 14 1 92 1 302 1 202 4 133 2 134 1 239 3 241 5 25 2 243 1 
67 1 231 1 318 1 
361 1 318 1 
271 1 
86 1 210 1 318 1 
42 1 318 1 
86 1 318 1 
86 1 276 1 210 1 231 2 318 3 13 1 
225 1 30 4 352 3 15 1 43 1 372 1 8 3 71 2 19 1 45 1 46 2 305 1 132 7 37 1 133 1 89 1 380 1 
225 1 30 4 352 3 15 1 43 1 372 1 8 3 71 2 19 1 45 1 46 2 305 1 132 7 37 1 133 1 89 1 380 1 
225 1 30 4 352 3 15 1 43 1 372 1 8 3 71 2 19 1 153 1 45 1 46 2 305 1 132 7 37 1 133 1 89 1 380 1 
278 1 213 3 163 1 3 1 30 16 8 10 190 4 343 1 192 1 37 2 292 1 348 1 89 4 295 1 351 3 225 2 372 1 43 2 352 15 15 5 353 1 259 3 71 5 19 1 45 1 21 1 305 1 46 3 23 1 132 31 181 2 133 4 25 3 380 2 
163 2 30 5 5 1 8 4 343 2 192 2 37 1 89 1 225 1 68 1 352 4 15 1 372 1 43 1 353 1 71 3 19 1 45 1 21 2 46 2 132 9 181 4 133 1 380 1 
333 1 310 1 162 1 140 1 122 1 83 1 218 1 62 1 287 1 344 1 63 1 145 1 369 1 39 1 294 1 197 1 111 2 300 1 371 1 151 2 373 1 232 1 22 2 155 1 24 1 265 1 51 1 159 1 118 1 266 1 
331 1 333 1 162 1 121 1 140 1 122 1 83 1 218 1 189 1 62 1 287 1 344 1 63 1 145 1 369 1 39 1 294 1 197 1 111 2 300 1 371 1 151 3 373 1 232 1 22 3 155 1 24 1 159 1 265 2 118 1 
331 1 333 1 121 1 140 1 122 1 83 1 218 1 287 1 344 1 63 1 369 1 39 1 294 1 197 1 111 2 300 1 371 1 151 2 373 1 232 1 22 2 24 1 159 1 265 2 118 1 
197 1 371 2 151 1 281 1 113 1 312 1 122 1 83 1 189 1 22 1 62 1 344 1 287 2 288 1 155 1 86 1 272 1 24 2 39 1 159 2 370 1 318 1 255 1 
331 1 111 2 333 1 197 1 162 1 310 1 300 1 371 1 151 1 140 1 122 1 232 1 83 1 218 1 22 1 62 1 63 1 344 1 287 1 155 1 145 1 24 1 39 1 159 1 51 1 294 1 
221 1 
0 1 185 2 1 1 332 2 136 5 139 1 281 1 100 1 339 2 58 1 102 1 143 2 344 2 249 1 144 1 251 1 106 1 252 1 349 2 109 2 255 2 350 1 197 2 150 1 298 1 70 1 152 1 154 1 78 1 211 2 362 2 28 1 309 1 29 1 214 1 31 1 216 5 169 4 312 1 122 2 83 1 85 6 86 1 88 2 39 1 318 1 234 2 129 1 95 1 379 3 134 1 48 1 241 2 381 1 52 2 
1 1 350 1 332 1 298 1 309 1 150 1 136 3 139 1 100 1 216 3 169 2 102 1 152 1 154 1 129 1 95 1 84 1 144 1 85 2 106 1 379 1 78 1 
1 1 350 1 298 1 309 1 150 1 136 2 139 1 100 1 339 1 216 2 169 3 102 1 152 1 154 1 129 1 95 1 144 1 106 1 78 1 
1 1 332 1 309 1 136 3 139 1 100 1 216 3 339 1 169 3 102 1 84 1 144 1 106 1 85 2 109 1 350 1 150 1 298 1 152 1 154 1 129 1 95 1 379 1 78 1 
185 2 0 2 1 1 332 4 335 1 136 5 139 2 100 1 339 3 57 1 58 1 59 1 102 1 143 1 144 1 106 1 346 1 109 4 350 2 298 1 150 1 69 1 70 1 152 1 154 1 115 1 74 1 78 1 211 2 309 2 362 2 29 1 165 1 120 1 214 1 216 5 169 5 171 1 84 1 176 1 85 7 88 2 40 1 234 2 129 2 95 1 379 3 134 1 241 1 48 1 52 2 
1 1 185 2 0 1 332 2 136 4 139 1 100 1 339 2 58 1 102 1 143 1 144 1 106 1 349 2 109 2 350 1 298 1 150 1 70 1 152 1 154 1 78 1 211 2 309 1 362 2 29 1 214 1 31 1 216 4 169 4 85 4 88 2 234 2 129 1 95 1 134 1 379 2 241 1 48 1 52 2 
185 1 0 1 1 1 332 2 362 2 309 1 136 4 29 1 139 1 214 1 100 1 339 2 216 4 58 1 169 4 102 1 143 1 176 1 144 1 85 4 106 1 88 2 109 2 40 1 350 1 150 1 298 1 70 1 152 1 234 2 154 1 129 1 95 1 115 1 379 2 78 1 134 1 211 2 48 1 241 1 52 2 
185 1 0 1 1 1 332 2 362 2 309 1 136 4 29 1 139 1 214 1 100 1 339 2 216 4 58 1 169 4 102 1 143 1 176 1 144 1 85 4 106 1 88 2 109 2 40 1 350 1 150 1 298 1 70 1 152 1 234 2 154 1 129 1 95 1 115 1 379 2 78 1 134 1 211 2 48 1 241 1 52 2 
185 1 0 1 1 1 332 2 309 1 136 4 29 1 139 1 214 1 100 1 339 2 6 2 216 4 169 4 102 1 188 1 143 1 144 1 85 4 106 1 87 1 349 2 109 2 40 1 41 1 350 1 150 1 298 1 70 1 152 1 154 1 129 1 95 1 379 2 78 1 134 1 211 2 48 1 241 1 183 2 52 2 
185 1 0 1 1 1 332 3 362 2 309 1 29 1 136 4 139 1 214 1 100 1 216 4 339 3 58 1 169 5 57 1 102 1 143 1 176 1 144 1 106 1 85 5 88 2 109 3 40 1 350 1 150 1 298 1 70 1 152 1 234 2 154 1 129 1 95 1 115 1 379 2 134 1 78 1 211 2 48 1 241 1 52 2 
185 1 0 1 1 1 332 3 362 2 309 1 29 1 136 4 139 1 214 1 100 1 216 4 339 3 58 1 169 5 57 1 102 1 143 1 176 1 144 1 106 1 85 5 88 2 109 3 40 1 350 1 150 1 298 1 70 1 152 1 234 2 154 1 129 1 95 1 115 1 379 2 134 1 78 1 211 2 48 1 241 1 52 2 
185 1 0 1 1 1 332 2 309 1 29 1 136 4 139 1 214 1 31 1 100 1 339 2 6 2 216 4 169 4 102 1 143 1 144 1 85 4 106 1 87 1 349 2 109 2 350 1 150 1 298 1 70 1 152 1 154 1 129 1 95 1 379 2 78 1 134 1 211 2 48 1 241 1 183 2 52 2 
308 1 163 1 30 3 138 2 99 1 8 2 343 1 192 1 37 1 67 1 89 1 296 1 43 1 372 1 352 3 274 1 71 2 19 1 45 1 21 1 46 1 235 1 132 6 181 2 358 1 133 1 
308 1 213 2 163 2 3 1 138 1 30 8 99 11 8 2 187 1 35 1 190 3 343 2 192 2 177 1 317 1 89 2 296 11 320 1 351 2 15 1 352 6 274 2 71 1 259 3 21 2 23 1 328 1 356 1 132 14 181 4 358 4 133 1 25 1 
308 1 163 1 138 1 139 2 165 1 30 1 311 1 122 1 9 1 269 1 340 1 83 1 342 1 343 1 344 1 192 1 177 1 86 1 345 1 39 1 317 1 222 1 318 1 255 1 350 1 197 1 299 1 352 1 274 1 69 1 129 2 21 1 356 1 132 2 181 2 307 1 358 1 210 1 
331 1 138 2 139 3 99 7 337 1 8 8 9 2 342 1 343 3 344 3 192 3 345 1 293 2 255 1 350 1 296 7 197 3 351 2 352 10 15 4 69 1 71 4 19 1 354 1 21 3 356 1 75 1 77 2 307 2 358 7 210 2 25 2 308 3 213 2 163 3 165 1 30 10 122 3 83 2 313 2 177 1 37 1 86 2 317 1 39 2 89 3 222 2 318 2 319 2 43 1 372 1 274 3 325 2 45 1 129 3 46 1 132 20 181 6 133 3 
331 1 308 2 163 2 139 1 165 1 30 1 281 1 122 8 312 1 283 1 83 2 343 2 219 1 344 7 192 2 177 1 86 2 345 1 39 2 317 1 318 3 255 2 350 1 197 8 321 1 227 1 301 2 352 1 69 1 274 2 129 1 21 2 235 1 207 1 132 2 181 4 330 1 117 1 266 1 
308 1 213 1 163 1 165 1 139 1 30 1 99 1 8 1 171 1 10 1 343 1 192 1 194 1 89 1 296 1 350 1 351 1 352 2 274 1 69 1 71 1 129 1 21 1 356 1 132 3 181 2 358 1 133 1 25 1 
296 1 308 1 213 1 163 1 30 2 15 1 99 1 274 1 8 1 21 1 235 1 343 1 192 1 132 2 181 2 209 1 358 1 89 1 
296 1 308 1 163 1 126 1 99 1 352 2 274 1 8 1 71 1 21 1 235 1 343 1 192 1 132 2 181 2 358 1 133 1 25 1 
308 1 213 1 163 1 30 2 99 2 8 2 343 1 192 1 89 1 296 2 351 1 15 1 352 2 274 1 71 1 21 1 235 1 132 4 181 2 358 2 133 1 25 1 
296 1 308 1 213 1 163 1 30 2 15 1 99 1 274 1 8 1 21 1 343 1 192 1 132 2 207 1 181 2 209 1 358 1 89 1 
296 1 308 1 163 1 126 1 99 1 352 2 274 1 8 1 71 1 21 1 343 1 192 1 132 2 207 1 181 2 358 1 133 1 25 1 
308 1 213 1 163 1 30 2 99 2 8 2 343 1 192 1 89 1 296 2 351 1 15 1 352 2 274 1 71 1 21 1 207 1 132 4 181 2 358 2 133 1 25 1 
308 1 213 1 163 1 30 2 99 2 8 2 343 1 192 1 89 1 296 2 351 1 15 1 352 2 274 1 71 1 21 1 132 4 181 2 358 2 133 1 25 1 
308 1 163 1 30 1 138 1 139 1 122 1 9 1 83 1 343 1 344 1 192 1 177 1 86 1 39 1 317 1 222 1 255 1 318 1 197 1 352 1 274 1 129 1 21 1 132 2 77 1 181 2 307 1 210 1 
308 1 163 1 30 1 138 1 139 1 122 1 9 1 83 1 343 1 344 1 192 1 177 1 86 1 316 1 39 1 317 1 255 1 318 1 125 1 197 1 352 1 274 1 129 1 21 1 132 2 181 2 357 1 210 1 
308 1 213 1 163 1 30 2 99 2 8 2 343 1 192 1 89 1 296 2 351 1 15 1 352 2 274 1 71 1 21 1 356 1 132 4 181 2 358 2 133 1 25 1 
308 1 213 1 163 1 30 2 139 1 99 2 8 2 122 1 9 1 83 1 343 1 344 1 192 1 86 1 89 1 39 1 222 1 318 1 296 2 319 1 197 1 351 1 352 2 15 1 274 1 71 1 129 1 21 1 132 4 77 1 181 2 358 2 307 1 133 1 210 1 25 1 266 1 
308 1 213 1 163 1 165 1 139 1 30 2 99 1 8 1 141 1 171 1 10 1 343 1 192 1 89 1 350 1 296 1 351 1 352 1 15 1 274 1 69 1 129 1 21 1 356 1 132 3 181 2 358 1 133 1 25 1 
213 3 163 2 336 2 3 1 30 9 280 1 8 6 217 2 190 2 343 2 192 2 65 1 38 1 89 3 351 3 68 1 352 10 15 3 71 3 259 1 21 2 23 1 132 19 76 1 181 4 80 1 133 3 49 1 25 3 135 1 
213 3 163 3 336 4 30 14 3 2 280 2 8 4 217 1 285 1 343 3 190 2 192 3 290 1 38 1 89 3 351 3 15 2 352 12 68 1 353 2 71 2 259 2 18 1 21 3 132 26 76 1 181 6 133 2 80 2 25 2 182 1 135 1 98 1 160 1 
2 1 3 3 336 4 280 2 8 8 285 1 343 3 190 4 192 3 65 1 290 1 351 4 15 4 352 21 68 1 353 1 259 3 71 4 18 1 19 1 21 3 23 1 76 1 80 1 25 4 160 1 213 4 163 3 30 20 217 1 37 1 38 1 89 5 372 1 43 1 45 1 46 1 132 41 181 6 133 5 182 1 98 1 135 1 
2 1 213 4 163 4 336 4 3 3 30 20 280 2 8 7 217 1 285 1 190 4 343 4 192 4 65 1 37 1 290 1 38 1 89 5 351 4 43 1 372 1 68 1 352 18 15 3 353 2 71 4 259 3 18 1 19 1 45 1 21 4 46 1 23 1 132 38 76 1 181 8 80 1 133 4 25 3 182 1 135 1 98 1 160 1 
213 7 163 2 336 4 3 2 30 27 280 1 8 14 217 1 285 1 190 4 343 2 192 2 37 1 290 1 38 1 89 8 351 7 43 1 372 1 68 1 352 25 15 7 353 1 71 7 259 4 18 1 19 1 45 1 21 2 46 1 23 2 328 2 132 52 76 1 181 4 80 1 133 8 25 7 182 1 135 1 98 1 160 1 
148 1 250 1 96 1 378 1 157 1 32 1 303 1 195 1 72 1 355 1 
315 1 306 1 
149 1 186 1 157 1 32 1 103 1 303 1 195 1 72 1 355 1 
191 1 112 1 
198 1 205 1 242 1 
148 1 185 1 256 1 136 1 216 1 32 1 303 1 72 1 355 1 248 1 11 1 105 1 250 1 378 1 157 1 195 1 53 1 147 2 
148 1 185 1 256 1 136 1 216 1 32 1 303 1 72 1 355 1 248 1 11 1 105 1 250 1 378 1 157 1 195 1 53 1 147 2 
148 1 185 1 256 1 136 1 216 1 32 1 303 1 72 1 355 1 248 1 11 1 105 1 250 1 378 1 157 1 195 1 53 1 147 2 
191 1 112 1 242 1 
191 1 112 1 242 1 
198 1 205 1 
198 1 205 1 242 1 
200 1 261 1 
136 1 138 1 139 2 165 2 363 1 216 1 32 1 172 1 11 1 105 1 315 1 195 1 147 1 350 2 273 1 200 1 69 2 303 1 72 1 355 1 374 1 129 2 261 1 306 1 157 1 239 1 359 1 
308 1 163 1 245 1 139 2 30 1 122 2 83 1 174 1 343 1 344 2 12 1 192 1 177 1 86 1 39 1 317 1 318 1 350 2 197 2 227 1 301 2 352 1 274 1 129 2 21 1 114 1 356 1 132 2 181 2 117 1 212 1 
331 1 111 2 197 2 333 1 162 1 300 1 371 1 140 1 122 2 324 1 83 1 218 1 304 1 344 2 63 1 39 1 294 1 266 1 360 1 
331 1 111 2 197 1 333 1 162 1 300 1 371 1 140 1 122 1 83 1 218 1 142 1 344 1 63 1 39 1 294 1 360 1 
197 1 371 1 281 1 122 1 312 1 83 1 304 1 173 1 344 1 288 1 86 1 39 1 318 1 255 1 
331 1 111 2 197 1 333 1 162 1 300 1 371 1 140 1 122 1 324 1 83 1 218 1 304 1 344 1 63 1 39 1 294 1 360 1 
297 1 
185 1 0 1 143 1 244 1 241 1 67 1 247 1 
185 2 0 1 362 1 29 1 136 1 214 1 216 1 58 1 143 1 85 1 349 1 88 1 70 1 234 1 134 1 379 1 241 1 
0 2 185 8 244 1 55 2 136 5 338 1 247 1 143 8 344 3 249 2 251 1 291 2 349 12 255 1 13 1 197 3 351 2 298 2 201 2 258 2 202 6 70 4 208 1 210 3 25 2 266 1 361 3 362 6 213 2 29 4 214 4 215 6 82 1 168 1 216 5 122 3 34 2 83 4 313 2 85 5 86 3 39 3 89 2 318 10 42 2 93 2 231 2 375 1 329 2 238 2 134 4 379 3 133 2 241 9 
185 5 0 2 362 3 213 2 136 1 29 2 3 1 214 2 215 5 216 1 285 1 190 1 143 5 249 1 251 1 85 1 291 1 290 1 349 6 89 2 351 2 226 1 201 2 202 5 70 2 259 1 237 1 379 1 134 2 133 2 241 8 25 2 182 1 98 1 160 1 
309 1 29 1 136 1 335 1 139 1 165 1 214 1 216 1 59 1 171 1 143 2 37 1 291 1 346 1 89 2 350 1 43 1 201 2 69 1 70 1 19 1 129 1 115 1 74 1 134 1 133 1 264 1 241 2 
0 1 185 1 244 1 29 1 214 1 70 1 247 1 143 1 134 1 241 1 
185 5 351 2 213 2 362 5 201 2 215 5 202 5 313 1 143 5 291 1 133 2 241 5 25 2 89 2 349 10 
185 1 0 1 136 1 85 1 216 1 379 1 
28 1 29 2 136 3 214 2 281 1 167 1 168 2 216 3 122 4 312 1 83 1 284 1 143 2 344 4 249 2 85 4 251 2 86 1 252 1 39 1 318 1 255 2 197 4 70 1 375 1 134 2 379 2 241 2 243 1 
308 1 163 1 335 1 138 1 139 3 165 2 122 1 170 1 171 2 9 1 83 1 343 1 344 1 192 1 86 1 317 1 39 1 222 1 255 1 318 1 350 2 197 1 352 1 69 2 274 1 129 3 21 1 132 1 181 2 77 1 307 1 210 1 
0 2 185 4 362 2 29 1 214 1 215 2 202 2 70 1 46 1 143 2 249 1 251 1 134 1 241 1 349 4 
32 1 195 1 382 1 
32 1 195 1 382 1 
148 1 263 1 200 1 32 1 195 1 
32 1 195 1 382 1 
32 1 195 1 179 1 
32 1 195 1 179 1 
32 1 195 1 179 1 
32 1 195 1 
72 1 355 1 
163 2 30 4 352 4 15 1 372 1 43 1 353 1 8 3 71 2 19 1 45 1 21 2 46 1 343 2 192 2 132 8 37 1 181 4 133 1 89 1 
30 3 352 3 372 1 43 1 71 2 8 2 19 1 45 1 46 1 132 6 37 1 133 1 67 1 89 1 
351 1 213 1 163 1 30 2 352 2 15 1 71 1 8 2 21 1 343 1 192 1 132 4 181 2 133 1 368 1 25 1 89 1 
351 1 213 1 3 1 30 3 352 4 15 1 71 1 259 1 8 2 190 2 23 1 132 7 133 1 25 1 89 1 
213 2 163 2 30 11 8 9 190 2 343 2 192 2 37 2 89 3 351 2 320 1 43 2 372 1 15 4 352 12 353 2 259 2 71 5 19 1 45 1 21 2 46 1 73 1 23 1 132 23 328 1 181 4 133 3 25 2 
190 1 132 1 352 1 
132 1 30 1 259 1 
351 1 213 1 163 1 30 3 352 3 15 1 8 3 71 2 313 1 21 1 343 1 192 1 132 6 181 2 133 1 368 1 25 1 89 1 
213 2 163 1 3 1 30 6 8 2 285 1 190 1 343 1 192 1 290 1 89 2 351 2 15 1 352 6 68 1 259 1 71 1 21 1 132 12 181 2 133 2 25 2 182 1 98 1 160 1 
30 3 352 3 43 1 15 1 71 1 8 2 19 1 132 6 37 1 133 1 89 1 
163 1 30 1 15 1 43 1 352 2 372 1 353 1 8 2 71 1 45 1 21 1 73 1 343 1 192 1 132 3 37 1 181 2 
163 1 30 5 68 1 43 2 15 2 352 5 71 3 8 5 19 1 21 1 343 1 192 1 132 10 37 2 181 2 133 2 264 1 89 2 
213 1 163 1 30 2 68 1 15 1 8 1 21 1 343 1 192 1 132 2 181 2 89 1 
351 1 213 1 163 1 30 2 352 2 68 1 15 1 71 1 8 2 21 1 343 1 192 1 132 4 181 2 133 1 25 1 89 1 
163 3 30 1 352 2 68 1 43 1 15 1 353 1 71 1 8 2 21 3 73 1 343 3 192 3 132 3 65 1 37 1 181 6 
213 3 163 5 3 1 30 16 8 12 190 4 343 5 192 5 37 3 65 1 292 1 368 1 348 1 89 5 295 1 351 3 43 3 372 1 352 18 68 1 15 5 353 2 259 3 71 7 19 2 45 1 21 5 46 1 73 1 23 1 132 34 181 10 133 5 25 3 
163 1 30 4 3 1 43 1 372 1 68 1 352 4 8 2 71 2 259 1 19 1 45 1 21 1 285 1 46 1 343 1 190 1 192 1 132 8 37 1 181 2 133 1 89 1 
213 1 163 2 3 1 30 6 8 3 285 1 190 2 343 2 192 2 37 1 368 1 89 2 351 1 43 1 372 1 352 5 68 1 15 1 71 2 259 1 19 1 45 1 21 2 46 1 23 1 132 11 181 4 133 1 
213 2 163 3 3 1 30 9 8 4 285 1 190 1 343 3 192 3 37 1 290 1 368 1 89 3 351 2 43 1 372 1 15 1 352 10 68 1 353 1 259 1 71 3 19 1 45 1 21 3 46 1 132 19 181 6 133 3 25 2 182 1 98 1 160 1 
213 2 163 3 3 1 30 10 8 5 285 1 190 1 343 3 192 3 37 1 290 1 368 1 89 3 351 2 43 1 372 1 15 2 352 7 68 1 353 1 259 1 71 3 19 1 45 1 21 3 46 1 132 17 181 6 133 2 25 1 182 1 98 1 160 1 
163 1 30 4 3 1 43 1 372 1 68 1 352 4 8 2 71 2 259 1 19 1 45 1 21 1 285 1 46 1 343 1 190 1 192 1 132 8 37 1 181 2 133 1 89 1 
213 2 163 1 3 1 30 6 8 2 285 1 190 1 343 1 192 1 290 1 89 2 351 2 15 1 352 6 68 1 259 1 71 1 21 1 132 12 181 2 133 2 25 2 182 1 98 1 160 1 
213 2 163 4 3 1 30 10 8 5 285 1 190 1 343 4 192 4 37 1 290 1 368 1 89 3 351 2 43 1 372 1 15 2 352 8 68 1 353 2 259 1 71 3 19 1 45 1 21 4 46 1 132 18 181 8 133 2 25 1 182 1 98 1 160 1 
213 3 163 4 3 1 30 9 8 6 285 1 190 1 343 4 192 4 65 1 290 1 89 3 351 3 15 3 352 7 68 1 353 2 259 1 71 3 21 4 132 16 181 8 133 2 25 2 182 1 98 1 160 1 
30 3 352 4 372 1 43 3 15 3 71 3 8 6 19 1 45 2 132 7 37 3 133 1 89 1 
213 2 163 4 3 1 30 10 8 4 285 1 190 1 343 4 192 4 37 1 65 1 290 1 89 3 351 2 43 1 372 1 15 1 352 8 68 1 353 2 259 1 71 3 19 1 45 1 21 4 46 1 132 18 181 8 133 2 25 1 182 1 98 1 160 1 
350 1 309 1 138 1 139 1 377 1 220 1 152 1 129 1 196 1 
350 1 309 1 138 1 139 1 152 1 268 1 282 1 341 1 129 1 377 1 236 1 220 1 178 1 196 1 
197 1 344 1 86 1 281 1 312 1 67 1 122 1 39 1 83 1 318 1 255 1 
350 1 197 1 138 1 165 1 139 2 69 1 122 1 9 1 83 1 129 2 344 1 86 1 345 1 307 1 210 1 39 1 318 1 255 1 
1 1 309 1 138 1 139 2 165 1 100 1 168 1 122 1 9 1 83 1 344 1 86 2 345 1 39 1 318 3 350 2 197 1 42 1 69 2 129 2 329 1 307 1 210 2 
1 1 309 1 138 1 139 2 165 1 100 1 168 1 122 2 9 1 83 1 344 2 86 2 345 1 39 1 318 3 350 2 197 2 42 1 69 2 129 2 131 1 329 1 357 1 210 2 
361 1 0 1 185 1 136 2 279 1 168 1 216 2 122 3 83 1 344 3 85 1 86 1 39 1 318 4 255 1 197 3 42 1 298 1 231 1 206 1 131 1 329 1 210 1 
185 1 0 1 361 1 197 3 42 1 298 1 136 2 216 2 168 1 122 3 231 1 83 1 344 3 131 1 85 1 86 1 329 1 238 1 210 1 39 1 255 1 318 4 
197 1 344 1 219 1 122 1 39 1 83 1 
331 1 197 7 321 1 301 1 4 1 122 7 283 1 270 1 83 3 219 1 344 6 86 2 210 1 330 1 124 1 117 1 39 2 266 1 255 2 13 1 318 3 
139 2 245 1 138 2 99 1 8 2 9 1 343 2 344 1 192 2 345 1 293 1 350 1 296 1 197 1 352 3 69 1 71 2 19 1 21 2 356 1 77 1 358 1 307 1 210 1 266 1 308 2 163 2 165 1 30 3 122 1 83 1 86 1 37 1 39 1 89 1 222 1 318 1 319 1 372 1 43 1 274 2 129 2 45 1 46 1 132 6 181 4 133 1 
185 1 0 1 361 1 244 1 29 2 136 3 214 2 216 3 122 1 247 1 34 1 143 1 344 1 85 2 255 1 318 2 197 1 298 1 258 1 93 1 70 2 231 1 375 1 238 1 134 2 239 1 379 1 241 1 
197 2 122 2 231 1 83 2 219 1 344 2 208 1 86 1 210 1 39 1 266 1 13 1 318 2 
197 4 281 1 122 4 312 1 128 1 83 1 344 4 131 1 86 1 39 1 255 1 266 1 318 1 
197 2 4 1 168 1 122 2 83 2 344 2 75 1 86 1 347 1 79 1 210 1 124 1 39 1 318 1 
111 1 333 1 197 1 344 1 140 1 122 1 39 1 294 1 83 1 255 1 
331 1 197 2 122 2 83 1 344 2 86 1 117 1 39 1 212 1 266 1 318 1 
197 5 321 1 281 1 168 1 312 1 122 5 128 1 83 2 344 4 86 2 330 1 117 1 39 2 255 1 266 1 318 3 
197 5 281 1 168 1 312 1 122 5 128 1 83 2 344 4 130 1 86 2 330 1 117 1 39 2 255 1 266 1 318 3 
350 1 197 1 138 1 165 1 139 2 69 1 122 1 9 1 83 1 129 2 344 1 86 1 345 1 357 1 210 1 39 1 318 1 255 1 
197 1 4 1 168 1 122 1 270 1 83 2 344 1 86 1 210 1 124 1 39 1 13 1 318 1 
27 1 350 1 139 1 33 1 174 1 129 1 64 1 12 1 114 1 
286 1 64 1 17 1 
27 1 64 1 334 1 138 1 33 1 
185 1 0 1 1 1 27 2 298 1 309 1 136 2 334 2 138 1 100 1 216 2 17 1 33 2 95 1 286 1 64 1 239 1 240 1 277 1 
67 1 373 1 369 1 118 1 
22 1 62 1 155 1 151 1 373 1 369 1 118 1 
22 1 287 1 159 1 
151 3 323 1 365 2 373 1 262 1 22 3 62 1 155 1 51 1 369 1 118 1 223 1 
22 2 62 1 376 1 155 1 151 2 373 1 369 1 265 1 118 1 
111 1 300 1 151 1 140 1 373 1 22 1 61 1 62 1 326 1 155 1 51 1 
22 1 62 1 155 1 151 1 373 1 51 1 118 1 
22 1 62 1 155 1 151 1 369 1 51 1 118 2 
151 2 229 1 373 1 22 2 175 1 62 2 155 2 50 1 51 1 118 1 
151 3 364 1 373 2 20 1 22 3 61 1 62 1 155 1 327 1 369 1 51 1 265 2 118 1 
111 2 300 1 151 2 140 1 373 1 218 1 22 2 62 1 155 1 289 1 369 1 51 1 265 1 118 1 294 1 
151 4 373 2 260 1 22 4 61 1 62 2 376 1 155 2 327 1 369 1 51 1 265 2 118 1 
22 1 62 1 155 1 151 1 373 1 369 1 51 1 118 1 
151 4 323 1 16 1 365 1 373 3 262 1 22 4 61 1 62 1 155 1 327 1 369 2 265 2 118 2 
151 2 56 1 127 1 373 1 22 2 62 1 155 1 47 1 51 1 265 1 369 1 118 1 
151 3 323 1 365 2 373 1 262 2 180 1 22 3 62 1 155 1 51 1 369 1 118 1 
246 1 373 2 184 2 26 1 
22 1 62 1 155 1 151 1 51 1 254 1 
22 2 62 1 155 1 151 2 364 1 373 1 369 1 265 1 51 1 118 1 
54 1 
22 1 62 1 155 1 151 1 373 1 369 1 51 1 118 1 
151 3 364 1 365 1 373 1 22 3 62 1 155 1 265 1 51 1 369 1 118 1 
61 1 327 1 16 1 373 1 
373 1 118 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 360 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
37 1 206 1 255 2 212 1 145 1 216 2 99 9 119 5 120 2 237 2 55 2 174 1 262 2 149 6 175 1 58 1 294 9 313 1 372 2 177 1 267 4 90 1 65 1 66 1 154 1 158 1 227 3 230 1 
37 1 206 1 255 2 212 1 145 1 216 2 99 9 119 5 120 2 237 2 55 2 174 1 262 2 149 6 175 1 58 1 294 9 313 1 372 2 177 1 267 4 90 1 65 1 66 1 154 1 158 1 227 3 230 1 
37 1 206 1 255 2 212 1 145 1 216 2 99 10 119 6 120 2 237 2 55 2 174 1 262 2 149 7 175 1 58 1 294 10 313 1 372 2 177 1 267 5 90 1 65 1 66 1 154 1 158 1 227 4 230 1 
37 1 206 1 255 2 212 1 145 1 216 2 99 7 119 4 120 1 237 2 55 2 174 1 262 2 149 4 58 1 294 7 313 1 372 2 177 1 267 3 90 1 65 1 66 1 154 1 158 1 227 2 230 1 
237 1 55 1 262 1 149 3 175 1 294 4 313 1 372 1 267 2 65 1 66 1 216 1 99 4 119 3 158 1 227 1 230 1 120 2 
237 1 55 1 262 1 69 1 294 2 372 1 255 1 212 1 90 1 65 1 66 1 99 2 93 1 119 1 381 1 158 1 
237 2 55 2 174 1 149 1 294 3 255 1 267 1 65 1 66 1 99 3 119 2 158 1 227 1 
302 1 255 1 145 1 216 1 99 9 119 5 120 2 237 2 174 1 56 1 55 2 262 1 149 7 175 1 294 9 313 1 372 1 267 4 65 1 66 1 154 1 158 1 227 3 230 1 
302 1 255 1 145 1 216 1 99 9 119 5 120 2 237 2 174 1 56 1 55 2 262 1 149 7 175 1 294 9 313 1 372 1 267 4 65 1 66 1 154 1 158 1 227 3 230 1 
326 1 178 1 340 1 
326 1 334 1 322 2 
247 2 261 1 68 1 188 2 97 2 33 2 248 2 252 2 
68 1 188 3 40 2 252 2 333 1 71 2 253 1 189 1 139 1 335 2 76 1 254 1 211 1 116 1 97 2 235 1 365 1 366 1 80 1 261 1 196 2 242 1 22 1 310 1 81 2 317 1 87 1 125 1 64 1 247 3 200 1 33 2 248 2 202 1 182 1 231 1 161 1 
247 1 261 1 188 1 97 1 23 1 33 1 248 1 252 1 160 1 192 1 
326 1 328 1 261 1 188 2 23 1 252 1 75 1 192 1 233 1 88 1 247 2 97 2 359 1 340 1 33 1 248 1 131 1 160 2 
326 1 261 1 188 2 23 1 252 2 355 1 75 1 29 1 192 1 233 1 247 2 340 1 97 2 359 1 33 2 248 2 131 1 160 2 
78 1 167 1 355 1 29 1 183 1 
326 1 301 1 186 1 340 1 78 1 355 2 29 2 183 1 
78 1 355 1 29 1 
261 1 188 1 23 1 252 1 355 1 29 1 192 1 233 1 247 1 97 1 33 1 248 1 183 1 160 1 
326 1 
326 1 186 1 340 1 78 1 243 1 355 2 29 2 183 1 
326 1 16 1 186 1 187 1 82 2 70 1 355 5 44 1 29 5 11 2 31 1 179 1 340 1 78 2 300 1 92 1 195 2 183 2 260 1 
178 1 68 1 
68 2 188 2 252 1 106 1 247 2 97 2 33 1 248 1 321 1 
325 1 274 1 42 1 
196 1 68 1 242 1 188 1 40 1 253 1 335 1 76 1 254 1 317 1 347 1 125 1 247 1 200 1 235 1 182 1 
325 1 185 1 196 1 242 1 188 2 40 1 253 1 335 1 254 1 76 1 317 1 125 1 247 2 97 1 200 1 33 1 248 1 235 1 182 1 21 1 
185 1 247 3 68 1 188 3 97 3 33 3 252 1 248 3 
247 1 188 1 97 1 23 1 33 1 248 1 160 1 
247 1 188 1 97 1 33 1 248 1 252 1 321 1 160 1 106 1 
185 1 188 2 252 1 75 1 307 1 106 1 247 2 97 2 359 1 33 2 258 1 131 1 248 2 160 1 21 1 
88 1 107 1 247 2 185 1 68 1 188 2 97 2 33 1 248 1 
185 1 188 1 75 1 247 1 97 1 359 1 33 1 258 1 248 1 360 1 131 1 160 1 21 1 
325 1 274 1 185 1 188 2 252 1 106 1 247 2 97 2 33 2 248 2 
196 1 68 1 242 1 188 1 40 1 253 1 335 1 76 1 254 1 317 1 125 1 247 1 200 1 235 1 182 1 
121 1 196 1 68 1 188 1 40 1 253 1 335 1 76 1 254 1 142 1 125 1 247 1 200 1 235 1 182 1 
325 2 36 1 274 2 162 1 42 2 71 4 354 1 189 2 139 1 279 1 213 1 48 1 366 1 290 1 310 2 81 2 87 1 126 1 32 1 129 1 202 1 380 1 231 1 161 1 
247 1 303 1 188 1 97 1 33 1 131 1 248 1 160 1 
185 2 68 1 188 5 252 1 356 1 106 1 88 1 107 1 247 5 97 5 339 1 33 4 248 4 21 1 
247 2 303 1 188 2 97 2 23 1 33 2 248 2 160 1 
59 1 176 1 
59 1 176 1 
54 1 239 1 
54 1 239 1 
54 1 239 1 
184 1 59 1 176 1 
184 1 59 1 176 1 
12 1 59 1 176 1 
54 1 137 1 239 1 168 1 59 2 176 2 
184 1 59 1 176 1 
6 1 59 1 176 1 
6 1 59 1 176 1 
6 1 59 1 176 1 
326 1 244 1 59 2 176 2 208 3 355 2 190 1 357 1 29 2 85 2 318 1 62 1 282 1 349 2 319 2 47 2 168 1 378 1 20 2 
68 1 188 2 332 1 208 1 355 1 77 1 97 2 47 1 217 1 20 1 171 1 50 1 59 1 176 1 29 1 85 1 318 1 12 1 247 2 349 1 33 2 248 2 269 1 250 1 
262 1 216 1 372 1 
262 1 93 1 372 1 
262 3 292 1 216 2 209 1 93 1 315 1 
262 2 292 1 216 1 8 1 93 1 315 1 
262 2 292 1 216 1 93 1 315 2 
326 2 327 1 16 3 186 1 334 1 354 1 355 5 336 1 279 1 77 1 257 2 256 2 78 1 340 1 218 1 4 1 171 1 195 1 260 2 50 1 219 1 290 1 82 1 60 2 29 5 84 1 11 1 32 1 128 1 300 1 322 3 183 4 
326 5 327 2 251 1 16 8 207 5 186 1 334 3 354 3 355 9 44 1 336 3 279 3 257 6 78 6 340 1 167 5 218 1 362 1 195 2 260 6 50 4 238 1 57 1 290 3 82 2 60 6 29 9 11 2 32 3 128 2 201 1 300 1 322 9 183 7 229 1 
326 3 327 1 16 3 334 2 354 1 355 3 44 1 336 1 279 1 256 1 257 2 340 1 4 1 195 1 50 1 260 2 290 1 82 1 60 2 29 3 84 1 11 1 32 1 128 1 183 2 322 4 
326 4 327 1 251 1 16 5 334 3 354 2 355 4 44 1 336 2 279 2 257 4 256 2 340 1 4 1 362 1 195 1 50 2 260 4 290 2 82 1 60 4 29 4 84 1 11 1 32 2 128 1 201 1 322 7 183 3 
178 1 200 1 293 1 
200 1 132 1 
45 1 
125 1 200 1 
125 1 200 3 67 1 293 2 253 1 198 1 
125 1 200 1 253 1 
200 1 278 1 
324 1 310 3 162 3 353 1 7 1 71 7 43 1 189 4 358 1 96 1 279 1 86 1 374 1 32 1 48 2 53 1 136 2 
324 1 310 3 162 3 353 1 7 1 71 7 43 1 189 4 358 1 96 1 279 1 86 1 374 1 32 1 48 2 53 1 136 2 
324 1 310 3 162 3 353 1 7 1 71 7 43 1 189 4 358 1 96 1 279 1 86 1 374 1 32 1 48 2 228 1 53 1 136 2 
324 1 38 1 162 10 353 2 138 1 71 31 354 3 139 1 189 16 43 5 336 3 358 2 96 2 191 4 279 4 144 1 284 1 48 5 53 1 290 3 310 15 81 2 7 1 86 2 298 1 374 1 246 1 32 4 13 1 156 3 202 1 231 1 136 3 161 1 
324 1 162 4 310 4 81 4 7 1 353 1 138 1 71 9 43 1 189 5 139 2 358 1 96 1 279 1 86 1 32 1 166 1 285 1 202 2 48 3 53 1 136 2 161 2 231 2 
205 1 39 1 40 1 209 1 19 1 335 1 255 1 216 1 99 2 235 1 119 1 52 1 237 1 55 1 196 1 101 1 262 2 149 1 294 2 27 1 372 1 61 1 10 1 65 1 66 1 182 1 93 1 133 1 158 1 204 1 
205 1 273 1 39 1 40 1 209 1 73 1 335 1 255 1 216 1 99 3 235 1 119 1 52 1 237 1 55 1 196 1 101 1 262 2 149 2 294 3 27 1 372 1 61 1 10 1 223 1 65 1 182 1 93 1 133 1 158 1 
205 1 273 1 39 1 40 1 209 1 73 1 335 1 255 1 216 1 99 2 235 1 119 1 196 1 101 1 262 2 149 2 294 2 27 1 372 1 10 1 65 1 182 1 93 1 133 1 158 1 
205 2 39 2 40 1 331 1 335 1 76 1 255 2 146 1 99 1 235 1 237 1 55 1 196 1 241 1 294 1 221 1 10 2 223 1 125 1 127 1 180 1 200 1 182 1 
205 1 39 1 40 1 209 1 73 1 335 1 255 1 216 1 99 1 235 1 52 1 237 1 55 1 196 1 101 1 262 2 294 1 27 1 372 1 61 1 10 1 66 1 182 1 93 1 133 1 204 1 
265 1 
326 1 327 1 94 1 328 1 186 3 188 1 40 2 334 2 335 2 97 1 3 2 234 1 235 1 195 1 196 2 102 1 103 2 104 1 150 2 105 2 345 1 11 1 247 1 200 1 300 1 159 2 160 1 16 2 163 1 355 4 75 1 76 2 78 6 359 1 361 2 260 2 122 1 369 1 25 1 82 1 29 4 125 1 88 1 127 1 180 1 376 1 320 1 91 2 131 1 270 1 182 1 322 2 272 2 
328 1 186 1 102 1 122 1 188 1 104 1 243 1 355 2 75 1 345 1 29 2 88 1 247 1 78 2 97 1 359 1 3 1 131 1 270 1 160 1 
328 1 102 1 103 1 122 1 188 1 104 1 355 1 75 1 345 1 29 1 88 1 247 1 97 1 359 1 91 1 131 1 270 1 160 1 
328 1 186 1 188 1 355 2 75 1 359 1 97 1 78 2 3 1 102 1 122 1 103 1 104 1 243 1 150 1 345 1 29 2 88 1 247 1 131 1 91 1 270 1 160 1 
326 2 328 1 186 3 188 2 334 2 192 1 233 1 97 2 340 2 3 4 195 1 102 1 103 3 104 1 243 1 150 4 105 2 345 1 11 1 247 2 155 1 248 1 300 1 160 2 159 2 16 1 163 1 252 1 355 4 75 1 359 1 78 7 361 2 260 1 367 1 261 1 263 1 122 1 23 1 82 1 371 1 29 4 88 1 376 1 33 1 91 3 131 1 270 1 135 1 272 2 
326 2 328 1 16 1 186 2 188 1 163 1 334 2 355 3 75 1 340 1 78 4 97 1 359 1 3 2 361 2 195 1 260 1 102 1 103 2 122 1 104 1 150 2 105 2 82 1 345 1 29 3 11 1 88 1 247 1 376 1 320 1 91 2 131 1 300 1 270 1 322 2 159 2 160 1 272 2 
326 1 328 1 16 1 186 2 188 1 163 1 334 2 355 3 75 1 340 1 78 4 359 1 97 1 3 2 361 2 195 1 260 1 367 1 263 1 102 1 103 2 122 1 104 1 150 2 105 2 82 1 345 1 371 1 29 3 11 1 88 1 247 1 376 1 91 2 131 1 270 1 300 1 159 2 160 1 272 2 
326 1 328 1 16 1 186 2 188 1 163 1 334 2 355 3 75 1 340 1 78 4 359 1 97 1 3 2 361 2 195 1 260 1 367 1 263 1 102 1 103 2 122 1 104 1 150 2 105 2 82 1 345 1 371 1 29 3 11 1 88 1 247 1 376 1 91 2 131 1 270 1 300 1 159 2 160 1 272 2 
326 1 275 2 328 1 16 1 186 2 188 1 355 3 75 1 280 1 143 1 340 1 78 4 359 1 97 1 3 2 195 1 260 1 100 2 367 1 102 1 103 2 122 1 104 1 150 2 105 2 82 1 345 1 29 3 316 1 11 1 88 1 247 1 376 1 91 2 131 1 270 1 300 1 322 2 160 1 272 2 
326 1 328 1 16 1 186 2 188 1 163 1 334 2 355 3 75 1 340 1 359 1 97 1 78 5 3 3 361 2 195 1 260 1 367 1 263 1 102 1 122 1 103 3 104 1 150 3 105 2 82 1 345 1 371 1 29 3 11 1 88 1 247 1 376 1 131 1 91 3 300 1 270 1 135 1 159 2 160 1 272 2 
326 1 328 1 16 1 186 2 188 1 163 1 334 2 355 3 75 1 340 1 359 1 97 1 78 5 3 3 361 2 195 1 260 1 367 1 263 1 102 1 122 1 103 3 104 1 150 3 105 2 82 1 345 1 371 1 29 3 11 1 88 1 247 1 376 1 131 1 91 3 300 1 270 1 135 1 159 2 160 1 272 2 
326 1 275 2 328 1 16 1 186 2 188 1 355 3 75 1 340 1 78 4 97 1 359 1 3 2 195 1 260 1 100 2 102 1 103 2 122 1 104 1 150 2 105 2 82 1 345 1 29 3 316 1 11 1 88 1 247 1 376 1 320 1 91 2 131 1 300 1 270 1 322 2 160 1 272 2 
325 1 324 1 274 1 68 2 162 2 42 1 71 6 139 1 189 3 358 1 279 1 48 2 53 1 366 1 310 3 81 2 7 1 86 1 87 1 178 1 126 1 32 1 202 1 231 1 161 1 136 1 
325 11 38 1 274 4 68 1 162 2 42 11 71 14 354 2 43 1 139 2 189 8 74 1 336 2 191 3 279 1 116 1 363 1 48 1 366 1 290 1 22 1 310 6 81 4 199 1 87 2 63 1 32 2 156 3 13 1 15 1 202 2 231 2 161 2 
274 1 185 1 68 1 188 2 40 1 253 1 71 2 139 1 189 1 335 1 254 1 76 1 97 1 116 1 235 1 21 1 366 1 196 1 242 1 22 1 310 1 81 2 373 1 317 1 347 1 87 1 125 1 247 2 375 1 200 1 33 1 15 1 248 1 202 1 182 1 379 1 231 1 161 1 
324 1 325 7 274 7 185 1 330 1 188 3 40 3 42 7 139 3 189 10 43 4 335 3 336 2 279 3 97 1 2 2 147 1 235 2 48 4 53 1 196 3 242 2 290 2 7 1 247 3 200 2 248 1 15 1 202 3 161 3 68 2 162 8 71 20 253 2 354 2 73 1 358 1 76 1 254 2 211 2 116 1 309 1 21 1 366 3 22 1 310 10 81 6 314 2 317 2 266 2 86 1 87 3 125 2 32 3 33 1 268 2 182 2 136 1 231 3 
185 1 188 1 40 8 71 2 73 1 19 1 139 2 189 1 335 7 76 2 115 1 281 1 97 1 116 1 98 1 235 2 365 2 366 2 196 8 22 1 310 1 81 4 24 1 26 1 30 1 87 2 126 1 125 2 247 1 127 1 180 1 33 1 200 3 248 1 202 2 377 1 182 2 231 2 161 2 
325 1 274 1 188 1 162 1 42 1 232 1 252 1 354 1 71 3 139 1 189 1 336 1 279 1 97 1 48 1 366 1 290 1 310 2 81 2 106 1 87 1 32 1 247 1 33 1 248 1 15 1 202 1 231 1 161 1 
325 1 366 1 36 1 274 1 162 1 42 1 81 2 71 2 354 1 43 1 139 1 189 2 87 1 126 1 32 1 202 1 161 1 231 1 
325 1 366 1 274 1 290 1 162 1 310 2 42 1 81 2 71 2 139 1 279 1 87 1 126 1 202 1 380 1 48 1 161 1 231 1 
325 2 274 2 162 2 42 2 354 1 71 4 189 2 139 1 43 1 336 1 279 1 48 1 366 1 290 1 310 2 81 2 87 1 126 1 32 1 202 1 231 1 161 1 
325 1 366 1 36 1 274 1 162 1 42 1 81 2 71 2 354 1 43 1 139 1 189 2 87 1 32 1 377 1 202 1 161 1 231 1 
325 1 366 1 274 1 290 1 162 1 310 2 42 1 81 2 71 2 139 1 279 1 87 1 377 1 202 1 380 1 48 1 161 1 231 1 
325 2 274 2 162 2 42 2 354 1 71 4 189 2 139 1 43 1 336 1 279 1 48 1 366 1 290 1 310 2 81 2 87 1 32 1 202 1 377 1 231 1 161 1 
325 2 274 2 162 2 42 2 71 4 354 1 189 2 139 1 43 1 336 1 279 1 48 1 366 1 290 1 310 2 81 2 87 1 32 1 202 1 231 1 161 1 
68 1 188 1 40 1 71 2 253 1 189 1 139 1 335 1 254 1 76 1 211 1 116 1 235 1 366 1 196 1 242 1 22 1 310 1 81 2 317 1 87 1 125 1 247 1 200 1 202 1 182 1 161 1 231 1 
68 1 188 1 40 1 71 2 253 1 189 1 139 1 335 1 254 1 76 1 142 1 116 1 235 1 170 1 366 1 121 1 196 1 22 1 310 1 81 2 87 1 125 1 247 1 200 1 202 1 182 1 161 1 231 1 
325 2 274 2 162 2 42 2 354 1 71 4 189 2 139 1 43 1 336 1 279 1 48 1 366 1 290 1 310 2 81 2 87 1 32 1 15 1 202 1 231 1 161 1 
325 2 274 2 188 1 162 2 40 1 42 2 71 4 354 1 253 1 43 1 189 2 19 1 139 1 335 1 336 1 254 1 279 1 211 1 235 1 48 1 366 1 196 1 290 1 242 1 310 2 81 2 317 1 87 1 125 1 32 1 247 1 200 1 268 1 202 1 182 1 161 1 231 1 
325 1 274 1 188 1 162 1 42 1 252 1 354 1 71 3 43 1 139 1 189 2 336 1 279 1 97 1 366 1 290 1 310 1 81 2 370 1 106 1 87 1 32 1 247 1 33 1 248 1 15 1 202 1 231 1 161 1 
35 2 38 1 162 6 71 19 354 3 139 2 189 9 43 3 164 1 336 3 140 1 191 2 279 3 308 1 285 1 48 3 172 1 290 3 310 10 81 4 311 1 295 1 32 3 156 1 13 1 249 1 202 2 203 2 231 2 161 2 
35 4 38 2 162 4 138 2 71 26 354 3 43 2 139 3 189 14 336 3 279 2 191 2 210 1 308 2 46 1 285 1 48 2 172 1 342 1 290 2 310 12 81 6 311 1 295 1 32 3 156 2 299 1 109 1 130 1 249 2 202 3 203 1 231 3 161 3 
35 4 324 1 38 3 138 1 43 4 189 20 139 3 336 4 140 1 279 5 191 4 285 1 46 1 48 4 53 1 290 4 342 1 7 1 295 1 13 1 156 3 109 1 299 1 202 3 249 2 203 1 161 3 162 8 354 4 71 41 358 1 210 1 308 1 165 1 172 1 310 21 311 1 81 6 86 1 32 5 130 1 231 3 136 1 
324 1 35 4 38 3 162 7 138 2 71 38 354 4 139 4 189 20 43 3 336 4 140 1 358 1 210 1 191 4 279 4 165 1 308 1 46 1 285 1 48 4 172 1 53 1 342 1 290 3 310 18 81 8 311 1 7 1 295 1 86 1 32 5 156 3 13 1 299 1 109 1 130 1 249 2 202 4 203 1 136 1 231 4 161 4 
324 1 35 4 38 2 162 14 138 1 71 52 354 7 139 2 189 27 43 7 74 2 336 7 358 1 210 1 191 4 279 8 308 1 46 1 285 1 48 7 172 1 53 1 342 1 290 7 310 25 81 4 311 1 7 1 295 1 86 1 32 8 156 4 13 2 299 1 109 1 130 1 249 1 202 2 203 1 136 1 231 2 161 2 
282 1 349 1 47 1 168 1 59 1 378 1 176 1 20 1 364 1 85 1 
12 1 250 1 
348 1 349 1 47 1 59 1 0 1 176 1 20 1 51 1 85 1 
326 1 244 1 59 1 176 1 208 2 355 1 357 1 29 1 318 1 85 1 62 1 282 1 349 1 319 1 47 1 168 1 378 1 20 1 
326 1 244 1 59 1 176 1 208 2 355 1 357 1 29 1 318 1 85 1 62 1 282 1 349 1 319 1 47 1 168 1 378 1 20 1 
326 1 244 1 59 1 176 1 208 2 355 1 357 1 29 1 318 1 85 1 62 1 282 1 349 1 319 1 47 1 168 1 378 1 20 1 
137 1 184 1 341 1 
137 1 184 1 341 1 
6 1 41 1 
137 1 6 1 41 1 
217 1 269 1 
68 1 188 2 332 1 208 1 355 1 77 1 97 2 47 1 217 1 20 1 171 1 49 1 50 1 59 1 176 1 29 1 85 1 62 1 12 1 247 2 349 1 319 1 33 2 248 2 269 1 183 1 250 1 
184 1 341 1 
137 1 6 1 41 1 
188 2 40 2 71 2 139 1 189 1 114 1 335 2 281 1 97 2 116 1 235 1 365 2 366 1 368 1 196 2 22 1 310 1 81 2 26 1 28 1 87 1 125 1 247 2 200 1 15 1 202 1 182 1 271 1 350 1 161 1 231 1 
205 1 262 2 196 2 101 1 40 2 312 1 95 1 209 1 73 1 19 1 372 1 335 2 337 1 216 1 235 1 93 1 182 1 133 1 52 1 
205 1 262 2 196 1 101 1 40 1 209 1 73 1 372 1 335 1 152 1 337 1 216 1 235 1 93 1 182 1 133 1 52 1 
205 1 196 1 40 1 95 1 335 1 344 1 76 1 125 1 127 1 180 1 200 1 146 1 235 1 182 1 
205 1 262 2 196 1 101 1 40 1 312 1 95 1 209 1 73 1 372 1 335 1 337 1 216 1 235 1 93 1 182 1 133 1 52 1 
352 1 
326 1 31 1 178 1 16 1 340 1 92 1 260 1 
326 2 16 1 186 1 163 1 334 1 355 1 78 1 340 1 361 1 195 1 260 1 82 1 29 1 11 1 300 1 322 1 159 1 
327 2 326 8 329 1 186 3 40 3 334 6 278 2 335 3 336 2 279 2 1 2 340 2 235 3 195 4 288 2 196 3 290 2 293 2 151 2 60 6 198 1 297 2 11 4 200 10 108 1 300 4 16 9 113 2 18 2 253 3 354 2 19 1 355 5 76 1 214 2 257 6 78 5 79 2 118 1 260 8 173 1 25 1 82 4 314 2 29 5 31 1 125 3 32 2 132 3 92 1 182 4 134 1 322 12 323 2 
327 1 38 1 326 5 16 8 186 1 18 2 334 3 354 2 355 1 336 2 191 1 210 1 279 2 1 1 257 5 78 1 340 2 46 1 195 2 260 5 342 1 290 2 25 1 82 2 60 5 124 1 29 1 11 2 32 2 156 1 14 1 109 1 130 1 300 2 322 6 
16 2 188 1 252 1 18 2 355 1 358 1 279 1 192 1 233 1 1 1 215 1 97 1 195 1 260 2 53 1 261 1 23 1 82 1 371 1 29 1 86 1 11 1 32 2 247 1 33 1 248 1 300 1 160 1 
326 1 16 1 82 1 11 1 31 1 340 1 300 1 92 1 195 1 260 1 
326 5 16 5 290 2 18 2 354 2 60 5 334 5 314 1 336 2 279 2 1 1 32 2 257 5 322 10 260 5 
326 1 186 1 340 1 78 1 355 1 29 1 
327 2 94 1 16 2 329 2 186 2 40 4 305 1 355 3 44 1 335 4 76 2 78 4 234 1 235 1 195 2 260 2 196 4 25 2 264 1 82 2 29 3 11 2 125 1 127 1 180 1 200 1 300 1 182 1 134 1 
68 1 188 3 40 1 252 2 71 1 253 1 139 1 335 1 76 1 254 1 211 1 116 1 97 2 235 1 366 1 196 1 261 1 242 1 310 1 81 2 317 1 87 1 125 1 64 1 247 3 33 2 200 1 248 2 202 1 182 1 231 1 161 1 
327 1 326 4 16 1 25 1 82 1 60 2 334 2 11 1 257 2 340 2 300 1 195 1 322 4 260 2 136 1 
141 1 349 1 47 1 
141 1 349 1 47 1 
283 1 349 1 217 1 47 1 378 1 
141 1 349 1 47 1 
349 1 225 1 47 1 
349 1 225 1 47 1 
349 1 225 1 47 1 
349 1 47 1 
59 1 176 1 
324 1 310 4 162 3 81 4 7 1 138 1 71 8 189 4 43 1 139 2 358 1 279 1 86 1 32 1 202 2 48 2 136 1 53 1 161 2 231 2 
324 1 310 3 162 2 7 1 71 6 189 3 358 1 279 1 86 1 178 1 32 1 48 2 136 1 53 1 
290 1 310 2 162 2 81 2 354 1 71 4 139 1 189 2 43 1 336 1 279 1 32 1 259 1 202 1 48 1 161 1 231 1 
38 1 290 1 310 4 162 2 71 7 354 1 189 3 43 1 336 1 279 1 191 2 32 1 156 1 13 1 48 1 
324 1 162 9 138 2 354 2 71 23 43 4 189 11 139 2 336 2 74 1 358 2 191 2 279 3 117 1 48 5 53 1 290 2 310 12 81 4 7 1 86 2 199 1 32 3 13 1 156 2 202 2 136 1 161 2 231 2 
310 1 71 1 191 1 
156 1 71 1 189 1 
290 1 310 3 162 3 81 2 71 6 354 1 139 1 314 1 189 3 43 1 336 1 279 1 32 1 259 1 202 1 48 2 231 1 161 1 
38 1 162 2 71 12 354 2 43 1 139 1 189 6 336 2 191 1 210 1 279 2 285 1 46 1 48 1 342 1 290 2 310 6 81 2 32 2 156 1 130 1 109 1 202 1 231 1 161 1 
32 1 162 2 310 3 71 6 43 1 189 3 48 1 358 1 279 1 86 1 53 1 
324 1 162 2 310 2 81 2 7 1 138 1 71 3 189 1 43 1 139 1 358 1 86 1 117 1 202 1 48 1 161 1 231 1 
162 5 310 5 81 2 71 10 139 1 43 2 189 5 358 2 279 2 86 2 32 2 215 1 285 1 202 1 48 3 231 1 161 1 53 1 
162 1 81 2 354 1 71 2 139 1 189 2 43 1 32 1 285 1 202 1 161 1 231 1 
290 1 310 2 162 2 81 2 354 1 71 4 139 1 189 2 43 1 336 1 279 1 32 1 285 1 202 1 48 1 161 1 231 1 
310 2 162 2 81 6 138 1 71 3 139 3 43 1 189 1 140 1 358 1 86 1 117 1 285 1 202 3 48 1 161 3 231 3 
324 1 38 1 162 12 138 2 71 34 354 3 139 5 189 16 43 5 336 3 358 3 140 1 191 4 279 5 144 1 259 1 117 1 285 1 48 7 53 2 290 3 310 18 81 10 7 1 86 3 298 1 246 1 32 5 156 3 13 1 202 5 136 1 231 5 161 5 
324 1 38 1 162 2 71 8 139 1 189 4 358 1 279 1 191 1 285 1 48 2 53 1 310 4 81 2 7 1 86 1 32 1 156 1 130 1 202 1 136 1 231 1 161 1 
324 1 38 1 162 3 71 11 354 1 139 2 189 6 43 1 336 1 358 1 279 1 191 2 259 1 285 1 48 2 53 1 310 5 81 4 7 1 86 1 32 2 156 1 13 1 130 1 202 2 136 1 231 2 161 2 
324 1 38 1 162 4 138 1 71 19 354 2 43 1 139 3 189 9 336 2 358 1 191 1 210 1 279 3 259 1 46 1 285 1 48 3 53 1 342 1 290 2 310 10 81 6 7 1 86 1 32 3 156 1 130 1 109 1 202 3 136 1 231 3 161 3 
324 1 38 1 162 5 138 1 71 17 354 2 43 2 139 3 189 10 336 2 358 1 191 1 210 1 279 2 259 1 285 1 46 1 48 3 53 1 342 1 290 1 310 7 81 6 7 1 86 1 32 3 156 1 130 1 109 1 202 3 136 1 231 3 161 3 
324 1 38 1 162 2 71 8 139 1 189 4 358 1 279 1 191 1 285 1 48 2 53 1 310 4 81 2 7 1 86 1 32 1 156 1 130 1 202 1 136 1 231 1 161 1 
38 1 162 2 71 12 354 2 43 1 139 1 189 6 336 2 191 1 210 1 279 2 285 1 46 1 48 1 342 1 290 2 310 6 81 2 32 2 156 1 130 1 109 1 202 1 231 1 161 1 
324 1 38 1 162 5 138 2 71 18 354 2 43 2 139 4 189 10 336 2 358 1 191 1 210 1 279 2 259 1 46 1 285 1 48 3 53 1 342 1 290 1 310 8 81 8 7 1 86 1 32 3 156 1 109 1 130 1 202 4 136 1 231 4 161 4 
38 1 162 6 138 2 71 16 354 3 43 3 139 4 189 9 336 3 140 1 191 1 210 1 279 2 46 1 285 1 48 3 342 1 290 2 310 7 81 8 32 3 156 1 109 1 130 1 202 4 231 4 161 4 
324 2 310 4 162 6 7 1 71 7 43 3 189 3 358 3 279 1 86 3 32 1 48 3 53 1 
324 1 38 1 162 4 138 2 71 18 354 2 43 1 139 4 189 10 336 2 358 1 140 1 191 1 210 1 279 2 46 1 285 1 48 3 53 1 342 1 290 1 310 8 81 8 7 1 86 1 32 3 156 1 109 1 130 1 202 4 136 1 231 4 161 4 
88 1 247 1 107 1 68 1 188 1 97 1 83 1 
111 1 68 1 188 1 197 1 296 1 83 1 88 1 193 1 107 1 247 1 97 1 34 1 
125 1 178 1 127 1 196 1 180 1 200 1 40 1 235 1 182 1 335 1 76 1 
185 1 196 1 68 1 188 2 40 1 253 1 335 1 254 1 76 1 317 1 125 1 247 2 97 1 200 1 33 1 248 1 235 1 182 1 
185 1 68 1 329 1 188 2 40 1 253 2 278 1 335 1 75 1 254 1 214 1 97 2 235 1 196 1 317 1 125 2 247 2 33 2 200 3 248 1 131 1 182 1 160 1 
185 1 68 1 329 1 188 2 40 2 253 2 278 1 335 2 75 1 254 1 214 1 97 2 235 1 121 1 196 2 125 2 247 2 181 1 33 2 200 3 248 1 131 1 182 1 160 1 
326 1 329 1 40 3 113 1 253 1 355 2 278 1 335 3 76 1 214 1 78 1 340 1 235 1 196 3 293 1 29 2 125 1 153 1 181 1 200 4 132 1 182 1 157 1 
326 1 196 3 329 1 113 1 40 3 293 1 253 1 278 1 355 2 335 3 76 1 29 2 125 1 214 1 181 1 340 1 78 1 200 4 132 1 235 1 182 1 323 1 
196 1 40 1 98 1 235 1 182 1 335 1 
196 7 40 7 24 1 26 1 253 1 73 1 19 1 198 1 335 6 76 2 30 1 115 1 125 2 200 3 98 1 169 1 235 2 182 3 236 1 365 1 148 1 
325 1 324 1 274 1 185 1 68 2 188 2 162 2 40 1 42 1 71 6 253 1 189 3 139 2 19 1 335 1 358 1 254 1 279 1 211 1 97 1 2 1 235 1 48 2 53 1 366 2 196 1 242 1 310 3 81 4 7 1 317 1 86 1 87 2 125 1 32 1 247 2 200 1 33 1 268 1 15 1 248 1 202 2 182 1 271 1 136 1 231 2 161 2 
326 1 16 1 186 1 40 1 113 1 355 3 335 1 76 1 340 1 78 2 79 1 195 2 260 1 288 1 196 1 293 1 82 2 29 3 297 1 11 2 31 1 200 2 132 1 300 2 92 1 134 1 183 1 323 1 
196 2 40 2 293 1 253 1 19 1 198 1 335 2 125 1 200 2 98 1 235 1 182 2 173 1 
196 4 40 4 19 1 335 4 76 1 125 1 127 1 180 1 181 1 200 1 235 1 182 1 5 1 
196 2 329 1 40 2 304 1 253 1 335 2 245 1 125 1 200 1 309 1 235 1 182 2 236 1 148 1 
262 1 101 1 196 1 40 1 235 1 93 1 182 1 372 1 335 1 76 1 
125 1 196 2 200 1 40 2 26 1 235 1 182 1 73 1 19 1 335 2 350 1 
196 5 329 1 40 5 24 1 26 1 19 1 335 4 76 1 30 1 125 2 127 1 180 1 200 3 235 2 182 2 5 1 
196 5 329 1 40 5 26 1 19 1 335 4 76 1 30 1 125 2 127 1 180 1 200 3 286 1 235 2 182 2 5 1 
121 1 185 1 196 1 68 1 188 2 40 1 253 1 335 1 254 1 76 1 125 1 247 2 97 1 200 1 33 1 248 1 235 1 182 1 
196 1 329 1 40 1 253 1 198 1 335 1 125 1 200 1 169 1 235 1 182 2 236 1 148 1 
368 1 188 1 276 1 123 1 28 1 114 1 247 1 97 1 287 1 
240 1 194 1 287 1 
68 1 276 1 123 1 110 1 287 1 
326 1 188 1 276 1 252 1 355 1 75 1 192 1 233 1 97 1 359 1 194 1 340 1 258 1 287 1 240 1 261 1 23 1 123 1 29 1 89 1 247 1 33 1 248 1 131 1 110 1 183 1 160 2 
178 1 65 1 119 1 158 1 
237 1 55 1 65 1 294 1 99 1 119 1 158 1 
294 1 255 1 10 1 
237 1 55 1 212 2 291 1 65 1 66 1 294 3 99 3 343 1 119 1 346 1 158 1 
237 1 55 1 65 1 149 1 294 2 99 2 119 1 158 1 120 1 
267 1 237 1 55 1 262 1 66 1 216 1 294 1 99 1 313 1 372 1 119 1 
237 1 55 1 66 1 294 1 99 1 119 1 158 1 
237 1 55 1 65 1 66 1 294 1 99 1 158 2 
237 2 351 1 224 1 55 2 66 1 294 2 99 2 119 1 338 1 158 1 
237 1 55 1 149 2 294 3 267 1 65 1 66 1 154 1 145 1 99 3 119 2 158 1 227 1 
237 1 55 1 262 2 149 1 294 2 72 1 209 1 372 1 65 1 66 1 216 1 99 2 93 1 119 1 158 1 
237 2 55 2 149 2 175 1 294 4 267 1 65 1 66 1 99 4 119 2 158 1 227 1 120 1 
237 1 55 1 65 1 66 1 294 1 99 1 119 1 158 1 
237 1 55 1 291 1 149 2 294 4 343 1 9 1 267 1 212 1 65 2 99 4 119 3 158 2 227 1 
237 1 55 1 56 1 149 1 17 1 294 2 306 1 66 1 65 1 99 2 119 1 158 1 
237 1 55 1 291 2 294 3 343 1 212 2 66 1 65 1 99 3 226 1 119 1 158 1 
289 2 277 1 119 2 222 1 
237 1 112 1 55 1 66 1 294 1 99 1 
237 1 55 1 65 1 145 1 66 1 149 1 294 2 99 2 119 1 158 1 
220 1 
237 1 55 1 65 1 66 1 294 1 99 1 119 1 158 1 
237 1 55 1 212 1 145 1 65 1 66 1 149 1 294 3 99 3 119 1 158 1 
267 1 119 1 9 1 227 1 
119 1 158 1 

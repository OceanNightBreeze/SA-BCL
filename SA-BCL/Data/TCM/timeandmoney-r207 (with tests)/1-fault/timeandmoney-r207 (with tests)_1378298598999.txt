#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 257 39 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
26 1 148 6 45 1 121 1 175 1 342 1 313 1 122 1 93 2 362 2 177 2 52 1 222 3 364 1 35 2 318 5 204 1 188 1 253 9 58 2 138 2 139 1 116 9 66 2 167 4 376 1 282 1 359 1 
26 1 148 6 45 1 121 1 175 1 342 1 313 1 122 1 93 2 362 2 177 2 52 1 222 3 364 1 35 2 318 5 204 1 188 1 253 9 58 2 138 2 139 1 116 9 66 2 167 4 376 1 282 1 359 1 
26 1 148 7 45 1 121 1 175 1 342 1 313 1 122 1 93 2 362 2 177 2 52 1 222 4 364 1 35 2 318 6 204 1 188 1 253 10 58 2 138 2 139 1 116 10 66 2 167 5 376 1 282 1 359 1 
26 1 148 4 45 1 121 1 175 1 342 1 313 1 122 1 93 2 362 1 177 2 52 1 222 2 35 2 318 4 204 1 188 1 253 7 58 2 138 2 139 1 116 7 66 2 167 3 376 1 282 1 359 1 
26 1 253 4 148 3 58 1 342 1 313 1 122 1 93 1 362 2 138 1 177 1 116 4 52 1 222 1 364 1 35 1 167 2 318 3 
253 2 58 1 313 1 122 1 93 1 138 1 177 1 116 2 354 1 52 1 66 1 318 1 129 1 188 1 106 1 359 1 
253 3 148 1 45 1 58 2 313 1 122 1 93 2 116 3 52 1 222 1 66 1 167 1 318 2 
26 1 148 7 45 1 121 1 342 1 313 1 122 1 93 2 362 2 177 1 52 1 222 3 364 1 35 1 318 5 253 9 58 2 138 1 139 1 18 1 116 9 331 1 66 1 167 4 
26 1 148 7 45 1 121 1 342 1 313 1 122 1 93 2 362 2 177 1 52 1 222 3 364 1 35 1 318 5 253 9 58 2 138 1 139 1 18 1 116 9 331 1 66 1 167 4 
267 1 306 1 125 1 
178 2 125 1 378 1 
182 2 328 1 236 2 275 2 266 2 221 1 329 2 339 2 
263 1 92 1 50 1 95 1 266 2 221 1 179 1 346 1 315 2 98 1 152 1 182 2 349 1 11 1 54 1 160 2 110 1 16 1 328 1 236 3 275 2 237 1 329 2 22 2 281 1 332 1 141 1 333 2 192 1 256 2 337 1 261 1 243 1 339 3 170 1 91 1 244 1 
182 1 308 1 328 1 236 1 275 1 114 1 266 1 329 1 191 1 339 1 
246 1 30 1 275 1 236 1 125 1 115 1 191 1 225 1 12 1 165 1 267 1 75 1 321 1 339 1 
246 1 30 2 275 1 236 1 125 1 266 1 115 1 329 1 191 1 182 1 12 1 165 2 267 1 75 1 339 1 
165 1 30 1 62 1 270 1 40 1 
42 1 165 2 267 1 13 1 30 2 125 1 62 1 40 1 
165 1 30 1 62 1 
30 1 328 1 275 1 236 1 114 1 266 1 329 1 191 1 182 1 165 1 166 1 308 1 40 1 339 1 
125 1 
165 2 267 1 13 1 30 2 125 1 62 1 40 1 162 1 
111 2 46 1 232 2 207 1 30 5 125 1 62 2 8 1 10 2 140 1 184 1 165 5 267 1 213 1 335 1 358 1 13 1 104 1 40 2 
306 1 221 1 
275 2 236 2 266 1 329 1 221 2 182 1 356 1 339 2 284 1 
326 1 155 1 19 1 
110 1 92 1 50 1 236 1 32 1 221 1 315 1 98 1 22 1 11 1 256 1 243 1 339 1 170 1 244 1 91 1 
92 1 110 1 235 1 50 1 275 1 236 2 19 1 329 1 98 1 315 1 22 1 182 1 11 1 256 1 214 1 243 1 339 2 170 1 91 1 244 1 
15 1 235 2 275 5 236 5 266 1 329 4 221 1 20 1 182 4 225 1 214 1 103 1 339 5 284 1 
182 2 276 1 236 2 275 2 114 1 329 2 191 1 339 2 
182 3 235 1 236 3 275 3 266 1 221 1 329 3 339 3 
182 1 236 1 275 1 114 1 329 1 191 1 339 1 
182 1 356 1 236 1 275 1 266 1 329 1 191 1 339 1 284 1 
263 1 92 1 50 1 246 1 95 1 30 1 266 2 221 1 179 1 346 1 98 1 315 1 74 1 182 3 11 1 292 1 12 1 75 1 54 1 160 2 110 1 235 1 16 1 328 1 236 4 275 3 237 1 115 1 329 3 191 1 22 1 281 1 332 1 333 1 192 1 165 1 256 1 214 1 243 1 339 4 170 1 284 1 91 1 244 1 
182 1 225 1 235 1 236 2 275 2 221 1 329 1 20 1 339 2 
370 1 235 2 246 1 30 1 275 3 236 3 266 1 125 1 115 1 329 3 191 1 182 3 292 1 165 1 12 1 214 1 75 1 339 3 284 1 
235 1 275 2 236 2 266 1 19 1 329 2 182 2 155 1 339 2 284 1 
110 1 92 1 50 1 236 1 221 1 315 1 98 1 22 1 11 1 256 1 243 1 339 1 170 1 244 1 91 1 
110 1 92 1 0 1 50 1 236 1 221 1 315 1 98 1 22 1 256 1 251 1 243 1 339 1 170 1 91 1 
146 1 310 1 263 1 289 1 179 1 346 1 34 1 101 1 155 2 205 1 160 2 326 2 59 1 16 1 19 2 332 1 281 2 192 1 333 4 337 2 336 1 283 1 379 1 44 1 
182 1 236 1 275 1 276 1 115 1 329 1 191 1 339 1 
259 1 65 1 
259 1 65 1 
366 1 294 1 
366 1 294 1 
366 1 294 1 
87 1 259 1 65 1 
87 1 259 1 65 1 
259 1 65 1 21 1 
366 1 294 1 259 2 228 1 65 2 90 1 
87 1 259 1 65 1 
70 1 259 1 65 1 
70 1 259 1 65 1 
70 1 259 1 65 1 
71 1 245 1 30 1 198 1 221 1 182 2 186 1 320 1 130 1 131 1 187 1 134 1 275 2 236 2 84 1 329 2 65 1 190 1 21 1 165 1 259 1 24 1 339 2 89 1 
132 1 134 2 361 2 196 1 30 2 198 3 125 1 33 1 65 2 86 1 255 1 165 2 259 2 24 1 228 1 186 2 320 2 171 1 89 2 
35 1 138 1 177 1 
129 1 138 1 177 1 
163 1 35 2 303 1 144 1 129 1 177 3 
163 1 279 1 35 1 303 1 129 1 177 2 
163 2 35 1 303 1 129 1 177 2 
310 1 146 1 195 1 46 3 71 1 245 1 30 5 178 3 125 2 314 1 200 1 10 1 100 2 267 1 203 1 53 1 13 1 205 1 40 4 252 2 111 1 231 1 232 1 233 1 207 2 62 1 277 2 190 1 165 5 213 1 283 1 378 1 
310 3 146 3 195 2 46 8 49 1 30 9 178 9 125 5 200 1 73 1 181 1 10 2 184 1 100 6 267 1 295 1 53 3 13 1 205 3 270 5 40 7 252 6 111 2 254 5 232 2 233 2 207 6 61 1 62 6 190 4 209 1 165 9 213 1 283 3 378 3 
310 1 146 1 195 1 46 3 30 3 178 4 125 3 10 1 184 1 100 2 267 1 203 1 53 1 205 1 40 2 252 2 111 1 231 1 232 1 233 1 207 2 190 1 277 1 165 3 283 1 378 2 
310 2 146 2 195 1 46 5 30 4 178 7 125 4 73 1 10 1 184 1 100 4 267 1 203 1 295 1 53 2 205 2 40 3 252 4 111 1 231 1 232 1 233 1 207 4 61 1 190 2 277 2 165 4 283 2 378 3 
290 1 306 1 170 1 
257 1 170 1 
68 1 
50 1 170 1 91 1 
31 1 170 1 
50 1 170 1 
239 1 290 2 50 1 64 1 170 3 91 1 
310 1 146 1 351 1 59 2 343 2 83 1 274 1 291 1 51 1 72 1 85 1 224 1 281 3 333 7 258 1 337 4 379 3 
310 1 146 1 351 1 59 2 343 2 83 1 274 1 291 1 51 1 72 1 85 1 224 1 281 3 333 7 258 1 337 4 379 3 
310 1 146 1 351 1 59 2 83 1 343 2 274 1 291 1 51 1 72 1 85 1 224 1 281 3 333 7 258 1 337 4 297 1 379 3 
263 1 146 4 310 4 343 3 150 1 291 2 51 2 72 1 224 2 183 1 153 1 53 3 205 3 157 1 160 2 55 1 351 2 133 1 59 5 83 1 298 4 16 1 274 5 85 1 281 15 332 1 192 1 333 31 258 1 88 3 260 1 337 16 283 3 379 10 
310 1 146 1 263 2 343 2 291 1 51 1 72 1 224 1 160 4 351 1 133 1 112 1 59 3 83 1 16 2 274 1 117 1 85 1 332 2 281 4 192 2 333 9 337 5 379 4 
92 1 148 1 313 1 122 1 93 1 29 1 177 2 52 1 345 1 315 1 98 1 35 1 201 1 318 1 129 1 38 1 253 2 80 1 58 1 138 1 60 1 116 2 22 1 66 1 164 1 256 1 375 1 144 1 307 1 217 1 
92 1 148 2 311 1 313 1 122 1 93 1 29 1 177 2 345 1 315 1 98 1 35 1 201 1 318 1 129 1 38 1 253 3 58 1 138 1 60 1 116 3 22 1 66 1 164 1 256 1 375 1 144 1 242 1 168 1 217 1 
92 1 148 2 313 1 122 1 29 1 177 2 315 1 98 1 201 1 35 1 318 1 129 1 38 1 253 2 138 1 60 1 116 2 66 1 22 1 256 1 375 1 144 1 242 1 168 1 217 1 
92 1 311 1 93 1 29 2 50 1 6 1 98 1 315 1 229 1 41 1 230 1 79 1 110 1 253 1 58 1 60 2 116 1 22 1 66 2 67 1 256 1 375 2 170 1 
92 1 93 1 29 1 177 2 52 1 345 1 315 1 98 1 35 1 201 1 129 1 38 1 253 1 80 1 58 1 138 1 60 1 116 1 22 1 66 1 164 1 256 1 375 1 144 1 242 1 217 1 
271 1 
92 1 1 2 149 1 47 1 46 2 344 2 50 1 246 1 98 1 10 1 12 1 154 4 13 3 102 1 206 2 110 2 111 1 207 2 115 1 62 6 355 2 22 2 211 1 165 5 256 2 213 1 120 2 170 1 176 1 30 5 178 2 125 2 315 2 225 1 267 1 75 1 185 1 321 1 77 2 79 1 230 1 371 2 272 1 233 1 232 1 273 1 275 1 236 1 191 1 238 1 143 1 378 2 339 1 340 1 285 1 
1 1 246 1 30 3 225 1 12 1 75 1 154 2 13 1 321 1 102 1 272 1 273 1 236 1 275 1 115 1 62 2 191 1 162 1 165 3 143 1 339 1 285 1 
246 1 30 3 125 1 225 1 12 1 75 1 154 3 267 1 13 1 321 1 102 1 272 1 273 1 236 1 275 1 115 1 62 1 191 1 162 1 165 3 143 1 120 1 339 1 285 1 
1 1 246 1 30 3 125 1 225 1 12 1 75 1 154 3 267 1 13 1 321 1 102 1 272 1 273 1 236 1 275 1 115 1 62 2 162 1 191 1 355 1 165 3 143 1 120 1 339 1 285 1 
1 4 46 1 47 1 246 1 344 2 10 1 12 1 154 6 13 3 102 1 206 2 111 1 113 1 207 1 115 1 62 7 355 4 162 1 165 5 213 1 120 4 119 1 309 1 172 1 30 5 125 5 126 1 225 1 75 1 267 5 321 1 77 2 371 2 272 1 232 1 273 1 236 1 275 1 191 1 238 1 143 1 378 2 339 1 285 1 
1 2 46 1 47 1 246 1 344 2 10 1 12 1 154 4 13 2 102 1 206 2 111 1 207 1 115 1 62 4 355 2 165 4 213 1 120 2 30 4 178 2 125 2 225 1 75 1 267 1 185 1 321 1 77 2 371 2 272 1 232 1 273 1 236 1 275 1 191 1 238 1 143 1 378 2 339 1 285 1 
1 2 47 1 46 1 344 2 246 1 30 4 125 1 10 1 225 1 12 1 267 1 75 1 154 4 13 2 321 1 102 1 77 2 206 2 371 2 111 1 272 1 232 1 113 1 207 1 273 1 236 1 275 1 115 1 62 4 355 2 191 1 238 1 165 4 143 1 213 1 120 2 119 1 309 1 378 2 339 1 285 1 
1 2 47 1 46 1 344 2 246 1 30 4 125 1 10 1 225 1 12 1 267 1 75 1 154 4 13 2 321 1 102 1 77 2 206 2 371 2 111 1 272 1 232 1 113 1 207 1 273 1 236 1 275 1 115 1 62 4 355 2 191 1 238 1 165 4 143 1 213 1 120 2 119 1 309 1 378 2 339 1 285 1 
1 2 47 1 46 1 363 2 344 2 94 1 246 1 30 4 178 2 125 1 250 1 10 1 225 1 12 1 267 1 317 2 75 1 154 4 13 2 321 1 102 1 371 2 111 1 272 1 232 1 207 1 273 1 236 1 275 1 115 1 62 4 355 2 191 1 165 4 143 1 213 1 120 2 309 1 193 1 339 1 285 1 
172 1 1 3 47 1 46 1 344 2 246 1 30 4 125 1 10 1 225 1 12 1 267 1 75 1 154 5 13 2 321 1 102 1 77 2 206 2 371 2 111 1 272 1 232 1 113 1 207 1 273 1 236 1 275 1 115 1 62 5 191 1 355 3 238 1 165 4 213 1 143 1 120 3 119 1 309 1 378 2 339 1 285 1 
172 1 1 3 47 1 46 1 344 2 246 1 30 4 125 1 10 1 225 1 12 1 267 1 75 1 154 5 13 2 321 1 102 1 77 2 206 2 371 2 111 1 272 1 232 1 113 1 207 1 273 1 236 1 275 1 115 1 62 5 191 1 355 3 238 1 165 4 213 1 143 1 120 3 119 1 309 1 378 2 339 1 285 1 
1 2 46 1 47 1 94 1 246 1 344 2 10 1 12 1 154 4 13 2 102 1 111 1 207 1 115 1 62 4 355 2 165 4 213 1 120 2 363 2 30 4 178 2 125 1 225 1 75 1 317 2 267 1 185 1 321 1 371 2 272 1 232 1 273 1 236 1 275 1 191 1 143 1 339 1 285 1 
310 1 146 1 263 1 351 1 326 1 59 2 343 1 83 1 16 1 19 1 221 2 179 1 346 1 72 1 85 1 224 1 281 3 332 1 333 6 192 1 306 1 337 3 155 1 379 2 44 1 160 2 
263 2 146 2 310 1 174 1 150 1 221 1 179 1 346 2 350 1 53 2 205 2 155 4 156 1 54 1 160 4 56 1 326 11 59 1 298 3 274 1 16 2 19 11 63 1 281 6 332 2 192 2 333 14 88 3 260 1 337 8 261 1 283 1 379 2 
92 1 263 1 50 1 32 1 221 1 179 1 98 1 315 1 346 1 182 1 11 1 350 1 155 1 160 2 54 1 110 1 235 1 16 1 236 2 275 1 329 1 43 1 22 1 280 1 332 1 281 1 256 1 192 1 333 2 214 1 357 1 337 1 261 1 243 1 339 2 170 1 91 1 244 1 
92 2 146 3 343 1 50 2 95 2 97 1 346 3 98 2 11 2 350 1 53 2 155 7 205 2 54 1 160 6 351 1 110 1 109 2 59 4 16 3 19 7 22 3 256 3 214 1 261 1 216 2 170 2 310 3 263 3 221 2 179 3 72 1 315 3 224 1 182 1 227 2 325 1 78 1 326 7 83 1 235 1 274 4 275 1 236 3 329 1 278 2 85 1 281 10 332 3 192 3 333 20 242 1 337 10 243 2 283 2 339 3 379 8 244 2 91 2 
219 1 92 2 263 2 4 1 50 2 179 2 98 2 315 7 346 2 182 1 160 4 54 1 230 1 79 1 110 2 81 1 374 1 235 1 16 2 236 1 275 1 329 1 300 1 22 8 304 1 332 2 281 1 141 2 256 8 192 2 333 2 307 1 242 1 337 1 261 1 338 1 339 1 170 3 44 1 
263 1 146 1 310 1 266 1 179 1 5 1 346 1 182 1 350 1 53 1 155 1 205 1 160 2 326 1 59 1 16 1 275 1 236 1 19 1 329 1 332 1 281 2 192 1 333 3 337 1 283 1 339 1 379 1 284 1 
263 1 146 1 326 1 289 1 274 1 16 1 19 1 179 1 346 1 332 1 333 2 192 1 337 2 155 1 205 1 379 1 44 1 160 2 
263 1 310 1 326 1 59 1 16 1 19 1 179 1 346 1 332 1 281 2 333 2 192 1 101 1 155 1 283 1 379 1 44 1 160 2 
146 1 263 1 310 1 179 1 346 1 53 1 205 1 155 2 160 2 326 2 59 1 16 1 274 1 19 2 332 1 281 2 192 1 333 4 337 2 283 1 379 2 44 1 
263 1 146 1 326 1 289 1 274 1 16 1 19 1 179 1 346 1 332 1 333 2 192 1 337 2 155 1 205 1 338 1 379 1 160 2 
263 1 310 1 326 1 59 1 16 1 19 1 179 1 346 1 332 1 281 2 333 2 192 1 101 1 155 1 283 1 338 1 379 1 160 2 
146 1 263 1 310 1 179 1 346 1 53 1 205 1 155 2 160 2 326 2 59 1 16 1 274 1 19 2 332 1 281 2 192 1 333 4 337 2 283 1 338 1 379 2 
146 1 263 1 310 1 179 1 346 1 53 1 205 1 155 2 160 2 326 2 59 1 16 1 274 1 19 2 332 1 281 2 333 4 192 1 337 2 283 1 379 2 
92 1 263 1 50 1 95 1 221 1 179 1 98 1 315 1 346 1 11 1 160 2 54 1 110 1 16 1 236 1 22 1 332 1 281 1 333 2 256 1 192 1 337 1 261 1 243 1 339 1 170 1 91 1 244 1 
92 1 287 1 263 1 0 1 50 1 221 1 179 1 98 1 315 1 346 1 251 1 160 2 54 1 110 1 16 1 236 1 22 1 332 1 281 1 333 2 256 1 192 1 337 1 261 1 243 1 339 1 170 1 91 1 
146 1 263 1 310 1 179 1 346 1 350 1 53 1 205 1 155 2 160 2 326 2 59 1 16 1 274 1 19 2 332 1 281 2 192 1 333 4 337 2 283 1 379 2 
310 1 146 1 92 1 263 1 50 1 95 1 179 1 98 1 315 1 346 1 11 1 53 1 155 2 205 1 160 2 326 2 59 1 274 1 16 1 236 1 19 2 278 1 22 1 281 2 332 1 333 4 256 1 192 1 307 1 337 2 283 1 243 1 339 1 379 2 170 1 91 1 244 1 
310 1 263 1 146 1 266 1 179 1 346 1 182 1 350 1 53 1 205 1 155 1 160 2 326 1 274 1 16 1 275 1 236 1 19 1 329 1 281 1 332 1 192 1 333 3 337 2 377 1 283 1 339 1 379 1 284 1 
263 2 146 3 310 3 312 2 150 1 28 1 7 1 223 1 347 1 128 2 37 1 53 3 205 3 160 4 112 1 136 1 59 3 298 2 16 2 274 3 332 2 281 10 192 2 333 19 88 1 69 1 260 1 337 9 283 3 379 6 
310 2 263 3 146 3 147 1 312 1 2 1 28 1 7 2 36 1 347 1 128 4 37 1 76 1 296 1 53 3 205 3 160 6 133 2 112 1 59 2 298 2 327 1 274 2 16 3 281 12 332 3 192 3 333 26 88 2 69 2 337 14 260 2 283 2 379 4 
263 3 146 5 310 5 147 1 312 1 2 1 343 1 150 1 28 1 7 2 72 1 224 1 36 1 347 1 128 4 37 1 76 1 296 1 53 4 205 4 160 6 351 1 133 1 112 1 136 1 59 4 83 1 298 4 327 1 16 3 274 4 85 1 332 3 281 21 192 3 333 41 88 3 241 1 69 1 260 3 337 20 283 4 379 8 
263 4 146 5 310 4 147 1 312 1 2 1 343 1 150 1 28 1 7 2 72 1 224 1 36 1 347 1 128 4 37 1 76 1 296 1 53 4 205 4 160 8 351 1 133 2 112 1 136 1 59 4 83 1 298 4 327 1 16 4 274 3 85 1 332 4 281 18 192 4 333 38 88 3 241 1 69 1 260 3 337 20 283 3 379 7 
263 2 146 8 310 8 147 1 312 1 2 1 343 1 150 2 28 1 7 1 72 1 224 1 36 1 347 1 128 4 37 1 76 1 296 1 53 7 205 7 160 4 351 1 133 1 112 1 59 7 83 1 298 4 327 1 16 2 274 7 63 2 85 1 332 2 281 25 192 2 333 52 88 4 69 1 260 2 337 27 283 7 379 14 
134 1 255 1 316 1 259 1 228 1 186 1 320 1 33 1 65 1 89 1 
187 1 21 1 
134 1 259 1 137 1 186 1 320 1 65 1 89 1 365 1 159 1 
87 1 352 1 
70 1 369 1 90 1 
134 1 361 1 196 1 30 1 198 2 125 1 33 1 65 1 86 1 255 1 165 1 259 1 24 1 228 1 186 1 320 1 171 1 89 1 
134 1 361 1 196 1 30 1 198 2 125 1 33 1 65 1 86 1 255 1 165 1 259 1 24 1 228 1 186 1 320 1 171 1 89 1 
134 1 361 1 196 1 30 1 198 2 125 1 33 1 65 1 86 1 255 1 165 1 259 1 24 1 228 1 186 1 320 1 171 1 89 1 
87 1 352 1 90 1 
87 1 352 1 90 1 
70 1 369 1 
70 1 369 1 90 1 
130 1 84 1 
361 1 71 1 245 1 30 1 198 1 221 1 182 2 127 1 186 1 320 1 130 1 131 1 187 1 40 1 134 1 236 2 84 1 275 2 329 2 65 1 190 1 21 1 86 1 165 1 259 1 339 2 89 1 
92 1 263 1 50 1 179 1 248 1 98 1 346 1 315 2 350 1 319 1 323 1 160 2 54 1 16 1 236 2 275 2 161 1 300 1 22 2 302 1 304 1 332 1 281 1 141 2 256 2 192 1 333 2 337 1 261 1 339 2 170 1 
92 1 48 1 82 1 138 1 29 1 177 2 345 1 98 1 315 2 210 1 22 2 35 1 256 2 144 1 129 1 307 1 242 1 38 1 217 1 
92 1 82 1 138 1 29 1 177 2 345 1 315 1 98 1 22 1 35 1 256 1 202 1 144 1 129 1 242 1 38 1 217 1 
92 1 110 1 29 1 50 1 98 1 315 1 199 1 210 1 22 1 256 1 229 1 170 1 230 1 79 1 
92 1 48 1 82 1 138 1 29 1 177 2 345 1 98 1 315 1 210 1 22 1 35 1 256 1 144 1 129 1 242 1 38 1 217 1 
118 1 
46 1 267 1 335 1 207 1 306 1 125 1 8 1 
46 1 30 1 178 1 125 2 10 1 267 1 13 1 77 1 206 1 111 1 232 1 207 1 62 1 238 1 165 1 213 1 378 1 
92 1 110 1 111 1 135 1 232 1 50 1 64 1 98 2 315 1 10 1 22 1 256 1 257 1 213 1 39 1 170 1 91 1 
146 2 310 2 147 1 341 1 46 8 2 1 176 1 30 1 178 6 125 5 10 2 36 1 100 5 267 2 76 1 13 1 53 2 205 2 105 2 189 1 252 5 111 2 233 1 232 2 298 1 327 1 207 5 62 1 165 1 142 1 213 2 88 1 260 1 378 3 283 2 
146 2 310 1 46 2 30 1 266 1 10 1 224 1 182 1 368 1 105 2 351 1 111 1 232 1 113 1 207 2 328 1 236 1 275 1 114 1 329 1 191 1 85 1 165 1 166 1 142 1 213 1 308 1 339 1 
111 1 46 1 232 1 207 1 125 1 8 1 10 1 213 1 267 1 335 1 
109 1 146 2 252 5 310 2 46 5 207 5 178 10 125 5 100 5 142 1 53 2 205 2 105 2 378 5 283 2 
165 1 267 1 30 1 13 1 125 1 62 1 
92 1 288 1 149 1 46 2 176 2 50 1 220 1 30 3 98 1 315 4 10 2 184 1 13 2 324 1 230 1 79 1 110 2 111 2 232 2 233 2 207 2 62 4 22 4 256 4 165 3 213 1 305 2 170 1 340 1 
263 1 92 1 50 1 95 1 266 2 221 1 179 1 315 1 98 1 346 1 182 2 11 1 54 1 160 2 110 1 16 1 328 1 236 3 275 2 237 1 329 2 22 1 281 1 332 1 333 1 192 1 256 1 243 1 339 3 170 1 244 1 91 1 
252 2 111 1 46 1 343 1 232 1 233 1 207 2 176 1 178 4 125 4 10 1 100 2 213 1 267 2 378 2 
134 1 124 1 320 1 
134 1 124 1 320 1 
134 1 130 1 320 1 33 1 158 1 
134 1 124 1 320 1 
218 1 134 1 320 1 
218 1 134 1 320 1 
218 1 134 1 320 1 
134 1 320 1 
259 1 65 1 
310 1 146 1 263 2 351 1 133 1 59 2 343 1 83 1 274 1 16 2 72 1 85 1 224 1 281 4 332 2 333 8 192 2 337 4 379 3 160 4 
351 1 146 1 310 1 59 2 343 1 83 1 72 1 85 1 224 1 281 3 333 6 306 1 337 3 379 2 
310 1 263 1 146 1 59 1 16 1 274 1 281 2 332 1 192 1 333 4 53 1 337 2 215 1 205 1 283 1 379 2 160 2 
310 1 146 1 59 1 298 2 150 1 274 1 281 4 333 7 88 1 260 1 337 3 53 1 205 1 283 1 379 2 
146 3 310 3 263 2 360 1 174 1 343 1 150 1 72 1 224 2 53 2 205 2 160 4 351 2 133 2 59 5 83 1 298 2 274 4 16 2 63 1 85 1 281 12 332 2 333 23 192 2 88 2 337 11 283 2 379 9 
281 1 333 1 298 1 
333 1 88 1 337 1 
263 1 109 1 146 1 310 1 59 2 16 1 274 1 332 1 281 3 192 1 333 6 53 1 337 3 215 1 205 1 283 1 379 3 160 2 
263 1 146 2 310 2 147 1 2 1 36 1 76 1 53 2 205 2 160 2 112 1 59 1 298 1 327 1 274 1 16 1 281 6 332 1 333 12 192 1 88 1 260 1 337 6 283 2 379 2 
146 1 310 1 351 1 59 1 274 1 85 1 224 1 281 3 333 6 337 3 379 2 
351 1 360 1 263 1 133 1 59 1 83 1 274 1 16 1 72 1 224 1 281 2 332 1 333 3 192 1 337 1 379 2 160 2 
263 1 351 2 146 2 310 2 112 1 59 3 16 1 274 2 85 1 224 2 332 1 281 5 192 1 333 10 337 5 368 1 379 5 160 2 
263 1 146 1 112 1 16 1 274 1 332 1 192 1 333 2 337 2 205 1 379 1 160 2 
310 1 263 1 146 1 112 1 59 1 16 1 274 1 281 2 332 1 192 1 333 4 53 1 337 2 205 1 283 1 379 2 160 2 
360 1 263 3 351 1 133 1 112 1 136 1 59 1 16 3 274 1 224 1 281 2 332 3 333 3 192 3 337 1 379 2 160 6 
360 1 263 5 146 5 310 5 343 1 150 1 72 1 224 3 153 1 53 3 205 3 157 1 55 1 160 10 351 3 133 2 112 1 136 1 59 7 83 1 298 4 16 5 274 5 85 2 281 18 332 5 192 5 333 34 88 3 260 1 337 16 215 1 283 3 379 12 
310 1 146 1 263 1 2 1 343 1 72 1 224 1 160 2 351 1 112 1 59 2 83 1 298 1 16 1 85 1 281 4 332 1 333 8 192 1 88 1 260 1 337 4 379 2 
310 1 263 2 146 2 2 1 343 1 150 1 72 1 224 1 53 1 205 1 160 4 351 1 112 1 59 2 83 1 298 2 16 2 274 1 85 1 281 5 332 2 333 11 192 2 88 1 260 1 337 6 215 1 379 3 
263 3 146 3 310 3 147 1 2 1 343 1 72 1 224 1 36 1 76 1 53 2 205 2 160 6 351 1 133 1 112 1 59 3 83 1 298 1 327 1 274 1 16 3 85 1 281 10 332 3 333 19 192 3 88 1 260 1 337 9 215 1 283 2 379 4 
263 3 146 3 310 2 147 1 2 1 343 1 72 1 224 1 36 1 76 1 53 2 205 2 160 6 351 1 133 1 112 1 59 3 83 1 298 1 327 1 274 2 16 3 85 1 281 7 332 3 333 17 192 3 88 1 260 1 337 10 215 1 283 1 379 5 
310 1 146 1 263 1 2 1 343 1 72 1 224 1 160 2 351 1 112 1 59 2 83 1 298 1 16 1 85 1 281 4 332 1 333 8 192 1 88 1 260 1 337 4 379 2 
263 1 146 2 310 2 147 1 2 1 36 1 76 1 53 2 205 2 160 2 112 1 59 1 298 1 327 1 274 1 16 1 281 6 332 1 333 12 192 1 88 1 260 1 337 6 283 2 379 2 
263 4 146 3 310 2 147 1 2 1 343 1 72 1 224 1 36 1 76 1 53 2 205 2 160 8 351 1 133 2 112 1 59 3 83 1 298 1 327 1 274 2 16 4 85 1 281 8 332 4 333 18 192 4 88 1 260 1 337 10 215 1 283 1 379 5 
263 4 146 3 310 2 147 1 2 1 36 1 76 1 53 3 205 3 160 8 133 2 112 1 136 1 59 3 298 1 327 1 274 3 16 4 281 7 332 4 333 16 192 4 88 1 260 1 337 9 283 2 379 6 
310 1 351 3 146 1 59 3 83 2 274 3 72 1 85 1 224 3 281 4 333 7 337 3 379 6 
263 4 146 3 310 2 147 1 2 1 343 1 72 1 224 1 36 1 76 1 53 2 205 2 160 8 351 1 133 2 112 1 136 1 59 3 83 1 298 1 327 1 274 1 16 4 85 1 281 8 332 4 333 18 192 4 88 1 260 1 337 10 283 1 379 4 
348 1 225 1 236 1 275 1 221 1 339 1 20 1 
353 1 151 1 17 1 275 1 236 1 221 1 20 1 367 1 348 1 225 1 322 1 339 1 
92 1 22 1 110 1 256 1 306 1 50 1 98 1 170 1 315 1 79 1 230 1 
110 1 92 1 235 1 50 1 275 1 236 2 221 1 329 1 98 1 315 1 22 1 182 1 256 1 243 1 339 2 170 1 91 1 244 1 
92 1 50 2 31 1 221 1 315 1 98 1 182 1 75 1 235 1 236 2 275 2 115 1 329 2 191 1 22 1 256 1 305 1 25 1 243 1 339 2 170 3 244 1 91 2 
92 1 0 1 50 2 31 1 221 1 315 2 98 1 99 1 182 1 75 1 235 1 236 2 275 2 115 1 329 2 191 1 22 2 256 2 305 1 25 1 243 1 339 2 170 3 91 2 
110 1 92 1 372 1 290 1 246 1 50 1 30 2 31 1 125 1 62 1 98 1 315 3 22 3 99 1 226 1 165 2 256 3 267 1 257 1 305 1 25 1 170 4 91 1 
110 1 92 1 57 1 290 1 246 1 50 1 30 2 31 1 125 1 62 1 98 1 315 3 22 3 99 1 165 2 256 3 267 1 257 1 305 1 25 1 170 4 91 1 
92 1 22 1 256 1 374 1 98 1 315 1 
219 1 110 2 92 2 81 1 4 1 374 1 123 1 50 2 330 1 64 1 315 6 98 3 22 7 141 1 304 1 240 1 256 7 307 1 242 1 170 3 91 1 
92 1 146 1 343 1 50 1 95 1 346 2 98 1 11 1 350 1 155 1 160 4 351 1 59 2 16 2 19 1 22 1 256 1 307 1 216 1 170 1 263 2 310 1 179 2 221 2 315 1 72 1 182 1 224 1 323 1 326 1 83 1 235 1 275 1 236 2 329 1 278 1 85 1 332 2 281 3 192 2 333 6 337 3 243 1 339 2 379 2 244 1 91 1 
46 1 290 1 220 1 246 1 30 3 125 1 8 1 315 1 10 2 267 1 13 1 40 1 107 1 110 1 111 2 57 1 232 2 207 1 208 1 62 2 301 1 22 1 165 3 256 1 213 2 257 1 335 1 170 2 
92 1 290 1 135 1 374 1 50 1 64 1 315 1 98 2 22 1 68 1 256 1 170 1 91 1 
110 1 92 1 50 1 98 1 315 4 22 4 99 1 256 4 293 1 307 1 170 1 230 1 79 1 
92 1 197 1 123 1 50 1 96 1 97 1 315 2 98 2 22 2 240 1 256 2 305 1 170 1 91 1 
92 1 22 1 110 1 256 1 129 1 138 1 177 1 217 1 98 1 315 1 
92 1 22 2 304 1 256 2 319 1 307 1 50 1 242 1 98 1 170 1 315 2 
110 1 219 1 92 2 4 1 50 2 315 4 98 2 22 5 304 1 256 5 293 1 305 1 307 1 170 3 79 1 230 1 
110 1 92 2 4 1 50 2 315 4 98 2 180 1 22 5 304 1 256 5 293 1 305 1 307 1 170 3 79 1 230 1 
110 1 92 1 0 1 235 1 50 1 275 1 236 2 221 1 329 1 98 1 315 1 22 1 182 1 256 1 243 1 339 2 170 1 91 1 
92 1 123 1 50 1 330 1 64 1 315 1 98 2 22 1 240 1 256 1 305 1 170 1 91 1 
265 1 334 1 27 1 247 1 221 1 
108 1 373 1 265 2 27 1 246 1 30 2 247 2 125 1 115 1 221 1 191 1 292 1 165 2 12 1 267 1 75 1 334 2 40 1 286 1 
265 1 27 1 247 1 275 1 236 1 161 1 248 1 302 1 339 1 
108 1 373 1 27 1 
318 1 313 1 122 1 306 1 
253 1 58 1 318 1 313 1 122 1 93 1 116 1 
66 1 375 1 116 1 
253 3 58 1 93 1 122 1 313 1 116 3 52 1 249 1 212 1 318 1 268 1 359 2 
148 1 253 2 58 1 318 1 313 1 122 1 93 1 362 1 116 2 
35 1 253 1 58 1 342 1 318 1 167 1 93 1 138 1 177 1 116 1 52 1 
253 1 58 1 318 1 313 1 93 1 116 1 52 1 
253 1 58 1 313 2 122 1 93 1 116 1 52 1 
253 2 58 2 313 1 93 2 299 1 116 2 52 1 23 1 318 1 169 1 
253 3 148 2 121 1 58 1 313 1 122 1 93 1 139 1 116 3 52 1 222 1 167 1 318 2 
253 2 148 1 58 1 313 1 122 1 93 1 138 1 177 2 116 2 52 1 35 1 318 1 129 1 144 1 194 1 
253 4 148 2 58 2 313 1 122 1 93 2 362 1 116 4 52 1 222 1 364 1 167 1 318 2 
253 1 58 1 318 1 313 1 122 1 93 1 116 1 52 1 
148 2 253 4 58 1 313 2 122 2 93 1 116 4 249 1 222 1 212 1 167 1 318 3 269 1 359 1 
253 2 173 1 148 1 58 1 313 1 93 1 234 1 122 1 116 2 52 1 331 1 318 1 
253 3 58 1 3 1 93 1 122 1 313 1 116 3 249 1 52 1 212 2 318 1 359 2 
264 2 318 2 262 1 9 1 
253 1 58 1 93 1 145 1 116 1 52 1 
148 1 253 2 121 1 58 1 318 1 313 1 122 1 93 1 116 2 52 1 
14 1 
253 1 58 1 318 1 313 1 122 1 93 1 116 1 52 1 
148 1 253 3 121 1 58 1 93 1 122 1 313 1 116 3 52 1 318 1 359 1 
318 1 167 1 269 1 222 1 
318 1 313 1 

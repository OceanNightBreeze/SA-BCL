#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 2 341 1 128 1 36 1 152 1 342 2 343 2 155 1 212 1 43 5 189 1 349 1 108 2 137 6 136 1 18 1 354 3 194 4 375 1 297 9 335 2 180 1 276 2 252 1 232 9 359 1 34 1 254 2 
64 2 341 1 128 1 36 1 152 1 342 2 343 2 155 1 212 1 43 5 189 1 349 1 108 2 137 6 136 1 18 1 354 3 194 4 375 1 297 9 335 2 180 1 276 2 252 1 232 9 359 1 34 1 254 2 
64 2 341 1 128 1 36 1 152 1 342 2 343 2 155 1 212 1 43 6 189 1 349 1 108 2 137 7 136 1 18 1 354 4 194 5 375 1 297 10 335 2 180 1 276 2 252 1 232 10 359 1 34 1 254 2 
64 2 341 1 128 1 36 1 152 1 342 1 343 2 155 1 212 1 43 4 349 1 108 2 137 4 136 1 18 1 354 2 194 3 375 1 297 7 335 2 180 1 276 2 252 1 232 7 359 1 34 1 254 2 
354 1 128 1 194 2 342 2 343 1 43 3 297 4 375 1 335 1 189 1 349 1 276 1 108 1 232 4 137 3 18 1 254 1 34 1 
47 1 64 1 65 1 155 1 343 1 43 1 305 1 297 2 335 1 349 1 276 1 232 2 18 1 34 1 254 1 359 1 
64 1 354 1 194 1 212 1 43 2 297 3 335 2 349 1 276 2 232 3 137 1 18 1 34 1 
64 1 128 1 36 1 342 2 212 1 343 1 43 5 189 1 349 1 108 1 137 7 136 1 18 1 112 1 113 1 354 3 194 4 297 9 375 1 335 2 276 2 232 9 34 1 254 1 
64 1 128 1 36 1 342 2 212 1 343 1 43 5 189 1 349 1 108 1 137 7 136 1 18 1 112 1 113 1 354 3 194 4 297 9 375 1 335 2 276 2 232 9 34 1 254 1 
147 1 222 1 307 1 
147 1 135 1 373 2 
338 2 145 1 30 2 15 2 86 2 196 1 77 2 211 2 
338 3 237 1 205 1 67 2 86 2 38 1 211 2 154 2 9 1 129 1 347 1 15 2 290 1 17 1 131 2 77 3 190 1 266 1 164 1 292 2 352 1 293 1 80 1 25 2 118 1 97 1 196 1 172 1 145 1 334 1 200 1 273 1 247 1 314 1 30 2 253 1 125 1 
371 1 338 1 303 1 30 1 15 1 86 1 210 1 196 1 77 1 211 1 
338 1 63 1 184 1 362 1 303 1 195 1 8 1 356 1 285 1 147 1 30 1 77 1 105 1 307 1 
338 1 184 1 86 1 303 1 195 1 211 1 8 1 356 2 285 2 147 1 15 1 30 1 77 1 105 1 307 1 
285 1 365 1 220 1 169 1 356 1 
285 2 216 1 365 1 147 1 320 1 307 1 220 1 356 2 
285 1 220 1 356 1 
371 1 338 1 303 1 86 1 210 1 196 1 211 1 356 1 224 1 285 1 365 1 15 1 30 1 77 1 
147 1 
285 2 216 1 365 1 147 1 57 1 307 1 220 1 356 2 
111 1 235 2 317 1 243 1 269 2 121 1 356 5 223 1 285 5 216 1 365 2 147 1 74 1 32 1 181 1 219 2 264 1 307 1 220 2 
145 1 222 1 
338 2 256 1 86 1 211 1 145 2 146 1 30 2 15 1 77 2 
46 1 166 1 52 1 
164 1 338 1 205 1 25 1 97 1 38 1 154 1 172 1 129 1 145 1 273 1 290 1 162 1 131 1 17 1 77 1 
46 1 164 1 338 2 48 1 205 1 25 1 97 1 38 1 211 1 154 1 129 1 172 1 273 1 367 1 15 1 30 1 290 1 17 1 131 1 77 2 
338 3 145 1 48 1 86 1 30 3 15 3 77 3 211 3 
371 1 338 1 303 1 30 1 15 1 77 1 211 1 
338 1 256 1 146 1 303 1 30 1 15 1 86 1 77 1 211 1 
338 4 256 1 237 1 205 1 184 1 67 1 86 2 303 1 38 1 211 3 8 1 154 1 129 1 188 1 285 1 42 1 347 1 15 3 367 1 290 1 17 1 131 1 77 4 190 1 164 1 292 2 48 1 352 1 293 1 80 1 25 1 118 1 97 1 195 1 196 1 356 1 172 1 145 1 334 1 273 1 247 1 314 1 30 3 105 1 
338 2 145 1 48 1 362 1 30 2 15 1 275 1 77 2 211 1 
328 1 338 3 48 2 256 1 184 1 86 1 303 1 195 1 211 3 8 1 356 1 285 1 42 1 147 1 367 1 15 3 30 3 77 3 105 1 
46 1 338 2 48 1 256 1 86 1 52 1 211 2 15 2 30 2 77 2 
164 1 338 1 205 1 25 1 97 1 38 1 154 1 172 1 129 1 145 1 273 1 131 1 17 1 290 1 77 1 
164 1 338 1 25 1 97 1 38 1 154 1 226 1 129 1 145 1 273 1 175 1 131 1 17 1 290 1 77 1 
237 1 151 1 67 4 39 1 158 1 12 1 130 1 347 1 266 2 46 2 292 2 93 1 352 2 80 1 141 1 118 1 166 2 52 2 355 1 334 1 357 1 314 1 148 1 62 1 
338 1 303 1 30 1 15 1 104 1 105 1 77 1 211 1 
338 5 48 2 49 1 256 1 362 1 86 1 211 4 157 1 145 1 15 4 30 5 367 1 275 1 77 5 
371 1 338 2 303 1 30 2 15 2 104 1 77 2 211 2 
215 1 378 1 
215 1 378 1 
4 1 198 1 
4 1 198 1 
4 1 198 1 
215 1 91 1 378 1 
215 1 91 1 378 1 
187 1 215 1 378 1 
215 2 4 1 378 2 327 1 198 1 255 1 
215 1 91 1 378 1 
215 1 378 1 350 1 
215 1 378 1 350 1 
215 1 378 1 350 1 
279 2 221 3 95 1 70 2 167 1 356 2 240 2 88 1 215 2 285 2 171 1 144 1 147 1 13 2 178 1 75 2 378 2 327 1 337 1 
338 2 319 1 279 1 239 1 211 2 240 1 187 1 215 1 285 1 73 1 13 1 325 1 15 2 75 1 77 2 221 1 95 1 356 1 228 1 145 1 30 2 202 1 378 1 60 1 
108 1 343 1 254 1 
47 1 343 1 254 1 
370 1 47 1 71 1 108 2 277 1 254 3 
370 1 47 1 301 1 71 1 108 1 254 2 
370 1 47 1 71 2 108 1 254 2 
235 1 317 2 0 1 319 1 85 1 39 1 285 5 11 2 216 1 73 1 365 4 263 2 160 1 107 1 219 1 135 1 307 1 264 3 220 1 111 1 269 1 244 1 81 1 373 3 356 5 122 2 147 2 357 1 202 1 377 1 148 1 62 1 
235 2 106 1 317 6 0 2 85 1 282 1 39 3 260 1 40 1 285 9 11 6 73 4 216 1 365 7 263 6 160 2 90 1 348 1 219 2 135 3 307 1 264 8 220 6 111 1 269 2 244 3 373 9 169 5 356 9 147 5 357 3 181 1 148 3 380 5 62 3 
235 1 0 1 317 2 39 1 285 3 11 2 73 1 365 2 160 1 263 2 107 1 219 1 307 1 135 2 264 3 269 1 244 1 356 3 373 4 147 3 122 1 357 1 377 1 181 1 148 1 62 1 
235 1 106 1 0 1 317 4 39 2 260 1 285 4 11 4 73 2 365 3 263 4 160 1 90 1 107 1 219 1 307 1 135 3 264 5 269 1 244 2 373 7 356 4 147 4 122 2 357 2 377 1 181 1 148 2 62 2 
3 1 222 1 290 1 
99 1 290 1 
330 1 
290 1 17 1 
176 1 97 1 376 1 3 2 290 3 17 1 
97 1 290 1 17 1 
246 1 290 1 
266 4 352 3 151 2 66 2 67 7 294 1 54 1 259 1 355 3 170 1 284 1 333 1 357 1 288 1 250 1 148 1 124 1 
266 4 352 3 151 2 66 2 67 7 294 1 54 1 259 1 355 3 170 1 284 1 333 1 357 1 288 1 250 1 148 1 124 1 
266 4 352 3 151 2 66 2 67 7 294 1 54 1 259 1 355 3 170 1 284 1 174 1 333 1 357 1 288 1 250 1 148 1 124 1 
340 1 237 1 66 3 151 5 68 1 67 31 39 3 259 1 284 2 347 1 288 2 368 1 44 1 266 16 292 2 24 3 352 15 353 1 26 1 118 1 244 3 294 2 372 4 54 1 120 1 355 10 170 5 333 2 334 1 357 4 250 1 148 4 124 1 62 3 
340 1 237 2 66 2 151 3 67 9 258 1 259 1 284 1 347 2 288 1 289 1 266 5 292 4 352 4 118 2 294 1 355 4 170 1 333 1 334 2 357 1 250 1 148 1 124 1 
64 1 304 1 363 1 38 1 343 1 154 1 43 1 76 1 349 1 131 1 108 1 137 1 18 1 109 1 110 1 164 1 47 1 22 1 25 1 50 1 143 1 297 2 335 1 248 1 276 1 204 1 232 2 277 1 34 1 254 2 
64 1 207 1 304 1 363 1 38 1 343 1 154 1 43 1 349 1 131 1 108 1 137 2 18 1 109 1 110 1 164 1 47 1 22 1 94 1 25 1 50 1 143 1 297 3 335 1 248 1 276 1 232 3 336 1 277 1 254 2 
64 1 363 1 38 1 154 1 343 1 43 1 349 1 131 1 108 1 137 2 18 1 109 1 110 1 164 1 47 1 94 1 25 1 50 1 143 1 297 2 248 1 232 2 336 1 277 1 254 2 
64 2 300 1 207 1 127 1 38 1 363 2 154 1 131 1 161 1 17 1 290 1 109 2 291 1 164 1 25 1 50 2 270 1 273 1 297 1 335 1 276 1 232 1 381 1 
64 1 304 1 363 1 38 1 343 1 154 1 76 1 131 1 108 1 109 1 110 1 164 1 47 1 22 1 94 1 25 1 50 1 143 1 297 1 335 1 248 1 276 1 232 1 277 1 34 1 254 2 
16 1 
299 2 338 1 63 1 339 1 69 2 303 1 154 2 8 1 213 2 216 3 306 1 160 1 17 1 161 1 219 1 77 1 307 1 264 2 220 6 164 1 111 1 269 1 25 2 27 2 356 5 225 1 273 2 82 1 30 1 31 1 316 2 235 1 126 1 317 2 184 1 281 2 362 1 38 1 37 1 322 1 285 5 323 2 287 1 131 2 290 1 135 2 329 1 191 4 195 1 295 1 197 1 373 2 147 2 105 1 381 1 
338 1 126 1 63 1 339 1 184 1 362 1 303 1 8 1 213 1 285 3 216 1 77 1 220 2 329 1 191 2 195 1 197 1 356 3 82 1 30 1 57 1 105 1 
338 1 126 1 63 1 339 1 184 1 362 1 303 1 8 1 285 3 216 1 77 1 307 1 220 1 329 1 191 3 27 1 195 1 197 1 356 3 147 1 82 1 30 1 57 1 105 1 
338 1 126 1 63 1 339 1 184 1 362 1 303 1 8 1 213 1 285 3 216 1 323 1 77 1 307 1 220 2 329 1 191 3 27 1 195 1 197 1 356 3 147 1 82 1 30 1 57 1 105 1 
299 2 235 1 126 1 338 1 63 1 339 1 317 1 184 1 69 2 302 1 281 2 362 1 303 1 8 1 213 4 285 5 216 3 323 4 219 1 77 1 135 2 163 1 264 1 307 5 220 7 111 1 269 1 329 1 191 6 193 1 27 4 195 1 197 1 225 1 356 5 147 5 82 1 315 1 30 1 31 1 57 1 105 1 251 1 316 2 
338 1 299 2 339 1 63 1 69 2 303 1 8 1 213 2 216 2 77 1 219 1 264 1 307 1 220 4 111 1 269 1 27 2 225 1 356 4 82 1 30 1 31 1 316 2 235 1 126 1 317 1 184 1 362 1 281 2 285 4 323 2 135 2 191 4 329 1 195 1 197 1 295 1 373 2 147 2 105 1 
299 2 338 1 126 1 235 1 63 1 339 1 317 1 184 1 69 2 302 1 281 2 362 1 303 1 8 1 213 2 285 4 216 2 323 2 219 1 77 1 307 1 135 2 163 1 264 1 220 4 111 1 329 1 191 4 269 1 193 1 27 2 195 1 197 1 225 1 356 4 147 1 82 1 30 1 31 1 105 1 316 2 
299 2 338 1 126 1 235 1 63 1 339 1 317 1 184 1 69 2 302 1 281 2 362 1 303 1 8 1 213 2 285 4 216 2 323 2 219 1 77 1 307 1 135 2 163 1 264 1 220 4 111 1 329 1 191 4 269 1 193 1 27 2 195 1 197 1 225 1 356 4 147 1 82 1 30 1 31 1 105 1 316 2 
299 2 338 1 126 1 235 1 63 1 339 1 317 1 184 1 257 1 281 2 362 1 303 1 8 1 213 2 285 4 216 2 323 2 133 2 219 1 77 1 307 1 163 1 264 1 220 4 78 2 111 1 329 1 191 4 269 1 27 2 331 1 195 1 197 1 373 2 356 4 147 1 177 1 82 1 30 1 31 1 105 1 
299 2 235 1 338 1 126 1 63 1 339 1 317 1 184 1 69 2 302 1 281 2 362 1 303 1 8 1 213 3 285 4 216 2 323 3 219 1 77 1 307 1 135 2 163 1 264 1 220 5 111 1 269 1 329 1 191 5 193 1 27 3 195 1 197 1 225 1 356 4 147 1 82 1 30 1 315 1 31 1 105 1 316 2 
299 2 235 1 338 1 126 1 63 1 339 1 317 1 184 1 69 2 302 1 281 2 362 1 303 1 8 1 213 3 285 4 216 2 323 3 219 1 77 1 307 1 135 2 163 1 264 1 220 5 111 1 269 1 329 1 191 5 193 1 27 3 195 1 197 1 225 1 356 4 147 1 82 1 30 1 315 1 31 1 105 1 316 2 
338 1 299 2 339 1 63 1 303 1 8 1 213 2 216 2 77 1 219 1 264 1 307 1 78 2 220 4 111 1 269 1 27 2 356 4 177 1 82 1 30 1 31 1 235 1 126 1 317 1 184 1 362 1 281 2 285 4 323 2 133 2 191 4 329 1 195 1 197 1 295 1 373 2 147 1 105 1 
237 1 151 2 66 1 67 6 259 1 284 1 130 1 347 1 46 1 266 3 292 2 352 3 80 1 118 1 222 1 166 1 52 1 355 2 145 2 333 1 334 1 357 1 314 1 250 1 148 1 124 1 
151 1 237 2 67 14 280 1 39 1 347 2 368 1 19 1 46 11 266 8 292 4 352 6 24 3 293 1 80 1 353 1 118 2 244 2 309 1 166 11 372 3 53 1 52 4 355 2 170 1 145 1 334 2 357 2 314 2 231 1 148 1 125 1 62 2 
338 2 205 1 237 1 67 2 280 1 38 1 211 1 154 1 345 1 129 1 347 1 15 1 367 1 290 1 17 1 131 1 162 1 77 2 164 1 266 1 292 2 165 1 48 1 352 1 293 1 25 1 80 1 97 1 118 1 52 1 172 1 245 1 145 1 334 1 273 1 314 1 30 1 125 1 
338 3 66 1 151 4 205 2 67 20 209 1 259 1 211 1 6 2 154 3 347 3 15 1 217 2 17 2 77 3 164 2 266 10 79 1 352 10 25 3 80 3 118 3 166 7 168 2 271 2 355 8 170 4 172 2 273 1 357 3 30 1 314 3 124 1 182 1 125 1 237 3 280 1 38 2 39 2 284 1 129 2 367 1 131 3 290 2 46 7 292 6 48 1 94 1 293 1 97 2 244 2 52 7 145 2 333 1 334 3 247 2 250 1 148 3 62 2 
338 1 237 2 67 2 208 1 38 2 211 1 154 8 156 1 9 2 130 1 347 2 15 1 290 3 131 8 161 1 17 2 77 1 267 1 164 2 266 1 92 1 292 4 48 1 352 1 94 1 293 1 25 7 80 2 118 2 310 1 227 1 296 1 334 2 273 2 30 1 314 2 204 1 381 1 125 1 
338 1 256 1 151 1 237 1 67 3 280 1 86 1 39 1 211 1 347 1 15 1 77 1 46 1 266 1 292 2 23 1 352 2 80 1 118 1 244 1 166 1 52 1 355 1 334 1 357 1 314 1 30 1 148 1 62 1 
46 1 266 2 292 2 237 1 67 2 80 1 118 1 166 1 52 1 355 1 170 1 334 1 12 1 130 1 347 1 357 1 314 1 62 1 
46 1 292 2 151 1 237 1 352 2 67 2 80 1 118 1 166 1 39 1 52 1 355 1 158 1 334 1 130 1 347 1 314 1 148 1 
46 2 266 2 292 2 151 1 352 2 237 1 67 4 80 1 118 1 244 1 166 2 39 1 52 2 355 2 170 1 334 1 130 1 347 1 357 1 314 1 148 1 62 1 
46 1 266 2 292 2 237 1 67 2 80 1 118 1 166 1 52 1 355 1 170 1 296 1 334 1 12 1 347 1 357 1 314 1 62 1 
46 1 292 2 151 1 237 1 352 2 67 2 80 1 118 1 166 1 39 1 52 1 355 1 158 1 296 1 334 1 347 1 314 1 148 1 
237 1 151 1 67 4 39 1 347 1 266 2 46 2 292 2 352 2 80 1 244 1 118 1 166 2 52 2 355 2 170 1 296 1 334 1 357 1 314 1 148 1 62 1 
46 2 266 2 292 2 151 1 352 2 237 1 67 4 80 1 118 1 244 1 166 2 39 1 52 2 355 2 170 1 334 1 347 1 357 1 314 1 148 1 62 1 
338 1 205 1 237 1 67 2 38 1 154 1 129 1 347 1 17 1 131 1 290 1 77 1 266 1 164 1 292 2 352 1 293 1 25 1 80 1 97 1 118 1 172 1 145 1 334 1 273 1 247 1 314 1 125 1 
338 1 237 1 67 2 38 1 154 1 129 1 347 1 17 1 131 1 290 1 77 1 266 1 164 1 292 2 352 1 293 1 25 1 80 1 97 1 118 1 226 1 28 1 145 1 334 1 175 1 273 1 314 1 125 1 
46 2 266 2 292 2 151 1 352 2 237 1 67 4 280 1 80 1 118 1 244 1 166 2 39 1 52 2 355 2 170 1 334 1 347 1 357 1 314 1 148 1 62 1 
338 1 151 1 205 1 237 1 67 4 39 1 38 1 154 1 129 1 347 1 131 1 17 1 290 1 77 1 46 2 266 2 164 1 292 2 352 2 25 1 80 1 97 1 118 1 244 1 166 2 52 2 271 1 355 2 170 1 172 1 334 1 357 1 247 1 314 1 148 1 204 1 62 1 
338 1 256 1 237 1 361 1 67 3 280 1 86 1 39 1 211 1 347 1 15 1 77 1 266 2 46 1 292 2 352 1 80 1 118 1 244 1 166 1 52 1 355 1 170 1 334 1 357 1 314 1 30 1 148 1 62 1 
340 1 151 3 66 1 67 41 206 1 259 1 347 3 266 20 24 3 352 21 353 1 118 3 119 2 355 7 170 4 357 5 29 1 124 1 233 1 84 1 236 1 318 1 237 3 186 1 39 4 87 1 284 1 241 1 289 1 368 3 134 1 292 6 244 4 98 1 372 4 55 1 333 1 334 3 249 4 250 1 148 5 58 1 62 4 
340 2 151 4 66 1 67 38 206 1 259 1 347 4 266 20 24 3 352 18 353 1 118 4 119 2 355 7 170 3 357 5 29 1 124 1 233 1 84 1 236 1 318 1 237 4 186 1 39 3 87 1 284 1 241 1 289 1 368 3 134 1 292 8 244 4 98 1 372 4 55 1 333 1 334 4 249 4 250 1 148 4 58 1 62 4 
84 1 340 1 318 1 236 1 66 1 151 7 237 2 206 1 67 52 186 1 39 7 259 1 284 1 241 1 347 2 368 2 289 1 134 1 266 27 292 4 352 25 24 4 353 2 118 2 244 7 309 2 119 1 372 4 98 1 355 14 55 1 170 7 333 1 334 2 29 1 357 8 250 1 249 4 148 8 124 1 58 1 62 7 
151 3 237 2 67 19 186 1 153 1 39 3 87 1 347 2 368 1 289 1 134 2 266 9 292 4 352 10 24 1 353 1 118 2 244 3 119 1 372 2 98 1 355 6 55 1 170 3 334 2 29 1 357 3 249 2 148 3 62 3 
84 1 340 2 236 1 318 1 151 1 237 3 206 1 67 26 186 1 39 2 241 1 347 3 289 1 368 2 134 1 266 14 292 6 352 12 24 2 118 3 244 3 119 2 98 1 372 2 355 2 55 2 170 1 334 3 29 1 357 3 249 4 148 2 58 1 62 3 
88 1 215 1 144 1 279 1 13 1 358 1 75 1 378 1 327 1 240 1 
187 1 60 1 
215 1 268 1 364 1 279 1 13 1 75 1 378 1 61 1 240 1 
279 1 221 2 95 1 70 1 167 1 356 1 240 1 88 1 285 1 215 1 171 1 144 1 147 1 13 1 75 1 378 1 327 1 337 1 
279 1 221 2 95 1 70 1 167 1 356 1 240 1 88 1 285 1 215 1 171 1 144 1 147 1 13 1 75 1 378 1 327 1 337 1 
279 1 221 2 95 1 70 1 167 1 356 1 240 1 88 1 285 1 215 1 171 1 144 1 147 1 13 1 75 1 378 1 327 1 337 1 
96 1 91 1 255 1 
96 1 91 1 255 1 
350 1 149 1 
350 1 255 1 149 1 
239 1 228 1 
338 2 360 1 319 1 279 1 239 1 70 1 211 2 240 1 187 1 285 1 215 1 73 1 365 1 13 1 325 1 75 1 15 2 77 2 221 1 356 1 228 1 171 1 145 1 30 2 202 1 378 1 60 1 
96 1 91 1 
350 1 255 1 149 1 
234 1 338 2 237 1 67 2 280 1 38 1 154 2 156 1 344 1 9 2 346 1 347 1 369 1 290 1 17 1 131 2 77 2 164 1 266 1 292 2 352 1 293 1 80 1 25 2 118 1 227 1 334 1 314 1 30 2 150 1 125 1 
47 1 164 1 110 1 94 1 114 1 25 2 304 1 38 1 311 1 143 1 343 1 154 2 214 1 131 2 108 1 204 1 277 1 254 2 109 1 
47 1 110 1 164 1 94 1 192 1 114 1 25 1 304 1 38 1 143 1 343 1 154 1 131 1 108 1 277 1 254 2 109 1 
164 1 127 1 25 1 38 1 154 1 214 1 273 1 262 1 290 1 17 1 131 1 161 1 381 1 109 1 
47 1 110 1 164 1 94 1 114 1 25 1 304 1 38 1 311 1 143 1 343 1 154 1 214 1 131 1 108 1 277 1 254 2 109 1 
242 1 
317 1 243 1 147 1 74 1 222 1 264 1 307 1 
235 1 317 1 69 1 285 1 216 1 219 1 135 1 264 1 307 1 220 1 111 1 269 1 225 1 373 1 356 1 147 2 316 1 
3 2 154 3 72 2 11 6 216 3 261 2 74 1 306 1 160 2 263 6 218 1 17 3 219 4 307 2 264 9 220 5 21 1 164 3 111 4 351 2 269 4 25 3 168 2 356 5 230 2 273 1 123 2 357 2 33 1 235 4 317 8 38 4 39 2 285 5 326 1 89 1 290 10 131 3 135 6 138 2 243 1 97 3 244 2 195 2 373 12 99 3 56 2 246 2 102 2 147 8 376 1 148 2 204 1 62 2 
84 1 235 2 236 1 317 5 318 1 206 1 39 2 285 1 11 5 216 1 159 1 324 1 306 1 160 1 263 5 368 1 219 2 264 8 135 3 307 2 220 1 111 2 351 1 24 1 269 2 244 2 372 1 356 1 373 6 147 5 123 2 357 2 148 2 58 1 62 2 
338 1 235 1 317 2 303 1 86 1 210 1 211 1 284 1 285 1 15 1 77 1 219 1 264 2 371 1 111 1 351 1 269 1 193 1 196 1 356 1 224 1 333 1 123 2 357 2 179 1 30 1 250 1 148 1 
111 1 235 1 317 1 243 1 269 1 147 1 74 1 219 1 307 1 264 1 
351 1 317 5 244 2 168 1 39 2 373 10 11 5 147 5 123 2 357 2 263 5 148 2 135 5 264 5 62 2 
285 1 216 1 147 1 307 1 356 1 220 1 
235 2 317 2 38 1 154 4 322 1 285 3 216 2 287 1 89 2 160 2 306 2 290 1 17 1 218 1 131 4 161 1 219 2 264 2 220 4 164 1 111 1 269 2 25 4 356 3 199 1 273 2 83 1 181 1 381 1 
338 3 237 1 205 1 67 1 86 2 38 1 211 2 154 1 129 1 347 1 15 2 131 1 17 1 290 1 77 3 190 1 164 1 292 2 352 1 293 1 25 1 80 1 118 1 97 1 196 1 172 1 145 1 334 1 273 1 247 1 30 2 314 1 
111 1 235 1 317 2 66 1 269 1 373 4 11 2 147 4 263 2 160 1 306 1 219 1 135 2 264 1 307 2 
279 1 283 1 240 1 
279 1 283 1 240 1 
144 1 279 1 239 1 20 1 240 1 
279 1 283 1 240 1 
279 1 321 1 240 1 
279 1 321 1 240 1 
279 1 321 1 240 1 
279 1 240 1 
215 1 378 1 
236 1 66 1 237 1 151 2 67 8 259 1 284 1 347 1 368 1 289 1 266 4 292 2 24 1 352 4 118 1 372 1 355 2 333 1 334 1 357 1 250 1 148 1 124 1 
236 1 66 1 151 2 237 2 1 1 67 11 259 1 284 1 347 2 368 1 289 1 266 6 292 4 352 5 24 1 353 1 118 2 244 1 372 2 355 3 170 1 333 1 334 2 357 2 250 1 148 1 124 1 62 1 
84 1 340 1 236 1 318 1 66 1 1 1 237 3 151 3 67 19 206 1 39 2 259 1 284 1 347 3 368 1 289 1 266 9 292 6 24 1 352 10 118 3 244 2 372 1 355 4 170 1 333 1 334 3 357 3 250 1 148 3 124 1 58 1 62 2 
84 1 340 1 236 1 318 1 66 1 1 1 237 3 151 3 67 17 206 1 39 1 259 1 284 1 347 3 368 1 289 1 266 10 292 6 24 1 352 7 118 3 244 2 372 1 355 5 170 2 333 1 334 3 357 3 250 1 148 2 124 1 58 1 62 2 
236 1 66 1 237 1 151 2 67 8 259 1 284 1 347 1 368 1 289 1 266 4 292 2 24 1 352 4 118 1 372 1 355 2 333 1 334 1 357 1 250 1 148 1 124 1 
84 1 236 1 318 1 237 1 151 1 67 12 206 1 39 2 347 1 368 1 289 1 266 6 292 2 24 1 352 6 118 1 244 2 372 1 355 2 170 1 334 1 357 2 148 2 58 1 62 2 
84 1 340 2 236 1 318 1 66 1 1 1 237 4 151 3 206 1 67 18 39 1 259 1 284 1 347 4 368 1 289 1 266 10 292 8 352 8 24 1 118 4 244 2 372 1 355 5 170 2 333 1 334 4 357 3 250 1 148 2 124 1 58 1 62 2 
84 1 340 2 236 1 318 1 237 4 151 3 206 1 67 16 39 2 87 1 347 4 368 1 289 1 266 9 292 8 352 7 24 1 118 4 244 3 372 1 355 6 170 3 334 4 357 3 148 2 58 1 62 3 
266 3 352 4 151 3 67 7 259 1 355 6 170 3 284 3 333 3 357 1 250 1 148 1 124 2 
84 1 340 2 236 1 318 1 66 1 237 4 151 3 206 1 67 18 39 1 259 1 87 1 284 1 347 4 368 1 289 1 266 10 292 8 352 8 24 1 118 4 244 2 372 1 355 4 170 1 333 1 334 4 357 3 250 1 148 2 124 1 58 1 62 2 
266 4 292 4 340 1 66 1 352 4 151 2 237 2 67 8 118 2 259 1 355 3 170 1 284 1 333 1 334 2 357 1 347 2 250 1 148 1 124 1 
266 3 66 1 352 3 151 2 67 6 222 1 259 1 355 2 284 1 333 1 357 1 250 1 148 1 124 1 
266 2 292 2 151 1 352 2 1 1 237 1 67 4 118 1 244 1 39 1 355 2 170 1 334 1 347 1 357 1 148 1 62 1 
266 3 151 1 352 4 24 1 67 7 353 1 244 1 39 1 372 2 355 2 170 1 357 1 368 1 148 1 62 1 
340 2 66 1 151 5 237 2 67 23 39 2 259 1 284 2 347 2 19 1 266 11 292 4 24 2 352 12 353 1 244 2 118 2 309 1 372 2 355 9 170 4 272 1 333 2 334 2 357 3 250 1 148 3 124 1 62 2 
352 1 67 1 372 1 
266 1 24 1 67 1 
266 3 292 2 237 1 1 1 352 3 151 2 67 6 118 1 244 1 168 1 39 1 355 3 170 1 334 1 347 1 357 1 148 1 62 1 
84 1 236 1 318 1 237 1 151 1 67 12 206 1 39 2 347 1 368 1 289 1 266 6 292 2 24 1 352 6 118 1 244 2 372 1 355 2 170 1 334 1 357 2 148 2 58 1 62 2 
266 3 352 3 151 1 67 6 355 2 170 1 284 1 333 1 357 1 250 1 148 1 
266 1 292 2 340 1 151 1 352 2 237 1 67 3 118 1 259 1 355 2 170 1 284 1 272 1 333 1 334 1 347 1 124 1 
266 5 292 2 237 1 151 3 352 5 67 10 118 1 355 5 170 2 284 2 333 2 334 1 347 1 357 2 289 1 179 1 250 1 148 2 
266 2 292 2 237 1 67 2 118 1 355 1 170 1 334 1 347 1 357 1 289 1 62 1 
266 2 292 2 151 1 352 2 237 1 67 4 118 1 244 1 39 1 355 2 170 1 334 1 347 1 357 1 289 1 148 1 62 1 
266 1 292 6 340 1 352 2 237 3 151 1 67 3 118 3 355 2 87 1 170 1 284 1 272 1 333 1 334 3 347 3 289 1 
340 2 66 1 1 1 237 5 151 7 67 34 39 3 259 1 87 1 284 3 347 5 368 1 289 1 44 1 266 16 292 10 352 18 24 3 26 1 353 1 118 5 244 3 372 4 120 1 355 12 170 5 272 1 333 3 334 5 357 5 250 2 148 5 124 1 62 3 
338 1 145 1 185 1 30 1 362 1 275 1 77 1 
338 1 185 1 362 1 51 1 374 1 145 1 30 1 275 1 132 1 77 1 278 1 308 1 
164 1 273 1 25 1 222 1 38 1 290 1 17 1 161 1 131 1 154 1 381 1 
164 1 338 2 48 1 25 1 97 1 38 1 211 1 154 1 129 1 172 1 145 1 273 1 15 1 30 1 290 1 17 1 131 1 77 2 
338 2 303 1 38 1 211 1 154 1 8 1 129 1 89 1 15 2 131 1 17 2 290 3 77 2 164 1 48 1 138 1 25 1 97 2 172 1 145 1 246 1 30 2 105 1 
338 2 303 1 38 1 211 1 154 2 8 1 129 1 89 1 15 2 131 2 17 2 290 3 77 2 164 1 48 1 138 1 25 2 97 2 226 1 145 1 246 1 201 1 30 2 105 1 
164 1 138 1 25 3 97 1 3 1 195 1 5 1 38 1 332 1 154 3 356 2 99 1 285 2 246 1 273 1 147 1 201 1 89 1 17 1 131 3 290 4 307 1 220 1 
164 1 138 1 25 3 97 1 3 1 195 1 38 1 154 3 356 2 72 1 99 1 285 2 246 1 273 1 147 1 201 1 89 1 17 1 131 3 290 4 307 1 220 1 
164 1 208 1 25 1 38 1 131 1 154 1 
267 1 164 2 92 1 94 1 208 1 25 6 97 1 310 1 142 1 38 3 154 7 156 1 9 1 229 1 273 2 376 1 131 7 17 2 290 3 204 1 59 1 
338 2 205 1 151 2 66 1 67 6 211 1 259 1 154 1 347 2 15 1 217 1 17 1 77 2 164 1 266 3 352 3 25 1 80 2 118 2 166 1 271 1 355 2 172 1 357 1 30 1 314 2 124 1 237 2 280 1 38 1 129 1 284 1 369 1 131 1 290 1 46 1 292 4 48 1 97 1 52 1 145 2 333 1 334 2 247 1 250 1 148 1 204 1 
235 2 317 1 3 1 154 1 72 1 285 3 216 1 365 1 74 1 218 1 131 1 290 2 219 2 264 1 307 1 220 2 111 2 243 1 269 2 25 1 195 1 356 3 99 1 56 1 102 1 230 1 147 1 273 1 
164 1 208 1 25 2 97 1 3 1 38 2 154 2 376 1 131 2 17 1 290 2 204 1 33 1 
164 1 25 4 38 1 154 4 313 1 273 1 201 1 131 4 161 1 17 1 290 1 204 1 381 1 
164 1 79 1 25 2 117 1 97 1 142 1 38 2 154 2 89 1 131 2 17 1 290 1 265 1 59 1 
47 1 164 1 110 1 273 1 25 1 38 1 131 1 343 1 154 1 254 1 
164 1 346 1 94 1 25 2 38 1 290 1 17 1 131 2 154 2 204 1 156 1 
164 2 92 1 25 4 310 1 38 2 154 5 156 1 313 1 273 1 89 1 161 1 131 5 17 2 290 3 204 1 381 1 
164 2 92 1 25 4 38 2 154 5 156 1 101 1 313 1 273 1 89 1 161 1 131 5 17 2 290 3 204 1 381 1 
164 1 338 2 48 1 25 1 97 1 38 1 211 1 154 1 226 1 129 1 145 1 273 1 15 1 30 1 290 1 17 1 131 1 77 2 
164 1 25 1 97 1 142 1 38 2 154 1 229 1 89 1 376 1 131 1 17 1 290 1 59 1 
234 1 338 1 238 1 344 1 312 1 103 1 30 1 77 1 150 1 
35 1 103 1 274 1 
173 1 312 1 145 1 103 1 238 1 
35 1 184 1 238 2 303 1 195 1 8 1 356 2 285 2 312 2 173 2 145 1 42 1 103 1 365 1 147 1 274 1 14 1 105 1 307 1 
43 1 222 1 349 1 18 1 
43 1 297 1 335 1 349 1 276 1 232 1 18 1 
64 1 363 1 232 1 
115 1 155 2 41 1 43 1 297 3 335 1 276 1 203 1 349 1 232 3 18 1 34 1 
43 1 297 2 335 1 349 1 342 1 276 1 137 1 232 2 18 1 
43 1 375 1 297 1 335 1 194 1 276 1 108 1 343 1 232 1 254 1 34 1 
43 1 297 1 335 1 349 1 276 1 232 1 34 1 
297 1 335 1 349 2 276 1 232 1 18 1 34 1 
45 1 183 1 10 1 43 1 297 2 335 2 349 1 276 2 232 2 34 1 
354 1 36 1 194 1 43 2 297 3 335 1 349 1 276 1 232 3 136 1 137 2 18 1 34 1 
47 1 343 1 43 1 297 2 335 1 349 1 276 1 298 1 108 1 232 2 137 1 18 1 277 1 254 2 34 1 
354 1 194 1 342 1 43 2 297 4 335 2 189 1 349 1 276 2 232 4 137 2 18 1 34 1 
43 1 297 1 335 1 349 1 276 1 232 1 18 1 34 1 
115 1 354 1 194 1 155 1 100 1 43 3 297 4 335 1 203 1 349 2 276 1 137 2 232 4 18 2 
112 1 116 1 286 1 43 1 297 2 335 1 349 1 276 1 232 2 137 1 18 1 34 1 
115 1 155 2 43 1 366 1 297 3 335 1 276 1 203 2 349 1 232 3 18 1 34 1 
139 1 43 2 140 2 2 1 
297 1 335 1 276 1 379 1 232 1 34 1 
43 1 297 2 36 1 335 1 349 1 276 1 137 1 232 2 18 1 34 1 
7 1 
43 1 297 1 335 1 349 1 276 1 232 1 18 1 34 1 
36 1 155 1 43 1 297 3 335 1 276 1 349 1 137 1 232 3 18 1 34 1 
100 1 43 1 354 1 194 1 
43 1 349 1 

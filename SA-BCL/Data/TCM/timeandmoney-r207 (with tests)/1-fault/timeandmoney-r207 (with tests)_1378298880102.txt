#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
348 1 173 1 300 1 339 2 39 3 281 1 232 1 341 1 163 1 264 2 292 1 7 2 335 3 
73 1 130 1 252 2 300 4 339 5 232 2 341 3 163 1 60 1 7 2 31 2 374 1 348 6 173 1 66 1 123 1 39 9 281 1 91 1 378 2 11 1 287 1 247 1 264 2 290 2 18 1 292 1 335 9 
73 1 130 1 252 2 300 4 339 5 232 2 341 3 163 1 60 1 7 2 31 2 374 1 348 6 173 1 66 1 123 1 39 9 281 1 91 1 378 2 11 1 287 1 247 1 264 2 290 2 18 1 292 1 335 9 
73 1 130 1 252 2 300 5 339 6 232 2 341 4 163 1 60 1 7 2 31 2 374 1 348 7 173 1 66 1 123 1 39 10 281 1 91 1 378 2 11 1 287 1 247 1 264 2 290 2 18 1 292 1 335 10 
73 1 130 1 252 1 300 3 339 4 232 2 341 2 163 1 7 2 31 2 374 1 348 4 173 1 66 1 123 1 39 7 281 1 91 1 378 2 11 1 287 1 247 1 264 2 290 2 18 1 292 1 335 7 
374 1 348 3 252 2 173 1 300 2 339 3 39 4 378 1 341 1 163 1 264 1 60 1 290 1 18 1 292 1 7 1 31 1 335 4 
173 1 122 1 339 1 39 2 232 1 163 1 162 1 247 1 287 1 264 1 290 1 292 1 7 1 250 1 335 2 31 1 
252 2 300 4 339 5 232 1 341 3 163 1 60 1 166 1 7 2 31 1 326 1 374 1 348 7 173 1 66 1 123 1 281 1 39 9 378 1 264 2 18 1 290 1 292 1 335 9 
252 2 300 4 339 5 232 1 341 3 163 1 60 1 166 1 7 2 31 1 326 1 374 1 348 7 173 1 66 1 123 1 281 1 39 9 378 1 264 2 18 1 290 1 292 1 335 9 
266 1 63 1 277 1 121 1 68 1 255 1 53 1 84 1 324 1 380 1 57 1 14 1 59 1 215 1 
4 1 
266 2 316 1 191 1 4 1 277 2 5 1 215 1 50 1 
266 5 75 1 277 5 50 1 353 1 280 2 315 1 3 1 316 2 24 1 56 1 356 2 4 1 249 1 5 1 215 2 259 2 72 1 371 1 
4 1 50 1 302 1 
4 1 206 1 150 2 
53 2 63 2 84 2 324 2 380 2 349 1 14 2 57 1 
155 1 76 2 48 1 204 1 132 2 157 1 365 1 134 1 211 1 184 1 53 2 84 3 324 2 27 1 57 1 306 1 146 1 370 2 85 2 63 2 9 1 169 1 148 1 240 1 349 1 350 1 120 1 41 1 95 1 380 2 226 2 14 3 318 1 17 1 179 1 321 1 44 1 
68 1 53 1 63 1 255 1 84 1 324 1 380 1 14 1 57 1 121 1 
217 1 266 1 347 1 277 1 50 1 323 1 68 1 84 1 25 1 4 1 380 1 12 1 14 1 345 1 
63 1 217 1 266 2 277 2 50 1 323 1 68 1 53 1 84 1 324 1 25 1 4 1 380 1 12 1 14 1 
266 1 316 1 277 1 343 1 215 1 
266 2 316 1 94 1 4 1 277 2 5 1 215 1 50 1 
266 1 316 1 277 1 
63 1 349 2 53 1 84 2 153 1 324 1 380 2 14 2 201 1 
286 1 307 1 128 1 
155 1 76 1 9 1 169 1 65 1 132 1 349 1 350 1 157 1 84 1 14 1 17 1 179 1 146 1 44 1 370 1 
349 1 302 1 
155 1 9 1 76 1 169 1 132 1 278 1 350 1 157 1 182 1 53 1 84 2 324 1 380 1 14 2 17 1 307 1 146 1 179 1 44 1 370 1 
63 1 53 3 84 3 324 3 380 3 349 1 14 3 182 1 
68 1 53 1 84 1 324 1 380 1 14 1 121 1 
68 1 53 1 63 1 84 1 324 1 153 1 380 1 14 1 201 1 
155 1 266 1 76 1 48 1 204 1 132 1 78 1 157 1 365 1 182 1 134 1 211 1 323 1 53 3 84 4 324 3 25 1 27 1 58 1 57 1 146 1 370 1 85 1 9 1 217 1 63 2 169 1 148 1 277 1 349 1 278 1 350 1 68 1 95 1 153 1 380 3 12 1 226 2 14 4 318 1 17 1 179 1 321 1 44 1 
53 1 42 1 84 2 347 1 324 1 380 2 349 1 14 2 182 1 
63 1 266 1 217 1 277 1 278 1 182 2 323 1 68 1 53 3 84 3 153 1 324 3 25 1 4 1 12 1 380 3 14 3 58 1 144 1 
63 1 182 1 53 2 84 2 153 1 324 2 380 2 14 2 307 1 128 1 
155 1 76 1 9 1 169 1 132 1 349 1 350 1 157 1 84 1 14 1 17 1 179 1 146 1 370 1 44 1 
298 1 155 1 76 1 9 1 169 1 132 1 349 1 350 1 157 1 84 1 14 1 228 1 17 1 370 1 44 1 
85 4 170 1 148 2 204 1 240 2 231 1 208 1 134 1 352 1 211 1 354 1 305 1 242 1 286 2 95 1 43 1 139 1 27 1 226 2 257 1 307 2 154 1 128 2 321 1 
323 1 68 1 53 1 84 1 373 1 324 1 380 1 14 1 
63 1 46 1 347 1 349 1 278 1 182 2 53 4 42 1 84 5 324 4 153 1 380 5 14 5 202 1 
68 1 53 2 373 1 84 2 324 2 380 2 14 2 121 1 
165 1 98 1 61 1 
223 1 273 1 98 2 152 1 115 1 61 2 
98 1 61 1 
98 1 61 1 
152 1 115 1 
152 1 115 1 
152 1 115 1 
98 1 253 1 61 1 
98 1 253 1 61 1 
98 1 253 1 61 1 
98 1 183 1 61 1 
98 1 183 1 61 1 
98 1 183 1 61 1 
118 1 266 2 277 2 338 1 312 1 233 2 90 3 210 1 377 1 111 2 4 1 225 2 214 1 273 1 308 1 98 2 263 2 291 2 61 2 
336 1 266 1 267 1 233 1 53 2 111 1 84 2 324 2 342 1 272 1 165 1 61 1 277 1 349 1 312 1 90 1 245 1 380 2 246 1 14 2 16 1 263 1 98 1 291 1 
378 1 310 1 162 1 220 2 31 2 
378 1 290 1 31 1 
162 1 290 1 31 1 
378 2 310 1 218 1 162 1 220 1 31 3 
378 1 310 1 162 1 127 1 220 1 31 2 
266 5 206 1 267 1 50 1 79 2 158 2 305 1 2 1 188 1 55 1 24 3 4 2 164 1 272 1 257 1 5 1 215 4 259 1 372 1 277 5 150 3 280 1 353 1 196 1 315 2 316 1 317 2 43 1 356 1 16 1 154 1 129 1 
297 1 266 9 205 1 206 3 50 1 79 6 254 5 305 3 188 2 24 8 4 5 343 5 257 3 215 7 5 1 259 2 145 1 372 1 277 9 149 1 150 9 353 1 280 2 196 3 176 1 331 1 315 6 316 6 317 6 43 3 356 2 16 4 154 3 72 1 129 2 
266 3 206 2 50 1 79 2 158 1 305 1 188 1 55 1 24 3 4 3 164 1 215 2 257 1 259 1 277 3 150 4 280 1 196 1 315 2 317 2 43 1 356 1 16 1 154 1 72 1 129 1 
266 4 205 1 206 3 50 1 79 4 158 2 305 2 188 1 55 1 24 5 4 4 164 1 215 3 257 2 259 1 145 1 277 4 150 7 280 1 196 2 176 1 315 4 317 4 43 2 356 1 16 2 154 2 72 1 129 1 
96 1 
236 1 302 1 44 1 
44 1 147 1 
169 1 44 1 
236 2 169 1 157 1 209 1 289 1 44 3 
169 1 157 1 44 1 
293 1 44 1 
85 7 239 1 148 3 311 1 36 1 240 4 231 3 207 1 301 1 175 2 186 1 43 1 139 2 26 1 257 1 141 1 234 1 358 1 
204 1 337 4 231 10 207 1 1 1 301 1 211 1 51 1 305 3 186 1 26 2 139 5 140 1 141 2 257 4 234 2 344 1 167 1 32 3 85 31 148 15 311 1 240 16 36 5 351 1 67 1 175 3 196 3 95 1 43 4 226 2 358 2 154 3 321 1 
204 2 231 4 207 1 1 1 301 1 211 2 139 3 26 1 257 1 141 1 234 1 85 9 148 4 311 1 240 5 36 1 175 2 314 1 43 1 95 2 226 4 358 1 321 2 294 1 
85 7 148 3 311 1 36 1 240 4 231 3 207 1 301 1 175 2 186 1 43 1 139 2 26 1 257 1 141 1 234 1 358 1 
85 7 148 3 311 1 36 1 240 4 231 3 207 1 301 1 175 2 186 1 43 1 139 2 26 1 257 1 141 1 234 1 358 1 
155 1 76 1 132 1 109 1 232 2 80 1 256 2 28 1 7 1 325 1 370 1 169 1 171 1 350 1 39 1 222 2 227 2 17 1 264 1 320 1 71 1 335 1 44 1 
155 1 76 1 132 1 133 1 232 1 256 1 163 1 162 1 7 1 370 1 31 2 87 1 218 1 37 1 241 1 39 1 378 1 222 1 227 1 319 1 17 1 229 1 264 1 290 1 101 1 335 1 
155 1 76 1 132 1 133 1 339 1 232 1 135 1 256 1 163 1 162 1 7 1 370 1 31 2 348 1 87 1 218 1 37 1 241 1 173 1 39 2 378 1 222 1 227 1 319 1 17 1 264 1 290 1 101 1 292 1 335 2 
155 1 76 1 132 1 133 1 109 1 339 1 232 1 256 1 162 1 7 1 370 1 31 2 348 2 218 1 37 1 241 1 173 1 39 3 378 1 222 1 227 1 319 1 17 1 229 1 264 1 99 1 290 1 101 1 292 1 335 3 
155 1 76 1 132 1 133 1 339 1 232 1 256 1 162 1 370 1 31 2 348 2 218 1 173 1 39 2 378 1 222 1 227 1 319 1 17 1 229 1 99 1 101 1 290 1 292 1 335 2 
52 1 
155 1 251 1 206 2 50 1 340 4 4 2 5 3 259 1 345 1 217 1 169 1 347 1 350 2 353 1 68 1 315 2 316 6 356 1 13 2 124 1 12 1 14 1 17 1 320 1 71 1 129 1 266 5 76 2 131 2 132 2 362 2 20 2 81 1 21 1 323 1 84 1 24 2 25 1 274 1 370 2 33 1 35 1 238 2 276 1 86 2 277 5 150 2 280 1 283 1 92 1 197 2 380 1 381 1 199 1 44 1 
266 3 21 1 323 1 340 2 84 1 25 1 5 1 345 1 33 1 217 1 347 1 86 1 191 1 277 3 283 1 92 1 68 1 316 2 380 1 124 1 12 1 14 1 
266 3 50 1 21 1 323 1 340 3 84 1 25 1 4 1 5 1 345 1 33 1 217 1 347 1 191 1 277 3 283 1 92 1 68 1 316 1 197 1 380 1 124 1 12 1 14 1 
266 3 50 1 21 1 323 1 340 3 84 1 25 1 4 1 5 1 345 1 33 1 217 1 238 1 347 1 191 1 86 1 277 3 283 1 92 1 68 1 316 2 197 1 380 1 124 1 12 1 14 1 
49 1 206 2 50 5 340 6 4 5 5 3 6 1 259 1 345 1 217 1 347 1 219 1 353 1 68 1 315 1 316 7 356 1 12 1 124 1 13 2 14 1 266 5 131 2 362 2 20 2 21 1 81 1 185 1 323 1 82 1 84 1 24 1 25 1 33 1 35 1 238 4 86 4 191 1 277 5 280 1 283 1 92 1 197 4 380 1 
251 1 206 2 50 1 340 4 4 2 5 2 259 1 345 1 217 1 347 1 353 1 68 1 315 1 316 4 356 1 12 1 124 1 13 2 14 1 266 4 131 2 362 2 20 2 21 1 81 1 323 1 84 1 24 1 25 1 33 1 35 1 238 2 86 2 277 4 150 2 280 1 283 1 92 1 197 2 380 1 
266 4 131 2 49 1 206 2 362 2 20 2 50 1 81 1 21 1 185 1 323 1 82 1 340 4 84 1 24 1 25 1 4 1 5 2 259 1 345 1 33 1 35 1 217 1 238 2 347 1 86 2 277 4 280 1 353 1 283 1 92 1 68 1 315 1 316 4 197 2 356 1 13 2 380 1 124 1 12 1 14 1 
266 4 131 2 49 1 206 2 362 2 20 2 50 1 81 1 21 1 185 1 323 1 82 1 340 4 84 1 24 1 25 1 4 1 5 2 259 1 345 1 33 1 35 1 217 1 238 2 347 1 86 2 277 4 280 1 353 1 283 1 92 1 68 1 315 1 316 4 197 2 356 1 13 2 380 1 124 1 12 1 14 1 
266 4 131 2 47 1 49 1 106 2 20 2 50 1 81 1 21 1 323 1 340 4 84 1 24 1 25 1 4 1 5 2 259 1 345 1 33 1 217 1 238 2 347 1 86 2 64 1 277 4 150 2 280 1 353 1 283 1 92 1 68 1 315 1 316 4 197 2 356 1 380 1 124 1 12 1 14 1 248 1 103 2 
266 4 131 2 49 1 206 2 362 2 20 2 50 1 81 1 21 1 185 1 323 1 82 1 340 5 84 1 24 1 25 1 4 1 5 2 259 1 345 1 33 1 35 1 217 1 238 3 347 1 86 3 277 4 219 1 280 1 353 1 283 1 92 1 68 1 315 1 316 5 197 3 356 1 13 2 380 1 124 1 12 1 14 1 
266 4 131 2 49 1 206 2 362 2 20 2 50 1 81 1 21 1 185 1 323 1 82 1 340 5 84 1 24 1 25 1 4 1 5 2 259 1 345 1 33 1 35 1 217 1 238 3 347 1 86 3 277 4 219 1 280 1 353 1 283 1 92 1 68 1 315 1 316 5 197 3 356 1 13 2 380 1 124 1 12 1 14 1 
251 1 106 2 50 1 340 4 4 1 5 2 259 1 345 1 217 1 347 1 353 1 68 1 315 1 316 4 356 1 12 1 124 1 14 1 266 4 131 2 20 2 21 1 81 1 323 1 84 1 24 1 25 1 33 1 238 2 86 2 277 4 150 2 280 1 283 1 92 1 197 2 380 1 248 1 103 2 
155 2 76 8 204 2 132 8 363 1 208 1 182 1 134 2 135 1 211 2 22 1 53 1 84 1 324 1 27 2 29 1 258 1 235 1 370 7 85 2 190 1 169 2 148 1 240 1 350 2 120 1 41 2 379 1 95 2 380 1 14 1 226 4 318 1 17 2 229 1 320 1 71 1 321 2 44 3 
359 1 204 1 231 1 108 1 134 1 211 1 305 1 53 1 84 1 324 1 139 1 27 1 257 1 307 1 85 3 63 1 148 2 240 1 196 1 286 1 153 1 95 1 43 1 380 1 226 2 14 1 154 1 128 1 321 1 
204 1 231 2 207 1 208 1 134 1 301 1 302 1 211 1 27 1 26 1 139 2 257 1 307 1 85 6 148 3 311 1 240 3 349 2 175 1 286 1 95 1 43 1 226 2 358 1 128 1 321 1 
0 1 204 2 337 3 231 2 108 1 134 1 211 2 305 2 54 1 139 1 27 2 257 2 307 11 275 1 344 1 85 14 32 3 148 6 329 1 349 1 36 1 240 8 120 1 67 1 196 2 286 11 95 2 43 1 226 4 318 1 154 1 321 2 128 4 
155 1 76 1 299 1 204 1 132 1 157 1 182 1 108 1 134 1 211 1 53 1 84 2 324 1 27 1 146 1 30 1 370 1 85 2 9 1 169 1 148 1 65 1 349 1 240 1 350 1 278 1 120 1 221 1 95 1 380 1 14 2 226 2 318 1 17 1 179 1 128 1 321 1 44 1 
155 2 204 3 157 2 207 1 108 1 301 1 211 3 305 2 53 1 213 1 257 3 307 7 117 2 9 2 169 2 311 1 349 2 350 1 120 1 175 1 226 6 14 3 318 1 17 2 229 1 179 2 230 1 358 1 321 3 128 7 76 3 132 3 231 8 182 1 365 2 134 3 84 3 187 2 324 1 26 1 139 4 27 3 367 2 146 2 370 3 85 20 327 2 148 10 192 1 240 10 36 4 278 1 196 2 286 7 43 3 95 3 380 1 154 2 44 2 
85 2 204 1 36 1 240 2 231 1 208 1 134 1 211 1 305 1 286 1 242 1 95 1 27 1 226 2 257 1 307 1 128 1 321 1 
85 2 204 1 148 2 231 1 208 1 134 1 352 1 211 1 286 1 95 1 43 1 139 1 27 1 226 2 307 1 154 1 128 1 321 1 
204 1 231 2 208 1 134 1 211 1 305 1 27 1 139 1 257 1 307 2 85 4 148 2 240 2 36 1 196 1 286 2 95 1 43 1 226 2 154 1 321 1 128 2 
85 2 204 1 36 1 240 2 231 1 134 1 211 1 22 1 305 1 286 1 242 1 95 1 27 1 226 2 257 1 307 1 128 1 321 1 
85 2 204 1 148 2 231 1 134 1 352 1 211 1 22 1 286 1 95 1 43 1 139 1 27 1 226 2 307 1 154 1 128 1 321 1 
204 1 231 2 134 1 211 1 305 1 22 1 27 1 139 1 257 1 307 2 85 4 148 2 240 2 36 1 196 1 286 2 95 1 43 1 226 2 154 1 321 1 128 2 
204 1 231 2 134 1 211 1 305 1 27 1 139 1 257 1 307 2 85 4 148 2 240 2 36 1 196 1 286 2 95 1 43 1 226 2 154 1 321 1 128 2 
155 1 76 1 204 1 132 1 157 1 365 1 134 1 211 1 84 1 27 1 146 1 370 1 85 2 9 1 169 1 148 1 240 1 349 1 350 1 120 1 95 1 14 1 226 2 318 1 17 1 179 1 321 1 44 1 
155 1 298 1 76 1 204 1 132 1 157 1 134 1 211 1 83 1 84 1 27 1 370 1 85 2 9 1 169 1 148 1 240 1 349 1 350 1 120 1 95 1 14 1 226 2 318 1 17 1 228 1 321 1 44 1 
204 1 231 2 108 1 134 1 211 1 305 1 27 1 139 1 257 1 307 2 85 4 148 2 240 2 36 1 196 1 286 2 95 1 43 1 226 2 154 1 321 1 128 2 
155 1 76 1 204 1 132 1 231 2 157 1 365 1 134 1 135 1 211 1 305 1 84 1 139 1 27 1 257 1 307 2 146 1 370 1 85 4 117 1 9 1 169 1 148 2 36 1 240 2 196 1 286 2 43 1 95 1 14 1 226 2 17 1 179 1 154 1 128 2 321 1 44 1 
204 1 231 1 108 1 134 1 211 1 305 1 53 1 84 1 324 1 27 1 257 1 307 1 85 3 63 1 148 1 36 1 240 2 196 1 243 1 286 1 43 1 153 1 95 1 380 1 226 2 14 1 154 1 321 1 128 1 
181 1 203 2 77 1 204 2 337 2 231 6 304 1 211 2 305 3 139 3 257 3 344 1 85 19 32 1 148 10 240 9 36 3 172 2 38 1 195 1 67 1 196 3 314 1 95 2 43 3 226 4 70 1 200 1 154 3 321 2 
181 1 203 4 204 3 337 2 231 4 1 2 110 1 304 1 211 3 212 1 305 3 139 2 257 3 142 1 85 26 32 2 148 12 36 2 240 14 172 1 89 1 38 2 67 2 196 3 314 1 332 1 43 2 95 3 226 6 70 1 200 2 154 2 321 3 45 1 
203 4 204 3 337 4 207 1 1 1 301 1 211 3 304 1 212 1 110 1 305 4 257 5 344 1 311 1 172 1 67 3 175 1 314 1 226 6 70 1 358 1 321 3 181 1 77 1 231 8 269 1 139 4 26 1 142 1 32 3 85 41 148 21 36 4 240 20 89 1 38 2 196 4 332 1 43 5 95 3 200 1 154 4 45 1 
181 1 203 4 77 1 204 4 337 4 231 7 207 1 1 2 301 1 110 1 212 1 304 1 211 4 269 1 305 4 26 1 139 4 257 5 142 1 344 1 85 38 32 3 148 18 311 1 240 20 36 3 172 1 89 1 38 2 175 1 67 3 196 4 314 1 332 1 95 4 43 4 226 8 70 1 200 1 358 1 154 3 321 4 45 1 
181 1 203 4 204 2 337 4 231 14 207 1 1 1 301 1 110 1 212 1 304 1 211 2 305 7 54 2 26 1 139 7 257 8 142 1 344 2 85 52 32 4 148 25 311 1 240 27 36 7 172 1 89 1 38 1 175 1 67 2 196 7 314 1 332 1 95 2 43 8 226 4 70 1 200 1 358 1 154 7 321 2 45 1 
118 1 111 1 161 1 214 1 273 1 263 1 98 1 291 1 233 1 61 1 
336 1 165 1 
111 1 263 1 98 1 174 1 291 1 233 1 159 1 355 1 61 1 
118 1 266 1 277 1 338 1 312 1 233 1 90 2 210 1 377 1 111 1 4 1 225 1 214 1 273 1 98 1 263 1 291 1 61 1 
118 1 266 1 277 1 338 1 312 1 233 1 90 2 210 1 377 1 111 1 4 1 225 1 214 1 273 1 98 1 263 1 291 1 61 1 
118 1 266 1 277 1 338 1 312 1 233 1 90 2 210 1 377 1 111 1 4 1 225 1 214 1 273 1 98 1 263 1 291 1 61 1 
223 1 151 1 253 1 
223 1 151 1 253 1 
265 1 183 1 
265 1 223 1 183 1 
245 1 342 1 
336 1 266 1 267 1 210 1 233 1 111 1 53 2 84 2 324 2 342 1 272 1 215 1 165 1 61 1 277 1 349 1 90 1 245 1 225 1 246 1 380 2 14 2 16 1 263 1 98 1 102 1 291 1 
151 1 253 1 
265 1 223 1 183 1 
155 1 295 1 76 2 204 1 132 2 108 1 134 1 211 1 160 1 84 2 27 1 29 1 370 2 85 2 190 1 169 1 148 1 240 1 88 1 120 1 193 1 40 1 41 2 95 1 380 2 14 2 226 2 318 1 17 1 321 1 44 1 
155 1 76 1 169 1 132 1 350 1 80 1 93 1 256 1 334 1 17 1 320 1 71 1 44 1 370 1 
155 1 76 1 218 1 132 1 241 1 133 1 378 1 93 1 256 1 162 1 97 1 17 1 113 1 229 1 290 1 101 1 31 2 370 1 
155 1 76 2 218 1 132 2 241 1 133 1 135 1 378 1 93 1 256 1 162 1 97 1 17 1 113 1 229 1 290 1 101 1 31 2 370 2 
155 1 76 1 218 1 132 1 241 1 361 1 133 1 378 1 256 1 162 1 97 1 17 1 229 1 290 1 101 1 31 2 370 1 
177 1 
50 1 353 1 280 1 315 1 24 1 56 1 356 1 4 1 249 1 259 1 
150 10 206 5 79 5 196 2 305 2 315 5 244 2 317 5 24 5 43 2 224 1 4 5 367 1 257 2 154 2 
266 1 316 1 4 1 277 1 5 1 50 1 
155 1 105 1 76 4 266 3 132 4 23 1 24 2 5 2 259 2 370 4 169 1 276 1 277 3 350 2 280 2 353 1 262 1 315 2 316 4 356 2 381 2 17 1 178 2 199 1 320 1 71 1 72 1 44 1 129 2 
315 1 24 1 56 1 4 1 249 1 50 1 302 1 
266 1 206 1 362 1 50 1 24 1 4 2 5 1 259 1 35 1 277 1 150 1 280 1 353 1 315 1 316 1 356 1 13 1 
155 3 105 1 206 6 157 3 209 1 50 2 305 2 56 1 4 8 5 3 257 2 259 4 169 3 261 2 350 1 353 4 315 8 316 5 317 6 356 4 12 2 224 2 17 4 178 1 129 2 76 3 266 5 132 3 19 1 79 6 135 1 366 2 24 9 189 2 367 2 368 2 147 3 370 3 236 2 237 2 277 5 375 2 150 12 280 4 376 1 196 2 244 2 43 2 381 1 249 1 293 2 154 2 44 10 104 1 
266 1 337 1 206 3 50 2 79 5 110 1 212 1 305 2 24 8 4 5 5 1 257 2 259 2 8 1 32 1 277 1 150 6 89 1 280 2 353 2 67 1 196 2 284 1 332 1 315 5 316 1 244 2 317 5 356 2 43 2 224 1 381 1 154 2 129 1 45 1 
180 1 266 1 82 1 255 1 53 1 84 1 24 2 324 1 26 1 57 1 59 1 257 2 259 1 63 1 277 1 311 1 121 1 280 1 353 1 68 1 315 2 244 2 356 1 43 1 224 1 380 1 14 1 358 1 
155 1 76 1 48 1 204 1 132 1 157 1 365 1 134 1 211 1 53 2 84 3 324 2 27 1 57 1 146 1 370 1 85 1 63 2 9 1 169 1 148 1 349 1 350 1 95 1 380 2 226 2 14 3 318 1 17 1 179 1 321 1 44 1 
206 2 150 4 50 2 79 2 353 1 280 1 175 1 315 2 317 2 24 1 356 1 4 4 381 1 259 1 129 1 
111 1 245 1 214 1 263 1 282 1 
111 1 263 1 100 1 
111 1 263 1 100 1 
111 1 263 1 100 1 
111 1 112 1 263 1 
111 1 112 1 263 1 
111 1 112 1 263 1 
111 1 263 1 
98 1 61 1 
180 1 85 8 148 4 311 1 240 4 36 1 231 3 43 2 26 1 139 2 257 2 358 1 
85 2 204 1 240 2 36 1 231 1 211 1 305 1 314 1 95 1 226 2 257 1 321 1 
85 4 148 2 204 1 240 2 36 1 231 2 211 1 196 1 305 1 314 1 43 1 95 1 139 1 226 2 257 1 154 1 321 1 
168 1 85 3 77 1 148 2 204 3 36 1 240 1 231 2 1 1 211 3 314 1 95 3 26 1 139 1 226 6 358 1 321 3 
296 1 77 1 204 5 337 4 231 12 207 1 1 2 301 1 211 5 51 1 305 3 26 3 139 7 140 1 257 5 344 1 167 1 168 1 85 34 32 3 148 18 311 2 240 16 36 5 175 1 67 1 196 3 314 1 95 5 43 5 226 10 358 3 154 3 321 5 
204 1 337 1 231 2 207 1 301 1 211 1 26 1 139 2 257 1 32 1 85 8 148 4 311 1 240 4 175 1 67 1 314 1 43 1 95 1 226 2 358 1 321 1 45 1 
296 1 204 2 337 2 231 3 207 1 301 1 211 2 305 1 139 2 26 1 257 2 344 1 85 11 32 1 148 5 311 1 240 6 36 1 175 1 67 1 196 1 314 1 43 1 95 2 226 4 358 1 321 2 45 1 
296 1 204 3 337 1 231 4 207 1 1 1 301 1 110 1 211 3 212 1 305 2 26 1 139 3 257 3 32 1 85 19 148 10 311 1 36 1 240 9 89 1 175 1 67 1 196 2 314 1 332 1 95 3 43 3 226 6 358 1 154 2 321 3 45 1 
296 1 204 3 337 1 231 5 207 1 1 1 301 1 211 3 212 1 110 1 305 2 26 1 139 3 257 3 32 1 85 17 148 7 311 1 36 2 240 10 89 1 175 1 67 1 196 2 314 1 332 1 95 3 43 2 226 6 358 1 154 1 321 3 45 1 
204 1 337 1 231 2 207 1 301 1 211 1 26 1 139 2 257 1 32 1 85 8 148 4 311 1 240 4 175 1 67 1 314 1 43 1 95 1 226 2 358 1 321 1 45 1 
204 1 337 1 231 2 211 1 212 1 110 1 305 2 139 1 257 2 32 1 85 12 148 6 36 1 240 6 89 1 67 1 196 2 314 1 332 1 95 1 43 2 226 2 154 2 321 1 45 1 
296 1 204 4 337 1 231 5 207 1 1 2 301 1 110 1 211 4 212 1 305 2 26 1 139 3 257 3 85 18 32 1 148 8 311 1 36 2 240 10 89 1 175 1 67 1 196 2 314 1 332 1 95 4 43 2 226 8 358 1 154 1 321 4 45 1 
77 1 204 4 337 1 231 6 1 2 110 1 211 4 212 1 305 3 139 3 257 3 85 16 32 1 148 7 36 3 240 9 89 1 67 1 196 3 314 1 332 1 95 4 43 2 226 8 154 2 321 4 45 1 
85 7 148 4 311 1 36 3 240 3 231 6 207 2 301 1 43 1 26 3 139 3 257 1 358 3 
77 1 204 4 337 1 231 4 207 1 1 2 301 1 110 1 211 4 212 1 305 2 26 1 139 3 257 3 85 18 32 1 148 8 311 1 36 1 240 10 89 1 175 1 67 1 196 2 314 1 332 1 95 4 43 2 226 8 358 1 154 1 321 4 45 1 
85 8 148 4 204 2 311 1 240 4 36 1 231 3 207 1 1 1 301 1 211 2 175 1 43 1 95 2 139 2 26 1 226 4 257 1 358 1 321 2 
85 6 148 3 311 1 240 3 231 2 207 1 302 1 301 1 175 1 43 1 26 1 139 2 257 1 358 1 
296 1 85 4 148 2 204 1 240 2 36 1 231 2 211 1 196 1 305 1 43 1 95 1 139 1 226 2 257 1 154 1 321 1 
85 7 32 1 148 4 337 2 240 3 36 1 231 2 67 1 196 1 305 1 43 1 139 1 257 1 154 1 344 1 
204 2 337 2 231 9 207 1 1 2 301 1 211 2 305 2 54 1 26 2 139 5 257 3 344 1 275 1 32 2 85 23 168 1 148 12 311 1 36 4 240 11 175 1 196 2 43 3 95 2 226 4 358 2 154 2 321 2 
85 1 148 1 337 1 
85 1 32 1 240 1 
296 1 85 6 204 1 148 3 240 3 36 1 231 3 211 1 196 1 305 1 95 1 43 1 139 2 226 2 367 1 257 1 154 1 321 1 
204 1 337 1 231 2 211 1 212 1 110 1 305 2 139 1 257 2 32 1 85 12 148 6 36 1 240 6 89 1 67 1 196 2 314 1 332 1 95 1 43 2 226 2 154 2 321 1 45 1 
85 6 148 3 311 1 240 3 36 1 231 2 43 1 26 1 139 1 257 1 358 1 
168 1 85 3 148 2 204 1 240 1 36 1 231 2 207 1 1 1 301 1 211 1 95 1 139 1 26 1 226 2 358 1 321 1 
84 1 42 1 347 1 380 1 349 1 14 1 303 1 
62 1 347 1 119 1 349 1 268 1 303 1 42 1 84 1 138 1 380 1 14 1 198 1 
155 1 360 1 76 4 169 1 156 1 132 4 350 1 135 1 17 1 320 1 71 1 370 4 44 1 
155 1 76 2 169 1 132 2 157 1 270 1 271 1 114 1 17 2 178 1 288 1 230 1 370 2 44 1 
155 1 76 1 162 1 132 1 350 1 17 1 290 1 101 1 31 1 370 1 
155 1 76 2 169 1 132 2 17 1 88 1 29 1 229 1 135 1 44 1 370 2 
155 2 76 5 169 2 156 1 132 5 350 1 363 1 135 1 379 1 17 2 178 1 320 1 29 1 71 1 370 4 44 3 
155 2 76 5 169 2 156 1 132 5 350 1 135 1 194 1 379 1 17 2 178 1 320 1 29 1 71 1 370 4 44 3 
155 1 76 1 169 1 132 1 350 1 17 1 320 1 71 1 302 1 44 1 370 1 
155 1 9 1 76 1 169 1 132 1 349 1 350 1 157 1 182 1 53 1 84 2 324 1 380 1 14 2 17 1 146 1 44 1 370 1 
155 1 237 1 9 1 76 1 169 2 132 1 349 1 157 2 182 1 323 1 68 1 53 2 84 2 25 1 324 1 380 2 14 2 17 1 178 1 146 1 293 1 44 3 370 1 
155 1 298 1 360 1 76 2 132 2 157 2 182 1 323 1 53 2 84 2 324 1 25 1 370 2 237 1 9 1 169 2 349 1 68 1 380 2 14 2 17 1 178 1 293 1 44 3 
155 1 360 1 76 3 266 2 132 3 157 1 50 1 4 1 147 1 370 3 236 1 237 1 346 1 169 1 277 2 350 1 285 1 316 1 12 1 17 1 178 1 293 1 44 4 
155 1 237 1 236 1 360 1 266 2 76 3 169 1 277 2 132 3 375 1 350 1 157 1 50 1 316 1 4 1 12 1 17 1 178 1 293 1 370 3 147 1 44 4 
155 1 76 1 132 1 17 1 235 1 370 1 
155 2 74 1 76 7 169 2 132 7 350 2 363 1 157 1 209 1 135 1 41 1 271 1 379 1 114 1 17 3 229 1 29 1 258 1 235 1 370 6 44 3 
155 1 204 2 157 1 207 1 108 1 301 1 211 2 53 1 257 1 307 1 117 1 9 1 169 1 311 1 349 2 175 1 226 4 14 2 17 1 179 1 358 1 128 1 321 2 76 1 132 1 231 2 365 1 182 1 134 2 135 1 187 1 84 2 324 1 27 2 26 1 139 2 146 1 370 1 85 6 148 3 240 3 286 1 40 1 95 2 43 1 380 1 44 1 
105 1 266 3 76 1 132 1 50 1 24 1 56 1 4 1 189 1 215 1 368 1 5 1 259 2 370 1 147 1 236 1 261 1 277 3 375 1 350 1 280 2 353 2 315 1 316 2 356 2 12 1 249 1 44 2 
155 1 236 1 76 2 169 1 132 2 157 1 209 1 135 1 17 2 235 1 370 2 104 1 44 2 
298 1 155 1 9 1 76 1 169 1 132 1 349 1 350 1 157 1 182 1 53 1 84 2 324 1 380 1 14 2 17 1 44 1 370 1 
155 1 74 1 76 1 169 1 132 1 157 1 209 1 271 1 114 1 17 2 178 1 370 1 44 1 
295 1 328 1 279 1 193 1 160 1 136 1 84 1 380 1 14 1 
137 1 328 1 107 1 
136 1 328 1 349 1 125 1 279 1 
322 1 266 2 217 1 328 1 277 2 349 1 107 1 279 2 50 1 323 1 136 2 68 1 137 1 25 1 4 1 12 1 58 1 125 2 215 1 
163 1 173 1 264 1 339 1 292 1 39 1 7 1 335 1 
34 1 260 1 348 2 173 2 300 1 339 3 313 1 39 4 341 1 247 1 264 1 292 2 7 1 335 4 
348 1 173 1 10 1 339 1 39 2 163 1 15 1 264 1 7 1 166 1 292 1 335 2 
34 1 163 1 247 2 357 1 173 1 264 1 339 1 292 1 313 2 39 3 7 1 335 3 
364 1 143 1 339 2 369 2 
333 1 163 1 264 1 39 1 7 1 335 1 
348 1 163 1 173 1 264 1 339 1 123 1 292 1 39 2 7 1 335 2 
330 1 
163 1 173 1 264 1 339 1 292 1 39 1 7 1 335 1 
173 1 339 1 292 1 302 1 
173 1 264 1 339 1 292 1 39 1 7 1 335 1 
227 1 232 1 335 1 
216 1 34 1 163 1 247 2 173 1 264 1 339 1 292 1 313 1 39 3 7 1 335 3 
348 1 252 1 173 1 264 1 339 1 292 1 39 2 7 1 335 2 
378 1 374 1 163 1 264 1 290 1 339 1 300 1 39 1 7 1 31 1 335 1 
163 1 173 1 264 1 339 1 39 1 7 1 335 1 
163 1 173 2 264 1 292 1 39 1 7 1 335 1 
69 1 163 1 173 1 126 1 264 2 339 1 39 2 7 2 309 1 335 2 
348 2 173 1 66 1 123 1 300 1 339 2 39 3 341 1 163 1 264 1 292 1 7 1 335 3 
116 1 348 1 218 1 173 1 339 1 39 2 378 1 162 1 163 1 264 1 290 1 292 1 7 1 31 2 335 2 
348 2 252 1 173 1 300 1 339 2 39 4 341 1 163 1 264 2 60 1 292 1 7 2 335 4 
348 1 173 1 339 1 123 1 39 3 163 1 247 1 264 1 7 1 292 1 335 3 
260 1 341 1 339 1 300 1 
173 1 339 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
243 1 216 1 284 1 311 1 123 1 228 1 8 1 346 1 368 2 145 9 270 7 202 1 98 1 375 1 19 9 256 1 301 3 28 2 76 2 30 1 78 1 31 5 190 4 281 1 
243 1 216 1 284 1 311 1 123 1 228 1 8 1 346 1 368 2 145 9 270 7 202 1 98 1 375 1 19 9 256 1 301 3 28 2 76 2 30 1 78 1 31 5 190 4 281 1 
243 1 284 1 192 1 311 1 123 1 40 1 228 1 8 2 346 1 368 2 145 9 44 1 270 6 375 2 98 1 19 9 20 1 256 1 301 3 356 1 106 1 28 2 76 2 78 1 30 2 31 5 281 2 190 4 
243 1 284 1 192 1 311 1 123 1 40 1 228 1 8 2 346 1 368 2 145 9 44 1 270 6 375 2 98 1 19 9 20 1 256 1 301 3 356 1 106 1 28 2 76 2 78 1 30 2 31 5 281 2 190 4 
243 1 284 1 192 1 311 1 123 1 40 1 228 1 8 2 346 1 368 2 145 10 44 1 270 7 375 2 98 1 19 10 20 1 256 1 301 4 356 1 106 1 28 2 76 2 78 1 30 2 31 6 281 2 190 5 
243 1 284 1 192 1 311 1 40 1 228 1 8 2 346 1 368 1 145 7 44 1 270 4 375 2 98 1 19 7 20 1 256 1 301 2 356 1 106 1 28 2 76 2 78 1 30 2 31 4 281 2 190 3 
270 3 243 1 375 1 284 1 19 4 311 1 301 1 123 1 28 1 8 1 346 1 368 2 76 1 145 4 78 1 31 3 281 1 190 2 
243 1 375 1 284 1 20 1 19 2 28 1 346 1 76 1 145 2 30 1 31 1 189 1 44 1 322 1 147 1 281 1 
270 1 243 1 284 1 19 3 301 1 228 1 28 2 346 1 76 2 145 3 30 1 31 2 190 1 
204 1 237 1 109 1 
204 1 357 1 96 2 
148 2 191 1 289 2 353 2 378 2 335 1 359 2 355 2 
215 1 191 1 217 1 137 1 335 1 337 1 38 2 315 2 340 1 5 1 341 1 267 2 342 1 62 1 90 1 289 2 317 1 371 1 126 1 372 1 254 1 128 1 353 2 65 2 378 2 299 2 71 1 355 3 302 1 148 2 24 1 26 1 207 1 107 1 359 3 116 1 262 1 
148 1 289 1 353 1 306 1 378 1 335 1 359 1 92 1 196 1 355 1 
204 1 300 1 355 1 338 1 173 1 289 1 278 1 330 1 109 1 306 1 208 1 359 1 290 1 332 1 
204 1 353 1 378 1 300 1 355 1 148 1 173 1 289 1 330 1 109 1 306 1 208 1 359 1 290 2 332 2 
164 1 290 1 86 1 146 1 332 1 
204 1 109 1 57 1 290 2 86 1 146 1 130 1 332 2 
290 1 146 1 332 1 
353 1 335 1 378 1 86 1 196 1 355 1 73 1 148 1 289 1 306 1 92 1 359 1 290 1 332 1 
204 1 
204 1 109 1 290 2 86 1 146 1 130 1 52 1 332 2 
309 1 204 1 68 1 170 2 103 2 86 2 161 1 206 1 130 1 6 1 266 2 27 1 91 1 109 1 290 5 127 1 332 5 146 2 233 1 
191 1 237 1 
191 2 353 1 378 1 244 1 355 2 148 1 303 1 289 2 359 2 
325 1 231 1 23 1 
215 1 128 1 254 1 191 1 217 1 299 1 71 1 355 1 38 1 315 1 343 1 90 1 207 1 317 1 359 1 372 1 
215 1 254 1 128 1 217 1 353 1 378 1 71 1 299 1 355 2 38 1 23 1 315 1 75 1 90 1 207 1 289 1 317 1 175 1 359 2 372 1 
191 1 272 1 353 4 378 4 36 1 355 5 258 1 148 1 303 1 75 2 289 5 278 1 175 1 359 5 
289 2 353 2 306 1 378 2 359 2 196 1 355 2 352 1 
148 1 191 1 75 1 289 3 353 3 378 3 359 3 355 3 
289 1 353 1 306 1 378 1 359 1 196 1 355 1 
148 1 303 1 289 1 353 1 306 1 378 1 244 1 359 1 355 1 
215 1 191 1 217 1 137 1 335 1 38 1 315 1 5 1 267 2 173 1 342 1 62 1 90 1 289 3 317 1 175 1 290 1 371 1 126 1 372 1 254 1 128 1 353 3 65 1 67 1 378 3 71 1 299 1 300 1 355 4 302 1 148 2 303 1 75 1 26 1 207 1 107 1 330 1 306 1 208 1 359 4 332 1 135 1 262 1 
191 1 75 1 289 2 353 1 278 1 378 1 359 2 355 2 258 1 
204 1 353 3 378 3 300 1 355 3 47 1 148 1 173 1 303 1 75 2 289 3 175 1 330 1 208 1 306 1 359 3 290 1 332 1 135 1 
325 1 353 2 378 2 355 2 23 1 148 1 303 1 75 1 289 2 359 2 
215 1 128 1 254 1 191 1 217 1 299 1 71 1 355 1 38 1 315 1 207 1 90 1 317 1 359 1 372 1 
215 1 235 1 128 1 254 1 191 1 69 1 299 1 71 1 355 1 38 1 315 1 90 1 317 1 359 1 372 1 
99 1 118 1 55 1 137 1 1 1 325 2 65 4 263 1 221 1 379 1 337 2 302 1 23 2 125 1 267 2 342 1 26 1 107 1 199 1 382 1 231 2 126 1 262 2 294 1 
289 1 353 1 306 1 378 1 359 1 300 1 355 1 352 1 
193 1 29 1 
193 1 29 1 
155 1 291 1 
155 1 291 1 
155 1 291 1 
193 1 29 1 336 1 
193 1 29 1 336 1 
104 1 193 1 29 1 
136 1 193 2 29 2 95 1 155 1 291 1 
193 1 29 1 336 1 
344 1 193 1 29 1 
344 1 193 1 29 1 
344 1 193 1 29 1 
191 1 0 1 169 1 193 1 223 1 142 1 289 2 349 1 290 1 321 1 271 1 16 1 353 2 378 2 298 1 355 2 241 1 104 1 165 1 108 1 279 1 29 1 359 2 332 1 
271 2 204 1 0 2 56 1 239 1 2 1 193 2 223 3 225 2 142 2 369 1 108 2 29 2 134 1 94 1 290 2 95 1 321 1 332 2 
375 1 8 1 281 1 
375 1 147 1 281 1 
8 2 320 1 360 1 147 1 13 1 281 3 
64 1 318 1 360 1 147 1 13 1 281 1 
8 1 360 2 147 1 13 1 281 2 
118 1 81 1 55 1 170 1 86 4 365 2 125 1 287 1 266 1 174 1 91 1 319 1 349 1 230 1 290 5 127 3 146 1 12 1 96 3 204 2 273 2 103 1 161 2 241 1 130 1 165 1 357 1 382 1 109 1 185 1 113 2 332 5 
118 3 81 2 55 3 219 5 170 2 86 7 314 1 125 3 287 3 266 2 174 1 91 1 319 2 290 9 127 8 146 6 96 9 204 5 273 6 68 1 103 2 46 1 380 1 161 6 130 1 164 5 133 1 165 4 357 3 382 3 109 1 212 1 113 6 332 9 114 1 
118 1 81 1 55 1 170 1 86 2 365 1 125 1 266 1 287 1 319 1 230 1 290 3 127 3 96 4 204 3 273 2 68 1 103 1 161 2 165 1 357 2 382 1 109 1 185 1 113 2 332 3 
118 2 81 1 55 2 170 1 365 2 86 3 125 2 266 1 287 2 319 1 230 1 290 4 127 5 96 7 204 4 273 4 68 1 103 1 46 1 380 1 161 4 165 2 357 3 382 2 109 1 185 1 212 1 113 4 332 4 
90 1 237 1 364 1 
90 1 42 1 
177 1 
254 1 90 1 317 1 
7 1 90 1 
254 1 90 1 
254 1 131 1 90 3 364 2 317 1 153 1 
118 1 100 1 255 1 65 7 263 2 221 3 337 4 125 1 265 1 74 1 41 1 381 1 43 1 186 1 63 1 262 3 53 2 
118 1 100 1 255 1 65 7 263 2 221 3 337 4 125 1 265 1 74 1 41 1 381 1 43 1 186 1 63 1 262 3 53 2 
118 1 100 1 283 1 255 1 65 7 263 2 221 3 337 4 125 1 265 1 74 1 41 1 381 1 43 1 186 1 63 1 262 3 53 2 
214 1 118 4 55 3 263 5 221 10 337 16 125 4 267 2 265 2 287 3 229 1 41 2 251 1 43 2 126 1 63 1 100 1 45 1 179 1 65 31 255 5 257 3 22 1 302 1 74 2 381 1 26 1 107 1 382 3 186 1 50 1 260 4 262 15 53 3 
118 1 263 3 221 4 59 1 337 5 125 1 140 1 267 4 265 1 41 1 43 1 126 2 63 1 100 1 65 9 255 1 22 1 302 2 74 1 26 2 107 2 186 1 53 2 262 4 
243 1 119 1 84 1 284 1 85 1 38 1 315 1 8 1 346 1 320 1 145 2 160 1 9 1 372 1 147 1 270 1 375 1 15 1 203 1 295 1 299 1 71 1 19 2 277 1 28 1 76 1 77 1 30 1 31 1 281 2 
243 1 119 1 84 1 85 1 38 1 315 1 8 1 346 1 320 1 145 3 160 1 9 1 372 1 147 1 178 1 270 2 375 1 15 1 299 1 71 1 19 3 180 1 277 1 28 1 76 1 77 1 79 1 30 1 31 1 281 2 
243 1 119 1 84 1 85 1 38 1 315 1 8 1 346 1 320 1 145 2 372 1 147 1 178 1 270 2 15 1 375 1 299 1 71 1 19 2 180 1 277 1 77 1 30 1 31 1 281 2 
215 1 119 2 38 1 315 1 249 1 90 1 144 1 145 1 372 1 15 2 254 1 205 1 238 1 71 1 299 1 19 1 327 1 277 2 28 1 76 1 79 1 30 2 187 1 
119 1 84 1 284 1 85 1 38 1 315 1 8 1 320 1 145 1 160 1 9 1 372 1 147 1 178 1 375 1 15 1 295 1 299 1 71 1 19 1 277 1 28 1 76 1 77 1 30 1 281 2 
333 1 
310 3 82 2 220 1 334 3 170 1 4 1 37 1 87 1 338 1 367 1 339 1 266 1 173 1 227 2 91 1 289 1 348 1 290 4 127 1 146 5 236 1 101 1 204 1 324 2 66 2 103 1 240 1 300 1 161 1 355 1 130 2 357 2 278 1 330 1 358 3 109 1 306 1 208 1 359 1 110 1 332 4 115 5 
310 3 82 2 220 1 334 3 170 1 4 1 37 1 87 1 338 1 367 1 339 1 266 1 173 1 227 2 91 1 289 1 348 1 290 4 127 1 146 5 236 1 101 1 204 1 324 2 66 2 103 1 240 1 300 1 161 1 355 1 130 2 357 2 278 1 330 1 358 3 109 1 306 1 208 1 359 1 110 1 332 4 115 5 
334 2 4 1 338 1 289 1 348 1 290 4 127 1 204 1 300 1 355 1 161 1 130 2 304 1 358 2 208 1 306 1 359 1 310 2 82 2 220 1 170 1 37 1 264 2 87 1 173 1 266 1 91 1 146 4 96 2 234 2 324 2 103 1 240 1 330 1 278 1 109 1 280 1 332 4 115 4 
334 2 4 1 338 1 289 1 348 1 290 5 127 2 254 1 204 2 66 2 299 2 71 1 300 1 161 2 355 1 130 3 163 1 304 1 358 2 357 2 305 1 306 1 208 1 359 1 215 2 81 1 310 2 82 2 220 1 170 1 37 1 38 2 87 1 315 2 367 1 266 1 173 1 227 2 90 1 91 1 372 1 146 6 96 2 324 2 238 1 377 1 103 1 240 1 184 1 278 1 330 1 109 1 187 1 332 5 115 4 
220 1 4 1 37 1 338 1 173 1 289 1 348 1 290 3 146 2 240 1 300 1 355 1 130 1 278 1 330 1 358 1 306 1 208 1 359 1 332 3 52 1 115 2 
310 1 220 1 4 1 37 1 338 1 173 1 289 1 348 1 290 3 146 1 204 1 240 1 300 1 355 1 130 1 278 1 330 1 109 1 306 1 208 1 359 1 332 3 52 1 115 3 
310 1 220 1 334 1 4 1 37 1 338 1 173 1 289 1 348 1 290 3 146 2 204 1 240 1 300 1 355 1 130 1 278 1 330 1 358 1 109 1 306 1 208 1 359 1 52 1 332 3 115 3 
334 4 4 1 338 1 339 1 289 1 348 1 290 5 127 1 204 5 66 2 300 1 355 1 161 1 130 3 358 4 357 2 208 1 306 1 359 1 310 4 82 2 220 1 35 1 170 1 37 1 87 1 367 1 173 1 266 1 227 2 91 1 146 7 236 1 101 1 324 2 240 1 103 1 330 1 278 1 109 5 110 1 332 5 52 1 115 6 
334 2 4 1 338 1 289 1 348 1 290 4 127 1 204 2 66 2 300 1 355 1 161 1 130 2 304 1 357 2 358 2 208 1 306 1 359 1 310 2 82 2 220 1 170 1 37 1 87 1 367 1 173 1 266 1 227 2 91 1 146 4 96 2 324 2 103 1 240 1 330 1 278 1 109 1 332 4 115 4 
310 2 82 2 220 1 334 2 170 1 4 1 37 1 87 1 338 1 367 1 339 1 266 1 173 1 227 2 289 1 91 1 348 1 290 4 127 1 146 4 236 1 101 1 204 1 324 2 66 2 240 1 103 1 300 1 161 1 355 1 130 2 358 2 357 2 278 1 330 1 109 1 306 1 208 1 359 1 332 4 115 4 
310 2 82 2 220 1 334 2 170 1 4 1 37 1 87 1 338 1 367 1 339 1 266 1 173 1 227 2 289 1 91 1 348 1 290 4 127 1 146 4 236 1 101 1 204 1 324 2 66 2 240 1 103 1 300 1 161 1 355 1 130 2 358 2 357 2 278 1 330 1 109 1 306 1 208 1 359 1 332 4 115 4 
310 2 82 2 220 1 334 2 170 1 4 1 37 1 264 2 87 1 338 1 266 1 173 1 289 1 91 1 348 1 350 1 290 4 127 1 176 1 146 4 96 2 234 2 236 1 204 1 324 2 240 1 103 1 300 1 161 1 355 1 130 2 358 2 278 1 330 1 109 1 306 1 208 1 280 1 359 1 332 4 115 4 
118 1 100 1 191 2 137 1 237 1 325 1 65 6 263 2 221 2 337 3 302 1 23 1 125 1 267 2 74 1 342 1 41 1 26 1 107 1 231 1 186 1 126 1 63 1 53 1 262 3 294 1 
214 1 118 1 191 1 55 1 137 2 263 1 221 2 246 1 337 8 125 2 341 1 267 4 287 2 342 1 62 1 347 1 231 11 126 2 325 4 255 1 65 14 275 1 257 3 302 2 23 11 328 1 26 2 107 2 382 2 50 1 260 3 166 1 262 6 
215 1 191 1 217 1 137 1 58 1 38 1 337 1 315 1 267 2 341 1 343 1 342 1 90 1 62 1 289 1 316 1 317 1 175 1 126 1 372 1 254 1 128 1 325 1 353 1 65 2 378 1 71 1 299 1 355 2 302 1 328 1 75 1 207 1 26 1 107 1 359 2 259 1 262 1 
118 3 191 2 55 2 337 10 5 2 125 3 341 1 287 2 342 3 62 1 289 1 126 3 63 1 128 2 254 2 353 1 65 20 255 4 299 3 71 2 355 3 302 3 72 2 23 7 132 1 74 1 75 1 26 3 207 2 359 3 262 10 215 1 32 2 217 2 137 3 168 2 263 4 221 8 38 3 315 3 267 6 41 1 90 2 175 1 317 2 231 7 268 1 372 2 178 1 100 1 376 2 325 7 378 1 328 1 48 1 107 3 382 2 186 1 53 1 
215 2 137 2 38 8 337 1 315 8 340 2 156 1 267 4 341 1 157 1 342 2 90 3 62 1 289 1 159 1 126 2 372 2 294 1 178 1 254 2 203 1 353 1 65 2 238 1 378 1 71 2 299 7 355 1 302 2 150 1 162 1 75 1 329 1 26 2 151 1 107 2 359 1 187 1 262 1 
118 1 55 1 137 1 263 1 221 1 337 1 125 1 267 2 287 1 342 1 289 1 143 1 231 1 126 1 325 1 353 1 65 3 378 1 355 1 302 1 23 1 148 1 303 1 328 1 26 1 107 1 382 1 359 1 262 2 
137 1 325 1 255 1 65 2 221 1 379 1 337 2 302 1 23 1 125 1 267 2 342 1 26 1 107 1 382 1 231 1 126 1 294 1 
99 1 118 1 55 1 137 1 325 1 65 2 263 1 221 1 302 1 23 1 267 2 342 1 26 1 107 1 231 1 126 1 294 1 262 2 
118 1 55 1 137 1 263 1 221 2 337 2 125 1 287 1 267 2 342 1 231 2 126 1 294 1 325 2 65 4 255 1 302 1 23 2 26 1 107 1 382 1 262 2 
137 1 325 1 255 1 65 2 221 1 379 1 337 2 302 1 23 1 150 1 125 1 267 2 342 1 26 1 107 1 382 1 231 1 126 1 
99 1 118 1 55 1 137 1 325 1 65 2 263 1 221 1 302 1 23 1 150 1 267 2 342 1 26 1 107 1 231 1 126 1 262 2 
118 1 55 1 137 1 263 1 221 2 337 2 125 1 287 1 267 2 342 1 231 2 126 1 325 2 65 4 255 1 302 1 23 2 150 1 26 1 107 1 382 1 262 2 
118 1 55 1 137 1 325 2 255 1 65 4 263 1 221 2 337 2 302 1 23 2 125 1 267 2 287 1 342 1 26 1 107 1 382 1 231 2 126 1 262 2 
215 1 191 1 217 1 137 1 337 1 38 1 315 1 5 1 341 1 267 2 342 1 90 1 62 1 317 1 126 1 372 1 254 1 128 1 65 2 71 1 299 1 355 1 302 1 207 1 26 1 107 1 359 1 262 1 
215 1 191 1 137 1 222 1 337 1 38 1 315 1 341 1 267 2 342 1 90 1 62 1 317 1 126 1 372 1 254 1 128 1 235 1 65 2 69 1 71 1 299 1 355 1 302 1 26 1 107 1 359 1 262 1 
118 1 55 1 137 1 263 1 221 2 337 2 125 1 287 1 267 2 342 1 231 2 126 1 325 2 65 4 255 1 302 1 23 2 328 1 26 1 107 1 382 1 262 2 
118 1 55 1 217 1 137 1 263 1 221 2 337 2 38 1 315 1 5 1 125 1 267 2 287 1 342 1 90 1 317 1 231 2 126 1 372 1 128 1 254 1 203 1 376 1 325 2 255 1 65 4 71 1 299 1 355 1 302 1 23 2 207 1 26 1 107 1 382 1 359 1 262 2 
118 1 55 1 137 1 221 1 337 2 125 1 267 2 287 1 342 1 289 1 231 1 126 1 353 1 325 1 255 1 65 3 296 1 378 1 355 1 302 1 23 1 148 1 303 1 328 1 26 1 107 1 382 1 359 1 262 1 
118 5 55 4 245 1 59 1 194 2 337 20 125 5 287 4 345 1 250 1 126 3 63 1 14 1 255 4 65 41 257 3 22 1 302 3 74 1 26 3 260 4 262 21 80 1 214 3 218 1 263 4 221 8 34 1 88 1 267 6 41 1 232 1 373 1 100 1 326 1 181 1 107 3 382 4 331 4 50 1 186 1 188 1 53 1 
214 3 118 4 55 3 218 1 263 4 34 1 221 7 245 1 194 2 59 1 337 20 88 1 125 5 267 8 287 4 41 1 345 1 250 1 126 4 232 1 373 1 63 1 14 1 100 1 65 38 255 3 326 1 22 2 257 3 181 1 302 4 74 1 26 4 107 4 382 4 331 4 186 1 50 1 260 4 188 1 80 1 53 1 262 18 
214 2 118 8 55 7 218 1 263 7 34 1 221 14 245 1 194 1 59 1 337 27 88 1 125 8 267 4 287 7 41 1 345 1 250 1 347 2 126 2 232 1 373 1 63 1 14 1 100 1 65 52 255 7 22 1 257 4 181 1 302 2 74 1 26 2 107 2 382 7 331 4 186 1 50 2 260 4 188 1 53 1 262 25 
214 1 118 3 55 3 83 1 218 1 263 3 221 6 194 1 59 1 337 9 125 3 267 4 287 3 250 1 126 2 232 1 65 19 255 3 257 1 181 2 302 2 26 2 107 2 382 3 331 2 50 1 260 2 188 1 80 1 262 10 
214 2 118 2 55 2 218 1 263 2 221 4 34 1 245 1 194 2 59 1 337 14 88 1 125 3 267 6 287 3 345 1 250 1 126 3 232 1 373 1 14 1 255 2 65 26 22 2 257 2 181 1 302 3 26 3 107 3 382 3 331 4 188 2 260 2 262 12 
271 1 0 1 142 1 56 1 108 1 239 1 193 1 29 1 95 1 198 1 
104 1 169 1 
271 1 158 1 0 1 142 1 108 1 193 1 29 1 171 1 182 1 
336 1 183 1 
97 1 136 1 344 1 
271 1 204 1 0 1 56 1 239 1 2 1 193 1 223 2 225 1 142 1 369 1 108 1 29 1 94 1 290 1 95 1 321 1 332 1 
271 1 204 1 0 1 56 1 239 1 2 1 193 1 223 2 225 1 142 1 369 1 108 1 29 1 94 1 290 1 95 1 321 1 332 1 
271 1 204 1 0 1 56 1 239 1 2 1 193 1 223 2 225 1 142 1 369 1 108 1 29 1 94 1 290 1 95 1 321 1 332 1 
136 1 336 1 183 1 
136 1 336 1 183 1 
97 1 344 1 
97 1 136 1 344 1 
279 1 298 1 
191 1 0 1 169 1 2 1 193 1 223 1 86 1 225 1 142 1 289 2 349 1 290 1 11 1 271 1 16 1 353 2 378 2 298 1 355 2 241 1 104 1 165 1 108 1 279 1 359 2 29 1 332 1 
137 1 363 1 312 1 38 2 337 1 248 1 315 2 340 2 267 2 341 1 157 1 342 1 90 1 62 1 289 2 126 1 372 1 253 1 254 1 65 2 71 1 299 2 355 2 302 1 162 1 328 1 26 1 107 1 211 1 359 2 262 1 
178 1 375 1 203 1 323 1 85 1 71 1 299 2 38 2 315 2 141 1 277 1 8 1 320 1 160 1 77 1 372 1 147 1 154 1 281 2 
178 1 308 1 375 1 85 1 299 1 71 1 38 1 315 1 277 1 8 1 320 1 160 1 77 1 372 1 147 1 154 1 281 2 
215 1 254 1 238 1 71 1 299 1 38 1 315 1 249 1 141 1 277 1 90 1 187 1 372 1 374 1 
178 1 375 1 323 1 85 1 71 1 299 1 38 1 315 1 141 1 277 1 8 1 320 1 160 1 77 1 372 1 147 1 154 1 281 2 
269 1 
215 1 191 1 217 1 137 1 335 1 38 1 315 1 5 1 267 2 342 1 62 1 90 1 289 2 317 1 371 1 126 1 372 1 128 1 254 1 353 2 65 1 378 2 299 1 71 1 355 3 302 1 148 2 26 1 207 1 107 1 359 3 262 1 
81 1 204 4 273 2 170 1 103 1 161 2 266 1 91 1 357 2 109 2 305 1 127 1 113 2 96 4 53 1 
204 1 237 1 109 1 127 1 161 1 206 1 233 1 
204 2 66 1 170 1 103 1 161 1 130 1 367 1 266 1 227 1 91 1 357 1 109 1 290 1 127 1 332 1 146 1 96 1 
54 1 118 2 55 2 285 1 124 2 7 2 125 2 287 2 290 5 127 9 254 3 203 1 204 8 71 4 299 3 21 2 161 8 206 1 130 3 357 6 305 1 209 1 208 2 215 1 81 2 362 1 364 2 168 2 170 4 38 3 138 2 315 3 172 2 266 4 90 10 91 4 317 3 42 3 372 3 146 5 233 1 96 12 273 6 274 1 103 4 149 2 152 2 382 2 109 2 153 1 111 2 112 2 113 6 332 5 
214 1 81 1 282 1 118 2 55 2 34 1 170 2 245 1 124 1 88 1 172 2 125 2 266 2 287 2 91 2 93 1 290 1 127 8 373 1 146 1 96 6 14 1 204 5 273 5 103 2 257 1 161 5 130 1 357 3 382 2 305 1 109 2 113 5 260 1 332 1 
118 1 335 1 170 1 196 1 124 1 39 1 339 1 172 2 125 2 266 1 41 1 91 1 289 1 92 1 290 1 127 2 63 1 353 1 378 1 103 1 355 1 161 2 73 1 148 1 74 1 306 1 359 1 332 1 
204 1 170 1 103 1 161 1 206 1 266 1 91 1 109 1 127 1 233 1 
118 2 55 2 204 5 273 5 168 1 161 5 124 1 172 2 125 2 287 2 382 2 357 5 127 5 113 5 96 10 
204 1 109 1 290 1 332 1 146 1 130 1 
215 2 81 2 362 2 170 2 224 1 38 4 315 4 61 1 266 2 90 1 91 1 290 3 127 2 372 1 146 4 254 1 68 1 274 1 238 1 71 1 103 2 299 4 161 2 130 2 184 1 163 1 305 2 187 1 332 3 
271 1 0 1 276 1 
271 1 0 1 276 1 
271 1 0 1 56 1 298 1 122 1 
271 1 0 1 276 1 
271 1 0 1 293 1 
271 1 0 1 293 1 
271 1 0 1 293 1 
271 1 0 1 
193 1 29 1 
214 1 118 1 263 2 34 1 221 2 59 1 337 4 125 1 267 2 41 1 126 1 63 1 100 1 65 8 257 1 302 1 74 1 26 1 107 1 186 1 260 1 53 1 262 4 
214 1 118 1 263 2 34 1 221 3 59 1 337 6 125 2 267 4 287 1 41 1 126 2 63 1 100 1 65 11 255 1 354 1 257 1 302 2 74 1 26 2 107 2 382 1 186 1 50 1 260 2 53 1 262 5 
214 1 118 3 55 2 263 3 34 1 221 4 245 1 59 1 337 9 88 1 125 3 267 6 287 2 41 1 126 3 373 1 63 1 14 1 100 1 255 1 65 19 354 1 257 1 22 1 302 3 74 1 26 3 107 3 382 2 186 1 260 1 53 1 262 10 
214 1 118 2 55 1 263 3 34 1 221 5 245 1 59 1 337 10 88 1 125 3 267 6 287 2 41 1 126 3 373 1 63 1 14 1 100 1 255 2 65 17 354 1 22 1 257 1 302 3 74 1 26 3 107 3 382 2 186 1 260 1 53 1 262 7 
214 1 118 1 263 2 34 1 221 2 59 1 337 4 125 1 267 2 41 1 126 1 63 1 100 1 65 8 257 1 302 1 74 1 26 1 107 1 186 1 260 1 53 1 262 4 
214 1 118 2 55 2 263 1 34 1 221 2 245 1 59 1 337 6 88 1 125 2 267 2 287 2 126 1 373 1 14 1 255 1 65 12 257 1 302 1 26 1 107 1 382 2 260 1 262 6 
214 1 118 2 55 1 263 3 34 1 221 5 245 1 59 1 337 10 88 1 125 3 267 8 287 2 41 1 126 4 373 1 63 1 14 1 100 1 255 2 65 18 354 1 257 1 22 2 302 4 74 1 26 4 107 4 382 2 186 1 260 1 53 1 262 8 
214 1 118 2 55 2 263 3 34 1 221 6 245 1 59 1 337 9 88 1 125 3 267 8 287 3 126 4 373 1 14 1 255 3 65 16 257 1 22 2 302 4 26 4 107 4 382 3 260 1 262 7 80 1 
118 1 100 2 65 7 255 3 263 3 221 6 337 3 125 1 74 3 41 3 186 1 63 1 262 4 
214 1 118 2 55 1 263 3 34 1 221 4 245 1 59 1 337 10 88 1 125 3 267 8 287 2 41 1 126 4 373 1 63 1 14 1 100 1 255 1 65 18 257 1 22 2 302 4 74 1 26 4 107 4 382 2 186 1 260 1 53 1 262 8 80 1 
118 1 100 1 65 8 255 1 263 2 221 3 337 4 22 1 302 2 125 1 267 4 74 1 26 2 41 1 107 2 186 1 126 2 63 1 53 1 262 4 
100 1 118 1 237 1 65 6 263 2 221 2 337 3 125 1 74 1 41 1 186 1 63 1 53 1 262 3 
118 1 55 1 65 4 255 1 263 1 221 2 354 1 337 2 302 1 125 1 267 2 287 1 26 1 107 1 382 1 126 1 262 2 
214 1 118 1 55 1 65 7 255 1 263 1 221 2 257 1 337 3 125 1 287 1 382 1 50 1 260 2 262 4 
118 3 55 2 263 5 221 9 337 11 125 3 287 2 267 4 41 2 347 1 126 2 63 1 100 1 255 4 65 23 275 1 297 1 257 2 22 2 302 2 74 2 26 2 107 2 382 2 186 1 50 1 260 2 53 1 262 12 
65 1 260 1 262 1 
65 1 337 1 257 1 
118 1 55 1 168 1 65 6 255 1 263 2 221 3 354 1 337 3 302 1 125 1 267 2 287 1 26 1 107 1 382 1 126 1 262 3 
214 1 118 2 55 2 263 1 34 1 221 2 245 1 59 1 337 6 88 1 125 2 267 2 287 2 126 1 373 1 14 1 255 1 65 12 257 1 302 1 26 1 107 1 382 2 260 1 262 6 
118 1 65 6 255 1 263 1 221 2 337 3 125 1 74 1 41 1 63 1 262 3 
100 1 255 1 65 3 263 1 221 2 297 1 337 1 22 1 302 1 267 2 74 1 41 1 26 1 107 1 186 1 126 1 262 2 
118 2 255 2 65 10 263 3 221 5 59 1 337 5 302 1 39 1 125 2 267 2 74 2 26 1 41 2 107 1 126 1 63 1 262 5 
65 2 255 1 221 1 59 1 337 2 302 1 125 1 267 2 26 1 107 1 382 1 126 1 
118 1 55 1 65 4 255 1 263 1 221 2 59 1 337 2 302 1 125 1 267 2 287 1 26 1 107 1 382 1 126 1 262 2 
65 3 255 1 263 1 297 1 221 2 59 1 22 1 337 1 302 3 267 6 74 1 26 3 41 1 107 3 126 3 80 1 262 2 
214 1 118 5 55 3 263 7 221 12 59 1 337 16 125 5 267 10 287 3 229 1 41 3 251 1 126 5 63 2 100 1 179 1 65 34 255 5 297 1 22 2 354 1 257 3 302 5 74 3 26 5 107 5 382 3 186 1 50 1 260 4 53 1 262 18 80 1 
191 1 18 1 289 1 278 1 359 1 355 1 258 1 
191 1 18 1 102 1 247 1 355 1 197 1 258 1 105 1 289 1 278 1 359 1 213 1 
215 1 254 1 90 1 237 1 238 1 71 1 299 1 187 1 372 1 38 1 315 1 
215 1 254 1 128 1 191 1 217 1 353 1 378 1 71 1 299 1 355 2 38 1 315 1 75 1 90 1 289 1 317 1 359 2 372 1 
191 1 217 1 362 1 38 1 315 1 7 1 90 3 289 2 317 2 372 1 128 1 254 2 353 1 378 2 299 1 71 1 300 1 355 2 75 1 330 1 306 1 359 2 112 1 
254 2 128 1 191 1 353 1 362 1 69 1 378 2 71 1 299 2 300 1 355 2 38 2 315 2 7 1 25 1 75 1 90 3 289 2 330 1 317 2 306 1 359 2 112 1 372 1 
215 1 254 1 204 1 362 1 364 1 71 1 299 3 38 3 313 1 315 3 7 1 25 1 90 4 317 1 109 1 370 1 42 1 208 1 290 2 112 1 372 1 332 2 146 1 
215 1 254 1 204 1 362 1 364 1 71 1 299 3 38 3 315 3 7 1 25 1 90 4 317 1 109 1 42 1 208 1 290 2 112 1 111 1 372 1 332 2 146 1 
159 1 71 1 299 1 372 1 38 1 315 1 
178 1 215 2 254 2 203 1 299 6 71 3 38 7 315 7 60 1 340 1 156 1 157 1 329 1 90 3 151 1 49 1 317 1 159 1 153 1 372 2 292 1 
118 1 191 2 337 3 5 1 125 1 342 2 289 1 126 2 253 1 63 1 128 1 254 1 203 1 353 1 65 6 299 1 71 1 355 2 72 1 302 2 23 1 74 1 75 1 207 1 26 2 359 2 262 3 217 1 137 2 263 2 221 2 38 1 315 1 267 4 90 1 41 1 317 1 231 1 372 1 100 1 376 1 325 1 378 1 328 1 107 2 186 1 53 1 
215 1 364 1 170 2 86 1 38 1 138 1 315 1 266 2 90 2 91 2 42 1 290 3 127 1 146 2 233 1 204 1 274 1 299 1 103 2 21 1 161 1 206 1 130 1 152 1 109 1 208 1 111 1 332 3 
54 1 254 1 203 1 364 1 299 2 71 2 38 2 315 2 90 2 317 1 159 1 153 1 372 1 
215 1 254 1 203 1 238 1 3 1 71 1 299 4 38 4 315 4 25 1 90 1 187 1 372 1 
254 1 361 1 362 1 299 2 71 2 121 1 38 2 315 2 48 1 90 1 49 1 317 1 372 1 292 1 
215 1 375 1 85 1 71 1 299 1 372 1 38 1 147 1 315 1 281 1 
178 1 254 1 203 1 299 2 71 1 312 1 38 2 315 2 157 1 90 1 372 1 
215 1 254 2 203 1 362 1 238 1 3 1 299 4 71 2 38 5 315 5 156 1 157 1 90 3 151 1 187 1 372 2 
215 1 254 2 203 1 362 1 238 1 3 1 299 4 71 2 38 5 366 1 315 5 156 1 157 1 90 3 187 1 372 2 
215 1 254 1 128 1 191 1 353 1 69 1 378 1 71 1 299 1 355 2 38 1 315 1 75 1 90 1 289 1 317 1 359 2 372 1 
254 1 362 1 299 1 71 2 38 1 315 1 60 1 90 1 49 1 317 1 153 1 372 1 292 1 
226 1 33 1 191 1 129 1 307 1 
117 1 33 2 191 1 129 2 204 1 70 1 300 1 86 1 226 1 173 1 288 1 330 1 109 1 208 1 306 1 290 2 332 2 307 2 135 1 
33 1 129 1 363 1 355 1 248 1 226 1 289 1 211 1 359 1 
226 1 288 1 70 1 
270 1 243 1 28 1 346 1 284 1 76 1 145 3 20 1 19 3 256 1 31 1 
210 1 31 1 301 1 190 1 
346 1 31 1 
243 1 237 1 346 1 31 1 
243 1 28 1 346 1 76 1 145 1 19 1 31 1 
119 1 30 1 19 1 
243 1 139 1 28 1 346 1 284 1 76 1 145 3 20 2 19 3 51 1 31 1 167 1 
270 1 243 1 28 1 346 1 368 1 76 1 145 2 19 2 31 1 
375 1 284 1 19 1 28 1 8 1 76 1 145 1 78 1 31 1 190 1 281 1 
28 1 346 1 284 1 76 1 145 1 19 1 31 1 
243 1 28 1 346 2 284 1 76 1 145 1 19 1 
17 1 284 1 19 2 28 2 346 1 76 2 351 1 145 2 31 1 261 1 
270 2 243 1 98 1 284 1 19 3 256 1 301 1 28 1 346 1 76 1 145 3 31 2 190 1 
270 1 243 1 375 1 284 1 19 2 28 1 8 1 346 1 200 1 320 1 76 1 145 2 31 1 147 1 281 2 
270 2 243 1 284 1 19 4 123 1 301 1 28 2 346 1 368 1 76 2 145 4 31 2 190 1 
243 1 28 1 346 1 284 1 76 1 145 1 19 1 31 1 
270 2 243 2 20 1 19 4 301 1 139 1 28 1 346 2 76 1 145 4 210 1 31 3 167 1 190 1 
270 1 243 1 216 1 28 1 346 1 284 1 76 1 242 1 145 2 19 2 31 1 201 1 
243 1 284 1 19 3 20 2 286 1 139 1 28 1 346 1 76 1 145 3 31 1 167 2 
89 1 120 1 10 2 31 2 
28 1 284 1 76 1 145 1 252 1 19 1 
270 1 243 1 28 1 346 1 284 1 76 1 145 2 19 2 256 1 31 1 
195 1 
243 1 28 1 346 1 284 1 76 1 145 1 19 1 31 1 

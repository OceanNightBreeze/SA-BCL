#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 152 (114,123) (114,123) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 152 (114,123) (114,123) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 152 (114,123) (114,123) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 152 (114,123) (114,123) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 152 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 152 77 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 152 77 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (56,119,178,215) (56,119,178,215) 300 334 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
210 1 95 2 213 1 114 1 215 4 116 1 56 2 117 2 29 1 119 2 300 1 123 1 169 6 16 1 175 1 67 1 325 1 178 7 233 2 108 1 71 1 18 2 131 1 152 1 
210 1 95 2 213 1 300 1 123 1 114 1 215 4 169 6 16 1 175 1 116 1 29 1 117 2 56 2 325 1 67 1 233 2 178 7 71 1 119 2 108 1 18 2 131 1 152 1 
210 1 95 2 213 1 300 1 123 1 114 1 215 4 169 6 16 1 175 1 116 1 29 1 117 2 56 2 325 1 67 1 233 2 178 7 71 1 119 2 108 1 18 2 131 1 152 1 
210 1 95 2 213 1 300 1 123 1 114 1 215 4 169 6 16 1 175 1 116 1 29 1 117 2 56 2 325 1 67 1 233 2 178 7 71 1 119 2 108 1 18 2 131 1 152 1 
56 1 300 1 178 2 119 1 215 1 169 1 152 1 175 1 
210 1 95 1 169 2 312 1 16 1 175 1 228 1 56 1 232 1 233 1 178 2 119 1 191 1 108 1 164 1 131 1 
95 1 169 3 215 1 312 1 175 1 228 1 56 2 117 1 178 3 233 2 119 2 71 1 18 1 
95 1 300 1 169 6 215 5 11 1 175 1 29 1 56 2 117 2 325 1 233 2 178 7 119 2 77 1 71 1 18 2 152 1 
95 1 300 1 169 6 215 5 11 1 175 1 29 1 56 2 117 2 325 1 233 2 178 7 119 2 77 1 71 1 18 2 152 1 
102 1 301 1 32 1 
28 2 301 1 381 1 
365 1 147 2 188 2 80 2 17 2 120 1 313 2 362 2 
308 1 111 1 47 1 1 1 182 1 49 1 97 1 53 1 352 2 313 2 6 1 357 2 76 1 118 1 188 3 80 2 120 1 362 2 365 1 269 2 62 1 321 2 248 1 65 1 145 1 88 1 176 1 147 3 372 1 70 1 129 1 204 1 17 2 331 2 110 1 254 1 332 1 
365 1 147 1 359 1 188 1 80 1 17 1 14 1 181 1 313 1 362 1 
335 1 301 1 107 1 217 1 14 1 356 1 264 1 102 1 346 1 147 1 188 1 80 1 257 1 256 1 
335 2 301 1 217 1 14 1 313 1 356 1 264 1 102 1 147 1 188 1 17 1 80 1 256 2 362 1 257 1 
134 1 335 1 214 1 143 1 256 1 
102 1 90 1 335 2 214 1 301 1 250 1 143 1 256 2 
335 1 214 1 256 1 
365 1 335 1 84 1 143 1 14 1 313 1 359 1 147 1 188 1 17 1 80 1 181 1 256 1 362 1 
301 1 
102 1 90 1 259 1 335 2 214 1 301 1 143 1 256 2 
335 5 214 2 168 2 301 1 197 1 303 1 143 2 371 1 355 1 102 1 90 1 69 1 329 1 243 1 277 2 202 1 163 2 149 1 256 5 
172 1 107 1 313 4 74 1 89 1 220 1 147 5 188 5 315 1 17 4 80 5 120 1 319 2 362 1 
147 2 188 2 80 2 17 2 268 1 14 1 181 1 313 2 
111 1 62 1 269 1 1 1 321 1 182 1 313 1 220 1 118 1 147 2 188 2 70 1 234 1 129 1 204 1 17 1 80 1 331 1 110 1 319 1 
32 1 120 1 
313 1 89 1 147 2 188 2 92 1 80 2 17 1 120 2 362 1 
373 1 234 1 81 1 
62 1 269 1 111 1 1 1 321 1 182 1 147 1 118 1 188 1 70 1 129 1 331 1 204 1 120 1 110 1 194 1 
147 3 188 3 80 3 17 3 120 1 362 1 319 1 313 3 
147 1 188 1 80 1 17 1 14 1 181 1 313 1 
89 1 147 1 188 1 92 1 80 1 17 1 14 1 313 1 362 1 
308 1 111 1 1 1 212 1 182 1 335 1 49 1 97 1 53 1 217 1 352 2 313 3 356 1 220 1 264 1 357 1 76 1 118 1 188 4 31 1 80 3 120 1 362 2 319 1 365 1 62 1 269 1 321 1 14 1 65 1 145 1 88 1 176 1 89 1 147 4 70 1 129 1 204 1 17 3 331 1 110 1 257 1 256 1 332 1 
147 2 188 2 80 2 17 1 107 1 120 1 313 1 319 1 74 1 
335 1 301 1 14 1 217 1 313 3 89 1 264 1 220 1 356 1 147 3 188 3 31 1 17 3 80 3 362 1 256 1 319 2 257 1 153 1 
313 2 89 1 147 2 188 2 234 1 17 2 80 2 319 1 81 1 362 1 
62 1 269 1 111 1 1 1 321 1 182 1 147 1 118 1 188 1 70 1 129 1 331 1 204 1 120 1 110 1 
62 1 269 1 111 1 1 1 321 1 358 1 147 1 118 1 188 1 70 1 340 1 331 1 204 1 120 1 110 1 
308 1 49 1 53 1 352 2 218 1 100 1 263 1 357 4 240 1 76 1 189 1 58 1 81 2 368 1 248 2 272 1 145 1 176 2 229 1 373 2 94 1 234 2 378 1 332 1 
147 1 188 1 80 1 17 1 268 1 14 1 257 1 313 1 
223 1 130 1 
223 1 130 1 
261 1 306 1 
261 1 306 1 
261 1 306 1 
309 1 223 1 130 1 
309 1 223 1 130 1 
309 1 223 1 130 1 
205 1 223 1 130 1 
333 1 223 1 130 1 
284 1 261 1 306 1 10 1 223 2 130 2 
205 1 223 1 130 1 
205 1 223 1 130 1 
333 1 335 1 336 1 249 1 337 1 24 1 5 1 313 2 55 1 115 1 147 2 188 2 275 1 222 1 57 1 241 1 80 2 17 2 223 1 236 1 347 1 130 1 120 1 256 1 
284 1 335 2 301 1 249 2 186 1 144 1 55 2 115 2 328 1 275 1 57 2 139 2 41 1 223 2 236 3 342 1 130 2 151 1 256 2 
210 1 67 1 16 1 
210 1 191 1 16 1 
67 2 191 1 280 1 173 1 16 3 60 1 
67 1 191 1 280 1 16 2 60 1 354 1 
67 1 191 1 280 1 16 2 60 2 
48 1 335 5 214 1 51 1 337 1 102 1 28 3 240 1 241 1 163 1 296 1 267 1 165 2 121 2 368 1 168 1 301 2 85 1 143 4 13 1 272 1 371 3 90 1 69 1 94 1 277 1 376 2 149 2 347 1 255 1 256 5 381 1 
134 5 335 9 155 1 214 6 51 3 337 4 101 1 102 1 28 9 240 3 162 1 243 1 163 2 296 1 121 6 368 3 167 1 168 2 301 5 85 2 143 7 369 5 272 3 371 8 64 1 90 1 69 1 94 3 277 2 376 6 149 6 207 1 255 2 256 9 381 3 
335 3 51 1 337 1 102 1 240 1 28 4 243 1 163 1 267 1 165 1 121 2 368 1 168 1 301 3 85 1 143 2 13 1 272 1 371 3 94 1 277 1 376 2 149 2 255 1 256 3 381 2 
335 4 155 1 51 2 337 2 102 1 28 7 240 2 162 1 243 1 163 1 267 1 165 2 121 4 368 2 168 1 301 4 85 1 13 1 143 3 272 2 371 5 64 1 94 2 277 1 376 4 149 4 255 1 256 4 381 3 
111 1 204 1 110 1 
171 1 110 1 
32 1 110 1 379 1 
110 1 87 1 
91 1 
204 1 110 1 
111 1 154 1 245 1 204 1 379 2 110 3 
183 1 248 4 323 1 35 2 63 1 272 1 338 1 263 3 176 3 357 7 240 1 189 2 314 1 93 1 330 1 295 1 105 1 
183 1 248 4 323 1 35 2 63 1 272 1 338 1 263 3 176 3 357 7 240 1 189 2 314 1 93 1 330 1 295 1 105 1 
183 1 248 4 323 1 35 2 63 1 272 1 338 1 263 3 176 3 357 7 240 1 189 2 314 1 93 1 330 1 295 1 42 1 105 1 
308 1 183 1 51 3 53 1 23 1 338 2 352 2 263 10 357 31 240 4 76 1 314 1 189 5 317 1 295 5 105 2 142 4 368 3 34 1 248 16 323 2 35 3 63 2 272 4 227 1 145 1 176 15 231 1 93 1 330 1 94 3 377 3 279 1 278 1 
308 2 183 1 53 2 352 4 238 1 338 1 263 4 357 9 240 1 76 2 189 3 314 1 295 1 105 1 366 1 248 5 35 2 323 1 63 1 272 1 227 1 145 2 176 4 330 1 
210 1 95 1 1 1 156 1 215 1 157 1 312 1 56 1 221 1 103 1 119 1 191 1 138 1 297 1 269 1 247 1 321 1 169 2 305 1 16 2 173 1 175 1 228 1 67 1 233 1 178 2 70 1 331 1 109 1 307 1 
210 1 95 1 1 1 156 1 22 1 215 2 157 1 312 1 56 1 221 1 103 1 119 1 192 1 191 1 138 1 297 1 269 1 247 1 321 1 169 3 305 1 173 1 16 2 228 1 67 1 233 1 178 3 70 1 235 1 331 1 
210 1 95 1 1 1 156 1 22 1 215 2 157 1 312 1 221 1 103 1 192 1 191 1 138 1 269 1 321 1 169 2 305 1 16 2 173 1 228 1 67 1 233 1 178 2 70 1 331 1 
95 2 1 1 21 1 351 1 73 1 56 1 103 2 119 1 138 2 341 1 9 1 269 1 62 1 321 1 169 1 305 2 230 1 70 1 178 1 235 1 331 1 204 1 110 1 
210 1 95 1 1 1 156 1 22 1 157 1 56 1 221 1 103 1 119 1 191 1 138 1 297 1 269 1 247 1 321 1 169 1 305 1 16 2 173 1 175 1 67 1 178 1 70 1 331 1 109 1 
283 1 
132 2 1 1 335 5 2 1 339 1 102 1 188 1 341 1 343 2 246 1 62 2 301 2 12 2 107 1 14 1 346 1 147 1 69 1 70 1 149 2 204 1 206 1 255 1 110 1 256 5 257 1 19 1 21 1 214 6 113 1 311 1 217 1 356 1 264 1 161 2 28 2 30 2 265 1 163 1 80 1 269 2 321 2 82 1 168 1 36 4 170 1 226 2 371 2 38 1 90 3 277 1 180 2 331 2 44 1 381 2 
19 1 132 1 259 1 335 3 113 1 214 2 2 1 217 1 356 1 264 1 188 1 80 1 82 1 36 2 107 1 14 1 38 1 90 1 346 1 147 1 256 3 257 1 
19 1 259 1 335 3 214 1 113 1 2 1 217 1 356 1 264 1 102 1 161 1 188 1 80 1 82 1 301 1 36 3 107 1 14 1 38 1 90 1 346 1 147 1 256 3 257 1 
19 1 132 1 259 1 335 3 113 1 214 2 2 1 217 1 356 1 264 1 102 1 161 1 188 1 80 1 82 1 301 1 36 3 107 1 226 1 14 1 38 1 90 1 346 1 147 1 256 3 257 1 
132 4 133 1 335 5 2 1 54 1 102 5 188 1 343 2 246 1 345 1 301 5 12 2 107 1 14 1 346 1 147 1 69 1 149 1 257 1 256 5 19 1 259 1 214 7 113 1 217 1 264 1 356 1 161 4 30 2 265 1 163 1 80 1 82 1 168 1 83 1 36 6 226 4 324 1 371 1 38 1 90 3 277 1 180 2 381 2 
132 2 335 4 2 1 102 1 188 1 343 2 246 1 301 2 12 2 107 1 14 1 346 1 147 1 69 1 149 1 257 1 256 4 19 1 113 1 214 4 311 1 217 1 264 1 356 1 30 2 28 2 161 2 265 1 163 1 80 1 82 1 168 1 36 4 226 2 371 1 38 1 90 2 277 1 180 2 381 2 
132 2 19 1 133 1 335 4 214 4 113 1 2 1 54 1 217 1 356 1 264 1 102 1 161 2 30 2 188 1 265 1 163 1 80 1 343 2 246 1 82 1 168 1 301 1 83 1 36 4 12 2 226 2 107 1 371 1 14 1 38 1 90 2 346 1 147 1 69 1 277 1 149 1 180 2 256 4 257 1 381 2 
132 2 19 1 133 1 335 4 214 4 113 1 2 1 54 1 217 1 356 1 264 1 102 1 161 2 30 2 188 1 265 1 163 1 80 1 343 2 246 1 82 1 168 1 301 1 83 1 36 4 12 2 226 2 107 1 371 1 14 1 38 1 90 2 346 1 147 1 69 1 277 1 149 1 180 2 256 4 257 1 381 2 
132 2 19 1 335 4 214 4 113 1 2 1 54 1 217 1 160 1 239 2 356 1 264 1 102 1 161 2 28 2 30 2 187 1 188 1 163 1 80 1 246 1 82 1 168 1 301 1 302 1 36 4 226 2 107 1 371 1 14 1 38 1 90 2 346 1 147 1 69 1 277 1 149 1 180 2 281 2 256 4 257 1 
19 1 132 3 133 1 335 4 113 1 214 5 2 1 54 1 217 1 356 1 264 1 102 1 30 2 161 3 188 1 265 1 163 1 80 1 343 2 246 1 82 1 345 1 168 1 301 1 83 1 36 5 12 2 107 1 226 3 371 1 14 1 38 1 90 2 346 1 147 1 69 1 277 1 149 1 180 2 256 4 257 1 381 2 
19 1 132 3 133 1 335 4 113 1 214 5 2 1 54 1 217 1 356 1 264 1 102 1 30 2 161 3 188 1 265 1 163 1 80 1 343 2 246 1 82 1 345 1 168 1 301 1 83 1 36 5 12 2 107 1 226 3 371 1 14 1 38 1 90 2 346 1 147 1 69 1 277 1 149 1 180 2 256 4 257 1 381 2 
132 2 19 1 335 4 214 4 113 1 311 1 2 1 217 1 160 1 239 2 356 1 264 1 102 1 161 2 28 2 30 2 188 1 163 1 80 1 246 1 82 1 168 1 301 1 36 4 226 2 107 1 371 1 14 1 38 1 90 2 346 1 147 1 69 1 277 1 149 1 180 2 281 2 256 4 257 1 
308 1 183 1 49 1 248 3 35 1 323 1 53 1 272 1 338 1 218 1 352 2 263 2 145 1 176 3 357 6 240 1 76 1 189 2 314 1 373 1 330 1 234 1 32 1 120 2 81 1 332 1 
308 2 49 2 51 2 23 1 53 2 352 4 263 2 357 14 240 2 76 2 189 1 295 1 79 1 120 1 81 4 142 3 299 1 368 2 248 8 272 1 126 1 65 1 145 2 176 6 231 1 372 1 373 11 94 1 234 11 377 3 150 1 380 1 332 1 
111 1 308 1 1 1 0 1 350 1 182 1 49 1 53 1 352 2 313 1 220 1 357 2 118 1 76 1 188 2 80 1 120 1 81 1 319 1 194 1 363 1 269 1 62 1 321 1 299 1 248 1 145 1 65 1 176 1 147 2 70 1 372 1 129 1 204 1 331 1 17 1 110 1 332 1 
1 2 182 2 183 1 49 3 51 2 52 1 97 2 53 3 338 1 240 3 189 4 188 3 295 4 62 1 298 1 195 2 299 1 248 10 65 1 145 3 147 3 70 2 17 1 204 2 110 2 258 1 308 3 111 2 22 1 352 6 313 1 263 8 220 1 357 20 27 2 76 3 118 2 314 1 80 1 120 2 319 1 81 7 269 3 321 3 224 2 368 2 35 1 323 1 272 3 176 10 326 2 372 1 373 7 330 1 94 2 234 7 129 2 331 3 332 3 
308 2 47 2 1 2 260 1 20 1 21 1 22 1 49 2 53 2 218 1 352 4 313 1 289 1 357 2 76 2 188 1 80 1 341 1 319 1 269 8 62 2 321 7 196 1 248 1 370 1 251 1 199 1 145 2 65 1 176 1 147 1 70 2 372 1 17 1 331 8 204 2 110 3 307 1 332 2 
308 1 49 1 51 1 53 1 352 2 263 1 313 1 357 3 240 1 76 1 189 1 188 1 80 1 81 1 362 1 106 1 299 1 368 1 248 1 272 1 145 1 89 1 176 2 147 1 373 1 94 1 234 1 17 1 332 1 
308 1 368 1 49 1 248 2 53 1 218 1 352 2 263 1 145 1 357 2 240 1 76 1 373 1 58 1 234 1 295 1 81 1 332 1 
308 1 49 1 53 1 272 1 218 1 352 2 263 1 145 1 176 2 357 2 76 1 189 1 373 1 94 1 234 1 378 1 81 1 332 1 
308 1 51 1 49 1 53 1 352 2 218 1 263 2 357 4 240 1 76 1 189 1 295 1 81 2 368 1 248 2 272 1 145 1 176 2 373 2 94 1 234 2 332 1 
308 1 368 1 49 1 248 2 53 1 199 1 352 2 263 1 145 1 357 2 240 1 76 1 373 1 58 1 234 1 295 1 81 1 332 1 
308 1 49 1 53 1 199 1 272 1 352 2 263 1 145 1 176 2 357 2 76 1 189 1 373 1 94 1 234 1 378 1 81 1 332 1 
308 1 51 1 49 1 53 1 352 2 263 2 357 4 240 1 76 1 189 1 295 1 81 2 368 1 248 2 199 1 272 1 145 1 176 2 373 2 94 1 234 2 332 1 
308 1 368 1 49 1 51 1 248 2 53 1 272 1 352 2 263 2 145 1 176 2 357 4 240 1 76 1 189 1 373 2 94 1 234 2 295 1 81 2 332 1 
111 1 308 1 1 1 182 1 49 1 97 1 53 1 352 2 357 2 118 1 76 1 188 1 120 1 269 1 62 1 321 1 248 1 145 1 65 1 176 1 147 1 372 1 70 1 129 1 204 1 331 1 110 1 332 1 
111 1 308 1 1 1 49 1 53 1 352 2 357 2 358 1 118 1 76 1 188 1 137 1 340 1 120 1 269 1 62 1 321 1 248 1 145 1 65 1 176 1 147 1 372 1 70 1 204 1 331 1 110 1 332 1 
308 1 51 1 49 1 53 1 352 2 263 2 357 4 240 1 76 1 189 1 295 1 81 2 368 1 299 1 248 2 272 1 145 1 176 2 373 2 94 1 234 2 332 1 
111 1 308 1 1 1 182 1 49 1 51 1 97 1 53 1 352 2 263 2 357 4 27 1 240 1 118 1 76 1 189 1 188 1 295 1 81 2 269 1 321 1 368 1 248 2 272 1 145 1 176 2 147 1 70 1 373 2 94 1 234 2 129 1 331 1 204 1 110 1 307 1 332 1 
308 1 49 1 51 1 53 1 352 2 263 1 313 1 357 3 240 1 76 1 188 1 295 1 80 1 362 1 81 1 33 1 299 1 368 1 248 2 272 1 145 1 176 1 89 1 147 1 373 1 94 1 234 1 17 1 332 1 
308 2 50 2 51 3 23 1 262 1 53 2 216 1 184 1 352 4 238 1 263 6 357 19 240 3 76 2 189 3 295 3 142 2 368 3 248 9 198 2 15 1 200 1 272 3 145 2 176 10 127 1 231 1 94 3 377 1 46 1 
308 3 50 4 51 3 262 2 53 3 23 2 184 1 185 1 352 6 238 1 263 4 287 1 357 26 240 3 76 3 189 2 293 1 292 1 190 1 295 2 142 2 368 3 248 14 198 1 174 1 227 2 272 2 15 2 200 1 145 3 176 12 94 2 377 2 46 1 
308 3 183 1 50 4 51 4 23 3 262 1 53 3 216 1 185 1 184 1 338 1 352 6 238 1 263 8 287 1 357 41 240 5 76 3 314 1 189 4 293 1 190 1 292 1 295 4 59 1 142 4 368 4 248 20 35 1 323 1 198 1 174 1 227 1 15 2 200 1 272 5 145 3 176 21 231 1 330 1 94 4 377 3 46 1 
308 4 183 1 50 4 51 4 23 3 262 1 53 4 216 1 185 1 184 1 338 1 352 8 238 1 263 7 287 1 357 38 240 5 76 4 314 1 189 4 293 1 190 1 292 1 295 3 59 1 142 4 368 4 248 20 35 1 323 1 198 1 174 1 227 2 15 2 200 1 272 4 145 4 176 18 231 1 330 1 94 3 377 3 46 1 
308 2 183 1 50 4 51 7 23 2 262 1 53 2 185 1 184 1 338 1 352 4 238 1 263 14 287 1 357 52 240 8 76 2 314 1 189 7 293 1 190 1 292 1 79 2 295 7 142 4 368 7 248 27 35 1 323 1 198 1 227 1 174 1 15 1 200 1 272 8 145 2 176 25 231 2 330 1 94 7 377 4 46 1 
309 1 304 1 
141 1 10 1 205 1 
115 1 284 1 327 1 328 1 57 1 249 1 41 1 223 1 130 1 55 1 
333 1 222 1 
115 1 128 1 57 1 242 1 249 1 223 1 348 1 130 1 55 1 
284 1 335 1 301 1 249 1 144 1 55 1 115 1 328 1 275 1 57 1 139 1 41 1 223 1 236 2 342 1 130 1 151 1 256 1 
284 1 335 1 301 1 249 1 144 1 55 1 115 1 328 1 275 1 57 1 139 1 41 1 223 1 236 2 342 1 130 1 151 1 256 1 
284 1 335 1 301 1 249 1 144 1 55 1 115 1 328 1 275 1 57 1 139 1 41 1 223 1 236 2 342 1 130 1 151 1 256 1 
309 1 10 1 304 1 
309 1 10 1 304 1 
141 1 205 1 
141 1 10 1 205 1 
336 1 5 1 
333 1 335 1 336 1 24 1 337 1 5 1 313 2 55 1 288 1 115 1 188 2 57 1 222 1 241 1 139 1 80 2 342 1 223 1 120 1 249 1 143 1 147 2 17 2 236 1 130 1 347 1 256 1 
308 1 47 2 1 1 20 1 285 1 49 1 53 1 352 2 289 1 357 2 76 1 188 2 80 2 269 2 321 2 299 1 225 1 248 1 124 1 86 1 145 1 65 1 176 1 147 2 70 1 372 1 204 1 331 2 110 1 208 1 332 1 
210 1 269 2 1 1 166 1 321 2 156 1 22 1 157 1 173 1 16 2 67 1 70 1 103 1 316 1 191 1 266 1 331 2 297 1 307 1 
210 1 269 1 1 1 321 1 156 1 22 1 3 1 157 1 173 1 16 2 67 1 103 1 316 1 70 1 191 1 331 1 297 1 
62 1 269 1 1 1 321 1 21 1 70 1 103 1 266 1 204 1 331 1 341 1 110 1 282 1 9 1 
210 1 269 1 166 1 1 1 321 1 156 1 22 1 157 1 173 1 16 2 67 1 70 1 103 1 316 1 191 1 266 1 331 1 297 1 
349 1 
102 1 329 1 301 1 149 1 303 1 371 1 32 1 
335 1 214 1 102 1 28 1 265 1 163 1 343 1 168 1 301 2 12 1 371 1 90 1 69 1 277 1 149 1 256 1 381 1 
1 3 335 5 135 1 51 2 98 2 339 1 102 2 291 1 240 2 104 2 344 2 62 1 301 8 303 1 69 4 70 4 149 8 204 3 255 2 110 10 307 1 256 5 111 3 154 1 214 5 264 2 75 2 28 12 163 4 320 2 121 6 269 3 364 1 367 1 122 2 321 3 368 2 168 4 171 2 371 9 272 2 87 3 90 3 274 2 326 2 329 1 374 1 277 4 94 2 376 6 331 3 43 2 379 2 381 6 
335 1 214 1 51 2 23 1 98 1 185 1 339 1 287 1 102 2 28 6 240 2 292 1 190 1 163 2 104 2 121 5 61 1 142 1 368 2 168 2 301 5 174 1 371 8 272 2 90 1 69 2 277 2 94 2 253 1 376 5 377 1 149 5 255 1 256 1 381 3 
133 1 335 1 183 1 98 1 338 1 313 1 26 1 240 2 359 1 188 1 163 1 104 2 80 1 362 1 365 1 168 1 323 1 84 1 14 1 272 1 371 2 147 1 69 1 277 1 149 2 17 1 181 1 256 1 
168 1 301 1 303 1 371 1 102 1 69 1 329 1 277 1 163 1 149 1 
368 2 51 2 301 5 98 1 272 2 371 5 240 2 28 10 326 1 94 2 376 5 104 2 149 5 121 5 381 5 
102 1 90 1 335 1 214 1 301 1 256 1 
1 1 335 3 21 1 214 4 339 2 291 1 243 1 163 2 341 1 269 4 62 2 367 2 321 4 168 2 271 1 371 2 125 1 90 2 69 1 70 1 277 2 149 2 204 1 331 4 206 1 110 1 44 1 255 2 256 3 
308 1 111 1 1 1 182 1 49 1 97 1 53 1 352 2 313 2 357 1 76 1 118 1 188 3 80 2 120 1 362 2 269 1 62 1 365 1 321 1 65 1 88 1 145 1 176 1 147 3 70 1 129 1 331 1 17 2 204 1 110 1 332 1 
168 1 301 4 35 1 371 1 339 1 102 2 28 4 69 1 277 1 376 2 163 1 149 2 255 1 381 2 121 2 
115 1 177 1 249 1 
115 1 177 1 249 1 
115 1 177 1 249 1 
115 1 148 1 249 1 
115 1 336 1 249 1 41 1 136 1 
115 1 148 1 249 1 
115 1 148 1 249 1 
115 1 249 1 
223 1 130 1 
308 2 183 1 248 4 35 1 323 1 53 2 272 1 227 1 352 4 338 1 263 3 145 2 176 4 357 8 240 1 76 2 189 2 314 1 330 1 295 1 
183 1 248 3 35 1 323 1 272 1 338 1 263 2 176 3 357 6 240 1 314 1 189 2 330 1 32 1 
308 1 368 1 51 1 248 2 53 1 272 1 352 2 263 2 145 1 176 2 357 4 240 1 76 1 189 1 94 1 294 1 295 1 
142 2 368 1 51 1 248 3 23 1 272 1 263 2 176 4 357 7 240 1 189 1 231 1 94 1 377 1 295 1 
308 2 183 1 51 2 53 2 338 2 352 4 263 9 357 23 240 3 76 2 314 1 189 5 295 4 79 1 368 2 142 2 248 11 35 1 323 2 272 3 227 2 145 2 176 12 252 1 231 1 330 1 94 2 377 2 150 1 
176 1 357 1 142 1 
357 1 248 1 377 1 
308 1 368 1 51 1 248 3 53 1 272 1 352 2 263 3 145 1 176 3 357 6 240 1 76 1 326 1 189 2 94 1 294 1 295 1 
308 1 51 2 23 1 53 1 185 1 352 2 238 1 263 2 287 1 357 12 240 2 76 1 189 1 292 1 190 1 295 1 142 1 368 2 248 6 272 2 174 1 145 1 176 6 94 2 377 1 
183 1 248 3 323 1 272 1 338 1 263 2 176 3 357 6 240 1 189 1 295 1 
308 1 248 1 323 1 53 1 227 1 338 1 352 2 263 2 145 1 176 2 252 1 357 3 76 1 189 1 314 1 330 1 295 1 
308 1 183 1 248 5 323 2 53 1 272 2 352 2 238 1 338 2 263 5 145 1 176 5 26 1 357 10 240 2 76 1 189 3 295 2 
308 1 368 1 248 2 53 1 238 1 352 2 263 1 145 1 357 2 240 1 76 1 295 1 
308 1 368 1 51 1 248 2 53 1 272 1 238 1 352 2 263 2 145 1 176 2 357 4 240 1 76 1 189 1 94 1 295 1 
308 3 248 1 323 1 53 3 216 1 227 1 238 1 352 6 338 1 263 2 145 3 176 2 252 1 357 3 76 3 189 1 295 1 
308 5 183 2 51 3 23 1 53 5 216 1 338 3 352 10 238 1 263 12 357 34 240 5 76 5 314 1 189 7 317 1 294 1 295 5 142 4 368 3 34 1 248 16 35 1 323 3 227 2 272 5 145 5 176 18 252 1 231 1 330 1 94 3 377 3 278 1 
308 1 183 1 23 1 53 1 185 1 352 2 238 1 338 1 263 2 357 8 240 1 76 1 314 1 189 2 142 1 248 4 35 1 323 1 272 1 145 1 176 4 330 1 377 1 
308 2 183 1 51 1 23 1 53 2 185 1 338 1 238 1 352 4 263 3 357 11 240 2 76 2 189 2 314 1 294 1 295 1 142 2 368 1 248 6 35 1 323 1 272 1 145 2 176 5 231 1 330 1 377 1 
308 3 183 1 51 2 23 1 53 3 185 1 338 1 352 6 238 1 263 4 287 1 357 19 240 3 76 3 314 1 189 3 292 1 190 1 294 1 295 1 142 1 368 2 248 9 35 1 323 1 174 1 272 3 227 1 145 3 176 10 330 1 94 2 377 1 
308 3 183 1 51 2 23 1 53 3 185 1 338 1 352 6 238 1 263 5 287 1 357 17 240 3 76 3 314 1 189 3 292 1 190 1 294 1 295 2 142 1 368 2 248 10 35 1 323 1 227 1 272 2 174 1 145 3 176 7 330 1 94 1 377 1 
308 1 183 1 23 1 53 1 185 1 352 2 238 1 338 1 263 2 357 8 240 1 76 1 314 1 189 2 142 1 248 4 35 1 323 1 272 1 145 1 176 4 330 1 377 1 
308 1 51 2 23 1 53 1 185 1 352 2 238 1 263 2 287 1 357 12 240 2 76 1 189 1 292 1 190 1 295 1 142 1 368 2 248 6 272 2 174 1 145 1 176 6 94 2 377 1 
308 4 183 1 51 2 23 1 53 4 185 1 338 1 352 8 238 1 263 5 287 1 357 18 240 3 76 4 314 1 189 3 292 1 190 1 295 2 294 1 142 1 368 2 248 10 35 1 323 1 174 1 272 2 227 2 145 4 176 8 330 1 94 1 377 1 
308 4 51 3 23 1 53 4 216 1 185 1 238 1 352 8 263 6 287 1 357 16 240 3 76 4 189 3 292 1 190 1 295 3 142 1 368 3 248 9 174 1 272 2 227 2 145 4 176 7 94 2 377 1 
183 1 248 3 323 3 272 1 338 3 263 6 176 4 357 7 240 1 314 1 189 3 330 2 295 3 
308 4 183 1 51 2 23 1 53 4 216 1 185 1 338 1 238 1 352 8 263 4 287 1 357 18 240 3 76 4 314 1 189 3 292 1 190 1 295 1 142 1 368 2 248 10 35 1 323 1 174 1 272 2 227 2 145 4 176 8 330 1 94 1 377 1 
147 1 188 1 80 1 107 1 120 1 45 1 74 1 
37 1 107 1 273 1 74 1 290 1 147 1 188 1 40 1 80 1 361 1 120 1 45 1 
111 1 62 1 269 1 1 1 321 1 313 1 118 1 147 2 188 2 70 1 340 1 204 1 17 1 80 1 331 1 120 1 110 1 319 1 
269 1 111 1 1 1 367 1 321 1 154 1 96 1 70 2 39 1 8 1 331 1 204 1 110 1 
269 1 62 1 1 1 321 1 21 1 70 1 204 1 341 1 331 1 32 1 110 1 
111 1 62 1 269 1 1 1 321 1 313 1 118 1 147 2 188 2 70 1 129 1 204 1 17 1 80 1 331 1 120 1 110 1 319 1 
111 2 1 1 217 1 313 1 118 1 188 2 80 2 120 1 319 1 344 1 269 1 321 1 367 1 171 1 14 1 147 2 70 1 129 1 331 1 17 2 204 2 110 3 257 1 
111 2 1 1 217 1 313 1 25 1 118 1 188 2 340 1 80 2 120 1 319 1 344 1 269 2 321 2 367 1 171 1 14 1 147 2 70 1 331 2 17 2 204 2 110 3 257 1 
111 1 1 1 335 2 214 1 25 1 264 1 102 1 344 1 269 3 62 1 321 3 367 1 301 1 171 1 87 1 201 1 70 1 331 3 204 1 379 1 110 4 209 1 256 2 
62 1 111 1 269 3 1 1 367 1 321 3 335 2 214 1 301 1 171 1 87 1 25 1 264 1 102 1 70 1 204 1 331 3 110 4 379 1 256 2 344 1 320 1 
269 1 1 1 321 1 260 1 70 1 331 1 
47 1 62 2 269 7 111 1 1 2 260 1 321 6 154 1 22 1 96 1 196 1 370 1 251 1 289 1 70 3 39 1 8 1 331 7 204 2 110 3 307 1 
1 1 182 1 183 1 49 2 97 1 53 2 338 1 240 1 188 2 189 2 195 1 299 1 248 3 145 2 147 2 70 1 17 1 204 1 110 1 307 1 308 2 111 1 352 4 313 1 263 2 27 1 357 6 76 2 118 1 314 1 80 1 120 2 81 1 319 1 269 1 321 1 225 1 323 1 35 1 272 1 176 3 373 1 330 1 234 1 129 1 331 1 332 2 
335 3 214 2 264 1 102 1 291 1 75 1 163 2 320 1 62 1 269 1 321 1 122 1 168 2 301 1 303 1 143 1 371 1 87 1 90 1 274 1 69 2 329 1 277 2 149 1 331 1 110 2 379 1 256 3 
269 2 111 1 1 1 260 1 321 2 154 1 135 1 70 2 331 2 204 1 379 1 110 2 307 1 
62 1 269 4 1 1 321 4 112 1 21 1 25 1 70 1 331 4 341 1 204 1 110 1 307 1 
269 2 111 1 1 1 367 1 321 2 96 1 52 1 237 1 353 1 70 2 8 1 331 2 204 1 110 1 
210 1 269 1 62 1 1 1 321 1 70 1 191 1 331 1 157 1 16 1 
269 2 1 1 321 2 22 1 285 1 289 1 70 1 331 2 204 1 110 1 307 1 
62 1 269 5 1 2 367 1 321 4 112 1 21 1 196 1 370 1 289 1 70 2 341 1 331 5 204 2 110 3 307 1 
62 1 269 5 270 1 1 2 367 1 321 4 112 1 21 1 196 1 289 1 70 2 341 1 331 5 204 2 110 3 307 1 
211 1 322 1 124 1 219 1 86 1 147 1 188 1 80 1 208 1 
211 1 68 1 99 1 
7 1 211 1 322 1 120 1 219 1 
211 1 335 2 322 2 301 1 143 1 14 1 217 1 99 1 219 2 264 1 66 1 7 2 356 1 102 1 68 1 31 1 120 1 257 1 256 2 
228 1 233 1 312 1 32 1 
228 1 56 1 233 1 178 1 119 1 169 1 312 1 
95 1 169 1 305 1 
169 3 159 1 312 1 175 1 228 1 56 1 276 1 233 1 178 3 119 1 375 1 131 2 
56 1 300 1 178 2 119 1 215 1 169 1 
210 1 169 1 16 1 175 1 56 1 117 1 67 1 178 1 179 1 233 1 119 1 
56 1 233 1 178 1 119 1 169 1 312 1 175 1 
228 1 56 1 178 1 119 1 169 1 312 2 175 1 
169 2 312 1 175 1 56 2 146 1 233 1 178 2 119 2 203 1 244 1 
169 3 215 2 312 1 175 1 228 1 56 1 29 1 117 1 325 1 178 3 233 2 119 1 18 1 
210 1 169 2 215 1 312 1 16 2 4 1 173 1 175 1 228 1 56 1 67 1 233 1 178 2 191 1 119 1 
334 1 56 1 300 1 178 2 119 1 215 1 169 1 175 1 
228 1 56 1 233 1 178 1 119 1 169 1 312 1 175 1 
72 1 215 2 169 4 159 1 312 2 228 2 56 1 117 1 178 4 233 3 119 1 375 1 18 1 131 1 
169 2 215 1 11 1 312 1 286 1 175 1 228 1 56 1 233 1 178 2 119 1 78 1 
310 1 169 3 159 1 312 1 175 1 228 1 56 1 233 1 178 3 119 1 375 2 131 2 
233 2 140 1 318 2 360 1 
56 1 178 1 119 1 169 1 158 1 175 1 
228 1 56 1 325 1 233 1 178 2 119 1 215 1 169 2 312 1 175 1 
193 1 
228 1 56 1 233 1 178 1 119 1 169 1 312 1 175 1 
215 1 169 3 312 1 175 1 228 1 56 1 325 1 178 3 233 1 119 1 131 1 
72 1 117 1 233 1 18 1 
233 1 312 1 

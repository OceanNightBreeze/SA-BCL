#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 132 1 123 1 324 3 218 2 158 1 8 2 315 1 223 1 70 3 331 1 172 1 203 2 
188 3 132 1 8 5 315 1 230 1 290 1 172 1 321 2 322 2 60 1 123 6 125 1 177 1 324 9 218 2 244 1 158 2 297 1 223 4 70 9 329 1 162 2 331 1 72 1 354 1 201 2 29 1 203 2 
188 3 132 1 8 5 315 1 230 1 290 1 172 1 321 2 322 2 60 1 123 6 125 1 177 1 324 9 218 2 244 1 158 2 297 1 223 4 70 9 329 1 162 2 331 1 72 1 354 1 201 2 29 1 203 2 
188 4 132 1 8 6 315 1 230 1 290 1 172 1 321 2 322 2 60 1 123 7 125 1 177 1 324 10 218 2 244 1 158 2 297 1 223 5 70 10 329 1 162 2 331 1 72 1 354 1 201 2 29 1 203 2 
188 2 132 1 8 4 315 1 230 1 290 1 172 1 321 1 322 2 123 4 125 1 177 1 324 7 218 2 244 1 158 2 297 1 223 3 70 7 329 1 162 2 331 1 72 1 354 1 201 2 29 1 203 2 
188 1 123 3 125 1 324 4 177 1 218 1 8 3 315 1 223 2 70 4 162 1 331 1 172 1 321 2 201 1 322 1 60 1 203 1 
42 1 324 2 218 1 157 1 158 1 8 1 315 1 70 2 331 1 72 1 172 1 354 1 201 1 322 1 305 1 203 1 
188 3 132 1 8 5 315 1 172 1 321 2 322 1 60 1 123 7 238 1 125 1 324 9 177 1 218 2 158 1 297 1 180 1 223 4 70 9 162 1 331 1 201 1 29 1 203 2 
188 3 132 1 8 5 315 1 172 1 321 2 322 1 60 1 123 7 238 1 125 1 324 9 177 1 218 2 158 1 297 1 180 1 223 4 70 9 162 1 331 1 201 1 29 1 203 2 
237 1 122 1 309 1 49 1 178 1 211 1 116 1 54 1 106 1 128 1 13 1 380 1 94 1 184 1 
334 1 
211 2 237 1 128 2 334 1 349 1 225 1 103 1 214 1 
237 2 334 1 348 1 349 2 371 1 350 1 181 1 287 2 103 1 335 2 22 1 375 2 211 5 128 5 364 1 225 1 291 1 356 1 293 1 
2 1 334 1 103 1 
191 2 334 1 342 1 
54 2 122 2 309 2 178 2 380 1 184 2 94 2 113 1 
307 1 85 1 309 2 207 2 52 2 113 1 76 2 210 1 190 1 54 2 318 1 56 1 196 1 39 1 366 1 94 2 340 1 232 1 266 1 369 1 267 1 122 3 295 1 178 2 19 1 370 1 296 1 220 1 199 1 221 1 69 1 380 1 183 1 184 3 381 1 186 2 107 2 
54 1 116 1 122 1 106 1 309 1 49 1 178 1 380 1 184 1 94 1 
32 1 122 1 178 1 49 1 334 1 282 1 360 1 103 1 142 1 193 1 211 1 128 1 184 1 149 1 
32 1 122 1 309 1 178 1 49 1 334 1 282 1 103 1 142 1 54 1 211 2 128 2 94 1 184 1 149 1 
187 1 211 1 237 1 128 1 349 1 
211 2 237 1 128 2 334 1 349 1 225 1 103 1 314 1 
211 1 128 1 349 1 
122 2 309 1 178 2 373 1 113 2 54 1 289 1 184 2 94 1 
320 1 277 1 247 1 
122 1 268 1 295 1 207 1 19 1 52 1 220 1 113 1 190 1 39 1 366 1 183 1 184 1 381 1 266 1 107 1 
122 2 124 1 309 1 295 1 178 1 19 1 207 1 220 1 52 1 284 1 190 1 54 1 320 1 39 1 183 1 366 1 184 2 381 1 266 1 107 1 
2 1 113 1 
54 3 122 3 124 1 309 3 178 3 94 1 184 3 113 1 
54 1 122 1 106 1 309 1 49 1 178 1 184 1 
54 1 122 1 309 1 49 1 178 1 289 1 184 1 94 1 373 1 
30 1 32 1 307 1 309 3 49 1 282 1 207 1 52 1 113 1 284 1 76 2 190 1 142 1 54 3 211 1 318 1 56 1 39 1 289 1 366 1 94 2 340 1 266 1 149 1 369 1 267 1 122 4 124 1 295 1 178 3 19 1 370 1 220 1 296 1 221 1 69 1 128 1 183 1 380 1 129 1 184 4 381 1 186 1 107 1 
193 1 288 1 54 1 122 2 124 1 309 1 178 2 184 2 113 1 
30 1 32 1 122 3 124 2 309 3 49 1 178 3 334 1 282 1 284 1 88 1 142 1 211 1 54 3 128 1 289 1 94 1 184 3 149 1 
122 2 124 1 309 2 178 2 54 2 320 1 289 1 277 1 94 1 184 2 
122 1 295 1 207 1 19 1 52 1 220 1 113 1 190 1 39 1 366 1 183 1 184 1 381 1 107 1 266 1 
122 1 207 1 19 1 52 1 220 1 113 1 38 1 39 1 366 1 77 1 183 1 184 1 381 1 107 1 266 1 
279 1 254 1 307 1 206 1 50 1 137 1 76 2 362 1 170 1 320 2 340 1 369 1 267 1 239 1 370 1 199 2 221 1 80 1 247 2 69 2 277 2 165 1 186 4 108 1 
54 1 122 1 309 1 49 1 178 1 184 1 149 1 140 1 
122 5 124 2 309 4 178 5 113 1 284 1 36 1 193 1 288 1 54 4 289 1 184 5 94 1 355 1 
54 2 122 2 106 1 309 2 49 1 178 2 184 2 140 1 
262 1 311 1 212 1 
262 2 24 1 41 1 311 2 167 1 208 1 
262 1 311 1 
262 1 311 1 
24 1 41 1 
24 1 41 1 
24 1 41 1 
262 1 245 1 311 1 
262 1 245 1 311 1 
262 1 245 1 311 1 
262 1 269 1 311 1 
262 1 269 1 311 1 
262 1 269 1 311 1 
83 1 33 1 62 2 347 1 334 1 325 2 311 2 112 1 327 1 361 2 272 2 262 2 211 2 200 3 93 1 128 2 339 2 167 1 151 1 
204 1 84 1 309 2 311 1 6 1 113 1 112 1 361 1 262 1 54 2 211 1 339 1 212 1 368 1 175 1 121 1 122 2 62 1 178 2 325 1 219 1 200 1 128 1 184 2 
42 1 162 1 322 2 68 1 67 2 
162 1 201 1 322 1 
42 1 201 1 322 1 
42 1 162 2 343 1 322 3 67 1 68 1 
298 1 42 1 162 1 322 2 67 1 68 1 
279 1 84 1 334 2 6 1 362 1 287 1 335 1 191 3 170 1 211 5 229 1 148 1 195 2 364 3 368 1 342 1 59 2 293 1 61 2 235 1 237 4 155 1 349 1 270 1 80 1 103 1 375 1 128 5 225 1 82 1 166 1 356 2 
279 3 187 5 75 1 334 5 6 4 312 5 286 1 362 3 287 2 335 2 191 9 170 3 211 9 317 1 229 2 146 1 148 2 195 6 364 8 342 3 293 1 61 6 215 1 235 1 237 7 349 6 20 1 350 1 80 3 103 1 375 2 128 9 225 1 166 3 356 6 
279 1 334 3 6 1 287 1 362 1 335 1 191 4 170 1 211 3 229 1 148 1 195 2 364 3 342 2 59 1 61 2 237 2 155 1 270 1 350 1 80 1 103 1 375 1 128 3 166 1 356 2 
279 2 75 1 334 4 6 2 286 1 287 1 362 2 335 1 191 7 170 2 211 4 229 1 148 1 195 4 364 5 342 3 59 2 61 4 215 1 237 3 155 1 270 1 350 1 80 2 103 1 375 1 128 4 166 2 356 4 
57 1 
2 1 266 1 209 1 
351 1 266 1 
39 1 266 1 
192 1 39 1 19 1 63 1 266 3 209 2 
39 1 19 1 266 1 
275 1 266 1 
279 1 254 4 154 1 310 1 3 1 101 1 7 1 65 1 199 2 80 1 182 1 69 3 264 1 105 2 251 1 253 1 186 5 108 3 
279 5 254 13 256 1 310 1 3 2 86 1 76 2 362 2 170 2 264 3 340 1 292 1 234 1 323 1 267 1 154 2 240 1 370 1 101 3 65 1 199 16 221 1 182 1 80 5 69 19 105 3 251 5 185 1 278 3 253 2 166 2 186 35 304 3 108 8 
279 1 254 5 256 1 310 1 3 1 76 4 37 1 264 1 340 2 267 2 154 1 370 2 101 1 199 3 221 2 80 1 182 1 69 5 105 2 251 1 253 1 131 1 186 8 108 4 
279 1 254 4 154 1 310 1 3 1 101 1 65 1 199 2 80 1 182 1 69 3 264 1 105 2 251 1 253 1 186 5 108 3 
279 1 254 4 154 1 310 1 3 1 101 1 65 1 199 2 80 1 182 1 69 4 264 1 105 2 251 1 253 1 186 6 108 3 
16 1 357 2 134 2 110 1 324 1 218 1 207 1 220 1 158 2 52 1 143 1 273 2 70 1 274 1 250 1 378 1 39 1 231 1 366 1 381 1 266 1 107 1 203 1 
1 1 357 1 134 1 207 1 52 1 10 1 55 1 11 1 58 1 322 2 343 1 42 1 324 1 218 1 158 1 220 1 273 1 224 1 70 1 162 1 331 1 130 1 201 1 381 1 107 1 203 1 
357 1 134 1 207 1 52 1 8 1 315 1 10 1 55 1 11 1 58 1 172 1 322 2 343 1 236 1 42 1 123 1 324 2 218 1 158 1 220 1 273 1 224 1 70 2 162 1 331 1 130 1 201 1 381 1 107 1 203 1 
1 1 357 1 134 1 110 1 207 1 52 1 8 1 315 1 115 1 10 1 55 1 58 1 172 1 343 1 322 2 42 1 123 2 324 3 218 1 158 1 220 1 273 1 224 1 70 3 162 1 130 1 201 1 381 1 107 1 203 1 
1 1 357 1 134 1 207 1 52 1 8 1 315 1 115 1 10 1 172 1 322 2 343 1 42 1 123 2 324 2 158 1 220 1 273 1 224 1 70 2 162 1 130 1 381 1 201 1 107 1 
111 1 
280 1 0 1 332 1 49 1 334 2 282 1 227 2 52 2 87 2 287 1 335 1 191 2 142 1 193 1 148 1 231 1 342 2 149 1 293 1 150 1 344 2 98 1 345 2 349 6 242 1 103 1 23 2 250 1 25 1 71 1 26 1 107 2 356 2 32 1 207 2 360 1 35 2 313 1 260 1 211 5 39 1 364 2 366 2 266 1 122 1 178 1 220 1 375 1 377 1 128 5 276 4 330 2 225 3 184 1 381 1 
32 1 0 1 332 1 49 1 282 1 227 1 360 1 142 1 193 1 211 3 149 1 150 1 214 1 122 1 98 1 178 1 349 2 128 3 276 2 71 1 225 1 184 1 
32 1 0 1 332 1 49 1 282 1 334 1 360 1 87 1 142 1 193 1 211 3 149 1 150 1 214 1 122 1 98 1 178 1 349 1 103 1 128 3 276 3 71 1 225 1 184 1 
32 1 0 1 332 1 49 1 282 1 334 1 227 1 360 1 87 1 142 1 193 1 211 3 149 1 214 1 150 1 122 1 98 1 345 1 178 1 349 2 103 1 128 3 276 3 225 1 71 1 184 1 
0 1 49 1 332 1 282 1 334 5 227 4 87 4 287 1 335 1 142 1 193 1 342 2 149 1 197 1 293 1 150 1 344 2 98 1 345 4 349 7 242 1 103 5 23 2 71 1 356 1 202 1 31 1 32 1 257 1 360 1 35 2 260 1 211 5 364 1 214 1 122 1 178 1 375 1 276 6 128 5 330 2 225 3 184 1 46 1 
0 1 49 1 332 1 282 1 334 2 227 2 87 2 287 1 335 1 191 2 142 1 193 1 342 2 149 1 293 1 150 1 344 2 98 1 345 2 242 1 349 4 103 1 23 2 71 1 356 1 32 1 360 1 35 2 260 1 313 1 211 4 364 1 122 1 178 1 375 1 276 4 128 4 330 2 225 2 184 1 
31 1 32 1 0 1 332 1 49 1 334 1 282 1 227 2 87 2 360 1 35 2 287 1 260 1 335 1 142 1 193 1 211 4 364 1 342 2 149 1 293 1 150 1 344 2 122 1 98 1 345 2 178 1 349 4 242 1 103 1 375 1 23 2 128 4 276 4 330 2 225 2 71 1 184 1 46 1 356 1 202 1 
31 1 32 1 0 1 332 1 49 1 334 1 282 1 227 2 87 2 360 1 35 2 287 1 260 1 335 1 142 1 193 1 211 4 364 1 342 2 149 1 293 1 150 1 344 2 122 1 98 1 345 2 178 1 349 4 242 1 103 1 375 1 23 2 128 4 276 4 330 2 225 2 71 1 184 1 46 1 356 1 202 1 
31 1 306 1 32 1 0 1 332 1 49 1 334 1 282 1 227 2 87 2 360 1 287 1 260 1 335 1 191 2 142 1 193 1 211 4 364 1 341 2 149 1 233 1 293 1 150 1 122 1 98 1 345 2 178 1 349 4 103 1 374 2 375 1 43 1 23 2 128 4 276 4 330 2 225 2 71 1 184 1 356 1 
31 1 32 1 0 1 332 1 49 1 334 1 282 1 227 3 257 1 360 1 87 3 35 2 287 1 260 1 335 1 142 1 193 1 211 4 364 1 342 2 149 1 293 1 150 1 344 2 122 1 98 1 345 3 178 1 242 1 349 5 103 1 375 1 23 2 128 4 276 5 330 2 225 2 71 1 184 1 46 1 356 1 202 1 
31 1 32 1 0 1 332 1 49 1 334 1 282 1 227 3 257 1 360 1 87 3 35 2 287 1 260 1 335 1 142 1 193 1 211 4 364 1 342 2 149 1 293 1 150 1 344 2 122 1 98 1 345 3 178 1 242 1 349 5 103 1 375 1 23 2 128 4 276 5 330 2 225 2 71 1 184 1 46 1 356 1 202 1 
0 1 49 1 332 1 282 1 334 1 227 2 87 2 287 1 335 1 191 2 142 1 193 1 341 2 149 1 293 1 150 1 98 1 345 2 349 4 103 1 23 2 71 1 356 1 306 1 32 1 360 1 260 1 313 1 211 4 364 1 122 1 178 1 374 2 375 1 276 4 128 4 330 2 225 2 184 1 
1 1 307 2 309 1 207 8 52 7 137 1 76 4 54 1 56 1 196 2 231 1 39 2 366 2 340 2 266 3 232 1 369 2 236 1 267 2 122 1 124 1 178 1 156 1 370 2 220 2 372 1 246 1 199 1 221 2 159 1 352 1 69 1 127 1 250 1 184 1 381 2 107 8 28 1 186 2 
279 1 254 1 307 1 309 1 76 2 141 1 362 1 170 1 54 1 320 1 289 1 94 1 340 1 369 1 267 1 122 1 178 1 370 1 199 1 221 1 80 1 247 1 69 2 328 1 277 1 184 1 166 1 186 3 108 1 
279 1 267 1 254 2 307 1 310 1 2 1 3 1 370 1 101 1 137 1 113 1 199 2 76 2 221 1 80 1 182 1 247 1 69 3 264 1 105 1 320 1 277 1 340 1 186 5 108 2 369 1 
279 2 254 2 307 2 113 1 76 4 141 1 362 2 170 1 316 1 336 1 56 1 320 11 340 2 232 1 96 1 369 1 267 2 240 1 370 2 199 8 221 2 80 1 247 11 69 6 301 1 251 1 277 4 278 3 252 1 166 2 186 14 108 1 304 3 
307 1 309 1 333 1 207 1 52 1 113 1 284 1 76 2 141 1 190 1 337 1 54 1 56 1 117 1 39 1 366 1 340 1 266 1 232 1 369 1 267 1 122 2 268 1 124 1 295 1 178 1 19 1 370 1 220 1 199 1 221 1 69 1 183 1 277 1 184 2 381 1 107 1 186 2 
279 3 1 1 3 1 5 1 52 3 284 1 141 1 190 2 54 1 56 1 340 3 232 1 97 1 295 2 19 2 101 1 296 2 64 2 199 9 247 7 69 10 105 1 251 4 166 2 107 3 108 4 254 8 307 3 255 2 309 1 310 1 207 3 113 1 76 6 362 2 170 2 264 1 320 7 39 2 366 1 266 2 369 3 267 3 122 3 78 2 124 1 178 1 370 3 220 2 221 3 182 1 80 3 376 1 45 2 183 2 277 7 184 3 381 2 186 19 
279 1 267 1 254 1 307 1 239 1 370 1 137 1 199 2 76 2 221 1 362 1 247 1 320 1 251 1 277 1 340 1 186 2 369 1 
267 1 254 1 307 1 370 1 137 1 76 2 221 1 80 1 247 1 170 1 69 2 320 1 277 1 340 1 165 1 186 2 108 1 369 1 
279 1 254 2 307 1 137 1 76 2 362 1 170 1 320 2 340 1 369 1 267 1 370 1 199 2 221 1 80 1 247 2 69 2 251 1 277 2 166 1 186 4 108 1 
279 1 267 1 254 1 307 1 239 1 370 1 199 2 76 2 221 1 362 1 247 1 320 1 251 1 277 1 340 1 186 2 28 1 369 1 
267 1 254 1 307 1 370 1 76 2 221 1 80 1 247 1 170 1 69 2 320 1 277 1 340 1 165 1 186 2 28 1 108 1 369 1 
279 1 254 2 307 1 76 2 362 1 170 1 320 2 340 1 369 1 267 1 370 1 199 2 221 1 80 1 247 2 69 2 251 1 277 2 166 1 28 1 186 4 108 1 
279 1 254 2 307 1 76 2 362 1 170 1 320 2 340 1 369 1 267 1 370 1 199 2 221 1 80 1 247 2 69 2 251 1 277 2 166 1 186 4 108 1 
307 1 207 1 52 1 113 1 76 2 190 1 56 1 39 1 366 1 340 1 232 1 266 1 369 1 267 1 122 1 295 1 19 1 370 1 220 1 296 1 199 1 221 1 69 1 183 1 184 1 381 1 186 2 107 1 
307 1 207 1 52 1 113 1 138 1 76 2 38 1 56 1 39 1 77 1 366 1 340 1 232 1 266 1 369 1 267 1 122 1 19 1 370 1 220 1 199 1 221 1 69 1 183 1 184 1 381 1 186 2 107 1 
279 1 254 2 307 1 76 2 362 1 141 1 170 1 320 2 340 1 369 1 267 1 370 1 199 2 221 1 80 1 247 2 69 2 251 1 277 2 166 1 186 4 108 1 
279 1 254 2 307 1 207 1 52 1 76 2 362 1 190 1 170 1 320 2 39 1 340 1 266 1 369 1 236 1 267 1 122 1 295 1 19 1 370 1 220 1 296 1 199 2 221 1 80 1 247 2 69 2 45 1 251 1 277 2 183 1 184 1 381 1 166 1 186 4 107 1 108 1 
279 1 254 1 307 1 309 1 76 2 141 1 362 1 170 1 54 1 320 1 289 1 94 1 340 1 369 1 267 1 122 1 178 1 370 1 199 2 221 1 80 1 247 1 69 1 104 1 251 1 277 1 184 1 166 1 186 3 
279 3 254 6 281 1 76 4 362 3 37 1 144 2 170 3 145 1 340 2 174 2 176 1 267 2 18 1 240 1 370 2 66 1 199 9 221 2 102 1 80 3 69 10 379 1 251 3 278 1 252 1 166 3 186 19 108 3 304 2 
109 1 279 3 254 4 256 2 281 1 133 1 47 1 76 6 362 3 37 1 144 1 170 2 145 2 340 3 174 4 176 2 267 3 99 1 240 2 370 3 66 1 199 14 221 3 102 1 80 2 160 1 248 1 69 12 251 2 278 2 166 3 186 26 108 2 304 2 
109 1 279 5 254 9 256 1 281 1 133 1 47 1 310 1 3 1 76 6 362 4 37 1 144 1 170 4 264 1 145 1 340 3 174 4 176 2 267 3 99 1 240 3 370 3 101 1 66 1 199 19 221 3 102 1 182 1 80 5 160 1 248 1 69 21 105 1 249 1 379 1 251 4 278 3 252 1 166 4 186 40 108 5 304 4 
109 1 279 5 254 8 256 2 281 1 133 1 47 1 310 1 3 1 76 8 362 4 37 1 144 1 170 3 264 1 145 1 340 4 174 4 176 2 267 4 99 1 240 3 370 4 101 1 66 1 199 19 221 4 102 1 182 1 80 4 160 1 248 1 69 19 105 1 249 1 379 1 251 3 278 3 252 1 166 4 186 38 108 5 304 4 
109 1 279 8 254 15 256 1 281 1 133 1 47 1 310 1 3 1 76 4 362 7 37 1 144 1 170 7 316 2 264 1 145 1 340 2 174 4 176 1 267 2 99 1 240 2 370 2 101 1 66 1 199 26 221 2 102 1 182 1 80 8 160 1 248 1 69 26 105 1 251 7 278 4 252 2 166 7 186 52 108 8 304 4 
262 1 83 1 319 1 62 1 93 1 339 1 325 1 311 1 167 1 361 1 
219 1 212 1 
262 1 81 1 62 1 339 1 325 1 311 1 367 1 285 1 361 1 
83 1 33 1 62 1 347 1 334 1 325 1 311 1 112 1 361 1 272 1 262 1 211 1 200 2 93 1 128 1 339 1 167 1 151 1 
83 1 33 1 62 1 347 1 334 1 325 1 311 1 112 1 361 1 272 1 262 1 211 1 200 2 93 1 128 1 339 1 167 1 151 1 
83 1 33 1 62 1 347 1 334 1 325 1 311 1 112 1 361 1 272 1 262 1 211 1 200 2 93 1 128 1 339 1 167 1 151 1 
245 1 136 1 208 1 
245 1 136 1 208 1 
92 1 269 1 
92 1 269 1 208 1 
121 1 204 1 
204 1 84 1 309 2 311 1 6 1 113 1 361 1 262 1 211 1 54 2 339 1 212 1 368 1 175 1 120 1 151 1 121 1 237 1 122 2 62 1 178 2 325 1 219 1 272 1 200 1 128 1 184 2 
245 1 136 1 
92 1 269 1 208 1 
74 1 307 1 207 2 283 1 52 2 76 2 141 1 9 1 56 1 196 2 39 1 12 1 340 1 266 1 232 1 369 1 267 1 122 2 178 2 370 1 220 1 199 1 221 1 352 1 161 1 69 1 127 1 184 2 381 1 107 2 186 2 
357 1 207 1 220 1 52 1 51 1 143 1 147 1 250 1 39 1 231 1 366 1 381 1 266 1 107 1 
42 1 1 1 357 1 207 1 52 1 51 1 220 1 10 1 224 1 55 1 162 1 14 1 201 1 381 1 343 1 322 2 107 1 15 1 
42 1 236 1 1 1 357 1 207 2 220 1 52 2 51 1 10 1 224 1 55 1 162 1 14 1 201 1 381 1 343 1 322 2 107 2 15 1 
42 1 1 1 357 1 207 1 52 1 220 1 10 1 224 1 55 1 162 1 119 1 14 1 201 1 381 1 343 1 322 2 107 1 
294 1 
334 1 287 1 335 1 103 1 22 1 375 1 364 1 291 1 293 1 356 1 
279 2 359 1 48 2 334 5 64 1 362 2 80 2 191 10 170 2 195 5 364 5 166 2 342 5 356 5 61 5 
211 1 128 1 334 1 349 1 225 1 103 1 
280 1 189 1 205 1 207 4 52 4 287 2 335 2 211 3 265 1 148 2 39 1 231 1 364 2 366 2 266 1 293 1 349 4 220 1 350 1 375 2 377 2 250 1 128 3 303 2 225 2 26 1 381 1 107 4 356 2 
22 1 2 1 364 1 334 1 291 1 356 1 103 1 
334 2 35 1 287 1 335 1 191 1 211 1 364 1 342 1 293 1 344 1 242 1 349 1 103 1 375 1 128 1 225 1 356 1 
279 2 48 2 282 2 334 8 52 3 287 4 335 4 191 12 194 1 148 2 195 6 291 1 342 6 293 4 61 6 236 1 346 1 19 3 349 5 63 1 100 2 64 2 351 3 103 2 22 1 300 2 303 1 166 2 107 3 356 8 205 1 359 2 207 3 259 2 209 2 362 2 170 2 211 5 363 2 39 3 364 9 366 1 171 2 266 10 220 3 179 1 80 2 375 4 377 1 275 2 128 5 225 3 226 2 381 4 
109 1 279 2 133 1 359 1 47 1 48 2 334 5 287 2 362 2 335 2 191 6 170 2 211 1 148 1 195 5 364 8 342 3 293 2 61 5 198 1 99 1 349 1 240 1 80 2 103 2 248 1 375 2 377 1 128 1 164 1 225 1 278 1 166 2 304 1 356 5 
279 2 359 1 309 1 49 1 48 2 3 1 287 1 335 1 211 1 116 1 54 1 264 1 364 2 13 1 94 1 293 1 234 1 122 1 178 1 101 1 80 1 375 1 106 1 128 1 380 1 184 1 46 1 356 2 
307 1 309 2 207 1 52 1 113 1 76 2 190 1 54 2 318 1 56 1 39 1 366 1 94 2 340 1 266 1 369 1 267 1 122 3 295 1 178 2 19 1 370 1 296 1 220 1 221 1 69 1 380 1 183 1 184 3 381 1 186 1 107 1 
48 1 334 3 287 1 335 1 103 1 191 4 375 1 377 1 105 1 148 1 195 2 364 2 342 2 356 1 293 1 61 2 
153 1 121 1 93 1 325 1 361 1 
325 1 258 1 361 1 
325 1 258 1 361 1 
325 1 258 1 361 1 
17 1 325 1 361 1 
17 1 325 1 361 1 
17 1 325 1 361 1 
325 1 361 1 
262 1 311 1 
279 2 267 1 254 5 3 1 370 1 101 2 199 5 221 1 76 2 80 2 37 1 69 5 264 2 251 2 340 1 186 10 108 3 234 1 
279 1 267 1 254 1 370 1 199 2 76 2 221 1 362 1 37 1 251 1 340 1 186 2 
279 1 267 1 254 2 370 1 199 2 76 2 221 1 80 1 362 1 37 1 170 1 69 2 251 1 340 1 166 1 186 4 108 1 
267 3 254 2 256 1 370 3 101 1 199 1 76 6 221 3 37 1 69 2 264 1 379 1 302 1 251 1 340 3 186 3 108 1 
279 5 254 12 256 2 310 1 3 2 86 1 76 10 362 3 37 1 170 3 264 3 340 5 323 1 267 5 240 1 370 5 101 3 199 15 221 5 182 1 80 5 21 1 69 18 105 1 379 1 302 1 251 5 185 1 278 3 252 1 166 3 186 33 304 4 108 7 
279 1 267 2 254 3 256 1 310 1 3 1 370 2 101 1 199 3 76 4 221 2 80 1 182 1 69 4 264 1 105 1 251 1 340 2 186 7 108 2 
279 1 254 2 310 1 2 1 3 1 101 1 199 2 182 1 80 1 69 3 264 1 105 1 186 5 108 2 
279 1 267 1 254 2 370 1 199 2 76 2 221 1 80 1 362 1 21 1 170 1 69 2 251 1 340 1 166 1 186 4 108 1 
279 1 254 2 240 1 199 3 80 1 362 1 170 1 69 4 251 1 278 1 252 1 166 1 186 7 108 1 304 2 
279 3 254 9 256 2 310 1 3 1 76 4 362 2 170 2 316 1 264 2 340 2 96 1 267 2 370 2 101 2 199 10 221 2 182 1 80 3 69 12 105 1 302 1 251 4 166 2 252 1 278 2 186 22 304 2 108 5 
69 1 186 1 304 1 
199 1 278 1 186 1 
279 1 267 1 254 3 370 1 64 1 199 3 221 1 76 2 362 1 80 1 21 1 170 1 69 3 251 1 340 1 166 1 186 6 108 2 
109 1 279 2 254 2 133 1 47 1 76 2 362 2 37 1 170 2 340 1 267 1 99 1 240 1 370 1 199 6 221 1 80 2 248 1 69 6 251 1 278 1 166 2 186 12 304 1 108 1 
279 1 254 2 3 1 101 1 199 3 80 1 69 3 264 1 251 1 186 6 108 1 
267 1 254 2 256 1 310 1 370 1 101 1 199 1 76 2 221 1 182 1 69 2 264 1 302 1 251 1 340 1 186 3 108 1 
279 1 254 2 133 1 310 1 3 1 76 2 37 1 264 1 340 1 267 1 240 1 370 1 101 1 199 3 221 1 80 1 182 1 69 4 105 1 278 1 186 7 304 1 108 2 
279 2 254 3 133 1 310 1 3 1 76 4 362 1 37 1 264 1 340 2 267 2 240 1 370 2 101 1 199 5 221 2 80 1 182 1 21 1 69 5 105 1 251 1 278 1 252 1 166 1 186 10 108 2 304 2 
109 1 279 3 254 4 256 1 133 1 47 1 310 1 3 1 76 6 362 2 37 1 170 2 264 1 340 3 267 3 99 1 240 1 370 3 101 1 199 8 221 3 182 1 80 3 21 1 248 1 69 10 105 1 251 1 278 1 166 2 186 18 304 1 108 3 
109 1 279 3 254 5 256 1 133 1 47 1 310 1 3 1 76 6 362 2 37 1 170 1 264 1 340 3 267 3 99 1 240 1 370 3 101 1 199 9 221 3 182 1 80 2 21 1 248 1 69 7 105 1 251 2 278 1 166 2 186 16 304 1 108 3 
279 1 254 2 133 1 310 1 3 1 76 2 37 1 264 1 340 1 267 1 240 1 370 1 101 1 199 3 221 1 80 1 182 1 69 4 105 1 278 1 186 7 304 1 108 2 
109 1 279 2 254 2 133 1 47 1 76 2 362 2 37 1 170 2 340 1 267 1 99 1 240 1 370 1 199 6 221 1 80 2 248 1 69 6 251 1 278 1 166 2 186 12 304 1 108 1 
109 1 279 3 254 5 256 2 133 1 47 1 310 1 3 1 76 8 362 2 37 1 170 1 264 1 340 4 267 4 99 1 240 1 370 4 101 1 199 9 221 4 182 1 80 2 21 1 248 1 69 8 105 1 251 2 278 1 166 2 186 17 304 1 108 3 
109 1 279 3 254 6 256 2 133 1 47 1 76 8 362 3 37 1 170 2 340 4 267 4 99 1 240 1 370 4 199 9 221 4 80 2 248 1 69 7 379 1 251 3 278 1 166 3 186 16 304 1 108 3 
279 1 254 6 310 1 3 1 101 3 199 3 80 1 182 2 69 4 264 3 251 3 186 7 108 3 
109 1 279 3 254 4 256 2 133 1 47 1 310 1 3 1 76 8 362 2 37 1 170 1 264 1 340 4 267 4 99 1 240 1 370 4 101 1 199 9 221 4 182 1 80 2 248 1 69 8 105 1 379 1 251 1 278 1 166 2 186 17 304 1 108 3 
193 1 288 1 122 1 178 1 184 1 113 1 139 1 
122 1 79 1 178 1 326 1 113 1 139 1 126 1 169 1 263 1 288 1 193 1 184 1 
236 1 308 1 207 4 52 4 220 1 90 1 250 1 231 1 39 1 366 1 381 1 107 4 266 1 
207 2 19 1 52 2 220 1 261 1 222 1 376 1 338 1 39 1 303 1 381 2 107 2 95 1 266 1 
42 1 224 1 207 1 366 1 220 1 52 1 201 1 381 1 322 1 107 1 
236 1 1 1 207 2 52 2 220 1 352 1 161 1 39 1 381 1 107 2 266 1 
236 1 207 5 52 4 220 2 246 1 159 1 90 1 352 1 250 1 231 1 39 2 303 1 366 1 381 2 107 5 266 3 
236 1 207 5 52 4 220 2 246 1 90 1 352 1 250 1 231 1 39 2 303 1 366 1 173 1 381 2 107 5 266 3 
250 1 39 1 231 1 2 1 207 1 366 1 220 1 52 1 381 1 266 1 107 1 
122 2 124 1 309 1 178 1 19 1 207 1 52 1 220 1 113 1 190 1 54 1 39 1 183 1 366 1 184 2 381 1 266 1 107 1 
309 1 49 1 207 1 52 1 113 1 190 1 142 1 54 2 39 2 266 3 149 1 122 2 124 1 178 2 19 2 220 1 300 1 275 1 303 1 183 1 184 2 381 1 107 1 
308 1 309 1 49 1 207 2 52 2 113 1 142 1 54 2 38 1 39 2 266 3 149 1 122 2 124 1 178 2 19 2 220 1 300 1 275 1 303 1 183 1 184 2 381 1 107 2 
308 1 334 1 282 1 19 1 207 3 243 1 349 1 52 3 220 1 351 1 209 1 103 1 211 2 275 1 300 1 353 1 128 2 39 1 303 1 366 1 381 1 107 3 266 4 
308 1 334 1 282 1 19 1 207 3 349 1 100 1 52 3 220 1 351 1 209 1 103 1 211 2 275 1 300 1 128 2 39 1 303 1 366 1 381 1 107 3 266 4 
207 1 220 1 52 1 372 1 381 1 107 1 
236 1 1 1 156 1 207 7 19 1 63 1 52 6 220 2 372 1 246 1 159 1 222 1 352 1 338 1 196 1 39 2 366 2 27 1 381 3 107 7 266 3 
279 1 3 1 52 1 141 1 190 1 54 1 9 1 340 2 236 1 295 1 19 1 296 1 101 1 199 2 247 1 69 3 105 1 107 1 108 2 254 2 255 1 307 2 309 1 310 1 207 1 113 1 76 4 264 1 320 1 39 1 266 1 369 2 267 2 122 2 124 1 178 1 370 2 220 1 221 2 182 1 80 1 45 1 277 1 183 1 184 2 381 1 186 5 
205 1 334 1 207 1 282 1 52 1 259 1 287 2 209 1 335 2 211 3 364 1 366 1 171 1 291 1 266 2 293 2 237 1 349 2 100 1 351 1 103 1 22 1 375 2 128 3 225 1 226 1 107 1 356 1 
236 1 39 1 19 1 207 2 63 1 220 1 179 1 52 2 372 1 381 2 266 2 107 2 209 1 
122 2 124 1 309 1 178 1 19 1 207 1 52 1 220 1 113 1 54 1 38 1 39 1 183 1 366 1 184 2 381 1 266 1 107 1 
207 1 19 1 63 1 52 1 220 1 222 1 338 1 39 1 303 1 27 1 381 2 107 1 266 1 
91 1 44 1 299 1 358 1 113 1 
30 1 32 1 237 1 358 2 49 1 217 1 334 1 282 1 113 1 103 1 114 1 142 1 91 1 211 2 44 2 299 2 128 2 163 1 149 1 
91 1 74 1 122 1 44 1 358 1 178 1 12 1 184 1 283 1 
91 1 217 1 114 1 
315 1 70 1 324 1 218 1 331 1 172 1 8 1 203 1 
188 1 216 1 123 2 324 4 218 1 34 1 8 3 89 1 315 2 223 1 70 4 72 1 172 2 203 1 
123 1 324 2 218 1 8 1 53 1 180 1 315 1 70 2 118 1 331 1 172 1 203 1 
152 1 324 3 218 1 34 1 8 1 89 2 315 1 70 3 331 1 72 2 172 1 203 1 
135 1 4 1 8 2 228 2 
70 1 324 1 218 1 331 1 365 1 203 1 
315 1 123 1 70 2 324 2 218 1 331 1 172 1 297 1 8 1 203 1 
40 1 
315 1 70 1 324 1 218 1 331 1 172 1 8 1 203 1 
315 1 2 1 172 1 8 1 
315 1 70 1 324 1 218 1 172 1 8 1 203 1 
273 1 324 1 158 1 
324 3 218 1 8 1 34 1 89 1 315 1 70 3 331 1 72 2 172 1 213 1 203 1 
315 1 123 1 70 2 324 2 218 1 172 1 321 1 8 1 203 1 
223 1 70 1 162 1 177 1 324 1 218 1 331 1 8 1 201 1 322 1 203 1 
315 1 70 1 324 1 218 1 331 1 8 1 203 1 
315 2 70 1 324 1 218 1 331 1 172 1 203 1 
315 1 70 2 324 2 218 2 331 1 241 1 73 1 8 1 271 1 203 2 
188 1 123 2 324 3 218 1 297 1 8 2 315 1 223 1 70 3 331 1 172 1 29 1 203 1 
42 1 168 1 123 1 324 2 218 1 8 1 315 1 70 2 162 1 331 1 172 1 201 1 322 2 343 1 203 1 
188 1 123 2 324 4 218 2 8 2 315 1 223 1 70 4 331 1 172 1 321 1 60 1 203 2 
123 1 324 3 218 1 297 1 8 1 315 1 70 3 331 1 72 1 172 1 203 1 
188 1 216 1 223 1 8 1 
315 1 8 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 2 53 2 273 1 236 1 161 1 237 2 58 1 211 1 278 9 140 1 60 1 61 2 257 3 193 2 258 4 216 6 63 2 96 5 347 1 312 1 197 1 221 1 17 1 222 9 174 1 20 1 133 2 29 1 
114 2 53 2 273 1 236 1 161 1 237 2 58 1 211 1 278 9 140 1 60 1 61 2 257 3 258 4 193 2 216 6 63 2 96 5 347 1 312 1 197 1 221 1 17 1 222 9 174 1 20 1 133 2 29 1 
114 2 53 2 273 1 236 1 161 1 237 2 58 1 211 1 278 10 140 1 60 1 61 2 257 4 258 5 193 2 216 7 63 2 96 6 347 1 312 1 197 1 221 1 17 1 222 10 174 1 20 1 133 2 29 1 
114 2 53 2 273 1 236 1 161 1 237 2 58 1 211 1 278 7 140 1 60 1 61 2 257 2 258 3 193 1 216 4 63 2 96 4 347 1 197 1 221 1 17 1 222 7 174 1 20 1 133 2 29 1 
347 1 312 1 114 1 17 1 222 4 161 1 174 1 237 1 278 4 60 1 257 1 61 1 193 2 258 2 133 1 216 3 63 1 96 3 
114 1 53 1 236 1 222 2 253 1 161 1 174 1 19 1 278 2 177 1 60 1 61 1 133 1 63 1 29 1 96 1 
53 1 222 3 161 1 174 1 278 3 140 1 60 1 61 2 257 1 258 1 133 2 216 1 96 2 
114 1 53 1 273 1 161 1 237 1 140 1 278 9 60 1 257 3 61 2 258 4 193 2 216 7 63 1 96 5 12 1 347 1 312 1 221 1 17 1 222 9 174 1 133 2 338 1 
114 1 53 1 273 1 161 1 237 1 140 1 278 9 60 1 257 3 61 2 258 4 193 2 216 7 63 1 96 5 12 1 347 1 312 1 221 1 17 1 222 9 174 1 133 2 338 1 
235 1 18 1 206 1 
300 1 18 1 146 2 
48 2 108 2 334 1 251 2 378 2 242 2 342 1 367 2 
55 1 326 2 325 1 162 1 188 1 3 2 210 1 342 1 297 2 367 3 238 1 91 2 280 2 279 1 302 1 330 1 10 1 242 2 171 1 334 1 377 1 378 2 247 1 336 1 48 3 229 1 106 1 108 2 26 1 76 1 77 1 79 1 251 2 80 1 319 1 321 1 82 1 
48 1 239 1 108 1 334 1 187 1 251 1 378 1 242 1 366 1 367 1 
170 1 323 1 235 1 100 1 18 1 376 1 367 1 48 1 239 1 38 1 281 1 196 1 251 1 270 1 
170 1 323 2 235 1 100 1 18 1 376 1 378 1 367 1 48 1 239 1 38 2 108 1 251 1 270 1 242 1 
372 1 323 1 38 1 75 1 104 1 
323 2 235 1 38 2 75 1 18 1 34 1 104 1 320 1 
323 1 38 1 104 1 
323 1 208 1 334 1 187 1 378 1 366 1 367 1 48 1 239 1 75 1 38 1 108 1 251 1 242 1 
18 1 
323 2 235 1 240 1 38 2 75 1 18 1 34 1 104 1 
51 1 323 5 234 2 235 1 375 1 18 1 34 1 186 2 246 1 119 1 104 2 248 2 107 1 75 2 38 5 27 1 112 1 283 1 135 1 
101 1 162 1 325 1 326 1 188 1 378 1 90 1 367 2 238 1 48 2 106 1 91 1 280 1 279 1 26 1 79 1 10 1 251 1 67 1 242 1 
48 3 108 1 251 3 378 3 67 1 242 3 342 1 367 3 
48 1 239 1 251 1 378 1 242 1 366 1 367 1 
48 1 239 1 108 1 109 1 374 1 251 1 378 1 242 1 367 1 
323 1 55 1 162 1 325 1 326 1 188 1 3 1 2 1 210 1 342 1 297 2 367 4 238 1 91 1 279 1 239 1 280 1 38 1 330 1 10 1 242 3 67 1 170 1 171 1 100 1 374 1 101 1 334 1 377 1 376 1 378 3 247 1 21 1 48 4 229 1 106 1 108 2 26 1 79 1 251 3 80 1 270 1 321 1 82 1 
48 2 28 1 196 1 251 2 378 1 242 1 67 1 342 1 367 2 
170 1 323 1 100 1 374 1 18 1 101 1 376 1 378 3 2 1 367 3 48 3 239 1 287 1 38 1 108 1 251 3 270 1 67 2 242 3 
374 1 378 2 90 1 367 2 48 2 108 1 360 1 251 2 67 1 242 2 
326 1 325 1 162 1 188 1 342 1 367 1 48 1 238 1 91 1 106 1 280 1 279 1 26 1 79 1 10 1 
326 1 162 1 188 1 71 1 342 1 367 1 48 1 238 1 91 1 106 1 280 1 26 1 289 1 79 1 10 1 
113 1 363 1 156 1 35 1 3 4 90 2 365 1 297 2 350 1 171 1 172 1 373 1 45 2 377 1 380 1 247 1 23 1 229 1 360 2 291 1 80 1 319 2 321 1 82 2 
170 1 48 1 239 1 251 1 378 1 242 1 367 1 74 1 
206 1 342 1 
374 1 378 1 367 2 342 2 48 2 108 1 109 1 251 2 242 1 
45 1 360 1 90 1 
326 1 325 1 162 1 202 1 188 1 342 1 367 1 48 1 238 1 91 1 106 1 280 1 279 1 26 1 79 1 10 1 
48 5 286 1 108 1 101 1 374 1 28 1 196 1 251 5 378 4 275 1 242 4 67 2 342 1 367 5 
48 2 239 1 251 2 378 2 242 2 74 1 366 1 367 2 
149 1 359 1 147 1 
149 1 359 1 147 1 
359 1 314 1 147 1 
359 1 314 1 147 1 
359 1 314 1 147 1 
359 1 147 1 
359 1 147 1 
125 1 39 1 
125 1 39 1 
125 1 39 1 
149 1 359 1 147 1 
359 1 64 1 147 1 
250 1 125 1 39 1 359 2 356 1 147 2 
323 2 18 1 87 2 147 2 47 1 296 2 379 1 37 1 228 2 299 1 38 2 250 1 122 2 359 2 145 1 11 1 331 2 292 1 168 3 
183 1 323 1 33 1 296 1 342 1 367 2 38 1 122 1 64 1 167 1 242 2 331 1 168 1 147 1 266 1 378 2 379 1 228 1 48 2 131 1 132 1 359 1 180 1 251 2 
114 1 63 1 237 1 
114 1 177 1 63 1 
207 1 177 1 237 2 63 3 261 1 68 1 
177 1 0 1 237 1 63 2 261 1 68 1 
177 1 237 1 63 2 261 1 68 2 
183 1 51 2 363 1 234 1 323 5 32 1 157 2 235 1 185 2 34 1 186 1 298 1 255 2 300 1 38 5 146 3 123 1 283 1 70 1 350 1 373 1 18 2 375 3 102 1 266 1 104 1 248 1 75 4 269 1 230 1 180 1 291 1 
51 6 363 3 323 9 234 2 157 6 235 1 252 1 34 1 163 1 186 2 298 2 92 1 255 6 300 3 38 9 146 9 346 1 283 1 284 1 372 5 70 1 350 3 173 1 373 3 18 5 375 8 266 4 104 6 248 2 75 7 269 2 230 3 358 5 291 3 135 1 
363 1 51 2 234 1 323 3 235 1 157 2 185 1 186 1 298 1 255 2 300 2 38 3 146 4 123 1 350 1 373 1 18 3 375 3 102 1 266 1 248 1 75 2 269 1 230 1 291 1 135 1 
363 2 51 4 234 1 323 4 235 1 157 4 185 2 163 1 186 1 298 1 255 4 300 3 38 4 146 7 346 1 123 1 350 2 173 1 373 2 18 4 375 5 102 1 266 2 248 1 269 1 75 3 230 2 291 2 135 1 
106 1 26 1 
371 2 106 1 26 3 307 1 188 1 150 1 
371 1 26 1 206 1 
26 1 290 1 
83 1 
106 1 26 1 188 1 
26 1 9 1 
98 1 364 1 233 1 350 1 184 1 172 2 285 1 365 3 3 7 93 1 301 1 141 1 259 1 291 1 271 2 319 4 82 3 
98 1 364 1 233 1 350 1 184 1 172 2 285 1 365 3 3 7 93 1 301 1 141 1 259 1 291 1 271 2 319 4 82 3 
98 1 364 1 233 1 350 1 184 1 172 2 285 1 365 3 3 7 93 1 301 1 141 1 259 1 218 1 291 1 271 2 319 4 82 3 
363 3 233 2 364 2 184 1 3 31 365 10 297 2 93 1 301 1 141 5 215 1 308 1 259 2 95 1 219 1 98 2 42 1 171 1 350 4 172 5 373 3 285 1 247 1 176 1 73 1 128 4 230 3 291 4 80 1 321 1 272 3 319 16 271 3 82 15 
233 1 364 1 184 1 3 9 365 4 297 4 93 1 301 1 141 1 121 1 308 1 259 1 98 1 350 1 171 2 172 3 226 1 247 2 291 1 80 2 321 2 319 5 271 2 82 4 
362 1 153 1 207 1 114 1 53 1 161 1 326 1 162 1 237 1 327 1 238 1 91 1 278 2 280 1 60 1 256 1 61 1 192 1 216 1 63 2 96 1 41 1 222 2 174 1 265 1 225 1 49 1 177 1 25 1 133 1 
207 1 362 1 114 1 53 1 161 1 326 1 162 1 237 1 136 1 327 1 238 1 91 1 278 3 280 1 60 1 256 1 61 1 192 1 216 2 63 2 96 1 41 1 99 1 222 3 265 1 225 1 49 1 177 1 133 1 50 1 
362 1 207 1 114 1 53 1 161 1 326 1 162 1 237 1 327 1 238 1 91 1 278 2 280 1 60 1 256 1 192 1 216 2 63 2 96 1 41 1 99 1 222 2 225 1 177 1 50 1 
311 1 362 2 53 2 14 1 117 1 222 1 162 1 326 1 136 1 88 1 238 1 106 1 278 1 91 1 280 1 61 1 256 2 192 2 26 1 133 1 7 1 217 1 79 1 
207 1 153 1 362 1 114 1 53 1 222 1 162 1 174 1 326 1 237 1 225 1 265 1 327 1 238 1 278 1 91 1 177 1 49 1 280 1 61 1 256 1 192 1 133 1 63 2 50 1 41 1 
223 1 
51 2 162 1 209 1 213 4 5 1 300 2 304 2 7 1 170 1 18 2 178 1 269 1 130 2 26 1 318 2 79 2 78 1 270 1 322 2 323 5 234 1 235 1 34 3 326 2 186 1 89 1 88 1 276 2 367 1 238 1 91 2 280 2 239 1 38 5 190 1 281 1 191 1 195 1 146 2 282 1 196 1 283 1 97 1 43 1 100 1 375 2 376 1 381 2 104 6 148 2 248 1 48 1 106 1 337 1 251 1 
170 1 323 3 43 1 100 1 34 1 376 1 104 2 213 2 367 1 48 1 239 1 240 1 38 3 190 1 130 1 191 1 281 1 282 1 196 1 251 1 270 1 97 1 
323 3 235 1 34 1 213 3 367 1 239 1 190 1 38 3 240 1 281 1 191 1 196 1 282 1 97 1 170 1 43 1 100 1 18 1 376 1 104 1 148 1 48 1 251 1 270 1 
323 3 235 1 34 1 276 1 213 3 367 1 239 1 240 1 190 1 38 3 281 1 191 1 196 1 282 1 97 1 170 1 43 1 100 1 18 1 376 1 104 2 148 1 48 1 130 1 251 1 270 1 
51 1 155 1 208 1 213 4 300 2 304 2 345 1 170 1 18 1 267 1 130 4 78 1 318 2 270 1 322 2 323 5 234 1 235 1 34 3 187 1 186 1 89 1 276 4 366 1 367 2 239 2 38 5 240 1 190 1 191 1 281 1 282 1 196 1 242 1 283 1 97 1 43 1 100 1 244 1 375 1 334 1 376 1 378 1 203 1 381 2 104 7 248 1 148 2 48 2 108 1 251 2 
51 1 234 1 323 4 235 1 34 2 186 1 89 1 276 2 213 4 367 1 239 1 300 2 190 1 38 4 281 1 191 1 304 2 146 2 282 1 196 1 283 1 97 1 170 1 43 1 100 1 18 2 375 1 376 1 381 2 104 4 148 2 248 1 48 1 178 1 130 2 318 2 78 1 251 1 270 1 322 2 
51 1 323 4 234 1 235 1 155 1 34 2 186 1 89 1 276 2 213 4 367 1 239 1 300 2 190 1 38 4 281 1 191 1 304 2 196 1 282 1 283 1 97 1 170 1 43 1 100 1 244 1 18 1 375 1 376 1 203 1 381 2 104 4 148 2 248 1 48 1 130 2 318 2 78 1 251 1 270 1 322 2 
51 1 323 4 234 1 235 1 155 1 34 2 186 1 89 1 276 2 213 4 367 1 239 1 300 2 190 1 38 4 281 1 191 1 304 2 196 1 282 1 283 1 97 1 170 1 43 1 100 1 244 1 18 1 375 1 376 1 203 1 381 2 104 4 148 2 248 1 48 1 130 2 318 2 78 1 251 1 270 1 322 2 
51 1 323 4 234 1 235 1 155 1 34 2 186 1 89 1 276 2 213 4 367 1 239 1 214 1 190 1 38 4 281 1 191 1 304 2 146 2 196 1 282 1 260 1 310 2 283 1 97 1 170 1 15 2 43 1 100 1 18 1 375 1 376 1 381 2 104 4 148 2 248 1 48 1 130 2 316 1 251 1 270 1 
51 1 155 1 208 1 213 5 300 2 304 2 170 1 18 1 267 1 130 3 78 1 318 2 270 1 322 2 323 4 234 1 235 1 34 2 187 1 186 1 89 1 276 3 366 1 367 2 239 2 38 4 190 1 191 1 281 1 282 1 196 1 242 1 283 1 97 1 43 1 100 1 244 1 375 1 334 1 376 1 378 1 203 1 381 2 104 5 148 3 248 1 48 2 108 1 251 2 
51 1 155 1 208 1 213 5 300 2 304 2 170 1 18 1 267 1 130 3 78 1 318 2 270 1 322 2 323 4 234 1 235 1 34 2 187 1 186 1 89 1 276 3 366 1 367 2 239 2 38 4 190 1 191 1 281 1 282 1 196 1 242 1 283 1 97 1 43 1 100 1 244 1 375 1 334 1 376 1 378 1 203 1 381 2 104 5 148 3 248 1 48 2 108 1 251 2 
51 1 234 1 323 4 235 1 34 2 186 1 89 1 276 2 213 4 367 1 239 1 190 1 38 4 214 1 281 1 191 1 304 2 146 2 282 1 196 1 310 2 283 1 97 1 170 1 15 2 43 1 100 1 18 1 375 1 376 1 381 2 104 4 148 2 248 1 48 1 178 1 130 2 251 1 270 1 
113 1 363 1 171 1 45 1 377 1 365 1 90 1 3 2 380 1 247 1 297 2 229 1 141 1 360 1 291 1 80 1 321 1 319 2 
113 1 172 1 171 1 350 1 373 1 45 1 377 1 365 1 90 1 3 2 247 1 297 2 23 1 229 1 360 1 80 1 321 1 82 2 
113 1 363 1 172 1 350 1 171 1 373 1 45 2 377 1 365 2 90 2 3 4 247 1 297 2 229 1 141 1 230 1 360 2 291 1 80 1 321 1 319 2 82 2 
363 1 171 1 45 1 377 1 365 1 90 1 3 2 380 1 247 1 297 2 229 1 141 1 360 1 165 1 291 1 80 1 321 1 319 2 
172 1 171 1 350 1 373 1 45 1 377 1 365 1 90 1 3 2 247 1 297 2 23 1 229 1 360 1 165 1 80 1 321 1 82 2 
363 1 172 1 350 1 171 1 373 1 45 2 377 1 365 2 90 2 3 4 247 1 297 2 229 1 141 1 230 1 360 2 165 1 291 1 80 1 321 1 319 2 82 2 
363 1 172 1 350 1 171 1 373 1 45 2 377 1 365 2 90 2 3 4 247 1 297 2 229 1 141 1 230 1 360 2 291 1 80 1 321 1 319 2 82 2 
55 1 162 1 325 1 326 1 188 1 3 2 342 1 367 1 297 2 238 1 91 1 279 1 280 1 10 1 330 1 171 1 377 1 247 1 48 1 106 1 229 1 26 1 76 1 79 1 80 1 319 1 321 1 82 1 
162 1 326 1 188 1 3 2 342 1 367 1 297 2 238 1 91 1 280 1 10 1 330 1 171 1 377 1 71 1 204 1 247 1 48 1 106 1 229 1 26 1 76 1 289 1 79 1 80 1 319 1 321 1 82 1 
363 1 172 1 350 1 171 1 373 1 45 2 377 1 365 2 90 2 3 4 247 1 297 2 229 1 141 1 230 1 360 2 65 1 291 1 80 1 321 1 319 2 82 2 
363 1 55 1 162 1 325 1 326 1 188 1 365 2 90 2 3 4 367 1 297 2 238 1 91 1 279 1 280 1 141 1 10 1 332 1 172 1 350 1 171 1 373 1 45 2 377 1 247 1 48 1 106 1 229 1 25 1 230 1 26 1 360 2 291 1 80 1 319 2 321 1 82 2 
363 1 365 1 3 3 90 1 297 2 367 1 141 1 65 1 242 1 370 1 350 1 171 1 373 1 374 1 45 1 377 1 378 1 247 1 48 1 229 1 108 1 230 1 360 1 251 1 291 1 80 1 321 1 319 2 82 1 
113 1 184 1 90 1 365 2 3 6 297 2 342 2 93 1 301 1 259 1 98 1 171 1 172 2 350 1 45 1 377 1 247 1 229 1 360 1 291 1 80 1 206 1 321 1 319 3 271 1 82 3 
363 2 294 1 365 2 3 14 90 11 342 1 297 4 141 1 65 1 66 1 330 1 219 1 42 1 172 1 171 2 350 1 373 1 45 11 377 2 227 1 247 2 128 3 229 1 230 2 76 1 360 4 291 2 80 2 181 1 321 2 272 3 319 8 82 6 
162 1 325 1 326 1 188 1 3 2 59 1 342 1 367 2 297 2 238 1 277 1 91 1 279 1 280 1 120 1 65 1 10 1 330 1 242 1 67 1 171 1 101 1 377 1 202 1 378 1 247 1 48 2 106 1 229 1 26 1 76 1 360 1 79 1 251 1 80 1 321 1 319 1 82 1 
55 2 162 2 57 1 3 20 342 2 297 6 301 1 303 1 65 1 259 1 10 2 67 1 264 2 172 4 350 3 171 3 229 3 230 2 26 2 76 1 360 7 79 1 80 3 271 1 321 3 319 10 82 10 363 2 184 1 326 3 325 2 188 2 36 2 90 7 365 8 138 1 367 3 238 2 93 1 91 3 280 3 279 2 141 4 330 1 242 1 98 1 332 2 201 2 373 2 101 1 45 7 377 3 378 1 247 3 48 3 106 2 50 1 251 1 291 3 
113 1 118 1 162 2 326 8 88 1 3 2 367 1 297 4 238 2 91 7 280 8 6 1 165 1 7 1 330 1 242 1 67 1 348 1 13 1 171 2 313 1 353 1 377 2 378 1 247 2 336 2 48 1 229 2 106 2 25 1 26 3 76 1 50 1 79 2 251 1 80 2 321 2 319 1 82 1 
363 1 365 1 90 1 3 3 297 2 367 1 65 1 242 1 263 1 172 1 171 1 350 1 373 1 45 1 374 1 377 1 378 1 247 1 48 1 229 1 108 1 230 1 360 1 251 1 291 1 80 1 321 1 319 1 82 2 
363 4 293 1 184 1 116 1 160 1 340 1 3 41 365 8 4 1 297 6 93 1 301 1 141 4 308 1 259 1 219 1 98 1 69 2 42 3 172 4 171 3 350 5 200 1 44 1 373 4 351 1 224 1 226 1 175 4 247 3 249 1 128 4 315 1 230 4 231 1 291 5 80 3 151 1 271 1 321 3 272 3 319 20 82 21 
363 4 293 1 184 1 116 1 160 1 340 1 3 38 365 7 4 1 297 8 93 1 301 1 141 3 308 2 259 1 219 1 98 1 69 2 42 3 172 4 171 4 350 4 200 1 44 1 373 3 351 1 224 1 226 1 175 4 247 4 249 1 128 4 315 1 230 4 231 1 291 5 80 4 151 1 271 1 321 4 272 3 319 20 82 18 
363 7 293 1 184 1 116 1 160 1 340 1 3 52 365 14 4 1 297 4 93 1 301 1 141 7 308 1 259 1 219 2 98 1 69 1 42 2 172 7 171 2 350 8 44 1 373 7 351 1 226 1 175 4 247 2 249 1 128 4 315 1 230 7 231 1 291 8 80 2 151 1 271 1 181 2 321 2 272 4 319 27 82 25 
363 3 160 2 3 19 365 6 297 4 141 3 219 1 69 1 42 1 172 3 171 2 350 3 200 1 44 1 373 3 226 1 175 2 247 2 249 1 128 2 230 3 317 1 231 1 291 3 80 2 151 1 321 2 272 1 319 9 82 10 
363 3 293 1 116 1 160 1 340 1 365 4 3 26 4 1 297 6 141 2 308 2 69 2 42 2 172 2 350 2 171 3 44 1 373 2 351 1 226 1 175 4 247 3 249 2 128 2 315 1 230 3 231 1 291 3 80 3 151 1 321 3 319 14 272 2 82 12 
323 1 18 1 87 1 147 1 47 1 296 1 379 1 37 1 228 1 299 1 38 1 250 1 122 1 359 1 145 1 331 1 292 1 168 2 
323 1 18 1 87 1 147 1 47 1 296 1 379 1 37 1 228 1 299 1 38 1 250 1 122 1 359 1 145 1 331 1 292 1 168 2 
323 1 18 1 87 1 147 1 47 1 296 1 379 1 37 1 228 1 299 1 38 1 250 1 122 1 359 1 145 1 331 1 292 1 168 2 
149 1 179 1 356 1 
149 1 179 1 356 1 
124 1 314 1 
124 1 356 1 314 1 
132 1 167 1 
183 1 323 1 33 1 87 1 296 1 342 1 367 2 38 1 122 1 64 1 40 1 167 1 331 1 242 2 168 1 147 1 266 1 378 2 228 1 48 2 75 1 131 1 132 1 359 1 180 1 251 2 292 1 
299 1 250 1 134 1 359 1 122 1 145 1 147 1 296 1 331 1 228 1 
33 1 64 1 
189 1 159 1 305 1 359 1 122 1 147 1 296 1 331 1 228 1 
149 1 179 1 
124 1 356 1 314 1 
162 1 326 2 3 2 367 2 297 2 238 1 91 2 280 2 94 1 65 1 144 1 330 1 198 1 171 1 313 1 353 1 377 1 247 1 336 2 48 2 106 1 229 1 26 1 76 1 30 1 251 2 80 1 81 1 321 1 319 1 82 1 
207 1 114 1 324 1 162 1 326 2 237 1 265 1 327 1 238 1 91 2 177 1 280 2 192 1 25 1 194 1 63 2 50 1 309 1 41 1 
207 1 114 1 115 1 326 1 162 1 237 1 265 1 327 1 238 1 91 1 177 1 280 1 192 1 63 2 50 1 309 1 41 1 
162 1 326 1 88 1 238 1 106 1 91 1 280 1 192 1 26 1 194 1 7 1 217 1 79 1 339 1 
207 1 114 1 324 1 326 1 162 1 237 1 265 1 327 1 238 1 91 1 177 1 280 1 192 1 194 1 63 2 50 1 309 1 41 1 
105 1 
51 1 107 1 235 1 375 1 18 1 27 1 206 1 
51 1 323 1 234 1 235 1 18 2 375 1 34 1 186 1 104 1 248 1 38 1 300 1 318 1 146 1 78 1 283 1 322 1 
51 8 52 2 157 6 254 1 162 3 209 1 212 2 255 6 300 6 62 2 164 2 9 2 350 2 18 8 355 1 126 2 269 2 25 1 230 2 26 10 27 1 79 1 182 2 363 2 234 4 85 1 323 5 235 2 326 3 34 3 186 4 188 3 238 4 91 3 280 3 38 5 329 1 146 12 283 4 371 2 100 2 245 2 201 2 373 2 375 9 104 5 248 4 107 1 106 3 288 1 290 3 150 1 205 2 291 2 
51 5 363 2 293 1 52 2 323 1 234 2 157 5 235 2 340 1 34 1 186 2 209 1 341 1 4 1 255 5 38 1 300 3 146 6 283 2 262 1 42 1 350 2 245 1 373 2 351 1 375 8 18 5 104 1 248 2 128 1 315 1 269 1 230 2 291 2 272 1 
51 2 52 2 234 1 323 1 184 1 208 1 186 1 187 1 366 1 367 1 239 1 38 1 328 1 259 1 283 1 242 1 98 1 350 1 245 1 375 2 334 1 203 1 378 1 248 1 48 1 108 1 291 2 251 1 
51 1 234 1 235 1 18 1 375 1 186 1 248 1 107 1 27 1 283 1 
363 2 51 5 52 2 157 5 350 2 245 1 201 1 373 2 18 5 375 5 255 5 300 5 230 2 146 10 291 2 
323 1 235 1 38 1 18 1 34 1 104 1 
51 2 234 2 323 3 254 2 162 1 326 4 34 2 186 2 209 2 88 1 238 1 91 4 280 4 38 3 344 1 241 1 195 1 7 1 283 1 375 2 104 4 248 2 106 1 269 2 288 1 26 1 337 1 79 2 135 1 
55 1 326 1 325 1 162 1 188 1 3 1 210 1 342 1 297 2 367 3 238 1 91 1 280 1 279 1 330 1 10 1 242 2 171 1 334 1 377 1 378 2 247 1 48 3 106 1 229 1 108 2 26 1 79 1 251 2 80 1 321 1 82 1 
51 2 234 1 157 2 235 2 375 1 18 4 186 1 209 1 248 1 255 2 300 2 269 1 146 4 271 1 283 1 
111 1 331 1 228 1 
111 1 331 1 228 1 
8 1 331 1 228 1 
8 1 331 1 228 1 
8 1 331 1 228 1 
331 1 228 1 
359 1 147 1 
111 1 331 1 228 1 
132 1 110 1 145 1 331 1 228 1 
293 1 184 1 3 8 365 2 297 2 93 1 301 1 259 1 98 1 42 1 350 1 171 1 172 2 226 1 247 1 128 1 291 1 80 1 271 1 272 1 321 1 319 4 82 4 
363 1 293 1 184 1 3 11 365 3 297 4 93 1 301 1 141 1 259 1 219 1 98 1 42 1 350 1 172 2 171 2 226 1 247 2 103 1 128 2 230 1 291 2 80 2 271 1 321 2 272 1 319 6 82 5 
363 2 293 1 184 1 340 1 3 19 365 4 4 1 297 6 93 1 301 1 141 1 308 1 259 1 98 1 42 1 171 3 350 3 172 3 373 2 351 1 226 1 103 1 247 3 128 1 315 1 230 2 291 3 80 3 271 1 272 1 321 3 319 9 82 10 
363 2 293 1 184 1 340 1 3 17 365 5 4 1 297 6 93 1 301 1 141 2 308 1 259 1 98 1 42 1 171 3 350 2 172 3 373 1 351 1 226 1 103 1 247 3 128 1 315 1 230 2 291 3 80 3 271 1 272 1 321 3 319 10 82 7 
293 1 184 1 3 8 365 2 297 2 93 1 301 1 259 1 98 1 42 1 350 1 171 1 172 2 226 1 247 1 128 1 291 1 80 1 271 1 272 1 321 1 319 4 82 4 
363 2 293 1 340 1 3 12 365 2 4 1 297 2 141 1 42 1 171 1 350 2 172 1 373 2 351 1 226 1 247 1 128 1 315 1 230 2 291 2 80 1 272 1 321 1 319 6 82 6 
363 2 293 1 184 1 340 1 3 18 365 5 4 1 297 8 93 1 301 1 141 2 308 2 259 1 98 1 42 1 171 4 350 2 172 3 373 1 351 1 226 1 103 1 247 4 128 1 315 1 230 2 291 3 80 4 271 1 321 4 272 1 319 10 82 8 
363 3 293 1 340 1 3 16 365 6 4 1 297 8 141 3 308 2 42 1 171 4 350 2 172 3 200 1 373 2 351 1 226 1 247 4 128 1 315 1 230 3 291 3 80 4 321 4 272 1 319 9 82 7 
98 3 350 1 172 3 184 1 3 7 365 6 93 1 301 2 141 3 259 3 291 1 319 3 82 4 
363 2 293 1 184 1 340 1 3 18 365 4 4 1 297 8 93 1 301 1 141 1 308 2 259 1 98 1 42 1 171 4 350 2 172 3 200 1 373 1 351 1 226 1 247 4 128 1 315 1 230 2 291 3 80 4 271 1 321 4 272 1 319 10 82 8 
98 1 350 1 184 1 172 2 171 2 3 8 365 3 247 2 297 4 93 1 301 1 141 1 308 1 259 1 291 1 80 2 271 1 319 4 321 2 82 4 
98 1 172 2 184 1 350 1 365 2 3 6 93 1 301 1 259 1 291 1 271 1 206 1 319 3 82 3 
363 1 172 1 350 1 171 1 373 1 365 2 3 4 103 1 247 1 297 2 230 1 141 1 291 1 80 1 321 1 319 2 82 2 
363 1 42 1 172 1 350 1 373 1 3 7 365 2 128 2 230 1 141 1 291 1 272 1 319 3 219 1 82 4 
363 2 84 1 184 1 365 9 3 23 297 4 93 1 301 1 141 4 308 2 259 2 219 1 98 2 350 3 172 5 171 2 373 2 227 1 247 2 128 2 230 2 291 3 80 2 271 1 319 11 272 2 181 1 321 2 82 12 
128 1 3 1 82 1 
3 1 319 1 272 1 
363 1 171 1 350 1 172 2 201 1 373 1 3 6 365 3 247 1 103 1 297 2 230 1 141 1 291 1 80 1 321 1 319 3 82 3 
363 2 293 1 340 1 3 12 365 2 4 1 297 2 141 1 42 1 171 1 350 2 172 1 373 2 351 1 226 1 247 1 128 1 315 1 230 2 291 2 80 1 272 1 321 1 319 6 82 6 
98 1 184 1 350 1 172 1 3 6 365 2 141 1 259 1 291 1 319 3 82 3 
98 1 84 1 172 1 171 1 365 2 3 3 247 1 297 2 93 1 301 1 141 1 308 1 259 1 80 1 319 1 321 1 82 2 
98 2 171 1 172 3 184 1 350 2 226 1 365 5 3 10 247 1 297 2 141 2 328 1 259 2 291 2 80 1 321 1 319 5 82 5 
363 1 171 1 226 1 3 2 365 1 247 1 297 2 141 1 291 1 80 1 321 1 319 2 
363 1 172 1 350 1 171 1 373 1 226 1 365 2 3 4 247 1 297 2 230 1 141 1 291 1 80 1 321 1 319 2 82 2 
98 1 84 1 171 3 172 1 200 1 226 1 3 3 365 2 247 3 297 6 141 1 308 1 259 1 80 3 321 3 319 1 82 2 
363 3 84 1 184 2 3 34 365 12 297 10 93 1 301 1 141 5 215 1 308 2 259 3 219 1 98 3 42 1 171 5 350 5 172 7 200 1 373 3 226 1 176 1 103 1 247 5 73 1 128 4 230 3 291 5 80 5 271 1 321 5 272 3 319 16 82 18 
48 1 86 1 28 1 196 1 251 1 342 1 367 1 
16 1 86 1 274 1 56 1 335 1 342 1 367 1 48 1 28 1 196 1 251 1 152 1 
238 1 106 1 91 1 280 1 26 1 162 1 326 1 7 1 79 1 88 1 206 1 
326 1 325 1 162 1 188 1 378 1 342 1 367 2 238 1 48 2 106 1 91 1 280 1 26 1 79 1 10 1 251 1 67 1 242 1 
162 1 325 1 326 1 254 1 188 2 342 1 367 2 238 1 91 1 280 1 239 1 9 1 10 1 242 2 67 1 170 1 378 1 48 2 106 2 26 3 251 2 205 1 270 1 
162 1 326 2 254 1 188 2 342 1 367 2 238 1 91 2 280 2 239 1 9 1 10 1 242 2 67 1 170 1 378 1 71 1 72 1 48 2 106 2 26 3 251 2 205 1 270 1 
323 2 235 1 162 1 326 3 254 1 188 1 238 1 91 3 280 3 38 2 9 1 371 1 169 1 100 1 18 1 72 1 104 1 268 1 106 1 26 4 290 1 79 1 205 1 
371 1 323 2 235 1 100 1 18 1 254 1 326 3 162 1 188 1 72 1 104 1 126 1 238 1 106 1 91 3 280 3 38 2 26 4 9 1 79 1 290 1 205 1 
238 1 348 1 91 1 280 1 162 1 326 1 
348 1 13 1 349 1 118 1 313 1 326 7 46 1 162 2 188 1 336 1 127 1 238 3 91 6 106 2 280 7 6 1 25 1 26 3 50 1 79 2 150 1 
184 1 55 1 162 1 326 1 325 1 188 1 90 1 3 6 365 2 36 1 342 2 367 2 297 4 238 1 93 1 91 1 280 1 279 1 301 1 65 1 259 1 10 1 242 1 67 1 98 1 332 1 350 1 172 2 171 2 45 1 377 2 378 1 247 2 48 2 106 1 229 2 25 1 26 1 360 1 30 1 291 1 251 1 80 2 271 1 319 3 321 2 82 3 
51 1 234 2 323 3 235 1 326 1 34 1 186 2 212 1 91 1 280 1 38 3 62 1 164 1 283 2 371 1 100 1 375 1 18 1 104 2 248 2 126 1 107 1 75 1 288 1 26 2 27 1 79 1 290 1 
371 1 348 1 326 2 162 1 355 1 188 1 238 2 91 2 106 1 280 2 25 1 26 2 150 1 
326 4 162 1 295 1 88 1 72 1 238 1 91 4 106 1 280 4 25 1 26 1 7 1 79 1 
349 1 154 1 254 1 326 2 46 1 162 1 188 1 57 1 238 2 91 2 106 1 280 2 142 1 26 1 
238 1 114 1 91 1 177 1 280 1 162 1 326 1 63 1 79 1 41 1 
326 2 313 1 162 1 238 1 91 2 106 1 280 2 25 1 26 1 50 1 81 1 
13 1 254 1 326 5 313 1 162 2 295 1 88 1 238 2 91 4 106 2 280 5 25 1 6 1 26 3 7 1 79 1 
13 1 254 1 326 5 313 1 162 2 1 1 295 1 88 1 238 2 91 4 106 2 280 5 25 1 26 3 7 1 79 1 
326 1 162 1 188 1 378 1 71 1 342 1 367 2 238 1 48 2 106 1 91 1 280 1 26 1 79 1 10 1 251 1 67 1 242 1 
349 1 254 1 326 1 46 1 162 1 188 1 127 1 238 2 91 1 106 1 280 1 26 1 150 1 
198 1 352 1 354 1 367 1 48 1 94 1 144 1 361 1 251 1 
368 1 354 1 369 1 
343 1 352 1 354 1 361 1 342 1 
170 1 323 2 235 1 100 1 18 1 352 2 354 1 376 1 2 1 22 1 342 1 239 1 75 1 38 2 368 1 343 2 361 2 270 1 369 1 
60 1 161 1 96 1 206 1 
278 1 60 1 61 1 222 1 161 1 133 1 96 1 
362 1 278 1 53 1 
54 1 158 1 236 2 222 3 174 1 161 1 278 3 61 1 60 1 306 1 133 1 96 1 
278 2 60 1 61 1 193 1 222 2 161 1 216 1 133 1 96 1 
114 1 278 1 61 1 258 1 17 1 222 1 133 1 174 1 63 1 237 1 96 1 
278 1 61 1 222 1 161 1 133 1 174 1 96 1 
278 1 60 1 61 1 222 1 161 2 133 1 174 1 
232 1 222 2 161 1 174 1 137 1 278 2 129 1 61 2 133 2 96 1 
273 1 221 1 222 3 161 1 174 1 278 3 60 1 61 1 257 1 258 1 133 1 216 2 96 2 
207 1 114 1 333 1 222 2 161 1 174 1 237 1 278 2 177 1 60 1 61 1 133 1 216 1 63 2 96 1 
312 1 222 4 161 1 174 1 278 4 60 1 61 2 257 1 193 1 258 1 133 2 216 2 96 2 
278 1 60 1 61 1 222 1 161 1 133 1 174 1 96 1 
54 1 236 1 158 1 222 4 161 2 278 4 60 2 24 1 61 1 257 1 258 1 216 2 133 1 96 3 
243 1 222 2 161 1 174 1 278 2 61 1 60 1 143 1 133 1 216 1 338 1 96 1 
278 3 54 1 60 1 61 1 236 2 158 2 357 1 222 3 161 1 133 1 174 1 96 1 
139 1 220 2 96 2 31 1 
278 1 199 1 61 1 222 1 133 1 174 1 
278 2 60 1 221 1 61 1 222 2 161 1 216 1 133 1 174 1 96 1 
166 1 
278 1 60 1 61 1 222 1 161 1 133 1 174 1 96 1 
221 1 236 1 222 3 174 1 161 1 278 3 61 1 60 1 216 1 133 1 96 1 
24 1 257 1 258 1 96 1 
161 1 96 1 

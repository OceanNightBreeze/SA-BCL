#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (40,75,333) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (40,75,333) 209 229 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (40,75,333) 209 91 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (40,75,333) (40,75,333) 139 280 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 165 300 (193,278) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 165 300 (194,233) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (40,75,333) 209 260 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
310 6 261 1 166 3 287 1 232 9 210 2 26 1 124 4 125 2 344 1 97 9 214 5 54 1 80 1 217 2 219 2 130 1 32 1 174 1 326 2 102 1 175 2 38 1 109 1 13 1 17 1 245 2 43 1 
310 6 261 1 166 3 287 1 232 9 210 2 26 1 124 4 125 2 344 1 97 9 214 5 54 1 80 1 217 2 219 2 130 1 32 1 174 1 326 2 102 1 175 2 38 1 109 1 13 1 17 1 245 2 43 1 
310 7 261 1 166 4 287 1 232 10 210 2 26 1 124 5 125 2 344 1 97 10 214 6 54 1 80 1 217 2 219 2 130 1 32 1 174 1 326 2 102 1 175 2 38 1 109 1 13 1 17 1 245 2 43 1 
310 4 261 1 166 2 287 1 232 7 210 2 26 1 124 3 125 2 344 1 97 7 214 4 54 1 80 1 217 2 219 1 130 1 32 1 174 1 326 2 175 2 38 1 109 1 13 1 17 1 245 2 43 1 
326 1 102 1 310 3 166 1 261 1 175 1 210 1 232 4 124 2 125 1 344 1 13 1 97 4 17 1 214 3 217 1 219 2 130 1 
326 1 261 1 132 1 175 1 47 1 210 1 232 2 26 1 344 1 97 2 214 1 17 1 54 1 56 1 217 1 245 1 
310 1 261 1 166 1 175 2 210 2 232 3 124 1 344 1 97 3 17 1 214 2 80 1 245 1 
310 7 166 3 261 1 232 9 210 2 124 4 125 1 344 1 97 9 214 5 80 1 217 1 219 2 295 1 130 1 174 1 326 1 102 1 175 2 13 1 17 1 245 1 340 1 43 1 
310 7 166 3 261 1 232 9 210 2 124 4 125 1 344 1 97 9 214 5 80 1 217 1 219 2 295 1 130 1 174 1 326 1 102 1 175 2 13 1 17 1 245 1 340 1 43 1 
246 1 159 1 285 1 
246 1 163 2 94 1 
255 2 297 1 270 2 291 2 243 2 339 2 85 1 240 2 
186 1 144 1 189 1 263 2 121 1 122 1 167 1 289 1 351 1 291 2 77 1 52 1 78 1 79 2 268 1 129 1 240 3 196 1 296 1 297 1 270 3 35 2 354 1 199 2 107 2 85 1 356 1 300 1 255 2 66 1 278 1 279 1 179 1 243 2 244 1 336 1 339 2 
350 1 255 1 297 1 270 1 291 1 2 1 273 1 243 1 339 1 240 1 
350 1 333 1 270 1 329 1 18 1 339 1 332 1 75 1 240 1 
350 1 255 1 270 1 291 1 243 1 18 1 339 1 332 1 75 1 240 1 
40 1 258 1 317 1 114 1 152 1 
246 1 299 1 40 2 258 2 317 1 159 1 114 1 57 1 
40 1 258 1 114 1 
258 1 297 1 270 1 2 1 273 1 40 1 50 1 350 1 255 1 317 1 291 1 243 1 339 1 240 1 
246 1 
246 1 299 1 40 2 258 2 317 1 159 1 305 1 114 1 
246 1 258 5 5 1 123 2 4 1 222 1 314 1 226 1 225 1 227 1 299 1 40 5 317 2 16 1 159 1 321 2 114 2 19 2 282 1 
285 1 85 1 
309 1 270 2 85 2 255 1 291 1 243 1 339 2 128 1 240 2 
352 1 126 1 184 1 
296 1 270 1 35 1 189 1 199 1 85 1 356 1 300 1 66 1 278 1 77 1 79 1 268 1 336 1 170 1 240 1 
255 3 291 1 270 3 243 3 339 3 95 1 85 1 240 3 
350 1 255 1 270 1 273 1 243 1 339 1 240 1 
350 1 255 1 309 1 270 1 291 1 243 1 339 1 128 1 240 1 
131 1 309 1 270 2 209 1 95 1 332 1 75 1 350 1 255 2 229 1 291 1 243 2 18 1 339 2 240 2 
81 1 255 1 270 2 329 1 243 1 339 2 95 1 85 1 240 2 
131 1 270 1 209 1 95 1 75 1 332 1 350 1 255 1 243 1 91 1 18 1 339 1 240 1 
309 1 270 2 95 1 255 2 291 1 352 1 126 1 243 2 339 2 240 2 
296 1 270 1 35 1 189 1 199 1 85 1 356 1 300 1 66 1 278 1 77 1 79 1 268 1 336 1 240 1 
296 1 270 1 35 1 189 1 199 1 85 1 356 1 300 1 66 1 77 1 79 1 335 1 268 1 194 1 240 1 
164 1 186 2 144 1 146 1 311 1 120 1 263 2 167 1 149 1 213 1 126 2 352 2 52 1 320 1 31 1 129 1 196 1 107 4 302 1 113 1 179 1 244 2 184 2 70 1 
350 1 255 1 270 1 65 1 243 1 18 1 339 1 240 1 
296 1 131 1 270 2 189 1 35 1 199 1 95 1 356 1 300 1 255 1 66 1 126 1 278 1 77 1 79 1 268 1 243 1 336 1 339 1 240 2 
81 1 309 1 131 1 270 5 329 1 95 2 85 1 255 4 291 1 292 1 353 1 243 4 339 5 240 5 
350 1 255 2 65 1 270 2 273 1 243 2 339 2 240 2 
20 1 195 1 
20 1 195 1 
24 1 71 1 
24 1 71 1 
24 1 71 1 
20 1 218 1 195 1 
20 1 218 1 195 1 
115 1 20 1 195 1 
24 1 361 1 20 2 323 1 71 1 195 2 
20 1 218 1 195 1 
176 1 20 1 195 1 
176 1 20 1 195 1 
176 1 20 1 195 1 
246 1 258 2 271 2 262 2 286 1 224 2 191 2 40 2 266 1 41 1 256 1 9 1 180 2 100 1 20 2 323 1 69 1 195 2 308 3 
258 1 262 1 284 1 191 1 9 1 150 1 195 1 173 1 240 2 270 2 271 1 85 1 40 1 255 2 360 1 334 1 243 2 180 1 42 1 115 1 204 1 20 1 339 2 308 1 
326 1 217 1 125 1 
326 1 217 1 56 1 
326 3 15 1 306 1 56 1 125 2 142 1 
346 1 326 2 306 1 56 1 125 1 142 1 
326 2 306 1 56 1 125 1 142 2 
163 3 206 2 164 1 246 2 258 5 118 2 311 1 123 1 5 3 94 1 249 1 7 1 28 1 317 4 29 2 149 1 192 1 321 1 150 1 31 1 172 1 155 1 37 1 226 1 299 1 40 5 159 1 334 1 114 1 42 1 19 1 282 2 
163 9 206 6 164 3 246 5 258 9 118 6 311 3 123 2 5 8 148 1 211 1 94 3 249 3 27 1 317 7 149 3 30 1 321 2 152 5 31 3 172 2 221 1 155 2 198 1 37 1 274 5 225 1 226 1 40 9 299 1 334 4 159 1 114 6 19 2 282 6 
246 3 164 1 206 2 163 4 258 3 118 2 311 1 123 1 5 3 94 2 249 1 7 1 28 1 317 2 29 1 149 1 321 1 31 1 172 1 155 1 225 1 40 3 159 1 334 1 19 1 282 2 
246 4 163 7 206 4 164 2 258 4 118 4 311 2 123 1 5 5 211 1 94 3 249 2 7 1 27 1 28 1 29 2 317 3 149 2 321 1 31 2 172 1 155 1 198 1 225 1 40 4 159 1 334 2 19 1 282 4 
76 1 66 1 285 1 
23 1 66 1 
178 1 
66 1 268 1 
76 2 66 3 158 1 189 1 268 1 84 1 
66 1 189 1 268 1 
66 1 106 1 
186 3 164 1 60 1 33 1 45 1 272 1 104 1 48 1 107 7 223 1 51 2 302 3 318 1 320 2 90 1 244 4 31 1 
186 3 164 1 60 1 33 1 45 1 272 1 104 1 48 1 107 7 223 1 51 2 302 3 318 1 320 2 90 1 244 4 31 1 
186 3 164 1 60 1 33 1 45 1 272 1 104 1 48 1 107 7 223 1 228 1 51 2 302 3 318 1 320 2 90 1 244 4 31 1 
186 15 164 4 45 1 207 1 311 3 208 3 263 2 48 5 249 3 167 1 51 3 349 1 318 2 149 3 52 1 320 5 215 1 31 4 129 1 60 2 33 2 272 1 104 1 105 1 223 1 107 31 276 1 357 4 86 1 302 10 87 1 179 1 90 2 244 16 
164 1 186 4 263 4 48 1 167 2 51 2 318 1 52 2 320 3 10 1 31 1 129 2 33 1 60 1 272 1 104 1 63 1 107 9 223 1 276 1 302 4 179 2 90 1 244 5 
22 1 310 1 261 1 93 1 232 2 210 1 125 1 344 1 348 1 97 2 212 1 77 1 214 1 237 1 79 1 217 1 56 1 296 1 153 1 326 2 35 1 241 1 175 1 199 1 15 1 242 1 112 1 17 1 88 1 245 1 
342 1 310 2 93 1 232 3 210 1 125 1 315 1 344 1 348 1 97 3 250 1 212 1 77 1 214 1 237 1 79 1 217 1 56 1 296 1 153 1 326 2 35 1 241 1 175 1 199 1 15 1 242 1 112 1 17 1 245 1 
342 1 310 2 232 2 315 1 125 1 344 1 348 1 97 2 77 1 214 1 237 1 79 1 56 1 217 1 296 1 153 1 326 2 35 1 241 1 199 1 15 1 242 1 112 1 17 1 245 1 
296 1 61 1 62 1 35 1 197 1 175 1 210 1 232 1 199 1 356 1 348 2 108 1 250 1 97 1 66 1 112 2 242 2 77 1 79 1 268 1 161 1 245 2 116 1 
342 1 261 1 93 1 232 1 210 1 125 1 348 1 97 1 212 1 77 1 237 1 79 1 217 1 56 1 296 1 153 1 326 2 35 1 241 1 175 1 199 1 15 1 242 1 112 1 88 1 245 1 
8 1 
0 1 258 2 123 1 5 1 265 1 75 1 350 1 77 1 79 2 321 1 268 1 59 1 240 1 296 1 270 1 155 1 35 2 329 1 197 1 199 2 356 2 332 1 226 1 40 2 299 1 333 1 66 1 280 1 139 1 114 2 161 1 18 1 339 1 19 1 282 1 141 1 185 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 2 270 1 329 1 265 1 332 1 75 1 40 2 299 1 350 1 333 1 305 1 280 1 139 1 114 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 123 1 265 1 332 1 75 1 226 1 40 1 350 1 333 1 280 1 139 1 321 1 18 1 339 1 19 1 141 1 240 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 265 1 332 1 75 1 40 1 350 1 333 1 280 1 139 1 18 1 339 1 141 1 240 1 
258 1 270 1 329 1 123 1 265 1 332 1 75 1 226 1 40 1 350 1 333 1 280 1 139 1 321 1 18 1 339 1 19 1 141 1 240 1 
164 1 186 3 144 1 146 1 285 1 263 2 167 1 51 1 352 1 126 1 52 1 320 2 31 1 129 1 196 1 33 1 60 1 272 1 104 1 223 1 107 6 85 2 302 2 179 1 244 3 184 1 
186 6 164 2 144 2 119 1 207 1 311 1 208 3 263 4 48 1 249 2 316 1 167 2 289 1 351 1 149 2 126 11 352 4 320 1 52 2 215 1 53 1 31 1 129 2 196 1 328 1 107 14 85 1 357 3 302 2 179 2 244 8 205 1 184 11 
186 1 144 1 189 1 263 2 95 1 167 1 289 1 351 1 352 1 77 1 52 1 79 1 268 1 170 1 129 1 240 2 296 1 196 1 131 1 252 1 270 2 35 1 199 1 107 2 85 1 356 1 300 1 255 1 66 1 278 1 67 1 179 1 243 1 336 1 244 1 203 1 339 1 205 1 
186 10 44 2 144 3 189 2 311 2 263 6 312 1 48 4 95 1 51 1 149 2 320 4 52 3 268 2 55 2 99 2 322 2 240 3 196 3 60 1 270 3 272 1 104 1 199 3 107 20 66 2 278 2 243 1 336 2 244 10 339 1 205 1 164 3 342 1 72 1 122 2 249 2 167 3 289 1 351 1 126 7 352 7 77 2 79 3 31 3 129 3 296 2 33 1 131 1 35 3 298 1 223 1 85 2 356 1 300 2 255 1 302 8 179 3 184 7 
186 1 342 1 22 1 144 2 146 1 1 1 263 4 264 1 3 1 95 1 167 2 289 1 351 1 77 2 52 2 79 8 268 2 129 2 240 1 296 2 196 2 82 1 270 1 35 8 197 1 354 2 199 7 107 2 356 2 255 1 66 3 138 1 257 1 179 2 243 1 244 1 161 1 337 1 339 1 
164 1 186 2 144 1 309 1 311 1 263 2 249 1 167 1 291 1 149 1 352 1 126 1 320 1 52 1 31 1 129 1 240 1 196 1 270 1 107 3 302 1 255 1 137 1 179 1 243 1 244 1 339 1 184 1 205 1 
196 1 164 1 144 1 146 1 263 2 48 1 107 2 167 1 302 1 149 1 352 1 126 1 52 1 179 1 244 2 184 1 129 1 70 1 
196 1 186 2 144 1 146 1 311 1 263 2 120 1 107 2 167 1 302 1 352 1 126 1 320 1 52 1 179 1 31 1 184 1 129 1 
186 2 196 1 164 1 144 1 146 1 311 1 263 2 48 1 107 4 249 1 167 1 302 2 149 1 352 2 126 2 320 1 52 1 179 1 244 2 31 1 184 2 129 1 
196 1 164 1 144 1 263 2 48 1 107 2 167 1 302 1 149 1 352 1 126 1 52 1 179 1 244 2 337 1 184 1 129 1 70 1 
196 1 186 2 144 1 311 1 263 2 120 1 107 2 167 1 302 1 352 1 126 1 320 1 52 1 179 1 337 1 31 1 184 1 129 1 
186 2 196 1 164 1 144 1 311 1 263 2 48 1 107 4 249 1 167 1 302 2 149 1 352 2 126 2 320 1 52 1 179 1 244 2 337 1 31 1 184 2 129 1 
186 2 196 1 164 1 144 1 311 1 263 2 48 1 249 1 107 4 167 1 302 2 149 1 352 2 126 2 320 1 52 1 179 1 244 2 31 1 184 2 129 1 
186 1 144 1 189 1 263 2 122 1 167 1 289 1 351 1 77 1 52 1 79 1 268 1 129 1 240 1 296 1 196 1 270 1 35 1 199 1 107 2 85 1 356 1 300 1 66 1 278 1 179 1 244 1 336 1 
186 1 144 1 189 1 263 2 167 1 289 1 351 1 77 1 52 1 79 1 268 1 194 1 129 1 240 1 296 1 196 1 34 1 270 1 35 1 199 1 107 2 85 1 356 1 300 1 66 1 335 1 179 1 244 1 
186 2 196 1 164 1 144 1 311 1 263 2 48 1 107 4 249 1 167 1 302 2 149 1 352 2 126 2 320 1 52 1 179 1 244 2 31 1 184 2 205 1 129 1 
186 2 164 1 22 1 144 1 189 1 311 1 263 2 122 1 48 1 249 1 167 1 149 1 352 2 126 2 77 1 320 1 52 1 79 1 268 1 55 1 31 1 129 1 240 1 296 1 196 1 270 1 35 1 199 1 107 4 300 1 302 2 66 1 278 1 179 1 244 2 336 1 184 2 
186 1 164 1 144 1 309 1 311 1 263 2 48 1 249 1 167 1 291 1 149 1 126 1 352 1 52 1 31 1 129 1 240 1 196 1 270 1 107 3 302 1 359 1 255 1 179 1 243 1 244 2 339 1 205 1 184 1 
186 10 164 3 207 1 311 3 208 1 73 2 263 4 313 1 48 3 249 3 167 2 149 3 267 2 320 3 52 2 215 1 31 3 129 2 325 1 327 1 83 1 330 1 63 1 107 19 357 2 302 6 110 1 179 2 244 9 182 1 
186 12 164 3 311 2 208 2 73 4 263 6 48 2 249 3 167 3 149 3 267 1 320 2 52 3 215 2 238 1 31 2 129 3 325 1 327 1 83 2 330 1 63 1 107 26 276 2 253 1 358 1 357 2 277 1 302 4 110 2 136 1 202 1 179 3 244 14 
186 21 164 5 207 1 311 4 208 3 73 4 263 6 313 1 48 4 249 4 51 1 167 3 149 4 267 1 320 4 52 3 216 1 215 3 238 1 31 5 129 3 325 1 60 1 33 1 327 1 83 2 272 1 104 1 330 1 63 1 223 1 107 41 276 1 253 1 358 1 277 1 357 4 302 8 110 1 136 1 202 1 179 3 244 20 
186 18 164 5 207 1 311 3 208 3 73 4 263 8 313 1 48 3 249 4 51 1 167 4 149 4 267 1 320 4 52 4 216 1 215 3 238 1 31 4 129 4 325 1 60 1 33 1 327 1 83 2 272 1 104 1 330 1 63 1 223 1 107 38 276 2 253 1 358 1 277 1 357 4 302 7 110 1 136 1 202 1 179 4 244 20 
186 25 164 8 207 2 311 7 208 4 73 4 263 4 48 7 249 7 51 1 167 2 149 7 267 1 320 7 52 2 215 2 238 1 31 8 129 2 325 1 60 1 33 1 327 1 83 1 272 1 328 2 104 1 330 1 63 1 223 1 107 52 276 1 253 1 358 1 277 1 357 4 302 14 110 1 136 1 202 1 179 2 244 27 
41 1 271 1 262 1 180 1 20 1 323 1 69 1 195 1 191 1 345 1 
360 1 115 1 
301 1 271 1 304 1 262 1 294 1 180 1 20 1 195 1 191 1 
246 1 258 1 271 1 262 1 286 1 224 1 191 1 40 1 41 1 256 1 9 1 180 1 100 1 20 1 323 1 69 1 195 1 308 2 
246 1 258 1 271 1 262 1 286 1 224 1 191 1 40 1 41 1 256 1 9 1 180 1 100 1 20 1 323 1 69 1 195 1 308 2 
246 1 258 1 271 1 262 1 286 1 224 1 191 1 40 1 41 1 256 1 9 1 180 1 100 1 20 1 323 1 69 1 195 1 308 2 
230 1 361 1 218 1 
230 1 361 1 218 1 
176 1 236 1 
176 1 236 1 361 1 
284 1 204 1 
258 1 262 1 284 1 286 1 191 1 317 1 150 1 195 1 173 1 240 2 270 2 271 1 224 1 85 1 254 1 40 1 360 1 255 2 334 1 243 2 180 1 42 1 115 1 204 1 20 1 339 2 308 1 
230 1 218 1 
176 1 236 1 361 1 
186 1 144 1 259 1 248 1 263 2 3 1 167 1 289 1 351 1 77 1 52 1 127 1 79 2 268 1 171 1 129 1 324 1 240 2 296 1 196 1 82 1 270 2 35 2 354 2 199 2 107 2 66 1 179 1 244 1 339 2 205 1 
296 1 342 1 22 1 326 2 153 1 283 1 35 2 241 1 231 1 93 1 199 2 125 1 348 1 15 1 77 1 79 2 181 1 217 1 56 1 
296 1 342 1 326 2 153 1 35 1 241 1 231 1 93 1 199 1 125 1 348 1 15 1 77 1 79 1 68 1 217 1 56 1 
296 1 62 1 283 1 35 1 197 1 199 1 356 1 200 1 348 1 66 1 77 1 79 1 268 1 161 1 
296 1 342 1 326 2 153 1 283 1 35 1 241 1 231 1 93 1 199 1 125 1 348 1 15 1 77 1 79 1 181 1 217 1 56 1 
134 1 
246 1 227 1 16 1 159 1 285 1 5 1 282 1 
341 1 246 2 163 1 258 1 123 1 5 1 94 1 226 1 40 1 299 1 96 1 290 1 159 1 114 1 321 1 19 1 282 1 
92 2 258 5 189 3 147 2 311 2 5 9 94 6 149 2 268 3 321 4 193 2 322 2 154 2 155 2 106 2 199 3 201 1 16 1 66 10 111 2 158 1 159 2 114 5 19 4 282 8 21 1 162 1 206 6 163 12 246 8 164 2 22 1 165 2 23 3 118 6 123 4 249 2 76 2 77 4 293 2 79 3 31 2 296 3 35 3 356 1 226 4 227 1 39 1 40 5 299 3 303 2 89 2 185 1 362 1 
163 6 206 5 246 5 164 2 258 1 118 5 311 2 208 1 343 1 5 8 123 2 94 3 249 2 168 1 149 2 215 1 321 2 238 1 31 2 155 1 226 2 253 1 358 1 40 1 299 1 357 1 277 1 303 2 111 1 136 1 159 2 114 1 19 2 282 5 185 1 
164 2 117 1 258 1 2 1 123 1 5 2 50 1 350 1 291 1 321 1 31 1 240 1 60 1 33 1 297 1 270 1 104 1 133 1 273 1 226 1 40 1 255 1 303 2 111 1 243 1 19 1 339 1 282 2 
246 1 123 1 5 1 226 1 227 1 16 1 159 1 321 1 19 1 282 1 
164 2 206 5 163 10 246 5 118 5 311 2 5 5 249 2 94 5 303 2 111 1 149 2 31 2 322 1 282 5 
246 1 40 1 299 1 258 1 159 1 114 1 
0 1 187 1 258 3 123 2 5 2 77 1 79 4 268 1 321 2 59 1 296 1 155 2 35 4 197 1 199 4 201 2 356 2 225 1 226 1 299 2 40 3 66 1 160 1 114 4 161 1 19 2 282 2 21 1 185 2 
186 1 144 1 189 1 263 2 122 1 167 1 289 1 291 2 77 1 52 1 78 1 79 1 268 1 129 1 240 3 296 1 196 1 297 1 270 3 35 1 199 1 107 1 85 1 356 1 300 1 255 2 66 1 278 1 179 1 243 2 336 1 339 2 
163 4 206 2 246 4 118 2 155 1 123 1 5 1 94 2 226 1 51 1 159 2 321 1 19 1 282 2 185 1 
271 1 262 1 12 1 
271 1 262 1 12 1 
145 1 41 1 271 1 262 1 204 1 
271 1 262 1 12 1 
271 1 262 1 151 1 
271 1 262 1 151 1 
271 1 262 1 151 1 
271 1 262 1 
20 1 195 1 
164 1 186 4 33 1 60 1 272 1 104 1 263 4 48 1 107 8 223 1 276 1 51 1 167 2 302 3 320 2 52 2 179 2 244 4 31 1 129 2 
186 3 164 1 33 1 60 1 272 1 104 1 285 1 223 1 107 6 51 1 302 2 320 2 244 3 31 1 
186 2 164 1 311 1 263 2 48 1 249 1 107 4 167 1 302 2 149 1 320 1 52 1 179 1 244 2 31 1 239 1 129 1 
186 4 164 1 311 1 207 1 208 1 48 1 107 7 249 1 357 2 302 2 149 1 320 1 215 1 244 3 31 1 
164 3 186 12 207 1 311 2 208 2 263 4 48 4 249 2 51 1 316 1 167 2 149 2 320 5 52 2 31 3 129 2 60 2 33 2 272 1 328 1 104 1 223 1 107 23 276 2 357 2 302 9 179 2 244 11 183 1 
186 1 357 1 107 1 
208 1 244 1 107 1 
186 3 164 1 311 1 263 2 48 1 107 6 249 1 167 1 302 3 149 1 52 1 320 2 179 1 244 3 31 1 322 1 129 1 239 1 
186 6 164 2 311 2 208 1 263 2 48 1 249 2 167 1 149 2 52 1 320 1 215 1 238 1 31 2 129 1 63 1 107 12 253 1 357 1 277 1 358 1 302 2 136 1 179 1 244 6 
164 1 186 3 33 1 60 1 104 1 48 1 107 6 302 2 320 1 244 3 31 1 
186 2 60 1 33 1 272 1 263 2 48 1 107 3 223 1 276 1 167 1 302 2 320 1 52 1 179 1 244 1 183 1 129 1 
186 5 164 2 33 2 60 2 104 1 133 1 263 2 63 1 48 2 107 10 167 1 302 5 52 1 320 3 179 1 244 5 31 2 129 1 
164 1 263 2 63 1 48 1 107 2 167 1 302 1 149 1 52 1 179 1 244 2 129 1 
186 2 164 1 311 1 263 2 63 1 48 1 249 1 107 4 167 1 302 2 149 1 320 1 52 1 179 1 244 2 31 1 129 1 
186 2 33 1 60 1 263 6 313 1 63 1 48 1 107 3 276 1 167 3 302 2 52 3 320 1 179 3 244 1 183 1 129 3 
186 18 164 5 207 1 311 3 208 3 263 10 313 1 48 5 249 3 51 1 167 5 149 3 52 5 320 7 215 1 31 5 239 1 129 5 60 3 33 3 272 1 104 2 105 1 63 1 223 1 107 34 276 2 357 4 86 1 302 12 87 1 179 5 244 16 183 1 
164 1 186 4 208 1 263 2 51 1 167 1 52 1 320 2 215 1 31 1 129 1 33 1 60 1 272 1 104 1 63 1 107 8 223 1 357 1 277 1 302 2 179 1 244 4 
186 5 164 2 207 1 208 1 263 4 48 1 249 1 51 1 167 2 149 1 320 2 52 2 215 1 31 1 129 2 239 1 60 1 33 1 272 1 104 1 63 1 223 1 107 11 357 2 277 1 302 3 179 2 244 6 
186 10 164 3 311 2 208 1 263 6 48 1 249 2 51 1 167 3 149 2 52 3 320 3 215 1 238 1 31 3 239 1 129 3 60 1 33 1 272 1 104 1 63 1 223 1 107 19 276 1 253 1 357 1 277 1 358 1 302 4 136 1 179 3 244 9 
186 7 164 3 311 1 208 1 263 6 48 2 249 2 51 1 167 3 149 2 52 3 320 3 215 1 238 1 31 2 239 1 129 3 60 1 33 1 272 1 104 1 63 1 223 1 107 17 276 1 253 1 357 1 277 1 358 1 302 5 136 1 179 3 244 10 
164 1 186 4 208 1 263 2 51 1 167 1 52 1 320 2 215 1 31 1 129 1 33 1 60 1 272 1 104 1 63 1 107 8 223 1 357 1 277 1 302 2 179 1 244 4 
186 6 164 2 311 2 208 1 263 2 48 1 249 2 167 1 149 2 52 1 320 1 215 1 238 1 31 2 129 1 63 1 107 12 253 1 357 1 277 1 358 1 302 2 136 1 179 1 244 6 
186 8 164 3 311 1 208 1 263 8 48 2 249 2 51 1 167 4 149 2 52 4 320 3 215 1 238 1 31 2 239 1 129 4 60 1 33 1 272 1 104 1 63 1 223 1 107 18 276 2 253 1 358 1 357 1 277 1 302 5 136 1 179 4 244 10 
186 7 164 3 311 2 208 1 263 8 313 1 48 3 249 3 167 4 149 3 52 4 320 3 215 1 238 1 31 2 129 4 63 1 107 16 276 2 253 1 358 1 357 1 277 1 302 6 136 1 179 4 244 9 
186 4 164 1 33 3 60 3 272 2 104 1 48 3 107 7 223 1 302 6 320 3 244 3 31 1 
186 8 164 3 311 1 208 1 263 8 313 1 48 1 249 2 51 1 167 4 149 2 52 4 320 3 215 1 238 1 31 2 129 4 60 1 33 1 272 1 104 1 63 1 223 1 107 18 276 2 253 1 358 1 357 1 277 1 302 4 136 1 179 4 244 10 
81 1 270 1 329 1 98 1 339 1 85 1 240 1 
81 1 64 1 269 1 270 1 319 1 329 1 98 1 251 1 339 1 85 1 240 1 234 1 
296 1 66 1 77 1 35 1 197 1 285 1 79 1 268 1 161 1 199 1 356 1 
296 1 270 2 189 1 35 1 199 1 95 1 85 1 356 1 300 1 255 1 66 1 278 1 77 1 79 1 268 1 243 1 339 1 240 2 
296 1 165 1 270 1 189 2 35 1 106 1 199 1 95 1 201 1 332 1 300 1 350 1 255 1 66 3 278 1 77 1 79 1 268 2 243 1 18 1 339 1 240 1 
296 1 165 1 270 1 189 2 35 1 106 1 199 1 95 1 201 1 332 1 300 1 350 1 255 1 66 3 77 1 79 1 268 2 243 1 18 1 339 1 194 1 240 1 
246 1 165 1 23 1 258 2 189 1 233 1 347 1 76 1 77 1 79 3 268 1 11 1 296 1 154 1 35 3 106 1 199 3 201 1 356 1 40 2 66 4 159 1 114 1 
246 1 296 1 165 1 154 1 258 2 23 1 189 1 35 3 106 1 199 3 356 1 201 1 347 1 40 2 76 1 66 4 159 1 77 1 79 3 268 1 114 1 193 1 
296 1 77 1 35 1 138 1 79 1 199 1 
296 2 342 1 22 1 82 1 1 1 35 7 189 1 103 1 354 1 264 1 199 6 356 2 135 1 66 3 158 1 77 3 138 1 257 1 79 7 268 2 307 1 
186 3 144 2 189 1 263 4 95 1 51 1 52 2 320 2 268 1 55 1 99 1 240 2 196 2 60 1 270 2 272 1 104 1 199 1 107 6 66 1 278 1 243 1 336 1 244 3 339 1 205 1 164 1 22 1 248 1 122 1 167 2 352 1 126 1 77 1 79 1 31 1 129 2 296 1 33 1 35 1 223 1 85 2 300 1 255 1 302 2 179 2 184 1 
246 1 258 3 92 1 23 1 147 1 5 1 123 2 76 1 317 1 293 1 79 1 321 2 193 1 154 1 35 1 199 1 356 1 226 2 227 1 40 3 299 1 16 1 66 2 159 1 114 2 19 2 282 1 21 1 
296 1 22 1 35 2 189 1 199 2 76 1 66 2 158 1 77 2 138 1 79 2 268 1 362 1 
296 1 22 1 35 4 197 1 156 1 199 4 356 1 347 1 66 1 77 1 79 4 268 1 161 1 
296 1 35 2 189 1 103 1 312 1 199 2 201 1 157 1 66 1 169 1 77 2 79 2 268 1 307 1 
296 1 326 1 77 1 35 1 241 1 79 1 217 1 56 1 199 1 356 1 
296 1 22 1 342 1 82 1 259 1 35 2 199 2 66 1 77 1 79 2 268 1 
296 2 22 1 82 1 35 5 1 1 197 1 156 1 199 4 201 1 356 1 66 3 77 2 257 1 79 5 268 2 161 1 
296 2 22 1 82 1 35 5 1 1 197 1 156 1 199 4 201 1 356 1 235 1 66 3 77 2 79 5 268 2 161 1 
296 1 270 2 189 1 35 1 199 1 95 1 85 1 356 1 300 1 255 1 66 1 77 1 79 1 268 1 243 1 339 1 194 1 240 2 
296 1 35 1 189 1 103 1 199 1 201 1 135 1 66 1 158 1 77 2 79 1 268 1 307 1 
270 1 190 1 25 1 74 1 127 1 339 1 171 1 324 1 240 1 
260 1 25 1 338 1 
46 1 190 1 25 1 74 1 85 1 
258 1 46 1 260 1 25 1 190 1 209 1 74 1 332 1 75 1 40 1 350 1 14 1 317 1 18 1 338 1 
214 1 17 1 285 1 344 1 
97 1 214 1 17 1 175 1 232 1 210 1 344 1 
242 1 232 1 245 1 
247 1 188 1 261 1 175 1 210 1 232 3 344 1 97 3 177 1 214 1 17 1 54 2 
97 2 310 1 214 1 17 1 175 1 232 2 210 1 219 1 344 1 
326 1 261 1 175 1 210 1 232 1 124 1 125 1 97 1 214 1 217 1 130 1 
97 1 214 1 261 1 175 1 232 1 210 1 344 1 
97 1 17 1 261 1 175 1 232 1 210 1 344 2 
261 1 175 2 210 2 232 2 6 1 344 1 97 2 214 1 281 1 58 1 
310 2 261 1 166 1 175 1 210 1 232 3 124 1 344 1 97 3 17 1 214 2 43 1 174 1 
220 1 326 2 310 1 261 1 175 1 210 1 232 2 125 1 344 1 97 2 15 1 214 1 17 1 56 1 217 1 
102 1 310 2 261 1 166 1 175 2 210 2 232 4 124 1 344 1 97 4 17 1 214 2 219 1 
97 1 214 1 17 1 261 1 175 1 232 1 210 1 344 1 
247 1 188 1 310 2 166 1 175 1 232 4 210 1 355 1 124 1 344 2 97 4 17 2 214 3 54 1 
310 1 261 1 175 1 210 1 232 2 49 1 344 1 97 2 214 1 17 1 140 1 295 1 
247 1 188 2 261 1 175 1 210 1 232 3 275 1 344 1 97 3 214 1 17 1 54 2 
143 1 101 2 214 2 288 1 
97 1 36 1 261 1 175 1 232 1 210 1 
97 2 310 1 214 1 17 1 261 1 175 1 232 2 210 1 43 1 344 1 
331 1 
97 1 214 1 17 1 261 1 175 1 232 1 210 1 344 1 
97 3 310 1 214 1 17 1 261 1 175 1 54 1 232 3 210 1 43 1 344 1 
214 1 166 1 355 1 124 1 
214 1 344 1 

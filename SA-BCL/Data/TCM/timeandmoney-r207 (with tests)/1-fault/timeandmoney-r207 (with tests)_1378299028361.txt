#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 1 354 1 52 2 323 1 342 1 13 2 328 3 362 1 41 1 311 1 26 1 295 2 256 3 
354 2 206 1 323 4 182 1 358 2 271 1 72 2 328 9 362 1 41 1 363 1 276 2 73 1 127 1 280 2 26 1 151 1 256 9 128 1 52 5 342 6 13 2 33 1 311 3 134 1 294 1 349 1 295 2 
354 2 206 1 323 4 182 1 358 2 271 1 72 2 328 9 362 1 41 1 363 1 276 2 73 1 127 1 280 2 26 1 151 1 256 9 128 1 52 5 342 6 13 2 33 1 311 3 134 1 294 1 349 1 295 2 
354 2 206 1 323 5 182 1 358 2 271 1 72 2 328 10 362 1 41 1 363 1 276 2 73 1 127 1 280 2 26 1 151 1 256 10 128 1 52 6 342 7 13 2 33 1 311 4 134 1 294 1 349 1 295 2 
354 2 206 1 323 3 182 1 358 2 271 1 72 2 328 7 362 1 41 1 363 1 276 1 73 1 127 1 280 2 26 1 151 1 256 7 128 1 52 4 342 4 13 2 33 1 311 2 294 1 349 1 295 2 
128 1 52 3 323 2 342 3 13 1 358 1 328 4 33 1 72 1 362 1 41 1 311 1 276 2 134 1 280 1 151 1 295 1 256 4 
128 1 354 1 52 1 13 1 358 1 122 1 271 1 123 1 328 2 362 1 41 1 112 1 280 1 294 1 295 1 256 2 
223 1 354 1 323 4 67 1 358 1 328 9 72 1 362 1 41 1 363 1 276 2 26 1 151 1 280 1 256 9 128 1 52 5 342 7 13 2 33 1 311 3 134 1 349 1 295 2 
223 1 354 1 323 4 67 1 358 1 328 9 72 1 362 1 41 1 363 1 276 2 26 1 151 1 280 1 256 9 128 1 52 5 342 7 13 2 33 1 311 3 134 1 349 1 295 2 
138 1 29 1 224 1 268 1 269 1 373 1 298 1 57 1 130 1 164 1 17 1 74 1 
176 1 
138 1 230 1 176 1 224 2 249 1 197 1 130 2 71 1 
138 2 234 1 37 1 224 5 142 1 299 1 3 1 197 1 130 5 71 1 345 2 186 1 275 2 378 1 230 2 176 1 16 2 27 1 192 1 
176 1 209 1 71 1 
176 1 159 1 214 2 
29 2 44 1 373 2 164 2 57 2 298 2 74 2 17 1 
352 2 355 1 140 1 298 2 119 1 170 1 183 1 2 1 327 2 4 1 330 1 44 1 302 2 74 2 367 1 9 1 369 1 304 1 193 1 29 3 173 2 307 1 53 1 373 2 57 3 129 1 216 1 131 1 15 1 109 1 164 2 111 1 199 1 17 1 136 1 200 1 137 2 
29 1 268 1 373 1 164 1 57 1 298 1 74 1 17 1 
97 1 215 1 29 1 224 1 54 1 55 1 373 1 57 1 105 1 130 1 71 1 176 1 113 1 11 1 
97 1 29 1 224 2 54 1 373 1 298 1 57 1 105 1 130 2 71 1 176 1 164 1 74 1 113 1 11 1 
138 1 230 1 224 1 130 1 201 1 
138 1 230 1 176 1 224 2 286 1 197 1 130 2 71 1 
230 1 224 1 130 1 
29 2 373 2 57 2 298 1 236 1 301 1 44 2 164 1 74 1 
248 1 139 1 221 1 
29 1 355 1 57 1 129 1 170 1 327 1 290 1 4 1 44 1 111 1 302 1 367 1 136 1 200 1 137 1 304 1 
44 1 209 1 
29 2 355 1 175 1 139 1 373 1 129 1 298 1 57 2 170 1 327 1 4 1 164 1 111 1 302 1 367 1 150 1 136 1 200 1 137 1 304 1 
29 3 44 1 175 1 373 3 164 3 74 1 57 3 298 3 
97 1 29 1 292 1 373 1 164 1 57 1 298 1 
97 1 301 1 29 1 373 1 164 1 57 1 298 1 74 1 236 1 
352 1 224 1 355 1 140 1 298 3 119 1 170 1 327 1 4 1 301 1 330 1 44 1 302 1 74 2 367 1 9 1 150 1 152 1 369 1 304 1 11 1 97 1 193 1 29 4 173 2 175 1 53 1 54 1 373 3 129 1 57 4 105 1 216 1 130 1 15 1 109 1 164 3 111 1 17 1 113 1 136 1 200 1 60 1 137 1 
29 2 44 1 175 1 55 1 373 2 164 1 57 2 298 1 237 1 
97 1 29 3 224 1 175 2 54 1 373 3 298 3 57 3 105 1 130 1 301 1 176 1 164 3 241 1 74 1 113 1 150 1 60 1 11 1 
301 1 29 2 175 1 139 1 373 2 164 2 57 2 298 2 74 1 221 1 
29 1 355 1 57 1 129 1 170 1 327 1 4 1 44 1 111 1 302 1 367 1 200 1 136 1 137 1 304 1 
29 1 355 1 57 1 157 1 129 1 327 1 44 1 111 1 302 1 92 1 367 1 200 1 136 1 137 1 304 1 
352 4 248 2 139 2 140 1 143 1 69 1 273 1 227 1 361 1 330 1 9 1 190 1 369 2 193 1 173 2 102 1 307 2 216 1 160 1 15 1 135 1 220 1 317 1 221 2 
97 1 29 1 373 1 164 1 105 1 57 1 298 1 229 1 
29 5 175 2 205 1 55 1 373 5 308 1 298 4 57 5 237 1 301 1 44 1 164 4 74 1 150 1 
97 1 29 2 292 1 373 2 164 2 57 2 298 2 229 1 
132 1 316 1 18 1 
364 1 259 1 14 1 219 1 316 2 18 2 
316 1 18 1 
316 1 18 1 
259 1 219 1 
259 1 219 1 
259 1 219 1 
316 1 319 1 18 1 
316 1 319 1 18 1 
316 1 319 1 18 1 
222 1 316 1 18 1 
222 1 316 1 18 1 
222 1 316 1 18 1 
51 1 224 2 118 3 374 2 226 1 270 1 130 2 329 1 124 2 14 1 176 1 314 1 82 1 316 2 18 2 178 2 370 1 153 2 255 2 
29 2 224 1 118 1 373 2 56 1 57 2 374 1 298 2 375 1 377 1 130 1 329 1 228 1 132 1 43 1 124 1 108 1 44 1 164 2 316 1 18 1 153 1 180 1 255 1 
358 2 123 1 179 2 72 1 181 1 
280 1 358 1 72 1 
280 1 358 1 123 1 
58 1 358 3 123 1 179 1 72 2 181 1 
358 2 123 1 179 1 72 1 181 1 94 1 
138 4 224 5 322 2 225 2 143 1 68 1 299 1 69 1 361 1 71 1 145 1 90 1 228 1 275 1 230 1 46 1 27 2 192 3 214 3 56 1 197 1 130 5 159 1 345 1 260 1 176 2 291 2 198 1 16 1 35 1 220 1 180 1 
138 7 19 1 224 9 322 6 251 1 143 3 68 3 299 1 3 1 69 3 360 1 361 3 71 1 145 2 90 2 275 2 230 6 277 1 27 6 192 8 214 9 155 5 174 1 130 9 197 1 159 3 345 2 176 5 291 6 198 1 16 2 220 3 180 4 201 5 350 1 
138 2 224 3 322 2 225 1 143 1 68 1 3 1 69 1 71 1 145 1 90 1 361 1 275 1 46 1 27 2 192 3 214 4 130 3 159 2 345 1 260 1 176 3 291 2 16 1 220 1 180 1 
138 3 19 1 224 4 322 4 225 2 143 2 68 2 3 1 69 2 71 1 360 1 145 1 90 1 361 2 275 1 46 1 27 4 192 5 214 7 130 4 159 3 345 1 260 1 176 4 291 4 16 1 220 2 180 2 350 1 
169 1 
156 1 136 1 209 1 
341 1 136 1 
367 1 136 1 
96 1 278 1 156 2 367 1 136 3 304 1 
367 1 136 1 304 1 
126 1 136 1 
352 7 338 1 102 2 307 4 65 1 288 1 32 1 107 2 69 1 80 1 83 1 135 3 243 1 220 1 191 1 336 1 369 3 254 1 
352 31 87 4 65 2 140 1 68 3 143 3 69 4 274 1 361 3 5 1 172 1 334 1 25 1 9 1 191 1 254 2 369 15 371 3 193 1 338 1 173 2 102 5 307 16 288 2 32 1 194 1 107 3 80 1 15 1 133 1 83 5 135 10 243 2 220 4 
352 9 64 1 140 2 65 1 69 1 9 2 191 1 369 4 254 1 98 1 193 2 338 1 173 4 102 3 307 5 288 1 32 1 107 2 15 2 133 1 83 1 135 4 243 1 220 1 
352 7 338 1 102 2 307 4 65 1 288 1 32 1 107 2 69 1 80 1 83 1 135 3 243 1 220 1 191 1 369 3 254 1 
352 7 338 1 102 2 307 4 65 1 288 1 32 1 107 2 69 1 80 1 83 1 135 3 243 1 220 1 191 1 369 3 254 1 
86 1 354 2 327 1 184 1 328 1 302 1 188 2 367 1 281 1 28 1 256 1 103 1 129 1 13 1 217 1 111 1 245 1 200 1 318 2 136 1 137 1 295 1 117 2 
321 1 354 1 325 1 358 2 327 1 22 1 123 1 72 1 328 1 23 1 302 1 188 1 280 1 256 1 49 1 128 1 129 1 58 1 13 1 318 1 200 1 137 1 114 1 117 1 85 1 295 1 
321 1 354 1 325 1 358 2 327 1 22 1 123 1 72 1 328 2 362 1 41 1 23 1 302 1 188 1 280 1 256 2 49 1 128 1 52 1 342 1 129 1 58 1 13 1 315 1 318 1 200 1 137 1 114 1 117 1 295 1 
321 1 354 1 325 1 358 2 327 1 22 1 123 1 72 1 328 3 362 1 41 1 23 1 302 1 188 1 280 1 28 1 256 3 49 1 52 1 58 1 342 2 129 1 13 1 318 1 200 1 137 1 246 1 117 1 85 1 295 1 
354 1 52 1 58 1 129 1 342 2 358 2 22 1 327 1 123 1 72 1 328 2 362 1 41 1 23 1 302 1 188 1 280 1 200 1 318 1 246 1 137 1 49 1 256 2 85 1 117 1 
78 1 
224 5 267 2 327 2 90 1 275 1 230 6 6 2 147 1 231 1 279 4 192 2 11 1 283 1 97 1 99 2 100 2 103 1 54 1 55 1 57 1 105 1 197 3 159 2 345 1 111 2 16 1 244 1 113 1 200 1 62 1 20 1 353 1 250 1 299 1 71 1 211 1 302 2 367 1 27 2 214 2 215 1 29 1 77 2 373 1 129 1 217 1 79 1 130 5 312 1 176 2 81 2 263 1 379 2 136 1 137 2 
224 3 353 1 249 1 211 1 230 2 6 1 231 1 279 2 11 1 97 1 215 1 29 1 54 1 373 1 55 1 57 1 105 1 130 3 197 1 312 1 244 1 113 1 
224 3 353 1 267 1 249 1 71 1 230 1 211 1 231 1 279 3 11 1 97 1 215 1 29 1 54 1 373 1 55 1 57 1 105 1 130 3 197 1 312 1 176 1 244 1 113 1 
224 3 249 1 353 1 267 1 71 1 211 1 230 2 6 1 231 1 279 3 11 1 97 1 215 1 29 1 54 1 373 1 55 1 57 1 105 1 197 1 130 3 312 1 176 1 244 1 379 1 113 1 
224 5 267 4 275 1 230 7 6 4 147 1 279 6 231 1 192 1 11 1 93 1 97 1 99 2 100 2 54 1 55 1 105 1 57 1 197 3 345 1 159 2 242 1 16 1 244 1 113 1 63 1 249 1 353 1 299 1 71 5 211 1 27 1 305 1 215 1 29 1 373 1 77 2 130 5 218 1 312 1 176 5 81 2 263 1 379 4 
224 4 267 2 353 1 299 1 71 1 275 1 230 4 211 1 6 2 147 1 231 1 279 4 27 1 192 1 11 1 283 1 214 2 97 1 215 1 99 2 29 1 100 2 54 1 77 2 55 1 373 1 57 1 105 1 197 2 130 4 159 2 345 1 312 1 176 2 81 2 263 1 16 1 379 2 244 1 113 1 
63 1 224 4 267 2 353 1 299 1 71 1 275 1 230 4 211 1 6 2 147 1 231 1 279 4 27 1 192 1 11 1 93 1 97 1 215 1 99 2 29 1 100 2 54 1 77 2 373 1 55 1 57 1 105 1 197 2 130 4 218 1 159 2 345 1 312 1 176 1 81 2 263 1 16 1 379 2 244 1 113 1 
63 1 224 4 267 2 353 1 299 1 71 1 275 1 230 4 211 1 6 2 147 1 231 1 279 4 27 1 192 1 11 1 93 1 97 1 215 1 99 2 29 1 100 2 54 1 77 2 373 1 55 1 57 1 105 1 197 2 130 4 218 1 159 2 345 1 312 1 176 1 81 2 263 1 16 1 379 2 244 1 113 1 
63 1 224 4 267 2 353 1 299 1 71 1 275 1 230 4 211 1 6 2 231 1 279 4 189 2 27 1 192 1 11 1 214 2 97 1 215 1 99 2 29 1 285 1 54 1 77 2 373 1 55 1 343 2 57 1 105 1 197 2 130 4 345 1 312 1 176 1 263 1 16 1 379 2 244 1 113 1 177 1 264 1 
63 1 224 4 353 1 267 3 299 1 71 1 275 1 211 1 230 5 6 3 147 1 231 1 279 5 27 1 192 1 11 1 93 1 97 1 215 1 99 2 29 1 100 2 54 1 77 2 373 1 55 1 57 1 105 1 197 2 218 1 130 4 159 2 345 1 312 1 176 1 81 2 263 1 16 1 242 1 244 1 379 3 113 1 
63 1 224 4 353 1 267 3 299 1 71 1 275 1 211 1 230 5 6 3 147 1 231 1 279 5 27 1 192 1 11 1 93 1 97 1 215 1 99 2 29 1 100 2 54 1 77 2 373 1 55 1 57 1 105 1 197 2 218 1 130 4 159 2 345 1 312 1 176 1 81 2 263 1 16 1 242 1 244 1 379 3 113 1 
224 4 267 2 353 1 299 1 71 1 275 1 230 4 211 1 6 2 231 1 279 4 189 2 27 1 192 1 11 1 283 1 214 2 97 1 215 1 99 2 29 1 54 1 77 2 55 1 373 1 343 2 57 1 105 1 197 2 130 4 345 1 312 1 176 1 263 1 16 1 379 2 244 1 113 1 264 1 
352 2 39 1 140 2 298 1 326 1 183 2 272 1 327 7 330 2 302 8 335 1 367 2 9 2 10 1 190 1 369 1 337 1 193 2 29 1 173 4 175 1 307 1 103 1 53 1 373 1 57 1 129 2 216 2 217 1 158 1 15 2 164 1 111 2 315 1 199 1 200 2 136 3 137 8 85 1 
352 3 248 1 139 1 140 1 66 1 298 1 68 1 143 1 69 1 361 1 301 1 330 1 74 1 9 1 369 2 193 1 29 1 173 2 102 1 307 1 373 1 57 1 216 1 15 1 164 1 135 1 220 1 165 1 221 1 
352 6 193 1 248 1 338 1 173 2 102 2 307 3 139 1 65 1 140 1 216 1 209 1 32 1 107 1 69 1 330 1 15 1 44 2 135 2 220 1 9 1 191 1 190 1 369 3 254 1 221 1 
352 14 248 11 87 3 139 11 140 2 68 2 143 1 69 1 361 2 91 1 330 1 44 1 334 1 47 1 9 2 369 6 371 3 193 2 173 4 102 1 12 1 307 8 53 1 216 2 194 1 15 2 240 1 83 1 199 1 135 2 220 2 165 1 221 4 
0 1 352 2 355 1 140 1 298 1 170 1 327 1 4 1 330 1 44 1 302 1 367 1 9 1 150 1 304 1 369 1 193 1 29 2 173 2 175 1 307 1 53 1 373 1 129 1 57 2 216 1 290 1 15 1 111 1 164 1 199 1 136 1 200 1 137 1 165 1 36 1 320 1 221 1 
139 7 140 3 88 1 327 3 143 2 144 1 89 1 4 2 330 3 44 2 333 2 150 1 9 3 191 1 193 3 338 1 102 4 53 1 57 3 107 1 15 3 109 2 111 1 164 1 199 1 200 2 165 1 352 20 167 2 168 2 248 7 355 2 65 1 298 1 170 2 68 2 69 3 361 2 302 3 367 2 254 1 369 10 304 2 29 3 173 6 175 1 307 10 373 1 129 2 216 3 31 2 32 1 83 4 135 8 220 3 136 2 137 3 221 7 85 1 
352 2 193 1 248 1 173 2 307 2 139 1 140 1 216 1 273 1 361 1 330 1 15 1 83 1 135 1 9 1 220 1 190 1 221 1 
352 2 193 1 248 1 173 2 102 1 139 1 140 1 216 1 143 1 69 1 330 1 15 1 135 1 9 1 190 1 317 1 369 2 221 1 
352 4 248 2 139 2 140 1 68 1 143 1 69 1 361 1 330 1 9 1 190 1 369 2 193 1 173 2 102 1 307 2 216 1 15 1 83 1 135 2 220 1 221 2 
352 2 193 1 248 1 173 2 307 2 139 1 140 1 216 1 158 1 273 1 361 1 330 1 15 1 83 1 135 1 9 1 220 1 221 1 
352 2 193 1 248 1 173 2 102 1 139 1 140 1 216 1 143 1 158 1 69 1 330 1 15 1 135 1 9 1 317 1 369 2 221 1 
352 4 248 2 139 2 140 1 68 1 143 1 69 1 361 1 330 1 9 1 369 2 193 1 173 2 102 1 307 2 216 1 158 1 15 1 83 1 135 2 220 1 221 2 
352 4 248 2 139 2 140 1 68 1 143 1 69 1 361 1 330 1 9 1 369 2 193 1 173 2 102 1 307 2 216 1 15 1 83 1 135 2 220 1 221 2 
352 2 355 1 140 1 170 1 327 1 4 1 330 1 44 1 302 1 367 1 9 1 304 1 369 1 193 1 29 1 173 2 307 1 53 1 129 1 57 1 216 1 15 1 109 1 111 1 199 1 200 1 136 1 137 1 
352 2 355 1 140 1 327 1 330 1 44 1 302 1 367 1 92 1 9 1 304 1 369 1 193 1 29 1 173 2 307 1 53 1 129 1 157 1 57 1 216 1 15 1 111 1 199 1 200 1 136 1 137 1 202 1 
352 4 248 2 139 2 140 1 68 1 143 1 69 1 361 1 330 1 9 1 369 2 193 1 173 2 102 1 307 2 216 1 15 1 83 1 135 2 220 1 165 1 221 2 
352 4 248 2 355 1 139 2 140 1 170 1 143 1 327 1 68 1 69 1 361 1 4 1 330 1 302 1 367 1 9 1 369 2 304 1 193 1 29 1 173 2 102 1 307 2 129 1 57 1 31 1 216 1 15 1 109 1 83 1 135 2 315 1 220 1 200 1 136 1 137 1 221 2 
352 3 248 1 139 1 140 1 298 1 143 1 68 1 69 1 361 1 42 1 301 1 330 1 74 1 9 1 369 1 193 1 29 1 173 2 307 2 373 1 57 1 216 1 15 1 83 1 164 1 135 1 220 1 165 1 221 1 
351 1 352 19 87 2 64 1 140 2 208 1 68 3 143 3 69 3 361 3 7 2 366 1 334 1 48 1 9 2 369 10 233 1 371 1 193 2 173 4 101 1 102 3 307 9 344 1 194 1 239 2 15 2 83 3 135 6 220 3 
351 1 352 26 87 2 38 1 64 1 140 3 324 1 121 1 68 3 143 2 40 1 69 2 361 3 146 1 7 1 366 1 48 2 9 3 369 12 233 2 371 2 193 3 173 6 102 2 307 14 344 1 194 2 239 4 133 2 15 3 83 2 135 4 220 3 61 1 
351 1 352 41 203 1 38 1 87 4 64 1 65 1 140 3 324 1 121 1 68 4 143 4 40 1 69 5 361 4 146 1 7 1 366 1 334 1 48 1 9 3 191 1 254 1 369 21 233 2 371 3 193 3 338 1 173 6 101 1 102 4 307 20 344 1 32 1 107 1 194 3 239 4 133 1 15 3 83 4 135 8 220 5 61 1 
351 1 352 38 203 1 38 1 87 4 64 1 65 1 140 4 324 1 121 1 68 4 143 3 40 1 69 4 361 4 146 1 7 1 366 1 334 1 48 1 9 4 191 1 254 1 369 18 233 2 371 3 193 4 338 1 173 8 101 1 102 4 307 20 344 1 32 1 107 1 194 3 239 4 133 2 15 4 83 3 135 7 220 5 61 1 
351 1 352 52 38 1 87 4 64 1 65 1 140 2 324 1 121 1 68 7 143 7 40 1 69 8 361 7 146 1 7 1 366 1 334 2 47 2 48 1 9 2 191 1 254 1 369 25 233 1 371 4 193 2 338 1 173 4 102 7 307 27 344 1 32 1 107 1 194 2 239 4 133 1 15 2 83 7 135 14 220 8 61 1 
124 1 14 1 314 1 374 1 226 1 316 1 18 1 265 1 153 1 255 1 
132 1 108 1 
124 1 340 1 374 1 316 1 381 1 18 1 153 1 154 1 255 1 
51 1 224 1 118 2 374 1 226 1 270 1 130 1 329 1 124 1 14 1 176 1 314 1 82 1 316 1 18 1 178 1 153 1 255 1 
51 1 224 1 118 2 374 1 226 1 270 1 130 1 329 1 124 1 14 1 176 1 314 1 82 1 316 1 18 1 178 1 153 1 255 1 
51 1 224 1 118 2 374 1 226 1 270 1 130 1 329 1 124 1 14 1 176 1 314 1 82 1 316 1 18 1 178 1 153 1 255 1 
364 1 339 1 319 1 
364 1 339 1 319 1 
222 1 252 1 
364 1 222 1 252 1 
43 1 375 1 
138 1 224 1 118 1 298 2 270 1 228 1 124 1 43 1 44 1 153 1 255 1 29 2 373 2 57 2 374 1 56 1 375 1 310 1 130 1 377 1 132 1 108 1 164 2 316 1 178 1 18 1 180 1 
339 1 319 1 
364 1 222 1 252 1 
352 2 140 1 1 1 120 1 326 1 183 2 327 2 300 1 330 1 24 1 302 2 367 1 335 1 9 1 369 1 193 1 29 2 173 2 307 1 53 1 373 2 129 1 57 2 216 1 15 1 199 1 348 1 200 1 136 1 137 2 165 1 
103 1 129 1 217 1 327 1 111 1 302 1 367 1 281 1 200 1 136 1 137 1 166 1 247 1 117 1 
321 1 58 1 357 1 129 1 358 2 327 1 22 1 123 1 72 1 302 1 280 1 200 1 282 1 137 1 166 1 85 1 117 1 49 1 
321 1 58 1 129 1 357 1 358 2 327 2 22 1 123 1 72 1 302 2 315 1 280 1 200 1 282 1 137 2 166 1 85 1 117 1 49 1 
321 1 58 1 357 1 129 1 358 2 327 1 22 1 123 1 72 1 162 1 302 1 280 1 200 1 137 1 85 1 117 1 49 1 
45 1 
37 1 142 1 299 1 345 1 71 1 275 1 176 1 16 1 27 1 192 1 
50 1 168 1 322 5 68 2 143 2 69 2 361 2 159 5 176 5 313 2 291 5 220 2 27 5 192 5 214 10 
230 1 176 1 224 1 130 1 197 1 71 1 
20 2 224 3 250 1 296 1 141 1 299 1 327 4 3 1 90 2 275 2 230 4 302 4 367 1 27 2 192 2 103 1 129 1 309 2 217 1 197 2 130 3 345 2 161 1 111 2 16 2 200 1 136 1 137 4 62 1 
176 1 37 1 27 1 142 1 209 1 192 1 71 1 
224 1 100 1 299 1 130 1 197 1 71 1 345 1 159 1 275 1 230 1 176 2 147 1 81 1 16 1 27 1 192 1 214 1 
37 1 224 5 322 6 142 1 327 3 143 2 90 2 275 4 230 5 192 9 284 2 96 1 50 2 235 1 341 3 156 2 106 2 197 3 345 4 159 6 291 6 111 1 347 2 16 4 59 2 113 2 200 4 168 2 20 1 296 1 299 4 68 2 69 2 71 2 361 2 212 2 126 2 302 3 367 3 27 8 304 3 258 1 257 1 214 12 76 2 129 3 309 1 130 5 176 8 313 2 315 1 220 2 136 10 137 3 
20 1 224 1 87 1 38 1 322 5 207 1 324 1 121 1 299 2 68 2 143 2 40 1 69 2 90 1 361 2 71 2 275 2 230 1 146 1 27 5 192 8 214 6 371 1 50 1 194 1 130 1 197 1 345 2 159 3 238 1 176 5 313 2 291 5 16 2 220 2 
224 1 268 1 65 1 269 1 298 1 299 1 69 1 275 1 74 1 27 2 191 1 192 2 254 1 95 1 50 1 29 1 373 1 57 1 218 1 130 1 345 1 313 2 164 1 16 1 17 1 220 2 
352 1 355 1 140 1 298 2 119 1 170 1 327 1 4 1 330 1 44 1 302 1 74 2 367 1 9 1 369 1 304 1 193 1 29 3 173 2 53 1 373 2 57 3 129 1 216 1 15 1 109 1 111 1 164 2 17 1 200 1 136 1 137 1 
20 1 322 2 299 1 107 1 159 2 345 1 90 1 71 2 275 1 176 4 291 2 16 1 27 2 192 1 214 4 
43 1 124 1 331 1 314 1 255 1 
124 1 232 1 255 1 
124 1 232 1 255 1 
124 1 232 1 255 1 
124 1 116 1 255 1 
124 1 116 1 255 1 
124 1 116 1 255 1 
124 1 255 1 
316 1 18 1 
95 1 193 1 352 10 173 2 64 1 102 3 307 5 140 1 65 2 69 2 15 1 83 2 135 5 9 1 220 2 191 1 254 2 369 5 
193 1 352 2 173 2 64 1 307 2 140 1 361 1 15 1 83 1 135 1 9 1 220 1 
193 1 352 4 173 2 102 1 64 1 307 2 140 1 143 1 68 1 69 1 361 1 15 1 83 1 135 2 9 1 220 1 369 2 
352 3 193 3 173 6 101 1 64 1 102 1 307 1 140 3 65 1 133 1 15 3 83 1 135 2 9 3 380 1 369 2 254 1 
352 34 87 4 64 1 65 3 140 5 68 3 143 3 69 5 361 3 5 1 172 1 334 1 25 1 9 5 191 2 254 3 369 18 371 3 193 5 338 1 173 10 101 1 102 7 307 16 32 1 107 1 194 1 133 2 15 5 346 1 83 5 135 12 220 5 380 1 
352 8 193 2 338 1 173 4 102 2 307 4 140 2 65 1 32 1 107 1 69 1 15 2 133 1 83 1 135 3 220 1 9 2 191 1 369 4 254 1 
352 6 338 1 102 2 307 3 65 1 209 1 32 1 107 1 69 1 135 2 220 1 191 1 369 3 254 1 
193 1 352 4 173 2 102 1 307 2 140 1 143 1 68 1 69 1 361 1 15 1 346 1 83 1 135 2 9 1 220 1 369 2 
371 1 352 7 87 2 102 1 307 3 143 1 68 1 194 1 69 1 361 1 83 1 334 1 135 2 220 1 369 4 
352 23 87 2 65 2 140 2 68 2 143 2 69 3 361 2 334 1 47 1 9 2 191 1 254 2 369 12 371 2 193 2 338 1 173 4 12 1 102 5 307 11 32 1 107 1 133 2 15 2 83 4 135 9 220 3 380 1 
352 1 87 1 369 1 
371 1 352 1 307 1 
193 1 352 6 168 1 173 2 102 2 307 3 140 1 68 1 143 1 69 1 361 1 15 1 346 1 83 1 135 3 9 1 220 1 369 3 
352 12 87 1 38 1 64 1 140 1 324 1 121 1 68 2 143 2 69 2 40 1 361 2 146 1 9 1 369 6 371 1 193 1 173 2 102 1 307 6 194 1 15 1 83 1 135 2 220 2 
352 6 102 1 307 3 65 1 69 1 83 1 135 2 220 1 191 1 369 3 254 1 
352 3 193 1 338 1 173 2 102 1 307 1 65 1 140 1 32 1 133 1 15 1 83 1 135 2 9 1 380 1 254 1 369 2 
352 8 87 1 38 1 64 1 140 1 65 1 69 1 9 1 191 1 369 4 254 1 371 1 193 1 338 1 173 2 102 2 307 4 32 1 107 1 194 1 15 1 135 2 220 1 
352 11 87 2 38 1 64 1 65 1 140 2 68 1 69 1 361 1 334 1 9 2 191 1 254 1 369 5 371 1 193 2 338 1 173 4 102 2 307 6 32 1 107 1 194 1 15 2 346 1 83 1 135 3 220 2 
352 19 87 1 38 1 64 1 65 1 140 3 324 1 121 1 68 2 143 2 69 3 40 1 361 2 146 1 9 3 191 1 254 1 369 10 371 1 193 3 338 1 173 6 102 3 307 9 32 1 107 1 194 1 15 3 133 1 346 1 83 1 135 4 220 3 
352 17 87 1 38 1 64 1 65 1 140 3 324 1 121 1 68 2 143 1 69 2 40 1 361 2 146 1 9 3 191 1 254 1 369 7 371 1 193 3 338 1 173 6 102 3 307 10 32 1 107 1 194 1 133 1 15 3 346 1 83 2 135 5 220 3 
352 8 87 1 38 1 64 1 140 1 65 1 69 1 9 1 191 1 369 4 254 1 371 1 193 1 338 1 173 2 102 2 307 4 32 1 107 1 194 1 15 1 135 2 220 1 
352 12 87 1 38 1 64 1 140 1 324 1 121 1 68 2 143 2 69 2 40 1 361 2 146 1 9 1 369 6 371 1 193 1 173 2 102 1 307 6 194 1 15 1 83 1 135 2 220 2 
352 18 87 1 38 1 64 1 65 1 140 4 324 1 121 1 68 2 143 1 40 1 69 2 361 2 146 1 9 4 191 1 254 1 369 8 371 1 193 4 338 1 173 8 102 3 307 10 32 1 107 1 194 1 15 4 133 2 346 1 83 2 135 5 220 3 
352 16 87 1 38 1 64 1 140 4 324 1 121 1 68 3 143 2 40 1 69 2 361 3 146 1 9 4 369 7 371 1 193 4 173 8 101 1 102 3 307 9 194 1 15 4 133 2 83 3 135 6 220 3 
352 7 338 2 102 3 307 3 65 3 32 1 69 1 83 3 135 6 220 1 191 1 369 4 254 3 
352 18 87 1 38 1 64 1 65 1 140 4 324 1 121 1 68 2 143 1 40 1 69 2 361 2 146 1 9 4 191 1 254 1 369 8 371 1 193 4 338 1 173 8 101 1 102 3 307 10 32 1 107 1 194 1 15 4 133 2 83 1 135 4 220 3 
29 1 44 1 373 1 55 1 57 1 359 1 237 1 
29 1 204 1 55 1 373 1 57 1 376 1 359 1 253 1 237 1 44 1 148 1 293 1 
103 1 129 1 217 1 327 4 111 1 302 4 315 1 367 1 200 1 136 1 75 1 137 4 266 1 
88 1 129 1 309 1 327 2 195 1 185 1 302 2 8 1 262 1 367 1 136 1 200 2 137 2 304 1 
302 1 111 1 129 1 280 1 358 1 200 1 22 1 327 1 123 1 137 1 
24 1 302 2 129 1 315 1 367 1 335 1 200 1 136 1 327 2 137 2 85 1 
103 1 39 1 129 2 309 1 217 1 327 4 111 1 302 5 315 1 335 1 367 2 136 3 200 2 10 1 137 5 266 1 
103 1 129 2 309 1 217 1 327 4 111 1 302 5 315 1 84 1 335 1 367 2 136 3 200 2 10 1 137 5 266 1 
103 1 302 1 111 1 129 1 367 1 217 1 200 1 136 1 209 1 327 1 137 1 
29 2 355 1 175 1 373 1 298 1 57 2 129 1 170 1 327 1 44 1 164 1 111 1 302 1 367 1 136 1 200 1 137 1 304 1 
97 1 29 2 355 1 175 1 373 2 105 1 298 1 57 2 129 1 309 1 170 1 327 1 212 1 44 1 126 1 164 2 302 1 367 2 136 3 200 1 137 1 11 1 304 2 
355 1 298 1 327 2 212 1 44 1 126 1 302 2 92 1 367 2 75 1 304 2 11 1 97 1 29 2 175 1 373 2 129 1 57 2 105 1 309 1 164 2 200 1 136 3 137 2 
224 2 327 3 70 1 71 1 230 1 212 1 126 1 302 3 367 1 75 1 304 1 341 1 156 1 129 1 309 1 130 2 34 1 176 1 111 1 113 1 136 4 200 1 137 3 
224 2 76 1 341 1 156 1 129 1 309 1 327 3 130 2 71 1 230 1 176 1 212 1 126 1 111 1 302 3 367 1 113 1 200 1 136 4 75 1 137 3 304 1 
302 1 129 1 200 1 327 1 137 1 337 1 
96 1 39 1 129 2 183 1 272 1 327 6 185 1 111 2 302 7 315 1 262 1 335 1 303 1 367 2 10 1 136 3 200 3 137 7 304 1 337 1 85 1 
352 6 167 1 248 1 355 1 139 1 65 1 140 2 298 1 170 1 327 1 69 1 4 1 330 2 44 2 302 1 367 1 9 2 191 1 369 3 254 1 304 1 193 2 338 1 29 2 173 4 102 2 307 3 175 1 373 1 129 1 57 2 216 2 31 1 32 1 107 1 15 2 109 1 164 1 135 2 315 1 220 1 348 1 136 1 200 1 165 1 137 1 221 1 
138 1 37 1 224 3 296 1 142 1 327 1 299 2 71 1 275 2 230 2 302 1 27 1 192 1 284 1 76 1 341 1 156 1 106 1 130 3 197 1 345 2 176 1 111 1 347 1 16 2 113 1 136 2 137 1 
96 1 235 1 156 1 129 1 327 2 302 2 315 1 367 1 136 2 200 2 137 2 304 1 337 1 
29 2 355 1 175 1 373 1 298 1 57 2 129 1 327 1 44 1 164 1 111 1 302 1 367 1 92 1 136 1 200 1 137 1 304 1 
96 1 129 1 309 1 327 1 185 1 302 1 262 1 303 1 367 1 136 1 200 2 137 1 304 1 
163 1 44 1 149 1 261 1 171 1 
97 1 138 1 224 2 54 1 105 1 104 1 289 1 171 2 130 2 71 1 176 1 163 2 44 1 149 1 261 2 113 1 60 1 11 1 306 1 
29 1 163 1 373 1 149 1 57 1 261 1 1 1 120 1 300 1 
149 1 289 1 306 1 
41 1 128 1 52 1 13 1 328 1 362 1 256 1 295 1 
52 3 323 1 342 2 13 1 271 1 210 1 196 1 328 4 362 2 41 2 311 1 368 1 256 4 295 1 
41 1 223 1 21 1 128 1 332 1 52 1 342 1 13 1 328 2 362 1 256 2 295 1 
128 1 52 1 356 1 13 1 271 2 210 2 328 3 362 1 41 1 368 1 295 1 256 3 
52 2 287 1 297 1 213 2 
365 1 128 1 13 1 328 1 256 1 295 1 
41 1 363 1 128 1 52 1 342 1 13 1 328 2 362 1 256 2 295 1 
115 1 
41 1 128 1 52 1 13 1 328 1 362 1 256 1 295 1 
41 1 52 1 209 1 362 1 
41 1 52 1 13 1 328 1 362 1 256 1 295 1 
354 1 318 1 328 1 
41 1 125 1 128 1 52 1 13 1 271 2 210 1 368 1 328 3 362 1 256 3 295 1 
41 1 276 1 52 1 342 1 13 1 328 2 362 1 256 2 295 1 
128 1 52 1 323 1 13 1 280 1 358 1 72 1 33 1 328 1 256 1 295 1 
41 1 128 1 52 1 13 1 328 1 256 1 295 1 
41 2 128 1 13 1 328 1 362 1 256 1 295 1 
41 1 187 1 372 1 128 1 52 1 30 1 13 2 328 2 256 2 295 2 
128 1 52 2 323 1 342 2 13 1 328 3 362 1 41 1 363 1 311 1 349 1 295 1 256 3 
128 1 52 1 58 1 342 1 13 1 358 2 123 1 328 2 72 1 362 1 41 1 110 1 280 1 295 1 256 2 
128 1 52 2 323 1 342 2 13 2 328 4 362 1 41 1 276 1 311 1 134 1 295 2 256 4 
128 1 52 1 342 1 13 1 271 1 328 3 362 1 41 1 363 1 295 1 256 3 
311 1 52 1 323 1 196 1 
41 1 52 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
120 1 150 3 338 9 206 2 207 2 208 1 363 1 82 1 273 6 212 1 88 2 324 9 14 5 277 1 252 4 354 2 136 2 21 1 305 1 355 1 204 2 71 1 374 1 118 1 264 1 99 1 186 2 149 1 
120 1 150 3 338 9 206 2 207 2 208 1 363 1 82 1 273 6 212 1 88 2 324 9 14 5 277 1 252 4 354 2 136 2 21 1 305 1 355 1 204 2 71 1 374 1 118 1 264 1 99 1 186 2 149 1 
120 1 150 4 338 10 206 2 207 2 208 1 363 1 82 1 273 7 212 1 88 2 324 10 14 6 277 1 252 5 354 2 136 2 21 1 305 1 355 1 204 2 71 1 374 1 118 1 264 1 99 1 186 2 149 1 
120 1 150 2 338 7 206 2 207 2 208 1 363 1 82 1 273 4 88 1 324 7 14 4 277 1 252 3 354 2 136 2 21 1 305 1 355 1 204 2 71 1 374 1 118 1 264 1 99 1 186 2 149 1 
120 1 150 1 252 2 206 1 338 4 207 1 354 1 208 1 136 1 21 1 273 3 212 1 88 2 374 1 324 4 14 3 186 1 149 1 
120 1 206 1 338 2 255 1 207 1 208 1 36 1 136 1 318 1 204 1 71 1 324 2 264 1 14 1 186 1 149 1 
120 1 150 1 252 1 206 2 338 3 208 1 273 1 355 1 204 1 324 3 14 2 186 2 149 1 
120 1 150 3 337 1 338 9 206 2 207 1 208 1 273 7 212 1 88 2 324 9 14 5 277 1 252 4 354 1 21 1 136 1 355 1 204 1 374 1 99 1 32 1 186 2 149 1 
120 1 150 3 337 1 338 9 206 2 207 1 208 1 273 7 212 1 88 2 324 9 14 5 277 1 252 4 354 1 21 1 136 1 355 1 204 1 374 1 99 1 32 1 186 2 149 1 
194 1 19 1 214 1 
194 1 11 1 367 2 
222 1 289 2 265 2 313 2 299 2 84 1 342 2 211 2 
272 1 153 1 84 1 342 2 211 2 192 1 57 1 39 2 13 2 63 1 65 1 299 3 43 1 46 1 349 2 351 1 222 1 135 1 161 2 282 1 330 1 47 1 205 1 98 1 230 1 49 1 357 1 289 3 142 1 234 1 265 2 145 1 75 1 313 2 236 1 165 2 377 1 
286 1 222 1 289 1 144 1 265 1 313 1 283 1 299 1 342 1 211 1 
270 1 19 1 259 1 68 1 6 1 156 1 194 1 109 1 245 1 289 1 265 1 144 1 30 1 299 1 
270 1 19 1 259 1 211 1 342 1 156 1 194 1 109 2 245 1 289 1 265 1 144 1 313 1 30 2 299 1 
109 1 79 1 124 1 30 1 237 1 
124 1 55 1 209 1 211 1 342 1 194 1 109 2 299 1 19 1 222 1 283 1 69 1 286 1 289 1 265 1 144 1 30 2 313 1 237 1 
109 1 30 1 237 1 
222 1 124 1 283 1 69 1 211 1 342 1 286 1 109 1 289 1 144 1 265 1 30 1 313 1 299 1 
194 1 
124 1 55 1 211 1 342 1 194 1 109 2 299 1 19 1 222 1 283 1 69 1 286 1 73 1 289 1 265 1 144 1 30 2 313 1 237 1 
239 2 271 1 54 1 124 2 242 1 55 1 56 1 342 1 211 1 59 1 109 5 194 2 157 1 130 1 249 1 299 1 251 2 134 1 19 2 280 4 222 1 283 1 69 1 96 1 227 2 286 1 373 2 289 1 376 1 144 1 265 1 313 1 30 5 164 1 237 2 336 2 314 5 269 2 
214 1 84 1 
202 1 211 1 342 1 84 2 323 1 289 2 265 2 313 1 299 2 
348 1 90 1 146 1 
46 1 349 1 161 1 153 1 84 1 192 1 57 1 39 1 289 1 63 1 142 1 234 1 74 1 65 1 299 1 236 1 
348 1 46 1 349 1 291 1 161 1 153 1 163 1 342 1 192 1 57 1 39 1 289 2 142 1 63 1 234 1 265 1 65 1 313 1 236 1 299 2 
301 1 291 1 126 1 68 1 163 2 342 4 211 1 84 1 231 1 323 1 289 5 265 5 313 4 299 5 
286 1 29 1 289 2 144 1 265 2 313 2 299 2 342 2 
289 3 265 3 313 3 299 3 211 1 84 1 163 1 342 3 
286 1 289 1 144 1 265 1 313 1 299 1 342 1 
323 1 202 1 289 1 144 1 265 1 313 1 299 1 342 1 211 1 
270 1 272 1 291 1 153 1 84 1 211 2 342 3 192 1 156 1 57 1 109 1 245 1 323 1 39 1 13 1 63 1 92 1 65 1 299 4 43 1 46 1 349 1 222 1 135 1 161 1 259 1 330 1 163 1 47 1 98 1 49 1 357 1 289 4 142 1 234 1 265 3 144 1 145 1 313 3 30 1 236 1 185 1 165 2 377 1 
231 1 289 2 265 2 68 1 313 1 299 2 84 1 342 1 163 1 
270 1 291 1 259 1 178 1 211 1 163 2 342 3 156 1 194 1 109 1 245 1 323 1 289 3 144 1 265 3 30 1 313 3 299 3 185 1 
348 1 163 1 211 1 342 2 323 1 289 2 265 2 146 1 313 2 299 2 
46 1 349 1 161 1 153 1 84 1 192 1 57 1 39 1 289 1 63 1 142 1 234 1 65 1 299 1 236 1 
349 1 161 1 153 1 24 1 84 1 192 1 141 1 39 1 289 1 63 1 142 1 234 1 65 1 299 1 236 1 
272 1 152 1 102 1 106 1 131 1 13 4 90 2 326 1 366 1 348 2 330 2 227 1 25 1 226 1 47 1 205 2 97 1 98 1 49 1 357 1 145 1 146 2 165 2 269 1 
270 1 29 1 289 1 144 1 265 1 313 1 299 1 342 1 
196 1 132 1 
196 1 132 1 
312 1 278 1 
312 1 278 1 
312 1 278 1 
196 1 362 1 132 1 
196 1 362 1 132 1 
196 1 361 1 132 1 
190 1 0 1 196 2 312 1 132 2 278 1 
196 1 362 1 132 1 
196 1 80 1 132 1 
196 1 80 1 132 1 
196 1 80 1 132 1 
2 1 361 1 317 1 155 1 84 1 342 2 60 1 109 1 196 1 132 1 299 2 329 1 350 1 26 1 332 1 306 1 72 1 309 1 289 2 359 1 265 2 313 2 30 1 76 1 
0 1 329 3 221 2 177 1 191 1 4 1 162 1 26 2 332 1 194 1 72 2 109 2 346 1 172 1 196 2 309 2 359 2 132 2 30 2 
207 1 354 1 136 1 
207 1 136 1 36 1 
107 1 322 1 207 3 354 2 36 1 319 1 
322 1 207 2 354 1 36 1 64 1 319 1 
322 1 207 2 354 1 36 1 319 2 
360 1 2 1 124 4 3 1 55 1 155 1 59 1 109 5 194 2 11 1 131 1 298 2 367 3 251 1 19 1 350 1 175 1 280 3 179 1 227 1 226 1 229 1 138 2 307 1 373 1 180 2 30 5 314 2 336 1 237 1 268 1 269 1 
79 1 124 2 169 1 341 1 211 1 342 1 109 2 194 1 325 1 299 1 19 1 222 1 283 1 69 1 286 1 289 1 144 1 265 1 30 2 313 1 237 1 
360 1 124 2 3 1 194 3 109 3 11 2 131 1 298 2 367 4 251 1 19 1 350 1 175 1 280 3 96 1 227 1 226 1 138 1 307 1 373 1 180 2 30 3 336 1 268 1 314 2 269 1 
360 1 122 1 124 3 3 2 194 4 109 4 11 3 131 2 298 4 367 7 251 1 19 1 350 2 175 1 280 5 96 1 227 2 226 2 138 2 307 1 373 1 180 4 310 1 30 4 336 1 268 1 314 4 166 1 269 2 
258 1 214 1 234 1 
234 1 147 1 
10 1 
153 1 234 1 192 1 
371 1 234 1 
153 1 234 1 
176 1 258 2 153 1 51 1 234 3 192 1 
102 3 281 1 242 1 330 3 227 1 5 1 110 1 38 1 205 4 181 2 129 1 157 1 376 1 13 7 233 1 326 2 269 1 
102 3 281 1 242 1 330 3 227 1 5 1 110 1 38 1 205 4 181 2 129 1 157 1 376 1 13 7 233 1 326 2 269 1 
102 3 281 1 242 1 330 3 227 1 5 1 110 1 38 1 205 4 181 2 129 1 157 1 376 1 13 7 233 1 326 2 42 1 269 1 
189 1 241 1 102 10 3 3 242 2 105 1 5 5 37 1 293 1 38 2 110 2 129 1 157 1 131 3 13 31 326 5 17 3 281 1 330 15 226 3 227 4 47 1 261 1 205 16 140 1 181 3 49 1 357 1 233 1 376 2 145 1 165 2 33 4 269 4 
102 4 242 1 5 1 9 1 37 1 38 1 110 1 276 1 157 1 13 9 326 3 281 1 330 4 227 1 47 2 205 5 181 2 49 2 357 2 233 1 376 1 145 2 165 4 269 1 
120 1 338 2 206 1 123 1 207 2 208 1 36 1 273 1 107 1 246 1 213 1 39 1 324 2 63 1 14 1 349 1 352 1 354 1 161 1 136 1 228 1 356 1 204 1 308 1 50 1 142 1 143 1 52 1 186 1 149 1 
120 1 101 1 338 3 206 1 123 1 207 2 208 1 36 1 273 2 107 1 213 1 39 1 324 3 63 1 14 1 133 1 349 1 352 1 354 1 161 1 136 1 356 1 204 1 308 1 50 1 142 1 143 1 52 1 186 1 100 1 
120 1 101 1 338 2 207 2 208 1 36 1 273 2 107 1 213 1 39 1 324 2 63 1 14 1 133 1 349 1 161 1 354 1 136 1 204 1 356 1 308 1 50 1 142 1 143 1 52 1 
338 1 206 1 339 1 153 1 320 1 61 1 39 1 296 1 324 1 63 1 65 1 199 1 349 1 302 1 161 1 356 2 204 2 142 1 52 2 143 2 234 1 186 1 100 1 
101 1 338 1 206 1 123 1 207 2 36 1 107 1 246 1 213 1 39 1 324 1 63 1 349 1 352 1 354 1 161 1 136 1 356 1 204 1 308 1 50 1 142 1 143 1 52 1 186 1 149 1 
328 1 
188 1 153 1 55 2 6 1 156 1 108 1 58 2 59 1 194 1 109 4 11 2 295 2 245 1 63 1 65 2 199 1 299 1 251 1 253 1 349 2 201 2 256 1 161 2 259 1 68 1 28 1 265 1 30 4 314 2 268 1 267 1 270 1 77 1 316 1 86 1 85 1 320 1 275 3 39 2 216 1 367 2 280 2 223 1 95 1 284 1 373 1 139 1 289 1 142 1 234 1 334 1 144 1 237 4 336 1 
270 1 188 1 316 1 223 1 259 1 68 1 6 1 156 1 275 2 109 2 139 1 245 1 289 1 144 1 334 1 265 1 30 2 299 1 237 1 267 1 
270 1 188 1 77 1 316 1 55 1 156 1 6 1 275 3 109 3 194 1 245 1 299 1 19 1 259 1 68 1 139 1 73 1 289 1 265 1 334 1 144 1 30 3 237 1 267 1 
270 1 188 1 316 1 223 1 259 1 68 1 6 1 156 1 108 1 275 2 109 2 139 1 245 1 289 1 144 1 334 1 265 1 30 2 299 1 237 1 267 1 
270 1 77 1 188 1 316 1 103 1 55 1 342 1 211 1 6 1 156 1 275 3 108 1 194 1 109 3 245 1 299 2 19 1 222 1 223 1 259 1 283 1 68 1 69 1 286 1 139 1 73 1 289 2 265 2 334 1 144 2 313 1 30 3 267 1 237 2 
188 1 55 1 156 1 6 1 59 1 58 2 108 1 109 3 194 2 11 2 245 1 295 2 299 1 251 1 19 1 201 2 256 1 259 1 68 1 28 1 265 1 30 3 267 1 314 1 270 1 77 1 316 1 275 3 216 1 367 2 280 1 223 1 95 1 373 1 139 1 289 1 144 1 334 1 336 1 237 2 
270 1 167 1 77 2 188 1 316 1 55 2 156 1 6 1 108 2 58 2 275 4 59 1 194 1 109 4 11 2 295 2 245 1 216 2 299 1 251 1 19 1 93 1 201 2 280 1 223 2 256 1 259 1 95 1 68 1 139 1 373 1 289 1 265 1 334 1 144 1 30 4 31 1 237 4 314 1 267 1 336 1 
188 1 55 2 342 1 6 1 156 1 59 1 58 2 108 2 109 4 194 1 11 2 245 1 295 2 299 2 251 1 19 1 201 2 256 1 259 1 68 1 69 1 265 2 313 1 31 1 30 4 267 1 314 1 167 1 270 1 77 2 316 1 211 1 275 4 216 2 93 1 280 1 222 1 223 2 283 1 95 1 286 1 373 1 139 1 289 2 144 2 334 1 336 1 237 4 
188 1 55 2 342 1 6 1 156 1 59 1 58 2 108 2 109 4 194 1 245 1 295 2 62 1 299 2 251 1 250 2 19 1 256 1 259 1 68 1 69 1 265 2 313 1 30 4 267 1 314 1 270 1 77 2 34 1 316 1 211 1 275 4 367 2 93 1 94 1 280 1 222 1 223 2 283 1 331 2 286 1 373 1 139 1 289 2 144 2 334 1 336 1 237 4 
290 1 188 1 55 2 342 1 6 1 156 1 108 3 59 1 58 2 109 4 194 1 11 2 245 1 295 2 299 2 251 1 19 1 201 2 256 1 259 1 68 1 69 1 265 2 313 1 31 1 30 4 267 1 314 1 167 1 270 1 77 2 316 1 211 1 275 4 216 2 93 1 280 1 222 1 223 3 283 1 95 1 286 1 139 1 373 1 289 2 144 2 334 1 237 5 336 1 
290 1 188 1 55 2 342 1 6 1 156 1 108 3 59 1 58 2 109 4 194 1 11 2 245 1 295 2 299 2 251 1 19 1 201 2 256 1 259 1 68 1 69 1 265 2 313 1 31 1 30 4 267 1 314 1 270 1 167 1 77 3 316 1 211 1 275 5 216 2 93 1 280 1 222 1 223 3 283 1 95 1 286 1 139 1 373 1 289 2 144 2 334 1 237 5 336 1 
188 1 55 2 342 1 156 1 6 1 59 1 58 2 108 2 109 4 194 1 245 1 295 2 62 1 299 2 251 1 250 2 19 1 256 1 259 1 68 1 69 1 28 1 265 2 313 1 30 4 267 1 314 1 270 1 77 2 316 1 211 1 275 4 367 2 280 1 222 1 223 2 283 1 331 2 286 1 373 1 139 1 289 2 144 2 334 1 336 1 237 4 
272 1 102 2 242 1 84 2 157 1 214 1 13 6 90 1 326 2 348 1 281 1 330 3 25 1 227 1 47 1 205 3 98 1 181 1 49 1 357 1 233 1 376 1 146 1 145 1 165 2 269 1 
272 2 102 2 3 2 105 1 84 1 170 1 5 1 321 1 293 1 195 1 131 1 297 1 13 14 90 11 326 1 160 1 17 3 348 11 135 1 282 1 330 6 226 2 227 1 47 2 205 8 98 1 49 2 357 2 145 2 146 4 165 4 33 3 269 2 
272 1 291 1 153 1 84 1 342 1 364 1 192 1 57 1 39 1 63 1 41 1 13 2 65 1 248 1 160 1 299 2 46 1 349 1 161 1 135 1 330 1 282 1 163 1 47 1 205 1 98 1 49 1 357 1 289 2 142 1 234 1 74 1 265 1 146 1 313 1 145 1 236 1 165 2 
101 1 291 1 102 8 153 2 3 2 242 1 342 1 192 2 5 4 57 2 157 1 13 20 63 2 65 1 299 3 160 1 348 7 349 3 113 2 161 3 70 1 163 1 205 10 357 3 265 1 313 1 165 6 269 3 315 2 272 3 84 2 39 3 131 2 90 7 326 4 217 2 46 2 135 1 281 1 224 2 282 1 330 10 227 3 226 2 47 3 287 1 98 3 181 1 49 3 289 3 376 1 233 1 142 2 234 2 235 1 145 3 146 7 236 2 377 2 
101 1 272 2 340 1 153 2 243 1 342 1 320 1 244 1 345 1 39 8 247 1 63 2 13 2 65 2 199 1 299 1 349 8 161 7 135 1 282 1 330 1 163 1 25 1 228 1 47 2 48 1 205 1 98 2 288 1 49 2 289 1 357 2 142 2 265 1 234 3 313 1 145 2 75 2 165 4 
272 1 102 1 3 1 342 1 211 1 323 1 131 1 90 1 13 3 326 1 160 1 299 1 348 1 330 2 226 1 227 1 47 1 205 1 98 1 49 1 183 1 357 1 289 1 265 1 146 1 145 1 313 1 165 2 269 1 
348 1 272 1 152 1 102 1 5 1 25 1 226 1 47 1 205 2 98 1 49 1 357 1 90 1 13 2 146 1 145 1 165 2 269 1 
348 1 272 1 102 1 330 2 25 1 106 1 227 1 47 1 98 1 49 1 131 1 357 1 90 1 13 2 326 1 146 1 145 1 165 2 
272 1 102 2 3 1 5 1 131 1 13 4 90 2 326 1 348 2 330 2 226 1 25 1 227 1 47 1 205 2 98 1 49 1 357 1 145 1 146 2 165 2 269 1 
348 1 272 1 152 1 102 1 5 1 226 1 47 1 205 2 98 1 49 1 247 1 357 1 90 1 13 2 146 1 145 1 165 2 269 1 
348 1 272 1 102 1 330 2 106 1 227 1 47 1 98 1 49 1 247 1 131 1 357 1 90 1 13 2 326 1 146 1 145 1 165 2 
272 1 102 2 3 1 5 1 247 1 131 1 13 4 90 2 326 1 348 2 330 2 226 1 227 1 47 1 205 2 98 1 49 1 357 1 145 1 146 2 165 2 269 1 
348 2 272 1 102 2 3 1 330 2 227 1 5 1 226 1 47 1 205 2 98 1 49 1 131 1 357 1 90 2 13 4 326 1 146 2 145 1 165 2 269 1 
272 1 153 1 84 1 192 1 57 1 39 1 13 2 63 1 65 1 299 1 46 1 349 1 161 1 135 1 282 1 330 1 47 1 205 1 98 1 49 1 289 1 357 1 142 1 234 1 145 1 236 1 377 1 165 2 
272 1 153 1 84 1 192 1 39 1 13 2 63 1 215 1 65 1 299 1 349 1 161 1 135 1 282 1 24 1 330 1 47 1 205 1 98 1 141 1 49 1 289 1 357 1 142 1 234 1 145 1 236 1 165 2 
272 1 102 2 3 1 5 1 131 1 13 4 90 2 326 1 160 1 348 2 330 2 226 1 227 1 47 1 205 2 98 1 49 1 357 1 145 1 146 2 165 2 269 1 
272 1 102 2 153 1 3 1 5 1 192 1 57 1 39 1 131 1 90 2 13 4 63 1 326 1 299 1 348 2 46 1 349 1 161 1 224 1 330 2 227 1 226 1 228 1 47 1 205 2 98 1 49 1 289 1 357 1 142 1 234 1 146 2 145 1 236 1 377 1 165 2 269 1 
272 1 102 1 3 1 342 1 211 1 5 1 323 1 131 1 13 3 90 1 160 1 299 1 348 1 330 1 227 1 226 1 47 1 205 2 98 1 49 1 357 1 289 1 265 1 335 1 145 1 313 1 146 1 165 2 269 1 
240 1 151 1 102 8 3 4 242 1 292 1 105 3 5 4 293 1 347 1 157 1 13 41 158 1 159 1 17 3 18 1 353 2 114 1 205 20 357 3 165 6 269 5 33 4 35 1 210 1 37 1 276 1 131 4 326 4 281 1 372 1 330 21 225 1 227 5 226 4 47 3 181 1 49 3 184 1 233 1 376 1 145 3 148 4 
240 1 151 1 35 1 102 7 3 4 242 1 292 1 105 3 210 1 5 3 37 2 293 1 276 1 157 1 347 1 131 3 13 38 158 1 326 4 159 1 17 3 18 1 353 2 281 1 114 1 372 1 225 1 330 18 226 4 227 4 47 4 205 20 181 1 49 4 184 1 357 4 376 1 233 1 145 4 165 8 148 4 33 4 269 5 
240 1 151 1 35 1 102 14 3 7 242 1 292 1 105 2 210 1 5 7 37 1 293 2 195 2 276 1 157 1 347 1 131 7 13 52 158 1 326 7 159 1 17 4 353 1 281 1 114 1 225 1 330 25 226 7 227 8 47 2 205 27 181 1 49 2 184 1 357 2 376 1 233 1 145 2 165 4 148 4 33 4 269 8 
78 1 151 1 35 1 102 6 3 3 105 1 5 3 293 1 276 1 131 3 13 19 158 1 326 3 159 1 17 1 18 1 353 1 330 10 226 3 227 3 47 2 205 9 49 2 184 2 357 2 145 2 165 4 148 2 33 2 269 3 
240 1 151 1 102 4 35 2 3 3 292 1 105 2 210 1 5 2 37 2 276 1 347 1 131 2 13 26 158 1 326 2 159 1 17 2 353 2 114 1 225 1 330 12 227 2 226 3 47 3 205 14 49 3 184 1 357 3 145 3 165 6 148 4 33 2 269 3 
26 1 72 1 0 1 196 1 309 1 359 1 132 1 4 1 162 1 193 1 
60 1 361 1 
26 1 365 1 72 1 232 1 196 1 309 1 359 1 311 1 132 1 
294 1 362 1 
190 1 80 1 370 1 
0 1 329 2 221 1 191 1 4 1 162 1 332 1 26 1 194 1 109 1 72 1 346 1 172 1 196 1 309 1 359 1 30 1 132 1 
0 1 329 2 221 1 191 1 4 1 162 1 332 1 26 1 194 1 109 1 72 1 346 1 172 1 196 1 309 1 359 1 30 1 132 1 
0 1 329 2 221 1 191 1 4 1 162 1 332 1 26 1 194 1 109 1 72 1 346 1 172 1 196 1 309 1 359 1 30 1 132 1 
190 1 294 1 362 1 
190 1 294 1 362 1 
80 1 370 1 
190 1 80 1 370 1 
306 1 317 1 
124 1 2 1 361 1 317 1 191 1 155 1 84 1 342 2 60 1 109 1 196 1 132 1 299 2 219 1 221 1 329 1 350 1 26 1 306 1 72 1 289 2 309 1 359 1 265 2 30 1 313 2 76 1 
272 1 153 1 274 1 39 2 89 1 63 1 13 2 197 1 160 1 299 2 200 1 349 2 135 1 161 2 282 1 330 1 260 1 47 1 48 1 205 1 98 1 288 1 49 1 289 2 357 1 142 1 234 1 265 2 145 1 75 2 165 2 
101 1 349 2 352 1 207 2 354 1 161 2 136 1 36 1 115 1 107 1 228 1 344 1 308 1 39 2 182 1 50 1 142 1 63 1 143 1 
101 1 349 1 352 1 207 2 354 1 161 1 136 1 36 1 107 1 308 1 39 1 182 1 50 1 358 1 63 1 142 1 143 1 
349 1 302 1 161 1 153 1 320 1 344 1 39 1 262 1 142 1 63 1 234 1 143 1 65 1 199 1 
101 1 349 1 352 1 207 2 354 1 161 1 136 1 36 1 115 1 107 1 344 1 308 1 39 1 182 1 50 1 142 1 63 1 143 1 
81 1 
194 1 54 1 271 1 19 1 280 1 214 1 314 1 
55 1 59 1 194 2 109 1 11 1 216 1 367 1 251 1 19 1 201 1 280 1 95 1 373 1 30 1 314 1 336 1 237 1 
53 1 239 1 153 1 3 1 55 1 154 1 192 1 59 2 109 2 194 3 11 3 245 1 63 1 65 1 298 3 251 2 349 1 161 1 258 1 22 1 304 1 30 2 268 1 314 3 269 1 87 1 128 1 39 1 131 1 367 6 217 1 368 1 280 4 176 1 226 1 227 1 373 2 180 3 142 2 234 4 147 2 336 2 237 2 
240 1 239 2 3 2 292 1 55 1 105 1 342 1 59 2 194 5 109 1 11 3 12 1 347 1 298 5 299 1 17 1 251 2 253 1 19 2 114 1 69 1 265 1 313 1 30 1 164 1 314 5 268 1 269 2 33 1 210 1 211 1 127 1 131 2 367 6 280 8 222 1 283 1 227 2 226 2 286 1 373 2 180 5 289 1 144 1 336 2 237 1 
167 1 239 2 242 1 211 1 342 1 59 1 109 1 157 1 249 1 299 1 251 1 280 2 222 1 283 1 69 1 227 1 286 1 373 1 289 1 376 1 144 1 265 1 30 1 313 1 164 1 336 1 314 2 269 2 
251 1 271 1 54 1 19 1 280 1 59 1 194 1 373 1 336 1 314 1 
217 1 239 2 280 5 3 2 226 2 227 2 194 5 11 5 180 5 131 2 298 5 164 1 367 10 314 5 269 2 
19 1 222 1 55 1 283 1 69 1 342 1 211 1 286 1 109 1 194 1 289 1 144 1 265 1 313 1 30 1 299 1 237 1 
153 2 55 1 192 1 86 1 320 1 59 1 109 2 111 1 39 2 63 2 65 2 198 1 199 1 16 1 251 2 349 2 253 1 280 1 161 2 23 1 284 1 96 1 285 1 373 2 142 3 234 2 30 2 336 2 268 1 237 2 314 1 
272 1 153 1 84 1 342 2 211 2 192 1 57 1 39 1 13 1 63 1 65 1 299 3 43 1 46 1 349 1 222 1 135 1 161 1 330 1 47 1 98 1 49 1 357 1 289 3 142 1 265 2 234 1 145 1 313 2 236 1 165 2 377 1 
251 1 19 2 253 1 280 1 59 1 194 4 11 2 373 1 181 1 180 2 298 2 367 4 314 2 336 1 268 1 
309 1 359 1 266 1 
309 1 359 1 266 1 
317 1 309 1 359 1 327 1 162 1 
309 1 359 1 266 1 
263 1 309 1 359 1 
263 1 309 1 359 1 
263 1 309 1 359 1 
309 1 359 1 
196 1 132 1 
102 2 242 1 105 1 276 1 347 1 157 1 13 8 326 2 17 1 281 1 330 4 227 1 47 1 205 4 181 1 49 1 357 1 233 1 376 1 145 1 165 2 269 1 33 1 
102 3 3 1 242 1 105 1 5 1 293 1 276 1 157 1 347 1 13 11 326 2 17 1 281 1 116 1 330 5 227 1 226 1 47 2 205 6 181 1 49 2 357 2 376 1 233 1 145 2 165 4 33 2 269 2 
240 1 102 4 3 2 242 1 292 1 105 1 210 1 5 1 37 1 276 1 157 1 347 1 131 2 13 19 326 3 17 1 281 1 114 1 116 1 330 10 226 2 227 3 47 3 205 9 181 1 49 3 357 3 376 1 233 1 145 3 165 6 33 1 269 3 
240 1 102 5 3 2 242 1 292 1 105 1 210 1 5 2 37 1 276 1 157 1 347 1 131 1 13 17 326 3 17 1 281 1 114 1 116 1 330 7 226 2 227 2 47 3 205 10 181 1 49 3 357 3 376 1 233 1 145 3 165 6 33 1 269 3 
102 2 242 1 105 1 276 1 347 1 157 1 13 8 326 2 17 1 281 1 330 4 227 1 47 1 205 4 181 1 49 1 357 1 233 1 376 1 145 1 165 2 269 1 33 1 
240 1 102 2 3 2 292 1 105 1 210 1 5 1 276 1 347 1 131 2 13 12 326 1 17 1 114 1 330 6 226 2 227 2 47 1 205 6 49 1 357 1 145 1 165 2 33 1 269 2 
240 1 102 5 3 2 242 1 292 1 105 1 210 1 5 2 37 2 276 1 157 1 347 1 131 1 13 18 326 3 17 1 281 1 114 1 116 1 330 8 226 2 227 2 47 4 205 10 181 1 49 4 357 4 376 1 233 1 145 4 165 8 33 1 269 3 
240 1 102 6 3 3 292 1 105 1 210 1 5 3 37 2 276 1 347 1 131 2 13 16 326 3 17 1 18 1 114 1 330 7 226 3 227 2 47 4 205 9 49 4 357 4 145 4 165 8 33 1 269 3 
102 6 281 2 242 3 330 4 227 1 5 3 205 3 157 1 13 7 233 1 376 3 326 3 269 1 
240 1 102 4 3 2 242 1 292 1 105 1 210 1 5 1 37 2 276 1 157 1 347 1 131 1 13 18 326 3 17 1 18 1 281 1 114 1 330 8 226 2 227 2 47 4 205 10 181 1 49 4 357 4 376 1 233 1 145 4 165 8 33 1 269 3 
102 3 281 1 242 1 330 4 227 1 5 1 47 2 37 1 205 4 181 1 49 2 157 1 357 2 13 8 233 1 376 1 326 2 145 2 165 4 269 1 
205 3 181 1 157 1 102 2 281 1 13 6 376 1 242 1 233 1 214 1 326 2 330 3 227 1 269 1 
102 2 3 1 116 1 330 2 227 1 226 1 5 1 47 1 205 2 49 1 131 1 357 1 13 4 326 1 145 1 165 2 269 1 
17 1 102 2 3 1 105 1 330 4 227 1 226 1 5 1 293 1 205 3 131 1 13 7 326 1 33 2 269 1 
102 9 3 2 242 2 170 1 5 4 37 2 293 1 195 1 157 1 131 2 13 23 326 5 44 1 17 2 281 1 330 12 226 2 227 3 47 2 205 11 181 1 49 2 357 2 376 2 233 1 145 2 165 4 269 3 33 2 
13 1 330 1 33 1 
17 1 205 1 13 1 
217 1 102 3 3 1 116 1 330 3 226 1 5 1 227 1 47 1 205 3 49 1 131 1 357 1 13 6 326 2 145 1 165 2 269 1 
240 1 102 2 3 2 292 1 105 1 210 1 5 1 276 1 347 1 131 2 13 12 326 1 17 1 114 1 330 6 226 2 227 2 47 1 205 6 49 1 357 1 145 1 165 2 33 1 269 2 
102 2 242 1 330 3 227 1 5 1 205 3 157 1 13 6 376 1 326 1 269 1 
102 2 281 1 242 1 330 2 5 1 37 1 47 1 205 1 49 1 357 1 376 1 13 3 233 1 326 1 145 1 44 1 165 2 
102 5 242 2 330 5 5 2 227 2 47 1 205 5 49 1 276 1 157 1 357 1 376 2 13 10 326 3 145 1 249 1 165 2 269 2 
102 1 226 1 5 1 47 1 205 2 276 1 49 1 357 1 13 2 145 1 165 2 269 1 
102 2 3 1 330 2 227 1 226 1 5 1 47 1 205 2 276 1 49 1 131 1 357 1 13 4 326 1 145 1 165 2 269 1 
18 1 102 2 242 1 330 2 5 1 37 1 47 3 205 1 276 1 49 3 357 3 13 3 376 1 326 1 145 3 44 1 165 6 
189 1 241 1 102 12 3 3 242 3 105 1 5 5 37 2 293 1 276 1 157 2 131 3 13 34 326 7 44 1 17 3 18 1 281 1 116 1 330 18 226 3 227 5 47 5 261 1 205 16 181 1 49 5 357 5 376 3 233 1 145 5 165 10 33 4 269 5 
254 1 231 1 289 1 265 1 68 1 299 1 84 1 
218 1 45 1 333 1 254 1 231 1 257 1 289 1 265 1 68 1 299 1 83 1 84 1 
320 1 349 1 39 1 161 1 153 1 142 1 63 1 214 1 234 1 65 1 199 1 
349 1 161 1 153 1 84 1 163 1 342 1 192 1 57 1 39 1 289 2 142 1 63 1 234 1 265 1 65 1 313 1 236 1 299 2 
270 1 121 1 153 2 84 1 342 1 192 2 57 1 39 1 63 1 299 2 349 1 161 1 371 1 259 1 163 1 27 1 289 2 142 1 265 2 234 3 144 1 313 2 236 1 
270 1 121 1 153 2 84 1 342 1 192 2 39 2 63 1 299 2 349 2 161 2 371 1 259 1 163 1 141 1 27 1 375 1 289 2 142 1 265 2 234 3 144 1 313 2 236 1 
121 1 168 1 153 1 342 1 211 1 192 1 109 2 194 1 245 1 39 1 40 1 63 1 299 1 349 1 19 1 222 1 161 1 258 1 371 1 283 1 69 1 286 1 27 1 289 1 142 1 144 1 265 1 234 4 313 1 30 2 237 1 147 1 
121 1 153 1 154 1 342 1 211 1 192 1 109 2 194 1 245 1 39 1 63 1 299 1 349 1 19 1 222 1 161 1 258 1 371 1 283 1 69 1 286 1 27 1 289 1 142 1 144 1 265 1 234 4 313 1 30 2 237 1 147 1 
349 1 39 1 161 1 142 1 63 1 243 1 
101 1 349 7 176 1 161 6 340 1 153 2 243 1 192 1 228 1 244 1 285 1 48 1 345 1 111 1 39 7 63 2 142 3 234 3 65 2 75 1 187 1 
102 2 153 1 242 1 342 1 192 1 57 1 157 1 63 1 13 6 299 2 160 1 200 1 348 1 349 1 161 1 163 1 205 3 357 2 265 1 313 1 165 4 269 1 315 1 272 2 84 2 39 1 90 1 326 2 46 1 224 1 281 1 330 3 227 1 228 1 47 2 98 2 181 1 49 2 289 2 142 1 233 1 376 1 234 1 146 1 145 2 236 1 377 1 
239 2 54 1 242 1 55 1 154 1 342 1 59 2 109 3 194 2 245 1 157 1 65 1 249 1 299 1 16 1 251 2 349 1 19 2 161 1 258 1 22 1 304 1 69 1 265 1 30 3 313 1 164 1 314 5 269 2 271 1 124 1 211 1 87 1 39 1 280 4 222 1 283 1 227 2 286 1 373 2 289 1 376 1 144 1 234 2 237 2 147 1 336 2 
349 2 176 1 161 2 258 1 153 1 243 1 192 1 228 1 128 1 39 2 63 1 142 2 234 2 
279 1 349 4 161 4 153 1 228 1 320 1 39 4 375 1 142 1 63 1 234 1 65 1 199 1 
349 2 161 2 153 1 23 1 70 1 192 1 285 1 111 1 27 1 39 2 63 1 142 2 234 1 198 1 
349 1 207 1 50 1 39 1 161 1 136 1 36 1 142 1 63 1 65 1 
260 1 228 1 48 1 101 1 349 2 39 2 161 2 153 1 142 1 63 1 234 1 
279 1 349 5 161 4 153 2 340 1 320 1 228 1 345 1 48 1 27 1 39 5 63 2 142 2 234 3 65 1 199 1 
279 1 349 5 161 4 153 2 340 1 343 1 320 1 228 1 48 1 27 1 39 5 63 2 142 2 234 3 65 1 199 1 
349 1 161 1 153 1 84 1 163 1 342 1 192 1 141 1 39 1 289 2 142 1 63 1 234 1 265 1 65 1 313 1 236 1 299 2 
349 1 176 1 161 1 153 1 192 1 285 1 111 1 27 1 39 1 63 1 142 2 234 1 187 1 
1 1 174 1 104 1 84 1 238 1 
270 1 19 1 1 1 67 1 124 1 104 2 259 1 84 1 171 1 156 1 194 1 109 2 245 1 174 2 144 1 30 2 15 1 185 1 238 2 
1 1 289 1 89 1 104 1 265 1 197 1 299 1 274 1 238 1 
1 1 67 1 171 1 
120 1 208 1 214 1 14 1 
120 1 338 1 206 1 208 1 324 1 14 1 186 1 
204 1 338 1 52 1 
120 1 206 1 338 3 208 1 117 1 71 2 173 1 324 3 14 1 186 1 119 1 149 1 
120 1 88 1 338 2 206 1 208 1 324 2 14 1 273 1 186 1 
252 1 374 1 338 1 206 1 207 1 354 1 136 1 324 1 14 1 186 1 149 1 
338 1 206 1 208 1 324 1 14 1 186 1 149 1 
120 1 338 1 206 1 208 2 324 1 186 1 149 1 
369 1 206 2 338 2 66 1 208 1 137 1 324 2 14 1 186 2 149 1 
120 1 150 1 252 1 206 1 338 3 208 1 273 2 324 3 99 1 14 2 277 1 186 1 149 1 
120 1 206 1 338 2 207 2 354 1 208 1 36 1 136 1 303 1 273 1 107 1 324 2 14 1 186 1 149 1 
120 1 150 1 252 1 206 2 338 4 208 1 273 2 212 1 88 1 324 4 14 2 186 2 149 1 
120 1 338 1 206 1 208 1 324 1 14 1 186 1 149 1 
120 2 150 1 252 1 338 4 206 1 208 2 117 1 203 1 273 2 71 1 324 4 14 3 119 1 186 1 
120 1 206 1 338 2 208 1 273 1 8 1 324 2 14 1 112 1 32 1 186 1 149 1 
120 1 206 1 338 3 208 1 125 1 117 2 71 2 324 3 14 1 119 1 186 1 149 1 
220 2 20 1 14 2 300 1 
338 1 206 1 324 1 91 1 186 1 149 1 
120 1 338 2 206 1 208 1 324 2 14 1 277 1 273 1 186 1 149 1 
7 1 
120 1 338 1 206 1 208 1 324 1 14 1 186 1 149 1 
120 1 71 1 338 3 206 1 208 1 324 3 14 1 277 1 273 1 186 1 149 1 
150 1 252 1 14 1 203 1 
208 1 14 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 89 280 51 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 89 280 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
12 1 90 1 140 1 299 1 93 1 165 2 96 3 349 1 350 2 168 1 22 6 192 1 237 1 276 5 27 4 55 1 29 2 354 9 333 1 211 1 212 2 254 2 80 2 282 1 335 9 105 2 339 1 64 1 
12 1 90 1 140 1 299 1 93 1 165 2 96 3 349 1 350 2 168 1 22 6 192 1 237 1 276 5 27 4 55 1 354 9 333 1 29 2 211 1 212 2 254 2 80 2 282 1 335 9 105 2 339 1 64 1 
12 1 90 1 140 1 299 1 93 1 165 2 96 4 349 1 350 2 168 1 22 7 192 1 237 1 276 6 27 5 55 1 354 10 333 1 29 2 211 1 212 2 254 2 80 2 282 1 335 10 105 2 339 1 64 1 
12 1 90 1 140 1 93 1 165 2 96 2 349 1 350 2 168 1 22 4 192 1 237 1 276 4 27 3 55 1 354 7 333 1 29 1 211 1 212 2 254 2 80 2 282 1 335 7 105 2 339 1 64 1 
55 1 12 1 333 1 354 4 29 2 90 1 212 1 299 1 80 1 165 1 335 4 105 1 339 1 96 1 350 1 22 3 276 3 27 2 
333 1 354 2 90 1 211 1 212 1 254 1 93 1 230 1 165 1 335 2 2 1 105 1 339 1 350 1 23 1 276 1 
333 1 354 3 90 1 254 1 165 2 335 3 339 1 96 1 350 2 22 1 192 1 276 2 27 1 
12 1 90 1 299 1 165 2 96 3 349 1 350 2 22 7 192 1 276 5 27 4 55 1 354 9 333 1 29 2 212 1 254 1 255 1 80 1 335 9 105 1 339 1 35 1 64 1 
12 1 90 1 299 1 165 2 96 3 349 1 350 2 22 7 192 1 276 5 27 4 55 1 354 9 333 1 29 2 212 1 254 1 255 1 80 1 335 9 105 1 339 1 35 1 64 1 
304 1 258 1 37 1 
304 1 272 1 357 2 
54 2 273 2 120 1 127 2 275 2 74 1 347 2 199 2 
1 1 14 1 323 1 164 1 347 2 234 1 167 1 189 1 273 2 120 1 50 1 169 2 275 3 302 1 74 1 172 1 352 1 121 2 53 1 54 2 253 1 126 1 127 2 177 1 103 1 128 1 198 1 217 2 178 1 283 1 84 1 218 2 108 1 340 1 359 1 223 2 199 3 
54 1 20 1 273 1 120 1 127 1 11 1 275 1 203 1 347 1 199 1 
54 1 304 1 265 1 155 1 269 1 288 1 328 1 20 1 275 1 73 1 37 1 261 1 199 1 293 1 
54 1 304 1 265 1 127 1 347 1 269 1 288 2 328 1 273 1 20 1 275 1 73 2 37 1 199 1 293 1 
233 1 288 1 242 1 73 1 325 1 
304 1 233 1 57 1 288 2 73 2 37 1 117 1 325 1 
288 1 73 1 325 1 
54 1 127 1 203 1 347 1 233 1 288 1 20 1 273 1 120 1 11 1 275 1 73 1 331 1 199 1 
304 1 
304 1 233 1 288 2 133 1 73 2 37 1 117 1 325 1 
304 1 112 1 151 1 279 2 228 1 114 1 243 1 117 1 204 1 301 1 325 2 233 2 288 5 106 2 21 1 34 1 73 5 37 1 52 2 
258 1 74 1 
54 2 127 1 311 1 347 1 273 1 275 2 74 2 39 1 199 2 
252 1 194 1 346 1 
206 1 53 1 126 1 323 1 177 1 103 1 164 1 128 1 217 1 50 1 218 1 275 1 74 1 172 1 223 1 199 1 
53 1 54 1 126 1 323 1 127 1 177 1 164 1 103 1 334 1 298 1 128 1 346 1 217 1 273 1 50 1 218 1 275 2 172 1 223 1 199 2 
54 5 166 1 124 1 273 4 127 4 275 5 356 1 334 1 311 1 298 2 261 1 74 1 347 1 199 5 
54 2 248 1 20 1 273 2 127 2 275 2 203 1 199 2 
54 3 273 3 127 3 275 3 298 1 74 1 347 1 199 3 
54 1 20 1 273 1 127 1 275 1 203 1 199 1 
54 1 20 1 273 1 127 1 275 1 311 1 347 1 39 1 199 1 
1 1 265 1 14 1 323 1 164 1 298 1 347 2 269 1 234 1 167 1 328 1 189 1 273 3 20 1 120 1 50 1 169 2 275 4 99 1 73 1 74 1 172 1 352 1 121 1 53 1 54 3 28 1 253 1 126 1 127 3 177 1 103 1 311 1 334 1 128 1 198 1 217 1 283 1 288 1 84 1 218 1 223 1 199 4 293 1 
54 2 166 1 273 1 127 1 275 2 298 1 261 1 74 1 199 2 
54 3 304 1 28 1 265 1 127 3 311 1 334 1 298 2 347 1 269 1 288 1 328 1 20 1 273 3 188 1 275 3 73 1 199 3 293 1 
54 2 194 1 127 2 298 1 311 1 346 1 347 1 273 2 275 2 199 2 
53 1 126 1 323 1 177 1 103 1 164 1 128 1 217 1 50 1 218 1 275 1 74 1 172 1 223 1 199 1 
53 1 278 1 126 1 323 1 177 1 164 1 128 1 217 1 70 1 50 1 218 1 275 1 74 1 223 1 199 1 
262 1 87 1 113 1 1 1 43 1 14 1 346 2 143 1 48 1 234 1 49 1 167 1 189 1 169 2 352 1 121 4 252 2 194 2 9 1 308 1 214 1 178 2 130 1 84 2 
54 1 248 1 20 1 273 1 127 1 275 1 293 1 199 1 
45 1 336 1 
45 1 336 1 
210 1 47 1 
210 1 47 1 
210 1 47 1 
45 1 154 1 336 1 
45 1 154 1 336 1 
45 1 342 1 336 1 
210 1 45 2 47 1 134 1 241 1 336 2 
45 1 154 1 336 1 
79 1 45 1 336 1 
79 1 45 1 336 1 
79 1 45 1 336 1 
89 1 288 1 95 1 45 1 51 1 73 1 280 1 330 1 336 1 
89 1 95 1 45 1 280 1 330 1 336 1 
105 1 212 1 80 1 
105 1 212 1 230 1 
5 1 322 1 62 1 212 3 80 2 230 1 
5 1 322 1 212 2 80 1 230 1 25 1 
5 1 322 2 212 2 80 1 230 1 
262 1 111 1 112 3 143 1 117 1 232 1 325 1 233 4 271 1 272 1 49 1 19 1 21 1 73 5 191 2 239 1 277 1 122 1 52 1 304 2 8 1 193 1 101 1 279 1 308 1 357 3 243 2 288 5 106 1 37 1 159 2 320 2 
262 3 344 1 227 1 112 8 139 1 143 3 117 1 204 1 232 1 325 6 327 1 233 7 271 2 272 3 49 3 19 2 21 1 73 9 191 6 277 4 52 2 304 5 8 3 279 2 308 3 242 5 357 9 243 6 285 1 288 9 181 1 106 2 37 1 160 5 320 6 
262 1 111 1 112 3 143 1 204 1 233 2 271 1 272 2 49 1 19 1 73 3 191 2 239 1 277 1 52 1 304 3 8 1 279 1 308 1 357 4 243 2 288 3 106 1 37 1 159 1 320 2 
262 2 344 1 111 1 112 5 139 1 143 2 204 1 327 1 233 3 271 1 272 3 49 2 19 1 73 4 191 4 239 1 277 2 52 1 304 4 8 2 279 1 308 2 357 7 243 4 288 4 106 1 37 1 159 2 320 4 
258 1 128 1 281 1 
63 1 128 1 
142 1 
53 1 164 1 128 1 
128 1 284 1 
164 1 128 1 
53 1 3 1 207 1 164 1 128 3 281 2 
77 1 43 3 138 1 214 2 16 1 143 1 178 4 144 2 145 1 337 1 348 1 49 1 84 3 170 1 100 1 222 1 121 7 
77 1 43 3 138 1 214 2 16 1 143 1 178 4 144 2 145 1 337 1 348 1 49 1 84 3 170 1 100 1 222 1 121 7 
77 1 43 3 138 1 266 1 214 2 16 1 143 1 178 4 144 2 145 1 337 1 348 1 49 1 84 3 170 1 100 1 222 1 121 7 
262 3 1 1 138 2 43 10 296 1 297 1 16 2 300 1 143 4 144 3 145 1 234 1 348 5 167 1 235 4 49 4 189 1 169 2 170 1 100 1 121 31 332 1 77 2 8 3 355 3 308 3 214 5 178 16 337 2 244 1 84 15 109 1 222 1 162 1 
1 2 138 1 43 4 16 1 143 1 186 1 144 2 145 1 234 2 348 1 49 1 167 2 189 2 169 4 170 1 205 1 121 9 77 1 214 3 178 5 337 1 84 4 109 1 222 1 
295 1 264 1 90 1 323 1 268 1 230 1 165 1 324 1 350 1 22 1 351 1 236 1 276 1 208 1 354 2 333 1 102 1 126 1 212 2 254 1 80 1 217 1 335 2 105 1 314 1 339 1 218 1 62 1 318 1 223 1 
90 1 323 1 68 1 268 1 230 1 165 1 324 1 146 1 350 1 22 2 351 1 236 1 276 1 208 1 354 3 102 1 126 1 212 2 254 1 80 1 217 1 335 3 105 1 314 1 339 1 62 1 218 1 318 1 223 1 161 1 
90 1 323 1 230 1 324 1 146 1 22 2 351 1 236 1 276 1 354 2 102 1 126 1 212 2 254 1 217 1 80 1 335 2 105 1 314 1 339 1 218 1 62 1 318 1 223 1 161 1 
323 1 115 1 164 1 68 1 165 1 50 1 350 1 351 2 72 1 236 2 240 1 251 1 354 1 59 1 126 1 254 2 128 1 217 1 335 1 314 2 132 1 218 1 223 1 
264 1 323 1 268 1 230 1 165 1 324 1 146 1 350 1 351 1 236 1 208 1 354 1 333 1 102 1 126 1 212 2 254 1 80 1 217 1 335 1 105 1 314 1 218 1 62 1 318 1 223 1 
123 1 
265 1 44 1 323 1 267 1 92 4 325 6 269 1 272 2 328 1 50 2 275 1 238 2 240 1 52 1 150 2 54 1 279 1 155 1 243 2 288 5 291 1 106 1 107 1 158 1 343 1 199 1 293 1 112 2 164 1 115 1 247 1 117 3 19 1 20 1 21 1 250 2 73 5 71 1 24 2 173 2 175 2 304 2 176 1 126 1 213 1 357 2 128 1 217 2 257 1 315 2 218 2 316 1 37 1 261 1 223 2 
265 1 92 2 117 1 325 2 269 1 328 1 20 1 275 1 71 1 73 3 250 1 54 1 155 1 288 3 133 1 316 1 107 1 261 1 158 1 199 1 343 1 293 1 
265 1 92 3 117 1 325 1 269 1 328 1 20 1 275 1 71 1 73 3 54 1 150 1 304 1 155 1 288 3 133 1 316 1 107 1 261 1 158 1 37 1 199 1 343 1 293 1 
265 1 92 3 117 1 325 2 269 1 328 1 20 1 275 1 71 1 73 3 250 1 238 1 54 1 150 1 304 1 155 1 288 3 133 1 316 1 107 1 261 1 158 1 37 1 199 1 343 1 293 1 
112 1 265 1 92 6 117 3 325 7 269 1 272 2 328 1 20 1 21 1 190 1 275 1 71 1 73 5 250 4 24 2 173 2 238 4 52 1 175 2 150 4 54 1 304 5 56 1 176 1 279 1 155 1 243 1 129 1 179 1 180 1 288 5 291 1 106 1 315 2 133 1 316 1 107 1 37 5 261 1 158 1 343 1 199 1 293 1 
265 1 92 4 325 4 269 1 272 2 328 1 275 1 238 2 52 1 54 1 150 2 279 1 155 1 243 1 288 4 106 1 291 1 107 1 158 1 293 1 199 1 343 1 112 1 117 2 20 1 21 1 73 4 71 1 250 2 24 2 173 2 175 2 304 2 176 1 357 2 257 1 315 2 316 1 261 1 37 1 
112 1 265 1 92 4 117 2 325 4 269 1 272 2 328 1 20 1 21 1 190 1 275 1 250 2 71 1 73 4 24 2 238 2 173 2 52 1 150 2 175 2 54 1 304 1 176 1 279 1 155 1 243 1 180 1 179 1 288 4 291 1 106 1 315 2 316 1 107 1 37 1 261 1 158 1 199 1 343 1 293 1 
112 1 265 1 92 4 117 2 325 4 269 1 272 2 328 1 20 1 21 1 190 1 275 1 250 2 71 1 73 4 24 2 238 2 173 2 52 1 150 2 175 2 54 1 304 1 176 1 279 1 155 1 243 1 180 1 179 1 288 4 291 1 106 1 315 2 316 1 107 1 37 1 261 1 158 1 199 1 343 1 293 1 
112 1 265 1 92 4 117 2 325 4 269 1 270 2 328 1 20 1 21 1 190 1 275 1 250 2 71 1 73 4 24 2 238 2 52 1 150 2 54 1 304 1 353 1 279 1 357 2 155 1 243 1 288 4 291 1 106 1 315 2 33 1 316 1 107 1 37 1 261 1 158 1 86 2 319 1 199 1 343 1 293 1 
112 1 265 1 92 5 117 2 325 5 269 1 272 2 328 1 20 1 21 1 190 1 275 1 71 1 73 4 250 3 24 2 173 2 238 3 52 1 175 2 54 1 150 3 304 1 176 1 279 1 155 1 243 1 129 1 179 1 180 1 288 4 291 1 106 1 315 2 316 1 107 1 37 1 261 1 158 1 199 1 343 1 293 1 
112 1 265 1 92 5 117 2 325 5 269 1 272 2 328 1 20 1 21 1 190 1 275 1 71 1 73 4 250 3 24 2 173 2 238 3 52 1 175 2 54 1 150 3 304 1 176 1 279 1 155 1 243 1 129 1 179 1 180 1 288 4 291 1 106 1 315 2 316 1 107 1 37 1 261 1 158 1 199 1 343 1 293 1 
265 1 92 4 325 4 269 1 270 2 328 1 275 1 238 2 52 1 54 1 150 2 279 1 155 1 243 1 288 4 106 1 291 1 107 1 158 1 293 1 199 1 343 1 112 1 117 2 20 1 21 1 73 4 71 1 250 2 24 2 304 1 357 2 257 1 33 1 315 2 316 1 261 1 37 1 86 2 
1 1 43 2 14 1 346 1 16 1 143 1 144 1 145 1 234 1 167 1 49 1 189 1 169 2 170 1 74 2 352 1 121 6 252 1 194 1 214 2 178 3 130 1 258 1 337 1 84 3 222 1 
65 1 262 1 201 1 1 2 43 2 321 1 296 1 14 1 346 11 143 2 231 1 348 1 234 2 235 3 167 2 49 1 189 2 169 4 74 1 352 2 121 14 252 11 8 2 194 4 355 3 308 2 214 1 178 8 283 1 84 6 38 1 340 1 162 1 
1 1 321 1 323 1 14 1 345 1 164 1 298 1 234 1 167 1 189 1 273 1 50 1 275 2 169 2 74 1 172 1 352 1 121 2 53 1 206 1 54 1 194 1 126 1 127 1 177 1 103 1 334 1 128 1 217 1 82 1 178 1 283 1 104 1 218 1 84 1 340 1 223 1 199 2 
262 2 1 3 321 1 43 8 323 2 143 3 144 1 145 1 146 1 234 3 49 3 273 1 189 3 50 1 275 3 54 1 53 2 8 2 194 7 334 1 103 2 153 2 197 2 283 1 337 1 290 1 338 2 340 1 292 2 199 3 14 3 15 1 298 1 164 2 16 1 346 7 348 4 167 3 169 6 170 1 74 2 172 2 352 3 121 20 252 7 253 2 126 2 127 1 177 2 308 2 214 4 128 2 217 3 81 1 178 10 84 10 218 3 222 1 223 3 
295 1 1 2 323 2 14 2 298 1 115 1 164 2 94 1 146 1 234 2 167 2 273 1 189 2 50 2 275 1 169 4 329 1 352 2 121 2 240 1 54 1 78 1 125 1 126 2 127 1 31 1 128 3 217 7 178 1 283 1 130 1 131 1 218 8 61 1 84 1 340 1 359 2 223 8 199 1 
262 1 1 1 43 1 321 1 14 1 141 1 346 1 347 1 143 1 234 1 167 1 49 1 273 1 189 1 169 2 275 1 352 1 121 3 54 1 252 1 8 1 194 1 127 1 308 1 311 1 214 1 178 1 84 2 199 1 
252 1 1 1 43 1 194 1 9 1 14 1 308 1 346 1 143 1 178 2 130 1 348 1 234 1 167 1 189 1 169 2 352 1 121 2 
262 1 252 1 1 1 113 1 43 1 194 1 14 1 214 1 346 1 130 1 234 1 167 1 49 1 189 1 84 2 169 2 352 1 121 2 
262 1 1 1 43 2 14 1 346 2 143 1 234 1 348 1 167 1 49 1 189 1 169 2 352 1 121 4 252 2 8 1 194 2 308 1 214 1 178 2 130 1 84 2 
252 1 1 1 43 1 194 1 9 1 14 1 308 1 346 1 143 1 178 2 348 1 234 1 167 1 189 1 61 1 169 2 352 1 121 2 
262 1 252 1 1 1 113 1 43 1 194 1 14 1 214 1 346 1 234 1 167 1 49 1 189 1 61 1 84 2 169 2 352 1 121 2 
262 1 1 1 43 2 14 1 346 2 143 1 234 1 348 1 167 1 49 1 189 1 169 2 352 1 121 4 252 2 8 1 194 2 308 1 214 1 178 2 61 1 84 2 
262 1 1 1 43 2 14 1 346 2 143 1 234 1 348 1 167 1 49 1 189 1 169 2 352 1 121 4 252 2 8 1 194 2 308 1 214 1 178 2 84 2 
1 1 323 1 14 1 164 1 234 1 167 1 189 1 50 1 275 1 169 2 74 1 172 1 352 1 121 2 53 1 253 1 126 1 177 1 103 1 128 1 217 1 178 1 283 1 218 1 84 1 340 1 223 1 199 1 
1 1 323 1 14 1 164 1 70 1 234 1 167 1 189 1 50 1 275 1 169 2 74 1 352 1 121 2 53 1 126 1 278 1 177 1 128 1 217 1 178 1 283 1 218 1 84 1 340 1 223 1 182 1 199 1 
262 1 1 1 321 1 43 2 14 1 346 2 143 1 234 1 348 1 167 1 49 1 189 1 169 2 352 1 121 4 252 2 8 1 194 2 308 1 214 1 178 2 84 2 
262 1 295 1 1 1 43 2 323 1 14 1 164 1 346 2 143 1 348 1 234 1 49 1 167 1 189 1 275 1 169 2 172 1 352 1 121 4 53 1 252 2 8 1 194 2 253 1 126 1 308 1 177 1 103 1 214 1 197 1 128 1 217 1 178 2 84 2 218 1 223 1 199 1 
262 1 1 1 43 1 321 1 14 1 346 1 347 1 143 1 348 1 234 1 49 1 167 1 273 1 189 1 169 2 275 1 352 1 121 3 54 1 252 1 8 1 194 1 127 1 60 1 308 1 311 1 178 2 84 1 199 1 
262 3 88 1 137 2 1 2 43 6 296 1 67 1 202 1 143 3 18 1 234 2 348 3 235 2 167 2 49 3 189 2 169 4 205 1 121 19 8 3 355 1 309 1 308 3 214 3 178 9 32 2 84 10 317 1 220 1 162 1 
200 1 225 1 262 2 88 1 137 1 1 3 43 4 67 2 202 2 143 3 348 2 234 3 119 1 49 2 167 3 235 2 189 3 169 6 75 1 205 1 121 26 8 3 355 2 309 1 308 3 214 2 178 14 32 4 287 1 84 12 317 1 109 2 341 1 162 2 
262 4 225 1 88 1 1 3 137 1 43 8 143 5 144 1 145 1 234 3 49 5 235 4 189 3 8 4 287 1 337 1 109 1 341 1 162 3 200 1 296 1 67 1 202 2 16 1 348 4 167 3 119 1 169 6 170 1 205 1 75 1 121 41 355 3 308 4 309 1 214 4 178 20 32 4 84 21 317 1 220 1 222 1 85 1 
225 1 200 1 262 3 88 1 137 1 1 4 43 7 296 1 67 1 16 1 202 2 143 5 144 1 145 1 234 4 348 3 119 1 235 4 167 4 49 4 189 4 169 8 170 1 75 1 205 1 121 38 8 4 355 3 309 1 308 4 214 4 178 20 32 4 337 1 287 1 84 18 317 1 220 1 109 2 85 1 222 1 341 1 162 3 
225 1 200 1 262 7 88 1 137 1 1 2 43 14 296 2 67 1 16 1 202 1 143 8 144 1 145 1 234 2 348 7 119 1 235 4 167 2 49 8 189 2 169 4 170 1 75 1 205 1 121 52 8 7 355 4 309 1 308 7 214 7 178 27 32 4 337 1 287 1 84 25 317 1 38 2 109 1 222 1 341 1 162 2 
226 1 1 1 321 1 323 1 14 1 164 1 185 1 234 1 167 1 189 1 275 2 169 2 329 1 352 1 121 2 54 2 125 1 126 1 128 1 217 2 178 1 283 1 10 1 289 1 218 2 84 1 340 1 359 2 223 2 224 1 199 2 
295 1 208 1 126 1 212 2 323 1 80 1 217 2 230 1 116 1 324 1 105 1 146 1 314 1 62 1 218 2 156 1 318 1 110 1 223 2 
208 1 126 1 212 2 323 1 80 1 217 1 230 1 324 1 105 1 146 1 314 1 62 1 218 1 36 1 318 1 110 1 223 1 
126 1 323 1 164 1 115 1 128 1 217 1 314 1 132 1 50 1 218 1 156 1 223 1 26 1 240 1 
208 1 126 1 212 2 323 1 80 1 217 1 230 1 116 1 324 1 105 1 146 1 314 1 62 1 218 1 156 1 318 1 110 1 223 1 
305 1 
304 1 112 1 258 1 34 1 37 1 243 1 301 1 
112 1 117 1 325 1 272 1 21 1 73 1 173 1 52 1 175 1 304 2 176 1 279 1 357 1 243 1 288 1 106 1 37 1 
262 2 42 1 91 2 323 4 267 1 143 2 325 5 326 1 272 6 328 2 49 2 50 1 191 6 149 2 52 4 53 3 8 2 279 4 196 1 153 2 281 2 243 8 284 2 288 5 106 4 63 3 295 1 112 9 164 3 117 3 301 1 249 2 19 2 21 4 73 5 303 2 174 2 207 1 304 8 209 1 126 3 310 2 308 2 128 10 357 12 215 2 217 3 218 3 34 1 260 2 37 2 136 1 223 3 320 6 
200 1 225 1 262 2 112 8 267 1 117 1 143 2 325 1 272 3 119 1 235 1 49 2 19 1 21 2 73 1 191 5 75 1 52 2 174 2 304 5 8 2 279 2 355 1 308 2 215 1 357 6 216 1 243 5 286 1 288 1 106 2 37 2 341 1 320 5 162 1 
112 2 203 1 16 1 143 2 347 1 145 1 49 1 20 1 273 1 120 1 21 1 275 1 147 1 73 1 52 1 331 1 174 2 54 1 279 1 127 1 215 1 243 2 179 1 337 1 288 1 106 1 11 1 199 1 
304 1 112 1 279 1 243 1 301 1 106 1 21 1 34 1 37 1 52 1 
262 2 304 5 8 2 112 5 308 2 153 1 215 1 357 10 143 2 243 5 272 5 49 2 191 5 320 5 174 2 
304 1 288 1 73 1 37 1 117 1 325 1 
112 2 44 1 323 1 164 1 247 1 267 2 115 1 184 1 69 1 117 2 204 1 325 4 326 1 19 2 50 2 21 1 73 3 52 2 240 1 209 2 126 1 279 2 128 1 217 4 243 2 288 3 106 2 218 4 223 4 
1 1 323 1 14 1 164 1 347 2 234 1 167 1 189 1 273 2 50 1 120 1 169 2 275 3 74 1 172 1 352 1 121 1 54 2 53 1 253 1 126 1 127 2 177 1 103 1 198 1 128 1 217 1 283 1 84 1 218 1 223 1 199 3 
304 4 112 1 279 1 267 1 357 4 243 2 144 1 272 2 106 1 19 1 21 1 191 2 37 2 320 2 52 1 
89 1 330 1 
89 1 330 1 
89 1 330 1 
89 1 330 1 
89 1 330 1 
89 1 330 1 
89 1 330 1 
89 1 330 1 
45 1 336 1 
1 2 43 3 214 2 16 1 143 1 178 4 144 1 145 1 337 1 348 1 234 2 49 1 167 2 189 2 84 4 169 4 170 1 109 1 222 1 121 8 
144 1 145 1 337 1 258 1 49 1 43 2 84 3 170 1 214 2 16 1 222 1 178 3 143 1 121 6 
262 1 8 1 1 1 43 2 308 1 214 1 143 1 178 2 234 1 348 1 49 1 167 1 189 1 84 2 169 2 171 1 121 4 
262 1 8 1 43 2 355 1 296 1 308 1 214 1 178 3 143 1 348 1 49 1 235 2 84 4 121 7 162 1 
262 2 1 2 43 9 296 1 16 2 143 3 231 1 144 1 145 1 348 4 234 2 235 2 49 3 167 2 189 2 274 1 169 4 170 1 121 23 8 2 355 2 308 2 214 5 178 11 337 2 84 12 38 1 109 2 222 1 
235 1 84 1 121 1 
355 1 178 1 121 1 
262 1 8 1 1 1 43 3 308 1 153 1 214 2 143 1 178 3 234 1 348 1 167 1 49 1 189 1 84 3 169 2 171 1 121 6 
200 1 225 1 262 2 1 1 43 2 143 2 348 1 234 1 235 1 167 1 49 2 119 1 189 1 169 2 205 1 75 1 121 12 8 2 355 1 308 2 214 1 178 6 84 6 341 1 162 1 
43 2 214 1 16 1 143 1 178 3 145 1 337 1 348 1 49 1 84 3 121 6 
1 1 43 2 214 1 16 1 178 1 337 1 348 1 234 1 167 1 189 1 84 2 274 1 169 2 170 1 109 1 222 1 121 3 
1 1 43 5 214 3 16 2 178 5 143 2 337 2 145 1 234 1 348 2 167 1 49 2 189 1 84 5 169 2 147 1 205 1 121 10 
1 1 43 1 308 1 143 1 178 2 234 1 348 1 167 1 189 1 169 2 205 1 121 2 
262 1 8 1 1 1 43 2 308 1 214 1 143 1 178 2 234 1 348 1 49 1 167 1 189 1 84 2 169 2 205 1 121 4 
1 3 43 2 214 1 16 1 178 1 337 1 234 3 348 1 167 3 189 3 84 2 274 1 169 6 109 1 220 1 205 1 121 3 
262 3 1 5 43 12 296 1 297 1 16 3 300 1 143 5 144 1 145 2 234 5 348 5 235 4 167 5 49 5 189 5 274 1 169 10 170 1 171 1 205 1 121 34 8 3 355 3 308 3 214 7 178 16 337 3 244 1 84 18 109 2 220 1 222 1 162 1 
200 1 1 1 43 2 16 1 143 1 144 1 145 1 234 1 49 1 235 1 167 1 189 1 169 2 170 1 205 1 121 8 355 1 214 2 178 4 337 1 84 4 222 1 162 1 
200 1 1 2 43 3 296 1 16 1 143 2 144 1 145 1 234 2 348 1 49 1 235 2 167 2 189 2 169 4 170 1 171 1 205 1 121 11 8 1 355 1 308 1 214 2 178 6 337 1 84 5 222 1 162 1 
200 1 225 1 262 2 1 3 43 4 16 1 143 3 144 1 145 1 348 1 234 3 119 1 235 1 167 3 49 3 189 3 169 6 170 1 171 1 205 1 75 1 121 19 8 2 355 1 308 2 214 3 178 9 337 1 84 10 109 1 222 1 341 1 162 1 
200 1 225 1 262 1 1 3 43 5 16 1 143 3 144 1 145 1 348 2 234 3 235 1 167 3 49 2 119 1 189 3 169 6 170 1 171 1 205 1 75 1 121 17 8 2 355 1 308 2 214 3 178 10 337 1 84 7 109 1 222 1 341 1 162 1 
200 1 1 1 43 2 16 1 143 1 144 1 145 1 234 1 49 1 235 1 167 1 189 1 169 2 170 1 205 1 121 8 355 1 214 2 178 4 337 1 84 4 222 1 162 1 
200 1 225 1 262 2 1 1 43 2 143 2 348 1 234 1 235 1 167 1 49 2 119 1 189 1 169 2 205 1 75 1 121 12 8 2 355 1 308 2 214 1 178 6 84 6 341 1 162 1 
200 1 225 1 262 1 1 4 43 5 16 1 143 3 144 1 145 1 348 2 234 4 119 1 235 1 167 4 49 2 189 4 169 8 170 1 171 1 75 1 205 1 121 18 8 2 355 1 308 2 214 3 178 10 337 1 84 8 109 2 222 1 341 1 162 1 
200 1 225 1 262 2 1 4 43 6 143 3 348 3 234 4 119 1 235 1 167 4 49 2 189 4 169 8 75 1 205 1 121 16 8 3 355 1 308 3 214 3 178 9 84 7 220 1 109 2 341 1 162 1 
43 6 214 3 16 3 143 1 178 3 337 3 145 1 348 3 49 1 84 4 170 1 222 2 121 7 
200 1 225 1 262 1 1 4 43 4 16 1 143 3 144 1 145 1 348 1 234 4 119 1 235 1 167 4 49 2 189 4 169 8 170 1 75 1 205 1 121 18 8 2 355 1 308 2 214 3 178 10 337 1 84 8 220 1 109 2 222 1 341 1 162 1 
54 1 166 1 275 1 358 1 261 1 74 1 199 1 
54 1 13 1 312 1 166 1 97 1 275 1 358 1 261 1 74 1 7 1 245 1 199 1 
258 1 126 1 218 1 50 1 323 1 164 1 115 1 128 1 217 1 240 1 223 1 
53 1 54 1 126 1 323 1 127 1 177 1 164 1 298 1 103 1 128 1 217 1 273 1 50 1 218 1 275 2 74 1 223 1 199 2 
323 1 298 1 164 2 269 1 273 1 20 1 275 2 74 1 149 1 54 2 53 2 209 1 126 1 127 2 177 1 103 1 128 3 217 1 284 1 218 1 223 1 199 2 293 1 
0 1 323 1 298 1 164 2 269 1 273 1 20 1 275 2 74 1 149 1 54 2 53 2 209 1 126 1 278 1 127 2 177 1 128 3 217 2 284 1 218 2 223 2 199 2 293 1 
0 1 323 1 164 1 325 1 4 1 328 1 50 1 73 2 149 1 53 1 304 1 209 1 126 1 128 4 281 1 217 3 284 1 83 1 288 2 218 3 63 1 37 1 223 3 
0 1 53 1 304 1 209 1 126 1 323 1 164 1 128 4 217 3 281 1 284 1 325 1 288 2 328 1 50 1 218 3 63 1 73 2 37 1 149 1 223 3 303 1 
131 1 126 1 218 1 323 1 217 1 223 1 
53 1 295 1 207 1 183 1 78 1 126 2 323 3 164 2 31 1 128 3 217 6 94 1 118 1 131 1 146 1 50 2 218 7 259 1 329 1 359 1 223 7 
1 2 321 1 43 2 323 1 143 1 144 1 145 1 234 2 49 1 273 1 189 2 275 2 54 1 53 1 194 1 103 1 197 1 337 1 292 1 199 2 295 1 14 2 298 1 164 1 16 1 346 1 167 2 169 4 170 1 172 1 74 2 352 2 121 6 252 1 253 1 126 1 127 1 177 1 214 2 128 1 217 1 178 3 218 1 84 3 222 1 223 1 224 1 
112 1 117 1 301 1 325 2 326 1 233 1 249 1 328 1 50 1 21 2 73 3 52 2 303 1 304 1 279 2 310 1 128 2 217 1 281 1 243 1 288 3 106 2 218 1 63 1 34 1 260 1 37 1 223 1 
53 1 295 1 207 1 42 1 126 1 323 2 164 1 128 2 281 1 217 2 131 1 218 2 223 2 
0 1 295 1 163 1 126 1 218 4 50 1 323 1 164 1 115 1 128 1 217 4 240 1 223 4 
53 1 41 1 209 1 58 1 126 1 323 2 164 1 128 1 217 2 118 1 290 1 218 2 259 1 223 2 
105 1 126 1 212 1 218 1 50 1 323 1 217 1 230 1 324 1 223 1 
295 1 226 1 126 1 323 1 164 1 128 1 217 2 146 1 218 2 329 1 223 2 
295 1 209 1 78 1 163 1 126 2 323 2 115 1 164 2 128 3 217 4 94 1 50 1 218 5 329 1 240 1 223 5 
295 1 66 1 209 1 163 1 126 2 323 2 115 1 164 2 128 3 217 4 94 1 50 1 218 5 329 1 240 1 223 5 
53 1 54 1 278 1 126 1 323 1 127 1 177 1 164 1 298 1 128 1 217 1 273 1 50 1 218 1 275 2 74 1 223 1 199 2 
53 1 207 1 183 1 209 1 126 1 323 2 164 1 128 1 217 1 118 1 218 1 259 1 223 1 
263 1 30 1 246 1 157 1 74 1 
304 1 263 2 28 1 265 1 30 2 246 1 46 1 229 1 269 1 233 1 288 2 328 1 20 1 73 2 37 1 157 2 74 1 6 1 293 1 
54 1 10 1 263 1 289 1 275 1 246 1 157 1 185 1 199 1 
246 1 46 1 6 1 
258 1 90 1 339 1 276 1 
354 1 90 1 339 1 350 1 276 1 335 1 165 1 
354 1 254 1 236 1 
333 1 354 3 90 1 93 2 17 1 165 1 335 3 339 1 350 1 148 1 276 1 294 1 
29 1 354 2 90 1 339 1 350 1 22 1 276 1 335 2 165 1 
12 1 333 1 354 1 212 1 80 1 165 1 335 1 105 1 350 1 276 1 27 1 
354 1 333 1 339 1 350 1 276 1 335 1 165 1 
354 1 333 1 90 1 339 2 350 1 335 1 165 1 
333 1 354 2 152 1 195 1 307 1 165 2 335 2 339 1 350 2 276 1 
333 1 354 3 90 1 165 1 335 3 339 1 349 1 96 1 350 1 22 2 64 1 276 2 27 1 
333 1 354 2 90 1 212 2 80 1 230 1 165 1 335 2 105 1 339 1 350 1 62 1 98 1 22 1 276 1 
333 1 354 4 29 1 90 1 299 1 165 2 335 4 339 1 96 1 350 2 22 2 276 2 27 1 
354 1 333 1 90 1 339 1 350 1 276 1 335 1 165 1 
354 4 90 2 256 1 93 1 17 1 335 4 165 1 339 2 96 1 350 1 22 2 148 1 276 3 27 1 
354 2 333 1 90 1 306 1 339 1 350 1 219 1 22 1 35 1 276 1 335 2 165 1 
333 1 354 3 90 1 93 2 17 2 165 1 335 3 339 1 350 1 148 1 276 1 135 1 
187 1 276 2 313 2 40 1 
354 1 333 1 350 1 221 1 335 1 165 1 
354 2 333 1 90 1 339 1 350 1 22 1 64 1 276 1 335 2 165 1 
76 1 
354 1 333 1 90 1 339 1 350 1 276 1 335 1 165 1 
354 3 333 1 90 1 339 1 350 1 22 1 64 1 276 1 93 1 335 3 165 1 
96 1 256 1 276 1 27 1 
339 1 276 1 

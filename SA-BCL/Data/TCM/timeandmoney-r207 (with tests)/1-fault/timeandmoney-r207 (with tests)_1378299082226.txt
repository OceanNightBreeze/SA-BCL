#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
364 9 63 3 88 4 268 1 270 1 67 6 137 1 291 2 222 1 339 1 196 1 243 2 90 1 297 1 275 9 342 2 74 1 276 2 231 2 344 1 52 1 350 1 121 2 301 5 327 2 184 1 13 1 213 1 
364 9 63 3 88 4 268 1 270 1 67 6 137 1 291 2 222 1 339 1 196 1 243 2 90 1 297 1 275 9 342 2 74 1 276 2 231 2 344 1 52 1 350 1 121 2 301 5 327 2 184 1 13 1 213 1 
364 10 63 4 88 5 268 1 270 1 67 7 137 1 291 2 222 1 339 1 196 1 243 2 90 1 297 1 275 10 342 2 74 1 276 2 231 2 344 1 52 1 350 1 121 2 301 6 327 2 184 1 13 1 213 1 
364 7 63 2 88 3 268 1 270 1 67 4 137 1 291 2 222 1 339 1 196 1 243 2 90 1 275 7 342 2 74 1 276 2 231 2 344 1 52 1 350 1 121 2 301 4 327 1 184 1 13 1 213 1 
231 1 63 1 364 4 88 2 67 3 350 1 137 1 291 1 121 1 301 3 339 1 196 1 243 1 327 2 184 1 297 1 275 4 276 1 
231 1 364 2 22 1 350 1 222 1 121 1 301 1 339 1 196 1 243 1 13 1 275 2 342 1 229 1 276 1 286 1 
364 3 63 1 88 1 52 1 67 1 350 1 121 2 301 2 339 1 196 1 243 2 275 3 342 1 
88 4 63 3 364 9 67 7 137 1 291 1 339 1 196 1 243 2 90 1 275 9 297 1 73 1 342 1 276 1 344 1 231 1 52 1 350 1 121 2 301 5 327 2 184 1 263 1 
88 4 63 3 364 9 67 7 137 1 291 1 339 1 196 1 243 2 90 1 275 9 297 1 73 1 342 1 276 1 344 1 231 1 52 1 350 1 121 2 301 5 327 2 184 1 263 1 
288 1 4 1 36 1 
255 1 333 2 36 1 
324 2 306 2 322 1 369 2 155 2 51 1 323 2 181 2 
188 1 21 2 237 1 190 1 369 3 66 1 3 1 271 1 109 1 272 1 318 2 144 1 300 1 343 1 320 2 78 1 114 1 322 1 116 1 51 1 323 2 352 1 123 1 181 2 55 1 324 3 152 1 306 2 307 1 357 1 259 1 14 1 235 1 82 2 155 2 40 2 312 1 
324 1 306 1 365 1 79 1 369 1 155 1 51 1 323 1 41 1 181 1 
203 1 50 1 278 1 365 1 369 1 376 1 378 1 323 1 241 1 4 1 252 1 36 1 324 1 128 1 
203 2 50 1 365 1 369 1 376 1 323 1 241 1 4 1 252 2 36 1 181 1 324 1 306 1 128 1 155 1 
203 1 247 1 283 1 165 1 252 1 
203 2 283 1 358 1 103 1 165 1 4 1 252 2 36 1 
203 1 283 1 252 1 
203 1 365 1 79 1 369 1 51 1 165 1 323 1 252 1 194 1 181 1 324 1 306 1 155 1 41 1 
36 1 
203 2 283 1 103 1 131 1 165 1 4 1 252 2 36 1 
203 5 89 2 368 1 9 1 2 1 177 1 205 1 165 2 166 2 4 1 338 1 252 5 36 1 56 1 283 2 274 1 71 2 103 1 93 1 
288 1 322 1 
322 2 280 1 369 2 323 2 181 1 324 2 306 1 155 1 334 1 
257 1 290 1 179 1 
343 1 188 1 320 1 322 1 369 1 118 1 3 1 66 1 272 1 55 1 324 1 14 1 318 1 144 1 40 1 312 1 
343 1 188 1 320 1 45 1 290 1 369 2 66 1 3 1 323 1 181 1 272 1 55 1 303 1 324 2 14 1 155 1 318 1 144 1 40 1 312 1 
324 3 306 1 322 1 45 1 369 3 155 3 323 3 181 3 
324 1 365 1 369 1 155 1 323 1 41 1 181 1 
324 1 306 1 365 1 280 1 369 1 155 1 323 1 334 1 181 1 
188 1 21 1 365 1 45 1 369 4 66 1 3 1 271 1 167 1 241 1 109 1 272 1 318 1 144 1 300 1 343 1 203 1 320 1 50 1 78 1 322 1 376 1 51 1 352 1 323 3 252 1 181 3 55 1 324 4 303 1 152 1 306 2 307 1 357 1 259 1 128 1 14 1 235 1 82 2 155 3 104 1 334 1 312 1 40 1 
324 2 278 1 322 1 70 1 45 1 369 2 155 1 323 2 181 1 
203 1 50 1 365 1 45 2 376 1 369 3 323 3 241 1 252 1 36 1 181 3 303 1 324 3 209 1 306 1 128 1 155 3 104 1 334 1 
324 2 306 1 257 1 45 1 290 1 369 2 155 2 323 2 334 1 181 2 
188 1 343 1 320 1 322 1 369 1 3 1 66 1 272 1 55 1 324 1 14 1 318 1 144 1 40 1 312 1 
343 1 320 1 31 1 322 1 369 1 3 1 66 1 272 1 55 1 324 1 14 1 211 1 318 1 144 1 40 1 
21 4 190 2 290 2 271 1 193 1 6 1 244 1 298 1 374 1 246 1 300 1 99 1 179 2 253 1 326 1 152 1 307 1 257 2 259 1 357 2 235 1 82 2 158 1 19 1 
324 1 365 1 369 1 155 1 241 1 323 1 371 1 181 1 
278 1 322 1 45 2 369 5 323 5 108 1 181 4 324 5 303 1 306 1 70 1 155 4 363 1 334 1 
324 2 365 1 369 2 155 2 323 2 371 1 41 1 181 2 
313 1 132 1 
313 1 132 1 
366 1 42 1 
366 1 42 1 
366 1 42 1 
313 1 296 1 132 1 
313 1 346 1 132 1 
313 2 347 1 366 1 151 1 132 2 42 1 
313 1 296 1 132 1 
313 1 296 1 132 1 
313 1 132 1 353 1 
313 1 132 1 353 1 
313 1 132 1 353 1 
287 2 203 2 313 2 160 2 347 1 161 1 44 2 249 3 162 1 351 1 119 2 252 2 36 1 81 1 355 1 153 2 127 1 132 2 39 1 
287 1 313 1 160 1 44 1 369 2 372 1 169 1 29 1 203 1 346 1 322 1 249 1 351 1 323 2 119 1 252 1 181 2 324 2 329 1 101 1 187 1 155 2 331 1 132 1 
231 1 291 1 276 1 
231 1 276 1 229 1 
294 1 97 1 316 1 291 2 276 3 229 1 
294 1 316 1 291 1 61 1 276 2 229 1 
294 2 316 1 291 1 276 2 229 1 
189 1 89 1 166 1 165 4 164 1 372 1 193 1 4 1 338 2 244 1 71 1 341 1 29 1 246 1 299 1 203 5 321 2 117 2 99 1 9 1 100 1 11 1 252 5 36 2 255 1 56 3 283 1 103 1 331 1 105 2 333 3 18 1 
189 2 89 2 46 1 165 7 166 2 164 2 193 3 4 1 338 6 197 5 244 3 71 2 341 3 93 1 246 3 203 9 146 1 247 5 349 1 117 6 99 3 9 1 178 1 11 1 252 9 36 5 255 3 56 8 283 6 260 1 331 4 103 1 105 6 58 1 333 9 
189 1 89 1 165 2 166 1 164 1 4 1 193 1 338 2 244 1 71 1 341 1 93 1 246 1 299 1 203 3 321 1 117 2 99 1 252 3 36 3 255 2 56 3 331 1 105 2 333 4 18 1 
189 1 89 1 166 1 164 1 165 3 4 1 193 2 338 4 244 2 71 1 341 2 93 1 246 2 299 1 203 4 146 1 321 2 117 4 99 2 178 1 252 4 36 4 255 3 56 5 260 1 331 2 105 4 333 7 18 1 
343 1 288 1 23 1 
343 1 149 1 
289 1 
343 1 144 1 
343 3 345 1 15 1 23 2 66 1 144 1 
343 1 66 1 144 1 
343 1 175 1 
314 1 21 7 277 2 190 4 377 1 10 1 240 1 6 3 357 3 244 1 330 1 91 1 374 2 332 1 92 1 157 1 246 1 
314 1 21 7 277 2 190 4 377 1 10 1 240 1 6 3 357 3 244 1 330 1 91 1 374 2 332 1 92 1 157 1 246 1 
314 1 21 7 277 2 190 4 377 1 10 1 240 1 6 3 357 3 244 1 330 1 91 1 374 2 332 1 83 1 92 1 157 1 246 1 
314 2 21 31 43 1 134 1 190 16 135 1 240 2 271 1 107 1 193 3 292 1 6 10 224 1 244 4 341 3 91 1 374 5 92 2 300 1 246 4 277 3 99 3 377 1 10 5 54 1 35 3 259 1 357 15 330 1 235 1 82 2 332 2 310 4 157 1 
21 9 314 1 190 5 240 1 271 2 337 1 6 4 244 1 374 3 92 1 246 1 300 2 277 2 377 1 10 1 54 1 259 2 357 4 235 2 330 1 82 4 214 1 332 1 157 1 
86 1 364 2 265 1 192 1 67 1 163 1 291 1 373 1 339 1 196 1 243 1 340 1 318 1 275 2 72 1 226 1 342 1 229 1 276 2 231 1 320 1 145 1 97 1 350 1 121 1 301 1 55 1 14 1 16 1 40 1 
86 1 364 3 192 1 163 1 67 2 291 1 339 1 243 1 223 1 340 1 318 1 275 3 72 1 226 1 342 1 229 1 276 2 231 1 320 1 145 1 97 1 350 1 251 1 121 1 301 1 55 1 14 1 16 1 59 1 40 1 
364 2 192 1 163 1 67 2 291 1 339 1 340 1 318 1 275 2 72 1 226 1 342 1 229 1 276 2 231 1 320 1 97 1 350 1 251 1 301 1 55 1 14 1 16 1 59 1 40 1 
364 1 163 2 138 1 272 1 141 1 243 1 223 1 318 1 275 1 226 2 72 2 144 1 342 2 343 1 320 1 8 1 32 1 121 1 55 1 182 1 185 1 14 1 40 1 
231 1 86 1 145 1 320 1 364 1 265 1 97 1 192 1 163 1 291 1 121 1 55 1 196 1 243 1 14 1 340 1 16 1 318 1 275 1 226 1 72 1 59 1 342 1 276 2 229 1 40 1 
171 1 
133 1 335 2 189 1 89 1 238 1 241 1 4 1 338 2 144 1 203 5 343 1 147 1 148 1 50 1 98 2 248 1 9 1 53 1 252 5 55 1 255 2 56 2 14 1 103 3 156 1 216 1 311 2 365 1 369 1 166 1 272 2 71 1 318 2 233 2 320 2 176 2 278 1 281 1 32 1 376 1 378 1 323 1 379 2 34 1 36 2 282 1 324 1 283 6 185 1 128 1 285 4 38 1 333 2 84 2 40 2 
133 1 365 1 369 1 241 1 203 3 148 1 50 1 278 1 248 1 376 1 378 1 323 1 252 3 324 1 283 2 128 1 285 2 103 1 131 1 156 1 216 1 311 1 
133 1 365 1 369 1 241 1 4 1 203 3 148 1 233 1 50 1 278 1 248 1 376 1 378 1 323 1 252 3 36 1 324 1 283 1 128 1 285 3 103 1 131 1 156 1 216 1 
133 1 365 1 369 1 241 1 4 1 203 3 148 1 233 1 50 1 278 1 248 1 376 1 378 1 323 1 252 3 36 1 324 1 283 2 128 1 285 3 103 1 131 1 156 1 216 1 84 1 311 1 
133 1 335 2 89 1 241 1 4 5 338 1 242 1 295 1 203 5 148 1 50 1 98 2 248 1 9 1 206 1 252 5 56 1 255 2 103 3 156 1 216 1 311 4 365 1 369 1 166 1 273 1 71 1 233 4 278 1 176 2 281 1 376 1 378 1 323 1 379 2 36 5 324 1 283 7 285 6 128 1 37 1 131 1 38 1 84 4 
133 1 335 2 89 1 241 1 4 1 338 1 203 4 148 1 50 1 98 2 248 1 9 1 252 4 56 1 255 2 103 2 156 1 216 1 311 2 365 1 369 1 166 1 71 1 233 2 278 1 176 2 281 1 376 1 378 1 323 1 379 2 34 1 36 2 324 1 283 4 285 4 128 1 38 1 333 2 84 2 
133 1 335 2 89 1 365 1 369 1 166 1 241 1 4 1 338 1 295 1 273 1 71 1 203 4 233 2 148 1 50 1 176 2 278 1 98 2 248 1 281 1 9 1 376 1 378 1 323 1 379 2 252 4 36 1 324 1 255 2 56 1 283 4 128 1 285 4 37 1 103 2 38 1 156 1 216 1 84 2 311 2 
133 1 335 2 89 1 365 1 369 1 166 1 241 1 4 1 338 1 295 1 273 1 71 1 203 4 233 2 148 1 50 1 176 2 278 1 98 2 248 1 281 1 9 1 376 1 378 1 323 1 379 2 252 4 36 1 324 1 255 2 56 1 283 4 128 1 285 4 37 1 103 2 38 1 156 1 216 1 84 2 311 2 
133 1 335 2 89 1 365 1 369 1 166 1 241 1 4 1 338 1 71 1 112 1 203 4 233 2 148 1 50 1 278 1 98 2 150 2 248 1 281 1 9 1 376 1 378 1 323 1 252 4 36 1 324 1 56 1 283 4 284 2 128 1 285 4 37 1 129 1 103 2 156 1 361 1 333 2 216 1 84 2 311 2 
133 1 335 2 89 1 365 1 369 1 166 1 241 1 4 1 338 1 295 1 273 1 71 1 203 4 148 1 233 3 50 1 176 2 278 1 98 2 248 1 281 1 9 1 376 1 378 1 206 1 323 1 379 2 252 4 36 1 324 1 255 2 56 1 283 5 128 1 285 5 37 1 103 2 38 1 156 1 216 1 84 3 311 3 
133 1 335 2 89 1 365 1 369 1 166 1 241 1 4 1 338 1 295 1 273 1 71 1 203 4 148 1 233 3 50 1 176 2 278 1 98 2 248 1 281 1 9 1 376 1 378 1 206 1 323 1 379 2 252 4 36 1 324 1 255 2 56 1 283 5 128 1 285 5 37 1 103 2 38 1 156 1 216 1 84 3 311 3 
133 1 335 2 89 1 241 1 4 1 338 1 203 4 148 1 50 1 98 2 248 1 150 2 9 1 252 4 56 1 103 2 156 1 216 1 311 2 365 1 369 1 166 1 71 1 112 1 233 2 278 1 281 1 376 1 378 1 323 1 34 1 36 1 324 1 284 2 283 4 285 4 128 1 333 2 84 2 
288 1 314 1 21 6 190 3 290 1 271 1 6 2 244 1 374 2 300 1 246 1 277 1 322 2 377 1 179 1 326 1 152 1 257 1 307 1 259 1 357 3 330 1 235 1 82 2 332 1 157 1 
21 14 134 1 190 8 290 11 271 2 193 1 292 1 109 1 6 2 244 2 341 2 374 1 300 2 76 1 246 1 114 1 322 1 99 2 10 1 179 11 35 3 183 1 152 1 356 1 328 1 307 2 257 4 357 6 359 1 259 2 235 2 82 4 310 3 
188 1 21 2 190 1 45 1 136 1 369 2 66 1 3 1 271 1 68 1 109 1 272 1 318 1 317 1 144 1 76 1 300 1 343 1 320 1 114 1 322 1 118 1 323 1 181 1 55 1 324 2 303 1 152 1 257 1 307 1 259 1 357 1 14 1 235 1 155 1 82 2 312 1 40 1 
188 2 190 10 45 1 290 7 3 2 193 2 47 1 6 8 244 3 341 2 144 2 246 3 95 1 300 3 343 2 99 2 10 4 352 2 254 2 55 2 303 1 152 3 307 3 258 2 257 7 357 10 259 3 360 2 14 2 155 1 59 1 157 1 312 2 314 1 21 20 219 1 369 3 66 2 271 3 109 1 272 1 318 3 374 4 30 2 76 1 320 3 277 1 114 1 322 2 377 1 323 1 179 7 181 1 324 3 330 1 235 3 82 6 332 1 40 3 
21 2 0 1 190 1 45 1 221 1 369 1 271 2 373 1 109 1 272 2 168 1 318 8 28 1 143 1 144 2 300 2 343 3 320 7 114 1 32 1 323 1 181 1 123 2 55 2 326 1 324 1 152 2 307 2 259 2 357 1 185 1 102 1 14 2 235 2 155 1 82 4 17 1 59 1 40 8 
21 3 190 1 290 1 369 1 271 1 193 1 6 1 244 1 341 1 374 1 300 1 76 1 246 1 99 1 323 1 179 1 181 1 324 1 152 1 306 1 257 1 307 1 259 1 357 2 235 1 155 1 82 2 334 1 85 1 
21 2 190 2 290 1 99 1 10 1 271 1 179 1 326 1 6 1 152 1 257 1 307 1 259 1 244 1 235 1 82 2 300 1 19 1 
21 2 290 1 271 1 193 1 179 1 326 1 6 1 152 1 257 1 307 1 259 1 357 2 235 1 82 2 374 1 158 1 300 1 246 1 
21 4 190 2 290 2 271 1 193 1 6 2 244 1 341 1 374 1 300 1 246 1 99 1 10 1 179 2 326 1 152 1 307 1 257 2 259 1 357 2 235 1 82 2 
21 2 0 1 190 2 290 1 99 1 10 1 271 1 179 1 6 1 152 1 257 1 307 1 259 1 244 1 235 1 82 2 300 1 19 1 
21 2 0 1 290 1 271 1 193 1 179 1 6 1 152 1 257 1 307 1 259 1 357 2 235 1 82 2 374 1 158 1 300 1 246 1 
21 4 0 1 190 2 290 2 271 1 193 1 6 2 244 1 341 1 374 1 300 1 246 1 99 1 10 1 179 2 152 1 307 1 257 2 259 1 357 2 235 1 82 2 
21 4 190 2 290 2 271 1 193 1 6 2 244 1 341 1 374 1 300 1 246 1 99 1 10 1 179 2 152 1 307 1 257 2 259 1 357 2 235 1 82 2 
188 1 21 2 190 1 369 1 66 1 3 1 271 1 109 1 272 1 318 1 144 1 300 1 343 1 320 1 114 1 322 1 352 1 55 1 324 1 152 1 307 1 259 1 357 1 14 1 235 1 82 2 312 1 40 1 
21 2 190 1 315 1 369 1 66 1 3 1 271 1 109 1 272 1 318 1 144 1 300 1 343 1 320 1 114 1 31 1 322 1 55 1 324 1 152 1 307 1 259 1 357 1 14 1 211 1 235 1 82 2 40 1 
21 4 190 2 290 2 271 1 193 1 6 2 244 1 341 1 374 1 300 1 76 1 246 1 99 1 10 1 179 2 152 1 307 1 257 2 259 1 357 2 235 1 82 2 
188 1 21 4 190 2 290 2 369 1 66 1 3 1 271 1 193 1 373 1 6 2 244 1 318 1 341 1 374 1 144 1 246 1 300 1 343 1 320 1 99 1 10 1 352 1 179 2 55 1 324 1 152 1 257 2 307 1 357 2 360 1 259 1 14 1 235 1 82 2 312 1 40 1 
21 3 190 2 290 1 369 1 271 1 193 1 6 1 244 1 341 1 246 1 300 1 76 1 348 1 99 1 10 1 323 1 179 1 181 1 324 1 152 1 306 1 307 1 257 1 357 1 259 1 235 1 155 1 82 2 334 1 
190 20 134 3 193 4 292 1 139 1 6 8 244 5 341 4 246 5 300 3 99 4 10 4 54 1 357 21 259 3 154 1 214 1 215 1 310 4 157 1 217 1 62 1 21 41 264 1 314 1 267 1 65 2 271 3 24 1 173 1 374 4 230 1 232 1 277 1 115 1 377 1 35 3 80 1 234 4 235 3 330 1 82 6 332 1 
62 1 314 1 264 1 21 38 134 3 267 1 190 20 65 2 271 4 24 1 193 3 292 1 139 1 6 7 244 5 341 4 173 1 374 4 230 1 300 4 246 4 232 1 277 1 115 1 99 4 377 1 10 3 54 2 35 3 80 1 259 4 357 18 234 4 154 1 330 1 235 4 82 8 332 1 214 1 215 1 310 4 157 1 217 1 
314 1 264 1 21 52 134 2 267 1 190 27 65 1 271 2 24 1 193 7 292 2 139 1 6 14 244 8 341 7 173 1 374 7 230 1 300 2 246 8 232 1 277 1 115 1 99 7 377 1 10 7 54 1 35 4 80 1 328 2 259 2 357 25 234 4 154 1 330 1 235 2 82 4 332 1 214 1 215 1 310 4 157 1 
62 1 21 19 64 1 134 1 267 1 190 9 65 1 271 2 193 3 292 1 139 1 6 6 244 3 341 3 374 3 300 2 246 3 232 1 99 3 10 3 35 1 80 1 259 2 357 10 234 2 154 2 235 2 82 4 214 1 310 2 
21 26 264 1 267 1 190 14 134 2 65 2 271 3 24 1 193 2 139 1 6 4 244 3 341 3 173 1 374 2 246 2 300 3 230 1 232 1 115 1 99 3 10 2 54 2 35 2 80 2 357 12 259 3 234 4 154 1 235 3 82 6 214 1 215 1 310 2 
287 1 313 1 160 1 347 1 127 1 161 1 44 1 186 1 132 1 119 1 
346 1 329 1 
287 1 302 1 293 1 313 1 126 1 160 1 44 1 132 1 119 1 
203 1 287 1 313 1 160 1 347 1 161 1 44 1 249 2 162 1 351 1 119 1 252 1 36 1 81 1 355 1 153 1 127 1 132 1 
203 1 287 1 313 1 160 1 347 1 161 1 44 1 249 2 162 1 351 1 119 1 252 1 36 1 81 1 355 1 153 1 127 1 132 1 
203 1 287 1 313 1 160 1 347 1 161 1 44 1 249 2 162 1 351 1 119 1 252 1 36 1 81 1 355 1 153 1 127 1 132 1 
296 1 220 1 151 1 
296 1 220 1 151 1 
124 1 353 1 
124 1 151 1 353 1 
101 1 187 1 
287 1 313 1 160 1 367 1 44 1 369 2 162 1 165 1 372 1 169 1 29 1 203 1 346 1 322 1 249 1 323 2 119 1 252 1 181 2 324 2 153 1 329 1 101 1 187 1 331 1 155 2 132 1 
296 1 220 1 
124 1 151 1 353 1 
21 2 190 1 269 1 369 2 271 1 109 1 168 1 225 1 318 2 111 1 144 1 76 1 300 1 343 1 320 2 114 1 323 2 123 2 55 1 12 1 324 2 152 1 307 1 259 1 357 1 14 1 235 1 380 1 82 2 17 1 40 2 
231 1 320 2 86 1 97 1 33 1 291 1 373 1 195 1 55 1 14 1 340 1 318 2 16 1 72 1 59 1 7 1 276 2 229 1 40 2 
231 1 320 1 86 1 97 1 291 1 195 1 55 1 26 1 340 1 14 1 318 1 16 1 72 1 59 1 276 2 229 1 40 1 
343 1 320 1 8 1 32 1 272 1 55 1 185 1 14 1 318 1 72 1 362 1 144 1 7 1 40 1 
231 1 320 1 86 1 97 1 33 1 291 1 195 1 55 1 340 1 14 1 318 1 16 1 72 1 59 1 7 1 276 2 229 1 40 1 
1 1 
288 1 56 1 177 1 205 1 4 1 338 1 36 1 
89 1 166 1 4 1 338 1 71 1 203 1 176 1 9 1 379 1 252 1 36 2 255 1 56 1 283 1 103 1 38 1 333 1 
189 2 89 4 4 2 193 2 338 8 244 2 201 2 341 2 144 3 246 2 343 10 203 5 147 1 149 3 9 4 99 2 250 2 205 1 252 5 55 4 304 1 56 9 305 2 255 6 14 3 212 2 15 1 103 3 105 6 20 2 66 3 23 2 166 4 373 1 272 1 69 2 110 1 71 4 318 3 227 1 175 2 30 2 113 1 320 3 77 2 117 6 177 1 376 2 180 2 36 8 283 5 130 1 333 12 40 3 
264 1 189 1 134 1 89 2 166 2 24 1 193 2 4 2 338 5 69 2 244 2 71 2 341 2 173 1 75 1 230 1 246 2 203 1 147 1 77 1 115 1 117 5 9 2 99 2 252 1 36 5 35 1 56 8 255 3 283 1 308 1 103 1 105 5 333 6 310 1 
314 1 365 1 89 1 191 1 369 1 166 1 338 2 194 1 69 2 273 1 244 2 71 1 246 1 203 1 77 1 79 1 9 1 51 1 323 1 252 1 181 1 324 1 56 2 306 1 155 1 332 1 157 1 41 1 
89 1 9 1 177 1 205 1 166 1 4 1 338 1 36 1 56 1 71 1 
77 1 117 5 99 2 193 2 338 5 36 5 69 2 255 5 56 5 244 2 341 2 105 5 30 1 333 10 246 2 
203 1 283 1 103 1 4 1 252 1 36 1 
87 1 189 2 89 2 166 2 338 2 272 2 110 1 71 2 27 1 318 4 144 1 93 1 343 1 203 3 320 4 147 2 9 1 32 1 53 1 252 3 55 1 282 1 56 2 283 4 185 1 14 1 130 2 103 2 40 4 
188 1 21 1 369 3 3 1 66 1 271 1 109 1 272 1 318 1 144 1 300 1 343 1 320 1 78 1 322 1 51 1 323 2 352 1 181 2 55 1 324 3 152 1 306 2 307 1 357 1 259 1 14 1 235 1 82 2 155 2 40 1 312 1 
147 1 277 1 189 1 89 1 117 2 9 1 166 1 4 2 338 2 36 4 255 2 56 1 71 1 105 2 333 4 
287 1 160 1 204 1 
287 1 160 1 161 1 170 1 101 1 
287 1 160 1 204 1 
287 1 160 1 204 1 
287 1 160 1 172 1 
287 1 160 1 172 1 
287 1 160 1 172 1 
287 1 160 1 
313 1 132 1 
21 8 314 1 134 1 190 4 271 1 6 2 244 1 374 2 246 1 230 1 300 1 277 1 377 1 35 1 357 4 259 1 235 1 330 1 82 2 214 1 332 1 310 1 157 1 
314 1 21 11 134 1 190 6 271 2 292 1 6 3 244 2 341 1 374 2 246 1 230 1 300 2 277 1 96 1 99 1 377 1 10 1 35 1 357 5 259 2 330 1 235 2 82 4 332 1 214 1 310 2 157 1 
314 1 21 19 264 1 134 1 190 9 271 3 24 1 193 2 6 4 244 3 341 2 173 1 374 3 230 1 300 3 246 3 277 1 96 1 115 1 99 2 377 1 10 1 54 1 35 1 357 10 259 3 330 1 235 3 82 6 332 1 214 1 310 1 157 1 
314 1 21 17 264 1 134 1 190 10 271 3 24 1 193 1 6 5 244 3 341 2 173 1 374 3 230 1 300 3 246 2 277 1 96 1 115 1 99 2 377 1 10 2 54 1 35 1 357 7 259 3 330 1 235 3 82 6 332 1 214 1 310 1 157 1 
21 8 314 1 134 1 190 4 271 1 6 2 244 1 374 2 246 1 230 1 300 1 277 1 377 1 35 1 357 4 259 1 235 1 330 1 82 2 214 1 332 1 310 1 157 1 
21 12 264 1 134 1 190 6 271 1 24 1 193 2 6 2 244 2 341 2 173 1 374 1 230 1 300 1 246 2 115 1 99 2 10 1 35 1 357 6 259 1 235 1 82 2 214 1 310 1 
314 1 21 18 264 1 134 1 190 10 271 4 24 1 193 1 6 5 244 3 341 2 173 1 374 3 230 1 300 4 246 2 277 1 96 1 115 1 99 2 377 1 10 2 54 2 35 1 357 8 259 4 330 1 235 4 82 8 332 1 214 1 310 1 157 1 
62 1 21 16 264 1 134 1 190 9 271 4 24 1 193 2 6 6 244 3 341 3 173 1 374 3 230 1 300 4 246 2 115 1 99 3 10 3 54 2 35 1 357 7 259 4 235 4 82 8 214 1 310 1 
21 7 314 3 190 3 377 1 10 3 6 6 357 4 244 1 330 2 332 3 374 3 157 1 246 1 
62 1 314 1 21 18 264 1 134 1 190 10 271 4 24 1 193 1 6 4 244 3 341 2 173 1 374 3 230 1 300 4 246 2 277 1 115 1 99 2 377 1 10 1 54 2 35 1 357 8 259 4 330 1 235 4 82 8 332 1 214 1 310 1 157 1 
21 8 314 1 277 1 190 4 377 1 10 1 271 2 54 1 6 3 244 1 357 4 259 2 235 2 330 1 82 4 374 2 332 1 157 1 246 1 300 2 
288 1 314 1 21 6 277 1 190 3 377 1 6 2 357 3 244 1 330 1 332 1 374 2 157 1 246 1 
21 4 96 1 190 2 99 1 10 1 271 1 193 1 6 2 357 2 259 1 244 1 235 1 82 2 341 1 374 1 246 1 300 1 
21 7 134 1 190 3 99 1 10 1 193 1 292 1 35 1 6 2 357 4 244 1 341 1 374 1 310 2 246 1 
314 2 21 23 190 11 271 2 193 2 292 1 6 9 244 3 341 2 374 5 246 3 300 2 277 1 99 2 377 1 10 4 54 2 35 2 208 1 328 1 357 12 359 1 259 2 330 1 235 2 82 4 332 2 310 2 157 1 
21 1 357 1 310 1 
21 1 190 1 35 1 
21 6 96 1 190 3 99 1 10 1 271 1 193 1 6 3 259 1 357 3 244 1 235 1 82 2 341 1 374 2 30 1 300 1 246 1 
21 12 264 1 134 1 190 6 271 1 24 1 193 2 6 2 244 2 341 2 173 1 374 1 230 1 300 1 246 2 115 1 99 2 10 1 35 1 357 6 259 1 235 1 82 2 214 1 310 1 
21 6 314 1 190 3 10 1 6 2 244 1 357 3 332 1 374 1 157 1 246 1 
314 1 21 3 190 1 377 1 10 1 271 1 54 1 208 1 6 2 357 2 259 1 330 1 235 1 82 2 374 1 332 1 300 1 
314 2 21 10 190 5 191 1 10 2 271 1 6 5 259 1 357 5 244 2 235 1 82 2 214 1 332 2 374 3 157 1 300 1 246 2 
21 2 190 2 99 1 10 1 271 1 6 1 259 1 244 1 235 1 82 2 214 1 300 1 
21 4 190 2 99 1 10 1 271 1 193 1 6 2 357 2 259 1 244 1 235 1 82 2 341 1 374 1 214 1 246 1 300 1 
62 1 21 3 314 1 190 1 10 1 271 3 54 1 208 1 6 2 357 2 259 3 235 3 82 6 214 1 332 1 374 1 300 3 
62 1 314 3 43 1 21 34 134 1 190 16 271 5 107 1 193 3 292 1 6 12 224 1 244 5 341 3 374 7 300 5 246 5 277 1 96 1 99 3 377 1 10 5 54 2 35 3 208 1 357 18 259 5 330 1 235 5 82 10 332 3 214 1 310 4 157 2 
324 1 207 1 278 1 322 1 70 1 369 1 323 1 
236 1 278 1 322 1 336 1 369 1 370 1 323 1 325 1 199 1 207 1 324 1 70 1 
55 1 343 1 288 1 320 1 185 1 14 1 32 1 318 1 144 1 40 1 272 1 
343 1 188 1 320 1 322 1 45 1 369 2 66 1 3 1 323 1 181 1 272 1 55 1 324 2 14 1 155 1 318 1 144 1 40 1 
343 3 188 1 320 1 365 1 322 1 45 1 369 2 66 2 3 1 241 1 323 2 181 2 55 1 324 2 128 1 201 1 14 1 130 1 155 1 318 1 175 1 144 2 40 1 
365 1 45 1 369 2 3 1 66 2 241 1 245 1 201 1 318 2 175 1 144 2 343 3 320 2 322 1 323 2 181 2 55 1 324 2 128 1 14 1 211 1 130 1 155 1 40 2 
203 2 343 4 320 3 149 1 376 1 66 1 23 1 4 1 252 2 272 1 36 1 55 1 283 1 245 1 201 1 14 1 130 1 318 3 202 1 175 1 60 1 144 1 40 3 
203 2 343 4 320 3 149 1 376 1 66 1 23 1 4 1 252 2 180 1 272 1 36 1 55 1 283 1 245 1 201 1 14 1 130 1 318 3 175 1 144 1 40 3 
55 1 320 1 14 1 318 1 143 1 40 1 
343 1 320 1 66 1 272 1 55 2 57 1 14 1 15 1 318 1 142 1 144 1 40 1 49 1 
188 1 190 3 45 1 290 1 3 1 6 2 244 1 144 1 300 2 246 1 343 1 352 1 254 1 55 1 152 2 257 1 307 2 360 1 259 2 357 3 14 1 155 1 157 1 312 1 314 1 21 6 369 2 66 1 271 2 373 1 225 1 318 1 374 2 76 1 320 1 277 1 322 2 377 1 323 1 179 1 181 1 324 2 235 2 330 1 82 4 332 1 40 1 
89 2 23 1 166 2 165 1 4 1 338 1 272 1 110 1 71 2 318 1 203 3 343 2 320 1 149 1 9 2 177 1 250 1 376 1 205 1 252 3 180 1 36 1 56 1 305 1 283 2 212 1 103 1 40 1 
343 2 320 2 23 1 66 1 373 1 55 2 304 1 14 1 15 1 318 2 143 1 144 1 40 2 
343 1 320 4 32 1 354 1 373 1 272 1 55 1 245 1 185 1 14 1 318 4 144 1 40 4 
343 1 320 1 66 1 120 1 122 1 55 2 47 1 57 1 14 1 318 1 142 1 144 1 40 1 
231 1 55 1 320 1 14 1 16 1 318 1 276 1 229 1 40 1 272 1 
55 1 343 1 12 1 320 2 14 1 318 2 17 1 59 1 144 1 373 1 40 2 
343 3 320 4 32 1 354 1 373 1 272 1 55 2 185 1 14 2 102 1 130 1 318 5 17 1 28 1 144 2 40 5 
343 3 320 4 32 1 354 1 373 1 272 1 55 2 185 1 14 2 102 1 130 1 318 5 261 1 17 1 144 2 40 5 
343 1 320 1 322 1 45 1 369 2 66 1 3 1 323 1 181 1 272 1 55 1 324 2 14 1 211 1 155 1 318 1 144 1 40 1 
343 1 320 1 66 1 55 2 57 1 14 1 130 1 15 1 318 1 142 1 144 1 40 1 49 1 
159 1 322 1 262 1 174 1 5 1 
203 2 159 2 50 1 365 1 266 1 322 1 376 1 165 1 241 1 4 1 5 2 252 2 36 1 200 1 256 1 128 1 262 1 104 1 174 2 
269 1 369 1 323 1 5 1 324 1 380 1 262 1 174 1 111 1 
200 1 256 1 262 1 
339 1 288 1 350 1 301 1 
339 1 364 1 243 1 275 1 350 1 121 1 301 1 
275 1 226 1 342 1 
364 3 279 1 239 1 350 1 121 1 25 1 301 1 196 1 339 1 243 1 13 2 275 3 
339 1 327 1 364 2 243 1 67 1 275 2 350 1 121 1 301 1 
231 1 364 1 88 1 291 1 121 1 301 1 196 1 243 1 184 1 275 1 276 1 
196 1 364 1 243 1 275 1 350 1 121 1 301 1 
339 1 196 1 364 1 243 1 275 1 350 2 121 1 
364 2 350 1 121 2 301 1 196 1 243 2 125 1 210 1 309 1 275 2 
344 1 364 3 63 1 88 1 67 2 350 1 121 1 301 2 339 1 196 1 243 1 90 1 275 3 
231 1 364 2 97 1 67 1 350 1 291 1 121 1 301 1 339 1 196 1 243 1 275 2 229 1 276 2 228 1 
364 4 63 1 88 1 67 2 350 1 121 2 301 2 339 1 196 1 243 2 327 1 275 4 297 1 
339 1 196 1 364 1 243 1 275 1 350 1 121 1 301 1 
364 4 63 1 88 1 279 1 67 2 350 2 25 1 121 1 301 3 339 2 243 1 13 1 275 4 218 1 
364 2 67 1 350 1 121 1 301 1 196 1 339 1 243 1 275 2 263 1 48 1 94 1 
364 3 279 1 350 1 121 1 25 2 301 1 196 1 339 1 243 1 13 2 275 3 381 1 
140 1 198 2 106 1 301 2 
196 1 364 1 243 1 319 1 275 1 121 1 
339 1 344 1 196 1 364 2 243 1 67 1 275 2 350 1 121 1 301 1 
375 1 
339 1 196 1 364 1 243 1 275 1 350 1 121 1 301 1 
344 1 364 3 67 1 350 1 121 1 301 1 196 1 339 1 243 1 13 1 275 3 
88 1 63 1 218 1 301 1 
350 1 301 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 299 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
292 1 193 2 32 9 33 1 197 1 62 2 35 1 340 1 272 9 243 2 244 1 200 1 15 2 152 1 300 2 67 1 136 2 17 5 229 2 177 3 44 6 209 1 137 1 304 1 355 4 21 1 234 1 187 1 
292 1 193 2 32 9 33 1 62 2 197 1 35 1 340 1 272 9 243 2 244 1 200 1 15 2 152 1 300 2 67 1 136 2 17 5 229 2 177 3 44 6 209 1 137 1 304 1 355 4 21 1 234 1 187 1 
292 1 193 2 32 10 33 1 62 2 197 1 35 1 340 1 272 10 243 2 244 1 200 1 15 2 152 1 300 2 67 1 136 2 17 6 229 2 177 4 44 7 209 1 137 1 304 1 355 5 21 1 234 1 187 1 
292 1 193 2 32 7 33 1 62 2 197 1 35 1 340 1 272 7 243 2 244 1 200 1 15 2 152 1 300 1 67 1 136 2 17 4 229 2 177 2 44 4 137 1 304 1 355 3 21 1 234 1 187 1 
300 2 67 1 136 1 17 3 229 1 177 1 44 3 209 1 137 1 32 4 33 1 197 1 62 1 355 2 340 1 243 1 272 4 15 1 
17 1 136 1 29 1 57 1 229 1 193 1 148 1 32 2 33 1 197 1 187 1 340 1 272 2 243 1 152 1 15 1 
136 2 17 2 177 1 44 1 193 1 32 3 33 1 197 1 355 1 35 1 340 1 272 3 15 2 
292 1 193 1 32 9 33 1 197 1 62 1 35 1 150 1 340 1 272 9 243 1 202 1 15 2 300 2 67 1 136 2 17 5 229 1 177 3 44 7 137 1 209 1 304 1 355 4 
292 1 193 1 32 9 33 1 197 1 62 1 35 1 150 1 340 1 272 9 243 1 202 1 15 2 300 2 67 1 136 2 17 5 229 1 177 3 44 7 137 1 209 1 304 1 355 4 
139 1 330 1 119 1 
211 2 119 1 201 1 
275 1 325 2 8 2 242 2 23 2 216 1 226 2 210 2 
291 1 0 1 53 2 265 1 214 1 295 2 194 1 216 1 8 2 242 2 10 1 11 1 37 1 224 1 38 1 226 3 39 1 275 1 227 1 344 1 247 2 228 1 277 1 230 1 321 1 325 2 283 2 233 1 285 1 79 1 307 1 332 1 23 3 83 1 82 1 145 2 210 2 
325 1 8 1 242 1 23 1 31 1 216 1 240 1 226 1 210 1 78 1 
274 1 153 1 123 1 125 1 56 1 276 1 240 1 328 1 366 1 330 1 242 1 119 1 23 1 226 1 
153 1 123 1 56 2 276 2 240 1 325 1 328 1 366 1 8 1 330 1 242 1 119 1 23 1 210 1 226 1 
236 1 218 1 56 1 141 1 276 1 
236 1 330 1 218 1 56 2 276 2 119 1 22 1 40 1 
218 1 56 1 276 1 
236 1 56 1 276 1 31 1 216 1 240 1 78 1 325 1 326 1 8 1 242 1 23 1 210 1 226 1 
119 1 
236 1 102 1 330 1 218 1 56 2 276 2 119 1 40 1 
236 2 56 5 276 5 207 1 5 1 178 1 322 2 87 1 182 1 367 1 20 2 330 1 218 2 369 2 119 1 342 1 288 1 256 1 40 1 
0 1 53 1 247 1 265 1 71 1 230 1 321 1 158 1 184 1 283 1 8 1 242 1 10 1 307 1 11 1 23 2 82 1 38 1 210 1 226 2 
275 1 139 1 
275 2 317 1 325 1 8 1 242 2 306 1 23 2 226 2 210 1 
71 1 334 1 268 1 
0 1 275 1 53 1 246 1 247 1 265 1 230 1 321 1 283 1 10 1 11 1 307 1 23 1 38 1 82 1 226 1 
275 1 158 1 325 1 8 3 242 3 23 3 226 3 210 3 
8 1 242 1 23 1 31 1 240 1 226 1 210 1 
317 1 325 1 8 1 242 1 306 1 23 1 240 1 226 1 210 1 
0 1 53 1 265 1 214 1 123 1 56 1 295 1 194 1 216 1 240 1 366 1 8 3 242 3 10 1 11 1 37 1 224 1 38 1 226 4 39 1 275 1 227 1 68 1 317 1 247 1 228 1 114 1 153 1 276 1 230 1 321 1 158 1 325 2 184 1 328 1 283 1 285 1 79 1 307 1 332 1 23 4 82 1 145 2 210 3 
274 1 275 1 158 1 8 1 242 2 23 2 14 1 226 2 210 1 
317 1 68 1 153 1 123 1 56 1 276 1 240 1 158 2 325 1 184 1 366 1 328 1 8 3 242 3 119 1 23 3 190 1 210 3 226 3 
317 1 71 1 158 1 325 1 8 2 242 2 23 2 334 1 210 2 226 2 
0 1 275 1 53 1 247 1 265 1 230 1 321 1 283 1 10 1 11 1 307 1 23 1 38 1 82 1 226 1 
0 1 275 1 53 1 247 1 230 1 321 1 378 1 283 1 10 1 307 1 23 1 38 1 82 1 226 1 146 1 
214 1 364 1 126 1 295 4 194 1 268 2 165 1 217 1 12 1 37 1 224 1 301 1 228 2 248 1 71 2 42 1 349 1 254 1 117 1 285 1 332 1 334 2 83 2 145 2 
123 1 8 1 242 1 100 1 23 1 240 1 226 1 210 1 
274 1 275 1 158 2 317 1 363 1 184 1 325 1 8 4 242 5 365 1 23 5 14 1 226 5 210 4 
8 2 242 2 100 1 23 2 31 1 240 1 226 2 210 2 
127 1 258 1 
127 1 258 1 
319 1 18 1 
319 1 18 1 
319 1 18 1 
221 1 127 1 258 1 
221 1 127 1 258 1 
320 1 127 1 258 1 
245 1 319 1 284 1 18 1 127 2 258 2 
221 1 127 1 258 1 
81 1 127 1 258 1 
81 1 127 1 258 1 
81 1 127 1 258 1 
245 1 346 1 2 1 124 2 56 2 276 2 127 2 77 1 356 1 91 1 380 1 119 1 297 2 358 2 372 2 120 1 314 2 142 3 258 2 
263 1 111 1 56 1 127 1 8 2 91 1 242 2 297 1 372 1 314 1 226 2 275 1 375 1 276 1 320 1 376 1 252 1 186 1 358 1 23 2 142 1 359 1 210 2 258 1 
62 1 229 1 243 1 
29 1 229 1 243 1 
312 1 62 2 29 1 331 1 243 3 316 1 
196 1 312 1 62 1 29 1 331 1 243 2 
312 2 62 1 29 1 331 1 243 2 
211 3 236 4 263 1 56 5 364 1 267 1 5 2 87 3 130 2 131 2 218 1 369 1 201 1 40 1 248 1 70 2 42 1 43 1 154 1 276 5 178 1 350 1 322 1 254 1 20 1 186 1 330 1 119 2 308 1 359 1 51 1 28 1 
211 9 236 7 122 1 56 9 364 3 5 6 128 1 87 8 34 1 130 6 63 1 131 6 218 6 296 1 369 2 201 3 40 1 248 3 42 3 135 5 276 9 178 1 350 2 322 2 182 1 254 3 20 2 330 1 141 5 119 5 308 3 381 1 359 4 51 1 28 2 
236 2 211 4 56 3 364 1 5 2 87 3 130 2 131 2 369 1 201 2 70 1 248 1 42 1 43 1 154 1 276 3 350 1 322 1 182 1 254 1 20 1 330 1 119 3 308 1 359 1 28 1 
211 7 236 3 122 1 56 4 364 2 5 4 128 1 87 5 130 4 131 4 296 1 369 1 201 3 70 2 248 2 42 2 43 1 276 4 154 1 350 1 322 1 182 1 254 2 20 1 330 1 119 4 308 2 359 2 28 1 
139 1 55 1 321 1 
59 1 321 1 
338 1 
307 1 321 1 
88 1 55 2 307 1 321 3 82 1 323 1 
307 1 321 1 82 1 
294 1 321 1 
374 1 228 3 248 1 251 2 295 7 101 1 90 1 254 1 104 1 183 1 117 3 48 1 271 1 12 2 151 1 83 4 27 1 
374 1 228 3 248 1 251 2 295 7 101 1 90 1 254 1 104 1 183 1 117 3 48 1 271 1 12 2 151 1 83 4 27 1 
374 1 228 3 248 1 251 2 101 1 295 7 164 1 90 1 254 1 104 1 183 1 117 3 48 1 271 1 12 2 151 1 83 4 27 1 
110 1 113 1 3 1 364 3 295 31 194 1 90 1 271 1 220 1 151 2 12 5 37 1 224 1 315 1 374 2 228 15 248 4 42 3 251 3 101 1 253 4 183 2 104 5 254 4 117 10 327 1 48 2 285 1 106 1 308 3 24 3 83 16 27 1 145 2 
295 9 194 2 271 1 220 1 151 1 12 3 37 2 224 2 374 1 228 4 248 1 251 2 101 1 279 1 254 1 377 1 183 1 104 1 117 4 48 1 285 2 83 5 145 4 27 1 
0 1 53 1 29 1 193 1 337 1 32 2 129 1 33 1 62 1 197 1 269 1 340 1 272 2 243 2 169 1 38 1 316 1 15 1 247 1 348 1 17 1 136 1 229 1 44 1 303 1 103 1 138 1 283 1 49 1 50 1 
259 1 0 1 53 1 29 1 193 1 32 3 129 1 33 1 62 1 269 1 340 1 272 3 243 2 169 1 38 1 316 1 15 1 247 1 17 1 136 1 229 1 44 2 303 1 103 1 354 1 138 1 283 1 49 1 50 1 107 1 
259 1 0 1 53 1 29 1 193 1 32 2 33 1 62 1 269 1 340 1 272 2 243 2 169 1 38 1 316 1 247 1 17 1 229 1 44 2 303 1 103 1 283 1 49 1 50 1 107 1 
0 1 260 1 147 1 53 1 247 1 136 1 115 1 193 2 230 1 351 1 321 1 180 1 32 1 354 1 103 2 283 1 307 1 272 1 49 2 50 2 38 1 84 1 15 1 
259 1 0 1 53 1 29 1 193 1 337 1 32 1 129 1 62 1 197 1 269 1 272 1 243 2 169 1 38 1 316 1 15 1 247 1 136 1 229 1 303 1 103 1 138 1 283 1 49 1 50 1 
47 1 
108 1 0 1 237 1 53 2 56 5 5 2 195 2 240 1 7 1 241 1 149 2 242 1 339 4 341 1 201 2 203 1 247 2 153 1 20 1 119 2 307 1 357 2 23 1 360 1 28 1 211 2 260 1 123 1 125 1 311 2 87 2 366 1 218 6 369 1 219 1 370 1 38 1 40 3 226 1 274 1 276 5 230 2 178 1 180 1 321 1 322 1 281 2 280 2 324 2 283 2 328 1 330 1 188 1 287 1 189 1 
237 1 274 1 123 1 153 1 125 1 56 3 276 3 195 1 240 1 102 1 7 1 366 1 241 1 328 1 218 2 339 2 242 1 341 1 23 1 189 1 40 1 226 1 
237 1 123 1 125 1 56 3 240 1 7 1 241 1 366 1 218 1 242 1 339 3 341 1 226 1 40 1 274 1 153 1 276 3 281 1 102 1 328 1 330 1 119 1 23 1 189 1 
237 1 123 1 125 1 56 3 240 1 195 1 7 1 241 1 366 1 242 1 339 3 218 2 341 1 40 1 226 1 274 1 153 1 276 3 281 1 324 1 102 1 328 1 330 1 119 1 23 1 189 1 
237 1 335 1 56 5 5 1 195 4 240 1 7 1 198 1 241 1 339 6 242 1 149 2 341 1 201 2 69 1 153 1 20 1 119 5 357 2 23 1 360 1 123 1 125 1 311 2 87 1 366 1 218 7 93 1 369 1 226 1 40 3 274 1 276 5 178 1 322 1 281 4 280 2 324 4 102 1 328 1 330 5 188 1 189 1 143 1 
237 1 56 4 5 1 240 1 195 2 7 1 241 1 339 4 242 1 149 2 341 1 201 2 153 1 20 1 119 2 357 2 23 1 360 1 211 2 123 1 125 1 311 2 87 1 366 1 218 4 369 1 219 1 226 1 40 2 274 1 276 4 178 1 322 1 280 2 281 2 324 2 328 1 330 1 188 1 189 1 
237 1 123 1 125 1 56 4 5 1 195 2 311 2 240 1 87 1 7 1 241 1 366 1 218 4 149 2 242 1 339 4 93 1 369 1 341 1 201 2 40 2 226 1 274 1 69 1 153 1 276 4 178 1 322 1 281 2 280 2 324 2 328 1 20 1 330 1 119 1 188 1 357 2 23 1 360 1 189 1 143 1 
237 1 123 1 125 1 56 4 5 1 195 2 311 2 240 1 87 1 7 1 241 1 366 1 218 4 149 2 242 1 339 4 93 1 369 1 341 1 201 2 40 2 226 1 274 1 69 1 153 1 276 4 178 1 322 1 281 2 280 2 324 2 328 1 20 1 330 1 119 1 188 1 357 2 23 1 360 1 189 1 143 1 
211 2 237 1 123 1 125 1 56 4 5 1 195 2 311 2 240 1 87 1 7 1 168 1 241 1 366 1 270 1 218 4 242 1 339 4 369 1 341 1 40 2 226 1 274 1 134 2 69 1 153 1 250 1 276 4 178 1 322 1 281 2 280 2 324 2 328 1 20 1 330 1 119 1 23 1 360 1 189 1 191 2 
237 1 123 1 125 1 335 1 56 4 5 1 311 2 240 1 195 3 87 1 7 1 241 1 366 1 149 2 242 1 339 5 218 5 93 1 369 1 341 1 201 2 40 2 226 1 274 1 69 1 153 1 276 4 178 1 322 1 280 2 281 3 324 3 20 1 328 1 330 1 119 1 188 1 357 2 23 1 360 1 143 1 189 1 
237 1 123 1 125 1 335 1 56 4 5 1 311 2 240 1 195 3 87 1 7 1 241 1 366 1 149 2 242 1 339 5 218 5 93 1 369 1 341 1 201 2 40 2 226 1 274 1 69 1 153 1 276 4 178 1 322 1 280 2 281 3 324 3 20 1 328 1 330 1 119 1 188 1 357 2 23 1 360 1 143 1 189 1 
211 2 237 1 123 1 125 1 56 4 5 1 195 2 311 2 240 1 87 1 7 1 168 1 241 1 366 1 218 4 242 1 339 4 369 1 219 1 341 1 40 2 226 1 274 1 134 2 153 1 276 4 178 1 322 1 281 2 280 2 324 2 20 1 328 1 330 1 119 1 23 1 360 1 189 1 191 2 
374 1 275 2 228 3 248 1 214 1 71 1 251 1 295 6 349 1 101 1 194 1 268 1 254 1 139 1 117 2 48 1 271 1 285 1 12 2 332 1 334 1 83 3 224 1 37 1 145 2 27 1 
85 1 214 2 113 1 112 1 364 1 295 14 194 2 268 11 12 1 37 2 224 2 275 1 227 1 173 1 228 6 347 1 248 2 71 11 42 2 277 1 253 3 104 1 254 1 117 2 285 2 332 1 106 1 308 2 24 3 334 4 257 1 83 8 145 4 
0 1 53 1 265 1 214 1 295 2 194 1 8 1 242 1 10 1 11 1 95 1 38 1 224 1 37 1 226 2 275 1 227 1 247 1 246 1 228 1 230 1 277 1 321 1 158 1 184 1 283 1 379 1 285 1 307 1 332 1 333 1 23 2 334 1 82 1 257 1 83 1 145 2 210 1 
0 2 53 3 58 2 295 20 194 3 8 1 242 1 10 2 11 2 12 4 343 2 247 3 248 3 71 7 251 1 158 1 254 3 117 8 255 1 79 2 307 2 308 2 23 3 257 1 82 2 83 10 27 1 26 2 210 1 259 1 265 2 214 3 364 2 268 7 313 1 271 1 37 3 224 3 38 2 226 3 374 1 275 2 227 1 228 10 42 2 101 1 277 1 230 1 321 2 104 4 184 1 283 3 48 1 285 3 235 1 332 3 334 7 145 6 52 2 
259 1 0 2 1 1 53 7 260 1 214 2 295 2 194 2 64 1 8 1 242 1 66 1 38 2 37 2 224 2 171 1 226 1 227 1 247 8 228 1 348 1 72 1 349 1 230 2 277 1 321 3 180 1 232 1 158 1 283 8 233 2 285 2 118 1 307 2 332 2 23 1 83 1 145 4 210 1 
262 1 214 1 364 1 295 3 194 1 268 1 8 1 242 1 12 1 37 1 224 1 226 1 317 1 228 2 248 1 71 1 42 1 254 1 117 1 325 1 285 1 332 1 308 1 23 1 334 1 257 1 83 1 145 2 210 1 
301 1 214 1 248 1 71 1 42 1 295 2 349 1 194 1 268 1 104 1 117 1 285 1 332 1 334 1 224 1 37 1 83 2 145 2 
228 2 214 1 71 1 364 1 295 2 349 1 194 1 268 1 165 1 254 1 117 1 285 1 12 1 332 1 334 1 224 1 37 1 145 2 
214 1 364 1 295 4 194 1 268 2 12 1 37 1 224 1 228 2 248 1 42 1 71 2 349 1 104 1 254 1 117 2 285 1 308 1 332 1 334 2 83 2 145 2 
301 1 214 1 248 1 71 1 42 1 72 1 295 2 194 1 268 1 104 1 117 1 285 1 332 1 334 1 224 1 37 1 83 2 145 2 
228 2 214 1 71 1 72 1 364 1 295 2 194 1 268 1 165 1 254 1 117 1 285 1 12 1 332 1 334 1 224 1 37 1 145 2 
214 1 364 1 295 4 194 1 268 2 12 1 37 1 224 1 228 2 248 1 42 1 71 2 72 1 104 1 254 1 117 2 285 1 308 1 332 1 334 2 83 2 145 2 
214 1 364 1 295 4 194 1 268 2 12 1 37 1 224 1 228 2 248 1 42 1 71 2 104 1 254 1 117 2 285 1 308 1 332 1 334 2 83 2 145 2 
0 1 53 1 265 1 214 1 295 2 194 1 10 1 11 1 38 1 224 1 37 1 226 1 275 1 227 1 247 1 228 1 277 1 230 1 321 1 283 1 79 1 285 1 307 1 332 1 23 1 83 1 82 1 145 2 
0 1 53 1 362 1 214 1 295 2 194 1 10 1 38 1 224 1 37 1 226 1 275 1 227 1 247 1 228 1 277 1 230 1 321 1 378 1 283 1 285 1 307 1 332 1 23 1 83 1 82 1 145 2 146 1 
214 1 364 1 295 4 194 1 268 2 12 1 37 1 224 1 228 2 248 1 42 1 71 2 104 1 254 1 117 2 285 1 308 1 332 1 334 2 83 2 257 1 145 2 
0 1 53 1 265 1 214 1 364 1 295 4 194 1 268 2 10 1 11 1 12 1 38 1 224 1 37 1 226 1 247 1 228 2 248 1 348 1 71 2 42 1 321 1 254 1 104 1 117 2 283 1 79 1 285 1 307 1 332 1 308 1 23 1 334 2 83 2 82 1 26 1 145 2 
214 1 364 1 295 3 194 1 268 1 8 1 242 1 37 1 224 1 226 1 317 1 228 1 248 1 42 1 71 1 254 1 104 1 117 1 325 1 329 1 285 1 332 1 308 1 23 1 334 1 257 1 83 2 145 2 210 1 
113 3 4 1 295 41 194 3 12 4 16 1 248 5 251 1 75 1 116 1 253 4 254 5 117 8 159 1 308 4 24 3 83 20 27 1 212 4 161 2 264 1 215 1 364 4 271 1 220 1 222 1 224 3 37 3 133 1 374 1 228 21 42 4 97 1 101 1 279 1 46 1 181 1 104 4 140 1 48 1 285 3 106 1 145 6 
212 4 161 2 264 1 113 3 215 1 364 3 4 1 295 38 194 4 271 1 220 2 12 4 222 1 133 1 37 4 224 4 374 1 16 1 228 18 248 5 42 4 97 1 251 1 101 1 75 1 46 1 279 1 116 1 181 1 253 4 104 3 254 4 117 7 159 1 140 1 48 1 285 4 106 1 308 4 24 3 83 20 27 1 145 8 
212 4 161 1 264 1 113 2 215 1 364 7 4 1 295 52 194 2 271 1 220 1 12 7 222 1 133 1 37 2 224 2 374 1 16 1 173 2 228 25 248 8 42 7 251 1 101 1 75 1 46 1 279 1 116 1 181 1 253 4 104 7 254 8 117 14 140 1 48 1 285 2 106 2 308 7 24 4 83 27 27 1 145 4 
212 2 161 1 113 1 215 2 364 3 4 1 295 19 194 2 12 3 37 2 224 2 16 1 228 10 248 3 42 3 176 1 97 1 46 1 279 1 116 1 253 2 104 3 254 3 117 6 285 2 106 1 308 3 24 1 83 9 145 4 
212 4 161 2 264 1 113 2 215 1 364 2 4 1 295 26 194 3 220 2 12 2 222 1 37 3 224 3 133 1 16 1 228 12 248 3 42 3 75 1 46 1 279 1 116 2 181 1 253 2 104 2 254 2 117 4 140 1 285 3 308 3 24 2 83 14 145 6 
245 1 297 1 358 1 372 1 120 1 231 1 127 1 314 1 77 1 258 1 
320 1 252 1 
205 1 318 1 297 1 358 1 372 1 127 1 314 1 25 1 258 1 
245 1 346 1 124 1 56 1 276 1 127 1 77 1 356 1 91 1 380 1 119 1 297 1 358 1 372 1 120 1 314 1 142 2 258 1 
245 1 346 1 124 1 56 1 276 1 127 1 77 1 356 1 91 1 380 1 119 1 297 1 358 1 372 1 120 1 314 1 142 2 258 1 
245 1 346 1 124 1 56 1 276 1 127 1 77 1 356 1 91 1 380 1 119 1 297 1 358 1 372 1 120 1 314 1 142 2 258 1 
284 1 221 1 223 1 
284 1 221 1 223 1 
30 1 81 1 
284 1 30 1 81 1 
375 1 111 1 
236 1 263 1 124 1 111 1 56 1 127 1 8 2 242 2 297 1 372 1 314 1 226 2 275 1 375 1 276 1 320 1 376 1 252 1 356 1 186 1 358 1 23 2 142 1 359 1 144 1 258 1 210 2 
221 1 223 1 
284 1 30 1 81 1 
0 1 53 2 214 1 266 1 295 2 194 1 242 2 298 1 38 1 66 1 224 1 37 1 226 2 41 1 227 1 247 2 228 1 73 1 277 1 321 1 283 2 233 2 285 1 307 1 118 1 332 1 23 2 257 1 83 1 145 2 361 1 
0 1 259 1 53 2 247 2 348 1 29 1 229 1 60 1 310 1 303 1 138 1 62 1 283 2 243 2 169 1 50 1 38 1 316 1 309 1 
259 1 0 1 53 1 247 1 29 1 229 1 303 1 6 1 138 1 62 1 283 1 243 2 169 1 50 1 38 1 316 1 309 1 
0 1 53 1 147 1 260 1 247 1 206 1 60 1 230 1 321 1 180 1 283 1 307 1 50 1 38 1 
259 1 0 1 53 1 247 1 29 1 229 1 60 1 310 1 303 1 138 1 62 1 283 1 243 2 169 1 50 1 38 1 316 1 309 1 
192 1 
87 1 139 1 367 1 330 1 119 1 5 1 342 1 
211 1 56 1 5 1 87 1 149 1 218 1 369 1 201 1 40 1 276 1 178 1 322 1 20 1 330 1 188 1 119 2 357 1 
0 3 53 3 109 2 55 2 56 5 293 1 58 2 59 3 294 2 5 8 199 2 342 1 201 6 204 1 247 3 348 1 248 2 76 1 352 1 353 2 254 2 20 4 307 3 80 2 119 8 308 2 82 3 28 2 211 12 213 1 86 2 364 2 87 9 167 2 130 6 367 1 366 2 218 5 131 6 369 4 370 1 170 2 38 4 40 3 42 2 276 5 45 2 230 1 178 4 321 10 322 4 323 1 283 3 330 2 
211 6 109 1 264 1 113 1 56 1 364 2 5 5 87 8 130 5 218 1 131 5 369 2 370 1 201 3 133 1 40 1 248 2 42 2 276 1 45 2 178 2 179 1 75 1 322 2 181 1 253 1 254 2 185 1 20 2 140 1 330 2 119 5 308 2 24 1 28 1 
109 1 238 1 56 1 31 1 5 2 216 1 240 1 87 2 8 1 242 1 369 1 271 1 226 1 374 1 248 2 276 1 45 2 178 1 322 1 78 1 254 1 325 1 20 1 326 1 48 1 23 1 143 1 210 1 
178 1 5 1 322 1 87 1 367 1 20 1 330 1 369 1 119 1 342 1 
211 10 109 1 248 2 42 2 58 1 364 2 45 2 5 5 87 5 254 2 130 5 131 5 119 5 308 2 201 5 
330 1 56 1 218 1 276 1 119 1 40 1 
0 1 108 1 53 4 260 1 213 2 56 3 5 2 87 2 218 4 369 2 370 2 373 1 38 1 40 2 203 1 247 4 276 3 208 1 230 2 178 1 321 1 76 1 180 1 322 2 182 1 20 2 283 4 307 1 28 2 
0 1 53 1 265 1 214 1 295 1 194 1 216 1 8 2 242 2 10 1 11 1 37 1 38 1 224 1 226 3 39 1 275 1 227 1 247 1 228 1 230 1 321 1 325 2 283 1 285 1 79 1 307 1 332 1 23 3 82 1 145 2 210 2 
211 4 251 1 5 2 178 1 322 1 87 1 130 2 20 1 131 2 330 2 369 1 119 4 370 1 201 2 28 1 
162 1 297 1 372 1 
162 1 297 1 372 1 
111 1 297 1 155 1 372 1 120 1 
162 1 297 1 372 1 
297 1 371 1 372 1 
297 1 371 1 372 1 
297 1 371 1 372 1 
297 1 372 1 
127 1 258 1 
374 1 228 4 248 1 113 1 251 1 101 1 295 8 194 1 279 1 253 1 254 1 117 2 140 1 48 1 271 1 285 1 12 2 24 1 83 4 224 1 37 1 27 1 145 2 
113 1 295 11 194 2 271 1 12 2 37 2 224 2 374 1 228 5 174 1 248 2 42 1 251 1 101 1 279 1 253 2 254 1 104 1 117 3 140 1 48 1 285 2 106 1 308 1 24 1 83 6 27 1 145 4 
264 1 113 1 364 2 295 19 194 3 271 1 220 1 12 3 37 3 224 3 133 1 374 1 228 10 174 1 248 3 42 2 251 1 101 1 75 1 279 1 181 1 253 1 104 1 254 3 117 4 140 1 48 1 285 3 308 2 24 1 83 9 27 1 145 6 
264 1 113 1 364 1 295 17 194 3 271 1 220 1 12 3 37 3 224 3 133 1 374 1 228 7 174 1 248 3 42 2 251 1 101 1 75 1 279 1 181 1 253 1 104 2 254 2 117 5 140 1 48 1 285 3 308 2 24 1 83 10 27 1 145 6 
374 1 228 4 248 1 113 1 251 1 101 1 295 8 194 1 279 1 253 1 254 1 117 2 140 1 48 1 271 1 285 1 12 2 24 1 83 4 224 1 37 1 27 1 145 2 
264 1 113 1 364 2 295 12 194 1 12 1 37 1 224 1 133 1 228 6 248 2 42 2 75 1 279 1 181 1 253 1 104 1 254 2 117 2 140 1 285 1 308 2 24 1 83 6 145 2 
264 1 113 1 364 1 295 18 194 4 271 1 220 2 12 3 37 4 224 4 133 1 374 1 228 8 174 1 248 3 42 2 251 1 101 1 75 1 279 1 181 1 253 1 104 2 254 2 117 5 140 1 48 1 285 4 308 2 24 1 83 10 27 1 145 8 
264 1 113 1 364 2 295 16 194 4 220 2 12 3 37 4 224 4 133 1 228 7 248 3 42 3 97 1 75 1 279 1 181 1 253 1 104 3 254 2 117 6 140 1 285 4 308 3 24 1 83 9 145 8 
374 3 228 4 248 1 295 7 101 2 254 1 104 3 117 6 48 3 271 1 12 3 83 3 27 1 
264 1 113 1 364 1 295 18 194 4 271 1 220 2 12 3 37 4 224 4 133 1 374 1 228 8 248 3 42 2 97 1 251 1 101 1 75 1 279 1 181 1 253 1 104 1 254 2 117 4 140 1 48 1 285 4 308 2 24 1 83 10 27 1 145 8 
374 1 228 4 248 1 251 1 295 8 101 1 194 2 254 1 104 1 117 3 48 1 271 1 285 2 220 1 12 2 83 4 224 2 37 2 145 4 27 1 
374 1 228 3 248 1 251 1 101 1 295 6 139 1 254 1 117 2 48 1 271 1 12 2 83 3 27 1 
228 2 174 1 248 1 42 1 364 1 295 4 194 1 254 1 104 1 117 2 285 1 12 1 308 1 224 1 37 1 83 2 145 2 
228 4 248 1 113 1 42 1 364 1 295 7 253 2 254 1 104 1 117 2 12 1 106 1 308 1 24 1 83 3 
364 2 295 23 194 2 271 1 220 2 12 5 224 2 37 2 374 2 173 1 228 12 248 3 347 1 42 2 251 1 101 1 305 1 253 2 104 4 254 3 117 9 48 2 285 2 308 2 106 1 24 2 83 11 27 1 145 4 
253 1 228 1 295 1 
295 1 24 1 83 1 
228 3 174 1 248 1 42 1 58 1 364 1 295 6 194 1 104 1 254 1 117 3 285 1 308 1 12 2 37 1 224 1 83 3 145 2 
264 1 113 1 364 2 295 12 194 1 12 1 37 1 224 1 133 1 228 6 248 2 42 2 75 1 279 1 181 1 253 1 104 1 254 2 117 2 140 1 285 1 308 2 24 1 83 6 145 2 
374 1 228 3 248 1 295 6 254 1 104 1 117 2 48 1 271 1 12 1 83 3 
374 1 228 2 101 1 295 3 194 1 305 1 104 1 117 2 48 1 285 1 220 1 12 1 83 1 224 1 37 1 145 2 27 1 
374 2 228 5 238 1 248 2 295 10 194 1 279 1 104 2 254 2 117 5 48 2 285 1 271 1 12 3 37 1 224 1 83 5 145 2 
248 1 42 1 295 2 194 1 279 1 104 1 117 1 285 1 224 1 37 1 83 2 145 2 
228 2 248 1 42 1 364 1 295 4 194 1 279 1 254 1 104 1 117 2 285 1 12 1 308 1 224 1 37 1 83 2 145 2 
374 1 228 2 97 1 295 3 194 3 279 1 305 1 104 1 117 2 48 1 285 3 220 1 12 1 224 3 37 3 83 1 145 6 
110 1 113 1 364 3 295 34 194 5 271 2 220 2 12 7 37 5 224 5 315 1 374 3 228 18 174 1 248 5 42 3 97 1 251 1 101 1 279 1 305 1 253 4 104 5 254 5 117 12 327 1 48 3 285 5 106 1 308 3 24 3 83 16 27 1 145 10 
274 1 275 1 242 1 286 1 23 1 14 1 226 1 
166 1 61 1 261 1 94 1 299 1 
0 1 260 1 53 1 247 1 139 1 283 1 307 1 230 1 38 1 321 1 180 1 
0 1 275 1 53 1 247 1 230 1 321 1 158 1 283 1 8 1 242 1 10 1 307 1 11 1 23 2 82 1 38 1 210 1 226 2 
0 1 53 1 213 1 123 1 294 1 240 1 8 2 242 2 10 1 11 1 38 1 226 2 275 1 247 1 153 1 321 3 353 1 158 1 283 1 307 2 23 2 82 2 210 1 
0 1 53 2 213 1 123 1 294 1 240 1 8 2 242 2 10 1 38 1 226 2 275 1 247 2 153 1 321 3 353 1 158 1 378 1 283 2 160 1 307 2 23 2 82 2 210 1 
0 1 53 3 247 3 213 1 163 1 55 1 56 2 276 2 59 1 294 1 230 1 321 4 353 1 366 1 283 3 330 1 218 1 160 1 119 1 307 1 65 1 82 1 38 1 
0 1 53 3 247 3 213 1 55 1 56 2 276 2 59 1 294 1 230 1 321 4 353 1 366 1 283 3 330 1 218 1 160 1 199 1 119 1 307 1 82 1 38 1 
0 1 53 1 247 1 283 1 38 1 171 1 
259 1 0 2 1 1 53 6 247 7 96 1 348 1 230 2 321 3 323 1 232 1 64 1 283 7 233 1 368 1 92 1 307 2 66 1 82 1 38 3 171 1 
0 1 53 1 265 1 214 2 266 1 295 6 194 2 268 1 8 1 242 1 271 1 10 1 11 1 12 2 38 1 224 2 37 2 226 2 374 1 275 2 247 1 228 3 248 1 348 1 71 1 251 1 101 1 321 1 158 1 254 1 117 2 283 1 48 1 285 2 79 1 307 1 332 2 23 2 334 1 83 3 82 1 257 1 27 1 145 4 26 1 210 1 52 1 
236 1 53 1 86 1 55 1 56 3 59 1 5 1 87 1 167 1 367 1 366 1 218 2 369 2 199 1 170 1 342 1 40 1 247 1 276 3 230 1 178 2 76 1 321 2 322 2 20 2 283 1 330 1 119 1 
0 1 53 2 247 2 348 1 55 1 321 2 323 1 352 1 283 2 307 1 82 1 38 2 171 1 
0 1 53 4 260 1 247 4 348 1 230 1 180 1 321 1 283 4 160 1 307 1 38 1 289 1 
0 1 172 1 53 2 247 2 313 1 213 1 283 2 368 1 92 1 307 1 273 1 38 2 321 1 82 1 
0 1 53 1 247 1 283 1 29 1 229 1 243 1 230 1 303 1 38 1 
259 1 0 1 53 2 247 2 348 1 73 1 321 1 283 2 307 1 66 1 38 1 
0 2 260 1 53 4 1 1 247 5 213 1 348 1 230 1 180 1 321 3 232 1 283 5 307 2 66 1 38 2 289 1 
0 2 260 1 53 4 247 5 213 1 348 1 230 1 180 1 321 3 232 1 283 5 105 1 307 2 66 1 38 2 289 1 
0 1 275 1 53 1 247 1 230 1 321 1 158 1 378 1 283 1 8 1 242 1 10 1 307 1 23 2 82 1 38 1 210 1 226 2 
0 1 53 1 247 1 213 1 96 1 321 1 323 1 283 1 368 1 92 1 307 1 82 1 38 2 
41 1 99 1 156 1 302 1 242 1 298 1 23 1 361 1 226 1 
74 1 302 1 278 1 
275 1 175 1 99 1 156 1 302 1 
236 1 275 1 68 1 123 1 153 1 175 2 98 1 56 2 276 2 74 1 99 2 302 1 156 2 240 1 278 1 366 1 328 1 330 1 119 1 
33 1 139 1 17 1 340 1 
33 1 17 1 136 1 340 1 272 1 32 1 15 1 
49 1 272 1 193 1 
17 1 136 1 32 3 19 1 33 1 197 1 9 1 272 3 340 1 225 1 15 1 152 2 
300 1 33 1 17 1 136 1 340 1 272 2 44 1 32 2 15 1 
136 1 17 1 229 1 137 1 32 1 197 1 62 1 355 1 272 1 243 1 15 1 
33 1 197 1 17 1 136 1 272 1 32 1 15 1 
33 2 197 1 136 1 340 1 272 1 32 1 15 1 
17 1 136 2 32 2 89 1 33 1 197 1 272 2 290 1 15 2 121 1 
292 1 136 1 17 2 177 1 44 2 32 3 304 1 33 1 197 1 355 1 340 1 272 3 15 1 
54 1 17 1 29 1 136 1 229 1 44 1 32 2 33 1 197 1 62 1 340 1 243 2 272 2 316 1 15 1 
300 1 136 2 17 2 177 1 44 2 209 1 32 4 33 1 197 1 355 1 340 1 272 4 15 2 
33 1 197 1 17 1 136 1 340 1 272 1 32 1 15 1 
136 1 17 3 177 1 44 2 19 1 32 4 33 2 355 1 9 1 340 2 272 4 36 1 152 1 15 1 
345 1 17 1 136 1 44 1 32 2 157 1 33 1 197 1 150 1 272 2 340 1 15 1 
17 1 136 1 32 3 19 2 33 1 197 1 9 1 272 3 340 1 13 1 15 1 152 2 
282 2 249 1 17 2 336 1 
197 1 136 1 272 1 132 1 32 1 15 1 
33 1 197 1 17 1 136 1 340 1 272 2 44 1 304 1 32 2 15 1 
239 1 
33 1 197 1 17 1 136 1 340 1 272 1 32 1 15 1 
33 1 197 1 17 1 136 1 340 1 272 3 44 1 304 1 152 1 32 3 15 1 
355 1 17 1 177 1 36 1 
33 1 17 1 

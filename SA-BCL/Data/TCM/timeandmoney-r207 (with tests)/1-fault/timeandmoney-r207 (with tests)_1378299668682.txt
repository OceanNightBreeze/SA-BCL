#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 37 (177,364) (177,364) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 37 (177,364) (177,364) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 37 (177,364) (177,364) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 37 (177,364) (177,364) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
364 1 154 1 275 1 303 1 284 1 57 1 37 1 169 1 192 1 39 1 177 1 
364 1 154 1 275 1 303 1 284 1 57 1 37 1 169 1 192 1 39 1 177 1 
364 1 154 1 275 1 303 1 284 1 57 1 37 1 169 1 192 1 39 1 177 1 
364 1 154 1 275 1 303 1 284 1 57 1 37 1 169 1 192 1 39 1 177 1 
275 1 162 1 242 1 57 1 212 1 126 1 318 1 338 3 192 4 205 2 280 1 195 3 154 1 344 1 62 1 284 4 94 2 77 1 
275 1 162 1 57 1 338 1 192 2 280 1 154 1 344 1 62 1 119 1 233 1 377 1 284 2 285 1 169 1 39 1 
79 1 275 1 57 2 242 1 338 2 192 3 205 1 195 1 154 2 344 1 62 1 284 3 39 1 
56 1 333 1 242 3 57 2 212 1 126 1 338 5 318 1 192 9 195 7 154 2 344 1 62 1 77 1 39 1 79 1 40 1 275 1 162 1 205 4 178 1 280 1 284 9 94 2 
56 1 333 1 242 3 57 2 212 1 126 1 338 5 318 1 192 9 195 7 154 2 344 1 62 1 77 1 39 1 79 1 40 1 275 1 162 1 205 4 178 1 280 1 284 9 94 2 
352 1 22 1 130 1 
130 1 340 2 348 1 
145 2 293 2 149 2 331 2 106 2 227 1 15 1 78 2 
145 2 147 1 125 1 293 3 149 2 243 1 341 1 216 1 32 1 247 1 174 2 60 1 3 1 196 2 297 1 106 3 371 1 9 2 78 2 276 1 227 1 253 1 164 1 13 2 356 1 15 1 85 1 206 1 257 1 88 2 142 1 331 2 234 1 312 1 24 1 236 1 286 1 
145 1 293 1 149 1 331 1 106 1 28 1 163 1 227 1 11 1 78 1 
109 1 149 1 293 1 28 1 294 1 130 1 116 1 66 1 48 1 106 1 157 1 22 1 300 1 201 1 
145 1 109 1 149 1 293 1 28 1 294 2 130 1 116 1 331 1 66 2 106 1 157 1 22 1 201 1 78 1 
66 1 222 1 294 1 123 1 244 1 
66 2 22 1 222 1 294 2 130 1 123 1 58 1 217 1 
66 1 294 1 123 1 
145 1 149 1 293 1 28 1 163 1 227 1 11 1 294 1 66 1 331 1 106 1 135 1 222 1 78 1 
130 1 
165 1 66 2 22 1 222 1 294 2 130 1 123 1 217 1 
325 1 42 2 151 1 368 1 294 5 337 2 130 1 12 1 115 1 217 1 104 1 307 1 19 1 66 5 22 1 222 2 235 2 123 2 361 1 
352 1 15 1 
145 1 149 2 293 2 15 2 343 1 331 1 106 2 313 1 78 1 
240 1 20 1 82 1 
147 1 293 1 356 1 216 1 341 1 15 1 247 1 174 1 281 1 3 1 196 1 257 1 88 1 297 1 106 1 371 1 
145 1 149 5 293 5 317 1 320 1 255 2 15 1 265 1 133 1 331 4 48 1 106 5 313 1 78 4 
293 2 149 2 331 2 106 2 271 1 28 1 163 1 78 2 
147 1 149 1 293 2 82 1 341 1 216 1 356 1 255 1 247 1 133 1 174 1 3 1 196 1 257 1 88 1 297 1 331 1 106 2 371 1 78 1 
145 1 293 3 149 3 331 3 106 3 15 1 255 1 78 3 
293 1 149 1 331 1 106 1 28 1 163 1 78 1 
145 1 343 1 293 1 149 1 331 1 106 1 28 1 313 1 78 1 
145 2 147 1 125 1 293 4 149 3 28 1 243 1 153 1 294 1 341 1 216 1 103 1 32 1 247 1 133 1 174 1 60 1 3 1 196 1 297 1 106 4 157 1 371 1 201 1 9 1 78 3 109 1 276 1 227 1 253 1 164 1 13 2 356 1 116 1 15 1 255 1 257 1 88 1 331 3 66 1 234 1 24 1 313 1 236 1 
265 1 293 2 149 2 331 1 48 1 106 2 15 1 78 1 255 1 
145 1 109 1 149 3 293 3 28 1 294 1 130 1 116 1 103 1 255 2 133 1 155 1 66 1 331 3 106 3 157 1 313 1 201 1 78 3 
145 1 149 2 293 2 82 1 255 1 20 1 331 2 106 2 313 1 78 2 
247 1 174 1 3 1 147 1 257 1 196 1 88 1 297 1 293 1 106 1 371 1 341 1 216 1 356 1 15 1 
247 1 174 1 3 1 147 1 196 1 88 1 297 1 293 1 106 1 311 1 371 1 341 1 216 1 287 1 15 1 
240 2 98 1 125 2 366 1 243 1 339 1 214 1 129 1 60 1 72 1 250 1 136 1 9 4 347 1 276 1 304 1 253 1 82 2 13 2 206 2 20 2 359 1 234 1 236 1 
293 1 149 1 331 1 157 1 106 1 28 1 271 1 78 1 
172 1 308 1 
172 1 308 1 
310 1 101 1 
310 1 101 1 
310 1 101 1 
172 1 308 1 252 1 
172 1 308 1 252 1 
172 1 308 1 128 1 
71 1 34 1 172 2 308 2 310 1 101 1 
172 1 308 1 252 1 
172 1 308 1 38 1 
172 1 308 1 38 1 
172 1 308 1 38 1 
209 1 146 1 41 1 373 1 172 1 203 1 293 2 149 2 226 1 128 1 305 1 294 1 194 1 15 1 87 1 358 1 308 1 270 1 66 1 143 1 331 2 106 2 237 1 78 2 
146 2 41 2 172 2 375 1 353 1 173 1 294 2 130 1 194 1 34 1 358 3 180 1 308 2 249 1 270 2 143 2 66 2 273 2 160 1 
280 1 162 1 77 1 
280 1 119 1 162 1 
280 3 171 1 309 1 119 1 334 1 77 2 
280 2 171 1 119 1 189 1 334 1 77 1 
280 2 171 2 119 1 334 1 77 1 
209 1 365 2 366 1 152 2 151 3 339 1 337 1 294 5 340 3 130 2 217 1 266 1 197 1 222 4 348 1 325 1 108 1 42 1 304 1 12 2 357 2 256 1 87 1 359 1 66 5 184 1 183 1 22 1 235 1 123 1 237 1 25 1 
288 1 96 1 292 5 365 6 366 3 151 8 339 3 294 9 337 2 340 9 244 5 130 5 217 1 221 1 222 7 8 1 348 3 325 1 108 3 42 2 204 1 304 3 12 6 357 6 256 2 65 1 19 1 359 3 66 9 183 2 22 1 235 2 237 4 123 6 25 1 
365 2 151 3 152 1 366 1 337 1 294 3 339 1 130 3 340 4 266 1 222 2 348 2 108 1 42 1 304 1 12 2 256 1 357 2 19 1 359 1 66 3 184 1 183 1 22 1 235 1 237 1 
96 1 365 4 151 5 152 2 366 2 337 1 294 4 339 2 130 4 340 7 266 1 221 1 222 3 8 1 348 3 108 2 42 1 304 2 12 4 357 4 256 1 19 1 359 2 66 4 184 1 183 1 22 1 235 1 237 2 
247 1 352 1 324 1 
247 1 215 1 
150 1 
247 1 371 1 341 1 
247 1 329 1 
247 1 371 1 
247 3 258 1 63 1 324 2 371 1 341 1 
186 1 187 1 125 3 80 1 354 1 339 1 59 1 46 1 206 4 72 3 359 1 50 1 95 2 4 1 136 2 208 1 9 7 
186 1 187 1 125 3 80 1 354 1 339 1 59 1 46 1 206 4 72 3 359 1 50 1 95 2 4 1 136 2 208 1 9 7 
186 1 187 1 125 3 80 1 354 1 339 1 59 1 46 1 206 4 72 3 117 1 359 1 50 1 95 2 4 1 136 2 208 1 9 7 
186 5 54 1 187 2 125 15 366 3 243 1 339 4 193 1 59 2 2 1 60 1 33 1 72 10 175 1 4 1 136 5 9 31 108 3 80 1 276 1 354 1 304 3 253 1 228 1 13 2 46 2 18 4 206 16 359 4 50 1 68 3 95 3 379 1 208 2 
186 1 187 1 125 4 210 1 243 2 339 1 296 1 59 1 60 2 72 4 4 1 136 3 9 9 276 2 354 1 253 2 13 4 46 1 206 5 359 1 50 1 95 2 379 1 208 1 
147 1 291 1 57 1 263 1 338 1 192 2 216 1 174 1 195 1 269 1 196 1 154 1 344 1 62 1 35 1 220 1 298 1 134 1 77 1 39 1 301 1 275 1 139 1 162 1 280 2 88 1 141 1 309 1 119 1 284 2 
147 1 291 1 57 1 263 1 338 1 192 3 216 1 174 1 132 1 269 1 196 1 195 2 154 1 344 1 62 1 298 1 134 1 77 1 39 1 301 1 139 1 162 1 14 1 280 2 88 1 309 1 141 1 119 1 284 3 69 1 
147 1 291 1 263 1 338 1 192 2 216 1 174 1 269 1 196 1 195 2 344 1 62 1 298 1 134 1 77 1 39 1 162 1 14 1 280 2 88 1 141 1 309 1 119 1 284 2 69 1 
239 1 147 1 148 1 57 1 192 1 216 1 247 1 132 1 174 1 3 1 196 1 269 2 154 1 88 1 141 2 284 1 134 2 76 1 345 1 371 1 372 1 159 1 39 2 
301 1 147 1 291 1 139 1 275 1 162 1 57 1 263 1 192 1 216 1 174 1 280 2 196 1 269 1 154 1 88 1 309 1 220 1 141 1 119 1 298 1 284 1 134 1 69 1 77 1 39 1 
219 1 
239 1 147 1 149 1 293 1 151 2 335 1 1 2 294 5 337 1 340 2 245 2 247 1 3 2 196 2 106 1 157 1 300 1 201 1 348 2 109 1 251 2 355 1 64 1 12 2 116 1 66 5 207 1 22 1 260 2 123 6 26 1 28 1 213 4 264 1 130 2 369 1 216 1 217 3 218 2 174 2 74 1 76 1 272 1 371 1 325 1 42 1 376 2 47 1 88 2 328 1 48 1 183 1 380 2 53 1 235 1 
293 1 149 1 28 1 213 2 294 3 217 1 106 1 74 1 157 1 272 1 300 1 201 1 109 1 355 1 376 1 116 1 165 1 47 1 66 3 48 1 207 1 123 2 
293 1 149 1 28 1 213 3 294 3 130 1 217 1 218 1 106 1 74 1 157 1 272 1 300 1 201 1 109 1 355 1 116 1 165 1 47 1 66 3 48 1 207 1 22 1 123 1 
293 1 149 1 28 1 213 3 294 3 1 1 130 1 217 1 218 1 106 1 74 1 157 1 272 1 300 1 201 1 109 1 355 1 376 1 116 1 165 1 47 1 66 3 48 1 207 1 22 1 123 2 
293 1 149 1 151 1 1 4 294 5 337 1 245 2 157 1 106 1 300 1 201 1 348 2 109 1 251 2 355 1 64 1 12 1 116 1 165 1 66 5 207 1 22 5 260 2 123 7 28 1 213 6 264 1 130 5 217 3 31 1 218 4 74 1 272 1 274 1 325 1 42 1 376 4 47 1 90 1 48 1 91 1 49 1 380 2 235 1 
149 1 293 1 151 1 28 1 213 4 264 1 1 2 337 1 294 4 130 2 340 2 245 2 217 2 218 2 74 1 106 1 157 1 272 1 300 1 201 1 348 2 325 1 109 1 42 1 251 2 355 1 64 1 376 2 12 1 116 1 47 1 66 4 207 1 48 1 22 1 260 2 380 2 53 1 235 1 123 4 
293 1 149 1 151 1 28 1 213 4 264 1 1 2 294 4 337 1 130 1 245 2 217 2 218 2 106 1 74 1 157 1 272 1 300 1 201 1 274 1 348 2 325 1 109 1 42 1 251 2 355 1 64 1 376 2 12 1 116 1 47 1 66 4 49 1 48 1 207 1 91 1 22 1 260 2 380 2 235 1 123 4 
293 1 149 1 151 1 28 1 213 4 264 1 1 2 294 4 337 1 130 1 245 2 217 2 218 2 106 1 74 1 157 1 272 1 300 1 201 1 274 1 348 2 325 1 109 1 42 1 251 2 355 1 64 1 376 2 12 1 116 1 47 1 66 4 49 1 48 1 207 1 91 1 22 1 260 2 380 2 235 1 123 4 
293 1 149 1 151 1 28 1 213 4 367 1 264 1 1 2 294 4 337 1 130 1 340 2 245 2 217 2 246 2 218 2 322 1 106 1 74 1 157 1 323 2 272 1 300 1 201 1 325 1 109 1 42 1 355 1 376 2 12 1 84 1 116 1 47 1 66 4 49 1 48 1 207 1 22 1 260 2 235 1 123 4 
293 1 149 1 151 1 28 1 213 5 264 1 337 1 294 4 1 3 130 1 245 2 217 2 31 1 218 3 106 1 74 1 157 1 272 1 300 1 201 1 274 1 348 2 325 1 109 1 42 1 251 2 355 1 64 1 12 1 376 3 116 1 47 1 66 4 49 1 91 1 48 1 207 1 22 1 260 2 380 2 235 1 123 5 
293 1 149 1 151 1 28 1 213 5 264 1 337 1 294 4 1 3 130 1 245 2 217 2 31 1 218 3 106 1 74 1 157 1 272 1 300 1 201 1 274 1 348 2 325 1 109 1 42 1 251 2 355 1 64 1 12 1 376 3 116 1 47 1 66 4 49 1 91 1 48 1 207 1 22 1 260 2 380 2 235 1 123 5 
149 1 293 1 151 1 28 1 213 4 264 1 1 2 337 1 294 4 130 1 340 2 245 2 217 2 246 2 218 2 74 1 106 1 157 1 323 2 272 1 300 1 201 1 325 1 109 1 42 1 355 1 376 2 12 1 116 1 84 1 47 1 66 4 207 1 48 1 22 1 260 2 53 1 235 1 123 4 
240 1 125 3 243 1 129 1 339 1 59 1 60 1 72 2 4 1 136 2 9 6 276 1 352 1 354 1 253 1 82 1 13 2 15 2 206 3 20 1 359 1 50 1 234 1 95 1 208 1 236 1 
186 1 240 11 125 6 366 2 243 2 339 2 32 1 60 2 33 1 72 2 175 1 107 1 136 1 9 14 108 2 276 2 304 1 253 2 82 11 306 1 13 4 15 1 18 3 206 8 142 1 20 4 359 1 92 1 378 1 68 3 234 2 314 1 236 1 
363 1 147 1 125 1 293 2 149 1 243 1 341 1 216 1 342 1 247 1 174 1 133 1 32 1 3 1 60 1 196 1 297 1 106 2 371 1 78 1 9 2 176 1 276 1 253 1 356 1 13 2 15 1 255 1 281 1 206 1 257 1 88 1 20 1 142 1 331 1 234 1 314 1 236 1 
186 4 240 7 147 2 188 1 149 1 293 3 243 3 339 3 341 2 59 1 247 2 3 1 60 3 196 3 297 2 106 3 4 1 9 20 202 1 108 2 354 1 304 2 253 3 13 6 356 2 15 2 255 1 206 10 257 2 20 7 359 3 21 2 360 2 24 2 69 1 208 1 314 1 125 10 366 2 216 2 32 1 174 3 133 1 72 8 73 2 136 4 371 2 78 1 224 2 225 1 276 3 82 7 88 3 142 1 331 1 50 1 95 1 234 3 236 3 
239 1 147 2 125 1 293 1 149 1 243 2 129 1 216 2 247 3 174 8 32 1 3 2 60 2 196 8 35 1 106 1 76 1 371 2 78 1 9 2 276 2 374 1 253 2 279 1 13 4 255 1 179 1 206 1 181 1 88 7 142 1 331 1 182 1 168 1 52 1 234 2 312 2 69 1 236 2 
145 1 240 1 125 2 149 1 293 1 366 1 243 1 339 1 60 1 72 1 106 1 136 1 78 1 9 3 108 1 276 1 304 1 253 1 45 1 82 1 13 2 206 1 20 1 331 1 359 1 234 1 313 1 314 1 236 1 
186 1 240 1 98 1 276 1 366 1 253 1 243 1 82 1 129 1 339 1 13 2 60 1 206 2 72 1 20 1 234 1 236 1 9 2 
240 1 125 2 276 1 304 1 253 1 243 1 82 1 129 1 13 2 60 1 72 1 20 1 359 1 234 1 250 1 136 1 236 1 9 2 
186 1 240 2 125 2 366 1 243 1 339 1 129 1 60 1 72 2 136 1 9 4 108 1 276 1 304 1 253 1 82 2 13 2 206 2 20 2 359 1 234 1 236 1 
186 1 240 1 98 1 276 1 366 1 253 1 243 1 82 1 339 1 13 2 179 1 60 1 206 2 72 1 20 1 234 1 236 1 9 2 
240 1 125 2 276 1 304 1 253 1 243 1 82 1 13 2 179 1 60 1 72 1 20 1 359 1 234 1 250 1 136 1 236 1 9 2 
186 1 240 2 125 2 366 1 243 1 339 1 60 1 72 2 136 1 9 4 108 1 276 1 304 1 253 1 82 2 13 2 179 1 206 2 20 2 359 1 234 1 236 1 
186 1 240 2 108 1 125 2 276 1 366 1 304 1 253 1 243 1 82 2 339 1 13 2 60 1 206 2 72 2 20 2 359 1 234 1 136 1 236 1 9 4 
147 1 125 1 293 1 243 1 341 1 216 1 174 1 247 1 32 1 3 1 60 1 196 1 297 1 106 1 371 1 9 2 276 1 253 1 356 1 13 2 15 1 206 1 257 1 88 1 142 1 234 1 24 1 236 1 
147 1 125 1 293 1 243 1 341 1 216 1 174 1 247 1 32 1 3 1 60 1 196 1 297 1 106 1 371 1 9 2 276 1 113 1 253 1 13 2 15 1 206 1 88 1 142 1 311 1 234 1 236 1 287 1 
186 1 240 2 125 2 366 1 243 1 339 1 60 1 72 2 136 1 9 4 108 1 276 1 304 1 253 1 82 2 13 2 206 2 20 2 359 1 234 1 314 1 236 1 
186 1 240 2 147 1 125 2 293 1 366 1 243 1 339 1 341 1 216 1 174 1 247 1 60 1 72 2 196 1 297 1 73 1 35 1 106 1 136 1 371 1 9 4 108 1 276 1 304 1 253 1 82 2 356 1 13 2 206 2 257 1 88 1 20 2 359 1 234 1 24 1 236 1 
145 1 186 1 240 1 125 1 149 1 293 1 366 1 243 1 339 1 60 1 72 1 106 1 78 1 9 3 108 1 111 1 276 1 304 1 253 1 82 1 13 2 206 2 20 1 359 1 331 1 234 1 313 1 314 1 236 1 
186 3 289 1 241 1 125 10 100 2 366 3 102 1 243 2 295 1 296 1 339 3 60 2 33 1 72 6 175 1 136 3 9 19 108 3 350 2 276 2 304 3 253 2 81 1 13 4 18 2 206 9 359 3 68 1 122 1 185 1 
186 2 289 1 241 2 125 12 100 4 366 3 127 1 102 1 243 3 296 1 339 3 319 1 60 3 72 4 175 2 136 2 138 1 9 26 108 3 350 1 276 3 326 1 304 2 253 3 81 1 13 6 206 14 18 2 89 1 359 2 330 1 68 2 379 2 122 2 
186 4 289 1 241 2 125 21 100 4 366 4 127 1 102 1 243 3 296 1 339 5 319 1 59 1 60 3 33 1 72 8 175 3 4 1 136 4 138 1 9 41 108 4 350 1 276 3 354 1 326 1 304 4 253 3 81 1 13 6 16 1 18 4 206 20 89 1 330 1 359 5 50 1 68 3 95 1 379 1 208 1 122 1 185 1 
186 3 289 1 241 2 125 18 100 4 366 4 127 1 102 1 243 4 296 1 339 5 319 1 59 1 60 4 33 1 72 7 175 3 4 1 136 4 138 1 9 38 108 4 350 1 276 4 354 1 326 1 304 3 253 4 81 1 13 8 16 1 18 4 206 20 89 1 330 1 359 4 50 1 68 3 95 1 379 2 208 1 122 1 185 1 
186 7 289 1 241 1 125 25 100 4 366 7 127 1 102 1 243 2 296 1 339 8 319 1 59 1 60 2 33 2 72 14 175 2 4 1 136 7 138 1 9 52 108 7 350 1 276 2 354 1 326 1 304 7 253 2 81 1 13 4 18 4 206 27 89 1 330 1 359 8 50 1 378 2 68 4 95 1 379 1 208 1 122 1 
146 1 105 1 41 1 34 1 172 1 308 1 270 1 143 1 173 1 160 1 
128 1 305 1 
223 1 146 1 97 1 41 1 172 1 308 1 270 1 143 1 124 1 
262 1 252 1 
71 1 6 1 38 1 
146 1 41 1 172 1 375 1 173 1 294 1 130 1 194 1 34 1 358 2 180 1 308 1 249 1 270 1 66 1 143 1 273 1 160 1 
146 1 41 1 172 1 375 1 173 1 294 1 130 1 194 1 34 1 358 2 180 1 308 1 249 1 270 1 66 1 143 1 273 1 160 1 
146 1 41 1 172 1 375 1 173 1 294 1 130 1 194 1 34 1 358 2 180 1 308 1 249 1 270 1 66 1 143 1 273 1 160 1 
71 1 262 1 252 1 
71 1 262 1 252 1 
6 1 38 1 
71 1 6 1 38 1 
373 1 226 1 
146 1 209 1 172 1 293 2 149 2 128 1 294 1 270 1 106 2 200 1 222 1 273 1 78 2 41 1 373 1 203 1 375 1 226 1 305 1 15 1 358 1 87 1 308 1 66 1 143 1 331 2 237 1 
147 1 125 1 27 1 293 2 149 2 243 1 216 1 247 1 174 2 32 1 60 1 196 2 61 1 106 2 5 1 371 1 9 2 276 1 253 1 279 1 13 2 86 1 206 1 88 2 142 1 182 1 93 1 234 1 312 2 314 1 236 1 
349 1 147 1 139 1 291 1 162 1 263 1 230 1 216 1 174 2 280 2 196 2 88 2 309 1 141 1 35 1 119 1 261 1 69 1 77 1 
349 1 147 1 139 1 291 1 162 1 29 1 263 1 216 1 174 1 280 2 196 1 88 1 309 1 141 1 119 1 69 1 77 1 
239 1 147 1 216 1 247 1 174 1 3 1 196 1 88 1 282 1 141 1 261 1 76 1 345 1 371 1 
349 1 147 1 139 1 291 1 162 1 263 1 230 1 216 1 174 1 280 2 196 1 88 1 309 1 141 1 119 1 261 1 69 1 77 1 
278 1 
307 1 151 1 352 1 22 1 130 1 12 1 361 1 
151 1 337 1 294 1 340 1 130 2 217 1 348 1 325 1 42 1 251 1 64 1 12 1 66 1 22 1 380 1 235 1 123 1 
147 4 151 9 190 1 335 1 337 4 294 5 339 2 340 12 341 3 247 10 3 1 196 3 348 6 108 2 304 2 12 8 116 2 307 1 357 6 258 1 167 2 66 5 359 2 67 2 23 1 22 2 123 5 361 1 362 1 316 1 365 6 366 2 211 2 130 8 370 2 215 3 216 3 217 3 174 3 267 2 35 1 371 3 324 2 325 4 224 2 42 4 140 1 277 2 229 2 88 3 329 2 283 2 183 2 235 4 
365 5 151 8 366 2 191 1 335 1 294 1 337 2 339 2 340 6 130 5 319 1 217 1 267 2 175 1 138 1 348 3 325 2 110 1 108 2 42 2 326 1 304 2 229 1 12 5 357 5 18 1 89 1 66 1 330 1 359 2 183 1 68 1 22 2 235 2 123 1 
145 1 293 1 149 1 151 2 28 1 337 1 294 1 339 2 59 1 267 2 106 1 4 1 135 1 78 1 325 1 42 1 163 1 227 1 11 1 229 1 12 2 232 1 66 1 359 1 331 1 91 1 208 1 235 1 
325 1 42 1 151 1 337 1 12 1 130 1 307 1 22 1 235 1 361 1 
224 1 108 2 365 5 366 2 151 5 304 2 339 2 229 1 12 5 340 10 130 5 357 5 267 2 359 2 348 5 
66 1 22 1 294 1 130 1 123 1 217 1 
239 1 147 1 151 2 335 2 337 2 294 3 369 1 216 1 217 2 131 1 247 1 174 4 3 2 196 4 76 1 371 1 325 1 42 2 140 2 12 2 231 1 19 1 88 4 328 1 66 3 183 2 23 1 235 2 123 4 
145 2 147 1 125 1 293 3 149 2 243 1 216 1 341 1 32 1 174 1 247 1 60 1 3 1 196 1 297 1 106 3 371 1 9 1 78 2 276 1 227 1 253 1 164 1 13 2 356 1 15 1 257 1 88 1 331 2 234 1 24 1 236 1 
325 1 42 1 365 2 151 1 335 1 337 1 340 4 12 2 130 4 357 2 183 1 95 1 22 2 235 1 348 2 
41 1 143 1 381 1 
41 1 143 1 381 1 
41 1 166 1 373 1 143 1 160 1 
41 1 143 1 381 1 
41 1 143 1 346 1 
41 1 143 1 346 1 
41 1 143 1 346 1 
41 1 143 1 
172 1 308 1 
186 1 125 4 276 2 354 1 253 2 243 2 339 1 13 4 59 1 206 4 60 2 72 3 359 1 50 1 95 1 379 1 4 1 136 2 208 1 9 8 
206 3 72 2 125 3 359 1 352 1 50 1 354 1 95 1 4 1 136 2 339 1 208 1 9 6 59 1 
186 1 108 1 125 2 276 1 366 1 304 1 336 1 253 1 243 1 339 1 13 2 60 1 206 2 72 2 359 1 136 1 9 4 
186 1 108 1 125 4 366 1 304 1 339 1 18 2 206 3 33 1 72 2 175 1 359 1 68 1 136 1 9 7 
186 4 125 12 366 2 243 2 339 3 59 2 33 1 60 2 72 9 248 1 4 1 136 5 9 23 108 2 276 2 354 1 304 2 253 2 13 4 206 11 18 2 359 3 92 1 50 1 68 2 378 1 95 1 379 2 208 2 
18 1 125 1 9 1 
206 1 68 1 9 1 
224 1 186 1 108 1 125 3 276 1 366 1 304 1 243 1 253 1 336 1 339 1 13 2 60 1 206 3 72 3 359 1 136 2 9 6 
186 1 125 6 366 2 243 1 296 1 339 2 319 1 60 1 72 2 175 1 136 1 138 1 9 12 108 2 276 1 326 1 304 2 253 1 13 2 18 1 206 6 89 1 330 1 359 2 68 1 
186 1 125 3 339 1 59 1 206 3 72 2 359 1 4 1 136 1 208 1 9 6 
186 1 125 2 276 1 354 1 253 1 243 1 13 2 59 1 206 1 60 1 72 2 248 1 50 1 379 1 136 1 208 1 9 3 
186 2 125 5 276 1 243 1 253 1 296 1 339 2 13 2 59 2 60 1 206 5 72 5 232 1 359 2 4 1 136 3 208 2 9 10 
186 1 276 1 366 1 253 1 243 1 296 1 339 1 13 2 60 1 206 2 72 1 9 2 
186 1 108 1 125 2 276 1 366 1 304 1 253 1 243 1 296 1 339 1 13 2 60 1 206 2 72 2 359 1 136 1 9 4 
186 1 125 2 276 3 253 3 243 3 296 1 13 6 59 1 60 3 206 1 72 2 248 1 379 1 136 1 208 1 185 1 9 3 
186 5 54 1 125 18 366 3 336 1 243 5 296 1 339 5 59 3 2 1 60 5 33 1 72 12 248 1 175 1 4 2 136 7 9 34 108 3 276 5 354 1 304 3 228 1 253 5 13 10 18 4 206 16 359 5 50 1 68 3 95 1 379 2 208 3 185 1 
125 4 243 1 339 1 296 1 59 1 60 1 72 2 175 1 4 1 136 2 9 8 276 1 354 1 253 1 13 2 18 1 206 4 89 1 359 1 68 1 50 1 95 1 208 1 
186 1 125 5 366 1 243 2 336 1 296 1 339 2 59 1 60 2 33 1 72 3 175 1 4 1 136 2 9 11 108 1 276 2 354 1 253 2 13 4 18 2 206 6 89 1 359 1 50 1 68 1 95 1 208 1 
186 1 125 10 366 2 336 1 243 3 296 1 339 3 319 1 59 1 60 3 72 4 175 1 4 1 136 3 138 1 9 19 108 2 276 3 354 1 326 1 304 2 253 3 13 6 18 1 206 9 89 1 330 1 359 3 50 1 68 1 95 1 379 1 208 1 
186 2 125 7 366 2 336 1 243 3 296 1 339 3 319 1 59 1 60 3 72 5 175 1 4 1 136 3 138 1 9 17 108 2 276 3 354 1 326 1 304 1 253 3 13 6 18 1 206 10 89 1 330 1 359 2 50 1 68 1 95 1 379 1 208 1 
125 4 243 1 339 1 296 1 59 1 60 1 72 2 175 1 4 1 136 2 9 8 276 1 354 1 253 1 13 2 18 1 206 4 89 1 359 1 68 1 50 1 95 1 208 1 
186 1 125 6 366 2 243 1 296 1 339 2 319 1 60 1 72 2 175 1 136 1 138 1 9 12 108 2 276 1 326 1 304 2 253 1 13 2 18 1 206 6 89 1 330 1 359 2 68 1 
186 2 125 8 366 2 336 1 243 4 296 1 339 3 319 1 59 1 60 4 72 5 175 1 4 1 136 3 138 1 9 18 108 2 276 4 354 1 326 1 304 1 253 4 13 8 18 1 206 10 89 1 330 1 359 2 50 1 68 1 95 1 379 2 208 1 
186 3 125 7 366 3 243 4 296 1 339 3 319 1 60 4 72 6 175 1 136 3 138 1 9 16 108 3 276 4 326 1 304 2 253 4 13 8 18 1 206 9 89 1 330 1 359 2 68 1 379 2 185 1 
186 3 125 4 354 1 339 1 59 3 206 3 72 6 359 1 50 2 4 1 136 3 208 3 9 7 
186 1 125 8 366 2 243 4 296 1 339 3 319 1 59 1 60 4 72 4 175 1 4 1 136 3 138 1 9 18 108 2 276 4 354 1 326 1 304 1 253 4 13 8 18 1 206 10 89 1 330 1 359 2 50 1 68 1 95 1 379 2 208 1 185 1 
265 1 293 1 149 1 106 1 48 1 75 1 15 1 
265 1 315 1 99 1 118 1 293 1 149 1 106 1 48 1 75 1 30 1 70 1 15 1 
247 1 174 1 239 1 3 1 147 1 196 1 88 1 352 1 76 1 371 1 216 1 
147 1 149 1 293 2 341 1 356 1 216 1 15 1 255 1 247 1 174 1 3 1 196 1 88 1 297 1 331 1 106 2 371 1 78 1 
147 1 293 2 149 2 28 1 216 1 341 2 174 1 247 3 196 1 297 1 106 2 157 1 371 2 201 1 78 2 140 1 277 1 356 1 15 1 255 1 88 1 329 1 331 1 
147 1 293 2 149 2 28 1 216 1 341 2 174 2 247 3 196 2 297 1 106 2 157 1 371 2 201 1 78 2 140 1 277 1 327 1 15 1 255 1 88 2 329 1 331 1 311 1 
147 1 140 1 277 1 83 1 294 2 130 1 116 1 341 1 215 1 216 1 327 1 174 3 247 4 3 1 196 3 268 1 88 3 329 1 66 2 22 1 371 1 324 1 123 1 
147 1 140 1 211 1 277 1 294 2 130 1 116 1 341 1 215 1 216 1 327 1 174 3 247 4 3 1 196 3 88 3 329 1 66 2 22 1 371 1 324 1 123 1 
174 1 147 1 196 1 88 1 52 1 216 1 
147 3 55 1 374 1 279 1 341 1 216 2 174 7 247 3 3 2 196 7 181 1 88 6 258 1 35 1 168 1 52 1 36 1 312 1 69 1 371 2 332 1 
240 1 147 1 125 3 293 2 149 1 243 2 339 1 341 1 216 1 59 1 247 1 174 1 60 2 72 2 196 1 297 1 35 1 73 1 106 2 4 1 136 2 371 1 9 6 78 1 276 2 354 1 253 2 82 1 13 4 356 1 15 2 255 1 86 1 206 3 257 1 88 1 20 1 359 1 331 1 50 1 95 1 234 2 360 1 24 1 208 1 314 1 236 2 
151 1 211 1 337 2 294 3 130 1 370 1 215 1 217 1 174 1 247 2 3 1 196 1 222 1 324 1 325 2 42 2 12 1 116 1 307 1 88 1 167 1 66 3 283 1 22 1 23 1 235 2 123 2 361 1 
147 2 190 1 341 1 216 1 174 2 247 2 196 2 88 2 258 1 35 1 52 1 324 1 371 1 
239 1 147 1 216 1 327 1 174 4 247 1 3 1 196 4 321 1 88 4 35 1 76 1 371 1 
238 1 170 1 202 1 147 2 55 1 140 1 341 1 216 1 174 2 247 1 196 2 88 2 371 1 332 1 
174 1 280 1 3 1 147 1 196 1 88 1 119 1 162 1 263 1 216 1 
247 1 174 2 147 1 196 2 88 2 61 1 35 1 371 1 69 1 279 1 216 1 
239 1 147 2 140 1 374 1 279 1 216 2 174 5 247 3 3 1 196 5 321 1 88 4 181 1 35 1 76 1 371 2 
239 1 147 2 140 1 112 1 279 1 216 2 174 5 247 3 3 1 196 5 321 1 88 4 181 1 35 1 76 1 371 2 
147 1 149 1 293 2 341 1 216 1 15 1 255 1 247 1 174 1 3 1 196 1 88 1 297 1 331 1 106 2 311 1 371 1 78 1 
147 2 55 1 140 1 341 1 216 1 174 1 247 1 196 1 88 1 258 1 36 1 371 1 332 1 
27 1 149 1 293 1 114 1 254 1 198 1 106 1 93 1 5 1 
198 1 158 1 199 1 
198 1 120 1 114 1 254 1 15 1 
109 1 28 1 294 2 114 2 130 1 116 1 254 2 103 1 15 1 66 2 157 1 198 1 22 1 199 1 158 1 222 1 120 2 201 1 7 1 
344 1 62 1 352 1 338 1 
154 1 344 1 62 1 284 1 57 1 338 1 192 1 
269 1 192 1 39 1 
275 1 57 1 338 1 192 3 154 1 62 1 344 1 156 1 377 2 284 3 299 1 121 1 
195 1 154 1 344 1 62 1 284 2 94 1 57 1 338 1 192 2 
205 1 280 1 154 1 275 1 162 1 284 1 126 1 57 1 338 1 192 1 77 1 
154 1 275 1 344 1 284 1 57 1 338 1 192 1 
154 1 275 1 344 2 62 1 284 1 57 1 192 1 
161 1 290 1 275 1 57 2 338 1 192 2 154 2 344 1 284 2 51 1 
40 1 275 1 56 1 57 1 242 1 338 2 192 3 205 1 195 2 154 1 344 1 62 1 284 3 
275 1 162 1 57 1 44 1 338 1 192 2 280 2 195 1 154 1 344 1 62 1 309 1 119 1 284 2 77 1 
275 1 57 2 242 1 318 1 338 2 192 4 205 1 195 2 154 2 344 1 62 1 284 4 94 1 
154 1 275 1 344 1 62 1 284 1 57 1 338 1 192 1 
57 1 242 1 338 3 192 4 205 1 195 2 154 1 344 2 62 2 377 1 144 1 284 4 299 1 121 1 
10 1 275 1 333 1 57 1 338 1 192 2 195 1 154 1 344 1 62 1 259 1 284 2 
275 1 43 1 57 1 338 1 192 3 154 1 62 1 344 1 377 2 284 3 299 1 121 2 
17 1 351 1 338 2 137 2 
154 1 275 1 302 1 284 1 57 1 192 1 
195 1 154 1 275 1 344 1 62 1 56 1 284 2 57 1 338 1 192 2 
0 1 
154 1 275 1 344 1 62 1 284 1 57 1 338 1 192 1 
195 1 154 1 275 1 344 1 62 1 56 1 377 1 284 3 57 1 338 1 192 3 
205 1 144 1 242 1 338 1 
344 1 338 1 

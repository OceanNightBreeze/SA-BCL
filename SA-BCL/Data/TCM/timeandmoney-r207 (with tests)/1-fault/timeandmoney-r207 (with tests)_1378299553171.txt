#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (54,180) (117,169) (117,169) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (54,180) (117,169) (117,169) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (54,180) (117,169) (117,169) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (54,180) (117,169) (117,169) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (54,180) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (54,180) 14 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (54,180) 14 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 1 349 1 247 1 218 1 291 1 54 1 240 1 117 1 224 2 82 1 118 1 57 1 180 1 169 1 62 2 371 1 
49 1 349 1 247 1 218 1 291 1 54 1 240 1 117 1 224 2 82 1 118 1 57 1 180 1 169 1 62 2 371 1 
49 1 349 1 247 1 218 1 291 1 54 1 240 1 117 1 224 2 82 1 118 1 57 1 180 1 169 1 62 2 371 1 
49 1 349 1 247 1 218 1 291 1 54 1 240 1 117 1 224 2 82 1 118 1 57 1 180 1 169 1 62 2 371 1 
49 1 349 1 247 1 218 1 262 1 50 1 5 1 291 1 177 1 210 2 240 1 306 3 26 2 27 1 224 4 354 1 30 3 62 4 
203 1 349 1 49 1 247 1 218 1 207 1 5 1 374 1 291 1 27 1 224 2 82 1 118 1 57 1 30 1 62 2 
54 1 349 1 247 1 218 1 224 1 62 1 
54 1 306 1 349 1 247 1 218 1 224 2 14 1 356 1 62 2 
54 1 306 1 349 1 247 1 218 1 224 2 14 1 356 1 62 2 
37 1 370 1 150 1 
225 1 156 2 37 1 
376 2 364 2 377 2 221 1 36 2 128 1 15 2 60 2 
63 1 194 1 219 1 221 1 36 3 274 1 68 2 275 1 38 1 317 1 91 1 364 3 40 2 345 1 143 2 144 1 259 1 15 2 72 1 181 1 261 1 327 2 204 1 145 2 76 1 206 1 164 1 300 1 128 1 301 1 133 1 376 2 238 1 377 2 55 1 217 1 60 2 
376 1 364 1 377 1 253 1 109 1 78 1 36 1 128 1 15 1 60 1 
230 1 78 1 36 1 315 1 20 1 37 1 8 1 377 1 364 1 56 1 370 1 228 1 182 1 46 1 
230 2 78 1 36 1 315 1 37 1 376 1 377 1 364 1 56 1 370 1 15 1 228 2 60 1 182 1 46 1 
230 1 185 1 288 1 313 1 228 1 
230 2 288 1 284 1 313 1 37 1 370 1 228 2 292 1 
230 1 288 1 228 1 
109 1 230 1 271 1 78 1 313 1 36 1 128 1 376 1 377 1 364 1 253 1 15 1 228 1 60 1 
37 1 
115 1 230 2 288 1 313 1 37 1 370 1 228 2 292 1 
310 1 230 5 331 1 34 2 127 1 4 1 288 2 313 2 37 1 273 2 89 1 90 2 292 1 101 1 366 1 105 1 370 1 120 1 228 5 
221 1 150 1 
74 1 221 2 36 2 249 1 376 1 377 2 364 2 15 1 60 1 
256 1 51 1 123 1 
63 1 145 1 76 1 221 1 36 1 164 1 274 1 38 1 91 1 364 1 40 1 55 1 345 1 143 1 61 1 181 1 
2 1 17 2 221 1 36 5 20 1 249 1 351 1 196 1 376 1 377 5 364 5 344 1 15 4 60 4 
297 1 364 2 377 2 109 1 78 1 36 2 15 2 60 2 
376 1 364 3 377 3 17 1 221 1 36 3 15 3 60 3 
364 1 377 1 109 1 78 1 36 1 15 1 60 1 
376 1 364 1 377 1 74 1 78 1 36 1 249 1 15 1 60 1 
171 1 63 1 194 1 219 1 221 1 36 4 315 1 274 1 249 1 68 1 275 1 38 1 317 1 91 1 364 4 40 1 344 1 345 1 143 1 144 1 259 1 15 3 228 1 181 1 182 1 46 1 327 2 204 1 145 1 125 1 230 1 76 1 17 1 206 1 78 1 164 1 128 1 133 1 376 2 377 3 55 1 56 1 217 1 60 3 
364 2 377 2 2 1 17 1 221 1 36 2 20 1 15 1 60 1 
230 1 125 1 17 2 78 1 36 3 315 1 249 1 37 1 376 1 151 1 377 3 364 3 344 1 56 1 15 3 228 1 60 3 182 1 46 1 
376 1 364 2 377 2 17 1 256 1 36 2 249 1 15 2 60 2 123 1 
63 1 145 1 76 1 221 1 36 1 164 1 274 1 38 1 91 1 364 1 40 1 55 1 345 1 143 1 181 1 
63 1 145 1 76 1 221 1 36 1 274 1 160 1 38 1 304 1 91 1 364 1 40 1 345 1 143 1 181 1 
219 1 194 2 359 1 140 1 87 1 275 1 68 4 256 2 324 1 144 1 259 1 123 2 327 2 97 1 206 1 232 1 51 2 373 1 300 2 333 1 166 1 25 1 217 1 170 1 
364 1 377 1 297 1 78 1 36 1 15 1 60 1 182 1 
63 1 145 1 76 1 17 1 36 2 164 1 274 1 38 1 91 1 377 1 364 2 40 1 344 1 55 1 345 1 143 1 15 1 60 1 181 1 123 1 
287 1 264 1 
287 1 264 1 
152 1 202 1 
152 1 202 1 
152 1 202 1 
282 1 287 1 264 1 
282 1 287 1 264 1 
287 1 264 1 88 1 
341 1 287 2 152 1 264 2 265 1 202 1 
282 1 287 1 264 1 
287 1 173 1 264 1 
287 1 173 1 264 1 
287 1 173 1 264 1 
287 1 230 1 205 1 174 1 33 1 221 1 36 2 264 1 332 1 88 1 290 1 320 1 364 2 377 2 70 1 338 1 369 1 15 2 190 1 228 1 60 2 124 1 153 1 285 1 
287 2 330 1 205 2 230 2 33 2 231 1 264 2 112 2 332 3 37 1 290 2 7 1 113 1 239 1 341 1 369 1 228 2 122 1 285 2 
240 1 49 1 291 1 
49 1 207 1 291 1 
240 2 337 1 323 1 220 1 207 1 291 3 
240 1 323 1 220 1 207 1 375 1 291 2 
240 1 323 1 220 2 207 1 291 2 
156 3 34 1 139 1 288 1 313 4 195 1 289 2 273 1 37 2 90 1 89 3 292 1 366 1 225 1 370 1 228 5 124 1 296 1 184 1 230 5 97 1 232 1 127 2 333 1 130 1 24 2 104 1 215 1 170 1 190 1 192 2 153 1 
156 9 34 2 312 1 288 6 157 1 313 7 195 3 37 5 273 2 90 2 89 8 292 1 361 1 366 1 225 3 197 1 120 1 370 1 16 1 228 9 348 1 230 9 97 3 185 5 232 3 127 6 333 3 130 2 24 6 241 5 104 2 215 1 170 3 192 6 153 4 
34 1 156 4 139 1 313 2 289 1 195 1 37 3 273 1 90 1 89 3 225 2 370 1 120 1 228 3 296 1 230 3 97 1 232 1 127 2 333 1 130 1 24 2 104 1 170 1 192 2 153 1 
156 7 34 1 312 1 139 1 157 1 313 3 289 2 195 2 37 4 273 1 90 1 89 5 361 1 225 3 370 1 120 1 228 4 296 1 230 4 97 2 232 2 127 4 333 2 130 1 24 4 104 1 170 2 192 4 153 2 
213 1 181 1 150 1 
93 1 181 1 
23 1 
76 1 38 1 181 1 
181 1 31 1 
38 1 181 1 
340 1 213 2 76 1 186 1 38 1 181 3 
328 1 97 1 110 2 194 3 299 1 300 4 333 1 68 7 250 1 69 1 166 2 303 1 25 3 378 1 28 1 45 1 161 1 
328 1 97 1 110 2 194 3 299 1 300 4 333 1 68 7 250 1 69 1 166 2 303 1 25 3 378 1 28 1 45 1 161 1 
85 1 328 1 97 1 110 2 194 3 299 1 300 4 333 1 68 7 250 1 69 1 166 2 303 1 25 3 378 1 28 1 45 1 161 1 
309 1 110 3 194 15 195 3 86 1 68 31 250 2 69 2 114 1 92 1 42 1 144 1 259 1 161 1 45 2 327 2 328 2 97 4 98 1 206 1 126 3 299 1 232 3 300 16 333 4 303 1 166 5 25 10 283 1 378 5 28 1 217 1 106 4 170 3 
65 1 110 2 194 4 86 1 68 9 250 1 69 1 144 2 259 2 45 1 327 4 328 1 97 1 206 2 299 1 300 5 333 1 166 3 303 1 25 4 378 1 217 2 28 1 83 1 
154 1 63 1 247 1 218 1 5 1 291 2 91 1 40 1 365 1 224 2 143 1 48 1 49 1 145 1 349 1 77 1 280 1 207 1 266 1 240 1 188 1 22 1 306 1 337 1 27 1 102 1 57 1 30 1 216 1 62 2 
154 1 63 1 247 1 5 1 291 2 91 1 40 1 365 1 224 3 367 1 143 1 94 1 49 1 145 1 349 1 77 1 280 1 207 1 266 1 187 1 240 1 22 1 337 1 306 2 27 1 102 1 57 1 30 1 216 1 62 3 
154 1 63 1 5 1 291 2 91 1 40 1 224 2 367 1 143 1 145 1 49 1 77 1 280 1 207 1 266 1 187 1 22 1 240 1 306 2 337 1 27 1 57 1 30 1 216 1 62 2 
154 2 63 1 64 1 247 1 176 1 38 1 91 1 40 1 224 1 345 1 143 1 227 1 181 1 94 1 145 1 349 1 147 1 266 2 211 1 57 2 379 1 216 2 62 1 
154 1 63 1 247 1 218 1 291 2 91 1 40 1 365 1 224 1 143 1 49 1 145 1 349 1 77 1 280 1 207 1 266 1 187 1 240 1 188 1 22 1 337 1 102 1 57 1 216 1 62 1 
29 1 
63 1 286 2 156 2 288 6 248 1 67 1 251 2 292 3 8 1 9 2 345 2 347 2 350 2 127 2 78 1 20 1 130 1 211 1 357 1 172 1 138 1 34 1 35 1 36 1 315 1 37 2 273 1 38 1 89 2 90 1 223 2 319 1 362 4 91 1 364 1 40 2 366 1 225 2 325 1 143 2 370 1 279 1 228 5 181 1 182 1 46 1 145 2 230 5 146 2 377 1 56 1 379 1 380 1 244 1 243 1 
172 1 138 1 288 2 36 1 315 1 248 1 319 1 251 1 8 1 292 1 362 2 364 1 115 1 279 1 228 3 182 1 46 1 230 3 78 1 20 1 377 1 56 1 
172 1 138 1 288 1 36 1 315 1 248 1 37 1 319 1 8 1 292 1 362 3 364 1 115 1 279 1 370 1 228 3 182 1 46 1 230 3 146 1 78 1 20 1 377 1 56 1 
286 1 172 1 138 1 288 2 36 1 315 1 248 1 37 1 319 1 251 1 292 1 8 1 362 3 115 1 364 1 279 1 370 1 228 3 182 1 46 1 230 3 146 1 78 1 20 1 377 1 56 1 
286 4 288 7 248 1 251 4 292 3 8 1 115 1 9 2 347 2 350 2 78 1 127 1 20 1 172 1 138 1 34 1 36 1 315 1 37 5 273 1 90 1 89 1 319 1 223 2 362 6 364 1 366 1 225 2 179 1 368 1 279 1 370 5 228 5 182 1 326 1 46 1 183 1 230 5 146 4 377 1 56 1 58 1 380 1 244 1 
286 2 156 2 288 4 248 1 251 2 8 1 292 2 9 2 347 2 350 2 78 1 127 1 20 1 357 1 172 1 138 1 34 1 36 1 315 1 273 1 37 2 90 1 89 1 319 1 223 2 362 4 364 1 366 1 225 2 279 1 370 1 228 4 182 1 46 1 230 4 146 2 377 1 56 1 380 1 244 1 
286 2 172 1 138 1 34 1 288 4 36 1 315 1 248 1 37 1 273 1 89 1 90 1 251 2 223 2 319 1 292 2 8 1 362 4 9 2 364 1 366 1 225 2 368 1 370 1 279 1 228 4 182 1 326 1 46 1 347 2 183 1 350 2 230 4 146 2 127 1 78 1 20 1 377 1 56 1 380 1 244 1 
286 2 172 1 138 1 34 1 288 4 36 1 315 1 248 1 37 1 273 1 89 1 90 1 251 2 223 2 319 1 292 2 8 1 362 4 9 2 364 1 366 1 225 2 368 1 370 1 279 1 228 4 182 1 326 1 46 1 347 2 183 1 350 2 230 4 146 2 127 1 78 1 20 1 377 1 56 1 380 1 244 1 
286 2 172 1 138 1 137 1 156 2 34 1 288 4 36 1 315 1 248 1 37 1 273 1 89 1 90 1 251 2 223 2 319 1 292 2 8 1 362 4 364 1 366 1 71 2 370 1 279 1 294 2 228 4 182 1 46 1 183 1 163 1 350 2 230 4 146 2 127 1 78 1 233 1 20 1 377 1 56 1 244 1 
286 3 172 1 138 1 34 1 288 5 36 1 315 1 248 1 37 1 273 1 89 1 90 1 223 2 319 1 251 3 292 2 8 1 362 5 9 2 364 1 366 1 225 2 368 1 370 1 279 1 228 4 182 1 326 1 46 1 347 2 183 1 350 2 230 4 146 3 127 1 78 1 20 1 377 1 56 1 58 1 380 1 244 1 
286 3 172 1 138 1 34 1 288 5 36 1 315 1 248 1 37 1 273 1 89 1 90 1 223 2 319 1 251 3 292 2 8 1 362 5 9 2 364 1 366 1 225 2 368 1 370 1 279 1 228 4 182 1 326 1 46 1 347 2 183 1 350 2 230 4 146 3 127 1 78 1 20 1 377 1 56 1 58 1 380 1 244 1 
286 2 156 2 288 4 248 1 251 2 8 1 292 2 71 2 294 2 350 2 78 1 127 1 20 1 357 1 172 1 138 1 34 1 36 1 315 1 273 1 37 1 90 1 89 1 319 1 223 2 362 4 364 1 366 1 279 1 370 1 228 4 182 1 46 1 230 4 146 2 233 1 377 1 56 1 244 1 
327 2 110 1 97 1 194 3 219 1 206 1 51 1 221 2 299 1 359 1 300 3 333 1 68 6 275 1 250 1 150 1 166 2 303 1 25 2 256 1 28 1 259 1 144 1 217 1 45 1 123 1 
194 6 219 2 221 1 360 1 195 2 275 1 68 14 276 1 114 1 42 1 256 4 144 2 259 2 261 1 123 11 95 1 327 4 204 1 97 2 206 2 126 3 51 11 232 1 300 8 333 1 166 1 307 1 25 2 214 1 378 1 217 2 106 3 170 2 
63 1 1 1 219 1 194 1 221 1 36 2 274 1 38 1 275 1 68 2 91 1 364 2 40 1 252 1 344 1 256 1 345 1 143 1 259 1 144 1 15 1 181 1 261 1 327 2 145 1 204 1 76 1 17 1 206 1 164 1 165 1 300 1 377 1 55 1 214 1 217 1 61 1 60 1 
63 2 110 1 194 10 111 1 158 2 339 2 195 2 68 20 250 1 344 1 256 7 345 1 346 1 259 3 15 1 261 1 123 7 204 1 17 1 76 2 206 3 299 1 164 2 300 10 303 1 166 4 25 8 214 1 28 1 217 3 170 2 269 1 219 3 221 2 36 3 274 2 275 3 317 2 38 2 91 2 364 3 40 3 41 2 143 3 144 3 45 1 181 2 327 6 145 3 97 3 51 7 232 2 333 3 187 1 377 1 55 2 378 4 59 2 60 1 
63 2 219 2 194 1 359 1 36 1 222 1 275 2 68 2 38 2 91 2 364 1 40 7 345 2 143 8 257 1 144 2 259 2 15 1 72 2 181 3 48 1 261 1 327 4 145 8 204 1 17 1 206 2 300 1 235 1 129 1 302 1 132 1 187 1 211 1 377 1 379 1 217 2 381 1 60 1 
219 1 194 2 36 1 195 1 249 1 275 1 68 3 364 1 256 1 144 1 259 1 15 1 199 1 123 1 327 2 97 1 206 1 51 1 232 1 300 1 333 1 166 1 376 1 377 1 25 1 214 1 217 1 170 1 60 1 
327 2 97 1 219 1 206 1 51 1 359 1 373 1 300 2 68 2 275 1 25 1 256 1 378 1 259 1 144 1 217 1 170 1 123 1 
327 2 219 1 206 1 194 2 51 1 232 1 359 1 87 1 333 1 68 2 275 1 166 1 25 1 256 1 259 1 144 1 217 1 123 1 
219 1 194 2 359 1 195 1 275 1 68 4 256 2 144 1 259 1 123 2 327 2 97 1 206 1 51 2 232 1 300 2 333 1 166 1 25 2 378 1 217 1 170 1 
327 2 97 1 219 1 206 1 51 1 373 1 300 2 68 2 275 1 132 1 25 1 256 1 378 1 259 1 144 1 217 1 170 1 123 1 
327 2 219 1 206 1 194 2 51 1 232 1 87 1 333 1 68 2 275 1 132 1 166 1 25 1 256 1 259 1 144 1 217 1 123 1 
219 1 194 2 195 1 275 1 68 4 256 2 144 1 259 1 123 2 327 2 97 1 206 1 51 2 232 1 300 2 333 1 132 1 166 1 25 2 378 1 217 1 170 1 
219 1 194 2 195 1 68 4 275 1 256 2 144 1 259 1 123 2 327 2 97 1 206 1 51 2 232 1 300 2 333 1 166 1 25 2 378 1 217 1 170 1 
63 1 219 1 194 1 221 1 36 1 274 1 68 2 38 1 317 1 275 1 91 1 364 1 40 1 345 1 143 1 259 1 144 1 181 1 261 1 327 2 145 1 204 1 76 1 206 1 164 1 300 1 55 1 217 1 
63 1 219 1 194 1 221 1 36 1 274 1 6 1 68 2 38 1 160 1 275 1 91 1 364 1 40 1 345 1 143 1 259 1 144 1 181 1 261 1 327 2 145 1 204 1 76 1 206 1 300 1 304 1 217 1 
219 1 194 2 195 1 275 1 68 4 256 2 144 1 259 1 123 2 327 2 97 1 206 1 51 2 232 1 300 2 333 1 166 1 25 2 214 1 378 1 217 1 170 1 
63 1 194 2 219 1 158 1 36 1 195 1 274 1 68 4 317 1 38 1 275 1 91 1 364 1 40 1 256 2 143 1 259 1 144 1 181 1 123 2 48 1 327 2 145 1 97 1 76 1 206 1 232 1 51 2 164 1 300 2 333 1 166 1 25 2 55 1 378 1 217 1 170 1 
194 1 219 1 36 1 195 1 249 1 275 1 68 3 363 1 364 1 256 1 144 1 259 1 15 1 123 1 327 2 97 1 206 1 232 1 51 1 300 2 333 1 376 1 377 1 25 1 214 1 378 1 217 1 170 1 60 1 
194 10 195 3 68 19 114 1 321 1 42 1 12 1 144 2 259 2 162 1 295 1 327 4 96 2 97 3 206 2 126 1 232 3 300 9 333 3 52 1 305 1 166 3 336 2 25 6 378 3 168 1 217 2 106 2 170 3 83 1 
194 12 86 2 195 3 68 26 114 2 321 1 178 1 11 1 12 1 144 3 259 3 162 2 295 2 327 6 96 4 97 3 206 3 126 2 232 2 300 14 333 2 208 1 52 1 166 2 336 1 212 1 25 4 378 2 167 1 217 3 106 2 355 1 170 3 83 1 
110 1 194 21 86 1 195 4 68 41 250 1 114 3 321 1 178 1 11 1 42 1 12 1 144 3 259 3 45 1 162 1 295 2 327 6 96 4 97 5 206 3 126 3 299 1 232 4 300 20 333 5 208 1 52 1 237 1 303 1 166 4 336 1 212 1 25 8 167 1 378 4 168 1 28 1 217 3 355 1 106 4 170 4 83 1 
110 1 194 18 86 2 195 4 68 38 250 1 114 3 321 1 178 1 11 1 42 1 12 1 144 4 259 4 45 1 162 1 295 2 327 8 96 4 97 5 206 4 126 3 299 1 232 3 300 20 333 4 208 1 52 1 237 1 303 1 166 4 336 1 212 1 25 7 167 1 378 3 168 1 28 1 217 4 355 1 106 4 170 4 83 1 
110 1 194 25 86 1 195 7 68 52 250 1 276 2 114 2 321 1 178 1 11 1 42 2 12 1 144 2 259 2 45 1 162 1 295 1 327 4 96 4 97 8 206 2 126 4 299 1 232 7 300 27 333 8 208 1 52 1 303 1 166 7 336 1 212 1 25 14 167 1 378 7 28 1 217 2 355 1 106 4 170 7 83 1 
341 1 287 1 193 1 330 1 205 1 33 1 264 1 290 1 7 1 285 1 
174 1 88 1 
287 1 343 1 205 1 33 1 135 1 264 1 260 1 290 1 285 1 
282 1 149 1 
173 1 226 1 265 1 
287 1 330 1 230 1 205 1 33 1 231 1 264 1 112 1 332 2 37 1 290 1 7 1 113 1 341 1 369 1 228 1 122 1 285 1 
287 1 330 1 230 1 205 1 33 1 231 1 264 1 112 1 332 2 37 1 290 1 7 1 113 1 341 1 369 1 228 1 122 1 285 1 
287 1 330 1 230 1 205 1 33 1 231 1 264 1 112 1 332 2 37 1 290 1 7 1 113 1 341 1 369 1 228 1 122 1 285 1 
282 1 265 1 149 1 
282 1 265 1 149 1 
173 1 226 1 
173 1 226 1 265 1 
70 1 338 1 
287 1 33 1 174 1 221 1 36 2 313 1 112 1 88 1 290 1 364 2 320 1 254 1 70 1 15 2 122 1 228 1 124 1 230 1 205 1 264 1 332 1 377 2 338 1 190 1 60 2 285 1 153 1 
63 1 219 1 358 1 194 1 314 1 36 2 175 1 38 1 275 1 68 2 91 1 364 2 40 2 277 1 143 2 257 1 259 1 144 1 72 2 181 1 261 1 327 2 145 2 204 1 206 1 263 1 300 1 377 2 214 1 217 1 381 1 
63 1 107 1 49 1 145 2 207 1 3 1 280 1 291 2 266 1 187 1 240 1 91 1 22 1 337 1 40 2 102 1 143 2 136 1 48 1 
63 1 49 1 145 1 207 1 281 1 280 1 291 2 266 1 187 1 240 1 22 1 91 1 337 1 40 1 102 1 143 1 136 1 
73 1 63 1 64 1 145 1 3 1 38 1 266 1 211 1 91 1 40 1 345 1 143 1 379 1 181 1 
63 1 107 1 49 1 145 1 207 1 3 1 280 1 291 2 266 1 187 1 240 1 22 1 91 1 337 1 40 1 102 1 143 1 136 1 
270 1 
101 1 127 1 4 1 37 1 370 1 89 1 150 1 
347 1 230 1 156 1 34 1 288 1 127 1 37 2 273 1 90 1 89 1 292 1 9 1 366 1 225 1 370 1 380 1 228 1 
63 4 156 12 4 1 288 5 339 2 195 2 292 3 116 2 342 1 10 2 345 1 119 2 121 1 201 2 76 3 18 2 127 8 130 2 21 1 81 2 24 6 213 2 170 2 31 2 34 4 35 1 273 4 37 8 38 3 89 9 90 4 91 3 40 3 93 3 366 4 225 6 43 2 143 3 370 2 228 5 181 10 48 1 46 2 145 3 230 5 97 2 232 2 186 1 100 2 234 1 333 2 53 1 101 1 192 6 
156 6 34 2 35 1 66 1 288 1 195 2 273 2 37 5 89 8 90 2 292 1 114 1 10 1 116 2 366 2 178 1 225 3 11 1 370 2 228 1 47 1 230 1 97 2 126 1 127 5 232 2 333 2 130 1 208 1 24 5 167 1 106 1 355 1 170 2 192 5 
109 1 34 1 271 1 36 1 273 1 250 1 90 1 89 2 364 1 10 1 116 2 253 1 366 1 368 1 15 1 45 1 228 1 230 1 97 2 78 1 127 2 99 1 333 1 128 1 376 1 377 1 28 1 60 1 
34 1 4 1 127 1 273 1 37 1 90 1 89 1 101 1 366 1 370 1 
97 2 156 10 127 5 232 2 339 1 195 2 37 5 333 2 89 5 24 5 10 1 116 2 225 5 170 2 192 5 
230 1 288 1 37 1 370 1 228 1 292 1 
63 1 34 2 288 4 35 2 67 1 273 2 38 1 90 2 89 2 292 2 91 1 40 4 366 1 325 1 345 2 143 4 120 1 228 3 181 1 145 4 329 1 230 3 127 2 79 1 234 2 130 2 21 1 211 1 379 1 
63 1 194 1 219 1 221 1 36 3 274 1 68 1 317 1 38 1 275 1 91 1 364 3 40 1 345 1 143 1 144 1 259 1 15 2 181 1 327 2 204 1 145 1 76 1 206 1 164 1 128 1 133 1 376 2 377 2 55 1 217 1 60 2 
110 1 156 4 34 1 127 2 35 1 273 1 37 4 130 1 90 1 89 1 24 2 366 1 225 2 370 2 192 2 
108 1 33 1 290 1 
108 1 33 1 290 1 
330 1 33 1 338 1 290 1 39 1 
108 1 33 1 290 1 
33 1 316 1 290 1 
33 1 316 1 290 1 
33 1 316 1 290 1 
33 1 290 1 
287 1 264 1 
327 4 110 1 97 1 194 4 206 2 299 1 300 4 86 1 333 1 68 8 250 1 166 2 303 1 25 3 378 1 28 1 259 2 144 2 217 2 45 1 
110 1 97 1 194 3 299 1 300 3 333 1 68 6 250 1 150 1 303 1 166 2 25 2 28 1 45 1 
327 2 97 1 194 2 206 1 232 1 272 1 195 1 300 2 333 1 68 4 166 1 25 2 378 1 259 1 144 1 217 1 170 1 
97 1 194 4 126 1 232 1 300 3 195 1 333 1 68 7 114 1 166 1 25 2 42 1 378 1 106 2 170 1 
110 1 194 12 360 1 195 2 86 2 68 23 250 2 276 1 42 1 259 2 144 2 45 2 327 4 97 3 126 2 206 2 299 1 232 2 300 11 333 3 303 1 166 5 352 1 25 9 378 4 28 1 217 2 170 2 106 2 
194 1 68 1 106 1 
126 1 300 1 68 1 
327 2 97 1 206 1 194 3 232 1 339 1 272 1 195 1 300 3 333 1 68 6 166 2 25 3 378 1 217 1 144 1 259 1 170 1 
194 6 195 2 68 12 114 1 178 1 11 1 144 1 259 1 327 2 97 2 126 1 206 1 232 2 300 6 333 2 208 1 166 1 25 2 378 1 167 1 217 1 106 1 355 1 170 2 83 1 
97 1 194 3 300 3 333 1 68 6 250 1 166 1 25 2 378 1 28 1 45 1 
327 2 194 2 206 1 299 1 300 1 86 1 68 3 250 1 166 1 303 1 352 1 25 2 378 1 259 1 144 1 217 1 45 1 
327 2 97 2 206 1 194 5 99 1 300 5 333 2 68 10 250 2 166 3 25 5 378 2 217 1 144 1 259 1 28 1 83 1 45 2 
327 2 97 1 206 1 300 2 68 2 25 1 378 1 259 1 144 1 217 1 170 1 83 1 
327 2 97 1 194 2 206 1 232 1 195 1 300 2 333 1 68 4 166 1 25 2 378 1 259 1 144 1 217 1 170 1 83 1 
327 6 194 2 206 3 86 1 300 1 68 3 250 1 166 1 352 1 25 2 378 1 168 1 259 3 144 3 217 3 83 1 45 1 
309 1 110 1 194 18 86 2 272 1 195 3 68 34 250 3 114 1 42 1 144 5 259 5 45 3 327 10 98 1 97 5 206 5 126 3 299 1 232 3 300 16 333 5 303 1 166 7 352 1 283 1 25 12 378 5 168 1 28 2 217 5 106 4 170 3 83 1 
110 1 194 4 68 8 250 1 114 1 144 1 259 1 45 1 327 2 97 1 126 1 206 1 299 1 300 4 333 1 303 1 166 2 25 2 217 1 28 1 106 1 355 1 83 1 
110 1 194 5 272 1 195 1 68 11 250 1 114 1 42 1 144 2 259 2 45 1 327 4 97 2 206 2 126 1 299 1 300 6 333 1 166 2 303 1 25 3 378 1 28 1 217 2 106 2 355 1 170 1 83 1 
110 1 194 10 272 1 195 2 86 1 68 19 250 1 114 1 178 1 11 1 144 3 259 3 45 1 327 6 97 3 126 1 206 3 299 1 232 2 300 9 333 3 208 1 303 1 166 3 25 4 378 1 167 1 28 1 217 3 106 1 355 1 170 2 83 1 
110 1 194 7 272 1 86 1 195 2 68 17 250 1 114 1 178 1 11 1 144 3 259 3 45 1 327 6 97 3 126 1 206 3 299 1 232 1 300 10 333 2 208 1 303 1 166 3 25 5 378 2 167 1 28 1 217 3 106 1 355 1 170 2 83 1 
110 1 194 4 68 8 250 1 114 1 144 1 259 1 45 1 327 2 97 1 126 1 206 1 299 1 300 4 333 1 303 1 166 2 25 2 217 1 28 1 106 1 355 1 83 1 
194 6 195 2 68 12 114 1 178 1 11 1 144 1 259 1 327 2 97 2 126 1 206 1 232 2 300 6 333 2 208 1 166 1 25 2 378 1 167 1 217 1 106 1 355 1 170 2 83 1 
110 1 194 8 272 1 195 2 86 2 68 18 250 1 114 1 178 1 11 1 144 4 259 4 45 1 327 8 97 3 206 4 126 1 299 1 232 1 300 10 333 2 208 1 303 1 166 3 25 5 378 2 167 1 28 1 217 4 106 1 355 1 170 2 83 1 
194 7 195 3 86 2 68 16 114 1 178 1 11 1 144 4 259 4 327 8 97 3 206 4 126 1 232 2 300 9 333 2 208 1 166 3 25 6 378 3 167 1 168 1 217 4 106 1 355 1 170 3 83 1 
97 1 194 4 299 2 300 3 333 1 68 7 250 3 303 1 166 3 25 6 378 3 28 1 45 3 
110 1 194 8 195 2 86 2 68 18 250 1 114 1 178 1 11 1 144 4 259 4 45 1 327 8 97 3 206 4 126 1 299 1 232 1 300 10 333 2 208 1 303 1 166 3 25 4 378 1 167 1 168 1 28 1 217 4 106 1 355 1 170 2 83 1 
364 1 377 1 2 1 221 1 36 1 20 1 318 1 
32 1 246 1 2 1 221 1 36 1 20 1 318 1 353 1 377 1 364 1 255 1 13 1 
211 1 63 1 91 1 145 1 40 1 345 1 143 1 379 1 38 1 181 1 150 1 
63 1 145 1 76 1 17 1 221 1 36 2 164 1 274 1 38 1 91 1 377 1 364 2 40 1 345 1 143 1 15 1 60 1 181 1 
63 1 221 1 36 2 274 1 38 2 91 1 364 2 40 1 143 1 119 1 15 1 181 3 182 1 145 1 17 1 76 2 78 1 164 1 234 1 377 2 56 1 60 2 31 1 
63 1 221 1 36 2 274 1 38 2 91 1 364 2 40 2 143 2 44 1 119 1 15 1 181 3 182 1 145 2 17 1 76 2 78 1 234 1 304 1 377 2 56 1 60 2 31 1 
63 1 288 1 37 1 38 1 91 1 142 1 40 3 93 1 345 1 143 3 44 1 119 1 370 1 228 2 181 4 46 1 145 3 75 1 230 2 76 1 234 1 213 1 31 1 
63 1 145 3 230 2 76 1 288 1 100 1 37 1 234 1 38 1 91 1 40 3 213 1 93 1 345 1 143 3 44 1 370 1 119 1 228 2 181 4 46 1 31 1 
63 1 91 1 145 1 40 1 143 1 222 1 
372 1 63 3 145 7 76 1 186 1 222 1 235 1 129 1 38 2 302 1 334 1 187 1 91 2 40 6 345 2 143 7 72 1 381 1 181 3 48 1 229 1 
63 1 110 1 194 3 158 1 68 6 250 1 256 1 259 2 15 1 123 1 17 1 76 1 206 2 299 1 164 1 300 3 303 1 166 2 25 2 214 1 217 2 28 1 358 1 219 2 221 2 36 2 274 1 317 1 275 2 38 1 91 1 364 2 40 1 41 1 143 1 144 2 45 1 181 1 48 1 327 4 145 1 97 1 51 1 333 1 377 1 55 1 60 1 
34 2 4 1 288 2 313 1 37 1 273 2 89 1 90 2 292 1 40 1 366 2 93 1 345 1 143 1 43 1 370 1 228 3 201 1 181 2 46 1 145 1 230 3 127 1 18 1 100 1 21 1 101 1 213 1 
63 2 145 2 76 1 186 1 222 1 38 1 91 1 213 1 40 2 143 2 121 1 181 2 48 1 
63 1 145 4 38 1 335 1 211 1 91 1 40 4 345 1 143 4 44 1 379 1 181 1 48 1 
372 1 63 2 145 2 76 1 19 1 234 1 38 1 334 1 80 1 91 1 40 2 346 1 143 2 181 1 
63 1 91 1 49 1 145 1 40 1 207 1 280 1 345 1 143 1 291 1 
187 1 63 1 91 1 145 2 40 2 143 2 175 1 38 1 381 1 181 1 48 1 
63 2 145 5 234 1 235 1 38 2 129 1 335 1 211 1 91 2 40 4 345 1 143 5 379 1 381 1 181 3 48 1 
63 2 145 5 234 1 38 2 129 1 236 1 335 1 211 1 91 2 40 4 345 1 143 5 379 1 381 1 181 3 48 1 
63 1 145 1 76 1 17 1 221 1 36 2 274 1 38 1 304 1 91 1 377 1 364 2 40 1 345 1 143 1 15 1 60 1 181 1 
372 1 63 2 145 1 76 1 186 1 234 1 38 1 334 1 91 1 40 1 143 1 181 1 229 1 
84 1 364 1 377 1 277 1 268 1 36 1 314 1 263 1 209 1 
322 1 148 1 209 1 
84 1 298 1 268 1 221 1 209 1 
84 2 230 2 298 2 125 1 221 1 78 1 313 1 315 1 37 1 148 1 209 1 322 1 268 2 56 1 370 1 198 1 228 2 182 1 46 1 
27 1 5 1 30 1 150 1 
349 1 247 1 27 1 224 1 5 1 30 1 62 1 
154 1 57 1 62 1 
349 1 247 1 218 1 5 1 141 1 134 1 224 3 27 1 118 2 293 1 30 1 62 3 
306 1 349 1 26 1 247 1 27 1 224 2 5 1 30 1 62 2 
210 1 240 1 49 1 349 1 247 1 218 1 224 1 30 1 291 1 177 1 62 1 
349 1 247 1 218 1 27 1 224 1 30 1 62 1 
349 1 247 1 218 1 27 2 224 1 5 1 62 1 
245 1 349 2 247 2 218 1 242 1 308 1 27 1 224 2 30 1 62 2 
349 1 247 1 218 1 311 1 5 1 159 1 210 1 306 2 27 1 224 3 354 1 30 2 62 3 
349 1 49 1 247 1 218 1 207 1 5 1 291 2 240 1 337 1 306 1 27 1 224 2 30 1 191 1 62 2 
349 2 247 2 218 1 262 1 5 1 210 1 306 2 26 1 27 1 224 4 354 1 30 2 62 4 
349 1 247 1 218 1 27 1 224 1 5 1 30 1 62 1 
349 1 247 1 5 2 141 1 131 1 210 1 306 2 27 2 224 4 118 1 293 1 354 1 30 3 62 4 
349 1 247 1 218 1 5 1 306 1 267 1 27 1 224 2 189 1 30 1 356 1 62 2 
155 1 349 1 247 1 218 1 27 1 224 3 5 1 118 2 293 2 30 1 141 1 62 3 
278 1 258 1 30 2 200 2 
349 1 247 1 218 1 103 1 224 1 62 1 
306 1 349 1 247 1 218 1 27 1 224 2 5 1 159 1 30 1 62 2 
0 1 
349 1 247 1 218 1 27 1 224 1 5 1 30 1 62 1 
306 1 349 1 247 1 218 1 27 1 224 3 5 1 118 1 159 1 30 1 62 3 
210 1 354 1 30 1 131 1 
27 1 30 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 350 339 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (80,283) (28,139) (28,139) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (80,283) (80,283) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 350 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (80,283) (28,139) (28,139) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (80,283) (28,139) (28,139) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (80,283) (28,139) (28,139) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 350 339 63 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
270 1 199 1 167 2 231 2 138 1 100 3 203 1 178 1 237 9 72 1 297 2 259 1 318 1 238 1 75 4 342 1 280 5 54 1 305 2 9 2 224 2 223 1 269 9 158 1 13 1 111 6 374 1 162 2 
270 1 199 1 167 2 231 2 138 1 100 3 203 1 178 1 237 9 72 1 297 2 259 1 318 1 238 1 75 4 342 1 280 5 54 1 305 2 9 2 223 1 224 2 269 9 158 1 13 1 111 6 374 1 162 2 
270 1 199 1 167 2 231 2 138 1 100 4 203 1 178 1 237 10 72 1 297 2 259 1 318 1 238 1 75 5 342 1 280 6 54 1 305 2 9 2 223 1 224 2 269 10 158 1 13 1 111 7 374 1 162 2 
199 1 167 2 231 2 138 1 100 2 203 1 178 1 237 7 72 1 297 2 259 1 318 1 238 1 75 3 342 1 280 4 54 1 305 2 9 2 223 1 224 1 269 7 158 1 13 1 111 4 374 1 162 2 
270 1 75 2 280 3 167 1 231 1 100 1 305 1 178 1 223 1 237 4 224 2 269 4 158 1 111 3 297 1 374 1 259 1 162 1 
20 1 280 1 199 1 167 1 231 1 138 1 305 1 9 1 223 1 237 2 269 2 179 1 158 1 297 1 374 1 16 1 
75 1 280 2 231 2 100 1 305 2 9 1 223 1 237 3 269 3 158 1 13 1 111 1 374 1 
270 1 167 1 231 2 100 3 178 1 237 9 297 1 259 1 75 4 342 1 280 5 54 1 153 1 305 2 9 1 10 1 223 1 224 2 269 9 158 1 13 1 111 7 374 1 162 1 
270 1 167 1 231 2 100 3 178 1 237 9 297 1 259 1 75 4 342 1 280 5 54 1 153 1 305 2 9 1 10 1 223 1 224 2 269 9 158 1 13 1 111 7 374 1 162 1 
191 1 345 1 183 1 
165 1 168 2 183 1 
344 1 142 2 3 2 222 2 262 2 275 2 363 2 340 1 
18 1 41 1 94 1 134 2 65 1 97 1 275 2 295 1 142 2 335 1 43 1 257 2 360 1 119 1 143 1 208 1 363 3 30 1 340 1 121 2 187 1 78 1 3 3 262 2 368 1 367 1 7 1 343 2 344 1 222 2 328 1 159 1 346 1 90 2 59 1 38 1 376 1 
344 1 142 1 147 1 3 1 222 1 262 1 120 1 275 1 363 1 292 1 
3 1 213 1 23 1 324 1 345 1 142 1 313 1 225 1 183 1 226 1 317 1 245 1 363 1 292 1 
262 1 3 1 275 1 324 1 345 1 142 1 222 1 313 1 225 2 183 1 317 2 226 1 245 1 363 1 292 1 
320 1 258 1 225 1 362 1 317 1 
345 1 276 1 258 1 225 2 362 1 183 1 317 2 308 1 
258 1 225 1 317 1 
147 1 262 1 3 1 275 1 173 1 344 1 142 1 222 1 362 1 225 1 120 1 317 1 363 1 292 1 
183 1 
345 1 132 1 258 1 225 2 362 1 183 1 317 2 308 1 
17 1 352 2 202 1 53 1 303 1 345 1 154 1 87 1 315 2 359 1 258 2 362 2 225 5 183 1 317 5 196 1 308 1 2 2 293 1 
191 1 340 1 
3 2 262 1 298 1 275 1 219 1 142 2 222 1 363 2 340 2 
186 1 306 1 180 1 
41 1 78 1 3 1 65 1 343 1 335 1 257 1 328 1 346 1 119 1 59 1 363 1 208 1 340 1 121 1 163 1 
41 1 78 1 3 2 65 1 152 1 275 1 343 1 335 1 142 1 222 1 257 1 328 1 180 1 346 1 119 1 59 1 208 1 363 2 121 1 246 1 
3 5 262 1 213 1 152 1 217 1 275 4 219 1 356 1 83 1 142 5 222 4 363 5 340 1 246 2 
142 2 147 1 3 2 222 2 332 1 275 2 363 2 292 1 
142 3 262 1 3 3 222 3 275 3 363 3 340 1 246 1 
142 1 147 1 3 1 222 1 275 1 363 1 292 1 
142 1 3 1 222 1 262 1 298 1 275 1 363 1 292 1 219 1 
41 1 94 1 134 1 65 1 97 1 275 3 295 1 335 1 142 3 43 1 44 1 313 1 257 1 360 1 119 1 317 1 208 1 363 4 340 1 121 1 78 1 262 2 3 4 299 1 368 1 152 1 7 1 324 1 219 1 343 1 344 1 222 3 328 1 346 1 159 1 90 2 225 1 59 1 226 1 38 1 245 1 376 1 292 1 246 1 
142 2 3 2 222 1 213 1 217 1 275 1 363 2 340 1 246 1 
262 1 3 3 299 1 152 1 275 3 324 1 219 1 142 3 222 3 313 1 225 1 183 1 317 1 185 1 226 1 245 1 363 3 292 1 246 2 
186 1 262 1 3 2 275 2 219 1 142 2 222 2 180 1 363 2 246 1 
41 1 78 1 3 1 65 1 343 1 335 1 257 1 328 1 346 1 59 1 119 1 363 1 208 1 340 1 121 1 
41 1 78 1 3 1 65 1 353 1 343 1 335 1 257 1 59 1 119 1 27 1 363 1 208 1 340 1 121 1 
18 2 134 4 171 1 357 1 295 1 43 2 176 1 175 1 296 1 360 1 180 2 186 2 263 1 368 1 266 1 7 1 84 1 85 1 155 1 306 2 90 2 38 1 376 1 161 1 
142 1 3 1 222 1 332 1 275 1 324 1 363 1 292 1 
321 1 285 1 
321 1 285 1 
130 1 273 1 
130 1 273 1 
130 1 273 1 
321 1 71 1 285 1 
321 1 71 1 285 1 
321 1 285 1 333 1 
321 2 130 1 117 1 273 1 232 1 285 2 
321 1 71 1 285 1 
321 1 29 1 285 1 
321 1 29 1 285 1 
321 1 29 1 285 1 
350 1 106 1 3 1 251 1 109 1 275 1 36 1 355 1 242 1 142 1 101 1 222 1 314 1 225 1 317 1 363 1 339 1 73 1 
106 2 251 2 109 2 108 1 139 1 283 1 242 2 314 2 225 2 183 1 317 2 28 1 73 1 227 1 
167 1 297 1 162 1 
167 1 179 1 297 1 
141 1 167 3 179 1 264 1 126 1 162 2 
277 1 167 2 179 1 264 1 126 1 162 1 
167 2 179 1 264 2 126 1 162 1 
17 3 198 1 133 1 165 1 168 3 352 1 355 1 101 1 315 1 258 1 362 4 183 2 46 1 184 1 317 5 2 1 279 1 364 1 79 2 263 1 51 1 36 1 84 1 345 1 85 1 87 2 89 2 193 2 225 5 196 1 308 1 161 1 
271 1 247 1 17 8 198 1 165 3 21 1 253 5 168 9 352 2 202 1 312 1 315 2 258 6 362 7 183 5 46 3 317 9 2 2 364 2 320 5 79 6 263 3 51 2 36 4 302 1 84 3 345 1 85 3 87 6 89 6 225 9 308 1 196 1 161 3 349 1 
17 3 165 2 352 1 168 4 202 1 315 1 362 2 183 3 184 1 317 3 46 1 2 1 279 1 364 1 79 2 263 1 51 1 36 1 84 1 345 1 85 1 87 2 193 1 89 2 225 3 161 1 
271 1 247 1 17 5 165 3 21 1 168 7 352 1 202 1 315 1 362 3 183 4 317 4 184 1 46 2 2 1 279 1 364 1 79 4 263 2 51 1 36 2 84 2 345 1 85 2 87 4 89 4 193 2 225 4 161 2 
191 1 206 1 119 1 
361 1 119 1 
137 1 
41 1 119 1 208 1 
337 1 119 1 
119 1 208 1 
41 1 206 2 119 3 91 1 99 1 208 1 
18 4 134 7 150 1 229 1 166 1 263 1 171 3 240 2 301 1 286 1 128 1 256 1 43 3 70 1 296 2 57 1 161 1 
18 4 134 7 150 1 229 1 166 1 263 1 171 3 240 2 301 1 286 1 128 1 256 1 43 3 70 1 296 2 57 1 161 1 
18 4 134 7 150 1 229 1 166 1 263 1 107 1 171 3 240 2 301 1 286 1 128 1 256 1 43 3 70 1 296 2 57 1 161 1 
18 16 134 31 229 1 166 1 170 1 274 1 171 10 115 3 295 1 256 2 43 15 70 2 296 5 46 3 26 1 47 1 150 2 263 4 368 1 240 3 301 1 286 2 128 5 84 3 85 3 57 1 194 1 90 2 195 1 38 1 376 1 15 4 291 1 161 4 
18 5 134 9 150 1 229 1 166 1 263 1 368 2 171 4 240 2 301 1 286 1 128 1 256 1 42 1 295 2 43 4 70 1 296 3 90 4 26 1 38 2 376 2 377 1 161 1 
249 1 330 1 65 1 167 2 231 1 169 1 141 1 234 1 116 1 257 1 237 2 316 1 179 1 297 1 121 1 280 1 78 1 188 1 214 1 265 1 343 1 326 1 305 1 9 1 223 1 269 2 158 1 111 1 374 1 162 1 
249 1 330 1 65 1 351 1 201 1 167 2 231 1 141 1 234 1 116 1 257 1 237 3 316 1 179 1 297 1 121 1 280 1 78 1 188 1 265 1 343 1 326 1 305 1 9 1 192 1 269 3 158 1 111 2 374 1 162 1 
249 1 65 1 351 1 201 1 167 2 141 1 234 1 116 1 257 1 237 2 316 1 179 1 297 1 121 1 280 1 78 1 188 1 265 1 343 1 9 1 269 2 158 1 111 2 374 1 162 1 
78 1 146 1 65 1 188 2 231 1 22 1 265 2 216 1 68 1 24 1 343 1 305 1 116 2 9 2 257 1 192 1 237 1 269 1 181 1 119 1 59 1 208 1 121 1 
249 1 78 1 65 1 330 1 167 2 351 1 188 1 231 1 169 1 265 1 343 1 141 1 326 1 234 1 305 1 116 1 9 1 257 1 316 1 223 1 237 1 179 1 269 1 297 1 121 1 162 1 
77 1 
142 1 257 2 258 6 208 1 2 1 209 2 146 1 3 1 213 1 218 1 267 1 304 2 343 2 345 1 225 5 59 2 226 1 308 3 60 1 62 2 17 2 165 2 65 1 168 2 352 1 23 1 172 4 24 1 177 1 315 1 236 1 313 1 119 1 183 2 317 5 363 1 121 2 364 1 122 1 76 1 78 1 123 1 32 2 282 1 125 1 324 1 369 1 284 1 86 2 288 2 87 2 92 2 245 1 196 1 292 1 
23 1 172 2 142 1 236 1 313 1 258 2 317 3 363 1 209 1 76 1 123 1 3 1 213 1 125 1 324 1 132 1 225 3 226 1 245 1 308 1 60 1 292 1 
76 1 123 1 3 1 213 1 32 1 125 1 23 1 172 3 324 1 345 1 142 1 313 1 236 1 132 1 258 1 225 3 183 1 317 3 226 1 245 1 308 1 363 1 292 1 60 1 
23 1 172 3 142 1 236 1 313 1 258 2 183 1 317 3 363 1 209 1 76 1 123 1 3 1 213 1 32 1 125 1 324 1 345 1 132 1 225 3 226 1 92 1 245 1 308 1 60 1 292 1 
142 1 258 7 207 1 2 1 209 4 48 1 3 1 213 1 267 1 304 2 345 5 225 5 226 1 308 3 60 1 62 2 17 1 165 2 352 1 23 1 172 6 233 1 313 1 236 1 315 1 183 5 317 5 363 1 76 1 123 1 124 1 281 1 32 4 125 1 324 1 369 1 86 2 87 1 288 2 132 1 92 4 245 1 196 1 292 1 
142 1 258 4 2 1 209 2 3 1 213 1 218 1 267 1 304 2 345 1 225 4 226 1 308 2 60 1 62 2 17 1 165 2 352 1 168 2 23 1 172 4 313 1 315 1 236 1 183 2 317 4 363 1 76 1 123 1 32 2 125 1 324 1 369 1 86 2 87 1 288 2 92 2 245 1 196 1 292 1 
17 1 165 2 352 1 23 1 172 4 233 1 142 1 236 1 313 1 315 1 258 4 207 1 183 1 317 4 2 1 363 1 209 2 48 1 76 1 123 1 3 1 213 1 32 2 125 1 267 1 324 1 369 1 304 2 345 1 86 2 288 2 87 1 225 4 92 2 226 1 245 1 308 2 196 1 60 1 292 1 62 2 
17 1 165 2 352 1 23 1 172 4 233 1 142 1 236 1 313 1 315 1 258 4 207 1 183 1 317 4 2 1 363 1 209 2 48 1 76 1 123 1 3 1 213 1 32 2 125 1 267 1 324 1 369 1 304 2 345 1 86 2 288 2 87 1 225 4 92 2 226 1 245 1 308 2 196 1 60 1 292 1 62 2 
17 1 250 1 168 2 352 1 23 1 172 4 233 1 354 1 205 2 142 1 236 1 313 1 315 1 258 4 183 1 317 4 2 1 363 1 209 2 76 1 123 1 3 1 213 1 32 2 4 1 125 1 324 1 369 1 304 2 345 1 86 2 87 1 225 4 14 2 92 2 226 1 245 1 308 2 196 1 60 1 292 1 
17 1 165 2 352 1 23 1 172 5 233 1 142 1 315 1 236 1 313 1 258 5 207 1 183 1 317 4 2 1 363 1 209 3 48 1 76 1 123 1 124 1 3 1 213 1 32 3 125 1 267 1 324 1 369 1 304 2 345 1 86 2 288 2 87 1 225 4 226 1 92 3 245 1 308 2 196 1 60 1 292 1 62 2 
17 1 165 2 352 1 23 1 172 5 233 1 142 1 315 1 236 1 313 1 258 5 207 1 183 1 317 4 2 1 363 1 209 3 48 1 76 1 123 1 124 1 3 1 213 1 32 3 125 1 267 1 324 1 369 1 304 2 345 1 86 2 288 2 87 1 225 4 226 1 92 3 245 1 308 2 196 1 60 1 292 1 62 2 
205 2 142 1 258 4 2 1 209 2 3 1 213 1 4 1 218 1 304 2 345 1 225 4 14 2 226 1 308 2 60 1 17 1 352 1 168 2 23 1 172 4 313 1 315 1 236 1 183 1 317 4 363 1 76 1 123 1 32 2 125 1 324 1 369 1 86 2 87 1 92 2 245 1 196 1 292 1 
18 3 186 1 134 6 150 1 229 1 166 1 263 1 368 1 240 1 171 2 7 1 301 1 357 1 286 1 191 1 295 1 43 3 306 1 296 2 360 1 180 1 90 2 38 1 376 1 340 2 161 1 
18 8 134 14 135 1 97 1 171 2 274 1 115 3 295 2 43 6 296 1 360 1 180 11 278 1 46 2 340 1 47 1 187 1 186 4 151 1 263 2 368 2 7 2 128 1 84 2 85 1 306 11 58 1 90 4 38 2 15 3 376 2 61 1 161 1 
41 1 18 1 134 2 65 1 97 1 98 1 275 1 66 1 335 1 295 1 142 1 43 1 336 1 257 1 360 1 119 1 208 1 363 2 340 1 121 1 186 1 187 1 78 1 3 2 368 1 152 1 7 1 343 1 222 1 328 1 346 1 58 1 59 1 90 2 38 1 376 1 163 1 246 1 
41 2 134 20 97 1 142 1 295 3 335 2 43 10 296 4 257 3 46 2 208 2 340 2 148 1 3 3 150 1 263 3 152 1 7 3 301 1 343 3 222 1 306 7 58 1 12 2 159 2 346 2 157 2 59 1 161 3 18 10 229 1 166 1 65 2 351 1 171 8 275 1 360 3 180 7 119 2 363 3 121 3 319 2 187 1 186 7 78 2 368 3 240 1 286 1 129 1 128 4 84 2 85 2 328 2 90 6 38 3 376 3 93 2 378 1 246 1 
18 1 134 2 65 2 351 1 97 1 275 1 69 1 357 1 24 1 142 1 295 2 43 1 257 7 360 2 119 3 182 1 363 1 208 2 121 8 187 1 78 2 146 1 212 1 3 1 50 1 214 1 368 2 367 2 7 2 189 1 343 8 222 1 307 1 59 2 90 4 160 1 38 2 376 2 246 1 
18 1 134 3 171 1 275 1 295 1 142 1 43 2 296 1 360 1 180 1 46 1 363 1 186 1 262 1 3 1 263 1 368 1 7 1 219 1 84 1 85 1 222 1 306 1 58 1 90 2 373 1 38 1 376 1 161 1 
18 2 186 1 134 2 263 1 368 1 171 1 7 1 357 1 128 1 84 1 295 1 175 1 306 1 360 1 180 1 90 2 38 1 376 1 
186 1 134 2 368 1 171 1 7 1 357 1 295 1 155 1 85 1 43 2 296 1 306 1 360 1 180 1 90 2 38 1 376 1 161 1 
18 2 134 4 171 2 357 1 295 1 43 2 296 1 360 1 180 2 46 1 186 2 263 1 368 1 7 1 128 1 84 1 85 1 306 2 90 2 38 1 376 1 161 1 
18 2 186 1 134 2 263 1 368 1 171 1 7 1 128 1 84 1 295 1 175 1 306 1 360 1 180 1 182 1 90 2 38 1 376 1 
186 1 134 2 368 1 171 1 7 1 295 1 155 1 85 1 43 2 296 1 306 1 360 1 180 1 182 1 90 2 38 1 376 1 161 1 
18 2 134 4 171 2 295 1 43 2 296 1 360 1 180 2 182 1 46 1 186 2 263 1 368 1 7 1 128 1 84 1 85 1 306 2 90 2 38 1 376 1 161 1 
18 2 134 4 171 2 295 1 43 2 296 1 360 1 180 2 46 1 186 2 263 1 368 1 7 1 128 1 84 1 85 1 306 2 90 2 38 1 376 1 161 1 
18 1 41 1 134 2 65 1 97 1 335 1 295 1 43 1 257 1 360 1 119 1 208 1 363 1 340 1 121 1 187 1 78 1 3 1 368 1 7 1 343 1 328 1 346 1 159 1 59 1 90 2 38 1 376 1 
18 1 41 1 134 2 65 1 97 1 353 1 140 1 335 1 295 1 43 1 257 1 360 1 119 1 27 1 208 1 363 1 340 1 121 1 187 1 78 1 3 1 368 1 7 1 343 1 59 1 90 2 38 1 376 1 
18 2 134 4 171 2 295 1 43 2 296 1 360 1 180 2 46 1 186 2 263 1 368 1 7 1 128 1 84 1 85 1 306 2 58 1 90 2 38 1 376 1 161 1 
18 2 41 1 134 4 65 1 171 2 335 1 295 1 43 2 296 1 257 1 360 1 180 2 119 1 46 1 208 1 363 1 121 1 186 2 78 1 3 1 263 1 214 1 368 1 7 1 343 1 128 1 84 1 85 1 306 2 328 1 346 1 159 1 90 2 38 1 93 1 376 1 161 1 
18 2 134 3 230 1 171 1 275 1 295 1 142 1 43 1 360 1 180 1 46 1 363 1 186 1 262 1 3 1 263 1 368 1 7 1 219 1 128 1 84 1 85 1 222 1 306 1 58 1 90 2 38 1 376 1 161 1 
18 9 134 19 252 1 274 1 171 6 115 1 295 2 42 1 43 10 296 3 46 3 47 1 33 2 263 3 368 2 52 1 81 1 128 3 84 3 327 2 268 1 372 1 85 3 156 1 90 4 112 1 38 2 15 2 376 2 161 3 
18 14 134 26 171 4 115 2 295 3 42 1 43 12 296 2 26 2 46 3 0 1 260 1 145 1 47 2 210 1 33 4 366 1 263 3 368 3 52 1 81 2 128 2 84 3 327 1 268 2 372 1 85 2 11 1 156 1 90 6 38 3 376 3 15 2 161 2 
134 41 42 1 295 3 43 21 296 4 46 4 0 1 145 1 260 1 47 3 210 1 150 1 263 5 52 1 301 1 268 1 11 1 156 1 112 1 15 4 161 5 18 20 113 1 229 1 166 1 171 8 274 1 115 3 26 1 33 4 366 1 368 3 240 1 81 2 286 1 128 4 84 4 327 1 85 4 372 1 90 6 38 3 376 3 
18 20 113 1 134 38 229 1 166 1 274 1 171 7 115 3 295 4 42 1 43 18 296 4 26 2 46 4 0 1 260 1 145 1 47 3 210 1 150 1 366 1 33 4 263 5 368 4 52 1 240 1 301 1 81 2 286 1 128 3 84 4 327 1 268 1 372 1 85 3 11 1 156 1 90 8 112 1 38 4 15 4 376 4 161 4 
18 27 134 52 229 1 166 1 274 2 171 14 115 4 295 2 42 1 43 25 296 7 26 1 278 2 46 7 0 1 260 1 145 1 47 2 210 1 150 1 366 1 33 4 263 8 368 2 52 1 240 1 301 1 81 1 286 1 128 7 84 7 327 1 268 1 372 1 85 7 11 1 156 1 90 4 38 2 15 4 376 2 161 8 
106 1 251 1 314 1 80 1 283 1 242 1 
350 1 
106 1 251 1 314 1 136 1 242 1 
45 1 
289 1 
106 1 251 1 109 2 108 1 139 1 283 1 242 1 314 1 225 1 183 1 317 1 28 1 73 1 227 1 
106 1 251 1 109 2 108 1 139 1 283 1 242 1 314 1 225 1 183 1 317 1 28 1 73 1 227 1 
106 1 251 1 109 2 108 1 139 1 283 1 242 1 314 1 225 1 183 1 317 1 28 1 73 1 227 1 
45 1 
45 1 
289 1 
289 1 
49 1 200 1 
63 1 350 1 106 1 251 1 108 1 109 1 36 1 355 1 242 1 101 1 314 1 362 1 225 1 317 1 227 1 339 1 
18 1 134 2 65 1 97 1 142 2 295 1 43 1 257 2 360 1 119 1 208 1 103 1 363 2 121 2 341 1 261 1 187 1 78 1 212 1 3 2 368 1 367 2 7 1 189 1 343 2 56 1 58 1 90 2 290 1 38 1 376 1 
249 1 78 1 65 1 167 2 351 1 188 1 214 1 300 1 35 1 343 2 141 1 82 1 326 1 234 1 257 2 179 1 297 1 121 2 162 1 
365 1 249 1 78 1 65 1 167 2 351 1 188 1 343 1 141 1 82 1 326 1 234 1 257 1 179 1 297 1 121 1 162 1 
78 1 146 1 65 1 188 1 35 1 190 1 68 1 343 1 24 1 257 1 119 1 59 1 208 1 121 1 
249 1 78 1 65 1 167 2 351 1 188 1 300 1 35 1 343 1 141 1 82 1 326 1 234 1 257 1 179 1 297 1 121 1 162 1 
228 1 
17 1 191 1 345 1 154 1 87 1 183 1 303 1 
17 1 165 1 352 1 168 1 315 1 258 1 183 2 317 1 2 1 267 1 345 1 288 1 87 1 225 1 196 1 308 1 62 1 
41 3 95 2 99 1 337 2 257 3 102 2 206 2 258 5 46 2 208 3 2 4 214 1 263 2 6 2 215 1 303 1 343 3 154 1 345 2 157 2 59 1 225 5 308 3 161 2 64 1 19 2 17 9 165 6 65 4 311 2 352 4 168 12 235 1 315 4 313 2 358 2 361 3 118 2 119 10 183 8 317 5 121 3 364 2 78 3 79 6 282 1 371 1 84 2 85 2 88 1 87 8 89 6 244 2 196 4 
17 8 309 1 165 3 311 2 168 6 352 2 115 1 294 1 315 2 258 1 183 5 317 1 46 2 0 1 2 2 145 1 364 1 47 1 210 1 79 5 282 1 366 1 263 2 84 2 345 2 85 2 11 1 87 5 89 5 225 1 244 1 308 1 15 1 196 2 161 2 
17 2 311 2 352 1 275 1 173 1 142 1 315 1 207 1 120 1 338 1 317 1 363 1 2 1 147 1 3 1 262 1 150 1 263 2 301 1 286 1 344 1 222 1 87 2 225 1 244 1 196 1 292 1 161 1 
17 1 352 1 303 1 154 1 345 1 315 1 87 1 183 1 196 1 2 1 
17 5 165 5 79 5 263 2 311 2 168 10 84 2 85 2 87 5 89 5 157 1 183 5 46 2 244 1 161 2 
345 1 258 1 225 1 183 1 317 1 308 1 
64 2 17 2 248 1 65 1 352 2 202 1 255 1 24 1 315 2 257 4 258 4 119 1 317 3 208 1 2 2 121 4 364 2 122 1 78 1 146 1 282 2 215 1 284 1 343 4 87 2 59 2 225 3 196 1 308 2 
41 1 94 1 134 1 65 1 97 1 275 2 295 1 142 2 335 1 43 1 257 1 360 1 119 1 363 3 208 1 340 1 121 1 78 1 3 3 262 2 368 1 7 1 343 1 344 1 222 2 328 1 159 1 346 1 90 2 59 1 38 1 376 1 
364 1 17 1 165 2 79 2 282 1 168 4 352 1 240 1 345 2 87 2 315 1 89 2 183 4 196 1 2 1 
251 1 25 1 242 1 
251 1 25 1 242 1 
49 1 251 1 310 1 322 1 242 1 
251 1 25 1 242 1 
251 1 131 1 242 1 
251 1 131 1 242 1 
251 1 131 1 242 1 
251 1 242 1 
321 1 285 1 
18 4 134 8 229 1 150 1 166 1 263 1 368 2 240 1 171 3 301 1 286 1 128 1 295 2 43 4 296 2 90 4 26 1 38 2 376 2 161 1 
18 3 134 6 229 1 150 1 166 1 263 1 240 1 171 2 301 1 286 1 191 1 43 3 296 2 161 1 
18 2 134 4 34 1 263 1 368 1 171 2 128 1 84 1 295 1 43 2 85 1 296 1 90 2 46 1 38 1 376 1 161 1 
47 1 18 3 134 7 263 1 274 1 171 2 115 1 128 1 84 1 85 1 43 4 296 1 46 1 15 2 161 1 
18 11 134 23 229 1 166 1 171 9 274 1 115 2 295 2 43 12 296 5 46 2 278 1 26 2 150 2 263 3 368 2 240 1 301 1 286 2 128 4 84 2 85 2 90 4 38 2 15 2 376 2 61 1 161 3 348 1 
43 1 134 1 15 1 
18 1 134 1 115 1 
18 3 134 6 34 1 263 1 368 1 171 3 128 1 84 1 295 1 43 3 85 1 296 2 157 1 90 2 46 1 38 1 376 1 161 1 
18 6 47 1 210 1 134 12 366 1 263 2 368 1 171 2 115 1 128 1 84 2 42 1 295 1 85 2 43 6 11 1 296 1 90 2 46 2 0 1 38 1 376 1 15 1 161 2 145 1 
18 3 134 6 150 1 263 1 171 2 301 1 286 1 128 1 43 3 296 1 161 1 
18 1 134 3 150 1 229 1 166 1 368 1 171 2 286 1 128 1 295 1 43 2 296 1 90 2 26 1 38 1 376 1 348 1 
18 5 134 10 150 2 263 2 368 1 171 5 301 1 286 2 128 2 295 1 42 1 43 5 296 3 90 2 338 1 38 1 376 1 161 2 
18 2 134 2 263 1 368 1 171 1 128 1 84 1 42 1 295 1 90 2 38 1 376 1 
18 2 134 4 263 1 368 1 171 2 128 1 84 1 42 1 295 1 43 2 85 1 296 1 90 2 46 1 38 1 376 1 161 1 
18 1 134 3 150 1 368 3 171 2 286 1 128 1 42 1 295 3 43 2 296 1 90 6 26 1 112 1 38 3 376 3 348 1 
18 16 134 34 229 1 166 1 170 1 274 1 171 12 115 3 295 5 42 1 43 18 296 7 26 2 46 3 47 1 150 3 34 1 263 5 368 5 240 1 301 2 286 3 128 5 84 3 85 3 194 1 90 10 112 1 195 1 38 5 15 4 376 5 161 5 348 1 
18 4 134 8 229 1 166 1 171 2 115 1 295 1 42 1 43 4 296 2 47 1 150 1 366 1 263 1 368 1 240 1 301 1 286 1 90 2 38 1 15 1 376 1 161 1 
18 6 134 11 229 1 166 1 274 1 171 3 115 1 42 1 295 2 43 5 296 2 46 1 47 1 150 1 366 1 34 1 263 2 368 2 240 1 301 1 286 1 128 1 84 1 90 4 38 2 15 2 376 2 161 1 
18 9 134 19 229 1 166 1 171 4 115 1 295 3 42 1 43 10 296 3 46 2 26 1 0 1 145 1 47 1 210 1 150 1 366 1 34 1 263 3 368 3 240 1 301 1 286 1 128 1 84 2 85 2 11 1 90 6 38 3 15 1 376 3 161 3 
18 10 134 17 229 1 166 1 171 5 115 1 295 3 42 1 43 7 296 3 26 1 46 2 0 1 145 1 47 1 210 1 150 1 366 1 34 1 263 3 368 3 240 1 301 1 286 1 128 2 84 2 85 1 11 1 90 6 38 3 15 1 376 3 161 2 
18 4 134 8 229 1 166 1 171 2 115 1 295 1 42 1 43 4 296 2 47 1 150 1 366 1 263 1 368 1 240 1 301 1 286 1 90 2 38 1 15 1 376 1 161 1 
18 6 47 1 210 1 134 12 366 1 263 2 368 1 171 2 115 1 128 1 84 2 42 1 295 1 85 2 43 6 11 1 296 1 90 2 46 2 0 1 38 1 376 1 15 1 161 2 145 1 
18 10 134 18 229 1 166 1 171 5 115 1 295 4 42 1 43 8 296 3 46 2 26 2 0 1 145 1 47 1 210 1 150 1 366 1 34 1 263 3 368 4 240 1 301 1 286 1 128 2 84 2 85 1 11 1 90 8 38 4 15 1 376 4 161 2 
18 9 134 16 171 6 115 1 42 1 295 4 43 7 296 3 46 3 26 2 0 1 145 1 47 1 210 1 366 1 263 3 368 4 128 3 84 3 85 2 11 1 90 8 112 1 38 4 15 1 376 4 161 2 
18 3 134 7 229 1 150 3 166 2 263 1 171 6 301 1 286 3 128 3 43 4 296 3 161 1 
18 10 134 18 229 1 166 1 171 4 115 1 42 1 295 4 43 8 296 3 46 2 26 2 0 1 145 1 47 1 210 1 150 1 366 1 263 3 368 4 240 1 301 1 286 1 128 1 84 2 85 1 11 1 90 8 112 1 38 4 15 1 376 4 161 2 
142 1 3 1 213 1 217 1 375 1 363 1 340 1 
211 1 149 1 3 1 213 1 127 1 217 1 8 1 220 1 142 1 375 1 363 1 340 1 
191 1 78 1 146 1 257 1 65 1 119 1 59 1 208 1 121 1 24 1 343 1 
41 1 78 1 3 2 65 1 275 1 343 1 335 1 142 1 222 1 257 1 346 1 119 1 59 1 208 1 363 2 340 1 121 1 246 1 
64 1 41 2 65 1 275 1 142 2 335 1 337 1 257 1 118 1 119 3 363 2 208 2 340 1 121 1 78 1 3 2 324 1 343 1 222 2 346 1 245 1 292 1 246 1 
64 1 41 2 65 1 275 1 142 2 335 1 337 1 257 2 118 1 119 3 27 1 363 2 208 2 340 1 121 2 105 1 78 1 3 2 324 1 343 2 222 2 245 1 292 1 246 1 
41 1 64 1 105 1 78 1 65 1 331 1 343 3 345 1 337 1 313 1 257 3 206 1 361 1 118 1 258 1 59 1 225 2 119 4 183 1 317 2 208 1 121 3 104 1 
41 1 64 1 105 1 78 1 65 1 343 3 345 1 337 1 313 1 257 3 102 1 206 1 361 1 118 1 258 1 59 1 225 2 119 4 183 1 317 2 208 1 121 3 
78 1 257 1 65 1 160 1 121 1 343 1 
41 1 78 2 212 1 96 1 65 3 351 1 50 1 214 1 5 1 367 1 99 1 69 1 343 7 307 1 257 6 59 2 119 3 160 1 1 1 208 2 121 7 
41 1 134 6 142 1 295 2 335 1 43 3 257 1 296 2 208 1 340 2 261 1 3 2 150 1 214 1 263 1 7 2 301 1 343 1 222 1 306 1 346 1 159 1 12 1 58 1 161 1 18 3 229 1 65 1 166 1 171 2 275 1 360 2 180 1 119 1 363 2 121 1 186 1 78 1 368 2 240 1 286 1 328 1 90 4 38 2 93 1 376 2 246 1 
17 1 19 1 95 1 352 2 257 1 315 2 102 1 206 1 313 1 361 1 258 2 362 1 119 2 183 1 317 3 2 2 121 1 6 1 215 1 303 1 343 1 345 1 154 1 87 1 59 1 225 3 196 2 308 1 
41 1 78 1 65 2 214 1 99 1 343 2 206 1 257 2 88 1 119 2 160 1 208 1 121 2 
325 1 105 1 78 1 146 1 257 4 65 1 214 1 119 1 59 1 208 1 121 4 24 1 343 4 
64 1 41 1 78 1 96 1 65 2 343 2 204 1 129 1 257 2 119 1 1 1 208 1 121 2 74 1 
234 1 78 1 257 1 65 1 167 1 179 1 59 1 297 1 121 1 343 1 
78 1 212 1 257 2 65 1 351 1 214 1 119 1 290 1 208 1 121 2 343 2 
64 1 146 1 78 2 212 1 65 2 214 1 50 1 24 1 343 5 325 1 257 4 307 1 59 1 119 3 208 2 121 5 
64 1 197 1 146 1 78 2 212 1 65 2 214 1 24 1 343 5 325 1 257 4 307 1 59 1 119 3 208 2 121 5 
41 1 78 1 3 2 65 1 275 1 343 1 335 1 142 1 222 1 257 1 119 1 59 1 27 1 208 1 363 2 340 1 121 1 246 1 
64 1 41 1 78 1 96 1 65 2 5 1 99 1 343 1 257 1 119 1 1 1 208 1 121 1 
39 1 40 1 254 1 329 1 340 1 
40 1 39 2 299 1 254 2 324 1 334 1 345 1 174 1 313 1 362 1 225 2 183 1 329 2 317 2 226 1 245 1 340 1 292 1 164 1 
39 1 40 1 341 1 3 1 254 1 142 1 56 1 103 1 363 1 
334 1 40 1 174 1 
191 1 280 1 158 1 374 1 
280 1 305 1 237 1 269 1 158 1 231 1 374 1 
9 1 237 1 265 1 
280 1 272 1 231 1 138 2 37 1 110 1 305 1 223 1 237 3 269 3 158 1 374 1 
280 1 305 1 224 1 237 2 269 2 158 1 111 1 231 1 374 1 
75 1 280 1 167 1 231 1 305 1 178 1 223 1 237 1 269 1 297 1 162 1 
280 1 305 1 237 1 223 1 269 1 158 1 231 1 
305 1 237 1 223 1 269 1 158 2 231 1 374 1 
280 1 231 2 67 1 370 1 287 1 305 2 223 1 237 2 269 2 158 1 
75 1 342 1 280 2 231 1 100 1 54 1 305 1 223 1 237 3 269 3 158 1 111 2 374 1 
280 1 167 2 231 1 141 1 305 1 55 1 223 1 237 2 179 1 269 2 158 1 111 1 297 1 374 1 162 1 
270 1 75 1 280 2 231 2 100 1 305 2 223 1 237 4 224 1 269 4 158 1 111 2 374 1 
280 1 305 1 237 1 223 1 269 1 158 1 231 1 374 1 
75 1 280 3 114 1 231 1 138 1 100 1 110 1 37 1 305 1 237 4 269 4 158 2 111 2 374 2 
280 1 231 1 305 1 10 1 223 1 237 2 269 2 158 1 243 1 111 1 374 1 347 1 
280 1 231 1 138 2 37 1 110 2 305 1 221 1 223 1 237 3 269 3 158 1 374 1 
280 2 323 2 144 1 241 1 
239 1 305 1 237 1 223 1 269 1 231 1 
342 1 280 1 305 1 237 2 223 1 269 2 158 1 111 1 231 1 374 1 
31 1 
280 1 305 1 237 1 223 1 269 1 158 1 231 1 374 1 
342 1 280 1 231 1 138 1 305 1 223 1 237 3 269 3 158 1 111 1 374 1 
75 1 280 1 114 1 100 1 
280 1 158 1 

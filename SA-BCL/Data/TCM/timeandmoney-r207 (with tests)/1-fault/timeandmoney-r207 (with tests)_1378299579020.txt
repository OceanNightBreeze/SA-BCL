#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 1 104 1 350 1 131 9 132 6 237 2 361 1 66 4 67 1 240 5 49 2 262 1 199 1 290 9 372 1 337 1 171 1 267 2 25 2 51 1 96 2 341 1 147 1 275 2 77 3 184 1 36 2 185 1 
211 1 104 1 350 1 131 9 132 6 237 2 361 1 66 4 67 1 240 5 49 2 262 1 199 1 290 9 372 1 337 1 171 1 267 2 25 2 51 1 96 2 341 1 147 1 275 2 77 3 184 1 36 2 185 1 
211 1 104 1 350 1 131 10 132 7 237 2 361 1 66 5 67 1 240 6 49 2 262 1 199 1 290 10 372 1 337 1 171 1 267 2 25 2 51 1 96 2 341 1 147 1 275 2 77 4 184 1 36 2 185 1 
211 1 104 1 350 1 131 7 132 4 237 1 361 1 66 3 67 1 240 4 49 2 262 1 199 1 290 7 372 1 337 1 171 1 267 2 25 2 51 1 96 2 341 1 147 1 275 2 77 2 36 2 185 1 
262 1 290 4 372 1 337 1 267 1 25 1 131 4 132 3 237 2 147 1 275 1 66 2 77 1 184 1 36 1 185 1 240 3 49 1 
262 1 290 2 372 1 171 1 337 1 41 1 350 1 267 1 25 1 131 2 96 1 256 1 275 1 367 1 240 1 36 1 
262 1 290 3 372 1 211 1 337 1 267 2 25 2 131 3 96 1 132 1 66 1 77 1 240 2 
211 1 131 9 132 7 237 2 66 4 240 5 49 1 262 1 199 1 290 9 372 1 292 1 337 1 267 2 316 1 25 2 96 1 341 1 147 1 275 1 77 3 184 1 185 1 36 1 
211 1 131 9 132 7 237 2 66 4 240 5 49 1 262 1 199 1 290 9 372 1 292 1 337 1 267 2 316 1 25 2 96 1 341 1 147 1 275 1 77 3 184 1 185 1 36 1 
134 1 349 1 64 1 
64 1 288 1 334 2 
146 2 149 2 113 2 374 2 106 1 321 1 368 2 125 2 
187 1 233 1 253 1 189 1 2 1 305 1 159 2 106 1 84 1 193 1 163 1 215 1 113 2 310 1 368 2 289 1 219 1 336 2 291 1 221 1 89 1 374 3 125 2 203 2 143 1 270 1 224 1 146 2 54 1 274 1 345 1 205 1 149 3 321 1 102 1 230 2 38 2 
146 1 149 1 148 1 113 1 87 1 374 1 321 1 368 1 125 1 95 1 
264 1 374 1 295 1 280 1 282 1 134 1 7 1 326 1 146 1 64 1 149 1 150 1 87 1 331 1 
264 2 374 1 125 1 282 1 134 1 7 1 326 1 146 1 64 1 150 2 149 1 113 1 87 1 368 1 331 1 
30 1 264 1 150 1 69 1 236 1 
134 1 30 1 264 2 360 1 64 1 150 2 197 1 236 1 
264 1 150 1 236 1 
264 1 374 1 125 1 95 1 296 1 30 1 146 1 150 1 148 1 149 1 113 1 87 1 321 1 368 1 
64 1 
134 1 39 1 30 1 264 2 64 1 150 2 197 1 236 1 
264 5 370 1 123 1 177 2 124 1 108 2 61 1 213 2 236 2 134 1 30 2 64 1 150 5 197 1 366 1 79 1 313 1 15 1 231 1 
349 1 106 1 
373 1 374 2 106 2 125 1 146 2 149 2 113 1 207 1 368 1 
0 1 293 1 166 1 
221 1 89 1 2 1 159 1 374 1 106 1 203 1 193 1 224 1 194 1 163 1 345 1 149 1 215 1 102 1 230 1 
186 1 221 1 89 1 10 1 2 1 159 1 374 2 293 1 125 1 203 1 193 1 224 1 146 1 345 1 163 1 149 2 215 1 102 1 368 1 230 1 
186 2 10 1 373 1 374 5 106 1 125 4 280 1 354 1 146 5 149 5 113 1 368 4 153 1 21 1 
146 2 149 2 87 1 374 2 368 2 125 2 269 1 95 1 
186 1 146 3 149 3 113 1 374 3 106 1 368 3 125 3 
146 1 149 1 87 1 374 1 368 1 125 1 95 1 
146 1 149 1 373 1 113 1 87 1 207 1 374 1 368 1 125 1 
186 1 187 1 233 1 253 1 2 1 305 1 159 1 106 1 84 1 6 1 193 1 282 1 7 1 326 1 163 1 215 1 113 2 310 1 87 1 368 3 331 1 289 1 336 2 221 1 264 1 89 1 10 1 373 1 374 4 125 3 203 1 143 1 270 1 224 1 146 3 274 1 345 1 149 4 150 1 301 1 321 1 102 1 230 1 38 1 
186 1 146 2 149 2 374 2 106 1 368 1 125 1 21 1 280 1 
186 2 264 1 10 1 373 1 374 3 125 3 282 1 7 1 326 1 146 3 64 1 150 1 149 3 113 1 87 1 301 1 368 3 331 1 155 1 
186 1 0 1 373 1 374 2 293 1 125 2 146 2 149 2 113 1 368 2 
221 1 89 1 2 1 159 1 374 1 106 1 203 1 193 1 224 1 163 1 345 1 149 1 215 1 102 1 230 1 
221 1 89 1 159 1 374 1 106 1 203 1 193 1 283 1 163 1 345 1 149 1 215 1 102 1 230 1 168 1 
0 2 187 1 1 1 84 2 5 1 60 1 255 1 164 1 363 1 310 1 287 1 330 1 166 2 289 1 336 2 9 1 293 2 143 1 270 1 274 1 299 1 248 1 205 2 38 4 
326 1 146 1 149 1 87 1 374 1 368 1 125 1 269 1 
63 1 114 1 
63 1 114 1 
65 1 254 1 
65 1 254 1 
65 1 254 1 
63 1 114 1 35 1 
63 1 114 1 35 1 
63 1 114 1 352 1 
63 2 72 1 112 1 65 1 254 1 114 2 
63 1 114 1 35 1 
63 1 114 1 176 1 
63 1 114 1 176 1 
63 1 114 1 176 1 
304 1 324 1 160 1 106 1 352 1 63 1 136 1 114 1 311 1 368 2 333 1 138 1 118 1 264 1 23 1 172 1 374 2 125 2 343 1 98 1 146 2 150 1 149 2 78 1 
138 2 210 1 264 2 23 1 94 1 141 1 178 1 179 2 63 2 64 1 204 1 112 1 150 2 136 2 151 1 114 2 78 2 311 2 333 3 
275 1 36 1 49 1 
275 1 367 1 36 1 
358 1 59 1 83 1 367 1 36 3 49 2 
272 1 59 1 83 1 367 1 36 2 49 1 
83 1 59 2 367 1 36 2 49 1 
304 1 212 1 351 2 160 1 255 1 108 1 213 1 236 1 357 1 134 1 110 1 164 1 64 2 287 1 197 1 288 1 313 2 334 3 220 1 264 5 169 1 177 1 246 2 343 1 342 2 30 4 248 1 225 1 150 5 303 1 15 3 231 1 
304 4 212 2 351 6 255 3 108 2 236 6 213 2 134 1 357 1 164 3 64 5 287 3 197 1 88 1 366 1 288 3 313 6 241 1 117 5 334 9 220 3 264 9 169 2 69 5 177 2 246 6 97 1 30 7 377 1 248 3 150 9 183 1 14 1 15 8 231 1 
304 1 212 1 351 2 255 1 108 1 213 1 134 1 110 1 164 1 64 3 287 1 366 1 288 2 313 2 334 4 220 1 264 3 169 1 177 1 246 2 342 1 30 2 225 1 248 1 150 3 15 3 
304 2 212 1 351 4 255 2 108 1 213 1 134 1 110 1 164 2 64 4 287 2 88 1 366 1 288 3 313 4 334 7 220 2 264 4 169 1 177 1 246 4 342 2 30 3 225 1 248 2 150 4 183 1 14 1 15 5 
349 1 215 1 75 1 
215 1 20 1 
217 1 
345 1 215 1 102 1 
308 1 215 1 
345 1 215 1 
345 1 215 3 74 1 75 2 181 1 102 1 
55 1 156 1 323 1 276 1 244 1 1 3 315 1 84 3 60 2 44 1 53 2 144 1 164 1 205 4 287 1 103 1 38 7 
55 1 156 1 323 1 276 1 244 1 1 3 315 1 84 3 60 2 44 1 53 2 144 1 164 1 205 4 287 1 103 1 38 7 
55 1 156 1 276 1 323 1 244 1 1 3 315 1 84 3 60 2 44 1 53 2 144 1 359 1 164 1 205 4 287 1 103 1 38 7 
55 1 276 1 156 2 323 2 187 1 1 10 81 1 84 15 60 5 255 3 192 1 44 2 309 3 164 4 257 1 286 1 287 4 220 3 336 2 244 5 315 1 122 1 140 4 142 1 143 1 53 3 144 2 270 1 274 1 248 3 205 16 103 1 13 1 38 31 
55 1 323 1 276 1 156 2 187 2 1 9 81 1 84 7 60 5 44 2 355 1 164 3 287 3 68 1 336 4 244 4 315 2 143 2 53 2 270 2 144 1 274 2 73 1 205 9 38 16 
232 1 40 1 159 1 131 2 132 1 193 1 358 1 47 1 111 1 163 1 258 1 367 1 240 1 332 1 49 1 262 1 290 2 372 1 337 1 267 1 25 1 339 1 203 1 96 1 275 1 152 1 101 1 230 1 154 1 36 2 
232 1 40 1 190 1 159 1 131 3 132 2 193 1 133 1 358 1 111 1 163 1 258 1 367 1 240 1 332 1 49 1 262 1 290 3 372 1 267 1 25 1 339 1 203 1 96 1 29 1 275 1 101 1 230 1 154 1 36 2 
232 1 40 1 190 1 159 1 131 2 132 2 193 1 358 1 111 1 163 1 367 1 240 1 332 1 49 1 262 1 290 2 372 1 203 1 96 1 29 1 275 1 101 1 230 1 154 1 36 2 
290 1 232 2 40 2 89 1 267 1 25 1 159 1 131 1 203 1 96 2 193 1 133 1 46 1 163 1 345 1 318 1 17 1 215 1 115 1 101 2 369 1 230 1 260 1 
290 1 40 1 232 1 337 1 190 1 267 1 25 1 159 1 339 1 131 1 203 1 96 1 193 1 358 1 163 1 111 1 275 1 258 1 152 1 367 1 101 1 36 2 154 1 230 1 332 1 49 1 
302 1 
279 1 235 1 236 6 193 1 280 1 282 1 134 1 7 1 326 1 46 1 87 1 197 3 288 2 331 1 334 2 335 1 139 1 89 2 245 1 93 1 202 2 203 2 295 1 11 1 297 2 146 1 345 1 150 5 149 1 206 1 346 2 15 2 159 2 306 1 108 1 213 1 163 1 64 2 215 1 19 2 365 4 313 2 169 1 264 5 374 1 177 1 376 2 318 1 319 1 33 1 227 2 229 1 230 2 80 2 231 1 
39 1 264 3 245 1 93 1 374 1 235 1 295 1 236 2 11 1 280 1 282 1 326 1 7 1 146 1 150 3 149 1 206 1 87 1 197 1 346 1 365 2 331 1 
39 1 235 1 236 1 280 1 282 1 7 1 326 1 134 1 64 1 87 1 365 3 197 1 331 1 264 3 245 1 93 1 374 1 295 1 376 1 11 1 146 1 149 1 150 3 206 1 
39 1 235 1 280 1 236 2 282 1 7 1 326 1 134 1 64 1 87 1 197 1 365 3 331 1 264 3 245 1 93 1 374 1 295 1 376 1 11 1 146 1 149 1 150 3 206 1 227 1 346 1 
39 1 279 1 306 1 108 1 235 1 213 1 280 1 236 7 282 1 134 5 7 1 326 1 284 1 64 5 137 1 87 1 19 2 197 3 365 6 288 2 313 1 331 1 264 5 245 1 93 1 374 1 50 1 177 1 202 2 295 1 376 4 11 1 297 2 146 1 150 5 149 1 206 1 320 1 227 4 346 4 80 2 15 1 231 1 322 1 
279 1 235 1 280 1 236 4 282 1 326 1 7 1 134 1 87 1 197 2 331 1 288 2 334 2 245 1 93 1 202 2 295 1 11 1 297 2 146 1 149 1 150 4 206 1 346 2 15 1 306 1 108 1 213 1 64 2 365 4 19 2 313 1 264 4 374 1 177 1 376 2 319 1 227 2 80 2 231 1 
279 1 306 1 108 1 235 1 236 4 280 1 213 1 282 1 134 1 7 1 326 1 64 1 284 1 87 1 197 2 19 2 365 4 288 2 313 1 331 1 264 4 245 1 93 1 374 1 50 1 177 1 202 2 295 1 376 2 11 1 297 2 146 1 149 1 150 4 206 1 346 2 227 2 80 2 15 1 322 1 231 1 
279 1 306 1 108 1 235 1 236 4 280 1 213 1 282 1 134 1 7 1 326 1 64 1 284 1 87 1 197 2 19 2 365 4 288 2 313 1 331 1 264 4 245 1 93 1 374 1 50 1 177 1 202 2 295 1 376 2 11 1 297 2 146 1 149 1 150 4 206 1 346 2 227 2 80 2 15 1 322 1 231 1 
278 1 306 1 108 1 235 1 236 4 280 1 213 1 282 1 134 1 7 1 326 1 64 1 87 1 197 2 365 4 313 1 331 1 334 2 170 2 264 4 245 1 90 1 93 1 374 1 70 1 340 2 50 1 177 1 295 1 376 2 11 1 297 2 146 1 149 1 150 4 206 1 346 2 227 2 80 2 15 1 231 1 
279 1 306 1 108 1 235 1 213 1 280 1 236 5 282 1 134 1 7 1 326 1 64 1 284 1 137 1 87 1 197 2 19 2 365 5 288 2 313 1 331 1 264 4 245 1 93 1 374 1 50 1 177 1 202 2 295 1 376 3 11 1 297 2 146 1 149 1 150 4 206 1 227 3 346 3 80 2 15 1 231 1 322 1 
279 1 306 1 108 1 235 1 213 1 280 1 236 5 282 1 134 1 7 1 326 1 64 1 284 1 137 1 87 1 197 2 19 2 365 5 288 2 313 1 331 1 264 4 245 1 93 1 374 1 50 1 177 1 202 2 295 1 376 3 11 1 297 2 146 1 149 1 150 4 206 1 227 3 346 3 80 2 15 1 231 1 322 1 
278 1 235 1 280 1 236 4 282 1 326 1 7 1 134 1 87 1 197 2 331 1 334 2 245 1 93 1 340 2 295 1 11 1 297 2 146 1 149 1 150 4 206 1 346 2 15 1 306 1 108 1 213 1 64 1 365 4 313 1 264 4 170 2 374 1 177 1 376 2 319 1 227 2 80 2 231 1 
55 1 156 1 276 1 0 1 349 1 187 1 1 2 84 3 106 2 60 2 44 1 164 1 310 1 287 1 166 1 289 1 336 2 9 1 315 1 293 1 143 1 53 1 270 1 274 1 205 3 38 6 
0 4 1 2 187 2 253 1 57 1 325 1 106 1 84 6 60 1 255 1 192 1 309 3 164 1 310 1 287 2 166 11 116 1 289 2 220 2 336 4 244 1 140 3 293 11 142 1 52 1 143 2 270 2 54 1 274 2 248 2 205 8 250 1 38 14 
186 1 0 1 187 1 2 1 253 1 159 1 106 1 84 1 193 1 194 1 163 1 215 1 310 1 368 1 289 1 200 1 336 2 221 1 89 1 10 1 374 2 203 1 125 1 143 1 224 1 270 1 146 1 344 1 345 1 274 1 54 1 205 1 149 2 250 1 102 1 230 1 379 1 38 2 
276 1 186 1 0 7 187 3 233 2 1 8 2 2 190 1 84 10 82 2 44 1 193 2 287 3 289 3 336 6 244 4 89 1 10 1 293 7 203 3 53 1 143 3 298 1 146 1 54 1 345 2 248 2 205 10 149 3 250 1 102 2 55 1 156 1 253 1 159 3 106 2 60 4 255 2 162 2 214 2 163 2 164 3 215 2 310 3 216 2 368 1 166 7 218 1 220 2 221 2 315 1 374 3 125 1 270 3 224 2 273 1 274 3 230 3 38 20 
186 1 187 2 253 1 190 1 159 7 84 1 43 1 193 2 238 1 46 1 47 1 163 2 215 3 310 2 198 1 368 1 289 2 336 4 291 2 173 1 9 1 89 2 374 1 294 1 125 1 203 8 71 1 143 2 270 2 31 1 146 1 274 2 54 1 318 1 345 2 205 1 149 1 230 8 38 2 
0 1 1 1 187 1 84 2 60 1 255 1 135 1 164 1 113 1 310 1 287 1 166 1 368 1 289 1 220 1 336 2 373 1 374 1 293 1 125 1 143 1 270 1 146 1 274 1 248 1 205 1 149 1 250 1 38 3 
289 1 336 2 244 1 0 1 9 1 1 1 187 1 293 1 143 1 270 1 274 1 299 1 248 1 205 2 310 1 287 1 166 1 38 2 
289 1 336 2 0 1 9 1 1 1 187 1 293 1 84 2 60 1 255 1 143 1 270 1 274 1 363 1 164 1 310 1 166 1 38 2 
0 2 187 1 1 2 84 2 60 1 255 1 164 1 310 1 287 1 166 2 220 1 289 1 336 2 244 1 9 1 293 2 143 1 270 1 248 1 274 1 205 2 38 4 
289 1 336 2 244 1 0 1 1 1 187 1 293 1 143 1 270 1 238 1 274 1 299 1 248 1 205 2 310 1 287 1 166 1 38 2 
289 1 336 2 0 1 1 1 187 1 293 1 84 2 60 1 255 1 143 1 270 1 238 1 274 1 363 1 164 1 310 1 166 1 38 2 
0 2 187 1 1 2 84 2 60 1 255 1 238 1 164 1 310 1 287 1 166 2 220 1 289 1 336 2 244 1 293 2 143 1 270 1 248 1 274 1 205 2 38 4 
0 2 187 1 1 2 84 2 60 1 255 1 164 1 310 1 287 1 166 2 220 1 289 1 336 2 244 1 293 2 143 1 270 1 248 1 274 1 205 2 38 4 
233 1 187 1 2 1 253 1 159 1 106 1 84 1 193 1 163 1 215 1 310 1 289 1 336 2 221 1 89 1 374 1 203 1 143 1 224 1 270 1 54 1 345 1 274 1 205 1 149 1 102 1 230 1 38 2 
187 1 253 1 159 1 106 1 84 1 193 1 283 1 163 1 215 1 310 1 167 1 168 1 289 1 336 2 221 1 89 1 374 1 203 1 143 1 270 1 54 1 345 1 274 1 205 1 149 1 102 1 230 1 38 2 
0 2 187 1 1 2 84 2 60 1 255 1 164 1 310 1 287 1 166 2 220 1 289 1 336 2 244 1 293 2 143 1 270 1 248 1 274 1 205 2 250 1 38 4 
0 2 1 2 233 1 187 1 2 1 159 1 84 2 60 1 255 1 193 1 47 1 163 1 214 1 164 1 215 1 310 1 287 1 166 2 289 1 220 1 336 2 244 1 221 1 374 1 293 2 203 1 143 1 224 1 270 1 248 1 345 1 274 1 205 2 149 1 102 1 230 1 38 4 
0 1 1 1 187 1 188 1 84 1 255 1 164 1 113 1 310 1 287 1 368 1 166 1 289 1 220 1 336 2 244 1 373 1 374 1 293 1 125 1 143 1 270 1 146 1 274 1 248 1 205 2 149 1 250 1 38 3 
55 1 156 1 276 1 187 3 1 8 81 1 84 21 60 4 255 4 192 1 44 1 307 1 281 1 109 1 86 1 309 3 164 5 287 5 312 1 22 1 220 4 243 1 336 6 244 4 315 1 140 4 268 1 142 3 53 1 143 3 270 3 247 1 99 1 274 3 73 1 248 4 205 20 226 4 127 1 100 1 76 2 251 1 38 41 
55 1 156 1 276 1 187 4 1 7 81 2 84 18 60 4 255 3 192 1 44 1 307 1 281 1 109 1 86 1 309 3 164 4 287 5 312 1 22 1 220 4 243 1 336 8 244 3 315 1 140 4 268 1 142 3 53 1 143 4 270 4 247 1 99 1 274 4 73 1 248 4 205 20 226 4 127 1 100 1 76 2 251 1 38 38 
55 1 156 1 276 1 187 2 1 14 81 1 84 25 60 7 255 7 192 2 44 1 307 1 281 1 109 1 86 1 309 4 164 8 287 8 312 1 22 1 220 7 336 4 244 7 315 1 140 4 268 1 142 2 53 1 52 2 143 2 270 2 247 1 99 1 274 2 73 1 248 7 205 27 226 4 127 1 100 1 76 1 38 52 
187 2 1 6 84 10 60 3 255 3 192 1 86 1 309 1 164 3 364 1 287 3 312 1 220 3 336 4 244 3 140 2 268 2 142 1 143 2 270 2 247 1 274 2 73 1 248 3 205 9 226 2 127 1 76 1 251 1 38 19 
1 4 187 3 81 2 84 12 60 2 255 2 307 1 281 1 86 1 309 2 109 1 164 2 287 3 312 2 22 1 220 3 336 6 244 2 140 2 268 1 142 2 143 3 270 3 247 1 99 1 274 3 73 1 248 3 205 14 226 4 127 1 76 2 100 1 38 26 
209 1 63 1 138 1 112 1 94 1 136 1 151 1 114 1 311 1 78 1 
324 1 352 1 
63 1 138 1 327 1 120 1 266 1 136 1 114 1 311 1 78 1 
300 1 35 1 
72 1 24 1 176 1 
138 1 23 1 264 1 94 1 141 1 178 1 179 1 63 1 64 1 204 1 112 1 150 1 136 1 151 1 114 1 78 1 311 1 333 2 
138 1 23 1 264 1 94 1 141 1 178 1 179 1 63 1 64 1 204 1 112 1 150 1 136 1 151 1 114 1 78 1 311 1 333 2 
138 1 23 1 264 1 94 1 141 1 178 1 179 1 63 1 64 1 204 1 112 1 150 1 136 1 151 1 114 1 78 1 311 1 333 2 
72 1 300 1 35 1 
72 1 300 1 35 1 
24 1 176 1 
72 1 24 1 176 1 
118 1 98 1 
304 1 324 1 160 1 106 1 352 1 63 1 136 1 114 1 311 1 368 2 333 1 138 1 118 1 264 1 172 1 374 2 125 2 179 1 343 1 30 1 98 1 146 2 204 1 149 2 150 1 34 1 78 1 
187 1 253 1 234 1 159 2 84 1 107 1 353 1 193 1 356 1 163 1 215 1 310 1 289 1 119 1 336 2 291 2 374 2 203 2 71 1 143 1 270 1 31 1 146 2 345 1 274 1 54 1 205 1 149 2 250 1 230 2 38 2 
371 1 232 1 190 1 159 2 339 1 203 2 193 1 317 1 358 1 47 1 163 1 111 1 18 1 275 1 367 1 36 2 230 2 154 1 49 1 
232 1 190 1 159 1 339 1 203 1 193 1 358 1 145 1 111 1 163 1 18 1 275 1 367 1 36 2 230 1 154 1 49 1 
371 1 232 1 89 1 159 1 129 1 203 1 193 1 46 1 163 1 345 1 17 1 318 1 215 1 230 1 
371 1 232 1 190 1 159 1 339 1 203 1 193 1 317 1 358 1 111 1 163 1 18 1 275 1 367 1 36 2 230 1 154 1 49 1 
196 1 
134 1 349 1 64 1 123 1 79 1 313 1 15 1 
279 1 108 1 213 1 236 1 134 1 64 2 19 1 197 1 288 1 313 1 334 1 264 1 177 1 202 1 150 1 15 1 231 1 
193 4 236 5 282 2 134 2 47 1 48 1 197 3 287 2 329 2 288 6 334 12 139 1 89 1 201 2 203 3 246 6 345 3 248 2 150 5 347 2 249 1 102 3 15 9 252 2 56 2 158 1 351 6 159 3 108 4 255 2 213 4 308 2 162 2 163 3 64 8 164 2 215 10 20 3 313 8 220 2 169 2 264 5 222 1 123 1 177 4 32 2 180 2 75 2 128 1 181 1 79 1 230 3 381 2 231 4 
351 5 108 2 255 2 307 1 236 1 213 2 281 1 45 1 134 2 85 1 109 1 309 1 64 5 164 2 197 1 287 2 288 3 313 5 334 6 220 2 169 1 264 1 139 1 140 1 201 1 177 2 246 5 142 1 99 1 248 2 150 1 100 1 347 2 15 8 231 2 
156 1 108 1 44 1 213 1 355 1 284 1 164 1 113 1 87 1 287 2 368 1 313 2 264 1 315 1 374 1 201 1 177 1 125 1 95 1 296 1 146 1 149 1 150 1 148 1 347 2 321 1 15 2 231 1 
123 1 177 1 108 1 213 1 134 1 64 1 79 1 313 1 15 1 231 1 
220 2 351 5 201 1 246 5 255 2 162 1 248 2 64 5 164 2 287 2 347 2 313 5 288 5 15 5 334 10 
134 1 264 1 64 1 150 1 197 1 236 1 
158 2 159 4 108 2 193 1 213 2 236 4 46 1 163 1 215 1 197 2 366 1 313 2 335 1 169 2 264 3 89 2 139 2 222 1 175 1 223 1 177 2 203 4 345 1 318 1 150 3 33 1 230 4 15 2 231 1 
187 1 233 1 253 1 2 1 305 1 159 1 106 1 84 1 193 1 163 1 113 2 215 1 310 1 368 2 289 1 336 2 221 1 89 1 374 3 203 1 125 2 143 1 224 1 270 1 146 2 274 1 345 1 149 3 321 1 102 1 230 1 38 1 
169 1 139 1 351 2 177 1 246 2 108 1 53 1 213 1 134 2 64 4 288 2 313 2 15 1 334 4 231 1 
138 1 277 1 311 1 
138 1 277 1 311 1 
271 1 118 1 138 1 151 1 311 1 
138 1 277 1 311 1 
138 1 311 1 62 1 
138 1 311 1 62 1 
138 1 311 1 62 1 
138 1 311 1 
63 1 114 1 
55 1 276 1 156 1 187 1 1 2 84 4 60 2 44 1 309 1 109 1 164 1 287 1 336 2 315 1 140 1 142 1 53 1 143 1 270 1 274 1 73 1 205 4 38 8 
55 1 156 1 276 1 187 2 1 3 157 1 84 5 60 2 192 1 44 1 109 1 309 1 164 1 287 2 220 1 336 4 244 1 315 1 140 2 142 1 53 1 143 2 270 2 73 1 274 2 248 1 205 6 38 11 
55 1 156 1 276 1 187 3 1 4 157 1 81 1 84 10 60 3 255 2 44 1 281 1 307 1 309 1 109 1 164 3 287 3 220 2 336 6 244 1 315 1 140 1 142 1 53 1 143 3 270 3 99 1 274 3 73 1 248 2 205 9 100 1 38 19 
55 1 156 1 276 1 187 3 1 5 157 1 81 1 84 7 60 3 255 1 44 1 281 1 307 1 309 1 109 1 164 2 287 3 220 2 336 6 244 2 315 1 140 1 142 1 53 1 143 3 270 3 99 1 274 3 73 1 248 2 205 10 100 1 38 17 
55 1 276 1 156 1 187 1 1 2 84 4 60 2 44 1 309 1 109 1 164 1 287 1 336 2 315 1 140 1 142 1 53 1 143 1 270 1 274 1 73 1 205 4 38 8 
187 1 1 2 84 6 60 1 255 2 281 1 307 1 309 1 109 1 164 2 287 2 220 2 336 2 244 1 140 1 142 1 143 1 270 1 99 1 274 1 73 1 248 2 205 6 100 1 38 12 
55 1 156 1 276 1 187 4 1 5 157 1 81 2 84 8 60 3 255 1 44 1 307 1 281 1 109 1 309 1 164 2 287 3 220 2 336 8 244 2 315 1 140 1 142 1 53 1 143 4 270 4 99 1 274 4 73 1 248 2 205 10 100 1 38 18 
187 4 1 6 81 2 84 7 60 3 255 2 307 1 281 1 109 1 309 1 164 2 287 3 220 3 336 8 244 3 140 1 142 1 143 4 270 4 99 1 73 1 274 4 248 3 205 9 100 1 251 1 38 16 
55 1 276 2 156 3 244 3 1 6 315 1 84 4 60 3 44 3 164 1 205 3 287 1 38 7 
55 1 156 1 276 1 187 4 1 4 81 2 84 8 60 3 255 1 44 1 307 1 281 1 109 1 309 1 164 2 287 3 220 2 336 8 244 1 315 1 140 1 142 1 53 1 143 4 270 4 99 1 73 1 274 4 248 2 205 10 100 1 251 1 38 18 
55 1 336 4 276 1 156 1 244 1 1 3 187 2 315 1 81 1 84 4 60 2 53 1 143 2 44 1 270 2 274 2 164 1 205 4 287 1 38 8 
55 1 276 1 156 1 349 1 1 2 315 1 84 3 60 2 53 1 44 1 205 3 164 1 287 1 38 6 
220 1 336 2 244 1 1 2 187 1 157 1 84 2 60 1 255 1 143 1 270 1 274 1 248 1 164 1 205 2 287 1 38 4 
220 1 244 1 1 2 140 2 84 4 60 1 255 1 142 1 192 1 309 1 248 1 164 1 205 3 287 1 38 7 
55 1 156 2 276 1 1 9 187 2 325 1 81 2 84 12 60 5 255 2 192 1 44 2 309 2 164 3 287 3 220 2 336 4 244 4 315 1 140 2 53 1 52 1 143 2 270 2 248 2 274 2 205 11 208 1 38 23 
140 1 84 1 38 1 
309 1 205 1 38 1 
220 1 336 2 244 1 187 1 1 3 157 1 84 3 60 2 255 1 143 1 270 1 162 1 274 1 248 1 205 3 164 1 287 1 38 6 
187 1 1 2 84 6 60 1 255 2 281 1 307 1 309 1 109 1 164 2 287 2 220 2 336 2 244 1 140 1 142 1 143 1 270 1 99 1 274 1 73 1 248 2 205 6 100 1 38 12 
156 1 244 1 1 2 315 1 84 3 60 1 44 1 205 3 164 1 287 1 38 6 
55 1 156 1 276 1 336 2 244 1 1 2 187 1 81 1 84 2 60 1 44 1 143 1 270 1 274 1 205 1 208 1 38 3 
336 2 156 2 244 2 187 1 1 5 315 1 84 5 60 3 143 1 44 2 270 1 355 1 274 1 73 1 205 5 164 2 287 2 38 10 
336 2 244 1 187 1 1 1 143 1 270 1 73 1 274 1 248 1 205 2 287 1 38 2 
220 1 336 2 244 1 1 2 187 1 84 2 60 1 255 1 143 1 270 1 73 1 274 1 248 1 164 1 205 2 287 1 38 4 
336 6 156 1 244 1 187 3 1 2 81 1 84 2 60 1 143 3 44 1 270 3 73 1 274 3 205 1 208 1 251 1 38 3 
55 1 156 3 276 1 187 5 1 12 157 1 81 2 84 18 60 7 255 3 192 1 44 3 309 3 164 5 286 1 287 5 220 3 336 10 244 5 315 2 122 1 140 4 142 1 53 1 143 5 270 5 274 5 73 1 248 3 205 16 208 1 13 1 251 1 38 34 
146 1 121 1 149 1 374 1 106 1 21 1 280 1 
348 1 121 1 374 1 106 1 280 1 8 1 146 1 195 1 239 1 149 1 12 1 21 1 
46 1 349 1 163 1 345 1 318 1 89 1 215 1 159 1 203 1 230 1 193 1 
186 1 221 1 89 1 2 1 159 1 374 2 106 1 125 1 203 1 193 1 146 1 345 1 163 1 149 2 215 1 102 1 368 1 230 1 
252 1 186 1 221 1 2 1 158 1 159 1 374 2 106 1 125 1 203 1 193 1 308 1 326 1 7 1 146 2 345 2 163 1 149 2 215 3 87 1 102 2 368 2 230 1 
252 1 186 1 221 1 174 1 158 1 159 2 374 2 106 1 125 1 203 2 193 1 308 1 326 1 7 1 146 2 345 2 163 1 149 2 215 3 87 1 102 2 368 2 230 2 168 1 
252 1 264 2 263 1 89 1 174 1 158 1 338 1 159 3 203 3 193 1 236 1 282 1 308 1 134 1 345 1 163 1 64 1 150 2 215 4 75 1 102 1 230 3 20 1 
252 1 264 2 89 1 174 1 158 1 159 3 203 3 193 1 236 1 282 1 308 1 134 1 345 1 163 1 64 1 150 2 32 1 215 4 75 1 102 1 230 3 20 1 
163 1 159 1 198 1 203 1 230 1 193 1 
291 1 173 1 89 2 190 1 159 6 43 1 294 1 203 7 193 3 31 1 47 1 345 2 163 2 285 1 215 3 165 1 198 1 181 1 102 1 230 7 261 1 
55 1 156 1 276 1 186 1 0 1 1 2 187 2 233 1 2 1 159 1 106 2 84 3 60 2 107 1 44 1 193 1 47 1 163 1 214 1 164 1 215 1 310 2 287 1 216 1 166 1 368 1 289 2 336 4 221 1 315 1 374 2 293 1 125 1 203 1 53 1 143 2 270 2 224 1 146 1 345 1 274 2 205 3 149 2 250 1 102 1 230 1 38 6 
159 1 108 2 213 2 236 2 282 1 134 1 64 1 215 2 197 1 329 1 313 1 20 1 264 3 89 1 123 1 222 1 177 2 203 1 30 1 150 3 32 1 180 1 75 1 79 1 230 1 15 1 231 2 381 1 
159 2 203 2 193 2 47 1 345 1 163 1 215 2 75 1 249 1 198 1 181 1 102 1 230 2 
46 1 47 1 163 1 345 1 318 1 89 1 174 1 215 1 159 4 27 1 203 4 230 4 193 1 
242 1 158 1 159 2 203 2 193 2 126 1 273 1 345 1 163 1 215 1 165 1 102 1 230 2 261 1 
163 1 111 1 89 1 275 1 159 1 367 1 203 1 36 1 230 1 193 1 
190 1 159 2 203 2 193 1 356 1 47 1 31 1 345 1 163 1 215 1 230 2 
89 1 158 1 159 4 27 1 203 5 294 1 43 1 193 2 46 1 47 1 31 1 318 1 345 2 163 2 215 3 230 5 
89 1 91 1 158 1 159 4 27 1 203 5 43 1 193 2 46 1 47 1 31 1 318 1 345 2 163 2 215 3 230 5 
186 1 221 1 89 1 159 1 374 2 106 1 125 1 203 1 193 1 146 1 345 1 163 1 149 2 215 1 102 1 368 1 230 1 168 1 
158 1 159 1 203 1 193 2 345 1 163 1 285 1 215 1 165 1 181 1 102 1 230 1 261 1 
314 1 328 1 26 1 106 1 28 1 
264 2 314 2 26 2 106 1 28 1 282 1 134 1 326 1 7 1 30 1 362 1 64 1 150 2 328 2 87 1 301 1 380 1 331 1 37 1 
119 1 234 1 26 1 374 1 28 1 353 1 146 1 328 1 149 1 
362 1 28 1 37 1 
262 1 372 1 349 1 240 1 
262 1 290 1 372 1 267 1 25 1 131 1 240 1 
40 1 131 1 96 1 
262 1 290 3 372 1 337 1 171 2 265 1 267 1 25 1 42 1 131 3 375 1 240 1 
262 1 237 1 290 2 372 1 267 1 25 1 131 2 240 1 132 1 
290 1 337 1 267 1 25 1 131 1 147 1 275 1 66 1 240 1 36 1 49 1 
262 1 290 1 337 1 267 1 25 1 131 1 240 1 
262 2 290 1 372 1 337 1 267 1 25 1 131 1 
262 1 16 1 290 2 337 1 267 2 105 1 25 2 131 2 130 1 240 1 
262 1 199 1 290 3 372 1 337 1 267 1 25 1 131 3 132 2 341 1 66 1 77 1 240 2 
262 1 290 2 372 1 337 1 267 1 25 1 131 2 132 1 358 1 275 1 367 1 240 1 36 2 259 1 49 1 
262 1 290 4 372 1 337 1 267 2 25 2 131 4 132 2 237 1 66 1 77 1 184 1 240 2 
262 1 290 1 372 1 337 1 267 1 25 1 131 1 240 1 
262 2 290 4 372 2 171 1 265 1 4 1 267 1 25 1 42 1 131 4 132 2 66 1 77 1 240 3 
262 1 290 2 372 1 337 1 3 1 267 1 316 1 25 1 191 1 131 2 240 1 132 1 
262 1 290 3 372 1 171 2 337 1 92 1 265 2 267 1 25 1 42 1 131 3 240 1 
161 1 378 1 228 2 240 2 
290 1 337 1 267 1 25 1 182 1 131 1 
262 1 199 1 290 2 372 1 337 1 267 1 25 1 131 2 240 1 132 1 
58 1 
262 1 290 1 372 1 337 1 267 1 25 1 131 1 240 1 
262 1 199 1 290 3 372 1 337 1 171 1 267 1 25 1 131 3 132 1 240 1 
66 1 4 1 77 1 240 1 
262 1 240 1 

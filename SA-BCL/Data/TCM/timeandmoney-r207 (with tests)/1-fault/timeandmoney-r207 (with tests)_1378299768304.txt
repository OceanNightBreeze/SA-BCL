#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
268 1 365 1 162 1 72 1 244 1 163 1 336 1 96 2 269 1 77 9 140 9 50 5 54 1 297 3 374 1 277 4 324 2 149 2 186 1 257 1 261 2 190 1 304 6 192 2 310 2 136 1 67 2 159 1 
268 1 365 1 162 1 72 1 244 1 163 1 336 1 96 2 269 1 77 9 140 9 50 5 54 1 297 3 374 1 277 4 324 2 186 1 149 2 257 1 261 2 190 1 304 6 192 2 310 2 136 1 67 2 159 1 
268 1 365 1 162 1 72 1 244 1 163 1 336 1 96 2 269 1 77 10 140 10 50 6 54 1 297 4 374 1 277 5 324 2 186 1 149 2 257 1 261 2 190 1 304 7 192 2 310 2 136 1 67 2 159 1 
268 1 365 1 162 1 72 1 244 1 163 1 336 1 96 2 269 1 77 7 140 7 50 4 54 1 297 2 374 1 277 3 324 2 186 1 149 1 257 1 261 2 190 1 304 4 192 2 310 2 136 1 67 2 
268 1 72 1 244 1 324 1 149 2 336 1 96 1 269 1 77 4 140 4 304 3 50 3 192 1 310 1 297 1 67 1 277 2 159 1 
115 1 220 1 72 1 244 1 324 1 163 1 261 1 269 1 77 2 50 1 140 2 376 1 192 1 310 1 136 1 67 1 
72 1 244 1 324 2 186 1 261 1 269 1 77 3 140 3 50 2 304 1 310 2 297 1 277 1 
268 1 162 1 72 1 244 1 336 1 96 1 269 1 77 9 140 9 50 5 271 1 297 3 277 4 324 2 186 1 149 2 261 1 190 1 304 7 192 1 310 2 67 1 311 1 159 1 
268 1 162 1 72 1 244 1 336 1 96 1 269 1 77 9 140 9 50 5 271 1 297 3 277 4 324 2 186 1 149 2 261 1 190 1 304 7 192 1 310 2 67 1 311 1 159 1 
71 1 373 1 114 1 
292 2 129 1 114 1 
80 2 308 2 366 2 113 2 102 1 119 2 198 2 93 1 
161 1 290 2 366 2 313 1 119 2 198 2 47 2 164 1 202 1 3 1 296 1 341 1 101 1 80 3 142 1 102 1 343 1 274 1 83 1 349 1 12 2 253 1 231 1 232 2 189 1 155 1 37 1 216 1 236 1 308 2 112 2 113 3 89 1 19 1 361 1 285 1 93 1 
80 1 308 1 366 1 113 1 102 1 61 1 119 1 198 1 201 1 175 1 
71 1 300 1 119 1 35 1 188 1 201 1 225 1 80 1 320 1 113 1 57 1 226 1 43 1 114 1 
71 1 366 1 300 1 198 1 119 1 35 2 188 1 201 1 80 1 320 2 308 1 113 1 57 1 226 1 114 1 
267 1 229 1 320 1 17 1 35 1 
71 1 229 1 320 2 17 1 380 1 35 2 249 1 114 1 
320 1 17 1 35 1 
229 1 366 1 61 1 198 1 119 1 35 1 201 1 246 1 320 1 80 1 308 1 102 1 113 1 175 1 
114 1 
71 1 229 1 320 2 17 1 35 2 249 1 114 1 264 1 
333 2 71 1 229 2 293 1 35 5 165 2 199 2 14 1 281 1 154 1 99 1 122 1 320 5 17 2 7 1 133 1 249 1 194 1 114 1 
373 1 93 1 
366 1 119 2 198 1 263 1 80 2 308 1 113 2 70 1 93 2 
350 1 8 1 
161 1 313 1 253 1 231 1 47 1 232 1 36 1 296 1 155 1 37 1 80 1 112 1 113 1 19 1 285 1 93 1 
161 1 313 1 350 1 253 1 231 1 198 1 119 1 47 1 232 1 296 1 155 1 37 1 377 1 80 2 308 1 112 1 113 2 132 1 19 1 285 1 
366 1 198 4 119 5 358 1 377 1 225 1 80 5 308 4 113 5 132 2 134 1 91 1 70 1 93 1 
80 2 308 2 113 2 61 1 119 2 198 2 372 1 201 1 
80 3 366 1 308 3 113 3 132 1 119 3 198 3 93 1 
80 1 308 1 113 1 61 1 119 1 198 1 201 1 
80 1 308 1 366 1 113 1 119 1 198 1 201 1 263 1 70 1 
161 1 290 2 313 1 366 2 119 3 198 3 47 1 201 1 3 1 296 1 100 1 341 1 80 4 320 1 142 1 102 1 343 1 274 1 57 1 226 1 83 1 12 1 300 1 253 1 231 1 35 1 232 1 188 1 189 1 155 1 216 1 37 1 377 1 236 1 38 1 308 3 112 1 113 4 132 1 19 1 361 1 285 1 93 1 70 1 
225 1 80 2 308 1 113 2 132 1 119 2 198 1 91 1 93 1 
366 1 300 1 137 1 198 3 119 3 35 1 201 1 188 1 100 1 377 1 320 1 80 3 308 3 113 3 132 2 226 1 57 1 70 1 114 1 
366 1 350 1 198 2 119 2 80 2 308 2 113 2 132 1 364 1 70 1 
161 1 313 1 253 1 231 1 47 1 232 1 296 1 155 1 37 1 80 1 112 1 113 1 19 1 285 1 93 1 
313 1 231 1 47 1 232 1 212 1 296 1 224 1 155 1 37 1 80 1 112 1 113 1 19 1 285 1 93 1 
290 2 45 1 202 2 167 1 25 1 168 1 341 1 169 1 247 1 142 2 8 2 274 1 83 1 178 1 12 4 350 2 13 1 86 1 189 1 327 1 236 1 361 1 362 1 364 2 
80 1 308 1 113 1 119 1 198 1 201 1 372 1 57 1 
147 1 109 1 
147 1 109 1 
49 1 58 1 
49 1 58 1 
49 1 58 1 
147 1 219 1 109 1 
147 1 219 1 109 1 
147 1 109 1 346 1 
147 2 117 1 49 1 316 1 58 1 109 2 
147 1 219 1 109 1 
147 1 241 1 109 1 
147 1 241 1 109 1 
147 1 241 1 109 1 
243 1 22 1 198 2 119 2 48 1 78 1 320 1 80 2 53 1 346 1 147 1 179 1 127 1 107 1 35 1 260 1 109 1 235 1 308 2 309 1 113 2 18 1 193 1 93 1 
147 2 73 1 254 1 117 1 127 2 183 1 107 2 35 2 259 2 354 1 339 1 109 2 26 1 320 2 309 3 53 2 18 2 193 1 114 1 
192 1 96 1 67 1 
220 1 192 1 67 1 
220 1 24 1 96 2 150 1 67 3 363 1 
328 1 220 1 24 1 96 1 67 2 363 1 
220 1 24 1 96 1 67 2 363 2 
333 1 71 1 288 1 197 2 292 3 199 1 165 1 48 1 167 1 78 1 99 1 25 1 319 1 122 3 320 5 81 1 342 2 249 1 178 1 229 4 255 1 35 5 86 1 260 1 129 1 306 2 111 1 17 1 133 2 68 1 69 1 114 2 
267 5 333 2 71 1 288 2 197 6 223 1 292 9 165 2 199 2 48 4 167 3 139 1 79 1 99 1 25 3 122 8 320 9 249 1 276 1 178 3 229 7 256 5 35 9 86 3 129 3 306 6 111 3 17 6 131 1 133 6 284 1 194 1 68 2 69 1 114 5 
333 1 71 1 288 1 197 2 292 4 199 1 165 1 48 1 167 1 25 1 319 1 122 3 320 3 81 1 342 1 178 1 229 2 35 3 86 1 129 2 111 1 306 2 133 2 194 1 68 1 114 3 
333 1 71 1 288 1 197 4 223 1 292 7 199 1 165 1 48 2 167 2 79 1 25 2 319 1 122 5 320 4 81 1 342 2 276 1 178 2 229 3 35 4 86 2 129 3 306 4 111 2 133 4 194 1 68 1 114 4 
30 1 373 1 155 1 
20 1 155 1 
233 1 
19 1 296 1 155 1 
239 1 155 1 
19 1 155 1 
291 1 325 1 19 1 30 2 296 1 155 3 
178 1 314 1 12 7 13 3 202 4 200 1 153 1 25 1 215 1 340 1 169 2 142 3 218 1 158 1 103 2 205 1 171 1 
178 1 314 1 12 7 13 3 202 4 200 1 153 1 25 1 215 1 340 1 169 2 142 3 218 1 158 1 103 2 205 1 171 1 
178 1 314 1 12 7 13 3 202 4 200 1 153 1 25 1 369 1 340 1 215 1 169 2 142 3 218 1 158 1 103 2 205 1 171 1 
290 2 314 5 337 1 200 1 202 16 295 1 167 3 25 4 340 1 169 5 142 15 103 3 274 1 171 1 205 2 83 1 207 3 10 1 178 4 85 1 12 31 13 10 86 3 15 1 153 1 16 1 283 4 215 2 111 3 236 1 218 2 158 2 361 1 66 1 
178 1 221 1 290 4 314 1 12 9 13 4 200 1 202 5 15 1 262 1 153 1 25 1 340 1 215 1 169 3 236 2 142 4 218 1 158 1 103 2 274 2 205 1 361 2 83 2 
220 1 313 1 72 1 244 1 315 1 47 1 96 1 245 1 269 1 77 2 50 1 140 2 6 1 123 1 298 1 124 1 324 1 231 1 352 1 232 1 258 1 152 1 150 1 261 1 304 1 265 1 192 1 112 1 310 1 67 2 
220 1 313 1 72 1 315 1 47 1 96 1 245 1 269 1 77 3 50 1 140 3 6 1 298 1 124 1 275 1 206 1 324 1 231 1 232 1 150 1 258 1 187 1 152 1 261 1 304 2 265 1 192 1 112 1 310 1 67 2 
220 1 313 1 72 1 315 1 47 1 96 1 245 1 269 1 77 2 50 1 140 2 298 1 124 1 206 1 231 1 232 1 258 1 187 1 150 1 261 1 304 2 265 1 112 1 192 1 67 2 
313 1 74 1 324 1 231 1 47 1 315 2 232 1 258 2 261 2 245 2 110 1 77 1 155 1 140 1 37 1 112 1 379 1 310 1 19 1 90 1 275 1 286 1 347 1 
220 1 313 1 244 1 315 1 47 1 96 1 245 1 77 1 140 1 6 1 298 1 124 1 206 1 324 1 231 1 352 1 232 1 258 1 152 1 150 1 261 1 265 1 192 1 112 1 310 1 67 2 
146 1 
332 2 333 1 292 2 47 2 138 2 199 1 201 1 99 1 299 2 249 3 104 1 57 1 105 2 300 1 209 1 210 1 155 1 307 2 305 1 17 6 112 2 157 1 113 1 19 1 68 1 114 2 71 1 313 1 367 1 119 1 165 1 166 2 122 2 320 5 225 1 80 1 371 2 321 4 173 1 226 1 228 1 230 1 231 1 185 1 35 5 232 2 188 1 128 1 129 2 282 1 37 2 379 1 133 2 286 1 43 1 
300 1 185 1 119 1 35 3 201 1 188 1 128 1 264 1 307 1 305 1 320 3 225 1 80 1 17 2 113 1 321 2 249 1 173 1 226 1 57 1 104 1 43 1 
71 1 119 1 138 1 201 1 80 1 225 1 320 3 321 3 173 1 249 1 104 1 57 1 226 1 300 1 185 1 35 3 188 1 128 1 264 1 305 1 17 1 113 1 43 1 114 1 
71 1 119 1 138 1 201 1 80 1 225 1 320 3 321 3 249 1 173 1 104 1 57 1 226 1 105 1 300 1 185 1 35 3 188 1 128 1 264 1 305 1 307 1 17 2 113 1 43 1 114 1 
332 2 333 1 71 5 116 1 335 1 119 1 199 1 165 1 138 4 201 1 166 2 99 1 122 1 225 1 320 5 80 1 371 2 321 6 299 2 173 1 249 3 104 1 57 1 226 1 228 1 32 1 252 1 105 4 300 1 185 1 35 5 188 1 128 1 129 2 264 1 305 1 307 4 87 1 17 7 157 1 113 1 133 1 43 1 114 5 
333 1 332 2 292 2 199 1 138 2 201 1 99 1 299 2 249 2 57 1 104 1 105 2 300 1 210 1 305 1 307 2 17 4 113 1 157 1 114 2 71 1 119 1 165 1 166 2 122 1 80 1 225 1 320 4 321 4 371 2 173 1 226 1 228 1 185 1 35 4 188 1 128 1 129 2 133 1 43 1 
332 2 333 1 71 1 116 1 335 1 119 1 138 2 199 1 165 1 201 1 166 2 99 1 122 1 80 1 225 1 320 4 371 2 321 4 299 2 249 2 173 1 104 1 57 1 226 1 228 1 105 2 252 1 300 1 185 1 35 4 188 1 128 1 129 2 307 2 305 1 17 4 157 1 113 1 133 1 43 1 114 1 
332 2 333 1 71 1 116 1 335 1 119 1 138 2 199 1 165 1 201 1 166 2 99 1 122 1 80 1 225 1 320 4 371 2 321 4 299 2 249 2 173 1 104 1 57 1 226 1 228 1 105 2 252 1 300 1 185 1 35 4 188 1 128 1 129 2 307 2 305 1 17 4 157 1 113 1 133 1 43 1 114 1 
332 2 333 1 71 1 292 2 119 1 138 2 199 1 165 1 201 1 99 1 122 1 28 1 80 1 225 1 320 4 371 2 321 4 249 2 173 1 104 1 57 1 226 1 322 2 105 2 252 1 300 1 185 1 35 4 188 1 128 1 357 2 234 1 214 1 307 2 305 1 17 4 157 1 113 1 133 1 43 1 114 1 
332 2 333 1 71 1 116 1 335 1 119 1 199 1 165 1 138 3 201 1 166 2 99 1 122 1 80 1 225 1 320 4 371 2 321 5 299 2 249 2 173 1 104 1 57 1 226 1 228 1 32 1 252 1 105 3 300 1 185 1 35 4 188 1 128 1 129 2 305 1 307 3 17 5 157 1 113 1 133 1 43 1 114 1 
332 2 333 1 71 1 116 1 335 1 119 1 199 1 165 1 138 3 201 1 166 2 99 1 122 1 80 1 225 1 320 4 371 2 321 5 299 2 249 2 173 1 104 1 57 1 226 1 228 1 32 1 252 1 105 3 300 1 185 1 35 4 188 1 128 1 129 2 305 1 307 3 17 5 157 1 113 1 133 1 43 1 114 1 
333 1 332 2 292 2 199 1 138 2 201 1 99 1 249 2 57 1 104 1 105 2 300 1 210 1 357 2 305 1 307 2 17 4 113 1 157 1 114 1 71 1 119 1 165 1 122 1 80 1 225 1 320 4 321 4 371 2 173 1 226 1 322 2 185 1 35 4 188 1 128 1 234 1 133 1 43 1 
290 2 200 1 202 3 25 1 340 1 341 1 169 2 247 1 142 3 8 1 274 1 103 1 205 1 373 1 83 1 178 1 12 6 350 1 13 2 153 1 189 1 236 1 158 1 361 1 364 1 93 2 
44 1 290 4 314 1 201 1 202 6 3 1 167 1 25 2 341 1 169 1 142 5 8 8 274 2 29 1 83 2 207 2 178 1 12 11 13 2 350 8 301 1 182 1 86 2 189 2 16 1 283 2 111 2 217 1 236 2 361 2 92 1 93 1 364 3 
161 1 290 2 313 1 1 1 47 1 119 1 198 1 95 1 202 1 3 1 296 1 341 1 80 2 142 1 274 1 83 1 12 2 349 1 253 1 231 1 232 1 36 1 151 1 189 1 155 1 37 1 377 1 236 1 112 1 308 1 113 2 132 1 19 1 361 1 285 1 92 1 93 1 364 1 
290 6 47 1 198 1 200 1 202 10 3 1 296 2 340 1 341 3 142 10 8 7 103 1 205 1 250 2 349 1 12 20 253 2 350 7 13 6 148 2 153 1 213 2 155 2 216 2 111 2 112 1 308 1 113 3 158 1 19 2 361 3 364 7 161 2 313 2 314 2 23 2 119 1 167 2 25 3 169 4 80 3 274 3 83 3 178 3 231 2 232 1 86 2 189 3 37 1 377 1 236 3 329 1 132 1 331 1 285 2 92 1 93 2 
290 4 313 2 119 1 198 1 47 8 164 2 202 1 3 1 27 1 341 2 80 1 247 1 142 1 123 1 274 2 206 1 83 2 375 1 349 1 12 2 106 1 180 1 231 2 232 7 189 2 155 3 37 2 191 1 236 2 308 1 112 8 113 1 379 1 132 1 19 2 361 2 195 1 286 1 160 1 
290 2 366 1 198 1 119 1 202 1 167 1 25 1 341 1 169 1 80 1 142 2 8 1 274 1 83 1 178 1 12 3 13 1 350 1 86 1 189 1 111 1 236 1 308 1 113 1 361 1 238 1 92 1 364 1 70 1 
290 2 314 1 12 2 13 1 350 1 86 1 202 2 189 1 327 1 25 1 341 1 236 1 247 1 8 1 274 1 361 1 83 1 364 1 
178 1 290 2 12 2 13 1 350 1 189 1 167 1 168 1 341 1 169 1 236 1 247 1 142 2 8 1 274 1 361 1 83 1 364 1 
290 2 314 1 202 2 167 1 25 1 341 1 169 1 247 1 142 2 8 2 274 1 83 1 178 1 12 4 350 2 13 2 86 1 189 1 111 1 236 1 361 1 364 2 
290 2 314 1 12 2 13 1 350 1 86 1 202 2 189 1 327 1 25 1 341 1 236 1 8 1 274 1 361 1 375 1 83 1 364 1 
178 1 290 2 12 2 13 1 350 1 189 1 167 1 168 1 341 1 169 1 236 1 142 2 8 1 274 1 361 1 375 1 83 1 364 1 
290 2 202 2 167 1 25 1 341 1 169 1 142 2 8 2 274 1 83 1 375 1 178 1 12 4 350 2 13 1 86 1 189 1 111 1 236 1 361 1 364 2 
290 2 314 1 202 2 167 1 25 1 341 1 169 1 142 2 8 2 274 1 83 1 178 1 12 4 350 2 13 2 86 1 189 1 111 1 236 1 361 1 364 2 
161 1 290 2 313 1 47 1 202 1 3 1 296 1 341 1 80 1 142 1 274 1 83 1 349 1 12 2 253 1 231 1 232 1 189 1 155 1 216 1 37 1 236 1 112 1 113 1 19 1 361 1 285 1 93 1 
290 2 313 1 47 1 202 1 3 1 296 1 224 1 317 1 341 1 80 1 142 1 274 1 83 1 349 1 12 2 231 1 232 1 212 1 189 1 155 1 37 1 236 1 112 1 113 1 19 1 361 1 285 1 93 1 
290 2 314 1 202 2 167 1 25 1 341 1 169 1 142 2 8 2 274 1 83 1 178 1 12 4 350 2 13 2 86 1 189 1 111 1 236 1 361 1 92 1 364 2 
161 1 290 2 314 1 313 1 47 1 202 2 296 1 167 1 25 1 341 1 169 1 80 1 142 2 123 1 8 2 274 1 83 1 250 1 178 1 12 4 13 2 350 2 253 1 231 1 232 1 86 1 189 1 155 1 216 1 111 1 236 1 112 1 113 1 19 1 361 1 285 1 364 2 
290 2 314 1 366 1 198 1 119 1 202 2 167 1 25 1 341 1 80 1 142 1 8 1 274 1 83 1 176 1 178 1 12 3 13 1 350 1 86 1 189 1 111 1 236 1 308 1 113 1 361 1 92 1 70 1 364 1 
290 6 202 20 200 1 97 1 5 4 340 1 142 21 103 1 205 1 55 1 56 1 207 3 144 2 9 1 10 3 60 1 12 41 13 8 302 1 15 1 153 1 16 1 111 4 360 1 63 1 158 1 361 3 221 1 21 1 314 4 222 1 118 1 167 4 25 5 169 4 274 3 83 3 177 1 178 5 31 1 86 4 283 4 236 3 
21 1 290 8 221 1 222 1 314 3 118 1 200 1 202 20 97 1 167 3 5 4 25 5 340 1 169 4 142 18 103 1 274 4 205 1 56 1 55 1 83 4 177 1 144 2 207 3 9 1 31 1 10 3 178 4 60 1 12 38 13 7 302 1 86 4 15 2 153 1 16 1 283 4 111 4 360 1 236 4 63 1 158 1 361 4 
21 1 290 4 221 1 222 1 314 7 118 1 200 1 202 27 97 1 167 7 5 4 25 8 340 1 169 7 142 25 103 1 274 2 205 1 29 2 56 1 55 1 83 2 144 1 207 4 9 1 31 1 10 2 178 8 60 1 12 52 13 14 302 1 86 7 15 1 153 1 16 2 283 4 111 7 360 1 236 2 158 1 361 2 
290 4 221 1 222 1 314 3 118 1 202 9 97 1 167 3 5 2 25 3 169 3 142 10 274 2 56 1 83 2 144 1 207 1 10 1 178 3 12 19 13 6 86 3 16 1 283 2 111 3 360 2 236 2 63 1 361 2 287 1 
21 1 290 6 221 1 314 2 222 1 118 2 202 14 97 1 167 2 5 4 25 3 169 2 142 12 274 3 56 1 55 1 83 3 144 2 207 2 9 1 31 1 178 2 10 2 60 1 12 26 13 4 302 1 86 3 15 2 283 2 111 3 360 1 236 3 361 3 
147 1 53 1 254 1 117 1 18 1 127 1 107 1 339 1 109 1 59 1 
22 1 346 1 
348 1 147 1 53 1 18 1 127 1 381 1 107 1 338 1 109 1 
219 1 237 1 
378 1 316 1 241 1 
147 1 73 1 254 1 117 1 127 1 183 1 107 1 35 1 259 1 354 1 339 1 109 1 320 1 309 2 53 1 18 1 193 1 114 1 
147 1 73 1 254 1 117 1 127 1 183 1 107 1 35 1 259 1 354 1 339 1 109 1 320 1 309 2 53 1 18 1 193 1 114 1 
147 1 73 1 254 1 117 1 127 1 183 1 107 1 35 1 259 1 354 1 339 1 109 1 320 1 309 2 53 1 18 1 193 1 114 1 
219 1 237 1 316 1 
219 1 237 1 316 1 
378 1 241 1 
378 1 316 1 241 1 
243 1 235 1 
243 1 73 1 22 1 198 2 119 2 48 1 78 1 80 2 320 1 53 1 227 1 346 1 229 1 147 1 179 1 127 1 107 1 35 1 259 1 260 1 109 1 235 1 309 1 308 2 113 2 18 1 93 1 
290 2 313 1 75 1 47 2 119 2 164 2 202 1 3 1 341 1 203 1 80 2 141 1 142 1 274 1 82 1 83 1 323 1 349 1 12 2 106 1 180 1 231 1 232 2 189 1 155 1 236 1 112 2 113 2 19 1 361 1 92 1 
220 1 313 1 0 1 231 1 47 2 232 2 96 1 150 1 152 1 245 1 265 1 192 1 112 2 123 1 88 1 124 1 206 1 67 2 196 1 
220 1 313 1 231 1 47 1 232 1 96 1 150 1 152 1 245 1 265 1 192 1 112 1 170 1 88 1 124 1 206 1 67 2 
11 1 313 1 0 1 74 1 231 1 47 1 232 1 245 1 155 1 37 1 112 1 379 1 19 1 286 1 
220 1 313 1 0 1 231 1 47 1 232 1 96 1 150 1 152 1 245 1 265 1 192 1 112 1 88 1 124 1 206 1 67 2 196 1 
368 1 
122 1 71 1 133 1 14 1 373 1 154 1 114 1 
333 1 71 1 292 1 199 1 165 1 166 1 99 1 122 1 320 1 299 1 249 1 228 1 35 1 129 1 17 1 133 1 114 2 
333 4 197 6 46 1 292 12 47 3 199 4 296 3 99 4 249 3 344 2 145 2 351 2 209 1 148 2 108 2 14 1 154 1 155 10 303 2 306 6 111 2 112 3 17 5 65 1 19 3 20 3 68 2 114 8 312 2 71 2 313 4 165 4 167 2 318 2 25 2 122 9 320 5 123 1 172 1 30 2 226 2 174 1 178 2 325 1 181 2 231 3 34 1 232 3 35 5 86 2 129 6 37 1 133 8 239 2 
333 2 71 2 21 1 197 5 76 1 292 6 199 2 165 2 167 2 99 2 25 2 122 8 320 1 249 1 55 1 344 1 207 1 31 1 10 1 178 2 60 1 209 1 35 1 108 2 302 1 86 2 129 3 306 5 283 1 111 2 17 1 133 5 135 1 68 1 114 5 
333 1 366 1 335 1 198 1 119 1 199 1 165 1 201 1 246 1 99 1 25 2 122 2 80 1 320 1 102 1 205 1 344 1 175 1 345 1 178 1 61 1 108 2 35 1 153 1 308 1 113 1 158 1 133 2 
333 1 71 1 165 1 199 1 14 1 154 1 99 1 122 1 133 1 114 1 
178 2 197 5 148 1 292 10 108 2 86 2 129 5 167 2 25 2 111 2 306 5 122 5 133 5 344 1 114 5 
71 1 320 1 17 1 35 1 249 1 114 1 
333 2 313 1 367 1 46 2 47 4 199 2 165 2 99 1 122 2 320 3 249 2 174 1 230 1 126 1 209 2 231 1 232 4 35 3 155 1 37 2 112 4 17 4 379 1 133 2 19 1 240 1 194 1 68 2 286 1 
161 1 290 2 366 2 313 1 47 1 119 2 198 2 3 1 296 1 341 1 80 3 142 1 102 1 343 1 274 1 83 1 12 1 253 1 231 1 232 1 189 1 155 1 37 1 216 1 236 1 112 1 308 2 113 3 19 1 361 1 285 1 93 1 
333 1 71 2 197 2 209 1 292 4 165 1 199 1 129 2 99 1 306 2 122 1 133 2 103 1 68 1 114 4 
51 1 18 1 107 1 
51 1 18 1 107 1 
18 1 326 1 107 1 339 1 235 1 
51 1 18 1 107 1 
18 1 107 1 121 1 
18 1 107 1 121 1 
18 1 107 1 121 1 
18 1 107 1 
147 1 109 1 
290 2 221 1 202 4 200 1 25 1 340 1 169 2 142 4 103 1 274 1 205 1 83 1 207 1 178 1 10 1 12 8 13 2 302 1 153 1 283 1 236 1 158 1 361 1 
221 1 290 4 314 1 200 1 202 6 25 2 340 1 169 2 142 5 103 1 274 2 205 1 83 2 207 1 178 1 10 1 12 11 13 3 302 1 86 1 153 1 16 1 283 2 111 1 236 2 158 1 361 2 330 1 
21 1 290 6 221 1 314 1 200 1 202 9 167 2 25 3 340 1 169 3 142 10 103 1 274 3 205 1 55 1 83 3 207 1 10 1 178 3 31 1 60 1 12 19 13 4 302 1 86 2 15 1 153 1 283 1 111 2 236 3 158 1 330 1 361 3 
290 6 221 1 21 1 314 2 200 1 202 10 167 1 25 3 340 1 169 3 142 7 103 1 274 3 205 1 55 1 83 3 207 1 10 1 178 2 31 1 60 1 12 17 13 5 302 1 86 2 15 1 153 1 283 1 111 2 236 3 158 1 330 1 361 3 
290 2 221 1 202 4 200 1 25 1 340 1 169 2 142 4 103 1 274 1 205 1 83 1 207 1 178 1 10 1 12 8 13 2 302 1 153 1 283 1 236 1 158 1 361 1 
290 2 221 1 21 1 314 1 202 6 167 2 25 2 169 1 142 6 274 1 55 1 83 1 207 1 10 1 178 2 31 1 60 1 12 12 13 2 302 1 86 2 283 1 111 2 236 1 361 1 
21 1 290 8 221 1 314 2 200 1 202 10 167 1 25 3 340 1 169 3 142 8 103 1 274 4 205 1 55 1 83 4 207 1 31 1 10 1 178 2 60 1 12 18 13 5 302 1 86 2 15 2 153 1 283 1 111 2 236 4 158 1 330 1 361 4 
21 1 221 1 290 8 314 3 202 9 167 2 25 3 169 3 142 7 274 4 55 1 83 4 207 1 31 1 10 1 178 2 60 1 12 16 13 6 302 1 86 3 15 2 283 1 111 3 236 4 63 1 361 4 
178 1 12 7 314 3 13 6 200 1 202 3 153 1 25 1 340 2 169 3 142 4 158 3 205 3 
21 1 221 1 290 8 314 1 200 1 202 10 167 1 25 3 340 1 169 3 142 8 103 1 274 4 205 1 55 1 83 4 207 1 31 1 10 1 178 2 60 1 12 18 13 4 302 1 86 2 15 2 153 1 283 1 111 2 236 4 63 1 158 1 361 4 
178 1 290 4 12 8 314 1 13 3 202 4 200 1 15 1 153 1 25 1 340 1 169 2 236 2 142 4 158 1 103 1 274 2 205 1 361 2 83 2 
178 1 12 6 13 2 200 1 202 3 153 1 25 1 340 1 169 2 142 3 158 1 103 1 205 1 373 1 
178 1 290 2 12 4 314 1 13 2 86 1 202 2 167 1 25 1 111 1 169 1 236 1 142 2 274 1 330 1 361 1 83 1 
178 1 10 1 12 7 314 1 13 2 202 3 86 1 167 1 16 1 25 1 283 2 111 1 169 1 142 4 207 1 
44 1 290 4 314 4 200 1 202 11 167 2 25 3 340 1 169 5 142 12 103 1 274 2 205 2 29 1 83 2 207 2 178 3 279 1 12 23 13 9 86 2 15 2 153 1 16 1 111 2 283 2 236 2 158 2 361 2 
283 1 12 1 142 1 
12 1 202 1 207 1 
178 1 290 2 12 6 314 1 13 3 148 1 86 1 202 3 167 1 25 1 111 1 236 1 169 2 142 3 274 1 361 1 330 1 83 1 
290 2 221 1 21 1 314 1 202 6 167 2 25 2 169 1 142 6 274 1 55 1 83 1 207 1 10 1 178 2 31 1 60 1 12 12 13 2 302 1 86 2 283 1 111 2 236 1 361 1 
178 1 12 6 314 1 13 2 202 3 153 1 25 1 169 1 142 3 158 1 205 1 
279 1 290 2 314 1 12 3 13 2 202 1 200 1 15 1 340 1 169 1 236 1 142 2 158 1 274 1 205 1 361 1 83 1 
178 2 290 2 221 1 314 2 12 10 13 5 202 5 153 1 25 2 236 1 169 3 142 5 158 2 274 1 205 2 361 1 83 1 345 1 
221 1 290 2 12 2 314 1 13 1 86 1 202 2 25 1 236 1 274 1 361 1 83 1 
178 1 221 1 290 2 12 4 314 1 13 2 86 1 202 2 167 1 25 1 111 1 169 1 236 1 142 2 274 1 361 1 83 1 
279 1 221 1 290 6 12 3 314 1 13 2 202 1 15 1 236 3 169 1 63 1 142 2 158 1 274 3 205 1 361 3 83 3 
290 10 221 1 314 5 337 1 200 1 202 16 295 1 167 3 25 5 340 1 169 7 142 18 103 1 274 5 205 3 83 5 207 3 10 1 178 5 279 1 85 1 12 34 13 12 86 3 15 2 153 2 16 1 283 4 111 3 236 5 63 1 158 3 330 1 361 5 
80 1 225 1 334 1 113 1 119 1 91 1 93 1 
334 1 33 1 119 1 355 1 52 1 204 1 225 1 80 1 113 1 41 1 91 1 93 1 
37 1 313 1 112 1 379 1 231 1 19 1 47 1 232 1 373 1 286 1 155 1 
161 1 313 1 231 1 198 1 119 1 47 1 232 1 296 1 155 1 37 1 80 2 308 1 112 1 113 2 132 1 19 1 285 1 93 1 
312 1 161 1 313 1 46 1 231 1 198 1 119 2 47 1 232 1 201 1 188 1 296 2 155 3 80 2 308 2 112 1 113 2 132 1 19 2 57 1 239 1 285 1 93 1 
312 1 313 1 46 1 231 1 198 1 119 2 47 2 232 2 201 1 188 1 212 1 296 2 155 3 80 2 308 2 112 2 113 2 132 1 19 2 57 1 239 1 285 1 382 1 93 1 
312 1 71 1 313 1 46 1 231 1 47 3 35 2 232 3 296 1 120 1 155 4 37 1 320 2 156 1 112 3 17 1 19 1 20 1 30 1 226 1 239 1 382 1 114 1 
312 1 71 1 313 1 181 1 46 1 231 1 47 3 35 2 232 3 296 1 155 4 37 1 320 2 112 3 17 1 19 1 20 1 30 1 226 1 239 1 382 1 114 1 
313 1 112 1 231 1 47 1 232 1 195 1 
242 1 208 1 313 3 325 1 106 1 231 2 47 7 164 1 232 6 296 1 155 3 27 1 37 2 191 1 112 7 273 1 123 1 19 2 206 1 195 1 160 1 
290 4 47 1 198 1 200 1 202 3 296 1 340 1 341 2 142 3 8 1 103 1 205 1 250 1 12 6 253 1 13 2 350 1 153 1 155 1 216 1 112 1 308 1 113 2 158 1 19 1 361 2 364 1 161 1 313 1 75 1 23 1 119 1 25 1 80 2 169 2 123 1 274 2 83 2 178 1 231 1 232 1 189 2 236 2 132 1 285 1 92 1 93 2 
333 2 71 1 47 1 199 2 165 2 99 2 318 1 122 1 320 3 30 1 249 1 226 1 174 1 229 1 351 1 181 1 232 1 35 3 14 1 154 1 303 1 155 2 37 1 112 1 17 2 133 1 20 1 114 1 
313 2 325 1 231 1 47 2 232 2 296 1 155 2 112 2 123 1 19 1 172 1 30 1 195 1 
313 1 231 1 47 4 232 4 155 1 37 1 112 4 379 1 123 1 248 1 19 1 286 1 382 1 
242 1 208 1 251 1 313 2 46 1 231 1 47 2 232 2 353 1 294 1 296 1 155 1 112 2 19 1 
37 1 220 1 265 1 192 1 313 1 112 1 231 1 47 1 232 1 67 1 
313 1 112 2 123 1 106 1 231 1 19 1 47 2 232 2 206 1 82 1 155 1 
313 2 106 1 46 1 231 2 47 5 232 4 155 3 37 1 27 1 112 5 379 1 123 1 248 1 19 2 286 1 160 1 
313 2 106 1 46 1 231 2 47 5 232 4 155 3 37 1 112 5 379 1 123 1 248 1 19 2 286 1 278 1 160 1 
313 1 231 1 198 1 119 1 47 1 232 1 212 1 296 1 155 1 37 1 80 2 308 1 112 1 113 2 132 1 19 1 285 1 93 1 
242 1 208 1 313 2 325 1 46 1 231 1 47 1 232 1 296 1 155 1 112 1 273 1 19 1 
84 1 2 1 42 1 4 1 93 1 
71 1 229 1 84 2 94 1 300 1 211 1 2 2 35 2 201 1 188 1 4 2 100 1 320 2 64 1 42 1 226 1 57 1 93 1 114 1 
323 1 203 1 80 1 84 1 141 1 113 1 119 1 42 1 4 1 
94 1 64 1 42 1 
50 1 72 1 373 1 269 1 
50 1 140 1 72 1 324 1 310 1 269 1 77 1 
258 1 261 1 77 1 
244 1 324 1 72 1 269 1 77 3 50 1 140 3 310 1 266 1 40 1 125 1 136 2 
50 1 304 1 140 2 72 1 324 1 310 1 149 1 269 1 77 2 
50 1 140 1 192 1 324 1 244 1 310 1 336 1 96 1 67 1 277 1 77 1 
50 1 140 1 72 1 324 1 244 1 310 1 77 1 
140 1 72 2 324 1 244 1 310 1 269 1 77 1 
289 1 72 1 244 1 324 2 356 1 77 2 50 1 140 2 310 2 143 1 
162 1 72 1 244 1 324 1 269 1 190 1 77 3 140 3 304 2 50 2 310 1 297 1 277 1 
220 1 72 1 244 1 324 1 150 1 96 1 269 1 77 2 270 1 50 1 140 2 304 1 192 1 310 1 67 2 
72 1 244 1 324 2 149 1 269 1 77 4 140 4 304 2 50 2 310 2 297 1 277 1 159 1 
50 1 140 1 72 1 324 1 244 1 310 1 269 1 77 1 
72 2 324 1 269 2 77 4 304 2 140 4 50 3 39 1 310 1 266 1 297 1 125 1 136 1 277 1 
72 1 244 1 324 1 184 1 269 1 77 2 50 1 140 2 304 1 370 1 310 1 311 1 
244 1 324 1 72 1 269 1 77 3 359 1 50 1 140 3 310 1 266 2 125 1 136 2 
50 2 272 1 280 1 130 2 
140 1 324 1 244 1 310 1 62 1 77 1 
50 1 304 1 140 2 162 1 72 1 324 1 244 1 310 1 269 1 77 2 
98 1 
50 1 140 1 72 1 324 1 244 1 310 1 269 1 77 1 
162 1 244 1 324 1 72 1 269 1 77 3 304 1 140 3 50 1 310 1 136 1 
50 1 39 1 297 1 277 1 
50 1 72 1 

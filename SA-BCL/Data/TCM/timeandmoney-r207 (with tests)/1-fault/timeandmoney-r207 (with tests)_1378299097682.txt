#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 2 203 1 147 1 175 1 206 1 223 1 148 6 272 1 10 2 102 9 53 1 325 1 127 1 303 2 228 1 326 2 14 1 210 1 134 9 135 1 136 1 191 2 312 2 39 1 356 4 192 5 337 3 199 2 
358 2 203 1 147 1 175 1 206 1 223 1 148 6 272 1 102 9 10 2 53 1 325 1 127 1 303 2 228 1 326 2 14 1 210 1 134 9 135 1 136 1 191 2 312 2 39 1 356 4 192 5 337 3 199 2 
358 2 203 1 147 1 175 1 206 1 223 1 148 7 272 1 102 10 10 2 53 1 325 1 127 1 303 2 228 1 326 2 14 1 210 1 134 10 135 1 136 1 191 2 312 2 39 1 356 5 192 6 337 4 199 2 
358 2 203 1 147 1 175 1 206 1 223 1 148 4 272 1 102 7 10 1 325 1 127 1 303 2 228 1 326 2 14 1 210 1 134 7 135 1 136 1 191 2 312 2 39 1 356 3 192 4 337 2 199 2 
210 1 134 4 136 1 147 1 206 1 148 3 191 1 312 1 356 2 192 3 102 4 10 2 53 1 325 1 303 1 337 1 326 1 199 1 
82 1 358 1 152 1 134 2 47 1 135 1 147 1 206 1 223 1 191 1 312 1 192 1 102 2 325 1 303 1 199 1 
358 1 134 3 147 1 206 1 148 1 356 1 192 2 102 3 325 1 303 2 228 1 337 1 199 2 
358 1 203 1 147 1 206 1 148 7 102 9 10 2 126 1 53 1 325 1 228 1 303 2 326 1 279 1 210 1 134 9 136 1 191 1 312 1 39 1 356 4 192 5 337 3 199 2 
358 1 203 1 147 1 206 1 148 7 102 9 10 2 126 1 53 1 325 1 228 1 303 2 326 1 279 1 210 1 134 9 136 1 191 1 312 1 39 1 356 4 192 5 337 3 199 2 
293 1 380 1 321 1 
248 1 295 2 293 1 
377 1 101 2 290 2 3 2 306 2 23 2 137 1 11 2 
119 1 67 1 204 1 361 2 3 3 268 1 99 1 101 3 247 1 8 1 370 1 275 1 346 2 151 1 226 1 11 2 130 1 229 1 304 1 12 2 181 1 15 1 155 1 306 2 83 1 137 1 62 1 236 2 157 1 377 1 290 2 331 2 64 1 23 2 334 1 24 1 294 1 
124 1 101 1 290 1 314 1 193 1 3 1 306 1 23 1 137 1 11 1 
215 1 3 1 221 1 5 1 321 1 263 1 101 1 290 1 324 1 369 1 193 1 196 1 293 1 278 1 
3 1 306 1 221 1 5 2 321 1 263 1 101 1 290 1 324 1 369 1 193 1 196 2 23 1 293 1 11 1 
182 1 196 1 5 1 347 1 122 1 
63 1 182 1 196 2 54 1 293 1 5 2 122 1 321 1 
196 1 5 1 122 1 
182 1 3 1 306 1 5 1 137 1 7 1 124 1 101 1 290 1 314 1 193 1 196 1 23 1 11 1 
293 1 
107 1 182 1 196 2 54 1 293 1 5 2 122 1 321 1 
58 1 69 1 220 2 171 1 232 1 182 2 5 5 374 1 222 1 122 2 321 1 310 2 28 1 196 5 180 1 54 1 293 1 208 1 115 2 
377 1 380 1 
3 2 306 1 22 1 101 2 377 2 290 2 213 1 23 1 11 1 
51 1 55 1 298 1 
119 1 255 1 3 1 62 1 236 1 157 1 377 1 101 1 247 1 8 1 64 1 346 1 151 1 226 1 334 1 12 1 
119 1 154 1 3 2 306 1 281 1 62 1 236 1 157 1 8 1 247 1 101 2 290 1 51 1 64 1 226 1 346 1 151 1 334 1 11 1 12 1 
241 1 215 1 154 1 3 5 259 1 306 4 281 2 309 1 22 1 101 5 377 1 290 5 23 1 11 4 
142 1 124 1 101 2 290 2 193 1 3 2 306 2 11 2 
377 1 101 3 290 3 3 3 306 3 281 1 23 1 11 3 
124 1 101 1 290 1 193 1 3 1 306 1 11 1 
22 1 101 1 290 1 213 1 193 1 3 1 306 1 23 1 11 1 
119 1 67 1 204 1 361 2 3 4 221 1 268 1 5 1 8 1 247 1 101 4 324 1 369 1 275 1 226 1 151 1 346 1 31 1 11 3 130 1 229 1 304 1 12 1 154 1 155 1 306 3 281 1 83 1 137 1 62 1 236 1 157 1 263 1 22 1 377 1 290 3 357 1 193 1 331 1 196 1 64 1 23 2 334 1 294 1 
215 1 377 1 101 2 290 2 3 2 306 1 281 1 11 1 309 1 
154 1 3 3 306 3 221 1 281 2 5 1 263 1 22 1 101 3 369 1 290 3 324 1 193 1 357 1 196 1 23 1 293 1 11 3 104 1 
3 2 306 2 281 1 298 1 22 1 101 2 290 2 51 1 23 1 11 2 
119 1 3 1 62 1 236 1 157 1 377 1 101 1 247 1 8 1 64 1 346 1 151 1 226 1 334 1 12 1 
119 1 45 1 3 1 62 1 236 1 157 1 377 1 101 1 8 1 345 1 64 1 346 1 226 1 334 1 12 1 
181 2 46 1 67 1 361 2 155 1 205 1 268 2 140 1 298 2 189 1 237 1 270 1 49 1 125 1 112 1 51 2 275 1 331 4 214 1 55 2 209 1 130 1 229 1 294 1 
142 1 101 1 324 1 290 1 193 1 3 1 306 1 11 1 
238 1 276 1 
238 1 276 1 
42 1 84 1 
42 1 84 1 
42 1 84 1 
316 1 238 1 276 1 
287 1 238 1 276 1 
238 2 276 2 4 1 42 1 123 1 84 1 
316 1 238 1 276 1 
316 1 238 1 276 1 
238 1 194 1 276 1 
238 1 194 1 276 1 
238 1 194 1 276 1 
169 1 3 2 5 1 343 1 299 1 344 1 101 2 276 1 250 1 11 2 373 1 306 2 138 1 139 1 61 1 330 1 377 1 287 1 238 1 290 2 111 1 332 1 196 1 65 1 
200 1 349 2 153 1 364 1 363 1 5 2 138 1 123 1 330 2 78 1 344 3 238 2 276 2 332 2 196 2 65 2 293 1 250 2 335 1 
191 1 312 1 326 1 
191 1 312 1 152 1 
191 3 152 1 121 1 149 1 36 1 326 2 
191 2 152 1 149 1 36 1 92 1 326 1 
191 2 152 1 149 2 36 1 326 1 
46 1 169 1 295 3 220 1 69 1 205 1 174 1 267 2 5 5 26 1 343 1 122 1 321 1 100 2 273 1 28 2 248 1 54 1 209 1 32 1 105 1 33 1 182 4 61 1 374 3 310 1 189 1 159 2 86 1 196 5 293 2 115 1 
25 1 46 3 295 9 69 1 220 2 205 3 267 6 319 1 5 9 26 2 222 1 343 4 122 6 321 1 273 1 28 6 248 3 128 1 54 1 209 3 347 5 33 2 182 7 282 5 156 1 374 8 354 1 310 2 189 3 159 6 86 3 196 9 91 1 293 5 115 2 
46 1 220 1 295 4 205 1 267 2 5 3 26 1 222 1 343 1 321 1 100 1 28 2 248 2 209 1 32 1 105 1 33 1 182 2 374 3 310 1 189 1 159 2 86 1 196 3 293 3 115 1 
25 1 46 2 295 7 220 1 205 2 267 4 319 1 5 4 26 1 222 1 343 2 321 1 100 2 28 4 248 3 209 2 32 1 105 1 33 1 182 3 374 5 310 1 189 2 159 4 86 2 196 4 293 4 91 1 115 1 
150 1 334 1 380 1 
184 1 334 1 
81 1 
334 1 62 1 157 1 
334 1 297 1 
334 1 62 1 
34 1 245 1 150 2 334 3 62 1 157 1 
181 4 217 2 70 1 327 1 317 1 205 1 268 3 19 1 146 1 189 1 188 1 270 2 110 1 125 3 52 1 163 1 331 7 
181 4 217 2 70 1 327 1 317 1 205 1 268 3 19 1 146 1 189 1 188 1 270 2 110 1 125 3 52 1 163 1 331 7 
181 4 217 2 70 1 327 1 317 1 205 1 268 3 19 1 146 1 269 1 189 1 188 1 270 2 110 1 125 3 52 1 163 1 331 7 
217 3 46 3 67 1 70 1 361 2 68 1 317 1 205 4 268 15 146 2 270 5 176 1 125 10 52 2 275 1 50 1 227 3 209 3 229 1 181 16 327 1 155 1 19 2 307 1 284 1 188 5 189 4 158 1 110 2 86 3 163 1 40 1 164 4 331 31 
67 2 217 2 361 4 70 1 317 1 205 1 268 4 146 1 270 3 125 4 275 2 52 1 229 2 57 1 181 5 155 2 19 1 307 1 189 1 188 1 110 1 163 1 331 9 116 1 
358 1 339 1 121 1 147 1 206 1 148 1 8 1 102 2 80 1 325 1 346 1 226 1 303 1 326 1 12 1 152 1 59 1 134 2 353 1 329 1 236 1 37 1 190 1 191 2 312 1 192 1 160 1 90 1 113 1 199 1 
358 1 339 1 121 1 147 1 148 2 74 1 8 1 102 3 325 1 346 1 226 1 303 1 326 1 12 1 152 1 59 1 134 3 233 1 353 1 185 1 329 1 236 1 37 1 190 1 191 2 312 1 192 1 160 1 113 1 199 1 
358 1 121 1 147 1 148 2 74 1 8 1 102 2 325 1 346 1 226 1 326 1 12 1 152 1 59 1 134 2 353 1 185 1 329 1 236 1 37 1 190 1 191 2 312 1 192 1 160 1 
358 2 2 1 72 1 8 1 102 1 226 1 346 1 303 1 12 1 256 1 134 1 233 1 353 2 328 1 329 2 212 1 62 1 236 1 190 2 313 1 64 1 334 1 199 1 
358 1 152 1 339 1 121 1 59 1 134 1 353 1 206 1 329 1 37 1 236 1 74 1 190 1 191 2 312 1 8 1 160 1 102 1 90 1 226 1 113 1 346 1 303 1 326 1 199 1 12 1 
132 1 
338 1 201 1 295 2 3 1 296 2 5 5 8 1 101 1 248 2 54 3 346 2 12 2 17 2 257 1 351 1 308 1 62 1 212 1 310 1 262 2 263 1 161 2 64 2 115 1 118 1 215 1 69 1 220 1 221 1 27 1 122 6 320 1 321 1 271 2 177 2 28 2 324 1 369 1 226 1 278 1 131 4 33 1 235 2 328 1 374 2 236 2 286 1 38 1 289 1 290 1 193 1 88 1 196 5 293 2 334 1 
131 2 215 1 338 1 107 1 3 1 221 1 351 1 296 1 5 3 27 1 122 2 320 1 263 1 101 1 369 1 324 1 289 1 290 1 193 1 196 3 54 1 278 1 
215 1 338 1 3 1 221 1 5 3 27 1 122 1 320 1 321 1 101 1 324 1 369 1 54 1 278 1 131 3 107 1 351 1 263 1 262 1 290 1 289 1 193 1 196 3 293 1 
215 1 338 1 3 1 221 1 296 1 5 3 27 1 320 1 122 2 321 1 177 1 101 1 324 1 369 1 54 1 278 1 131 3 107 1 351 1 263 1 262 1 290 1 289 1 193 1 196 3 293 1 
338 1 3 1 296 4 5 5 101 1 248 2 54 3 107 1 17 2 351 1 60 1 310 1 263 1 262 4 161 2 115 1 215 1 168 1 69 1 220 1 221 1 27 1 122 7 320 1 321 5 73 1 271 2 177 4 369 1 324 1 28 1 129 1 278 1 131 6 374 1 235 2 38 1 289 1 290 1 378 1 193 1 88 1 196 5 293 5 
338 1 295 2 3 1 296 2 5 4 101 1 248 2 54 2 17 2 351 1 308 1 310 1 263 1 262 2 161 2 115 1 215 1 69 1 220 1 221 1 27 1 320 1 122 4 321 1 271 2 177 2 369 1 324 1 28 1 278 1 131 4 374 1 235 2 38 1 290 1 289 1 193 1 88 1 196 4 293 2 
168 1 215 1 338 1 69 1 220 1 3 1 221 1 296 2 5 4 27 1 122 4 320 1 321 1 271 2 177 2 101 1 28 1 324 1 369 1 248 2 54 2 129 1 278 1 131 4 17 2 351 1 60 1 235 2 374 1 310 1 262 2 263 1 38 1 290 1 289 1 161 2 193 1 88 1 196 4 293 1 115 1 
168 1 215 1 338 1 69 1 220 1 3 1 221 1 296 2 5 4 27 1 122 4 320 1 321 1 271 2 177 2 101 1 28 1 324 1 369 1 248 2 54 2 129 1 278 1 131 4 17 2 351 1 60 1 235 2 374 1 310 1 262 2 263 1 38 1 290 1 289 1 161 2 193 1 88 1 196 4 293 1 115 1 
168 1 215 1 338 1 1 1 295 2 69 1 220 1 3 1 318 1 221 1 296 2 5 4 27 1 122 4 320 1 321 1 177 2 101 1 28 1 324 1 369 1 54 2 278 1 230 2 131 4 211 2 351 1 235 2 374 1 310 1 262 2 263 1 290 1 289 1 161 2 193 1 88 1 196 4 293 1 115 1 167 1 
168 1 215 1 338 1 220 1 69 1 3 1 221 1 296 3 5 4 27 1 320 1 122 5 321 1 73 1 271 2 177 3 101 1 28 1 324 1 369 1 248 2 54 2 129 1 278 1 131 5 17 2 351 1 60 1 235 2 374 1 310 1 263 1 262 3 38 1 290 1 289 1 161 2 193 1 88 1 196 4 293 1 115 1 
168 1 215 1 338 1 220 1 69 1 3 1 221 1 296 3 5 4 27 1 320 1 122 5 321 1 73 1 271 2 177 3 101 1 28 1 324 1 369 1 248 2 54 2 129 1 278 1 131 5 17 2 351 1 60 1 235 2 374 1 310 1 263 1 262 3 38 1 290 1 289 1 161 2 193 1 88 1 196 4 293 1 115 1 
338 1 295 2 3 1 296 2 5 4 101 1 54 2 211 2 351 1 308 1 310 1 263 1 262 2 161 2 115 1 167 1 215 1 69 1 220 1 221 1 27 1 320 1 122 4 321 1 177 2 369 1 324 1 28 1 278 1 131 4 230 2 374 1 235 2 290 1 289 1 193 1 88 1 196 4 293 1 
67 1 217 1 361 2 70 1 317 1 205 1 268 3 298 1 270 2 125 2 51 1 52 1 275 1 55 1 130 1 229 1 181 3 155 1 19 1 140 1 189 1 377 2 163 1 331 6 380 1 294 1 
67 2 46 2 218 1 204 1 361 4 205 2 268 6 298 4 270 1 125 2 275 2 51 11 301 1 55 11 227 3 209 1 130 1 229 2 252 1 181 8 155 2 283 1 284 1 188 1 355 1 189 1 377 1 86 2 40 1 164 3 331 14 24 1 294 2 
119 1 120 1 67 1 216 1 361 2 204 1 3 2 268 1 298 1 8 1 247 1 101 2 275 1 29 1 226 1 151 1 346 1 11 1 130 1 229 1 12 1 252 1 181 1 255 1 154 1 155 1 306 1 281 1 62 1 236 1 157 1 377 1 290 1 64 1 331 2 334 1 294 1 24 1 
94 2 46 2 145 1 204 1 3 3 205 3 298 7 101 3 247 2 8 2 52 1 51 7 249 1 346 3 151 2 11 1 55 7 209 2 12 3 252 1 154 1 155 3 306 1 19 1 62 2 157 2 163 1 64 1 24 1 119 2 217 1 67 3 219 2 70 1 361 6 317 1 268 10 365 2 74 1 270 4 125 8 275 3 226 2 130 3 229 3 181 10 281 1 83 2 236 3 189 3 188 4 285 2 377 2 86 2 290 1 379 1 331 20 334 2 294 3 
67 2 144 1 360 1 361 4 204 1 3 1 268 1 74 1 101 1 8 2 370 2 275 2 80 1 226 2 346 8 11 1 30 1 130 2 229 2 12 7 253 1 181 1 280 1 155 2 306 1 281 1 328 1 140 1 212 1 62 2 236 8 290 1 239 1 64 2 331 2 66 1 334 3 294 2 24 1 
67 1 46 1 361 2 3 1 205 1 268 2 298 1 270 1 101 1 125 1 51 1 275 1 55 1 11 1 209 1 130 1 348 1 229 1 252 1 181 1 155 1 306 1 189 1 22 1 86 1 290 1 331 3 23 1 294 1 
181 2 67 1 46 1 361 2 155 1 205 1 140 1 188 1 298 1 237 1 125 1 51 1 275 1 331 2 55 1 130 1 229 1 294 1 
67 1 361 2 155 1 268 2 140 1 298 1 189 1 270 1 49 1 125 1 51 1 275 1 331 2 55 1 209 1 130 1 229 1 294 1 
46 1 67 1 361 2 205 1 268 2 298 2 270 1 125 2 275 1 51 2 55 2 209 1 130 1 229 1 181 2 155 1 140 1 188 1 189 1 86 1 331 4 294 1 
181 2 67 1 46 1 361 2 155 1 205 1 188 1 298 1 237 1 125 1 239 1 51 1 275 1 331 2 55 1 130 1 229 1 294 1 
67 1 361 2 155 1 268 2 298 1 189 1 270 1 49 1 125 1 239 1 51 1 275 1 331 2 55 1 209 1 130 1 229 1 294 1 
46 1 67 1 361 2 205 1 268 2 298 2 270 1 125 2 275 1 51 2 55 2 209 1 130 1 229 1 181 2 155 1 188 1 189 1 86 1 239 1 331 4 294 1 
46 1 67 1 361 2 205 1 268 2 298 2 270 1 125 2 275 1 51 2 55 2 209 1 130 1 229 1 181 2 155 1 188 1 189 1 86 1 331 4 294 1 
119 1 67 1 361 2 204 1 3 1 268 1 8 1 247 1 101 1 275 1 226 1 151 1 346 1 130 1 229 1 12 1 181 1 155 1 83 1 62 1 236 1 157 1 377 1 331 2 64 1 334 1 24 1 294 1 
119 1 45 1 67 1 361 2 204 1 3 1 268 1 8 1 101 1 275 1 345 1 226 1 346 1 130 1 229 1 12 1 181 1 155 1 21 1 62 1 236 1 157 1 377 1 331 2 64 1 334 1 24 1 294 1 
46 1 67 1 361 2 205 1 268 2 298 2 270 1 125 2 275 1 51 2 55 2 209 1 130 1 229 1 252 1 181 2 155 1 188 1 189 1 86 1 331 4 294 1 
119 1 46 1 67 1 361 2 3 1 205 1 268 2 365 1 298 2 270 1 8 1 247 1 101 1 125 2 51 2 275 1 80 1 226 1 151 1 346 1 209 1 55 2 130 1 229 1 12 1 181 2 155 1 83 1 62 1 236 1 189 1 188 1 157 1 86 1 331 4 334 1 294 1 
67 1 46 1 361 2 3 1 205 1 268 1 298 1 101 1 125 1 275 1 51 1 209 1 11 1 55 1 130 1 229 1 252 1 181 2 155 1 183 1 306 1 189 1 188 1 22 1 86 1 290 1 331 3 23 1 294 1 
217 1 359 1 67 3 46 4 70 1 97 1 361 6 317 1 172 1 205 5 268 21 362 1 246 1 366 1 270 4 75 2 274 4 9 1 179 1 125 8 52 1 275 3 227 3 209 4 229 3 181 20 155 3 19 1 307 1 284 3 188 4 189 5 288 1 86 4 240 1 163 1 40 1 164 4 331 41 43 1 198 1 116 1 93 1 
217 1 359 1 67 4 46 4 70 1 97 1 361 8 317 1 172 1 205 5 268 18 362 1 246 1 366 1 270 4 75 2 274 4 9 1 179 1 125 7 52 1 275 4 227 3 209 3 229 4 181 20 155 4 19 1 307 2 284 3 188 3 189 4 288 1 86 4 240 1 163 1 40 1 164 4 331 38 43 1 198 1 116 1 93 1 
217 1 359 1 67 2 46 7 70 1 97 1 361 4 317 1 172 1 205 8 268 25 362 1 366 1 270 7 75 1 274 4 179 1 125 14 52 1 275 2 227 4 209 7 229 2 181 27 155 2 19 1 307 1 284 2 355 2 188 7 189 8 288 1 86 7 240 1 163 1 40 2 164 4 331 52 43 1 198 1 116 1 93 1 
67 2 46 3 341 1 361 4 205 3 268 10 362 1 270 3 75 1 274 2 9 1 125 6 275 2 227 1 209 3 229 2 181 9 155 2 284 1 188 3 189 3 288 1 86 3 240 1 40 1 164 2 331 19 198 1 116 1 93 2 
359 1 67 3 46 3 361 6 97 1 172 1 205 3 268 12 362 1 366 1 270 2 75 2 274 4 179 1 125 4 275 3 227 2 209 2 229 3 181 14 155 3 307 2 284 2 188 2 189 2 288 1 86 3 240 1 331 26 164 2 43 1 198 2 116 1 93 1 
200 1 330 1 238 1 276 1 332 1 65 1 363 1 250 1 44 1 123 1 
287 1 373 1 
367 1 330 1 238 1 350 1 276 1 332 1 65 1 186 1 250 1 
316 1 371 1 
242 1 194 1 4 1 
200 1 349 1 153 1 363 1 5 1 138 1 123 1 330 1 78 1 344 2 238 1 276 1 196 1 332 1 65 1 293 1 250 1 335 1 
200 1 349 1 153 1 363 1 5 1 138 1 123 1 330 1 78 1 344 2 238 1 276 1 196 1 332 1 65 1 293 1 250 1 335 1 
200 1 349 1 153 1 363 1 5 1 138 1 123 1 330 1 78 1 344 2 238 1 276 1 196 1 332 1 65 1 293 1 250 1 335 1 
316 1 371 1 4 1 
316 1 371 1 4 1 
242 1 194 1 
242 1 194 1 4 1 
111 1 299 1 
169 1 3 2 5 1 343 1 299 1 101 2 344 1 276 1 250 1 11 2 349 1 373 1 182 1 306 2 139 1 61 1 330 1 377 1 287 1 87 1 238 1 290 2 111 1 196 1 332 1 65 1 335 1 
67 1 361 2 204 1 3 2 173 1 268 1 207 1 8 1 101 2 370 2 275 1 226 1 346 2 30 1 130 1 229 1 252 1 56 1 12 2 181 1 280 1 155 1 62 1 236 2 264 1 290 2 315 1 331 2 334 1 294 1 24 1 
152 1 121 1 234 1 236 2 37 1 74 1 141 1 190 1 191 2 375 1 312 1 8 1 160 1 80 1 226 1 346 2 113 1 326 1 12 2 
152 1 121 1 236 1 37 1 74 1 190 1 191 2 375 1 312 1 8 1 160 1 225 1 346 1 113 1 226 1 326 1 12 1 
256 1 48 1 328 1 62 1 212 1 236 1 141 1 190 1 8 1 64 1 226 1 346 1 334 1 12 1 
152 1 121 1 234 1 236 1 37 1 74 1 141 1 190 1 191 2 375 1 312 1 8 1 160 1 226 1 346 1 113 1 326 1 12 1 
16 1 
28 1 232 1 293 1 208 1 380 1 374 1 321 1 
220 1 69 1 295 1 5 1 122 1 321 1 271 1 28 1 248 1 54 1 17 1 374 1 310 1 38 1 196 1 293 2 115 1 
46 2 340 2 245 1 96 2 295 12 205 2 5 5 297 2 8 3 248 6 150 2 346 3 54 3 208 1 302 2 209 2 12 3 258 1 62 3 310 4 157 3 159 6 162 2 64 1 114 1 115 4 118 1 219 2 69 4 220 4 267 6 122 5 321 2 368 1 369 2 28 8 372 2 80 1 226 4 33 2 232 1 184 3 374 9 236 3 189 2 85 2 376 1 86 2 291 2 292 1 196 5 41 2 334 10 293 8 
143 1 359 1 46 2 295 6 220 2 69 2 97 1 172 1 205 2 267 5 5 1 366 1 122 1 321 2 98 1 28 5 248 3 54 1 227 1 209 2 33 1 374 8 284 1 310 2 189 2 85 2 159 5 86 2 196 1 164 1 41 1 293 5 43 1 115 2 118 1 
220 1 69 1 70 1 3 1 205 2 5 1 7 1 124 1 101 1 28 2 52 1 129 1 11 1 306 1 19 1 137 1 374 2 310 1 189 1 85 2 290 1 314 1 193 1 196 1 41 1 23 1 197 1 115 1 
69 1 220 1 232 1 374 1 310 1 321 1 28 1 208 1 293 1 115 1 
46 2 219 1 295 10 205 2 267 5 374 5 189 2 85 2 159 5 86 2 28 5 248 5 41 1 293 5 209 2 
196 1 54 1 293 1 5 1 122 1 321 1 
201 1 220 2 69 1 5 3 222 1 122 4 8 1 28 2 226 1 346 4 54 2 12 4 13 1 33 2 257 1 133 1 374 2 328 1 62 1 212 1 310 2 236 4 292 2 64 2 196 3 114 1 334 1 115 2 118 2 
119 1 67 1 204 1 361 2 3 3 268 1 101 3 247 1 8 1 275 1 346 1 151 1 226 1 11 2 130 1 229 1 12 1 304 1 155 1 306 2 83 1 137 1 62 1 236 1 157 1 377 1 290 2 331 1 64 1 23 2 334 1 294 1 
217 1 33 1 295 4 69 1 220 1 267 2 374 1 310 1 321 2 159 2 28 2 248 2 293 4 115 1 118 1 
330 1 65 1 260 1 
330 1 266 1 65 1 363 1 299 1 
330 1 65 1 260 1 
330 1 65 1 260 1 
330 1 79 1 65 1 
330 1 79 1 65 1 
330 1 79 1 65 1 
330 1 65 1 
238 1 276 1 
217 1 67 1 361 2 70 1 317 1 205 1 172 1 268 4 270 2 125 2 275 1 52 1 227 1 229 1 181 4 155 1 19 1 284 1 189 1 163 1 331 8 164 1 116 1 
217 1 67 2 46 1 70 1 361 4 317 1 172 1 205 2 268 5 270 2 125 3 52 1 275 2 227 1 229 2 181 6 305 1 155 2 19 1 284 1 189 1 188 1 86 1 163 1 40 1 331 11 164 2 116 1 
217 1 359 1 67 3 46 2 70 1 361 6 97 1 317 1 172 1 205 3 268 10 366 1 270 3 125 4 52 1 275 3 227 1 209 2 229 3 181 9 305 1 155 3 19 1 307 1 284 1 188 1 189 3 86 2 163 1 331 19 164 1 43 1 116 1 
217 1 67 3 46 2 359 1 70 1 361 6 97 1 317 1 172 1 205 3 268 7 366 1 270 3 125 5 52 1 275 3 227 1 209 1 229 3 181 10 305 1 155 3 19 1 307 1 284 1 188 2 189 2 86 2 163 1 331 17 164 1 43 1 116 1 
217 1 67 1 361 2 70 1 317 1 205 1 172 1 268 4 270 2 125 2 275 1 52 1 227 1 229 1 181 4 155 1 19 1 284 1 189 1 163 1 331 8 164 1 116 1 
67 1 46 2 359 1 361 2 97 1 172 1 205 2 268 6 366 1 270 1 125 2 275 1 227 1 209 2 229 1 181 6 155 1 284 1 188 1 189 2 86 2 331 12 164 1 43 1 116 1 
217 1 359 1 67 4 46 2 70 1 361 8 97 1 317 1 172 1 205 3 268 8 366 1 270 3 125 5 52 1 275 4 227 1 209 1 229 4 181 10 305 1 155 4 19 1 307 2 284 1 188 2 189 2 86 2 163 1 331 18 164 1 43 1 116 1 
359 1 67 4 46 3 361 8 97 1 172 1 205 3 268 7 366 1 270 3 9 1 125 6 275 4 227 1 209 2 229 4 181 9 155 4 307 2 284 1 188 3 189 2 86 3 331 16 164 1 43 1 116 1 
181 3 70 1 317 2 205 1 268 4 19 3 189 1 188 3 270 3 125 6 52 3 163 1 331 7 
217 1 359 1 67 4 46 2 70 1 361 8 97 1 317 1 172 1 205 3 268 8 366 1 270 3 9 1 125 4 52 1 275 4 227 1 209 1 229 4 181 10 155 4 19 1 307 2 284 1 188 1 189 2 86 2 163 1 331 18 164 1 43 1 116 1 
181 4 217 1 67 2 70 1 361 4 155 2 317 1 205 1 268 4 19 1 307 1 189 1 188 1 270 2 125 3 275 2 52 1 163 1 331 8 229 2 
181 3 217 1 70 1 317 1 205 1 268 3 19 1 189 1 270 2 125 2 52 1 163 1 331 6 380 1 
181 2 305 1 67 1 46 1 361 2 155 1 205 1 268 2 189 1 188 1 270 1 86 1 125 2 275 1 331 4 209 1 229 1 
181 3 46 1 205 1 268 4 284 1 189 1 188 1 270 1 86 1 125 2 40 1 164 2 331 7 209 1 227 1 
217 1 46 2 67 2 70 1 361 4 317 1 205 3 268 12 342 1 270 5 125 9 52 2 275 2 301 1 227 2 209 2 229 2 181 11 155 2 19 2 307 2 188 4 189 3 355 1 86 2 163 1 40 1 331 23 164 2 
331 1 268 1 164 1 
181 1 331 1 227 1 
181 3 305 1 67 1 46 1 219 1 361 2 155 1 205 1 268 3 188 1 189 1 270 2 86 1 125 3 275 1 331 6 209 1 229 1 
67 1 46 2 359 1 361 2 97 1 172 1 205 2 268 6 366 1 270 1 125 2 275 1 227 1 209 2 229 1 181 6 155 1 284 1 188 1 189 2 86 2 331 12 164 1 43 1 116 1 
181 3 70 1 205 1 268 3 19 1 189 1 188 1 270 1 125 2 52 1 331 6 
181 1 67 1 361 2 317 1 155 1 19 1 268 2 342 1 307 1 188 1 270 1 125 2 52 1 275 1 163 1 331 3 229 1 
181 5 67 1 361 2 70 1 155 1 205 2 19 2 268 5 188 2 189 2 270 3 125 5 275 1 52 2 331 10 197 1 229 1 116 1 
181 2 67 1 46 1 361 2 155 1 205 1 188 1 125 1 275 1 331 2 116 1 229 1 
181 2 67 1 46 1 361 2 155 1 205 1 268 2 189 1 188 1 270 1 86 1 125 2 275 1 331 4 209 1 116 1 229 1 
181 1 67 3 361 6 155 3 268 2 19 1 342 1 307 1 188 1 270 1 9 1 125 2 275 3 52 1 331 3 116 1 229 3 
217 1 67 5 46 3 70 2 68 1 361 10 317 1 205 5 268 18 342 1 270 7 9 1 125 12 52 3 50 1 275 5 227 3 209 3 229 5 181 16 305 1 155 5 19 3 307 2 284 1 188 5 189 5 158 1 86 3 163 1 40 1 164 4 331 34 116 1 
106 1 215 1 377 1 101 1 290 1 3 1 309 1 
106 1 215 1 202 1 3 1 18 1 352 1 309 1 178 1 377 1 101 1 290 1 117 1 
8 1 64 1 226 1 346 1 334 1 380 1 328 1 62 1 212 1 236 1 12 1 
119 1 3 2 306 1 281 1 62 1 236 1 157 1 377 1 101 2 247 1 8 1 290 1 64 1 226 1 346 1 334 1 11 1 12 1 
119 1 96 1 3 2 221 1 297 1 8 1 247 1 101 2 324 1 346 1 226 1 11 1 12 1 306 2 281 1 62 2 236 1 157 2 377 1 290 2 193 1 292 1 334 3 
119 1 45 1 96 1 3 2 221 1 297 1 6 1 8 1 101 2 324 1 346 2 226 1 11 1 12 2 306 2 281 1 62 2 236 2 157 2 377 1 290 2 193 1 292 1 334 3 
3 1 5 1 321 1 7 1 124 1 101 1 346 1 11 1 12 1 306 1 184 1 137 1 236 1 290 1 314 1 193 1 195 1 292 1 196 1 23 1 334 1 293 1 
96 1 184 1 297 1 5 2 62 1 122 1 321 1 236 3 157 1 6 1 8 1 369 1 291 1 150 1 64 1 196 2 292 1 226 1 346 3 293 1 334 4 12 3 
8 1 360 1 226 1 346 1 236 1 12 1 
253 1 280 1 144 1 245 1 360 1 71 1 62 2 236 7 74 1 157 1 8 2 370 1 80 1 333 1 64 2 346 7 226 3 66 1 165 1 334 3 12 6 
119 1 94 1 217 1 67 2 70 1 361 4 317 1 3 2 205 1 268 3 365 1 298 1 270 2 8 1 101 2 247 1 125 2 51 1 52 1 275 2 80 1 226 1 346 1 151 1 55 1 11 1 130 2 229 2 252 1 12 1 181 3 155 2 306 1 19 1 281 1 83 1 62 1 236 1 189 1 157 1 264 1 377 2 290 1 163 1 331 6 334 1 294 2 
340 1 220 2 69 2 5 3 122 2 321 1 28 1 369 1 372 1 150 1 346 1 54 1 208 1 12 1 232 1 182 1 184 1 374 1 236 1 310 2 291 1 162 1 64 1 196 3 114 1 293 1 334 2 115 2 
245 1 360 1 258 1 62 1 236 2 157 1 8 1 150 1 80 1 346 2 226 2 334 2 12 2 
243 1 328 1 212 1 62 1 236 4 6 1 8 1 64 1 80 1 226 1 346 4 334 1 12 4 
71 1 62 1 236 2 157 1 311 1 8 1 379 1 292 1 333 1 346 2 226 2 334 1 251 1 12 2 
191 1 312 1 152 1 8 1 64 1 226 1 346 1 37 1 236 1 12 1 
280 1 62 1 236 2 74 1 8 1 315 1 80 1 346 2 226 1 334 1 12 2 
253 1 243 1 280 1 144 1 328 1 212 1 62 2 236 5 8 2 292 1 64 1 80 1 346 5 226 2 334 3 12 4 
253 1 243 1 280 1 328 1 212 1 62 2 236 5 77 1 8 2 292 1 64 1 80 1 346 5 226 2 334 3 12 4 
119 1 45 1 3 2 306 1 281 1 62 1 236 1 157 1 377 1 101 2 8 1 290 1 64 1 226 1 346 1 334 1 11 1 12 1 
245 1 71 1 62 1 236 1 157 1 8 1 333 1 292 1 346 1 226 2 165 1 334 1 12 1 
377 1 244 1 35 1 108 1 20 1 
35 1 244 2 182 1 221 1 108 2 5 2 20 2 187 1 321 1 263 1 322 1 377 1 300 1 369 1 324 1 193 1 357 1 196 2 293 1 
35 1 3 1 108 1 173 1 20 1 207 1 101 1 290 1 56 1 
322 1 300 1 35 1 
192 1 325 1 147 1 380 1 
192 1 102 1 134 1 325 1 147 1 303 1 199 1 
358 1 102 1 329 1 
134 3 135 2 206 1 147 1 192 1 102 3 89 1 325 1 336 1 303 1 166 1 199 1 
192 1 10 1 102 2 134 2 325 1 147 1 303 1 148 1 199 1 
210 1 134 1 206 1 191 1 312 1 356 1 192 1 102 1 303 1 326 1 199 1 
192 1 102 1 134 1 325 1 206 1 303 1 199 1 
102 1 134 1 325 2 147 1 206 1 303 1 199 1 
231 1 323 1 95 1 192 1 102 2 134 2 325 1 206 1 303 2 199 2 
203 1 134 3 147 1 206 1 148 2 39 1 356 1 192 2 102 3 325 1 303 1 337 1 199 1 
152 1 121 1 134 2 109 1 147 1 206 1 148 1 191 2 312 1 192 1 102 2 325 1 303 1 326 1 199 1 
134 4 147 1 206 1 148 2 356 1 192 2 102 4 10 1 53 1 325 1 303 2 337 1 199 2 
192 1 102 1 134 1 325 1 147 1 206 1 303 1 199 1 
170 1 134 4 135 1 147 2 148 2 356 1 192 3 102 4 325 2 336 1 303 1 166 1 337 1 199 1 
254 1 279 1 192 1 102 2 134 2 325 1 147 1 206 1 303 1 148 1 265 1 199 1 
76 1 192 1 102 3 134 3 135 2 325 1 147 1 206 1 336 1 303 1 166 2 199 1 
192 2 277 2 261 1 224 1 
0 1 102 1 134 1 206 1 303 1 199 1 
39 1 192 1 102 2 134 2 325 1 147 1 206 1 303 1 148 1 199 1 
103 1 
192 1 102 1 134 1 325 1 147 1 206 1 303 1 199 1 
39 1 192 1 102 3 134 3 135 1 325 1 147 1 206 1 303 1 148 1 199 1 
170 1 192 1 356 1 337 1 
192 1 325 1 

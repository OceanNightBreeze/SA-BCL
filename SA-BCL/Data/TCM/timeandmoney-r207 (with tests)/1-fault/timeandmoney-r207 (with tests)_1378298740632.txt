#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 222 265 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 236 3 200 1 121 2 7 1 19 2 191 1 310 1 282 3 22 2 71 1 258 1 248 1 
308 1 236 9 5 1 121 2 200 1 52 1 337 1 7 2 264 1 310 1 282 9 83 1 156 1 182 2 247 1 248 1 346 1 293 3 209 2 161 1 374 2 19 2 191 6 22 5 23 2 71 1 258 4 234 1 
308 1 236 9 5 1 121 2 200 1 52 1 337 1 7 2 264 1 310 1 282 9 83 1 156 1 182 2 247 1 248 1 346 1 293 3 209 2 161 1 374 2 19 2 191 6 22 5 23 2 71 1 258 4 234 1 
308 1 236 10 5 1 121 2 200 1 52 1 337 1 7 2 264 1 310 1 282 10 83 1 156 1 182 2 247 1 248 1 346 1 293 4 209 2 161 1 374 2 19 2 191 7 22 6 23 2 71 1 258 5 234 1 
308 1 236 7 5 1 121 2 200 1 52 1 337 1 7 2 264 1 310 1 282 7 156 1 182 1 247 1 248 1 346 1 293 2 209 2 161 1 374 2 19 2 191 4 22 4 23 2 71 1 258 3 234 1 
293 1 209 1 236 4 200 1 121 1 337 1 374 1 19 1 191 3 310 1 282 4 22 3 83 1 23 1 182 2 71 1 258 2 346 1 
350 1 209 1 218 1 236 2 200 1 121 1 7 1 19 1 310 1 282 2 22 1 23 1 156 1 71 1 247 1 57 1 
293 3 209 1 236 9 52 1 200 1 121 2 374 1 337 1 190 1 264 1 7 1 19 2 191 7 310 1 282 9 22 5 83 1 23 1 182 2 71 1 212 1 258 4 346 1 248 1 
293 3 209 1 236 9 52 1 200 1 121 2 374 1 337 1 190 1 264 1 7 1 19 2 191 7 310 1 282 9 22 5 83 1 23 1 182 2 71 1 212 1 258 4 346 1 248 1 
351 1 15 1 16 1 3 1 230 1 91 1 150 1 221 1 65 1 379 1 70 1 75 1 197 1 130 1 
21 1 
21 1 3 2 299 1 91 2 150 1 368 1 344 1 160 1 
208 2 135 2 297 1 3 5 299 1 91 5 339 1 150 2 35 1 325 1 21 1 55 2 377 1 154 1 284 1 316 1 329 1 344 1 160 2 
21 1 31 1 299 1 
21 1 44 1 193 2 
108 1 351 2 16 2 379 2 230 2 221 1 197 2 130 2 
118 1 27 1 221 1 100 1 176 1 82 2 152 2 312 1 313 1 266 1 104 1 39 2 42 1 129 1 130 3 185 1 294 1 108 1 88 1 351 2 16 3 229 1 17 1 373 1 230 2 270 1 253 1 357 1 139 1 141 1 378 1 379 2 274 2 24 2 143 1 214 1 197 2 
65 1 351 1 15 1 16 1 379 1 230 1 221 1 197 1 75 1 130 1 
146 1 349 1 16 1 15 1 3 1 299 1 91 1 37 1 21 1 343 1 206 1 197 1 130 1 186 1 
351 1 349 1 16 1 15 1 3 2 230 1 299 1 91 2 37 1 21 1 379 1 206 1 197 1 130 1 186 1 
3 1 91 1 150 1 256 1 160 1 
21 1 136 1 3 2 299 1 91 2 150 1 344 1 160 1 
3 1 91 1 160 1 
363 1 351 1 108 2 16 2 230 1 367 1 379 1 197 2 130 2 
242 1 336 1 188 1 
27 1 108 1 88 1 16 1 270 1 100 1 82 1 48 1 141 1 378 1 274 1 24 1 143 1 129 1 130 1 185 1 
27 1 88 1 351 1 16 2 270 1 230 1 54 1 100 1 82 1 242 1 141 1 225 1 378 1 274 1 24 1 143 1 129 1 197 1 130 2 185 1 
108 1 31 1 
108 1 351 3 16 3 379 1 230 3 54 1 197 3 130 3 
65 1 351 1 15 1 16 1 230 1 197 1 130 1 
351 1 363 1 15 1 16 1 367 1 379 1 230 1 197 1 130 1 
27 1 118 1 363 1 3 1 174 1 221 1 54 1 100 1 37 1 82 1 152 1 312 1 313 1 225 1 266 1 104 1 39 2 42 1 206 1 129 1 185 1 130 4 186 1 13 1 108 1 88 1 349 1 351 3 16 4 15 1 229 1 373 1 270 1 230 3 91 1 253 1 357 1 141 1 378 1 379 2 274 1 24 1 143 1 197 3 
108 1 351 1 113 1 16 2 343 1 230 1 54 1 197 2 130 2 
13 1 363 1 351 3 349 1 15 1 16 3 3 1 230 3 148 1 91 1 54 2 37 1 21 1 225 1 379 1 206 1 197 3 130 3 186 1 
363 1 351 2 336 1 16 2 230 2 54 1 242 1 379 1 197 2 130 2 
27 1 108 1 88 1 16 1 270 1 100 1 82 1 141 1 378 1 274 1 24 1 143 1 129 1 130 1 185 1 
27 1 108 1 88 1 16 1 270 1 100 1 82 1 141 1 274 1 24 1 143 1 330 1 40 1 129 1 130 1 
216 1 336 2 30 1 338 1 242 2 312 1 152 4 313 1 266 1 39 2 345 1 188 2 294 2 320 1 229 1 373 1 322 1 253 1 357 2 326 1 361 1 196 1 49 1 74 1 
351 1 15 1 16 1 244 1 230 1 197 1 186 1 130 1 
351 4 363 1 108 1 16 5 230 4 54 2 113 1 225 1 379 1 343 1 158 1 228 1 197 5 130 5 
65 1 351 2 244 1 15 1 16 2 230 2 197 2 130 2 
119 1 94 1 184 1 
180 1 235 1 119 2 51 1 94 2 53 1 
119 1 94 1 
119 1 94 1 
180 1 51 1 
180 1 51 1 
180 1 51 1 
119 1 94 1 233 1 
119 1 94 1 233 1 
119 1 94 1 233 1 
47 1 119 1 94 1 
47 1 119 1 94 1 
47 1 119 1 94 1 
147 2 235 1 119 2 3 2 137 1 250 1 300 1 91 2 223 1 45 3 201 1 112 1 21 1 153 2 243 2 94 2 183 2 72 1 259 2 
147 1 119 1 3 1 239 1 153 1 243 1 315 1 184 1 289 1 348 1 130 2 85 1 108 1 351 2 352 1 134 1 16 2 230 2 250 1 91 1 45 1 94 1 259 1 197 2 
350 1 209 2 318 1 374 1 280 2 
209 1 23 1 374 1 
350 1 209 1 23 1 
350 1 198 1 209 3 318 1 374 2 280 1 
350 1 209 2 318 1 374 1 276 1 280 1 
215 1 335 1 216 1 3 5 239 1 150 4 175 2 8 1 281 1 55 1 284 2 154 3 12 1 344 1 348 1 160 1 207 1 352 1 208 1 320 1 135 1 44 1 269 2 91 5 299 1 252 1 325 1 326 1 272 2 21 2 193 3 196 1 
215 3 335 2 216 3 78 1 3 9 150 7 175 6 38 1 281 2 55 2 284 6 154 8 155 1 344 1 348 4 160 6 207 1 208 2 320 3 135 2 44 3 91 9 299 1 325 1 302 1 326 3 272 6 21 5 377 1 193 9 194 1 169 5 196 3 144 1 256 5 
215 1 335 1 216 1 3 3 150 2 175 2 8 1 281 1 55 1 154 3 284 2 12 1 348 1 208 1 135 1 320 1 44 2 269 1 299 1 91 3 326 1 21 3 272 2 377 1 193 4 196 1 
215 2 335 1 216 2 3 4 150 3 175 4 8 1 38 1 281 1 55 1 154 5 284 4 12 1 348 2 208 1 135 1 320 2 44 3 269 2 299 1 91 4 302 1 326 2 21 4 272 4 377 1 193 7 194 1 196 2 
224 1 
141 1 103 1 31 1 
141 1 222 1 
88 1 141 1 
88 1 141 3 103 2 79 1 142 1 129 1 
88 1 141 1 129 1 
141 1 110 1 
277 1 294 4 216 1 2 2 262 1 120 1 61 1 162 1 322 2 357 3 376 1 152 7 283 1 181 1 196 1 345 3 41 1 76 1 
277 2 215 3 216 4 2 3 262 2 120 1 220 1 152 31 312 1 283 1 313 1 102 1 181 1 39 2 267 1 345 10 41 1 128 1 249 1 133 1 294 16 353 3 320 3 229 1 373 1 61 5 162 2 322 5 357 15 326 3 376 2 359 1 360 4 196 4 
277 1 50 1 216 1 2 2 262 1 312 2 152 9 283 1 313 2 10 1 181 1 39 4 345 4 128 1 41 1 294 5 229 2 373 2 61 1 162 1 322 3 357 4 376 1 196 1 
277 1 294 4 216 1 2 2 262 1 120 1 61 1 162 1 322 2 357 3 376 1 152 7 283 1 181 1 196 1 345 3 41 1 
277 1 294 4 216 1 2 2 262 1 120 1 61 1 162 1 322 2 357 3 376 1 152 7 283 1 181 1 196 1 345 3 41 1 
27 1 131 1 88 1 278 2 236 1 121 1 80 1 7 2 19 1 100 1 123 2 20 2 82 1 282 1 141 1 210 1 285 1 274 1 24 1 68 1 143 1 205 1 347 1 
27 1 278 1 198 1 219 1 29 1 236 1 97 1 121 1 200 1 7 1 123 1 82 1 311 1 282 1 342 1 56 1 350 1 209 2 374 1 62 1 19 1 20 1 23 1 24 1 274 1 143 1 
27 1 278 1 198 1 219 1 29 1 236 2 97 1 121 1 200 1 7 1 123 1 310 1 82 1 282 2 342 1 56 1 350 1 209 2 374 1 62 1 19 1 191 1 20 1 192 1 22 1 23 1 24 1 274 1 143 1 71 1 
27 1 278 1 198 1 29 1 236 3 97 1 121 1 7 1 123 1 310 1 82 1 311 1 282 3 342 1 56 1 291 1 131 1 350 1 209 2 374 1 62 1 19 1 20 1 191 2 22 1 23 1 24 1 274 1 143 1 71 1 
27 1 350 1 278 1 198 1 209 2 29 1 236 2 374 1 62 1 7 1 191 2 20 1 123 1 310 1 311 1 82 1 282 2 22 1 23 1 56 1 274 1 24 1 143 1 71 1 291 1 
319 1 
146 1 335 1 3 5 100 2 241 1 55 1 284 2 154 2 343 1 105 1 157 1 344 3 206 1 160 6 349 1 208 1 16 1 15 1 299 1 21 2 166 2 210 1 305 1 114 2 24 2 116 1 211 1 25 1 27 1 32 1 263 1 80 1 37 1 82 2 179 2 130 1 186 1 88 1 135 1 44 2 89 4 91 5 325 1 92 1 140 1 93 2 141 1 193 2 274 2 195 2 143 1 331 1 332 2 275 2 197 1 
146 1 349 1 15 1 16 1 3 3 89 2 91 3 263 1 92 1 37 1 140 1 305 1 343 1 195 1 368 1 331 1 344 1 206 1 197 1 160 2 186 1 130 1 
146 1 3 3 263 1 37 1 343 1 368 1 344 1 206 1 160 1 130 1 186 1 349 1 16 1 15 1 89 3 91 3 299 1 92 1 140 1 21 1 305 1 166 1 331 1 197 1 
146 1 3 3 263 1 37 1 343 1 368 1 344 1 206 1 130 1 186 1 160 2 349 1 16 1 15 1 89 3 91 3 299 1 92 1 140 1 21 1 305 1 93 1 166 1 195 1 331 1 197 1 
146 1 3 5 240 1 340 1 241 1 55 1 154 1 284 1 343 1 344 3 159 1 206 1 160 7 349 1 208 1 15 1 16 1 299 5 21 5 304 1 305 1 166 4 114 2 25 1 263 1 37 1 179 2 368 1 186 1 130 1 135 1 44 2 89 6 91 5 92 1 325 1 140 1 93 4 195 4 331 1 332 2 275 2 197 1 334 1 
146 1 3 4 241 1 55 1 154 1 284 1 343 1 344 2 206 1 160 4 349 1 208 1 15 1 16 1 299 1 21 2 305 1 166 2 114 2 116 1 25 1 263 1 37 1 179 2 186 1 130 1 135 1 44 2 89 4 91 4 325 1 92 1 140 1 93 2 193 2 195 2 331 1 332 2 275 2 197 1 
146 1 3 4 263 1 340 1 37 1 241 1 179 2 55 1 284 1 154 1 343 1 344 2 206 1 160 4 130 1 186 1 349 1 208 1 135 1 44 2 16 1 15 1 89 4 299 1 91 4 92 1 325 1 21 1 140 1 304 1 166 2 93 2 305 1 114 2 195 2 25 1 331 1 332 2 275 2 197 1 334 1 
146 1 3 4 263 1 340 1 37 1 241 1 179 2 55 1 284 1 154 1 343 1 344 2 206 1 160 4 130 1 186 1 349 1 208 1 135 1 44 2 16 1 15 1 89 4 299 1 91 4 92 1 325 1 21 1 140 1 304 1 166 2 93 2 305 1 114 2 195 2 25 1 331 1 332 2 275 2 197 1 334 1 
146 1 3 4 263 1 340 1 37 1 341 2 178 2 55 1 154 1 284 1 343 1 344 2 206 1 160 4 130 1 186 1 349 1 208 1 135 1 16 1 15 1 89 4 372 1 299 1 91 4 163 1 92 1 325 1 21 1 140 1 166 2 93 2 305 1 193 2 167 1 195 2 25 1 331 1 332 2 275 2 197 1 
146 1 3 4 263 1 340 1 37 1 241 1 179 2 55 1 284 1 154 1 343 1 344 2 159 1 206 1 130 1 186 1 160 5 349 1 208 1 135 1 44 2 16 1 15 1 89 5 299 1 91 4 325 1 92 1 21 1 140 1 304 1 305 1 93 3 166 3 114 2 195 3 25 1 331 1 332 2 275 2 197 1 334 1 
146 1 3 4 263 1 340 1 37 1 241 1 179 2 55 1 284 1 154 1 343 1 344 2 159 1 206 1 130 1 186 1 160 5 349 1 208 1 135 1 44 2 16 1 15 1 89 5 299 1 91 4 325 1 92 1 21 1 140 1 304 1 305 1 93 3 166 3 114 2 195 3 25 1 331 1 332 2 275 2 197 1 334 1 
146 1 3 4 263 1 37 1 341 2 178 2 55 1 154 1 284 1 343 1 344 2 206 1 160 4 130 1 186 1 349 1 208 1 135 1 16 1 15 1 89 4 299 1 91 4 163 1 92 1 325 1 21 1 140 1 166 2 93 2 305 1 193 2 195 2 116 1 25 1 331 1 332 2 275 2 197 1 
96 1 27 2 172 1 80 1 54 1 100 2 311 1 82 8 176 2 312 2 152 2 313 2 266 2 317 1 104 1 39 4 292 1 130 1 351 1 294 1 88 2 268 1 16 1 229 2 373 2 230 1 253 2 357 1 192 1 141 3 210 1 24 8 274 7 255 1 143 2 257 1 49 1 197 1 214 1 
215 1 363 1 216 1 336 1 242 1 312 1 152 3 313 1 266 1 286 1 39 2 345 1 188 1 130 1 295 1 351 1 294 1 320 1 16 1 229 1 373 1 230 1 322 1 253 1 357 2 326 1 379 1 196 1 197 1 
277 1 216 1 2 1 336 1 31 1 242 1 312 1 152 6 283 1 313 1 266 1 181 1 39 2 345 2 41 1 188 1 294 3 108 2 229 1 373 1 322 2 253 1 357 3 376 1 196 1 49 1 
215 2 216 1 336 4 242 11 312 2 152 14 313 2 266 1 104 1 39 4 369 1 345 2 188 11 132 1 133 1 108 1 60 1 295 1 294 8 353 3 320 2 229 2 61 1 373 2 322 1 253 2 357 6 326 1 360 3 359 1 67 1 196 2 214 1 
27 1 336 1 6 1 54 1 100 1 82 1 312 1 152 2 313 1 225 1 266 1 226 1 104 1 39 2 129 1 185 1 130 2 108 1 88 1 295 1 351 1 294 1 16 2 229 1 373 1 270 1 230 1 111 1 253 1 357 1 48 1 141 1 378 1 24 1 274 1 143 1 197 1 214 1 
277 1 0 2 2 1 336 7 54 1 100 1 242 7 152 20 283 1 104 1 245 2 345 8 108 2 351 1 295 1 294 10 16 3 18 2 61 4 251 1 253 3 357 10 24 3 214 1 26 1 27 2 215 2 216 3 34 2 311 1 82 3 312 3 225 1 313 3 266 3 181 1 39 6 41 1 42 2 129 2 130 3 185 2 188 7 88 2 189 1 320 2 229 3 373 3 230 1 270 2 322 4 326 2 376 1 141 2 378 2 274 3 143 2 196 3 197 1 
294 2 320 1 336 1 229 1 61 1 373 1 253 1 242 1 152 2 312 1 313 1 266 1 39 2 196 1 345 1 49 1 74 1 188 1 
216 1 336 1 229 1 30 1 373 1 322 1 253 1 357 2 326 1 242 1 152 2 312 1 313 1 266 1 39 2 345 1 49 1 188 1 
215 1 216 1 336 2 242 2 312 1 152 4 313 1 266 1 39 2 345 2 188 2 294 2 320 1 229 1 373 1 61 1 322 1 253 1 357 2 326 1 196 1 49 1 
294 2 320 1 336 1 229 1 61 1 373 1 253 1 242 1 152 2 312 1 313 1 266 1 39 2 196 1 345 1 257 1 74 1 188 1 
216 1 336 1 229 1 30 1 373 1 322 1 253 1 357 2 326 1 242 1 152 2 312 1 313 1 266 1 39 2 345 1 257 1 188 1 
215 1 216 1 336 2 242 2 312 1 152 4 313 1 266 1 39 2 345 2 188 2 294 2 320 1 229 1 373 1 61 1 322 1 253 1 357 2 326 1 196 1 257 1 
215 1 294 2 216 1 320 1 336 2 229 1 61 1 373 1 322 1 253 1 357 2 326 1 242 2 312 1 152 4 313 1 266 1 39 2 196 1 345 2 188 2 
27 1 100 1 82 1 152 2 312 1 313 1 266 1 104 1 39 2 42 1 129 1 185 1 130 1 294 1 108 1 88 1 16 1 229 1 373 1 270 1 253 1 357 1 141 1 378 1 24 1 274 1 143 1 214 1 
27 1 100 1 82 1 177 1 152 2 312 1 313 1 266 1 104 1 39 2 40 1 129 1 130 1 294 1 108 1 88 1 16 1 229 1 373 1 270 1 253 1 357 1 141 1 24 1 274 1 143 1 330 1 214 1 
215 1 216 1 336 2 242 2 312 1 152 4 313 1 266 1 39 2 345 2 188 2 294 2 295 1 320 1 229 1 373 1 61 1 322 1 253 1 357 2 326 1 196 1 
27 1 215 1 0 1 216 1 336 2 82 1 242 2 152 4 312 1 313 1 266 1 39 2 345 2 42 1 129 1 188 2 185 1 130 1 294 2 88 1 320 1 16 1 229 1 61 1 373 1 270 1 322 1 253 1 357 2 326 1 192 1 141 1 378 1 24 1 274 1 143 1 196 1 
215 1 363 1 216 1 336 1 242 1 312 1 152 3 313 1 266 1 39 2 345 1 130 1 188 1 295 1 351 1 294 2 320 1 16 1 229 1 61 1 373 1 230 1 253 1 63 1 357 1 326 1 379 1 196 1 197 1 
215 3 216 3 149 1 33 1 312 2 152 19 313 2 10 1 365 1 125 1 39 4 345 6 227 1 133 1 294 9 353 1 320 3 229 2 373 2 61 3 322 3 357 10 326 3 64 1 360 2 359 1 115 2 196 3 306 1 117 2 
215 3 216 2 237 1 149 1 33 1 312 3 152 26 313 3 10 1 125 1 39 6 345 4 246 1 128 2 227 2 294 14 133 2 353 2 320 3 229 3 61 2 373 3 322 2 356 1 357 12 254 1 326 2 64 2 360 2 66 1 168 1 115 1 196 3 117 4 
277 1 215 4 216 5 2 1 217 1 237 1 149 1 33 1 312 3 152 41 283 1 313 3 10 1 365 1 125 1 181 1 39 6 246 1 345 8 41 1 128 1 227 1 133 3 294 20 353 3 320 4 229 3 373 3 61 4 322 4 356 1 357 21 254 1 326 4 376 1 64 2 360 4 359 1 66 1 168 1 115 1 196 5 117 4 
277 1 215 4 216 4 2 1 217 1 237 1 149 1 33 1 312 4 152 38 283 1 313 4 10 1 365 1 125 1 181 1 39 8 246 1 345 7 41 1 128 2 227 1 133 3 294 20 353 3 320 4 229 4 373 4 61 3 322 4 356 1 357 18 254 1 326 3 376 1 64 2 360 4 359 1 66 1 168 1 115 1 196 5 117 4 
277 1 215 7 216 8 2 1 237 1 149 1 33 1 312 2 152 52 283 1 313 2 10 1 125 1 181 1 39 4 246 1 345 14 41 1 128 1 227 1 60 2 133 2 294 27 353 4 320 7 229 2 373 2 61 7 322 7 356 1 357 25 254 1 326 7 376 1 64 1 360 4 359 2 66 1 168 1 115 1 196 8 117 4 
147 1 235 1 119 1 153 1 243 1 298 1 94 1 72 1 201 1 259 1 
184 1 289 1 
151 1 147 1 354 1 119 1 153 1 355 1 243 1 94 1 259 1 
147 1 235 1 119 1 3 1 137 1 250 1 91 1 223 1 45 2 201 1 112 1 21 1 153 1 243 1 94 1 183 1 72 1 259 1 
147 1 235 1 119 1 3 1 137 1 250 1 91 1 223 1 45 2 201 1 112 1 21 1 153 1 243 1 94 1 183 1 72 1 259 1 
147 1 235 1 119 1 3 1 137 1 250 1 91 1 223 1 45 2 201 1 112 1 21 1 153 1 243 1 94 1 183 1 72 1 259 1 
238 1 53 1 233 1 
238 1 53 1 233 1 
47 1 11 1 
47 1 11 1 53 1 
85 1 134 1 
147 1 119 1 199 1 3 1 150 1 239 1 153 1 243 1 315 1 183 1 184 1 289 1 348 1 130 2 85 1 108 1 352 1 351 2 134 1 16 2 230 2 91 1 45 1 112 1 94 1 259 1 197 2 
238 1 233 1 
47 1 11 1 53 1 
27 1 173 1 82 2 176 2 312 1 152 2 313 1 266 1 104 1 39 2 130 2 88 1 295 1 294 1 268 1 321 1 16 2 229 1 373 1 253 1 357 1 358 1 141 1 273 1 24 2 255 1 274 2 143 1 69 1 197 2 214 1 
27 1 88 1 4 1 80 1 164 1 100 1 123 1 82 1 141 1 210 1 274 1 24 1 143 1 205 1 
27 1 350 1 198 1 209 2 29 1 97 1 374 1 62 1 164 1 123 1 311 1 82 1 23 1 274 1 24 1 143 1 370 1 371 1 
27 1 350 1 198 1 209 2 29 1 97 1 374 1 62 1 164 1 123 1 311 1 82 2 192 1 23 1 274 2 24 2 143 1 370 1 371 1 
27 1 350 1 198 1 209 2 29 1 97 1 374 1 62 1 123 1 311 1 82 1 23 1 274 1 24 1 143 1 95 1 370 1 
303 1 
208 1 135 1 297 1 299 1 339 1 325 1 55 1 21 1 284 1 154 1 
215 2 307 2 216 2 320 2 44 5 18 1 175 5 326 2 272 5 21 5 204 1 284 5 154 5 193 10 196 2 
21 1 3 1 299 1 91 1 344 1 160 1 
27 1 335 2 3 3 32 1 80 1 100 2 82 4 55 2 154 2 284 2 105 2 344 2 160 4 88 1 208 2 135 2 138 1 91 3 325 1 165 1 377 1 327 1 141 1 210 1 24 4 274 4 143 1 211 1 73 2 
21 1 154 1 284 1 297 1 31 1 299 1 339 1 
208 1 135 1 44 1 3 1 299 1 91 1 325 1 241 1 179 1 21 2 55 1 154 1 284 1 193 1 114 1 344 1 160 1 
27 1 88 1 208 1 135 1 279 1 79 1 222 1 325 1 100 1 265 1 82 1 55 1 141 1 274 1 24 1 143 1 129 1 
215 2 335 1 307 2 216 2 3 1 237 1 175 5 55 2 204 1 154 8 284 5 105 1 344 1 246 1 160 1 133 1 208 2 353 1 14 1 135 2 320 2 44 3 91 1 299 2 356 1 325 2 375 1 326 2 272 5 21 5 360 1 66 1 193 6 168 1 196 2 
277 1 307 2 216 1 3 1 221 1 55 1 204 1 284 2 154 2 41 1 130 1 351 1 208 1 43 1 135 1 15 1 16 1 230 1 91 1 325 1 376 1 65 1 379 1 196 2 70 1 75 1 197 1 334 1 
118 1 27 1 221 1 100 1 82 1 152 1 312 1 313 1 266 1 104 1 39 2 42 1 129 1 130 3 185 1 108 1 351 2 88 1 16 3 229 1 373 1 230 2 270 1 253 1 357 1 141 1 378 1 24 1 274 1 379 2 143 1 197 2 
335 1 208 1 2 1 135 1 44 2 299 2 175 2 325 1 272 2 55 1 21 4 284 2 154 1 193 4 105 1 
261 1 147 1 134 1 243 1 72 1 
147 1 243 1 362 1 
147 1 243 1 362 1 
147 1 243 1 362 1 
147 1 243 1 366 1 
147 1 243 1 366 1 
147 1 243 1 366 1 
147 1 243 1 
119 1 94 1 
277 2 294 5 216 2 43 1 229 1 373 1 61 2 322 3 357 5 376 2 312 1 152 10 313 1 10 1 39 2 196 2 345 5 41 1 
294 2 320 1 229 1 373 1 61 1 312 1 152 2 313 1 10 1 39 2 196 1 345 1 
215 1 294 2 216 1 320 1 229 1 373 1 61 1 322 1 357 2 326 1 312 1 152 4 313 1 10 1 39 2 196 1 345 2 
277 1 294 1 229 3 373 3 61 1 99 1 322 1 357 2 376 1 152 3 312 3 313 3 10 1 365 1 39 6 345 2 128 1 
277 3 215 3 216 5 2 1 220 1 99 1 312 5 152 34 283 1 313 5 10 1 365 1 181 1 267 1 39 10 106 1 345 12 41 2 128 2 249 1 133 1 294 16 353 3 320 3 229 5 373 5 61 5 322 7 357 18 326 3 376 3 360 4 359 1 196 5 
277 1 216 1 2 1 152 8 312 1 283 1 313 1 10 1 181 1 39 2 345 2 41 1 133 1 294 4 353 1 229 1 373 1 322 2 357 4 376 1 360 1 66 1 196 1 
277 1 215 1 216 1 2 1 152 11 312 2 283 1 313 2 10 1 181 1 39 4 106 1 345 3 41 1 133 1 294 6 353 1 320 1 229 2 373 2 61 1 322 2 357 5 376 1 360 2 359 1 66 1 196 2 
277 1 215 2 216 3 2 1 237 1 152 19 312 3 283 1 313 3 10 1 181 1 39 6 106 1 246 1 345 4 41 1 128 1 133 1 294 9 353 1 320 2 229 3 61 1 373 3 322 3 356 1 357 10 326 2 376 1 360 1 66 1 168 1 196 3 
277 1 215 2 216 2 2 1 237 1 152 17 312 3 283 1 313 3 10 1 181 1 39 6 106 1 246 1 345 5 41 1 128 1 133 1 294 10 353 1 320 2 229 3 61 2 373 3 322 3 356 1 357 7 326 1 376 1 360 1 66 1 168 1 196 3 
277 1 216 1 2 1 152 8 312 1 283 1 313 1 10 1 181 1 39 2 345 2 41 1 133 1 294 4 353 1 229 1 373 1 322 2 357 4 376 1 360 1 66 1 196 1 
215 2 216 2 237 1 152 12 312 1 313 1 10 1 39 2 246 1 345 2 133 1 294 6 353 1 320 2 229 1 61 1 373 1 322 1 356 1 357 6 326 2 360 1 66 1 168 1 196 2 
277 1 215 2 216 2 2 1 237 1 152 18 312 4 283 1 313 4 10 1 181 1 39 8 106 1 246 1 345 5 41 1 128 2 133 1 294 10 353 1 320 2 229 4 61 2 373 4 322 3 356 1 357 8 326 1 376 1 360 1 66 1 168 1 196 3 
215 3 216 2 237 1 152 16 312 4 313 4 10 1 365 1 39 8 246 1 345 6 128 2 133 1 294 9 353 1 320 3 229 4 61 3 373 4 322 3 356 1 357 7 326 2 360 1 66 1 168 1 196 3 
277 3 294 3 216 1 61 3 322 3 357 4 376 3 152 7 283 1 181 2 196 1 345 6 41 1 
277 1 215 2 216 2 2 1 237 1 152 18 312 4 283 1 313 4 10 1 365 1 181 1 39 8 246 1 345 4 41 1 128 2 133 1 294 10 353 1 320 2 229 4 61 1 373 4 322 3 356 1 357 8 326 1 376 1 360 1 66 1 168 1 196 3 
277 1 294 4 216 1 2 1 229 2 61 1 373 2 322 2 357 4 376 1 152 8 312 2 283 1 313 2 181 1 196 1 39 4 345 3 41 1 128 1 
277 1 294 3 216 1 2 1 31 1 322 2 357 3 376 1 152 6 283 1 181 1 196 1 345 2 41 1 
215 1 294 2 216 1 320 1 229 1 373 1 61 1 322 1 357 2 326 1 312 1 152 4 313 1 39 2 196 1 106 1 345 2 
215 1 133 1 294 3 216 1 353 1 320 1 61 1 322 1 357 4 326 1 152 7 360 2 359 1 196 1 345 2 
277 2 215 2 216 3 2 1 99 1 152 23 312 2 283 1 313 2 181 1 39 4 345 9 41 1 128 2 294 11 60 1 353 2 320 2 229 2 61 4 373 2 322 5 357 12 326 2 376 2 359 1 360 2 67 1 196 3 
152 1 360 1 357 1 
152 1 294 1 353 1 
215 1 294 3 216 1 320 1 229 1 18 1 373 1 61 1 322 2 357 3 326 1 312 1 152 6 313 1 39 2 196 1 106 1 345 3 
215 2 216 2 237 1 152 12 312 1 313 1 10 1 39 2 246 1 345 2 133 1 294 6 353 1 320 2 229 1 61 1 373 1 322 1 356 1 357 6 326 2 360 1 66 1 168 1 196 2 
277 1 294 3 216 1 61 1 322 1 357 3 376 1 152 6 196 1 345 2 41 1 
277 1 294 1 229 1 61 1 373 1 322 1 99 1 357 2 376 1 152 3 312 1 283 1 313 1 181 1 39 2 345 2 128 1 
108 1 113 1 109 1 16 1 343 1 197 1 130 1 
108 1 109 1 16 1 323 1 301 1 113 1 287 1 343 1 232 1 333 1 197 1 130 1 
27 1 88 1 80 1 100 1 81 1 82 4 192 1 210 1 141 1 274 4 24 4 143 1 127 1 
27 1 88 1 251 1 309 1 82 2 9 1 141 1 274 2 24 2 143 2 288 1 73 1 129 1 260 1 
27 1 350 1 209 1 23 1 24 1 274 1 143 1 62 1 100 1 82 1 
27 1 192 1 88 1 358 1 141 1 268 1 24 2 274 2 143 1 311 1 82 2 
27 2 88 2 268 1 172 1 80 1 100 1 81 1 82 5 192 1 210 1 141 3 274 4 24 5 143 2 317 1 73 1 
27 2 88 2 268 1 80 1 100 1 324 1 81 1 82 5 192 1 210 1 141 3 274 4 24 5 143 2 317 1 73 1 
27 1 88 1 141 1 210 1 31 1 24 1 274 1 143 1 80 1 100 1 82 1 
27 1 108 1 88 1 351 1 16 2 270 1 230 1 54 1 100 1 82 1 141 1 378 1 274 1 24 1 143 1 129 1 197 1 130 2 
27 1 54 1 82 1 206 1 129 2 130 2 186 1 108 1 351 2 88 2 16 2 15 1 230 1 270 1 110 1 141 3 328 1 378 1 24 1 274 1 143 1 73 1 197 2 
27 1 54 1 82 2 40 1 127 1 206 1 129 2 130 2 186 1 108 1 351 2 88 2 16 2 15 1 230 1 270 1 110 1 141 3 328 1 24 2 274 2 143 1 73 1 197 2 
27 1 88 1 3 2 110 1 299 1 91 2 222 1 100 1 37 1 82 3 21 1 141 4 328 1 103 1 274 3 24 3 143 1 127 1 73 1 129 1 145 1 187 1 160 1 
27 1 88 1 1 1 3 2 110 1 299 1 91 2 222 1 100 1 37 1 82 3 21 1 141 4 328 1 103 1 274 3 24 3 143 1 127 1 73 1 129 1 160 1 
27 1 24 1 274 1 143 1 82 1 292 1 
96 1 27 2 88 2 268 1 172 1 79 1 309 1 100 2 176 1 311 1 82 7 192 1 271 1 9 1 141 3 274 6 24 7 317 1 143 3 129 1 292 1 
277 1 27 1 0 1 216 1 2 1 336 1 34 1 54 1 82 1 242 1 152 6 312 2 283 1 313 2 266 2 181 1 39 4 345 2 41 1 42 1 129 1 188 1 130 2 185 1 108 2 294 3 88 1 295 1 351 1 16 2 229 2 373 2 270 1 230 1 322 2 253 2 357 3 376 1 192 1 141 1 378 1 274 1 24 1 143 1 69 1 196 1 197 1 
1 1 3 3 339 1 150 1 222 1 100 1 37 1 82 1 55 2 203 1 154 1 284 1 314 1 103 1 344 1 160 2 87 1 208 2 135 2 297 1 299 1 91 3 325 2 21 1 327 1 141 2 24 1 274 1 
27 1 88 1 279 1 79 1 82 1 224 1 141 1 103 1 274 1 24 1 143 1 129 1 292 1 
27 1 108 1 88 1 351 1 16 2 270 1 230 1 54 1 100 1 82 1 141 1 274 1 24 1 143 1 40 1 129 1 197 1 130 2 
27 1 88 1 79 1 309 1 82 1 271 1 9 1 141 1 274 1 24 1 143 2 73 1 129 1 
321 1 16 1 173 1 273 1 231 1 107 1 290 1 197 1 130 1 
46 1 122 1 107 1 
108 1 202 1 231 1 107 1 290 1 
13 1 108 1 349 1 77 1 15 1 3 2 299 1 91 2 150 1 122 1 37 1 46 1 21 1 202 2 231 2 107 1 206 1 290 2 186 1 
282 1 22 1 236 1 121 1 200 1 71 1 19 1 310 1 
86 1 293 1 236 4 121 1 19 1 191 2 310 2 282 4 22 3 126 1 71 2 170 1 258 1 247 1 
236 2 200 1 121 1 190 1 19 1 191 1 310 1 282 2 22 1 71 1 84 1 59 1 
86 1 236 3 200 1 121 1 98 1 19 1 310 1 282 3 22 1 71 1 170 2 247 2 
22 2 296 1 90 1 364 2 
282 1 171 1 236 1 121 1 200 1 19 1 
282 2 22 1 236 2 121 1 200 1 71 1 264 1 19 1 191 1 310 1 
124 1 
282 1 22 1 236 1 121 1 200 1 71 1 19 1 310 1 
22 1 31 1 71 1 310 1 
282 1 22 1 236 1 121 1 71 1 19 1 310 1 
282 1 7 1 20 1 
86 1 236 3 200 1 121 1 19 1 310 1 282 3 22 1 71 1 170 1 213 1 247 2 
282 2 22 1 236 2 182 1 121 1 71 1 19 1 191 1 310 1 
282 1 22 1 209 1 23 1 236 1 121 1 200 1 374 1 337 1 19 1 258 1 
282 1 22 1 236 1 121 1 200 1 19 1 310 1 
282 1 236 1 121 1 200 1 71 1 19 1 310 2 
282 2 22 1 101 1 236 2 121 2 200 1 36 1 19 2 310 1 58 1 
282 3 22 2 293 1 236 3 52 1 121 1 200 1 71 1 264 1 19 1 258 1 191 2 310 1 
350 1 209 2 28 1 198 1 236 2 200 1 121 1 374 1 19 1 191 1 310 1 282 2 22 1 23 1 71 1 
282 4 22 2 293 1 83 1 236 4 182 1 121 2 200 1 71 1 19 2 258 1 191 2 310 1 
236 3 200 1 121 1 264 1 19 1 191 1 310 1 282 3 22 1 71 1 247 1 
22 1 293 1 126 1 258 1 
22 1 310 1 

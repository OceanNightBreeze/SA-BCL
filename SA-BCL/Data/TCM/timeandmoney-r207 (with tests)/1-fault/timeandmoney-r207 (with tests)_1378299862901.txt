#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 (259,341) 258 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 286 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 (259,341) 258 135 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 183 193 266 (277,330) 13 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 274 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 183 193 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 183 193 198 308 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 183 175 95 (238,314) (150,344) (150,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 183 175 95 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 183 175 95 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 286 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 (259,341) (259,341) (14,26) 31 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 (259,341) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 183 193 266 (277,330) 13 113 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 (259,341) (259,341) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 183 219 71 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 183 175 95 (238,314) (238,314) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 183 175 95 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 183 193 198 278 176 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 (259,341) 258 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 183 175 95 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 183 193 231 323 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 183 219 71 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 183 219 307 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 183 219 118 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 274 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 183 193 266 (277,330) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 187 (277,330) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 187 (11,153) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 183 193 198 361 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 183 193 266 (11,153) 250 (259,341) (259,341) (14,26) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 187 (11,153) 58 224 (14,26) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 183 193 198 278 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 183 193 266 (277,330) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 183 193 198 361 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
192 2 21 2 343 3 124 1 83 1 84 1 229 1 155 1 41 2 30 1 179 1 172 1 73 3 
21 5 343 9 134 2 319 1 83 6 84 3 296 1 229 1 139 1 69 1 30 4 144 1 145 1 172 2 149 1 73 9 192 2 56 1 333 2 124 1 178 2 155 1 41 2 42 2 156 1 179 1 340 1 44 1 
21 5 343 9 134 2 319 1 83 6 84 3 296 1 229 1 139 1 69 1 30 4 144 1 145 1 172 2 149 1 73 9 192 2 56 1 333 2 124 1 178 2 155 1 41 2 42 2 156 1 179 1 340 1 44 1 
21 6 343 10 134 2 319 1 83 7 84 4 296 1 229 1 139 1 69 1 30 5 144 1 145 1 172 2 149 1 73 10 192 2 56 1 333 2 124 1 178 2 155 1 41 2 42 2 156 1 179 1 340 1 44 1 
21 4 343 7 134 2 319 1 83 4 84 2 296 1 229 1 139 1 69 1 30 3 144 1 145 1 172 2 149 1 73 7 192 2 56 1 333 2 124 1 178 2 155 1 41 2 42 1 156 1 179 1 44 1 
192 1 21 3 343 4 333 1 124 1 134 1 83 3 84 1 178 1 155 1 69 1 41 1 42 2 30 2 179 1 340 1 73 4 44 1 
192 1 272 1 21 1 56 1 343 2 333 1 124 1 358 1 102 1 178 1 155 1 41 1 179 1 172 1 73 2 149 1 
21 5 343 9 134 1 83 7 84 3 296 1 229 1 69 1 30 4 145 1 172 1 73 9 192 2 333 1 124 1 178 1 155 1 41 2 42 2 200 1 179 1 162 1 44 1 340 1 
21 5 343 9 134 1 83 7 84 3 296 1 229 1 69 1 30 4 145 1 172 1 73 9 192 2 333 1 124 1 178 1 155 1 41 2 42 2 200 1 179 1 162 1 44 1 340 1 
288 1 92 1 237 1 45 1 356 1 331 1 252 1 261 1 240 1 125 1 85 1 255 1 268 1 43 1 
284 1 
23 1 261 2 252 1 284 1 125 2 338 1 248 1 285 1 
1 2 62 1 252 2 261 5 292 1 220 1 280 1 125 5 273 1 228 2 127 1 177 1 16 2 282 1 284 1 148 1 338 2 248 1 285 1 
284 1 274 1 248 1 
4 2 284 1 75 1 
288 2 92 2 268 2 331 2 356 2 45 2 237 1 320 1 
288 1 341 1 183 1 45 1 251 1 250 1 294 1 227 1 115 1 233 2 328 1 258 1 121 2 92 1 193 1 151 1 11 1 331 1 356 1 237 1 99 2 266 1 268 1 
288 1 85 1 92 1 255 1 268 1 331 1 356 1 45 1 237 1 240 1 
354 1 45 1 356 1 331 1 261 1 262 1 125 1 255 1 28 1 170 1 284 1 260 1 351 1 248 1 
288 1 92 1 45 1 356 1 331 1 261 2 125 2 262 1 268 1 255 1 170 1 284 1 260 1 351 1 248 1 
18 1 261 1 252 1 125 1 338 1 
20 1 261 2 252 1 284 1 125 2 338 1 248 1 285 1 
261 1 125 1 338 1 
288 1 92 1 3 1 45 2 356 2 331 2 320 2 268 1 33 1 
55 1 208 1 67 1 
121 1 183 1 266 1 193 1 151 1 11 1 233 1 250 1 294 1 99 1 227 1 286 1 
320 1 274 1 
288 1 121 1 183 1 92 1 193 1 151 1 11 1 45 1 356 1 331 1 250 1 294 1 99 1 227 1 266 1 348 1 233 1 131 1 
288 4 214 1 92 4 354 1 82 1 45 5 356 5 331 5 6 1 320 1 268 1 348 2 131 1 33 1 
288 2 92 2 255 1 331 2 356 2 45 2 32 1 240 1 
288 3 92 3 268 1 348 1 331 3 356 3 45 3 320 1 
288 1 92 1 255 1 331 1 356 1 45 1 240 1 
288 1 92 1 255 1 268 1 3 1 331 1 356 1 45 1 33 1 
341 1 288 3 183 1 45 3 250 1 294 1 135 1 227 1 255 1 348 1 233 1 170 1 258 1 260 1 351 1 33 1 121 1 92 3 193 1 52 1 151 1 11 1 331 3 356 3 237 1 261 1 99 1 262 1 125 1 266 1 268 2 131 1 
288 1 214 1 92 1 354 1 348 1 331 2 356 2 45 2 320 1 
288 3 166 1 92 3 52 1 45 3 356 3 331 3 261 1 125 1 262 1 268 1 255 1 348 2 131 1 170 1 284 1 260 1 351 1 33 1 
288 2 92 2 45 2 356 2 331 2 208 1 67 1 268 1 348 1 33 1 
121 1 183 1 266 1 193 1 151 1 11 1 233 1 250 1 294 1 99 1 227 1 
121 1 183 1 266 1 330 1 193 1 151 1 233 1 13 1 294 1 99 1 227 1 
112 1 2 1 318 1 65 2 208 2 136 1 345 1 67 2 211 4 87 2 143 1 257 1 146 1 171 1 303 1 304 2 94 1 54 1 55 2 221 1 357 1 158 1 163 1 164 1 
288 1 92 1 255 1 331 1 356 1 45 1 32 1 351 1 
217 1 325 1 147 1 
199 1 217 2 325 2 98 1 160 1 154 1 
217 1 325 1 
217 1 325 1 
98 1 160 1 
98 1 160 1 
98 1 160 1 
235 1 217 1 325 1 
235 1 217 1 325 1 
235 1 217 1 325 1 
217 1 325 1 302 1 
217 1 325 1 302 1 
217 1 325 1 302 1 
288 2 45 2 24 1 167 1 320 1 168 1 66 1 299 1 325 1 117 1 147 1 92 2 217 1 279 1 356 2 331 2 261 1 100 1 222 1 125 1 15 1 159 1 244 1 165 1 
217 2 249 1 355 1 261 2 100 2 222 2 125 2 15 1 66 3 7 1 116 1 199 1 140 1 325 2 159 2 310 1 284 1 165 2 287 2 
48 1 178 2 272 1 134 1 270 2 
178 1 333 1 134 1 
178 1 272 1 333 1 
48 1 103 1 178 3 272 1 270 1 134 2 
48 1 19 1 178 2 272 1 270 1 134 1 
1 1 62 2 4 3 318 1 252 4 297 1 228 1 273 3 168 1 186 1 230 1 299 1 349 2 117 1 146 1 119 1 303 1 122 1 261 5 221 1 75 1 280 1 125 5 37 2 16 1 128 2 180 1 79 1 284 2 338 1 285 1 248 1 
1 2 61 1 205 1 62 6 4 9 290 1 292 1 318 3 252 7 226 1 168 4 228 2 273 8 230 2 49 1 349 6 146 3 303 3 173 1 152 5 122 3 261 9 221 3 75 3 125 9 280 1 16 2 128 6 18 5 180 1 79 2 284 5 338 6 248 1 285 1 
1 1 62 2 4 4 252 2 292 1 318 1 228 1 273 3 168 1 186 1 230 1 349 2 146 1 119 1 303 1 122 1 261 3 221 1 75 2 125 3 37 1 16 1 128 2 79 1 284 3 248 1 
1 1 62 4 4 7 290 1 292 1 252 3 318 2 228 1 273 5 168 2 186 1 230 1 49 1 349 4 146 2 119 1 303 2 173 1 122 2 261 4 221 2 75 3 125 4 37 2 16 1 128 4 79 1 284 4 248 1 
36 1 
120 1 274 1 
187 1 
183 1 193 1 
263 1 
183 1 
198 1 183 1 308 1 193 1 
342 1 60 1 353 1 80 1 289 1 35 2 318 1 114 1 357 2 211 7 87 3 223 1 212 1 336 1 283 1 146 1 171 3 304 4 
342 2 0 1 60 2 112 1 80 2 289 1 317 1 65 2 318 4 114 2 137 1 211 31 87 15 27 4 212 1 257 1 171 10 146 4 303 3 304 16 90 1 91 1 352 3 353 1 54 1 332 1 35 3 122 3 221 3 357 5 223 5 336 1 164 1 339 1 
0 1 342 1 60 1 112 2 80 1 315 1 289 1 318 1 65 4 114 1 211 9 87 4 257 2 146 1 171 4 304 5 353 1 54 2 35 2 196 1 357 3 223 1 336 1 164 2 
342 1 60 1 80 1 353 1 289 1 35 2 318 1 114 1 357 2 211 7 87 3 223 1 212 1 336 1 146 1 171 3 304 4 
342 1 60 1 80 1 353 1 289 1 35 2 318 1 114 1 357 2 211 7 87 3 223 1 212 1 336 1 146 1 171 3 304 4 
121 1 183 1 215 1 192 1 150 1 95 1 151 1 81 2 238 1 97 1 343 1 344 1 99 1 175 1 46 2 264 2 41 1 233 1 172 2 73 1 
272 1 81 1 343 1 294 1 134 1 227 1 46 1 276 1 88 1 233 1 172 1 73 1 121 1 9 1 192 1 53 1 333 1 99 1 124 1 264 1 103 1 178 2 41 1 363 1 271 1 337 1 
272 1 81 1 21 1 343 2 294 1 134 1 83 1 227 1 46 1 276 1 88 1 233 1 172 1 73 2 121 1 9 1 192 1 53 1 333 1 99 1 124 1 264 1 359 1 103 1 178 2 155 1 41 1 363 1 179 1 337 1 
272 1 81 1 21 1 343 3 294 1 134 1 83 2 227 1 46 1 88 1 233 1 172 1 89 1 73 3 121 1 9 1 215 1 192 1 53 1 333 1 99 1 264 1 103 1 178 2 155 1 41 1 363 1 179 1 271 1 337 1 
272 1 81 1 21 1 343 2 294 1 134 1 83 2 227 1 46 1 233 1 172 1 89 1 73 2 121 1 9 1 99 1 333 1 264 1 103 1 178 2 155 1 363 1 179 1 271 1 337 1 
253 1 
1 1 121 2 183 1 95 1 151 2 62 1 261 2 99 2 175 1 185 1 57 1 125 2 280 1 273 1 228 1 230 1 16 1 233 2 201 1 338 2 285 1 
45 1 291 1 23 1 255 1 28 1 232 1 169 2 170 1 260 1 351 1 354 1 331 1 356 1 261 3 125 3 262 1 105 1 17 1 364 1 245 1 338 2 285 1 
354 1 45 1 356 1 331 1 23 1 291 1 261 3 262 1 125 3 255 1 105 1 169 3 232 1 28 1 17 1 107 1 364 1 170 1 284 1 351 1 260 1 338 1 285 1 248 1 
45 1 23 1 291 1 255 1 28 1 232 1 169 3 170 1 260 1 351 1 354 1 331 1 356 1 261 3 125 3 262 1 360 1 105 1 17 1 364 1 107 1 245 1 284 1 338 2 285 1 248 1 
1 1 45 1 184 2 228 1 273 1 232 1 329 2 191 1 331 1 280 1 16 1 105 1 17 1 107 4 335 1 243 1 245 4 246 1 284 5 338 7 285 3 248 5 62 1 23 1 291 1 25 1 255 1 169 6 28 1 170 1 351 1 260 1 216 2 305 2 354 1 356 1 261 5 262 1 125 5 75 2 360 4 267 1 364 1 365 1 
1 1 45 1 4 2 184 2 228 1 273 1 232 1 329 2 191 1 331 1 280 1 16 1 105 1 241 1 17 1 107 2 245 2 284 2 338 4 285 2 248 1 62 1 291 1 255 1 169 4 28 1 170 1 351 1 260 1 216 2 305 2 354 1 356 1 261 4 262 1 125 4 75 2 267 1 360 2 364 1 
1 1 62 1 184 2 45 1 291 1 273 1 228 1 25 1 255 1 28 1 232 1 169 4 170 1 329 2 260 1 351 1 216 2 305 2 191 1 354 1 331 1 356 1 261 4 75 2 125 4 262 1 280 1 16 1 360 2 267 1 105 1 17 1 107 2 335 1 364 1 245 2 246 1 284 1 338 4 248 1 285 2 
1 1 62 1 184 2 45 1 291 1 273 1 228 1 25 1 255 1 28 1 232 1 169 4 170 1 329 2 260 1 351 1 216 2 305 2 191 1 354 1 331 1 356 1 261 4 75 2 125 4 262 1 280 1 16 1 360 2 267 1 105 1 17 1 107 2 335 1 364 1 245 2 246 1 284 1 338 4 248 1 285 2 
1 1 206 2 62 1 4 2 45 1 291 1 273 1 228 1 346 1 255 1 28 1 232 1 169 4 326 2 327 1 170 1 260 1 351 1 216 2 305 2 74 1 354 1 331 1 356 1 261 4 125 4 262 1 280 1 16 1 360 2 267 1 105 1 17 1 107 2 335 1 364 1 245 2 284 1 338 4 248 1 285 2 
1 1 62 1 184 2 45 1 291 1 273 1 228 1 25 1 255 1 28 1 232 1 169 5 170 1 329 2 260 1 351 1 216 2 305 2 191 1 354 1 331 1 356 1 261 4 75 2 280 1 125 4 262 1 16 1 267 1 360 3 105 1 17 1 335 1 364 1 107 3 246 1 245 3 284 1 365 1 338 5 248 1 285 2 
1 1 62 1 184 2 45 1 291 1 273 1 228 1 25 1 255 1 28 1 232 1 169 5 170 1 329 2 260 1 351 1 216 2 305 2 191 1 354 1 331 1 356 1 261 4 75 2 280 1 125 4 262 1 16 1 267 1 360 3 105 1 17 1 335 1 364 1 107 3 246 1 245 3 284 1 365 1 338 5 248 1 285 2 
1 1 206 2 62 1 4 2 45 1 291 1 273 1 228 1 346 1 255 1 28 1 232 1 169 4 326 2 170 1 260 1 351 1 216 2 305 2 354 1 356 1 331 1 261 4 280 1 125 4 262 1 16 1 360 2 267 1 105 1 241 1 17 1 107 2 364 1 245 2 284 1 338 4 248 1 285 2 
121 2 183 1 2 1 112 1 95 1 151 1 306 1 54 1 65 2 99 2 175 1 115 1 76 1 211 2 86 1 87 1 158 1 233 2 188 1 257 1 164 1 304 1 
288 1 112 1 2 1 45 1 65 2 318 1 208 1 67 1 211 3 87 2 257 1 171 1 146 1 303 1 304 1 33 1 92 1 93 1 55 1 54 1 356 1 331 1 122 1 221 1 357 1 268 1 158 1 108 1 164 1 
342 1 94 1 2 1 112 1 353 1 289 1 55 1 54 1 35 1 318 1 65 2 208 1 114 1 320 2 357 2 274 1 67 1 211 6 87 3 158 1 336 1 257 1 146 1 171 2 164 1 304 3 
112 2 2 1 317 1 65 4 318 2 208 11 320 1 68 1 67 4 254 1 211 14 301 1 87 6 27 3 257 2 171 2 146 1 303 1 304 8 90 1 352 3 306 1 54 2 55 11 122 2 221 2 357 1 76 1 223 1 158 2 108 1 78 1 164 2 
288 1 183 1 112 1 2 1 45 1 250 1 65 2 294 1 295 1 227 1 67 1 211 2 87 1 348 1 233 1 257 1 350 1 304 1 121 1 92 1 10 1 193 1 151 1 11 1 306 1 331 1 356 1 54 1 99 1 266 1 76 1 158 1 131 1 108 1 164 1 286 1 
341 1 288 1 183 1 112 1 2 1 45 1 250 1 65 2 294 1 227 1 211 1 87 1 348 1 233 1 31 1 257 1 259 1 121 1 92 1 193 1 151 1 11 1 331 1 356 1 54 1 99 1 14 1 266 1 76 1 158 1 131 1 108 1 164 1 
94 1 2 1 112 1 55 1 54 1 65 2 318 1 208 1 221 1 67 1 211 2 223 1 158 1 257 1 171 1 163 1 164 1 304 2 
94 1 2 1 112 1 55 1 54 1 65 2 208 1 345 1 357 1 67 1 211 2 87 2 158 1 257 1 171 1 146 1 164 1 303 1 
112 1 2 1 318 1 65 2 208 2 67 2 211 4 87 2 257 1 171 2 146 1 303 1 304 2 94 1 54 1 55 2 122 1 221 1 357 1 223 1 158 1 164 1 
2 1 112 1 55 1 54 1 65 2 318 1 208 1 221 1 67 1 211 2 223 1 158 1 188 1 257 1 171 1 163 1 164 1 304 2 
2 1 112 1 55 1 54 1 65 2 208 1 345 1 357 1 67 1 211 2 87 2 158 1 188 1 257 1 171 1 146 1 164 1 303 1 
112 1 2 1 318 1 65 2 208 2 67 2 211 4 87 2 188 1 257 1 171 2 146 1 303 1 304 2 54 1 55 2 122 1 221 1 357 1 223 1 158 1 164 1 
2 1 112 1 55 2 54 1 122 1 65 2 318 1 208 2 221 1 357 1 67 2 211 4 87 2 223 1 158 1 257 1 146 1 171 2 303 1 164 1 304 2 
341 1 121 1 183 1 266 1 193 1 151 1 11 1 233 1 250 1 294 1 99 1 227 1 
121 1 183 1 266 1 330 1 193 1 151 1 113 1 233 1 13 1 294 1 99 1 227 1 
112 1 2 1 318 1 65 2 208 2 67 2 211 4 87 2 257 1 171 2 146 1 303 1 304 2 54 1 55 2 122 1 221 1 357 1 223 1 158 1 108 1 164 1 
121 1 341 1 183 1 193 1 11 1 250 1 99 1 294 1 227 1 266 1 359 1 233 1 259 1 
288 1 112 1 2 1 45 1 65 2 318 1 208 1 67 1 211 3 87 1 257 1 146 1 171 1 303 1 304 2 33 1 92 1 218 1 54 1 356 1 331 1 55 1 122 1 221 1 268 1 223 1 158 1 108 1 164 1 
112 2 317 1 65 4 318 3 47 1 322 1 211 19 27 2 87 10 257 2 72 2 171 6 146 3 303 3 8 1 304 9 90 1 352 1 54 2 122 3 196 1 334 1 221 3 357 3 265 1 223 3 161 1 164 2 181 2 247 1 
0 2 112 3 317 2 65 6 318 3 47 2 322 2 211 26 70 1 87 12 27 2 257 3 72 4 213 1 171 4 146 2 303 2 8 1 304 14 352 2 54 3 194 1 122 3 196 1 334 1 221 3 357 2 223 2 106 1 157 1 164 3 181 1 247 1 132 1 
342 1 0 1 112 3 289 1 317 3 65 6 318 5 114 1 47 1 322 2 211 41 70 1 27 4 87 21 257 3 213 1 72 4 171 8 146 5 303 4 8 1 304 20 90 1 352 3 353 1 54 3 194 1 12 1 35 1 122 4 196 1 334 1 221 4 357 4 106 1 223 4 157 1 336 1 161 1 164 3 181 1 247 1 132 1 
342 1 0 2 112 4 289 1 317 3 65 8 318 5 114 1 47 1 322 2 211 38 70 1 27 4 87 18 257 4 213 1 72 4 171 7 146 4 303 3 8 1 304 20 90 1 352 3 353 1 54 4 194 1 12 1 35 1 122 4 196 1 334 1 221 4 357 4 106 1 223 3 157 1 336 1 161 1 164 4 181 1 247 1 132 1 
342 1 0 1 112 2 289 1 317 2 65 4 318 8 114 1 68 2 47 1 322 1 211 52 70 1 27 4 87 25 257 2 213 1 72 4 171 14 146 8 303 7 8 1 304 27 90 2 352 4 353 1 54 2 194 1 35 1 122 7 196 1 334 1 221 7 357 7 106 1 223 7 157 1 336 1 164 2 181 1 247 1 132 1 
138 1 116 1 199 1 217 1 249 1 325 1 159 1 100 1 222 1 165 1 
147 1 244 1 
104 1 309 1 217 1 325 1 159 1 100 1 222 1 38 1 165 1 
235 1 313 1 
210 1 154 1 302 1 
217 1 249 1 355 1 261 1 100 1 222 1 125 1 15 1 66 2 116 1 199 1 140 1 325 1 159 1 310 1 284 1 165 1 287 1 
217 1 249 1 355 1 261 1 100 1 222 1 125 1 15 1 66 2 116 1 199 1 140 1 325 1 159 1 310 1 284 1 165 1 287 1 
217 1 249 1 355 1 261 1 100 1 222 1 125 1 15 1 66 2 116 1 199 1 140 1 325 1 159 1 310 1 284 1 165 1 287 1 
235 1 313 1 154 1 
235 1 313 1 154 1 
210 1 302 1 
210 1 154 1 302 1 
279 1 167 1 
288 2 45 2 24 1 252 1 167 1 320 1 168 1 66 1 321 1 299 1 140 1 325 1 117 1 147 1 92 2 217 1 279 1 331 2 356 2 261 1 100 1 222 1 125 1 159 1 244 1 165 1 287 1 
110 1 183 1 2 1 112 1 45 2 64 1 65 2 115 2 86 1 211 2 87 1 71 1 233 2 257 1 304 1 121 2 236 1 219 1 306 1 331 2 356 2 54 1 99 2 101 1 76 1 158 1 108 1 164 1 
281 1 121 1 183 1 95 1 314 1 151 1 81 1 233 1 238 1 99 1 175 1 
121 1 272 1 81 1 333 1 294 1 99 1 174 1 134 1 227 1 281 1 40 1 103 1 178 2 363 1 88 1 233 1 271 1 337 1 
121 2 272 1 81 1 333 1 294 1 99 2 174 1 134 1 227 1 281 1 40 1 103 1 359 1 178 2 363 1 88 1 233 2 271 1 337 1 
121 1 272 1 81 1 333 1 99 1 294 1 134 1 227 1 40 1 103 1 178 2 362 1 363 1 88 1 233 1 271 1 337 1 
190 1 
1 1 62 1 280 1 228 1 273 1 16 1 282 1 148 1 284 1 248 1 
62 5 4 10 122 2 318 2 221 2 75 5 273 5 298 1 128 5 324 1 349 5 146 2 51 2 284 5 303 2 
261 1 284 1 125 1 338 1 248 1 285 1 
121 2 1 1 183 1 95 1 151 2 62 1 261 1 63 1 99 2 175 1 125 1 185 1 280 1 57 1 273 1 228 1 230 1 16 1 233 2 201 1 338 2 285 1 
282 1 62 1 284 1 148 1 273 1 274 1 248 1 
1 1 62 1 4 1 184 1 273 1 228 1 329 1 191 1 261 1 75 1 280 1 125 1 16 1 284 2 338 1 285 1 248 1 
198 1 121 1 16 1 1 1 183 1 193 1 151 1 233 1 278 1 99 1 280 1 228 1 176 1 
1 2 62 5 4 6 317 1 318 2 293 1 185 1 273 8 228 2 230 1 324 1 27 1 349 5 213 1 146 2 51 2 303 2 352 1 194 1 122 2 261 1 221 2 125 1 280 2 75 3 16 2 128 5 106 1 157 1 284 5 338 1 311 1 285 1 132 1 248 2 
342 1 1 1 288 1 62 2 45 1 318 2 114 1 228 1 273 2 85 1 255 1 324 1 146 1 51 2 92 1 331 1 356 1 237 1 261 1 240 1 280 1 125 1 16 1 268 1 130 1 336 1 246 1 43 1 
341 1 288 1 121 1 183 1 92 1 193 1 151 1 11 1 237 1 45 1 356 1 331 1 250 1 294 1 99 1 227 1 266 1 268 1 233 1 258 1 
1 1 62 2 4 4 35 1 75 2 280 1 185 1 228 1 273 1 16 1 230 1 128 2 349 2 284 4 248 2 
116 1 279 1 50 1 159 1 222 1 
203 1 159 1 222 1 
203 1 159 1 222 1 
203 1 159 1 222 1 
204 1 159 1 222 1 
204 1 159 1 222 1 
204 1 159 1 222 1 
159 1 222 1 
217 1 325 1 
342 2 112 1 54 1 65 2 196 1 318 2 114 2 357 3 211 10 130 1 223 2 87 5 257 1 336 1 171 5 146 2 164 1 304 5 
112 1 54 1 196 1 65 2 318 1 221 1 211 2 223 1 257 1 171 1 164 1 304 2 
112 1 54 1 122 1 196 1 65 2 318 1 221 1 357 1 211 4 87 2 223 1 257 1 146 1 171 2 303 1 164 1 304 2 
0 1 342 1 112 3 54 3 207 1 196 1 65 6 114 1 357 1 211 3 87 2 223 1 257 3 161 1 171 2 164 3 304 1 
342 3 0 2 111 1 112 5 289 1 317 1 207 1 65 10 318 5 114 3 137 1 211 34 87 18 27 4 257 5 171 12 146 5 303 3 304 16 90 1 91 1 352 3 353 1 332 1 54 5 35 1 122 3 196 1 221 3 357 7 223 5 336 2 161 1 164 5 
342 1 112 1 289 1 317 1 318 1 65 2 114 1 211 8 87 4 27 1 257 1 146 1 171 2 304 4 352 1 353 1 54 1 35 1 196 1 357 2 336 1 164 1 132 1 
342 1 111 1 112 2 289 1 317 1 65 4 318 2 114 1 211 11 87 5 27 2 257 2 146 1 171 3 304 6 90 1 352 1 353 1 54 2 35 1 122 1 196 1 221 1 357 2 223 1 336 1 164 2 132 1 
342 1 0 1 111 1 112 3 289 1 317 1 65 6 318 3 114 1 211 19 87 10 27 1 257 3 213 1 146 3 171 4 303 2 304 9 352 1 353 1 54 3 194 1 35 1 122 2 196 1 221 2 357 3 223 1 106 1 157 1 336 1 164 3 132 1 
342 1 0 1 111 1 112 3 289 1 317 1 65 6 318 3 114 1 211 17 87 7 27 1 257 3 213 1 146 2 171 5 303 1 304 10 352 1 353 1 54 3 194 1 35 1 122 2 196 1 221 2 357 3 223 2 106 1 157 1 336 1 164 3 132 1 
342 1 112 1 289 1 317 1 318 1 65 2 114 1 211 8 87 4 27 1 257 1 146 1 171 2 304 4 352 1 353 1 54 1 35 1 196 1 357 2 336 1 164 1 132 1 
112 1 317 1 65 2 318 2 211 12 87 6 27 1 257 1 213 1 146 2 171 2 303 2 304 6 352 1 54 1 194 1 122 2 196 1 221 2 357 1 223 1 106 1 157 1 164 1 132 1 
342 1 0 2 111 1 112 4 289 1 317 1 65 8 318 3 114 1 211 18 87 8 27 1 257 4 213 1 146 2 171 5 303 1 304 10 352 1 353 1 54 4 194 1 35 1 122 2 196 1 221 2 357 3 223 2 106 1 157 1 336 1 164 4 132 1 
0 2 112 4 317 1 65 8 318 3 211 16 87 7 27 1 257 4 213 1 146 2 171 6 303 2 304 9 352 1 54 4 194 1 122 3 196 1 221 3 357 3 223 3 106 1 157 1 161 1 164 4 132 1 
342 3 353 2 289 1 318 1 114 3 357 3 211 7 87 4 223 3 336 1 146 1 171 6 304 3 
342 1 0 2 112 4 289 1 317 1 65 8 318 3 114 1 211 18 87 8 27 1 257 4 213 1 146 2 171 4 303 1 304 10 352 1 353 1 54 4 194 1 35 1 122 2 196 1 221 2 357 3 223 1 106 1 157 1 336 1 161 1 164 4 132 1 
0 1 342 1 112 2 353 1 289 1 54 2 35 1 318 1 65 4 114 1 357 2 211 8 87 4 223 1 336 1 257 2 146 1 171 3 164 2 304 4 
342 1 353 1 289 1 35 1 318 1 114 1 274 1 357 2 211 6 87 3 336 1 171 2 146 1 304 3 
111 1 112 1 54 1 122 1 65 2 318 1 221 1 357 1 211 4 87 2 223 1 257 1 146 1 171 2 303 1 164 1 304 2 
352 1 317 1 122 1 318 1 221 1 357 1 211 7 27 2 87 4 223 1 146 1 171 2 303 1 304 3 90 1 
342 2 0 2 112 2 289 1 207 1 318 3 65 4 114 2 68 1 211 23 301 1 87 12 27 2 257 2 171 9 146 3 303 2 304 11 90 1 352 2 353 1 54 2 35 1 122 2 221 2 357 5 223 4 336 1 164 2 
211 1 87 1 27 1 
211 1 352 1 304 1 
111 1 112 1 54 1 122 1 65 2 318 1 221 1 357 2 298 1 211 6 87 3 223 1 257 1 171 3 146 1 164 1 303 1 304 3 
112 1 317 1 65 2 318 2 211 12 87 6 27 1 257 1 213 1 146 2 171 2 303 2 304 6 352 1 54 1 194 1 122 2 196 1 221 2 357 1 223 1 106 1 157 1 164 1 132 1 
342 1 318 1 114 1 357 1 211 6 87 3 223 1 336 1 146 1 171 2 304 3 
342 1 0 1 112 1 353 1 289 1 54 1 207 1 65 2 114 1 357 1 211 3 223 1 87 2 257 1 171 2 164 1 304 1 
214 1 300 1 354 1 331 1 356 1 45 1 320 1 
312 1 214 1 96 1 354 1 45 1 356 1 331 1 5 1 320 1 126 1 300 1 202 1 
121 2 183 1 359 1 95 1 151 1 233 2 99 2 175 1 
121 1 183 1 231 1 193 1 323 1 233 1 99 1 59 1 
121 1 178 1 272 1 151 1 233 1 333 1 294 1 99 1 227 1 337 1 
121 2 183 1 359 1 219 1 71 1 233 2 99 2 271 1 
121 2 183 1 359 1 219 1 151 1 233 2 99 2 307 1 
121 2 183 1 359 1 219 1 151 1 233 2 118 1 99 2 
121 1 183 1 95 1 151 1 233 1 99 1 175 1 274 1 
288 1 121 1 183 1 92 1 193 1 151 1 11 1 45 1 356 1 331 1 294 1 99 1 227 1 266 1 348 1 233 1 
288 1 121 1 183 1 92 1 193 1 11 1 45 1 356 1 331 1 294 1 99 1 227 1 266 1 141 1 348 1 233 1 
288 1 121 1 183 1 92 1 330 1 193 1 45 1 356 1 331 1 294 1 99 1 227 1 266 1 141 1 348 1 233 1 
121 1 141 1 233 1 187 1 277 1 261 1 99 1 125 1 
121 1 141 1 233 1 187 1 153 1 261 1 99 1 125 1 
121 1 233 1 294 1 99 1 109 1 227 1 
198 1 121 1 183 1 193 1 361 1 151 1 233 1 99 1 
110 1 288 1 341 1 183 1 112 1 2 1 45 1 250 1 65 2 294 1 227 1 348 1 233 1 257 1 259 1 121 1 92 1 193 1 11 1 331 1 356 1 54 1 99 1 14 1 266 1 359 1 158 1 108 1 164 1 
1 1 121 1 151 1 153 1 252 1 261 1 63 1 99 1 125 1 280 1 228 1 58 1 16 1 26 1 233 1 187 1 224 1 
198 1 121 1 183 1 193 1 233 1 278 1 99 1 109 1 
288 1 121 1 183 1 92 1 330 1 193 1 151 1 45 1 356 1 331 1 294 1 99 1 227 1 266 1 348 1 233 1 
198 1 121 1 183 1 193 1 361 1 141 1 233 1 99 1 
236 1 45 1 356 1 331 1 64 1 197 1 101 1 209 1 275 1 
22 1 225 1 209 1 
275 1 123 1 320 1 197 1 209 1 
52 1 22 1 252 1 261 2 123 2 262 1 125 2 320 1 209 1 197 2 275 2 255 1 347 1 170 1 284 1 351 1 260 1 248 1 225 1 
192 1 155 1 41 1 21 1 179 1 343 1 124 1 73 1 
182 1 192 1 316 1 21 3 56 1 343 4 83 2 39 1 84 1 155 2 41 1 30 1 179 2 73 4 
192 1 21 1 343 2 124 1 83 1 269 1 155 1 41 1 234 1 162 1 179 1 73 2 
182 1 192 1 21 1 343 3 56 2 124 1 39 2 155 1 41 1 256 1 179 1 73 3 
242 1 133 1 21 2 77 2 
192 1 129 1 41 1 343 1 124 1 73 1 
192 1 155 1 41 1 21 1 145 1 179 1 343 2 124 1 83 1 73 2 
195 1 
192 1 155 1 41 1 21 1 179 1 343 1 124 1 73 1 
155 1 21 1 179 1 274 1 
192 1 155 1 41 1 21 1 179 1 343 1 73 1 
172 1 46 1 73 1 
182 1 192 1 21 1 343 3 56 2 124 1 39 1 155 1 41 1 29 1 179 1 73 3 
192 1 155 1 42 1 41 1 21 1 179 1 343 2 83 1 73 2 
192 1 21 1 343 1 333 1 124 1 134 1 178 1 41 1 30 1 73 1 44 1 
192 1 155 1 41 1 21 1 343 1 124 1 73 1 
192 1 155 2 41 1 179 1 343 1 124 1 73 1 
34 1 192 2 21 1 343 2 124 1 155 1 41 2 142 1 189 1 73 2 
192 1 21 2 343 3 124 1 83 2 296 1 84 1 155 1 41 1 30 1 145 1 179 1 73 3 
192 1 272 1 21 1 343 2 239 1 333 1 124 1 134 1 83 1 103 1 178 2 155 1 41 1 179 1 73 2 
192 2 21 2 343 4 124 1 83 2 84 1 155 1 41 2 42 1 30 1 179 1 73 4 340 1 
192 1 155 1 41 1 21 1 145 1 179 1 56 1 343 3 124 1 83 1 73 3 
316 1 21 1 30 1 84 1 
155 1 21 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 2 82 2 332 1 154 1 297 9 210 1 255 1 358 1 129 1 87 1 304 9 240 2 307 3 22 1 242 6 93 2 287 1 72 1 316 2 249 5 46 2 268 2 320 1 269 1 99 4 352 1 353 1 47 1 
49 2 82 2 332 1 154 1 297 9 210 1 255 1 358 1 129 1 87 1 304 9 240 2 307 3 22 1 242 6 93 2 287 1 72 1 316 2 249 5 46 2 320 1 268 2 269 1 99 4 352 1 353 1 47 1 
49 2 82 2 332 1 154 1 297 10 210 1 255 1 358 1 129 1 87 1 304 10 240 2 307 4 22 1 242 7 93 2 287 1 72 1 316 2 249 6 46 2 320 1 268 2 269 1 99 5 352 1 353 1 47 1 
49 2 82 2 332 1 297 7 210 1 255 1 358 1 129 1 87 1 304 7 240 2 307 2 22 1 242 4 93 2 287 1 72 1 316 2 249 4 46 2 320 1 268 1 269 1 99 3 352 1 353 1 47 1 
307 1 242 3 93 1 82 1 154 1 297 4 210 1 316 1 255 1 249 3 46 1 268 2 87 1 269 1 99 2 352 1 240 1 304 4 
49 1 326 1 92 1 82 1 93 1 297 2 210 1 249 1 358 1 98 1 46 1 87 1 352 1 353 1 304 2 240 1 
49 1 307 1 242 1 82 2 297 3 210 1 249 2 46 2 129 1 87 1 99 1 352 1 304 3 
49 1 82 2 154 1 297 9 210 1 255 1 85 1 129 1 87 1 304 9 240 1 307 3 22 1 242 7 93 1 287 1 120 1 316 1 249 5 46 2 268 2 99 4 269 1 352 1 
49 1 82 2 154 1 297 9 210 1 255 1 85 1 129 1 87 1 304 9 240 1 307 3 22 1 242 7 93 1 287 1 120 1 316 1 249 5 46 2 268 2 99 4 269 1 352 1 
274 1 184 1 207 1 
184 1 33 2 239 1 
57 1 292 2 37 2 5 1 71 2 86 2 346 2 266 2 
291 1 292 2 168 1 251 1 355 1 5 1 228 1 230 1 9 1 35 1 172 1 253 1 57 1 127 2 37 2 128 2 86 2 336 1 61 1 41 2 257 1 180 2 67 1 90 1 111 2 69 1 362 1 134 1 71 3 284 1 117 1 346 2 139 1 266 3 203 1 32 1 379 1 
57 1 292 1 37 1 26 1 71 1 86 1 346 1 380 1 266 1 282 1 
274 1 169 1 3 1 245 1 71 1 26 1 330 1 229 1 219 1 266 1 11 1 184 1 86 1 39 1 
274 1 292 1 169 2 3 1 245 1 71 1 26 1 346 1 219 2 266 1 11 1 37 1 184 1 86 1 39 1 
106 1 327 1 169 1 356 1 219 1 
274 1 327 1 169 2 184 1 356 1 64 1 198 1 219 2 
327 1 169 1 219 1 
292 1 169 1 215 1 26 1 71 1 356 1 346 1 219 1 266 1 57 1 37 1 86 1 380 1 282 1 
184 1 
274 1 327 1 169 2 184 1 356 1 198 1 219 2 278 1 
361 1 306 1 274 1 169 5 327 2 329 1 356 2 252 1 348 1 198 1 219 5 27 1 267 2 38 2 184 1 60 1 191 1 213 1 20 2 
5 1 207 1 
288 1 292 1 37 1 319 1 5 2 71 2 86 2 346 1 266 2 
277 1 204 1 165 1 
111 1 69 1 362 1 134 1 5 1 71 1 266 1 35 1 253 1 128 1 146 1 41 1 257 1 32 1 379 1 90 1 
69 1 111 1 292 1 362 1 134 1 71 2 277 1 155 1 35 1 266 2 234 1 253 1 37 1 128 1 86 1 41 1 257 1 32 1 379 1 90 1 
292 3 37 3 5 1 71 3 86 3 346 1 266 3 234 1 
292 1 37 1 26 1 71 1 86 1 380 1 266 1 
288 1 292 1 37 1 319 1 26 1 71 1 86 1 346 1 266 1 
291 1 292 3 168 1 251 1 169 1 3 1 5 1 228 1 230 1 155 1 35 1 172 1 234 1 253 1 57 1 127 1 11 1 37 3 128 1 86 3 336 1 39 1 61 1 41 1 257 1 180 2 90 1 69 1 111 1 362 1 134 1 245 1 71 4 26 1 284 1 346 2 219 1 266 4 220 1 288 1 203 1 32 1 379 1 227 1 
221 1 292 1 37 1 5 1 71 2 86 2 229 1 266 2 234 1 
292 3 169 1 3 1 245 1 26 1 71 3 187 1 155 1 346 1 219 1 266 3 234 2 288 1 11 1 37 3 184 1 86 3 39 1 227 1 
292 2 71 2 277 1 346 1 266 2 234 1 288 1 37 2 86 2 204 1 
111 1 69 1 362 1 134 1 5 1 71 1 266 1 35 1 253 1 128 1 41 1 257 1 32 1 379 1 90 1 
111 1 69 1 362 1 5 1 71 1 331 1 266 1 35 1 253 1 28 1 128 1 41 1 257 1 379 1 90 1 
291 1 53 1 168 2 228 1 277 2 230 1 172 1 254 1 127 4 190 1 336 1 338 1 180 2 67 2 110 1 70 1 96 1 223 1 200 1 350 1 203 1 290 1 204 2 165 2 
292 1 37 1 164 1 26 1 71 1 86 1 39 1 266 1 
292 4 71 5 5 1 229 1 155 1 346 1 266 5 234 2 221 1 288 1 37 4 86 5 377 1 176 1 
292 2 37 2 164 1 26 1 71 2 86 2 380 1 266 2 
84 1 124 1 
84 1 124 1 
58 1 279 1 
58 1 279 1 
58 1 279 1 
84 1 323 1 124 1 
84 1 124 1 232 1 
58 1 84 2 13 1 347 1 124 2 279 1 
84 1 323 1 124 1 
84 1 323 1 124 1 
143 1 84 1 124 1 
143 1 84 1 124 1 
143 1 84 1 124 1 
308 2 169 2 363 1 342 3 7 2 261 1 347 1 219 2 56 1 173 2 84 2 184 1 62 1 185 2 131 1 303 2 124 2 68 1 166 1 
292 2 2 1 169 1 5 1 7 1 232 1 211 1 173 1 37 2 84 1 86 2 341 1 308 1 342 1 363 1 71 2 219 1 266 2 119 1 185 1 321 1 354 1 124 1 102 1 
316 1 93 1 240 1 
98 1 93 1 240 1 
113 1 316 2 260 1 98 1 93 3 340 1 
113 1 316 1 98 1 93 2 179 1 340 1 
113 2 316 1 98 1 93 2 340 1 
274 1 53 1 186 1 327 1 169 5 356 4 33 3 254 1 156 2 36 1 38 1 191 1 338 1 239 1 20 1 306 2 361 3 341 1 159 1 182 2 198 1 219 5 45 2 267 1 200 1 121 1 184 2 321 1 289 1 147 1 354 1 48 1 
274 1 53 3 186 2 327 6 169 9 356 7 33 9 208 1 254 3 156 6 36 3 106 5 38 2 60 1 191 1 177 1 109 1 338 3 360 1 181 1 239 3 20 2 306 6 361 8 341 4 214 5 182 6 219 9 198 1 267 2 200 3 184 5 121 1 147 2 123 1 
274 1 53 1 186 1 169 3 356 2 33 4 254 1 36 1 156 2 38 1 60 1 338 1 239 2 20 1 361 3 306 2 341 1 159 1 182 2 219 3 45 1 267 1 184 3 200 1 289 1 147 1 
274 1 53 2 186 1 169 4 356 3 33 7 254 2 156 4 36 2 38 1 60 1 109 1 338 2 360 1 239 3 181 1 20 1 361 5 306 4 341 2 159 1 182 4 219 4 45 2 267 1 184 4 200 2 289 1 147 1 
207 1 262 1 90 1 
376 1 90 1 
29 1 
379 1 90 1 
253 1 328 1 6 1 262 2 379 1 90 3 
253 1 379 1 90 1 
138 1 90 1 
325 1 168 3 44 1 151 1 70 3 364 1 312 1 96 2 127 7 107 1 200 1 145 1 338 1 237 1 258 1 67 4 158 2 
325 1 168 3 44 1 151 1 70 3 364 1 312 1 96 2 127 7 107 1 200 1 145 1 338 1 237 1 258 1 67 4 158 2 
325 1 168 3 44 1 151 1 70 3 364 1 312 1 104 1 96 2 127 7 107 1 200 1 145 1 338 1 237 1 258 1 67 4 158 2 
168 3 152 1 151 1 228 1 209 1 172 1 127 6 107 1 40 1 336 1 258 2 180 2 67 3 158 1 305 1 44 1 70 2 312 1 248 1 96 1 162 1 372 1 145 1 203 1 
325 1 168 4 153 1 228 2 172 2 127 9 107 1 336 2 338 1 237 1 193 1 258 1 180 4 67 5 158 2 305 1 44 1 70 4 364 1 312 1 96 3 200 1 145 1 203 2 
49 1 82 1 297 2 210 1 128 1 41 1 87 1 63 1 88 1 257 1 240 1 304 2 111 1 69 1 242 1 260 1 93 2 137 1 264 1 369 1 370 1 316 1 249 1 30 1 349 1 98 1 46 1 352 1 80 1 81 1 
49 1 82 1 297 3 210 1 128 1 256 1 41 1 63 1 88 1 257 1 18 1 240 1 304 3 111 1 69 1 242 2 260 1 93 2 137 1 369 1 370 1 316 1 249 1 30 1 98 1 46 1 352 1 101 1 80 1 81 1 
49 1 297 2 210 1 128 1 256 1 41 1 63 1 257 1 304 2 240 1 111 1 69 1 242 2 260 1 93 2 369 1 370 1 316 1 249 1 30 1 98 1 352 1 101 1 80 1 81 1 
49 2 293 1 82 1 297 1 128 1 41 1 63 2 257 1 130 1 18 1 65 1 90 1 304 1 69 1 111 1 112 1 362 1 314 1 369 2 370 2 46 1 122 1 379 1 
49 1 82 1 297 1 128 1 41 1 87 1 63 1 88 1 257 1 240 1 304 1 111 1 69 1 260 1 93 2 137 1 369 1 370 1 316 1 30 1 349 1 98 1 46 1 101 1 80 1 81 1 
15 1 
274 1 186 1 327 6 275 1 3 1 330 1 229 1 54 2 11 1 191 1 16 1 239 2 20 1 112 1 111 2 69 1 245 1 343 1 25 1 71 1 26 1 198 3 76 2 167 1 205 2 169 5 293 1 294 4 33 2 299 1 174 1 128 2 38 1 175 2 86 1 39 1 178 2 41 2 257 1 359 1 259 2 89 1 90 1 306 2 361 2 362 2 365 1 263 2 219 5 266 1 267 1 184 2 375 1 322 1 379 1 
167 1 327 2 169 3 245 1 3 1 26 1 71 1 294 2 330 1 229 1 365 1 263 1 198 1 219 3 278 1 266 1 299 1 11 1 174 1 86 1 39 1 359 1 
167 1 274 1 327 1 169 3 3 1 330 1 294 3 229 1 278 1 299 1 11 1 174 1 86 1 39 1 178 1 359 1 245 1 71 1 26 1 365 1 219 3 198 1 266 1 184 1 
167 1 274 1 169 3 327 2 3 1 330 1 294 3 229 1 278 1 299 1 11 1 174 1 86 1 39 1 178 1 359 1 245 1 71 1 26 1 365 1 263 1 198 1 219 3 266 1 76 1 184 1 
1 1 167 1 274 5 205 2 327 7 169 5 3 1 330 1 294 6 188 1 229 1 54 2 278 1 299 1 11 1 174 1 38 1 175 2 86 1 191 1 39 1 178 4 359 1 259 2 239 2 20 1 306 1 361 1 343 1 245 1 25 1 71 1 26 1 365 1 263 4 140 1 198 3 219 5 266 1 76 4 267 1 78 1 184 5 351 1 
167 1 274 1 205 2 327 4 169 4 3 1 330 1 294 4 229 1 54 2 33 2 299 1 11 1 174 1 38 1 175 2 86 1 191 1 39 1 178 2 359 1 259 2 239 2 20 1 306 1 361 1 245 1 343 1 25 1 71 1 26 1 365 1 263 2 198 2 219 4 266 1 76 2 267 1 184 2 322 1 
167 1 1 1 274 1 205 2 327 4 169 4 3 1 330 1 294 4 188 1 229 1 54 2 299 1 11 1 174 1 38 1 175 2 86 1 39 1 191 1 178 2 359 1 259 2 239 2 20 1 306 1 361 1 343 1 245 1 25 1 71 1 26 1 365 1 263 2 198 2 219 4 140 1 266 1 76 2 267 1 184 1 
167 1 1 1 274 1 205 2 327 4 169 4 3 1 330 1 294 4 188 1 229 1 54 2 299 1 11 1 174 1 38 1 175 2 86 1 39 1 191 1 178 2 359 1 259 2 239 2 20 1 306 1 361 1 343 1 245 1 25 1 71 1 26 1 365 1 263 2 198 2 219 4 140 1 266 1 76 2 267 1 184 1 
167 1 274 1 327 4 169 4 276 2 3 1 330 1 294 4 188 1 229 1 33 2 299 1 11 1 174 1 38 1 175 2 86 1 39 1 191 1 178 2 302 1 359 1 259 2 20 1 361 1 306 1 245 1 25 1 71 1 26 1 365 1 118 1 263 2 367 2 198 2 219 4 266 1 97 1 76 2 267 1 184 1 
1 1 167 1 274 1 205 2 169 4 327 5 3 1 330 1 294 5 188 1 229 1 54 2 299 1 11 1 174 1 38 1 175 2 86 1 191 1 39 1 178 3 359 1 259 2 239 2 20 1 306 1 361 1 343 1 245 1 25 1 71 1 26 1 365 1 263 3 198 2 219 4 140 1 266 1 76 3 267 1 184 1 351 1 
1 1 167 1 274 1 205 2 169 4 327 5 3 1 330 1 294 5 188 1 229 1 54 2 299 1 11 1 174 1 38 1 175 2 86 1 191 1 39 1 178 3 359 1 259 2 239 2 20 1 306 1 361 1 343 1 245 1 25 1 71 1 26 1 365 1 263 3 198 2 219 4 140 1 266 1 76 3 267 1 184 1 351 1 
167 1 274 1 327 4 169 4 276 2 3 1 330 1 294 4 229 1 33 2 299 1 11 1 174 1 38 1 175 2 86 1 191 1 39 1 178 2 359 1 259 2 20 1 361 1 306 1 245 1 25 1 71 1 26 1 365 1 118 1 263 2 367 2 198 2 219 4 266 1 76 2 267 1 184 1 322 1 
291 1 325 1 168 3 70 2 5 2 207 1 228 1 277 1 230 1 364 1 312 1 96 2 172 1 127 6 223 1 200 1 336 1 145 1 338 1 203 1 237 1 204 1 180 2 165 1 67 3 158 1 
50 1 291 2 149 1 168 5 206 1 53 1 5 1 228 2 277 8 230 1 9 1 209 2 172 2 254 2 127 12 36 2 336 2 61 1 338 1 180 4 67 7 241 1 70 1 26 1 310 1 265 1 96 1 162 2 200 2 203 2 324 1 204 2 165 8 
291 1 292 1 168 1 5 1 228 1 230 1 155 1 9 1 35 1 172 1 234 1 253 1 127 2 37 1 128 1 86 1 336 1 41 1 61 1 257 1 238 1 180 2 90 1 67 1 21 1 69 1 111 1 362 1 134 1 71 2 266 2 318 1 146 1 203 1 32 1 204 1 324 1 379 1 
325 1 53 2 5 2 228 3 277 7 230 3 155 1 9 1 234 1 336 3 61 1 157 1 338 3 237 1 67 10 158 1 111 3 69 2 196 1 70 8 344 1 71 3 345 2 200 3 203 3 32 2 204 7 165 7 291 3 292 1 168 10 251 2 171 2 35 2 172 3 253 2 254 2 127 20 36 2 37 1 128 3 86 1 41 3 257 2 180 6 43 2 90 2 362 1 44 4 134 2 364 1 312 1 96 4 266 3 145 1 101 1 324 1 148 2 379 2 
291 2 292 1 168 1 293 1 228 2 103 1 333 1 230 2 9 1 234 1 172 2 127 2 37 1 59 1 128 7 86 1 336 2 41 8 61 1 257 2 66 1 180 4 90 3 67 1 69 2 111 8 112 1 362 2 71 1 264 1 139 2 266 1 74 1 223 1 317 1 100 1 203 2 101 1 379 2 
291 1 292 1 53 1 168 2 228 1 277 1 230 1 34 1 172 1 254 1 36 1 127 3 37 1 86 1 336 1 338 1 180 2 67 1 70 1 71 1 346 1 96 1 266 1 288 1 200 1 203 1 204 1 324 1 165 1 
291 1 44 1 70 1 228 1 277 1 230 1 172 1 254 1 127 2 223 1 200 1 336 1 350 1 203 1 204 1 180 2 165 1 67 2 
291 1 53 1 168 2 70 1 228 1 277 1 230 1 96 1 172 1 127 2 223 1 336 1 203 1 338 1 204 1 290 1 180 2 165 1 
291 1 53 1 168 2 228 1 277 2 230 1 172 1 254 1 36 1 127 4 336 1 338 1 180 2 67 2 44 1 70 2 96 1 223 1 200 1 203 1 204 2 165 2 
291 1 44 1 70 1 228 1 277 1 230 1 172 1 254 1 127 2 200 1 336 1 100 1 350 1 203 1 204 1 180 2 165 1 67 2 
291 1 53 1 168 2 70 1 228 1 277 1 230 1 96 1 172 1 127 2 336 1 100 1 203 1 338 1 204 1 290 1 180 2 165 1 
291 1 53 1 168 2 228 1 277 2 230 1 172 1 254 1 36 1 127 4 336 1 338 1 180 2 67 2 44 1 70 2 96 1 200 1 100 1 203 1 204 2 165 2 
291 1 53 1 168 2 228 1 277 2 230 1 172 1 254 1 127 4 36 1 336 1 338 1 180 2 67 2 44 1 70 2 96 1 200 1 203 1 204 2 165 2 
291 1 168 1 251 1 5 1 228 1 230 1 9 1 35 1 172 1 253 1 127 2 128 1 336 1 41 1 61 1 257 1 180 2 67 1 90 1 69 1 111 1 362 1 134 1 71 1 266 1 203 1 32 1 379 1 
291 1 168 1 5 1 331 1 228 1 230 1 9 1 35 1 172 1 253 1 127 2 128 1 336 1 41 1 61 1 257 1 180 2 67 1 90 1 69 1 111 1 362 1 160 1 71 1 266 1 28 1 203 1 379 1 
291 1 53 1 168 2 228 1 277 2 230 1 172 1 254 1 36 1 127 4 336 1 338 1 180 2 67 2 44 1 70 2 96 1 200 1 203 1 324 1 204 2 165 2 
291 1 168 2 53 1 251 1 228 1 277 2 230 1 35 1 172 1 254 1 253 1 127 4 36 1 128 1 336 1 41 1 338 1 257 1 180 2 67 2 90 1 69 1 111 1 44 1 70 2 134 1 71 1 345 1 264 1 96 1 266 1 200 1 203 1 204 2 32 1 379 1 165 2 
291 1 292 1 168 1 53 1 228 1 277 1 230 1 172 1 254 1 36 1 127 3 37 1 86 1 336 1 338 1 180 2 67 2 44 1 70 1 71 1 346 1 266 1 288 1 142 1 200 1 203 1 324 1 204 1 165 1 
325 1 168 16 53 3 152 2 228 4 126 1 209 2 233 1 172 4 105 1 300 1 254 3 127 33 36 3 336 4 338 4 237 1 17 1 193 1 180 8 194 1 195 1 67 17 158 1 305 2 44 3 70 6 286 1 364 1 312 1 183 1 94 1 246 1 218 3 96 3 162 2 374 1 200 4 145 1 203 4 273 1 
168 12 53 2 152 2 228 3 126 1 233 1 209 2 172 3 105 1 300 1 254 3 127 26 36 3 336 3 338 2 17 2 193 1 180 6 194 1 195 1 67 14 305 2 44 2 70 4 183 1 94 1 218 4 246 1 96 2 162 2 374 2 200 3 271 1 203 3 
325 1 52 1 168 18 53 3 152 3 228 4 126 1 209 3 233 1 172 4 105 1 300 1 254 3 127 37 36 3 336 4 338 4 237 1 17 2 193 1 180 8 194 1 195 1 67 19 158 1 305 2 44 4 70 8 364 1 312 1 183 1 94 1 246 1 218 4 96 4 162 3 374 1 200 4 145 1 271 1 203 4 273 1 
325 1 168 17 53 3 152 2 228 4 126 1 209 2 233 1 172 4 105 1 300 1 254 3 127 35 36 3 336 4 338 4 237 1 17 1 193 1 180 8 194 1 195 1 67 18 158 1 305 2 44 3 70 5 364 1 312 1 183 1 94 1 246 1 218 4 96 2 162 2 374 1 200 4 145 1 271 1 203 4 273 1 
168 14 53 3 152 2 228 3 126 1 209 2 233 1 172 3 105 1 300 1 254 3 127 28 36 3 336 3 338 3 17 1 193 1 180 6 194 1 195 1 67 14 305 2 44 3 70 6 183 1 94 1 246 1 218 4 96 3 162 2 374 1 200 3 271 1 203 3 
173 1 308 1 84 1 7 1 185 1 295 1 347 1 131 1 124 1 68 1 
232 1 119 1 
173 1 308 1 84 1 7 1 309 1 185 1 8 1 366 1 124 1 
308 1 363 1 169 1 342 2 7 1 261 1 347 1 219 1 173 1 84 1 184 1 62 1 185 1 131 1 303 1 124 1 68 1 166 1 
308 1 363 1 169 1 342 2 7 1 261 1 347 1 219 1 173 1 84 1 184 1 62 1 185 1 131 1 303 1 124 1 68 1 166 1 
308 1 363 1 169 1 342 2 7 1 261 1 347 1 219 1 173 1 84 1 184 1 62 1 185 1 131 1 303 1 124 1 68 1 166 1 
108 1 13 1 323 1 
108 1 13 1 323 1 
143 1 217 1 
143 1 13 1 217 1 
211 1 102 1 
292 2 2 1 169 1 5 1 356 1 7 1 232 1 211 1 173 1 37 2 84 1 86 2 303 1 341 1 308 1 342 1 71 2 219 1 266 2 119 1 77 1 185 1 321 1 354 1 124 1 102 1 166 1 
108 1 323 1 
143 1 13 1 217 1 
291 1 168 1 228 1 333 1 230 1 9 1 10 1 172 1 235 1 357 1 127 2 128 2 86 2 336 1 41 2 61 1 257 1 180 2 90 1 67 1 69 1 111 2 71 2 315 1 139 2 266 2 74 1 224 1 203 1 324 1 379 1 
69 1 111 2 260 1 93 2 137 1 296 1 264 1 370 1 316 1 30 1 98 1 128 2 144 1 41 2 212 1 257 1 101 1 240 1 81 1 
111 1 69 1 260 1 93 2 137 1 170 1 370 1 316 1 30 1 98 1 128 1 41 1 212 1 257 1 101 1 240 1 81 1 
69 1 111 1 112 1 362 1 293 1 296 1 370 1 163 1 128 1 41 1 257 1 130 1 379 1 90 1 
69 1 111 1 260 1 93 2 137 1 296 1 370 1 316 1 30 1 98 1 128 1 144 1 41 1 212 1 257 1 101 1 240 1 81 1 
334 1 
361 1 306 1 274 1 184 1 207 1 213 1 348 1 
361 1 306 1 274 1 205 1 169 1 327 1 343 1 54 1 33 1 219 1 198 1 267 1 38 1 184 2 191 1 239 1 20 1 
274 2 186 2 53 2 327 5 6 1 231 2 55 2 11 2 156 6 191 4 14 2 338 2 192 1 19 1 239 6 20 4 69 4 111 3 23 1 114 2 115 1 285 1 348 1 198 3 200 2 169 5 33 12 253 3 254 2 36 2 128 3 38 4 41 3 257 3 213 1 89 1 43 2 90 10 132 2 361 9 306 8 362 1 182 6 216 2 262 2 138 2 264 1 219 5 141 2 267 4 184 8 376 3 378 2 379 3 
274 2 186 1 53 2 169 1 327 1 152 1 33 6 125 1 209 1 300 1 254 2 156 5 36 2 38 2 191 2 338 2 89 1 194 1 195 1 239 3 20 2 361 8 306 5 244 1 182 5 216 2 183 1 94 1 219 1 198 1 162 1 267 2 184 5 200 2 378 1 
1 1 292 1 169 1 57 1 37 1 301 1 38 1 86 1 191 1 338 1 282 1 20 1 306 2 361 2 215 1 26 1 71 1 216 2 364 1 312 1 346 1 219 1 266 1 267 1 200 2 145 1 378 1 380 1 
306 1 361 1 274 1 348 1 267 1 38 1 184 1 191 1 213 1 20 1 
306 5 361 5 53 2 182 5 216 2 33 10 254 2 36 2 156 5 200 2 184 5 338 2 378 1 43 1 239 5 
274 1 169 1 327 1 184 1 219 1 198 1 
186 2 275 1 327 4 169 3 293 1 128 4 38 2 60 1 191 1 41 4 192 2 257 1 16 1 89 2 90 1 20 2 69 1 111 4 361 2 306 2 112 1 362 2 285 1 136 1 135 1 198 2 219 3 267 2 379 1 
291 1 292 2 168 1 251 1 5 1 228 1 230 1 35 1 172 1 57 1 253 1 127 1 37 2 128 1 86 2 336 1 61 1 41 1 257 1 180 2 90 1 111 1 69 1 362 1 134 1 71 3 284 1 346 2 266 3 203 1 32 1 379 1 
306 2 361 1 274 2 186 1 182 2 33 4 156 2 267 1 38 1 184 4 191 1 89 1 239 2 158 1 20 1 
308 1 185 1 311 1 
211 1 308 1 197 1 185 1 68 1 
308 1 185 1 311 1 
308 1 185 1 311 1 
308 1 185 1 236 1 
308 1 185 1 236 1 
308 1 185 1 236 1 
308 1 185 1 
84 1 124 1 
325 1 168 4 44 1 70 3 228 2 364 1 312 1 96 2 172 2 127 8 200 1 336 2 145 1 338 1 203 2 237 1 180 4 67 4 158 1 305 1 
325 1 127 6 168 3 70 2 200 1 207 1 145 1 338 1 364 1 312 1 237 1 67 3 96 2 158 1 
168 2 53 1 44 1 70 2 228 1 247 1 96 1 172 1 254 1 36 1 127 4 200 1 336 1 338 1 203 1 180 2 67 2 
127 2 168 1 152 1 67 1 209 1 162 1 
325 1 149 1 53 2 168 13 206 1 228 1 209 2 172 1 254 2 36 2 127 26 301 1 336 1 338 5 237 1 180 2 67 13 158 1 305 1 44 2 70 7 310 1 364 2 312 2 96 5 162 2 200 5 145 2 203 1 
127 1 168 1 209 1 
127 1 67 1 162 1 
168 3 44 1 53 1 70 3 228 1 247 1 96 2 172 1 254 1 127 6 36 1 200 1 336 1 203 1 338 1 180 2 43 1 67 3 
168 6 53 2 152 1 228 1 209 1 172 1 300 1 254 2 127 12 36 2 336 1 338 2 193 1 180 2 194 1 67 6 195 1 44 1 70 2 183 1 94 1 96 1 162 1 200 2 203 1 
127 6 44 1 168 3 70 2 200 1 145 1 338 1 364 1 312 1 96 1 67 3 
325 1 44 1 168 2 70 2 228 1 312 1 96 1 172 1 372 1 127 3 145 1 336 1 203 1 237 1 180 2 67 1 305 1 
44 2 168 5 70 5 228 1 364 1 312 2 96 3 172 1 127 10 301 1 200 2 336 1 145 2 203 1 338 2 193 1 180 2 67 5 
44 1 70 1 228 1 172 1 254 1 127 2 200 1 336 1 203 1 193 1 180 2 67 2 
168 2 53 1 44 1 70 2 228 1 96 1 172 1 254 1 36 1 127 4 200 1 336 1 338 1 203 1 193 1 180 2 67 2 
168 2 44 1 70 2 228 3 312 1 96 1 172 3 372 1 127 3 336 3 145 1 203 3 193 1 180 6 273 1 67 1 305 1 
325 1 168 8 152 1 228 4 209 1 172 4 127 15 301 1 336 4 338 2 237 1 193 1 180 8 67 7 305 1 44 3 70 6 364 1 312 2 247 1 248 1 96 3 162 1 372 1 200 2 145 2 203 4 273 1 
325 1 168 10 53 1 152 1 228 2 209 1 172 2 300 1 254 2 127 24 36 2 301 1 336 2 338 4 237 1 193 1 180 4 194 1 67 14 195 1 158 1 305 1 44 4 70 9 364 2 312 2 183 1 94 1 96 5 162 1 200 5 145 2 203 2 
325 1 168 7 53 1 152 1 228 3 209 1 172 3 300 1 254 2 127 17 36 2 336 3 338 2 237 1 193 1 180 6 194 1 67 10 195 1 158 1 305 1 44 1 70 4 364 1 312 1 183 1 94 1 247 1 96 3 162 1 200 3 145 1 203 3 
325 1 168 10 53 2 152 1 228 3 209 1 172 3 300 1 254 2 127 19 36 2 336 3 338 3 237 1 193 1 180 6 194 1 67 9 195 1 158 1 305 1 44 1 70 4 364 1 312 1 183 1 94 1 247 1 96 3 162 1 200 3 145 1 203 3 
325 1 168 7 53 1 152 1 228 3 209 1 172 3 300 1 254 2 127 17 36 2 336 3 338 2 237 1 193 1 180 6 194 1 67 10 195 1 158 1 305 1 44 2 70 5 364 1 312 1 183 1 94 1 247 1 96 3 162 1 200 3 145 1 203 3 
325 1 168 10 53 1 152 1 228 2 209 1 172 2 300 1 254 2 127 24 36 2 301 1 336 2 338 4 237 1 193 1 180 4 194 1 67 14 195 1 158 1 305 1 44 4 70 9 364 2 312 2 183 1 94 1 96 5 162 1 200 5 145 2 203 2 
168 6 53 2 152 1 228 1 209 1 172 1 300 1 254 2 127 12 36 2 336 1 338 2 193 1 180 2 194 1 67 6 195 1 44 1 70 2 183 1 94 1 96 1 162 1 200 2 203 1 
325 1 168 8 53 1 152 1 228 4 209 1 172 4 300 1 254 2 127 18 36 2 336 4 338 2 237 1 193 1 180 8 194 1 195 1 67 10 158 1 305 2 44 2 70 5 364 1 312 1 183 1 94 1 247 1 96 3 162 1 200 3 145 1 203 4 
168 7 53 2 152 1 228 4 209 1 172 4 300 1 254 3 127 16 36 3 336 4 338 2 193 1 180 8 194 1 195 1 67 9 305 2 44 3 70 6 183 1 94 1 96 3 162 1 200 3 203 4 273 1 
325 1 168 4 44 3 70 6 364 1 312 3 96 3 127 7 200 1 145 3 338 1 237 2 67 3 
325 1 168 8 53 1 152 1 228 4 209 1 172 4 300 1 254 2 127 18 36 2 336 4 338 2 237 1 193 1 180 8 194 1 195 1 67 10 158 1 305 2 44 1 70 4 364 1 312 1 183 1 94 1 96 3 162 1 200 3 145 1 203 4 273 1 
221 1 5 1 71 1 86 1 229 1 31 1 266 1 
5 1 71 1 229 1 266 1 221 1 280 1 86 1 42 1 202 1 31 1 281 1 250 1 
69 1 112 1 111 1 362 1 128 1 293 1 207 1 41 1 257 1 379 1 90 1 
69 1 111 1 292 1 362 1 5 1 71 2 35 1 266 2 234 1 253 1 37 1 128 1 86 1 41 1 257 1 32 1 379 1 90 1 
292 2 5 1 35 1 234 1 253 2 37 1 128 1 86 2 39 1 41 1 14 1 257 1 192 1 90 3 111 1 69 1 245 1 71 2 26 1 138 1 266 2 32 1 379 2 
292 2 150 1 5 1 35 1 234 1 253 2 37 1 128 2 86 2 39 1 41 2 14 1 257 1 192 1 90 3 111 2 69 1 245 1 71 2 26 1 138 1 266 2 28 1 379 2 
274 1 150 1 327 1 169 2 253 1 11 1 128 3 41 3 14 1 257 1 192 1 90 4 111 3 69 1 362 1 262 1 73 1 138 1 219 2 184 1 376 1 201 1 379 1 
69 1 111 3 274 1 150 1 362 1 169 2 327 1 262 1 138 1 219 2 253 1 141 1 11 1 128 3 184 1 376 1 14 1 41 3 192 1 257 1 379 1 90 4 
69 1 111 1 317 1 128 1 41 1 257 1 
111 7 69 3 362 2 24 1 6 1 103 1 333 1 313 1 189 1 264 1 139 1 253 1 317 1 59 1 128 6 41 7 257 2 101 1 66 1 379 2 90 3 
325 1 5 2 228 2 277 1 230 2 234 1 235 1 336 2 338 1 237 1 67 3 158 1 111 1 69 1 70 2 71 2 345 1 200 1 203 2 204 1 32 1 165 1 291 2 292 1 168 3 251 1 171 1 35 1 172 2 253 1 127 6 37 1 128 1 86 1 41 1 257 1 180 4 90 1 134 1 364 1 312 1 264 1 266 2 96 2 145 1 324 1 379 1 
274 1 169 3 327 2 356 1 231 1 11 1 128 1 38 2 191 2 41 1 213 1 90 2 20 2 132 1 361 1 306 1 111 1 362 1 114 1 285 1 262 1 348 1 219 3 198 1 141 1 267 2 184 1 376 1 
69 2 253 1 111 2 23 1 317 1 128 2 6 1 41 2 262 1 257 1 264 1 379 1 90 2 
69 1 111 4 112 1 150 1 362 1 293 1 264 1 161 1 128 4 41 4 257 1 379 1 90 1 
111 2 69 2 133 1 24 1 313 1 253 1 128 2 12 1 41 2 157 1 192 1 257 1 379 1 90 1 
69 1 111 1 30 1 362 1 98 1 128 1 93 1 41 1 257 1 240 1 
111 2 69 1 333 1 264 1 128 2 224 1 41 2 257 1 101 1 379 1 90 1 
112 1 111 5 69 2 362 1 293 1 103 1 333 1 264 1 161 1 128 4 41 5 192 1 257 2 66 1 379 2 90 3 
112 1 111 5 69 2 362 1 243 1 293 1 103 1 333 1 264 1 161 1 128 4 41 5 192 1 257 2 379 2 90 3 
69 1 111 1 292 1 362 1 5 1 71 2 35 1 266 2 234 1 253 1 28 1 37 1 128 1 86 1 41 1 257 1 379 1 90 1 
111 1 69 2 24 1 6 1 313 1 189 1 253 1 128 1 41 1 192 1 257 1 379 1 90 1 
357 1 0 1 71 1 86 1 83 1 315 1 10 1 266 1 339 1 
51 1 0 1 272 1 
0 1 373 1 5 1 83 1 339 1 
0 1 51 1 274 1 169 2 245 1 3 1 5 1 26 1 356 1 83 2 219 2 371 1 11 1 373 2 184 1 39 1 272 1 339 2 227 1 
249 1 207 1 352 1 210 1 
249 1 46 1 82 1 352 1 297 1 210 1 304 1 
49 1 369 1 304 1 
249 1 358 2 283 1 46 1 79 1 82 1 87 1 352 1 297 3 210 1 75 1 304 3 
242 1 249 1 46 1 268 1 82 1 352 1 297 2 210 1 304 2 
82 1 93 1 297 1 316 1 249 1 46 1 87 1 269 1 99 1 304 1 240 1 
249 1 46 1 82 1 87 1 352 1 297 1 304 1 
46 1 82 1 87 1 352 2 297 1 210 1 304 1 
335 1 222 1 249 1 46 2 82 2 87 1 352 1 297 2 95 1 304 2 
22 1 307 1 242 2 82 1 287 1 297 3 210 1 249 2 46 1 87 1 99 1 352 1 304 3 
242 1 260 1 93 2 82 1 297 2 210 1 316 1 249 1 98 1 46 1 87 1 352 1 337 1 304 2 240 1 
307 1 242 2 82 2 154 1 297 4 210 1 249 2 46 2 268 1 87 1 99 1 352 1 304 4 
249 1 46 1 82 1 87 1 352 1 297 1 210 1 304 1 
307 1 242 2 283 1 82 1 297 4 75 1 210 2 249 3 358 1 46 1 270 1 99 1 352 2 304 4 
242 1 249 1 91 1 46 1 85 1 82 1 87 1 352 1 368 1 297 2 210 1 304 2 
283 1 116 1 82 1 297 3 75 2 210 1 249 1 358 2 46 1 87 1 352 1 304 3 
249 2 4 1 225 2 226 1 
46 1 82 1 87 1 298 1 297 1 304 1 
242 1 249 1 46 1 82 1 87 1 352 1 287 1 297 2 210 1 304 2 
199 1 
249 1 46 1 82 1 87 1 352 1 297 1 210 1 304 1 
242 1 82 1 287 1 297 3 210 1 249 1 358 1 46 1 87 1 352 1 304 3 
307 1 249 1 270 1 99 1 
249 1 352 1 

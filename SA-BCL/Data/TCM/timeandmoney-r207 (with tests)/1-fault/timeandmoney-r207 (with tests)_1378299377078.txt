#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 10 (77,379) (77,379) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 10 (77,379) (77,379) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 10 (77,379) (77,379) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 10 (77,379) (77,379) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
284 1 326 1 298 1 19 1 160 1 327 1 77 1 250 1 379 1 203 1 197 1 357 2 182 2 92 1 10 1 241 1 
284 1 326 1 298 1 19 1 160 1 327 1 77 1 250 1 379 1 203 1 197 1 357 2 182 2 92 1 10 1 241 1 
284 1 326 1 298 1 19 1 160 1 327 1 77 1 250 1 379 1 203 1 197 1 357 2 182 2 92 1 10 1 241 1 
284 1 326 1 298 1 19 1 160 1 327 1 77 1 250 1 379 1 203 1 197 1 357 2 182 2 92 1 10 1 241 1 
313 3 283 1 40 3 284 1 326 1 19 1 160 1 250 1 236 1 305 1 197 1 104 2 25 1 357 4 115 2 182 4 10 1 310 1 
40 1 252 1 284 1 326 1 298 1 272 1 19 1 160 1 250 1 236 1 203 1 25 1 357 2 182 2 92 1 269 1 
40 2 313 1 284 2 19 2 365 1 250 1 236 1 104 1 25 1 357 3 182 3 92 1 310 1 
313 7 283 1 284 2 124 1 160 1 365 1 193 1 236 1 197 1 104 4 10 1 11 1 40 5 326 1 19 2 250 1 51 1 305 1 25 1 357 9 115 2 92 1 182 9 310 3 
313 7 283 1 284 2 124 1 160 1 365 1 193 1 236 1 197 1 104 4 10 1 11 1 40 5 326 1 19 2 250 1 51 1 305 1 25 1 357 9 115 2 92 1 182 9 310 3 
214 1 4 1 258 1 
361 1 254 2 214 1 
13 1 172 2 226 2 366 2 243 2 265 1 239 2 100 2 
1 1 253 2 285 1 314 1 188 1 363 1 157 1 32 1 257 2 259 1 100 3 192 1 366 2 163 1 265 1 239 2 135 1 13 1 41 1 372 1 172 3 243 2 271 2 138 1 66 2 178 2 46 1 375 1 353 1 49 1 226 2 380 1 69 1 153 1 54 1 94 1 311 1 
181 1 37 1 172 1 226 1 366 1 243 1 265 1 291 1 239 1 100 1 
172 1 4 1 57 1 342 1 158 1 222 1 100 1 145 1 37 1 23 1 304 1 214 1 68 1 239 1 
172 1 243 1 4 1 57 1 342 1 158 1 222 2 100 1 366 1 226 1 37 1 23 2 214 1 68 1 239 1 
23 1 213 1 148 1 187 1 222 1 
152 1 23 2 213 1 214 1 4 1 148 1 52 1 222 2 
23 1 148 1 222 1 
172 1 243 1 34 1 222 1 100 1 181 1 37 1 366 1 226 1 23 1 213 1 291 1 265 1 239 1 
214 1 
23 2 213 1 214 1 4 1 148 1 52 1 222 2 292 1 
293 1 14 2 119 1 4 1 234 1 222 5 209 2 235 1 87 2 22 1 23 5 213 2 214 1 148 2 62 1 52 1 205 1 267 1 200 1 
13 1 258 1 
13 2 172 2 243 1 100 2 275 1 366 1 226 1 230 1 239 2 
194 1 116 1 159 1 
13 1 253 1 172 1 271 1 285 1 188 1 138 1 363 1 257 1 100 1 192 1 375 1 49 1 163 1 154 1 135 1 
253 1 172 2 285 1 243 1 271 1 138 1 188 1 363 1 257 1 100 2 192 1 249 1 375 1 194 1 49 1 226 1 163 1 149 1 239 1 135 1 
13 1 249 1 366 1 172 3 226 3 243 3 239 3 100 3 
181 1 37 1 172 1 226 1 243 1 239 1 100 1 
275 1 37 1 172 1 226 1 366 1 243 1 230 1 239 1 100 1 
1 1 253 1 285 1 188 1 363 1 57 1 342 1 257 1 259 1 158 1 100 4 192 1 212 1 366 2 37 1 163 1 265 1 149 1 239 3 135 1 13 1 41 1 372 1 172 4 243 3 271 1 138 1 66 1 178 2 222 1 46 1 249 1 375 1 49 1 226 3 23 1 380 1 68 1 69 1 153 1 280 1 230 1 54 1 94 1 
13 1 249 1 172 2 226 1 243 1 304 1 59 1 239 2 100 2 
172 3 243 3 57 1 342 1 158 1 222 1 100 3 249 2 21 1 366 1 37 1 226 3 212 1 23 1 214 1 68 1 149 1 230 1 239 3 
172 2 243 2 159 1 100 2 249 1 194 1 366 1 226 2 230 1 239 2 
13 1 253 1 172 1 271 1 285 1 188 1 138 1 363 1 257 1 100 1 192 1 375 1 49 1 163 1 135 1 
13 1 253 1 172 1 271 1 285 1 138 1 363 1 257 1 210 1 100 1 192 1 375 1 49 1 219 1 135 1 
157 2 259 1 159 2 194 2 80 1 130 1 61 1 39 1 370 1 41 1 372 1 296 1 66 4 178 2 328 1 330 1 142 1 380 1 50 1 116 2 153 1 53 1 54 2 94 1 
37 1 172 1 226 1 243 1 68 1 268 1 239 1 100 1 
13 1 172 5 243 4 176 1 100 5 249 2 226 4 366 1 304 1 59 1 149 1 133 1 230 1 239 5 
181 1 37 1 172 2 226 2 243 2 268 1 239 2 100 2 
128 1 155 1 
128 1 155 1 
118 1 301 1 
118 1 301 1 
118 1 301 1 
128 1 155 1 96 1 
128 1 155 1 96 1 
325 1 128 1 155 1 
128 2 86 1 155 2 198 1 118 1 301 1 
128 1 155 1 96 1 
128 1 90 1 155 1 
128 1 90 1 155 1 
128 1 90 1 155 1 
360 2 86 1 155 2 110 2 31 1 202 2 300 1 350 3 222 2 114 2 88 1 89 1 128 2 320 1 23 2 322 1 214 1 106 1 185 2 
360 1 55 1 155 1 100 2 128 1 60 1 102 1 264 1 239 2 13 1 325 1 294 1 172 2 243 2 110 1 202 1 245 1 350 1 300 1 222 1 114 1 226 2 23 1 355 1 
326 1 197 1 160 1 
326 1 269 1 160 1 
197 2 323 1 343 1 269 1 160 3 260 1 
197 1 343 1 269 1 160 2 260 1 223 1 
197 1 343 1 269 1 160 2 260 2 
0 1 361 1 254 3 119 1 4 1 75 1 33 1 288 1 209 1 318 2 36 2 213 4 60 1 147 2 148 1 214 2 369 1 370 1 293 3 294 1 14 1 296 1 222 5 87 1 328 1 227 1 23 5 355 1 142 1 52 1 205 2 117 1 
361 3 254 9 119 1 187 5 4 1 362 1 33 3 288 2 364 1 209 2 318 6 60 4 213 7 81 1 147 6 148 6 214 5 199 5 200 1 108 1 370 3 293 8 14 2 296 3 222 9 87 2 328 3 227 2 23 9 142 3 204 1 52 1 205 6 335 1 117 1 
0 1 361 2 254 4 4 1 288 1 33 1 209 1 318 2 36 1 213 2 60 1 214 3 147 2 200 1 369 1 370 1 293 3 14 1 296 1 222 3 87 1 328 1 227 1 23 3 142 1 205 2 
0 1 361 3 254 7 4 1 362 1 288 1 33 2 364 1 209 1 318 4 36 2 60 2 213 3 81 1 214 4 147 4 200 1 369 1 370 2 293 5 14 1 296 2 222 4 87 1 328 2 227 1 23 4 142 2 205 4 
258 1 98 1 135 1 
186 1 135 1 
29 1 
285 1 135 1 
285 1 363 1 315 1 98 2 135 3 344 1 
285 1 363 1 135 1 
27 1 135 1 
370 1 30 2 233 1 157 4 66 7 273 1 144 1 67 1 101 1 321 1 80 3 142 1 70 1 53 2 183 1 54 3 168 1 
370 1 30 2 233 1 157 4 66 7 273 1 144 1 67 1 101 1 321 1 80 3 142 1 70 1 53 2 183 1 54 3 168 1 
370 1 30 2 233 1 221 1 157 4 66 7 273 1 144 1 67 1 101 1 321 1 80 3 142 1 70 1 53 2 183 1 54 3 168 1 
30 3 233 2 157 16 259 1 33 3 144 2 101 1 321 1 80 10 164 1 168 1 370 4 348 1 41 1 372 1 296 3 174 4 351 1 66 31 273 2 178 2 47 3 274 1 328 3 180 1 67 2 303 1 142 4 70 1 153 1 53 5 183 5 54 15 337 1 
370 1 30 2 372 2 41 2 233 1 157 5 66 9 259 2 273 1 178 4 144 1 126 1 67 1 321 1 80 4 24 1 142 1 70 1 153 2 53 3 183 1 337 1 54 4 168 1 
313 1 253 1 284 1 255 1 257 1 143 1 160 2 192 1 78 1 236 1 197 1 323 1 346 1 269 1 64 1 270 1 107 1 40 1 326 1 271 1 297 1 43 1 19 1 48 1 49 1 250 1 25 1 357 2 182 2 92 1 
253 1 313 2 284 1 255 1 257 1 97 1 143 1 160 2 192 1 78 1 236 1 197 1 323 1 269 1 270 1 107 1 40 1 326 1 271 1 297 1 65 1 43 1 19 1 45 1 48 1 49 1 25 1 357 3 182 3 92 1 
253 1 313 2 257 1 143 1 160 2 192 1 236 1 197 1 323 1 269 1 270 1 107 1 40 1 271 1 326 1 297 1 65 1 43 1 45 1 48 1 49 1 25 1 357 2 92 1 182 2 
253 1 284 1 15 1 349 1 285 1 271 1 297 2 97 1 257 1 44 1 19 1 190 1 192 1 48 2 375 1 263 1 49 1 79 1 357 1 92 2 182 1 135 1 270 2 
253 1 284 1 255 1 257 1 143 1 160 2 192 1 78 1 197 1 323 1 346 1 269 1 270 1 107 1 326 1 271 1 297 1 43 1 19 1 45 1 48 1 49 1 250 1 357 1 182 1 92 1 
352 1 
285 1 340 1 4 1 57 1 287 1 342 1 288 1 58 1 100 1 191 2 192 1 145 1 148 6 146 1 150 1 239 1 293 2 14 1 244 2 113 1 302 2 23 5 304 1 68 1 205 2 309 1 73 1 253 2 361 2 254 2 119 1 120 1 257 2 158 1 209 1 263 1 79 1 37 1 214 2 135 1 172 1 271 2 175 1 222 5 141 2 87 1 375 2 49 1 91 2 278 1 52 3 334 4 336 2 93 1 338 2 
172 1 120 1 57 1 342 1 158 1 222 3 141 1 100 1 145 1 37 1 23 3 278 1 304 1 148 2 52 1 334 2 68 1 309 1 93 1 150 1 239 1 292 1 
4 1 120 1 57 1 342 1 158 1 100 1 145 1 37 1 148 1 214 1 150 1 239 1 292 1 172 1 222 3 23 3 304 1 278 1 91 1 68 1 334 3 52 1 309 1 93 1 
4 1 120 1 57 1 342 1 158 1 100 1 145 1 37 1 148 2 214 1 150 1 239 1 292 1 172 1 222 3 141 1 23 3 304 1 278 1 91 1 52 1 68 1 334 3 309 1 336 1 93 1 
4 5 57 1 342 1 100 1 191 2 145 1 7 1 148 7 150 1 239 1 292 1 293 1 14 1 244 2 17 1 113 1 302 2 23 5 304 1 68 1 205 1 309 1 361 2 119 1 120 1 256 1 158 1 209 1 37 1 214 5 368 1 137 1 172 1 175 1 222 5 141 4 87 1 278 1 91 4 334 6 52 3 336 4 93 1 338 2 
4 1 57 1 342 1 100 1 191 2 145 1 148 4 150 1 239 1 293 1 14 1 244 2 113 1 302 2 23 4 304 1 68 1 205 1 309 1 73 1 361 2 119 1 254 2 120 1 158 1 209 1 37 1 214 2 172 1 175 1 222 4 87 1 141 2 278 1 91 2 334 4 52 2 336 2 93 1 338 2 
361 2 119 1 4 1 120 1 57 1 256 1 342 1 158 1 209 1 100 1 191 2 145 1 37 1 7 1 214 1 148 4 150 1 368 1 239 1 293 1 14 1 172 1 244 2 175 1 222 4 141 2 87 1 113 1 302 2 23 4 91 2 304 1 278 1 52 2 68 1 334 4 205 1 336 2 309 1 93 1 338 2 
361 2 119 1 4 1 120 1 57 1 256 1 342 1 158 1 209 1 100 1 191 2 145 1 37 1 7 1 214 1 148 4 150 1 368 1 239 1 293 1 14 1 172 1 244 2 175 1 222 4 141 2 87 1 113 1 302 2 23 4 91 2 304 1 278 1 52 2 68 1 334 4 205 1 336 2 309 1 93 1 338 2 
254 2 119 1 4 1 120 1 57 1 256 1 342 1 158 1 209 1 100 1 145 1 37 1 214 1 148 4 165 1 166 1 150 1 239 1 293 1 14 1 172 1 244 2 139 1 222 4 141 2 87 1 113 1 23 4 91 2 304 1 278 1 52 2 306 2 68 1 334 4 205 1 336 2 309 1 206 2 93 1 338 2 
361 2 119 1 4 1 120 1 57 1 256 1 342 1 158 1 209 1 100 1 191 2 145 1 37 1 7 1 214 1 148 5 150 1 368 1 239 1 293 1 14 1 172 1 244 2 175 1 17 1 222 4 87 1 141 3 113 1 302 2 23 4 304 1 278 1 91 3 52 2 68 1 334 5 205 1 309 1 336 3 93 1 338 2 
361 2 119 1 4 1 120 1 57 1 256 1 342 1 158 1 209 1 100 1 191 2 145 1 37 1 7 1 214 1 148 5 150 1 368 1 239 1 293 1 14 1 172 1 244 2 175 1 17 1 222 4 87 1 141 3 113 1 302 2 23 4 304 1 278 1 91 3 52 2 68 1 334 5 205 1 309 1 336 3 93 1 338 2 
254 2 119 1 4 1 120 1 57 1 342 1 158 1 209 1 100 1 145 1 37 1 214 1 148 4 166 1 150 1 239 1 293 1 14 1 172 1 244 2 222 4 141 2 87 1 113 1 23 4 91 2 278 1 304 1 52 2 306 2 68 1 334 4 205 1 336 2 309 1 73 1 206 2 93 1 338 2 
30 1 157 3 258 1 259 1 159 1 144 1 194 1 80 2 321 1 61 1 168 1 370 1 13 2 41 1 372 1 66 6 178 2 273 1 380 1 142 1 70 1 116 1 153 1 53 2 54 3 94 1 
157 8 259 2 33 2 159 4 194 11 80 2 129 1 164 1 216 1 218 1 167 1 13 1 370 1 41 2 372 2 296 1 174 3 66 14 247 1 178 4 47 3 328 2 303 1 380 2 142 2 69 1 116 11 153 2 53 1 183 1 54 6 94 1 311 1 
253 1 2 1 285 1 188 1 363 1 157 1 257 1 259 1 159 1 100 2 192 1 129 1 6 1 163 1 149 1 239 1 135 1 13 1 172 2 372 1 41 1 173 1 271 1 243 1 138 1 66 2 178 2 375 1 249 1 49 1 226 1 380 1 69 1 153 1 154 1 54 1 94 1 311 1 
285 2 188 2 144 1 100 3 192 2 194 7 149 1 239 1 240 2 13 2 109 1 243 1 296 2 66 20 299 2 249 1 69 1 70 1 116 7 153 3 311 1 253 3 30 1 363 2 208 2 157 10 257 3 259 3 33 2 159 7 261 2 321 1 129 1 80 8 163 2 168 1 135 2 370 3 170 1 41 3 372 3 172 3 271 3 138 2 273 1 178 6 45 1 46 2 328 2 375 1 49 2 226 1 380 3 142 3 53 4 183 4 54 10 232 1 94 3 
253 8 314 2 285 2 157 1 257 7 259 2 76 1 100 1 192 2 263 1 79 1 237 1 61 1 84 1 64 1 239 1 135 3 172 1 41 2 372 2 243 1 271 8 66 2 178 4 45 1 224 1 249 1 375 2 376 1 332 1 49 2 226 1 380 2 69 1 279 1 153 2 54 1 94 2 311 1 
157 1 259 1 33 1 159 1 100 1 194 1 80 1 366 1 129 1 196 1 239 1 370 1 41 1 372 1 172 1 243 1 296 1 66 3 178 2 328 1 226 1 380 1 142 1 116 1 153 1 53 1 230 1 54 2 94 1 
372 1 41 1 157 2 66 2 259 1 159 1 178 2 328 1 194 1 80 1 380 1 50 1 142 1 61 1 116 1 153 1 183 1 94 1 
370 1 372 1 41 1 296 1 66 2 259 1 159 1 178 2 194 1 80 1 380 1 61 1 130 1 116 1 153 1 53 1 54 2 94 1 
157 2 33 1 259 1 159 2 194 2 80 2 61 1 370 1 41 1 372 1 296 1 66 4 178 2 328 1 142 1 380 1 116 2 153 1 53 1 183 1 54 2 94 1 
372 1 41 1 157 2 66 2 259 1 159 1 178 2 328 1 194 1 80 1 380 1 50 1 142 1 116 1 153 1 84 1 183 1 94 1 
370 1 372 1 41 1 296 1 66 2 259 1 159 1 178 2 194 1 80 1 380 1 130 1 116 1 153 1 53 1 84 1 54 2 94 1 
157 2 33 1 259 1 159 2 194 2 80 2 84 1 370 1 41 1 372 1 296 1 66 4 178 2 328 1 142 1 380 1 116 2 153 1 53 1 183 1 54 2 94 1 
370 1 372 1 41 1 296 1 157 2 259 1 33 1 66 4 159 2 178 2 328 1 194 2 80 2 380 1 142 1 116 2 153 1 53 1 183 1 54 2 94 1 
253 1 285 1 188 1 363 1 157 1 257 1 259 1 100 1 192 1 163 1 135 1 13 1 172 1 372 1 41 1 271 1 138 1 66 2 178 2 46 1 375 1 49 1 380 1 69 1 153 1 54 1 94 1 311 1 
253 1 285 1 363 1 157 1 257 1 259 1 210 1 100 1 192 1 219 1 135 1 13 1 151 1 172 1 372 1 41 1 271 1 138 1 66 2 178 2 375 1 49 1 380 1 69 1 153 1 54 1 94 1 311 1 
157 2 33 1 259 1 159 2 194 2 129 1 80 2 370 1 41 1 372 1 296 1 66 4 178 2 328 1 142 1 380 1 116 2 153 1 53 1 183 1 54 2 94 1 
253 1 285 1 188 1 363 1 157 2 257 1 259 1 33 1 159 2 100 1 192 1 194 2 80 2 163 1 64 1 135 1 370 1 172 1 372 1 41 1 271 1 296 1 138 1 66 4 299 1 178 2 46 1 328 1 49 1 142 1 380 1 116 2 153 1 53 1 183 1 54 2 94 1 
157 2 259 1 33 1 159 1 100 1 194 1 80 1 366 1 129 1 195 1 239 1 370 1 41 1 372 1 172 1 243 1 296 1 66 3 178 2 328 1 226 1 380 1 142 1 116 1 153 1 230 1 183 1 54 1 94 1 
28 2 157 9 259 2 33 3 319 1 80 6 164 1 63 1 266 1 370 3 41 2 372 2 296 3 174 2 66 19 178 4 374 1 47 1 328 3 329 2 276 1 24 1 303 1 142 3 153 2 358 1 53 3 72 1 183 3 54 10 
339 1 28 4 157 14 121 1 259 3 33 3 161 1 319 2 80 4 345 1 63 2 266 1 38 1 12 1 370 2 41 3 372 3 296 2 174 2 66 26 178 6 47 2 328 3 329 1 24 1 303 2 142 3 153 3 358 1 53 2 72 1 183 2 337 2 54 12 
339 1 144 1 345 1 63 2 12 1 296 4 66 41 24 1 303 3 70 1 153 3 72 1 358 1 28 4 30 1 157 20 121 1 33 4 259 3 161 1 319 1 80 8 321 1 164 1 266 1 38 1 168 1 370 5 372 3 41 3 174 4 178 6 273 1 47 3 374 1 328 4 329 1 142 5 53 4 183 4 54 21 337 1 282 1 
339 1 28 4 30 1 121 1 157 20 259 4 33 4 144 1 161 1 319 1 321 1 345 1 80 7 164 1 63 2 266 1 38 1 168 1 12 1 370 4 41 4 372 4 296 3 174 4 66 38 273 1 178 8 374 1 47 3 328 4 329 1 24 1 303 3 142 5 70 1 153 4 358 1 53 4 72 1 183 3 337 2 54 18 282 1 
339 1 28 4 30 1 121 1 157 27 259 2 33 7 144 1 161 1 319 1 321 1 345 1 80 14 164 2 63 1 266 1 38 1 168 1 12 1 370 8 41 2 372 2 296 7 174 4 66 52 273 1 247 2 178 4 47 4 328 7 329 1 24 1 303 2 142 8 70 1 153 2 358 1 53 7 72 1 183 7 337 1 54 25 
128 1 360 1 86 1 322 1 110 1 155 1 31 1 202 1 83 1 114 1 
325 1 55 1 
128 1 360 1 110 1 155 1 202 1 189 1 347 1 85 1 114 1 
360 1 86 1 155 1 110 1 31 1 202 1 300 1 350 2 222 1 114 1 88 1 128 1 320 1 23 1 322 1 214 1 106 1 185 1 
360 1 86 1 155 1 110 1 31 1 202 1 300 1 350 2 222 1 114 1 88 1 128 1 320 1 23 1 322 1 214 1 106 1 185 1 
360 1 86 1 155 1 110 1 31 1 202 1 300 1 350 2 222 1 114 1 88 1 128 1 320 1 23 1 322 1 214 1 106 1 185 1 
238 1 198 1 96 1 
238 1 198 1 96 1 
20 1 90 1 
20 1 90 1 198 1 
102 1 264 1 
360 1 55 1 155 1 100 2 128 1 213 1 60 1 102 1 264 1 239 2 13 1 325 1 294 1 172 2 243 2 110 1 202 1 245 1 350 1 222 1 88 1 114 1 225 1 226 2 23 1 355 1 185 1 
238 1 96 1 
20 1 90 1 198 1 
253 2 285 1 314 2 316 1 157 1 257 2 259 1 100 2 192 1 129 1 162 1 239 2 135 1 171 1 172 2 372 1 41 1 271 2 66 2 112 1 178 2 224 1 376 1 49 1 380 1 69 1 153 1 54 1 94 1 184 1 311 1 
242 1 253 2 169 1 326 1 271 2 297 1 255 1 257 2 143 1 160 2 45 1 192 1 49 1 197 1 323 1 131 1 269 1 64 1 107 1 
253 1 169 1 95 1 326 1 271 1 297 1 255 1 257 1 143 1 160 2 45 1 192 1 49 1 197 1 323 1 269 1 107 1 
253 1 349 1 285 1 271 1 297 1 257 1 125 1 192 1 375 1 263 1 49 1 79 1 131 1 135 1 
242 1 253 1 169 1 326 1 271 1 297 1 255 1 257 1 143 1 160 2 45 1 192 1 49 1 197 1 323 1 131 1 269 1 107 1 
56 1 
293 1 214 1 4 1 62 1 205 1 267 1 258 1 
361 1 119 1 254 1 4 1 209 1 191 1 214 2 148 1 293 1 14 1 175 1 222 1 87 1 302 1 23 1 52 1 205 1 
186 3 285 3 340 1 4 2 57 2 288 2 98 2 192 3 290 1 148 5 147 6 62 1 64 1 293 9 14 4 295 2 296 2 248 1 23 5 205 8 307 2 359 2 27 2 253 3 361 6 119 4 254 12 363 3 315 1 257 3 123 1 33 2 209 4 261 2 127 2 318 6 214 8 267 1 135 10 370 2 220 2 371 2 271 3 373 2 222 5 87 4 328 2 375 1 49 4 277 2 142 2 381 1 52 3 281 1 
339 1 361 3 340 1 254 6 119 2 4 2 341 1 121 1 288 1 33 2 209 2 161 1 318 5 345 1 148 1 147 5 214 5 38 1 370 2 220 2 293 8 14 2 296 2 16 1 174 1 222 1 87 2 47 1 328 2 23 1 303 1 142 2 52 1 205 5 359 1 
119 1 34 1 209 1 144 1 100 1 37 1 321 1 366 1 7 1 291 1 265 1 239 1 370 1 220 2 293 2 14 1 172 1 243 1 273 1 222 1 87 1 181 1 226 1 23 1 142 2 205 2 359 1 207 1 
293 1 14 1 119 1 4 1 209 1 87 1 214 1 62 1 205 1 267 1 
370 2 220 2 293 5 361 5 254 10 296 2 33 2 261 1 328 2 318 5 142 2 147 5 214 5 205 5 359 1 
23 1 214 1 4 1 148 1 52 1 222 1 
253 4 285 1 119 1 340 2 287 1 257 4 288 2 58 1 209 2 192 1 263 1 79 1 148 4 200 1 135 1 136 1 293 2 14 2 271 4 222 3 87 2 248 1 375 2 49 1 23 3 52 2 205 2 281 2 74 1 
253 1 1 1 285 1 188 1 363 1 257 1 259 1 100 3 192 1 366 2 163 1 265 1 239 2 135 1 13 1 41 1 372 1 172 3 271 1 243 2 138 1 66 1 178 2 46 1 375 1 49 1 226 2 380 1 69 1 153 1 54 1 94 1 
293 1 30 1 14 1 361 2 254 4 119 1 340 1 4 2 288 1 209 1 87 1 318 2 147 2 214 4 205 2 
110 1 9 1 114 1 
110 1 9 1 114 1 
322 1 102 1 110 1 231 1 114 1 
110 1 9 1 114 1 
110 1 211 1 114 1 
110 1 211 1 114 1 
110 1 211 1 114 1 
110 1 114 1 
128 1 155 1 
370 1 30 1 372 2 41 2 157 4 66 8 259 2 178 4 273 1 144 1 321 1 80 3 142 1 70 1 153 2 53 2 183 1 54 4 337 1 168 1 
370 1 30 1 157 3 258 1 66 6 273 1 144 1 80 2 321 1 142 1 70 1 53 2 54 3 168 1 
370 1 372 1 41 1 296 1 246 1 157 2 259 1 33 1 66 4 178 2 328 1 80 2 142 1 153 1 53 1 183 1 54 2 
370 1 296 1 174 2 157 3 66 7 33 1 47 1 328 1 80 2 303 1 142 1 164 1 53 1 183 1 54 4 
30 1 157 11 33 2 259 2 144 2 321 1 80 9 164 1 218 1 134 1 168 1 370 3 372 2 41 2 296 2 174 2 66 23 273 2 247 1 178 4 47 2 328 2 142 3 70 1 153 2 53 5 183 4 54 12 337 2 
174 1 66 1 54 1 
157 1 66 1 47 1 
370 1 41 1 372 1 296 1 246 1 157 3 259 1 66 6 33 1 178 2 261 1 328 1 80 3 142 1 153 1 53 2 183 1 54 3 
339 1 121 1 157 6 259 1 33 2 161 1 345 1 80 2 38 1 370 2 41 1 372 1 296 2 174 1 66 12 178 2 47 1 328 2 24 1 303 1 142 2 153 1 53 1 183 1 54 6 
370 1 157 3 66 6 273 1 144 1 321 1 80 2 142 1 53 1 183 1 54 3 
372 1 41 1 157 1 66 3 259 1 273 1 178 2 144 1 80 2 70 1 153 1 53 1 134 1 183 1 54 2 337 1 168 1 
370 2 41 1 372 1 157 5 259 1 66 10 178 2 273 2 144 2 80 5 321 1 24 1 142 2 153 1 53 3 183 2 207 1 54 5 
372 1 41 1 157 2 259 1 66 2 178 2 328 1 80 1 24 1 142 1 153 1 183 1 
370 1 372 1 41 1 296 1 157 2 259 1 33 1 66 4 178 2 328 1 80 2 24 1 142 1 153 1 53 1 183 1 54 2 
372 3 41 3 157 1 66 3 259 3 178 6 273 1 144 1 374 1 80 2 24 1 153 3 134 1 53 1 183 1 337 1 54 2 
30 1 157 16 259 5 33 3 144 3 321 2 80 12 164 1 134 1 168 1 370 5 41 5 372 5 296 3 174 4 246 1 351 1 66 34 273 3 178 10 274 1 374 1 47 3 180 1 328 3 24 1 303 1 142 5 70 1 153 5 53 7 183 5 337 2 54 18 
30 1 121 1 157 4 259 1 144 1 80 2 321 1 168 1 370 1 41 1 372 1 174 1 66 8 178 2 273 1 47 1 24 1 142 1 303 1 70 1 153 1 53 2 54 4 
30 1 121 1 157 6 259 2 33 1 144 1 321 1 80 3 164 1 168 1 370 1 41 2 372 2 174 2 246 1 66 11 273 1 178 4 47 1 328 1 24 1 303 1 142 2 70 1 153 2 53 2 183 1 54 5 
339 1 30 1 121 1 157 9 259 3 33 2 144 1 161 1 321 1 345 1 80 4 38 1 168 1 370 3 41 3 372 3 296 2 174 1 246 1 66 19 273 1 178 6 47 1 328 2 24 1 303 1 142 3 70 1 153 3 53 3 183 1 54 10 337 1 
339 1 30 1 121 1 157 10 259 3 33 2 144 1 161 1 321 1 345 1 80 5 38 1 168 1 370 2 41 3 372 3 296 1 174 1 246 1 66 17 273 1 178 6 47 1 328 2 24 1 303 1 142 3 70 1 153 3 53 3 183 2 337 1 54 7 
30 1 121 1 157 4 259 1 144 1 80 2 321 1 168 1 370 1 41 1 372 1 174 1 66 8 178 2 273 1 47 1 24 1 142 1 303 1 70 1 153 1 53 2 54 4 
339 1 121 1 157 6 259 1 33 2 161 1 345 1 80 2 38 1 370 2 41 1 372 1 296 2 174 1 66 12 178 2 47 1 328 2 24 1 303 1 142 2 153 1 53 1 183 1 54 6 
339 1 30 1 121 1 157 10 259 4 33 2 144 1 161 1 321 1 345 1 80 5 38 1 168 1 370 2 41 4 372 4 296 1 174 1 246 1 66 18 273 1 178 8 47 1 328 2 24 1 303 1 142 3 70 1 153 4 53 3 183 2 54 8 337 2 
339 1 121 1 157 9 259 4 33 3 161 1 345 1 80 6 38 1 370 2 41 4 372 4 296 2 174 1 66 16 178 8 374 1 47 1 328 3 24 1 303 1 142 3 153 4 53 3 183 3 54 7 337 2 
370 1 157 3 66 7 273 3 144 3 80 6 321 1 142 1 70 2 53 3 183 3 54 4 168 1 
339 1 30 1 121 1 157 10 259 4 33 2 144 1 161 1 321 1 345 1 80 4 38 1 168 1 370 2 41 4 372 4 296 1 174 1 66 18 273 1 178 8 374 1 47 1 328 2 24 1 303 1 142 3 70 1 153 4 53 3 183 1 54 8 337 2 
13 1 172 1 304 1 59 1 103 1 239 1 100 1 
13 1 172 1 100 1 333 1 59 1 304 1 356 1 251 1 367 1 103 1 239 1 26 1 
375 1 263 1 253 1 49 1 79 1 285 1 271 1 257 1 258 1 135 1 192 1 
13 1 253 1 172 2 285 1 243 1 271 1 138 1 188 1 363 1 257 1 100 2 192 1 249 1 375 1 49 1 226 1 239 1 135 1 
27 1 253 1 285 2 188 1 363 2 257 1 158 1 100 2 192 1 37 1 239 2 135 3 13 1 172 2 295 1 271 1 243 1 138 1 249 1 49 1 226 2 68 1 281 1 
27 1 253 2 285 2 363 2 257 2 158 1 210 1 100 2 192 1 37 1 217 1 239 2 135 3 13 1 172 2 295 1 271 2 243 1 138 1 249 1 49 1 226 2 68 1 281 1 
27 1 186 1 253 3 295 1 285 1 271 3 4 1 363 1 57 1 257 3 222 2 98 1 99 1 192 1 375 1 49 1 23 2 214 1 148 1 215 1 217 1 281 1 135 4 
27 1 186 1 253 3 295 1 285 1 271 3 4 1 363 1 57 1 257 3 222 2 98 1 127 1 192 1 375 1 49 1 23 2 214 1 148 1 217 1 281 1 135 4 
253 1 49 1 271 1 257 1 76 1 192 1 
253 7 314 1 271 7 285 2 315 1 363 1 286 1 42 1 257 6 76 1 45 1 224 1 289 1 192 2 375 2 332 1 49 3 237 1 279 1 64 1 135 3 
285 1 188 1 144 1 100 2 192 1 194 1 64 1 239 1 240 1 13 2 243 1 299 1 66 6 112 1 249 1 70 1 116 1 153 2 253 1 30 1 363 1 157 3 257 1 259 2 159 1 129 1 80 2 321 1 163 1 135 1 168 1 370 1 41 2 372 2 172 2 271 1 138 1 178 4 273 1 46 1 49 1 226 1 380 2 142 1 53 2 54 3 94 2 
186 1 253 1 119 2 4 1 57 1 257 1 209 2 98 1 127 1 213 1 214 1 148 2 62 1 267 1 135 2 293 1 371 1 14 2 271 1 373 1 222 3 87 2 248 1 375 1 23 3 52 1 205 1 307 1 
253 2 271 2 285 1 315 1 363 1 257 2 76 1 98 1 192 1 49 2 290 1 64 1 135 2 
253 4 271 4 285 1 257 4 140 1 192 1 375 1 263 1 49 1 79 1 217 1 64 1 135 1 
170 1 253 2 271 2 285 1 363 1 286 1 257 2 289 1 192 1 262 1 49 2 229 1 281 1 135 1 
375 1 253 1 49 1 326 1 271 1 257 1 269 1 143 1 160 1 192 1 
253 2 49 1 285 1 271 2 316 1 257 2 64 1 135 1 224 1 45 1 192 1 
253 5 271 5 285 2 257 4 140 1 224 1 192 2 375 1 263 1 332 1 49 2 79 1 279 1 281 1 64 1 135 3 
253 5 271 5 285 2 257 4 140 1 224 1 192 2 375 1 263 1 49 2 79 1 324 1 279 1 281 1 64 1 135 3 
13 1 253 1 172 2 285 1 243 1 271 1 138 1 363 1 257 1 210 1 100 2 192 1 249 1 375 1 49 1 226 1 239 1 135 1 
253 1 271 1 285 1 315 1 363 1 286 1 42 1 257 1 289 1 192 1 49 2 281 1 135 1 
171 1 172 1 201 1 378 1 162 1 82 1 239 1 100 1 184 1 
177 1 82 1 8 1 
13 1 201 1 378 1 132 1 82 1 
13 1 201 2 4 1 57 1 177 1 342 1 158 1 222 2 179 1 37 1 378 2 212 1 23 2 213 1 214 1 68 1 82 1 132 2 8 1 
40 1 236 1 25 1 258 1 
40 1 284 1 236 1 25 1 357 1 182 1 19 1 
357 1 92 1 270 1 
40 1 284 1 122 1 317 1 19 1 331 1 250 1 236 1 203 2 357 3 25 1 182 3 
40 1 313 1 284 1 236 1 25 1 357 2 115 1 182 2 19 1 
283 1 40 1 284 1 326 1 19 1 160 1 250 1 197 1 104 1 357 1 182 1 
40 1 284 1 250 1 25 1 357 1 182 1 19 1 
284 1 250 1 236 1 25 2 357 1 182 1 19 1 
40 1 284 2 19 2 377 1 250 1 354 1 25 1 357 2 105 1 182 2 
313 2 40 2 284 1 19 1 193 1 250 1 236 1 51 1 104 1 25 1 357 3 182 3 310 1 
40 1 313 1 284 1 326 1 19 1 160 2 250 1 236 1 197 1 228 1 323 1 25 1 357 2 182 2 269 1 
313 2 40 2 284 2 19 2 250 1 236 1 305 1 104 1 25 1 357 4 115 1 182 4 310 1 
40 1 284 1 250 1 236 1 25 1 357 1 182 1 19 1 
313 2 40 3 284 1 122 1 19 1 331 1 236 2 203 1 104 1 25 2 357 4 182 4 312 1 310 1 
40 1 313 1 284 1 156 1 19 1 35 1 250 1 236 1 25 1 357 2 182 2 11 1 
40 1 284 1 122 1 19 1 331 2 250 1 236 1 203 2 357 3 25 1 308 1 182 3 
40 2 3 1 71 2 111 1 
284 1 250 1 357 1 18 1 182 1 19 1 
40 1 313 1 193 1 284 1 250 1 236 1 25 1 357 2 182 2 19 1 
5 1 
40 1 284 1 250 1 236 1 25 1 357 1 182 1 19 1 
313 1 40 1 284 1 19 1 193 1 250 1 236 1 203 1 357 3 25 1 182 3 
40 1 104 1 312 1 310 1 
40 1 25 1 

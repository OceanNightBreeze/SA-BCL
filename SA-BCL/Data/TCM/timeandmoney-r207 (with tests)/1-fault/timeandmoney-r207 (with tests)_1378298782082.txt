#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) 234 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) (71,175) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (71,175) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (32,145,236,289) (32,145,236,289) (32,145,236,289) (71,175) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
173 1 224 1 44 1 
221 1 31 2 44 1 
188 2 25 2 258 1 100 2 41 2 151 2 35 1 178 2 
266 2 100 3 7 2 53 1 103 1 271 1 305 1 144 1 147 1 308 1 188 2 16 1 17 1 278 1 151 3 237 1 113 1 70 1 239 1 320 2 73 1 25 2 26 2 75 1 76 2 204 1 206 1 35 1 39 1 210 1 258 1 87 1 259 1 41 2 294 1 177 1 178 2 
188 1 25 1 300 1 100 1 41 1 162 1 151 1 304 1 35 1 178 1 
158 1 223 1 29 1 100 1 101 1 304 1 122 1 105 1 173 1 41 1 44 1 110 1 151 1 262 1 
25 1 223 1 29 2 100 1 101 1 304 1 122 2 105 1 173 1 188 1 41 1 44 1 110 1 151 1 178 1 
40 1 29 1 277 1 122 1 82 1 
173 1 254 1 29 2 44 1 277 1 37 1 122 2 82 1 
29 1 277 1 122 1 
44 1 
198 1 25 1 300 1 29 1 162 1 100 1 304 1 122 1 35 1 82 1 188 1 41 1 151 1 178 1 
173 1 254 1 29 2 44 1 277 1 208 1 122 2 82 1 
217 1 219 1 27 1 29 5 247 2 166 2 102 1 185 1 122 5 82 2 57 1 13 1 173 1 254 1 291 1 44 1 277 2 292 2 319 1 
309 1 60 1 21 1 
258 1 224 1 
25 1 100 2 268 1 188 1 258 2 41 2 293 1 151 2 178 1 
266 1 73 1 242 1 75 1 100 2 76 1 7 1 305 1 144 1 106 1 16 1 188 1 309 1 259 1 87 1 41 1 151 2 294 1 237 1 178 1 
106 1 188 3 25 1 258 1 100 3 41 3 151 3 178 3 
188 1 300 1 100 1 41 1 151 1 304 1 178 1 
188 1 25 1 100 1 41 1 268 1 293 1 151 1 304 1 178 1 
266 1 223 1 268 1 100 4 101 1 7 1 53 1 103 1 303 1 304 1 305 1 144 1 147 1 105 1 106 1 308 1 16 1 188 3 17 1 278 1 110 1 151 4 237 1 320 1 73 1 25 2 26 2 75 1 242 1 29 1 76 1 204 1 206 1 122 1 35 1 210 1 258 1 259 1 87 1 41 3 177 1 261 1 294 1 178 3 
106 1 188 1 258 1 322 1 100 2 41 2 151 2 262 1 178 1 
25 1 223 1 29 1 242 1 268 1 100 3 101 1 304 1 303 1 122 1 105 1 106 2 188 3 129 1 41 3 44 1 110 1 151 3 178 3 
106 1 188 2 309 1 25 1 100 2 41 2 268 1 21 1 151 2 178 2 
266 1 73 1 75 1 100 1 76 1 7 1 305 1 144 1 16 1 258 1 87 1 259 1 151 1 294 1 237 1 
266 1 73 1 284 1 100 1 76 1 7 1 144 1 16 1 258 1 87 1 259 1 151 1 294 1 237 1 318 1 
179 1 53 2 103 1 147 1 231 1 187 1 308 1 17 1 309 2 19 1 60 2 193 1 64 1 278 1 21 2 320 4 26 2 206 1 39 2 86 1 260 1 130 1 264 1 48 1 
188 1 223 1 100 1 41 1 151 1 213 1 304 1 178 1 
0 1 98 1 25 1 322 1 242 1 100 5 268 1 106 2 188 4 258 1 41 5 151 5 262 1 178 4 
188 2 300 1 100 2 41 2 213 1 151 2 304 1 178 2 
266 1 73 1 75 1 100 1 76 1 7 1 183 1 305 1 144 1 16 1 258 1 87 1 259 1 151 1 294 1 237 1 
195 1 297 1 
195 1 297 1 
5 1 250 1 
5 1 250 1 
5 1 250 1 
195 1 142 1 297 1 
195 1 142 1 297 1 
195 1 142 1 297 1 
195 1 279 1 297 1 
195 1 279 1 297 1 
195 1 279 1 297 1 
83 1 195 1 297 1 
126 1 5 1 62 1 195 2 250 1 297 2 
116 1 118 1 225 2 29 2 199 1 6 1 163 2 202 2 169 1 122 2 328 1 59 2 189 1 62 1 44 1 195 2 331 3 133 2 297 2 
157 1 29 1 225 1 100 2 227 1 163 1 207 1 122 1 56 1 83 1 15 1 172 1 188 2 189 1 59 1 258 1 41 2 195 1 151 2 331 1 133 1 297 1 178 2 115 1 
58 1 274 1 47 1 
58 1 10 1 274 1 
58 3 313 1 324 1 10 1 152 1 47 2 
58 2 324 1 111 1 10 1 152 1 47 1 
58 2 324 2 10 1 152 1 47 1 
217 1 221 1 140 2 269 2 227 1 102 2 192 1 193 1 277 1 109 1 64 1 115 1 157 1 29 5 31 3 247 1 164 1 165 1 166 1 120 2 122 5 82 4 254 1 173 1 86 1 257 1 291 3 90 1 44 2 130 1 292 1 263 1 
217 1 219 1 221 3 3 1 267 1 140 6 52 1 102 6 149 1 193 3 277 6 109 2 64 3 115 4 29 9 31 9 247 2 165 3 166 2 120 6 34 1 79 1 122 9 82 7 173 1 254 1 86 3 257 2 40 5 291 8 44 5 130 3 292 2 263 1 334 5 
219 1 221 2 140 2 269 1 102 2 193 1 109 1 64 1 115 1 29 3 31 4 247 1 164 1 166 1 165 1 120 2 122 3 82 2 173 1 86 1 257 1 291 3 44 3 90 1 292 1 130 1 
219 1 221 3 3 1 267 1 140 4 269 2 102 4 193 2 109 1 64 2 115 2 29 4 31 7 247 1 164 1 166 1 165 2 120 4 34 1 122 4 82 3 173 1 86 2 257 1 291 5 44 4 90 1 292 1 130 2 
224 1 237 1 168 1 
97 1 237 1 
92 1 
73 1 237 1 
136 1 73 1 168 2 237 3 273 1 144 1 
73 1 237 1 144 1 
203 1 237 1 
72 1 24 1 320 7 160 1 53 3 39 4 14 1 187 3 231 2 107 1 88 1 193 1 212 1 64 1 67 1 332 1 333 2 
72 1 24 1 320 7 160 1 53 3 39 4 14 1 187 3 231 2 107 1 88 1 193 1 212 1 64 1 67 1 332 1 333 2 
72 1 24 1 320 7 160 1 53 3 39 4 14 1 187 3 231 2 107 1 88 1 193 1 212 1 64 1 67 1 332 1 69 1 333 2 
53 15 103 1 306 1 147 1 146 1 107 2 14 5 187 10 231 5 17 1 193 4 64 4 67 1 66 1 155 1 24 1 72 2 320 31 160 1 26 2 249 4 167 3 165 3 206 1 170 1 253 1 39 16 86 3 88 1 212 2 130 3 295 1 332 2 333 3 
53 4 103 2 54 1 147 2 231 3 187 4 14 1 107 1 17 2 193 1 64 1 66 1 24 1 72 1 320 9 26 4 160 1 206 2 39 5 88 1 212 1 332 1 296 1 333 2 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 234 1 236 1 
145 1 289 1 329 1 175 1 236 1 
71 1 289 1 329 1 32 1 
145 1 289 1 329 1 175 1 236 1 
20 1 
266 2 100 1 7 2 101 1 9 1 270 1 184 2 102 2 105 1 277 6 110 1 280 2 281 1 282 1 283 1 29 5 31 2 119 2 122 5 209 1 127 2 290 2 291 2 42 2 41 1 44 2 292 1 294 2 131 1 217 1 221 2 138 1 299 1 223 1 302 1 304 1 55 4 312 1 151 1 237 1 158 1 73 1 321 1 76 2 247 1 166 1 325 1 80 2 173 1 254 3 255 1 257 1 87 1 259 1 262 1 
299 1 138 1 223 1 100 1 101 1 304 1 55 2 105 1 312 1 277 2 110 1 151 1 280 1 158 1 283 1 29 3 325 1 122 3 208 1 254 1 41 1 262 1 
299 1 138 1 223 1 100 1 101 1 304 1 184 1 55 3 105 1 312 1 277 1 110 1 151 1 158 1 283 1 29 3 325 1 122 3 208 1 173 1 254 1 41 1 44 1 262 1 
299 1 138 1 223 1 100 1 101 1 304 1 184 1 55 3 105 1 312 1 277 2 110 1 151 1 280 1 158 1 283 1 29 3 325 1 208 1 122 3 254 1 173 1 41 1 42 1 44 1 262 1 
217 1 221 2 299 1 138 1 223 1 100 1 101 1 226 1 270 1 102 1 184 4 304 1 55 6 229 1 307 1 105 1 312 1 277 7 110 1 151 1 280 4 158 1 282 1 283 1 29 5 247 1 119 2 166 1 205 1 325 1 208 1 122 5 80 2 288 1 173 5 254 3 127 2 290 2 291 1 41 1 42 4 44 5 292 1 262 1 
100 1 101 1 270 1 102 1 184 2 105 1 277 4 110 1 280 2 283 1 282 1 281 1 29 4 31 2 119 2 122 4 127 2 290 2 291 1 41 1 42 2 44 2 292 1 217 1 138 1 299 1 221 2 223 1 304 1 55 4 312 1 151 1 158 1 247 1 166 1 325 1 80 2 254 2 173 1 262 1 
217 1 221 2 299 1 138 1 223 1 100 1 101 1 270 1 184 2 102 1 304 1 55 4 229 1 307 1 105 1 312 1 277 4 110 1 151 1 280 2 158 1 282 1 283 1 29 4 247 1 119 2 166 1 325 1 205 1 122 4 80 2 173 1 254 2 127 2 290 2 291 1 42 2 41 1 44 1 292 1 262 1 
217 1 221 2 299 1 138 1 223 1 100 1 101 1 270 1 184 2 102 1 304 1 55 4 229 1 307 1 105 1 312 1 277 4 110 1 151 1 280 2 158 1 282 1 283 1 29 4 247 1 119 2 166 1 325 1 205 1 122 4 80 2 173 1 254 2 127 2 290 2 291 1 42 2 41 1 44 1 292 1 262 1 
217 1 299 1 138 1 223 1 100 1 101 1 184 2 102 1 304 1 55 4 229 1 105 1 232 1 312 1 276 1 277 4 110 1 151 1 280 2 158 1 282 1 283 1 200 2 29 4 31 2 247 1 119 2 166 1 326 2 325 1 122 4 173 1 254 2 290 2 291 1 42 2 43 1 41 1 44 1 292 1 262 1 
217 1 221 2 299 1 138 1 223 1 100 1 101 1 270 1 102 1 304 1 184 3 55 5 229 1 307 1 105 1 312 1 277 5 110 1 151 1 280 3 158 1 282 1 283 1 29 4 247 1 119 2 166 1 325 1 205 1 122 4 80 2 288 1 173 1 254 2 127 2 290 2 291 1 41 1 42 3 44 1 292 1 262 1 
217 1 221 2 299 1 138 1 223 1 100 1 101 1 270 1 102 1 304 1 184 3 55 5 229 1 307 1 105 1 312 1 277 5 110 1 151 1 280 3 158 1 282 1 283 1 29 4 247 1 119 2 166 1 325 1 205 1 122 4 80 2 288 1 173 1 254 2 127 2 290 2 291 1 41 1 42 3 44 1 292 1 262 1 
100 1 101 1 102 1 184 2 105 1 277 4 110 1 280 2 283 1 282 1 281 1 29 4 200 2 31 2 119 2 122 4 290 2 291 1 43 1 41 1 42 2 44 1 292 1 217 1 138 1 299 1 223 1 304 1 55 4 312 1 151 1 158 1 247 1 166 1 325 1 326 2 254 2 173 1 262 1 
224 1 53 3 103 1 147 1 107 1 231 2 187 2 308 1 309 1 17 1 19 1 60 1 193 1 21 1 278 1 64 1 24 1 72 1 320 6 26 2 160 1 206 1 39 3 258 2 88 1 333 1 
53 6 103 2 143 1 306 1 147 2 14 1 187 2 231 1 308 2 17 2 309 11 18 1 60 11 193 1 278 1 64 2 21 4 113 1 155 1 320 14 26 4 30 1 201 1 249 3 167 3 165 2 206 2 39 8 210 1 86 1 258 1 128 1 130 2 
266 1 100 2 7 1 53 1 183 1 103 1 305 1 144 1 147 1 106 1 16 1 308 1 188 1 17 1 21 1 278 1 151 2 237 1 113 1 153 1 73 1 320 2 26 2 75 1 242 1 76 1 206 1 84 1 39 1 210 1 258 1 259 1 87 1 128 1 41 1 91 1 294 1 178 1 
266 3 100 3 7 3 11 1 103 3 107 1 106 1 14 4 187 8 188 1 16 2 17 3 193 3 278 3 21 7 113 1 24 1 26 6 206 3 39 10 210 1 128 1 41 1 130 2 294 1 137 1 53 10 305 2 144 2 147 3 231 4 308 3 309 7 311 2 60 7 314 2 63 2 64 3 151 3 237 2 72 1 320 20 73 2 160 1 242 1 75 2 76 3 165 2 85 1 256 2 86 2 258 2 87 2 259 2 88 1 89 1 177 2 333 1 178 1 
320 2 26 2 103 1 206 1 147 1 39 2 187 1 14 1 308 1 309 1 17 1 260 1 60 1 19 1 21 1 278 1 130 1 64 1 
320 2 26 2 53 2 103 1 206 1 147 1 187 1 231 1 308 1 309 1 17 1 86 1 60 1 19 1 193 1 21 1 278 1 48 1 
53 2 103 1 147 1 14 1 187 2 231 1 308 1 17 1 309 2 19 1 60 2 193 1 64 1 278 1 21 2 320 4 26 2 165 1 206 1 39 2 86 1 130 1 
320 2 26 2 103 1 206 1 147 1 39 2 187 1 14 1 308 1 309 1 17 1 260 1 60 1 150 1 21 1 278 1 130 1 64 1 
320 2 26 2 53 2 103 1 206 1 147 1 187 1 231 1 308 1 309 1 17 1 86 1 60 1 150 1 193 1 21 1 278 1 48 1 
53 2 103 1 147 1 14 1 187 2 231 1 308 1 17 1 309 2 150 1 60 2 193 1 64 1 278 1 21 2 320 4 26 2 165 1 206 1 39 2 86 1 130 1 
53 2 103 1 147 1 14 1 187 2 231 1 308 1 17 1 309 2 60 2 193 1 64 1 278 1 21 2 320 4 26 2 165 1 206 1 39 2 86 1 130 1 
266 1 100 1 7 1 53 1 103 1 305 1 144 1 147 1 16 1 308 1 17 1 278 1 151 1 237 1 113 1 320 2 73 1 26 2 75 1 76 1 206 1 39 1 210 1 258 1 259 1 87 1 177 1 294 1 
266 1 100 1 7 1 53 1 103 1 144 1 147 1 16 1 308 1 17 1 278 1 151 1 237 1 113 1 318 1 320 2 73 1 26 2 284 1 76 1 206 1 39 1 210 1 258 1 259 1 87 1 294 1 214 1 
53 2 103 1 147 1 14 1 187 2 231 1 308 1 17 1 309 2 60 2 193 1 64 1 278 1 21 2 320 4 26 2 165 1 206 1 39 2 86 1 128 1 130 1 
266 1 100 1 7 1 53 2 103 1 305 1 144 1 230 1 147 1 231 1 187 2 14 1 16 1 308 1 309 2 17 1 311 1 60 2 193 1 21 2 64 1 278 1 151 1 237 1 320 4 73 1 26 2 75 1 76 1 165 1 206 1 39 2 86 1 259 1 87 1 130 1 177 1 
268 1 100 1 53 1 103 1 147 1 187 1 14 1 188 1 308 1 17 1 309 1 60 1 193 1 278 1 64 1 21 1 151 1 25 1 320 3 26 2 165 1 78 1 206 1 39 2 86 1 128 1 41 1 130 1 178 1 
96 1 266 8 100 1 7 7 9 1 53 1 103 2 271 2 230 1 147 2 106 1 188 1 308 2 17 2 233 1 19 1 150 1 278 2 151 1 237 3 113 1 320 2 73 2 26 4 74 1 244 1 76 8 286 1 206 2 209 1 39 1 85 1 174 1 210 1 259 2 87 2 41 1 294 2 178 1 
268 1 100 1 53 2 103 1 147 1 187 1 231 1 188 1 308 1 309 1 17 1 310 1 60 1 193 1 21 1 278 1 64 1 151 1 25 1 320 3 26 2 165 1 206 1 39 1 86 1 128 1 41 1 130 1 178 1 
181 1 103 3 187 8 14 4 107 1 17 3 193 5 194 1 112 1 22 2 114 1 23 1 24 1 26 6 285 1 206 3 39 20 130 4 296 1 53 21 306 1 147 3 231 4 148 1 64 5 316 1 65 1 66 1 68 4 155 3 72 1 159 1 320 41 160 1 243 1 249 4 165 4 167 3 86 4 88 1 330 1 333 1 94 1 
181 1 53 18 103 4 306 1 147 4 107 1 231 4 14 3 187 7 148 1 17 4 194 1 193 4 64 5 65 1 316 1 66 2 68 4 22 2 112 1 114 1 23 1 155 3 72 1 24 1 159 1 320 38 160 1 26 8 243 1 285 1 249 4 167 3 165 4 206 4 39 20 86 3 88 1 130 4 330 1 333 1 296 1 94 1 
181 1 53 25 103 2 306 2 147 2 107 1 231 7 14 7 187 14 17 2 194 1 193 8 64 8 316 1 66 1 68 4 22 1 112 1 114 1 23 1 155 2 72 1 24 1 159 1 320 52 160 1 26 4 243 1 285 1 201 2 249 4 167 4 165 7 206 2 39 27 86 7 88 1 130 7 330 1 333 1 296 1 94 1 
53 10 103 2 306 1 147 2 231 3 14 3 187 6 148 1 17 2 193 3 64 3 316 1 68 2 22 1 112 1 154 1 155 1 159 1 320 19 26 4 249 2 167 1 165 3 206 2 39 9 86 3 130 3 330 2 296 1 94 1 
181 1 53 12 103 3 147 3 14 2 187 4 231 2 17 3 193 2 194 1 64 3 316 1 66 2 68 4 22 2 112 1 114 1 23 1 155 2 159 1 320 26 26 6 243 1 285 1 249 2 167 2 165 3 206 3 39 14 86 2 130 3 330 1 296 1 94 2 
116 1 59 1 225 1 62 1 163 1 195 1 169 1 297 1 133 1 252 1 
116 1 29 1 225 1 199 1 6 1 163 1 202 1 169 1 122 1 328 1 189 1 59 1 62 1 44 1 195 1 331 2 133 1 297 1 
116 1 29 1 225 1 199 1 6 1 163 1 202 1 169 1 122 1 328 1 189 1 59 1 62 1 44 1 195 1 331 2 133 1 297 1 
116 1 29 1 225 1 199 1 6 1 163 1 202 1 169 1 122 1 328 1 189 1 59 1 62 1 44 1 195 1 331 2 133 1 297 1 
126 1 315 1 142 1 
126 1 315 1 142 1 
61 1 279 1 
126 1 61 1 279 1 
15 1 56 1 
218 1 225 1 100 2 227 1 56 1 15 1 188 2 59 1 195 1 151 2 115 1 157 1 199 1 29 1 202 1 163 1 122 1 207 1 82 1 83 1 172 1 258 1 41 2 331 1 297 1 133 1 178 2 
315 1 142 1 
126 1 61 1 279 1 
83 1 207 1 
59 1 241 1 191 1 225 1 163 1 195 1 272 1 297 1 133 1 
266 2 2 1 100 2 7 2 141 1 53 1 103 1 271 2 147 1 308 1 17 1 278 1 151 2 237 1 113 1 156 1 73 1 320 2 26 2 74 1 76 2 33 1 206 1 38 1 39 1 174 1 210 1 259 1 87 1 128 1 41 2 
266 1 139 1 51 1 76 1 246 1 7 1 248 1 10 1 274 1 58 2 85 1 108 1 259 1 87 1 313 1 132 1 47 1 49 1 
266 2 139 1 51 1 76 2 246 1 7 2 248 1 10 1 274 1 230 1 58 2 85 1 108 1 259 1 87 1 313 1 132 1 47 1 49 1 
266 1 139 1 51 1 76 1 246 1 7 1 8 1 10 1 274 1 58 2 85 1 108 1 87 1 259 1 313 1 47 1 49 1 
266 1 1 1 73 1 99 1 76 1 7 1 248 1 9 1 209 1 259 1 87 1 294 1 237 1 49 1 
235 1 
173 1 224 1 291 1 44 1 102 1 185 1 319 1 
217 1 221 1 29 1 31 1 247 1 166 1 270 1 102 1 122 1 80 1 173 1 254 1 127 1 291 1 277 1 44 2 292 1 
266 3 97 3 7 3 185 1 273 1 102 8 190 2 193 2 277 5 110 2 196 2 29 5 31 12 203 2 120 6 122 5 124 2 125 1 291 9 44 8 292 4 130 2 294 1 45 2 298 1 217 4 220 1 221 6 222 2 140 6 144 3 230 1 63 2 64 2 317 1 237 10 319 1 73 3 76 3 245 2 247 4 166 4 165 2 168 2 173 2 254 3 255 1 257 2 86 2 259 4 87 3 176 1 93 2 95 2 
217 2 181 1 221 3 140 5 12 1 102 5 194 1 193 2 277 1 64 2 114 1 155 1 29 1 243 1 285 1 31 6 77 1 247 2 249 1 166 2 167 1 165 2 120 5 122 1 254 1 173 2 255 1 257 1 86 2 291 8 44 5 292 2 130 2 45 2 95 1 
216 1 217 1 300 1 100 1 304 1 102 2 307 1 107 1 188 1 193 1 64 2 151 1 72 1 198 1 25 1 160 1 29 1 162 1 247 1 166 1 122 1 35 1 291 2 41 1 292 1 45 2 178 1 95 1 
266 1 100 3 7 1 53 1 103 1 305 1 144 1 147 1 188 2 16 1 308 1 17 1 278 1 151 3 237 1 320 1 25 2 73 1 26 2 75 1 76 1 204 1 206 1 35 1 210 1 258 1 87 1 259 1 41 2 294 1 177 1 178 2 
217 1 221 2 140 2 31 4 247 1 166 1 120 2 102 2 173 2 257 1 255 1 291 1 44 4 292 1 333 1 
221 5 140 5 31 10 165 2 102 5 120 5 86 2 291 5 193 2 44 5 63 1 130 2 64 2 45 2 95 1 
217 1 173 1 291 1 44 1 247 1 292 1 166 1 102 1 185 1 319 1 
173 1 254 1 29 1 44 1 277 1 122 1 
266 4 217 1 219 1 302 1 7 4 9 1 102 2 277 4 317 2 237 1 73 1 28 1 29 3 76 4 247 2 166 2 122 3 209 1 254 2 257 2 255 2 259 1 87 1 291 2 292 2 131 1 294 2 46 1 298 1 
59 1 163 1 197 1 
59 1 163 1 197 1 
59 1 163 1 197 1 
59 1 163 1 275 1 
59 1 163 1 275 1 
59 1 163 1 275 1 
59 1 163 1 
195 1 297 1 
116 1 15 1 59 1 163 1 186 1 
24 1 72 1 320 8 160 1 26 4 53 4 103 2 206 2 39 4 147 2 14 1 187 3 231 2 107 1 17 2 88 1 193 1 64 1 66 1 333 1 
39 3 187 2 231 2 72 1 107 1 24 1 320 6 160 1 224 1 88 1 193 1 64 1 53 3 333 1 
320 4 26 2 53 2 165 1 103 1 206 1 171 1 147 1 39 2 231 1 187 2 14 1 86 1 17 1 193 1 130 1 64 1 
320 7 249 2 53 4 167 1 165 1 306 1 39 3 231 1 14 1 187 2 86 1 193 1 130 1 64 1 155 1 
215 1 53 12 103 2 306 1 147 2 107 2 187 9 14 4 231 5 17 2 18 1 193 3 64 3 66 2 72 2 24 1 320 23 160 1 26 4 249 2 201 1 165 2 167 2 206 2 39 11 86 2 88 1 130 2 333 1 
320 1 249 1 53 1 
39 1 320 1 167 1 
320 6 26 2 53 3 165 1 103 1 206 1 171 1 147 1 39 3 14 1 187 3 231 2 17 1 86 1 193 1 63 1 130 1 64 1 
181 1 53 6 103 1 147 1 14 1 231 1 187 2 17 1 194 1 193 2 64 2 114 1 155 1 320 12 26 2 285 1 243 1 249 1 167 1 165 2 206 1 39 6 86 2 130 2 296 1 
72 1 320 6 160 1 53 3 39 3 107 1 231 1 187 2 14 1 193 1 64 1 
215 1 72 1 24 1 320 3 26 2 53 2 103 1 206 1 39 1 147 1 14 1 187 2 231 1 107 1 17 1 88 1 66 1 
181 1 53 4 103 1 147 1 107 1 231 2 187 2 17 1 193 1 64 1 155 1 24 1 72 1 320 8 26 2 160 1 249 1 167 1 206 1 39 4 88 1 333 1 296 1 
181 1 53 5 103 2 306 1 147 2 231 2 107 1 14 1 187 3 17 2 193 1 64 2 155 1 72 1 24 1 320 11 160 1 26 4 249 2 167 1 165 1 206 2 171 1 39 6 88 1 130 1 333 1 296 1 
181 1 53 10 103 3 147 3 107 1 14 1 231 3 187 4 17 3 194 1 193 3 64 3 66 1 114 1 155 1 72 1 24 1 320 19 160 1 26 6 243 1 285 1 249 1 167 1 165 2 206 3 171 1 39 9 86 2 88 1 130 2 333 1 296 1 
181 1 53 7 103 3 147 3 107 1 14 2 231 3 187 5 17 3 194 1 193 2 64 3 66 1 114 1 155 1 72 1 24 1 320 17 160 1 26 6 285 1 243 1 249 1 167 1 165 2 206 3 171 1 39 10 86 1 88 1 130 2 333 1 296 1 
181 1 53 4 103 1 147 1 107 1 231 2 187 2 17 1 193 1 64 1 155 1 24 1 72 1 320 8 26 2 160 1 249 1 167 1 206 1 39 4 88 1 333 1 296 1 
181 1 53 6 103 1 147 1 14 1 231 1 187 2 17 1 194 1 193 2 64 2 114 1 155 1 320 12 26 2 285 1 243 1 249 1 167 1 165 2 206 1 39 6 86 2 130 2 296 1 
181 1 53 8 103 4 147 4 107 1 14 2 231 3 187 5 17 4 194 1 193 2 64 3 66 2 114 1 155 1 72 1 24 1 320 18 160 1 26 8 243 1 285 1 249 1 167 1 165 2 206 4 171 1 39 10 86 1 88 1 130 2 333 1 296 1 
181 1 53 7 103 4 147 4 14 3 231 3 187 6 148 1 17 4 194 1 193 2 64 3 66 2 114 1 155 1 320 16 26 8 243 1 285 1 249 1 167 1 165 3 206 4 39 9 86 2 130 3 296 1 
24 1 72 3 320 7 160 1 53 4 39 3 107 3 231 3 187 6 14 3 88 2 193 1 64 1 
181 1 53 8 103 4 147 4 107 1 14 1 231 3 187 4 148 1 17 4 194 1 193 2 64 3 66 2 114 1 155 1 72 1 24 1 320 18 160 1 26 8 243 1 285 1 249 1 167 1 165 2 206 4 39 10 86 1 88 1 130 2 333 1 296 1 
320 2 26 2 103 1 206 1 147 1 39 2 14 1 187 1 17 1 130 1 64 1 296 1 
320 4 26 2 53 2 165 1 103 1 206 1 147 1 39 2 231 1 187 2 14 1 86 1 17 1 193 1 130 1 64 1 296 1 
215 1 72 1 320 3 26 6 53 2 103 3 206 3 147 3 39 1 107 1 231 1 187 2 14 1 148 1 17 3 66 1 296 1 
215 1 53 18 103 5 306 1 146 1 147 5 107 3 14 5 187 12 231 7 148 1 17 5 193 5 64 5 66 2 155 1 72 3 24 1 320 34 160 2 26 10 249 4 167 3 165 3 170 1 206 5 171 1 39 16 86 3 88 1 130 3 295 1 333 1 296 1 
216 1 72 2 320 10 26 2 160 1 53 5 103 1 206 1 147 1 39 5 107 2 231 3 187 5 14 2 17 1 193 2 64 2 296 1 
180 1 258 1 322 1 100 1 41 1 151 1 262 1 
180 1 4 1 322 1 301 1 100 1 123 1 228 1 251 1 258 1 41 1 151 1 262 1 
266 1 58 1 108 1 259 1 87 1 76 1 7 1 10 1 294 1 274 1 
266 2 73 1 76 2 7 2 141 1 230 1 85 1 174 1 87 1 259 1 237 1 
266 1 73 1 259 1 87 1 224 1 76 1 7 1 9 1 294 1 237 1 209 1 
266 1 73 1 100 2 76 1 7 1 305 1 144 1 106 1 16 1 188 1 258 1 259 1 87 1 41 1 151 2 294 1 237 1 178 1 
266 1 223 1 222 1 100 2 7 1 304 1 305 1 144 2 105 1 106 1 188 1 16 1 151 2 317 1 237 3 73 2 76 1 203 1 258 1 87 1 259 1 41 2 178 2 
266 2 223 1 222 1 100 2 7 2 304 1 144 2 105 1 106 1 188 1 16 1 151 2 317 1 237 3 73 2 284 1 76 2 203 1 287 1 258 1 87 1 259 1 41 2 178 2 
266 3 97 1 222 1 7 3 144 1 277 1 110 1 237 4 317 1 117 1 73 1 29 2 161 1 76 3 203 1 168 1 287 1 122 2 173 1 87 1 259 1 44 1 294 1 
266 3 97 1 73 1 222 1 29 2 76 3 7 3 203 1 168 1 287 1 122 2 144 1 124 1 173 1 259 1 87 1 44 1 277 1 110 1 294 1 317 1 237 4 
266 1 259 1 87 1 233 1 76 1 7 1 
96 1 266 7 73 2 244 1 76 7 286 1 7 6 271 1 273 1 121 1 144 1 230 1 85 1 174 1 87 2 259 3 233 1 211 1 294 2 237 3 238 1 
266 1 2 1 100 2 7 1 103 2 106 1 107 1 187 2 188 1 16 1 17 2 193 1 21 1 278 2 24 1 26 4 206 2 39 3 128 1 41 1 53 3 305 1 144 1 230 1 147 2 231 2 308 2 309 1 311 1 60 1 64 1 151 2 237 1 72 1 73 1 320 6 160 1 75 1 76 1 256 1 87 1 259 1 258 2 88 1 177 1 333 1 178 1 
266 1 217 2 97 1 7 1 102 1 185 1 190 1 277 2 110 1 196 1 237 2 319 1 29 3 76 1 247 2 166 2 168 1 122 3 124 1 82 1 173 1 254 1 291 1 44 1 292 2 294 1 93 1 298 1 
266 2 73 1 76 2 7 2 168 1 273 1 144 1 230 1 125 1 87 1 259 2 233 1 237 2 
266 4 73 1 76 4 7 4 9 1 327 1 287 1 209 1 230 1 259 1 87 1 294 1 237 1 
266 2 50 1 73 1 76 2 7 2 11 1 121 1 36 1 144 1 87 1 259 2 317 1 237 1 238 1 
266 1 73 1 284 1 100 2 76 1 7 1 144 1 106 1 16 1 188 1 258 1 259 1 87 1 41 1 151 2 294 1 237 1 178 1 
266 1 73 1 76 1 7 1 273 1 121 1 144 1 87 1 259 2 211 1 317 1 237 1 238 1 
266 5 73 2 244 1 76 5 7 4 286 1 9 1 327 1 209 1 230 1 174 1 87 2 259 2 294 1 317 1 237 3 
266 5 73 2 76 5 7 4 286 1 9 1 327 1 209 1 104 1 230 1 174 1 87 2 259 2 294 1 317 1 237 3 
100 1 33 1 323 1 38 1 41 1 151 1 134 1 265 1 156 1 
135 1 134 1 81 1 
240 1 258 1 323 1 134 1 265 1 
135 1 240 2 223 1 29 2 182 1 101 1 323 2 304 1 303 1 122 2 81 1 82 1 105 1 173 1 258 1 44 1 110 1 134 1 265 2 

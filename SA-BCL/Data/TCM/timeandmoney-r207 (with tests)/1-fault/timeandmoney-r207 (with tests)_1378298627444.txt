#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 5 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 5 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
146 1 35 2 13 2 313 1 222 1 223 3 354 1 135 1 380 1 125 2 320 1 112 1 323 3 
24 2 69 1 222 1 223 9 72 1 344 1 346 1 125 2 326 1 258 1 79 1 146 2 35 5 103 2 13 2 181 1 313 4 354 6 375 1 65 1 135 1 380 1 319 1 218 2 320 1 112 3 323 9 160 2 
24 2 69 1 222 1 223 9 72 1 344 1 346 1 125 2 326 1 258 1 79 1 146 2 35 5 103 2 13 2 181 1 313 4 354 6 375 1 65 1 135 1 380 1 319 1 218 2 320 1 112 3 323 9 160 2 
24 2 69 1 222 1 223 10 72 1 344 1 346 1 125 2 326 1 258 1 79 1 146 2 35 6 103 2 13 2 181 1 313 5 354 7 375 1 65 1 135 1 380 1 319 1 218 2 320 1 112 4 323 10 160 2 
24 2 69 1 222 1 223 7 72 1 344 1 346 1 125 2 326 1 258 1 79 1 146 2 35 4 103 1 13 2 181 1 313 3 354 4 375 1 65 1 135 1 380 1 218 2 320 1 112 2 323 7 160 2 
35 3 103 2 24 1 13 1 313 2 223 4 354 3 375 1 135 1 380 1 319 1 125 1 218 1 112 1 320 1 326 1 160 1 323 4 
35 1 146 1 13 1 24 1 223 2 72 1 138 1 302 1 135 1 380 1 309 1 125 1 320 1 79 1 323 2 160 1 
69 1 24 1 222 1 223 9 125 2 326 1 101 1 146 1 35 5 103 2 13 2 181 1 313 4 354 7 375 1 135 1 380 1 319 1 218 1 112 3 41 1 320 1 323 9 160 1 
69 1 24 1 222 1 223 9 125 2 326 1 101 1 146 1 35 5 103 2 13 2 181 1 313 4 354 7 375 1 135 1 380 1 319 1 218 1 112 3 41 1 320 1 323 9 160 1 
0 1 119 1 261 1 276 1 304 1 38 1 123 1 53 1 308 1 334 1 232 1 335 1 44 1 178 1 
166 1 
162 1 123 2 53 1 166 1 201 1 168 1 360 1 276 2 
162 2 1 1 196 1 128 1 166 1 201 1 183 1 14 1 224 2 168 1 276 5 73 2 27 1 345 1 123 5 53 2 56 1 322 1 9 2 
166 1 201 1 5 1 
166 1 99 1 343 2 
0 2 239 1 38 2 232 2 261 2 335 2 44 1 178 2 
0 3 116 1 163 1 220 1 165 1 299 1 25 2 120 1 51 1 30 1 369 1 76 1 232 2 100 1 178 3 236 1 36 1 105 1 106 2 261 2 374 1 210 1 239 1 38 2 265 1 241 1 86 2 214 1 333 1 335 2 192 1 321 2 19 1 268 2 43 1 44 1 294 1 
0 1 304 1 38 1 119 1 334 1 232 1 261 1 335 1 44 1 178 1 
0 1 166 1 201 1 261 1 276 1 187 1 37 1 304 1 123 1 240 1 216 1 78 1 80 1 178 1 
0 1 166 1 201 1 261 1 276 2 187 1 37 1 38 1 304 1 123 2 240 1 232 1 335 1 80 1 178 1 
140 1 162 1 123 1 53 1 276 1 
202 1 162 1 123 2 53 1 166 1 201 1 168 1 276 2 
162 1 123 1 276 1 
0 2 363 1 261 2 316 1 38 1 239 2 232 1 335 1 178 2 
29 1 174 1 226 1 
0 1 116 1 36 1 68 1 106 1 220 1 165 1 25 1 374 1 210 1 120 1 239 1 321 1 19 1 294 1 178 1 
116 1 0 2 36 1 106 1 220 1 165 1 261 1 25 1 226 1 167 1 109 1 374 1 120 1 210 1 232 1 335 1 321 1 19 1 294 1 178 2 
239 1 5 1 
0 3 38 1 239 1 232 3 261 3 335 3 167 1 178 3 
0 1 304 1 334 1 232 1 261 1 335 1 178 1 
0 1 363 1 304 1 38 1 232 1 261 1 335 1 316 1 178 1 
116 1 0 4 363 1 163 1 220 1 165 1 299 1 25 1 167 1 120 1 276 1 51 1 304 1 30 1 123 1 369 1 231 1 204 1 232 3 100 1 80 1 178 4 236 1 36 1 105 1 106 1 261 3 374 1 109 1 210 1 187 1 37 1 239 1 38 2 240 1 241 1 86 1 214 1 335 3 321 1 19 1 268 2 294 1 44 1 
0 2 239 1 216 1 232 1 261 2 335 1 167 1 194 1 178 2 
0 3 363 1 166 1 261 3 167 2 109 1 276 1 37 1 187 1 38 1 304 1 254 1 123 1 231 1 240 1 232 3 335 3 80 1 178 3 
0 2 363 1 261 2 167 1 226 1 29 1 38 1 232 2 335 2 178 2 
0 1 116 1 36 1 106 1 220 1 165 1 25 1 374 1 210 1 120 1 239 1 321 1 19 1 294 1 178 1 
0 1 116 1 106 1 341 1 220 1 165 1 25 1 210 1 120 1 239 1 321 1 233 1 19 1 294 1 178 1 
325 1 299 1 226 2 29 2 30 1 369 1 174 2 76 2 124 1 126 1 347 1 145 1 100 1 127 1 284 1 236 1 262 1 266 1 241 2 214 1 86 4 90 1 268 2 359 1 
0 1 187 1 304 1 122 1 232 1 261 1 335 1 178 1 
0 5 363 1 71 1 261 5 167 2 109 1 154 1 38 1 239 1 216 1 232 4 335 4 194 1 178 5 
0 2 304 1 122 1 334 1 232 2 261 2 335 2 178 2 
189 1 75 1 153 1 
207 1 75 2 98 1 153 2 45 1 91 1 
75 1 153 1 
75 1 153 1 
45 1 91 1 
45 1 91 1 
45 1 91 1 
75 1 209 1 153 1 
75 1 209 1 153 1 
75 1 209 1 153 1 
52 1 75 1 153 1 
52 1 75 1 153 1 
52 1 75 1 153 1 
237 1 3 1 46 2 166 1 153 2 303 2 276 2 186 1 171 2 280 2 97 2 212 1 123 2 267 3 75 2 98 1 327 1 336 1 243 1 
0 2 46 1 275 1 303 1 276 1 97 1 280 1 123 1 75 1 232 2 371 1 178 2 179 1 237 1 12 1 286 1 261 2 153 1 239 1 189 1 267 1 335 2 113 1 159 1 
330 2 200 1 309 1 218 1 160 2 
24 1 218 1 160 1 
24 1 309 1 160 1 
330 1 200 1 309 1 218 2 87 1 160 3 
330 1 200 1 309 1 218 1 160 2 185 1 
162 1 196 2 201 1 166 2 275 1 224 1 343 3 168 1 73 1 276 5 345 3 123 5 53 4 145 1 99 1 348 1 9 1 371 1 284 1 206 1 12 1 329 1 373 2 150 1 128 1 355 1 262 1 63 1 293 2 90 1 161 2 247 1 
162 6 272 1 196 6 201 1 166 5 224 2 343 9 168 1 276 9 73 2 140 5 345 8 255 1 123 9 53 7 32 5 33 1 145 3 99 3 348 2 257 1 371 4 9 2 284 3 150 1 128 1 14 1 355 2 108 1 262 3 40 1 293 6 90 3 161 6 247 3 
196 2 201 1 166 3 224 1 343 4 73 1 276 3 345 3 123 3 53 2 145 1 99 2 348 1 9 1 371 1 284 1 329 1 373 1 14 1 355 1 262 1 63 1 293 2 90 1 247 1 161 2 
272 1 196 4 201 1 166 4 224 1 343 7 73 1 276 4 345 5 123 4 53 3 145 2 99 3 348 1 9 1 371 2 284 2 329 1 373 2 14 1 355 1 108 1 262 2 63 1 40 1 293 4 90 2 161 4 247 2 
164 1 
279 1 220 1 5 1 
277 1 220 1 
220 1 19 1 
132 1 279 2 259 1 220 3 19 1 120 1 
220 1 19 1 120 1 
219 1 220 1 
340 2 118 2 169 1 74 2 370 1 76 8 124 5 127 4 147 1 82 1 284 3 290 1 291 2 262 3 377 1 84 1 241 6 86 14 114 1 
249 1 340 3 118 3 367 3 4 1 299 1 169 1 305 1 30 1 74 2 369 1 370 1 76 21 124 14 145 3 127 7 147 1 82 2 284 6 372 1 151 1 290 1 291 3 262 6 377 7 188 1 241 19 86 40 214 1 89 4 17 1 114 2 90 3 268 2 247 3 
273 1 340 2 118 2 225 1 299 2 169 1 30 2 74 2 369 2 370 1 76 9 124 7 127 5 284 3 82 1 290 1 262 3 291 2 377 2 188 1 241 7 214 2 86 16 114 1 268 4 
340 2 118 2 169 1 74 2 370 1 76 8 124 5 127 4 147 1 82 1 284 3 290 1 291 2 262 3 377 1 241 6 86 14 114 1 
340 2 118 2 169 1 74 2 370 1 76 8 124 7 127 4 147 1 82 1 284 3 290 1 291 2 262 3 377 3 241 6 86 14 114 1 
70 2 220 1 165 1 25 1 223 1 170 2 252 1 121 1 142 1 125 1 146 2 13 1 106 1 129 1 210 1 110 1 191 1 321 1 19 1 21 1 294 1 338 2 323 1 
364 1 24 1 70 1 165 1 25 1 223 1 170 1 309 1 125 1 146 1 205 1 13 1 106 1 111 1 190 1 218 1 67 1 87 1 321 1 320 1 115 1 338 1 323 1 246 1 294 1 160 2 
364 1 24 1 70 1 165 1 25 1 223 2 170 1 309 1 125 1 35 1 146 1 13 1 106 1 354 1 288 1 111 1 190 1 135 1 380 1 218 1 67 1 87 1 321 1 320 1 115 1 338 1 323 2 246 1 294 1 160 2 
364 1 195 1 24 1 70 1 165 1 25 1 223 3 170 1 309 1 125 1 35 1 146 1 205 1 13 1 106 1 129 1 354 2 111 1 135 1 380 1 218 1 87 1 67 1 321 1 115 1 338 1 323 3 246 1 294 1 160 2 
364 1 195 1 24 1 70 1 165 1 25 1 223 2 170 1 309 1 35 1 146 1 205 1 106 1 354 2 111 1 135 1 380 1 67 1 87 1 218 1 321 1 338 1 323 2 294 1 160 2 
158 1 
0 1 196 2 94 1 201 1 343 2 49 1 345 2 304 1 141 2 306 1 99 2 9 1 106 2 314 1 261 1 152 1 355 1 210 2 263 2 213 2 216 1 321 2 19 1 21 1 20 1 361 1 117 1 162 6 220 1 166 2 165 1 224 1 25 2 168 3 276 5 73 1 229 1 230 2 278 1 123 5 175 2 78 1 80 1 178 1 285 4 128 1 184 2 187 1 37 1 240 1 191 1 381 1 337 2 136 1 294 1 
0 1 162 2 94 1 168 1 276 3 229 1 304 1 306 1 141 1 123 3 78 1 80 1 178 1 285 2 314 1 261 1 187 1 37 1 240 1 216 1 136 1 360 1 
0 1 162 1 94 1 201 1 166 1 168 1 276 3 229 1 304 1 306 1 123 3 175 1 78 1 80 1 178 1 285 3 314 1 261 1 187 1 37 1 240 1 216 1 136 1 360 1 
0 1 162 2 94 1 201 1 166 1 168 1 276 3 229 1 304 1 306 1 141 1 123 3 175 1 78 1 80 1 178 1 285 3 314 1 261 1 187 1 37 1 240 1 213 1 216 1 136 1 360 1 
0 1 93 1 196 1 94 1 201 5 304 1 345 1 141 4 306 1 99 2 9 1 208 1 314 1 261 1 60 1 263 2 213 4 216 1 20 1 360 1 162 7 166 5 224 1 168 3 276 5 73 1 229 1 230 2 123 5 175 4 78 1 80 1 178 1 81 1 285 6 128 1 184 2 37 1 187 1 240 1 381 1 337 2 244 1 136 1 
0 1 196 1 94 1 201 1 343 2 304 1 345 1 306 1 141 2 99 2 9 1 314 1 261 1 263 2 213 2 216 1 20 1 117 1 162 4 166 2 224 1 168 2 276 4 73 1 229 1 230 2 123 4 175 2 78 1 80 1 178 1 285 4 128 1 184 2 37 1 187 1 240 1 381 1 337 2 136 1 
0 1 162 4 93 1 196 1 94 1 166 1 201 1 224 1 168 2 276 4 73 1 229 1 345 1 304 1 141 2 230 2 306 1 123 4 175 2 99 2 78 1 80 1 9 1 178 1 81 1 285 4 208 1 128 1 314 1 184 2 261 1 263 2 187 1 37 1 240 1 213 2 216 1 381 1 337 2 20 1 136 1 
0 1 162 4 93 1 196 1 94 1 166 1 201 1 224 1 168 2 276 4 73 1 229 1 345 1 304 1 141 2 230 2 306 1 123 4 175 2 99 2 78 1 80 1 9 1 178 1 81 1 285 4 208 1 128 1 314 1 184 2 261 1 263 2 187 1 37 1 240 1 213 2 216 1 381 1 337 2 20 1 136 1 
0 1 162 4 196 1 94 1 47 1 166 1 201 1 224 1 168 2 343 2 276 4 73 1 228 2 229 1 139 1 345 1 304 1 141 2 306 1 123 4 175 2 78 1 8 2 80 1 9 1 178 1 285 4 208 1 128 1 314 1 184 2 261 1 187 1 37 1 240 1 213 2 66 1 216 1 381 1 337 2 136 1 
0 1 162 5 93 1 196 1 94 1 166 1 201 1 224 1 168 2 73 1 276 4 229 1 345 1 304 1 230 2 306 1 141 3 123 4 175 3 99 2 78 1 9 1 80 1 178 1 81 1 285 5 208 1 128 1 314 1 184 2 261 1 60 1 263 2 187 1 37 1 240 1 213 3 216 1 381 1 337 2 20 1 136 1 
0 1 162 5 93 1 196 1 94 1 166 1 201 1 224 1 168 2 73 1 276 4 229 1 345 1 304 1 230 2 306 1 141 3 123 4 175 3 99 2 78 1 9 1 80 1 178 1 81 1 285 5 208 1 128 1 314 1 184 2 261 1 60 1 263 2 187 1 37 1 240 1 213 3 216 1 381 1 337 2 20 1 136 1 
0 1 117 1 162 4 196 1 94 1 166 1 201 1 224 1 168 2 343 2 73 1 276 4 228 2 229 1 345 1 304 1 141 2 306 1 123 4 175 2 78 1 8 2 9 1 80 1 178 1 285 4 128 1 314 1 184 2 261 1 187 1 37 1 240 1 213 2 216 1 66 1 381 1 337 2 136 1 
0 1 197 1 220 3 165 2 25 7 299 2 167 1 51 1 30 2 369 2 232 1 76 1 126 1 100 2 10 1 282 1 178 1 205 1 236 2 351 1 106 8 288 1 261 1 210 2 265 1 379 1 318 1 241 1 214 2 86 2 333 2 191 1 335 1 321 8 19 2 268 4 21 1 294 2 92 1 
0 1 363 1 299 1 226 1 253 1 29 1 30 1 369 1 174 1 124 1 232 1 76 1 127 1 100 1 176 1 145 1 178 1 284 1 236 1 261 1 262 1 38 1 241 2 214 1 86 3 335 1 90 1 268 2 247 1 
284 1 236 1 340 1 118 1 299 1 5 1 291 1 262 1 169 1 239 2 30 1 74 1 369 1 241 2 86 5 214 1 370 1 76 3 124 2 126 1 127 2 100 1 268 2 
249 1 367 3 299 2 226 11 51 1 305 1 29 4 30 2 369 2 174 11 124 2 76 8 127 1 144 1 100 1 176 1 145 1 284 1 236 2 287 1 262 2 377 1 239 1 265 1 241 6 214 2 86 14 89 3 18 1 90 2 268 4 269 1 247 2 
116 1 0 2 68 1 220 1 165 1 25 1 299 1 167 1 120 1 51 1 29 1 30 1 369 1 232 1 76 1 100 1 176 1 178 2 283 1 36 1 102 1 236 1 106 1 261 1 374 1 109 1 210 1 62 1 239 1 265 1 241 1 214 1 86 2 321 1 335 1 19 1 268 2 294 1 
0 3 340 2 298 1 299 3 342 1 301 2 51 1 304 1 100 3 145 2 310 2 105 2 106 1 107 2 261 1 317 1 109 1 210 1 262 5 265 1 214 3 321 1 19 2 268 6 116 2 23 2 220 2 118 2 165 2 25 1 167 1 226 6 169 1 120 2 29 6 30 3 74 2 369 3 370 1 174 6 124 7 232 1 76 14 176 1 127 6 178 3 284 5 236 3 36 2 374 2 290 1 291 1 377 1 239 3 241 13 86 27 335 1 90 2 294 2 247 2 
236 1 299 1 226 1 262 1 377 1 29 1 30 1 369 1 174 1 86 2 214 1 124 1 76 2 126 1 347 1 100 1 90 1 268 2 
284 1 236 1 299 1 226 1 29 1 30 1 369 1 266 1 241 2 174 1 86 2 214 1 124 1 126 1 127 1 100 1 145 1 268 2 
299 1 226 2 29 2 30 1 369 1 174 2 76 2 124 2 126 1 100 1 145 1 127 1 284 1 236 1 262 1 377 1 241 2 214 1 86 4 90 1 268 2 247 1 
236 1 197 1 299 1 226 1 262 1 377 1 29 1 30 1 369 1 174 1 86 2 214 1 124 1 76 2 347 1 100 1 90 1 268 2 
284 1 236 1 197 1 299 1 226 1 29 1 30 1 369 1 266 1 241 2 174 1 86 2 214 1 124 1 127 1 100 1 145 1 268 2 
197 1 299 1 226 2 29 2 30 1 369 1 174 2 76 2 124 2 100 1 145 1 127 1 284 1 236 1 262 1 377 1 241 2 214 1 86 4 90 1 268 2 247 1 
299 1 226 2 29 2 30 1 369 1 174 2 76 2 124 2 100 1 145 1 127 1 284 1 236 1 262 1 377 1 241 2 86 4 214 1 90 1 268 2 247 1 
116 1 0 1 220 1 165 1 25 1 299 1 120 1 51 1 30 1 369 1 76 1 100 1 178 1 36 1 236 1 105 1 106 1 374 1 210 1 239 1 265 1 241 1 86 2 214 1 321 1 19 1 268 2 294 1 
116 1 0 1 341 1 220 1 165 1 25 1 299 1 120 1 51 1 30 1 369 1 76 1 233 1 77 1 100 1 178 1 236 1 106 1 210 1 239 1 265 1 241 1 86 2 214 1 321 1 19 1 268 2 294 1 
299 1 226 2 29 2 30 1 369 1 174 2 76 2 124 2 100 1 176 1 145 1 127 1 284 1 236 1 262 1 377 1 241 2 214 1 86 4 90 1 268 2 247 1 
116 1 0 1 220 1 165 1 25 1 299 1 226 2 120 1 29 2 30 1 369 1 174 2 124 2 76 2 127 1 145 1 100 1 178 1 284 1 36 1 310 1 236 1 105 1 106 1 288 1 374 1 262 1 377 1 241 2 86 4 214 1 321 1 90 1 19 1 268 2 294 1 247 1 
0 1 363 1 299 1 226 1 227 1 29 1 30 1 369 1 174 1 124 1 232 1 76 2 145 1 100 1 176 1 178 1 284 1 236 1 261 1 262 1 377 1 38 1 241 1 214 1 86 3 335 1 90 1 268 2 247 1 
366 1 249 1 273 1 367 1 299 2 50 1 28 1 305 1 30 2 369 2 76 9 124 6 55 1 127 3 145 3 235 2 349 1 284 3 148 1 352 1 356 2 262 3 377 3 241 10 214 2 86 19 89 2 90 3 268 4 247 3 
249 2 273 1 367 2 299 3 26 1 50 2 28 1 30 3 369 3 54 1 124 4 76 14 55 2 127 2 145 2 235 4 349 1 284 2 149 1 352 1 331 1 356 1 262 3 376 1 377 2 188 2 264 1 241 12 214 3 86 26 89 2 90 3 268 6 247 3 
366 1 249 3 340 1 273 1 118 1 367 3 299 3 26 1 169 1 50 1 28 1 305 1 30 3 74 1 369 3 54 1 370 1 76 20 124 8 55 2 127 4 145 4 235 4 349 1 284 5 149 1 352 1 331 1 356 1 291 1 262 5 376 1 377 4 155 1 188 1 264 1 241 21 214 3 86 41 89 4 90 4 268 6 247 4 
366 1 249 3 340 1 273 1 118 1 367 3 299 4 26 1 169 1 50 1 28 1 305 1 30 4 74 1 369 4 54 1 370 1 76 20 124 7 55 2 127 4 145 3 235 4 349 1 284 4 149 1 352 1 331 1 356 1 291 1 262 5 376 1 377 3 155 1 188 2 264 1 241 18 214 4 86 38 89 4 90 4 268 8 247 4 
249 2 340 1 273 1 118 1 367 4 299 2 26 1 169 1 50 1 28 1 305 2 30 2 74 1 369 2 54 1 370 1 76 27 124 14 55 1 127 7 145 7 235 4 349 1 284 8 149 1 287 2 352 1 331 1 356 1 291 1 262 8 376 1 377 7 188 1 264 1 241 25 214 2 86 52 89 4 90 7 268 4 247 7 
97 1 280 1 212 1 173 1 46 1 75 1 98 1 153 1 303 1 186 1 
179 1 189 1 
97 1 280 1 46 1 75 1 34 1 88 1 59 1 153 1 303 1 
237 1 3 1 46 1 166 1 153 1 276 1 303 1 186 1 171 1 280 1 97 1 212 1 123 1 267 2 75 1 98 1 336 1 243 1 
237 1 3 1 46 1 166 1 153 1 276 1 303 1 186 1 171 1 280 1 97 1 212 1 123 1 267 2 75 1 98 1 336 1 243 1 
237 1 3 1 46 1 166 1 153 1 276 1 303 1 186 1 171 1 280 1 97 1 212 1 123 1 267 2 75 1 98 1 336 1 243 1 
248 1 207 1 209 1 
248 1 207 1 209 1 
52 1 238 1 
52 1 207 1 238 1 
113 1 159 1 
0 2 46 1 275 1 276 1 303 1 171 1 97 1 280 1 123 1 53 1 75 1 232 2 371 1 178 2 179 1 12 1 286 1 261 2 153 1 239 1 378 1 189 1 267 1 335 2 113 1 243 1 159 1 
248 1 209 1 
52 1 207 1 238 1 
0 2 198 1 220 1 165 1 299 1 25 2 368 1 95 1 51 1 30 1 369 1 76 1 100 1 176 1 178 2 236 1 106 2 261 2 265 1 379 1 241 1 214 1 86 2 333 2 321 2 19 1 268 2 294 1 193 1 22 1 92 1 
106 1 220 1 70 1 165 1 25 1 210 1 110 1 292 1 191 1 321 1 19 1 21 1 294 1 295 1 
205 1 24 1 106 1 70 1 165 1 25 1 131 1 111 1 358 1 309 1 218 1 87 1 67 1 321 1 115 1 160 2 294 1 295 1 
205 1 24 1 106 2 70 1 165 1 25 2 288 1 131 1 111 1 358 1 309 1 218 1 87 1 67 1 321 2 115 1 160 2 294 1 295 1 
205 1 24 1 106 1 70 1 165 1 25 1 64 1 111 1 358 1 309 1 218 1 87 1 67 1 321 1 115 1 160 2 294 1 
289 1 
196 1 128 1 183 1 201 1 166 1 224 1 73 1 345 1 56 1 9 1 
284 2 196 5 166 5 301 1 343 10 262 2 345 5 203 1 293 5 90 2 99 5 145 2 245 2 247 2 161 5 
162 1 123 1 166 1 201 1 168 1 276 1 
162 4 196 2 220 1 165 1 274 1 224 2 25 4 168 2 251 1 73 2 276 3 49 1 345 2 307 1 123 3 9 2 106 4 128 1 14 1 355 2 152 2 210 2 215 2 191 1 321 4 19 1 21 1 294 1 361 1 
345 1 196 1 166 1 201 1 183 1 5 1 56 1 
162 1 196 1 166 2 201 1 224 1 343 1 168 1 73 1 276 1 345 1 230 1 123 1 99 1 9 1 128 1 263 1 20 1 
196 8 297 2 201 2 250 2 48 1 301 2 343 12 345 9 203 2 7 2 56 1 99 6 145 2 57 1 9 4 106 3 259 1 152 1 355 2 61 1 210 1 262 2 215 1 321 3 19 3 362 2 161 6 162 5 219 2 220 10 165 3 166 8 274 1 224 4 25 3 168 3 120 3 73 4 276 5 277 3 279 2 123 5 284 2 128 4 183 1 288 1 133 2 37 2 134 2 293 6 90 2 245 2 294 4 247 2 
162 1 249 1 196 5 166 5 367 1 201 2 224 2 26 1 168 1 343 6 276 1 73 2 345 8 203 1 123 1 54 1 99 3 145 2 9 2 284 2 328 1 128 2 331 1 353 1 152 1 355 1 262 2 376 1 264 1 89 1 293 5 90 2 245 2 161 5 247 2 
0 1 93 1 340 1 196 2 118 1 119 1 224 1 73 1 276 1 304 1 345 2 203 1 74 1 123 1 308 1 232 1 9 1 178 1 284 1 128 1 261 1 290 1 262 2 38 1 334 1 335 1 245 2 44 1 
0 3 116 1 163 1 220 1 165 1 299 1 25 1 120 1 51 1 30 1 369 1 232 2 100 1 178 3 36 1 236 1 105 1 106 1 261 2 374 1 210 1 239 1 38 2 241 1 86 1 214 1 321 1 335 2 19 1 268 2 44 1 294 1 
196 2 128 1 201 2 166 4 224 1 355 1 152 1 343 4 291 1 73 1 345 1 293 2 99 2 9 1 161 2 
97 1 83 1 159 1 303 1 186 1 
271 1 97 1 303 1 
271 1 97 1 303 1 
271 1 97 1 303 1 
97 1 199 1 303 1 
97 1 199 1 303 1 
97 1 199 1 303 1 
97 1 303 1 
75 1 153 1 
284 2 273 1 340 2 118 2 299 1 290 1 262 2 377 2 30 1 74 1 369 1 241 5 214 1 86 10 124 5 76 5 127 3 268 2 
273 1 299 1 262 1 377 1 30 1 369 1 214 1 86 2 76 2 124 1 90 1 268 2 
284 1 273 1 299 1 262 1 377 1 30 1 369 1 241 2 214 1 86 4 124 2 76 2 127 1 145 1 90 1 268 2 247 1 
104 1 366 1 273 1 340 1 118 1 299 3 377 1 188 1 30 3 369 3 241 2 86 3 214 3 124 2 76 1 127 1 268 6 
249 1 366 1 340 2 273 1 118 2 4 1 367 3 299 4 169 1 30 4 74 2 369 4 370 1 76 16 124 9 127 5 145 2 284 5 311 1 151 1 290 1 291 1 262 5 377 4 188 1 241 15 214 4 86 31 89 3 17 1 90 2 268 8 247 2 
249 1 273 1 340 2 367 1 118 2 299 1 169 1 30 1 74 2 369 1 370 1 76 8 124 5 127 4 284 3 290 1 291 1 262 3 377 1 264 1 241 7 86 15 214 1 89 1 268 2 
249 1 340 2 273 1 118 2 367 1 299 2 169 1 305 1 30 2 74 2 369 2 370 1 76 10 124 6 127 4 284 3 311 1 290 1 291 1 262 4 377 2 264 1 241 8 86 18 214 2 89 2 90 1 268 4 247 1 
249 1 340 2 273 1 118 2 367 1 299 3 26 1 169 1 30 3 74 2 369 3 54 1 370 1 76 13 124 7 145 2 127 5 284 5 311 1 331 1 290 1 291 1 262 5 376 1 377 2 188 1 264 1 241 13 86 26 214 3 89 1 90 2 268 6 247 2 
249 1 340 2 273 1 118 2 367 1 299 3 26 1 169 1 30 3 74 2 369 3 54 1 370 1 76 14 124 9 145 1 127 5 284 4 311 1 331 1 290 1 291 1 262 5 376 1 377 4 188 1 264 1 241 10 86 24 214 3 89 1 90 2 268 6 247 2 
249 1 273 1 340 2 367 1 118 2 299 1 169 1 30 1 74 2 369 1 370 1 76 8 124 5 127 4 284 3 290 1 291 1 262 3 377 1 264 1 241 7 86 15 214 1 89 1 268 2 
249 1 273 1 367 1 299 1 26 1 30 1 369 1 54 1 76 6 124 2 145 2 127 1 284 2 331 1 262 2 376 1 377 1 264 1 241 6 86 12 214 1 89 1 90 2 268 2 247 2 
249 1 340 2 273 1 118 2 367 1 299 4 26 1 169 1 30 4 74 2 369 4 54 1 370 1 76 14 124 7 145 1 127 5 284 4 311 1 331 1 290 1 291 1 262 5 376 1 377 2 188 2 264 1 241 11 86 25 214 4 89 1 90 2 268 8 247 2 
249 1 366 1 273 1 367 1 299 4 26 1 30 4 369 4 54 1 76 9 124 6 145 2 127 3 284 2 331 1 262 3 376 1 377 3 188 2 264 1 241 7 86 16 214 4 89 1 90 3 268 8 247 3 
284 1 340 3 118 3 169 1 262 1 377 3 74 1 241 4 86 7 370 2 124 6 76 3 127 3 
249 1 366 1 340 2 273 1 118 2 367 1 299 4 26 1 169 1 30 4 74 2 369 4 54 1 370 1 76 14 124 7 145 1 127 5 284 4 331 1 290 1 291 1 262 5 376 1 377 2 188 2 264 1 241 11 86 25 214 4 89 1 90 2 268 8 247 2 
340 2 118 2 299 2 169 1 30 2 74 2 369 2 370 1 124 7 76 9 127 4 284 3 290 1 262 3 291 1 377 3 188 1 241 8 214 2 86 17 268 4 
284 1 340 1 118 1 5 1 291 1 169 1 262 1 74 1 241 2 370 1 86 5 124 2 76 3 127 2 
284 1 311 1 299 1 262 1 377 1 30 1 369 1 241 2 214 1 86 4 124 2 76 2 127 1 145 1 90 1 268 2 247 1 
284 1 249 1 367 1 262 1 377 1 305 1 241 4 86 7 89 2 76 3 124 2 127 1 145 1 90 1 247 1 
340 2 118 2 367 2 299 1 169 1 305 1 30 1 74 2 369 1 370 1 76 13 124 7 145 2 127 5 284 5 287 1 290 1 291 1 262 5 377 2 188 1 241 12 86 25 214 1 89 2 18 1 90 2 268 2 247 2 
241 1 86 1 89 1 
86 1 367 1 76 1 
284 1 311 1 299 1 301 1 262 1 377 1 30 1 369 1 241 3 214 1 86 6 76 3 124 3 90 1 145 1 127 2 268 2 247 1 
249 1 273 1 367 1 299 1 26 1 30 1 369 1 54 1 76 6 124 2 145 2 127 1 284 2 331 1 262 2 376 1 377 1 264 1 241 6 86 12 214 1 89 1 90 2 268 2 247 2 
284 1 340 1 118 1 262 1 377 1 74 1 241 3 86 6 76 3 124 2 127 1 
104 1 340 1 118 1 299 1 169 1 377 1 188 1 30 1 369 1 241 2 370 1 86 3 214 1 76 1 124 2 127 1 268 2 
0 1 239 1 216 1 261 1 315 1 178 1 194 1 
0 1 2 1 315 1 261 1 15 1 211 1 239 1 332 1 216 1 58 1 194 1 178 1 
324 1 106 4 220 1 221 1 165 1 25 4 288 1 210 1 191 1 321 4 19 1 21 1 294 1 
11 1 296 1 106 2 220 1 165 1 25 2 120 1 357 1 215 1 321 2 19 1 382 1 234 1 294 2 
111 1 24 1 106 1 309 1 165 1 321 1 25 1 160 1 294 1 210 1 
205 1 106 2 220 1 379 1 165 1 321 2 25 2 288 1 19 1 368 1 294 1 
106 5 351 1 220 3 221 1 165 2 25 4 288 1 210 1 379 1 215 1 191 1 321 5 19 2 21 1 294 2 282 1 
106 5 220 3 221 1 165 2 25 4 288 1 210 1 85 1 379 1 215 1 191 1 321 5 19 2 21 1 294 2 282 1 
106 1 220 1 165 1 191 1 5 1 321 1 25 1 19 1 21 1 294 1 210 1 
116 1 0 2 36 1 106 1 220 1 165 1 261 1 25 1 167 1 120 1 210 1 239 1 232 1 335 1 321 1 19 1 294 1 178 2 
0 2 116 1 219 1 220 3 165 1 25 1 167 1 120 2 304 1 232 2 80 1 178 2 36 1 106 1 261 2 187 1 239 1 134 1 215 1 321 1 335 1 19 2 294 1 
0 2 116 1 324 1 219 1 220 3 165 1 25 2 167 1 120 2 304 1 232 2 233 1 80 1 178 2 106 2 261 2 187 1 239 1 134 1 215 1 321 2 335 1 19 2 294 1 
324 1 162 1 219 1 350 1 106 3 220 4 166 1 201 1 165 1 137 1 25 3 210 1 120 1 276 2 37 1 277 1 279 1 134 1 123 2 215 1 321 3 19 1 294 1 
324 1 162 1 219 1 106 3 220 4 166 1 201 1 165 1 25 3 210 1 120 1 276 2 37 1 277 1 279 1 134 1 123 2 7 1 215 1 321 3 19 1 294 1 
106 1 165 1 321 1 25 1 294 1 10 1 
296 1 205 1 351 1 106 7 259 1 220 3 165 2 288 1 25 6 210 2 6 1 120 1 379 1 318 1 333 1 321 7 19 2 234 1 294 3 10 1 282 1 
0 2 340 2 298 1 299 2 304 1 100 2 310 1 105 1 106 1 107 1 261 1 262 3 214 2 321 1 19 1 268 4 116 1 220 1 165 1 118 2 25 1 167 1 120 1 169 1 30 2 74 2 369 2 370 1 232 1 124 5 76 7 176 1 127 4 178 2 284 3 36 1 236 2 288 1 374 1 290 1 291 1 377 1 239 3 241 6 86 13 335 1 193 1 294 1 
162 2 196 1 220 2 166 1 201 1 250 1 274 1 25 1 224 2 168 1 73 2 276 3 345 1 277 1 279 1 123 3 7 1 53 1 56 1 9 2 106 1 128 2 183 1 210 1 133 1 37 1 321 1 362 1 
106 2 259 1 220 2 165 1 288 1 25 2 120 1 279 1 321 2 19 1 57 1 294 2 10 1 
116 1 0 2 106 1 220 1 165 1 261 1 25 1 167 1 120 1 210 1 239 1 232 1 335 1 321 1 19 1 233 1 294 1 178 2 
296 1 106 1 259 1 220 1 165 1 25 1 6 1 120 1 215 1 321 1 19 1 234 1 294 2 
239 1 281 1 31 1 260 1 256 1 
166 1 201 1 260 2 276 2 37 1 187 1 239 1 304 1 39 1 172 1 123 2 281 2 231 1 240 1 53 1 31 2 256 1 157 1 80 1 
0 1 198 1 260 1 261 1 95 1 31 1 256 1 22 1 178 1 
39 1 256 1 157 1 
35 1 13 1 135 1 380 1 125 1 223 1 320 1 323 1 
35 3 180 1 13 1 313 1 354 2 223 4 72 1 300 1 156 1 135 2 380 2 125 1 112 1 323 4 
35 1 13 1 312 1 223 2 354 1 135 1 380 1 125 1 320 1 41 1 42 1 323 2 
35 1 13 1 223 3 300 1 72 2 16 1 156 2 135 1 380 1 125 1 320 1 323 3 
365 1 35 2 143 2 177 1 
13 1 217 1 125 1 223 1 320 1 323 1 
35 1 181 1 13 1 135 1 380 1 125 1 354 1 223 2 320 1 323 2 
182 1 
35 1 13 1 135 1 380 1 125 1 223 1 320 1 323 1 
35 1 135 1 380 1 5 1 
35 1 13 1 135 1 380 1 125 1 223 1 323 1 
146 1 223 1 338 1 
35 1 13 1 223 3 300 1 72 2 156 1 135 1 380 1 125 1 320 1 270 1 323 3 
35 1 103 1 13 1 135 1 380 1 125 1 354 1 223 2 323 2 
35 1 24 1 13 1 313 1 218 1 125 1 326 1 223 1 320 1 160 1 323 1 
35 1 13 1 135 1 125 1 223 1 320 1 323 1 
13 1 135 2 380 1 125 1 223 1 320 1 323 1 
35 1 339 1 13 2 135 1 125 2 223 2 320 1 242 1 130 1 323 2 
35 2 13 1 69 1 181 1 313 1 223 3 354 2 135 1 380 1 125 1 320 1 112 1 323 3 
35 1 13 1 24 1 223 2 354 1 96 1 135 1 380 1 309 1 125 1 87 1 218 1 320 1 160 2 323 2 
35 2 103 1 13 2 313 1 223 4 354 2 135 1 380 1 319 1 125 2 320 1 112 1 323 4 
35 1 13 1 181 1 354 1 223 3 72 1 135 1 380 1 125 1 320 1 323 3 
35 1 180 1 313 1 112 1 
35 1 135 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
301 5 325 2 324 1 348 1 68 2 251 1 225 9 284 1 154 6 179 1 155 1 287 1 369 2 253 4 353 1 288 2 34 3 55 2 212 1 358 9 40 1 163 1 239 1 164 2 294 2 361 1 46 1 124 1 
301 5 325 2 324 1 348 1 68 2 251 1 225 9 284 1 154 6 179 1 155 1 287 1 369 2 253 4 353 1 288 2 34 3 55 2 212 1 358 9 40 1 163 1 239 1 294 2 164 2 361 1 46 1 124 1 
301 6 325 2 324 1 348 1 68 2 251 1 225 10 284 1 154 7 179 1 155 1 287 1 369 2 253 5 353 1 288 2 34 4 55 2 212 1 358 10 40 1 163 1 239 1 294 2 164 2 361 1 46 1 124 1 
301 4 325 2 324 1 348 1 68 2 251 1 225 7 154 4 179 1 155 1 287 1 369 2 253 3 353 1 288 2 34 2 55 2 212 1 358 7 40 1 163 1 239 1 294 2 164 1 361 1 46 1 124 1 
34 1 55 1 301 3 325 1 68 1 212 1 358 4 225 4 284 1 164 2 154 3 179 1 155 1 369 1 253 2 353 1 124 1 288 1 
301 1 55 1 325 1 170 1 68 1 358 2 40 1 174 1 225 2 6 1 163 1 294 1 179 1 369 1 353 1 124 1 
34 1 301 2 325 2 324 1 68 2 358 3 225 3 294 1 154 1 179 1 253 1 353 1 124 1 
301 5 324 1 325 2 68 2 225 9 284 1 154 7 31 1 179 1 155 1 287 1 369 1 253 4 353 1 288 1 34 3 73 1 55 1 212 1 358 9 239 1 294 1 164 2 124 1 
301 5 324 1 325 2 68 2 225 9 284 1 154 7 31 1 179 1 155 1 287 1 369 1 253 4 353 1 288 1 34 3 73 1 55 1 212 1 358 9 239 1 294 1 164 2 124 1 
10 1 267 1 72 1 
94 1 267 1 295 2 
321 2 150 2 266 2 26 2 198 2 335 1 191 2 336 1 
48 1 321 3 343 1 222 2 270 1 327 1 199 1 26 3 198 2 88 1 349 1 89 1 274 2 128 2 175 1 206 1 150 2 7 1 153 1 178 2 335 1 368 2 54 1 336 1 210 1 134 1 291 1 374 1 235 1 339 1 317 1 266 2 142 1 378 1 145 1 191 2 62 1 
321 1 150 1 56 1 266 1 231 1 357 1 26 1 198 1 191 1 336 1 
125 1 321 1 84 1 10 1 256 1 357 1 198 1 26 1 115 1 61 1 267 1 351 1 80 1 189 1 
321 1 84 1 10 1 256 1 357 1 198 1 26 1 150 1 115 2 266 1 61 2 267 1 80 1 189 1 191 1 
70 1 283 1 104 1 115 1 61 1 
10 1 330 1 70 1 283 1 115 2 177 1 61 2 267 1 
283 1 115 1 61 1 
321 1 56 1 231 1 357 1 198 1 26 1 236 1 70 1 150 1 115 1 266 1 61 1 336 1 191 1 
267 1 
10 1 70 1 283 1 337 1 115 2 177 1 61 2 267 1 
10 1 49 1 304 1 338 1 223 1 76 1 249 1 281 2 58 1 70 2 115 5 283 2 177 1 61 5 267 1 360 1 207 2 352 2 209 1 
335 1 72 1 
321 2 198 2 26 2 307 1 150 1 266 1 81 1 335 2 191 1 
12 1 65 1 275 1 
321 1 210 1 127 1 26 1 291 1 89 1 128 1 235 1 374 1 7 1 178 1 378 1 335 1 368 1 145 1 62 1 
210 1 321 2 12 1 322 1 198 1 26 2 291 1 89 1 374 1 235 1 128 1 140 1 150 1 7 1 378 1 178 1 368 1 145 1 191 1 62 1 
321 3 150 3 322 1 266 1 26 3 198 3 335 1 191 3 
321 1 150 1 56 1 357 1 26 1 198 1 191 1 
321 1 150 1 266 1 357 1 81 1 26 1 198 1 191 1 307 1 
48 1 321 4 84 1 22 1 322 1 222 2 270 1 327 1 199 1 26 4 198 3 88 1 349 1 89 1 274 1 128 1 175 1 150 3 7 1 153 1 178 1 285 1 335 1 368 1 336 1 210 1 256 1 357 1 291 1 374 1 235 1 339 1 140 1 115 1 317 1 266 2 61 1 378 1 81 1 80 1 189 1 145 1 62 1 191 3 
321 2 93 1 150 1 322 1 351 1 26 2 198 2 335 1 191 1 
321 3 84 1 22 1 322 2 256 1 357 1 198 3 26 3 140 1 150 3 115 1 266 1 61 1 267 1 81 1 80 1 309 1 189 1 191 3 
321 2 322 1 12 1 65 1 198 2 26 2 150 2 266 1 81 1 191 2 
321 1 210 1 26 1 89 1 291 1 128 1 235 1 374 1 7 1 178 1 378 1 335 1 368 1 145 1 62 1 
321 1 210 1 356 1 26 1 89 1 291 1 128 1 235 1 374 1 178 1 377 1 378 1 335 1 368 1 145 1 
48 1 85 1 221 1 222 2 270 1 65 2 327 1 349 1 88 2 274 4 275 2 202 1 175 1 206 2 311 1 9 1 254 1 102 1 12 2 105 1 77 1 213 1 317 1 380 1 
321 1 150 1 256 1 357 1 26 1 198 1 191 1 111 1 
321 5 322 2 247 1 198 5 26 5 328 1 93 1 150 4 140 1 266 1 351 1 81 1 335 1 191 4 
321 2 150 2 56 1 357 1 26 2 198 2 111 1 191 2 
24 1 241 1 
24 1 241 1 
116 1 138 1 
116 1 138 1 
116 1 138 1 
24 1 241 1 341 1 
24 1 241 1 341 1 
24 1 241 1 144 1 
344 1 116 1 24 2 241 2 138 1 120 1 
24 1 241 1 341 1 
24 1 241 1 14 1 
24 1 241 1 14 1 
24 1 241 1 14 1 
344 1 24 2 66 2 234 1 25 2 57 2 92 2 187 1 376 1 115 2 61 2 129 1 71 2 267 1 241 2 332 1 19 1 97 3 227 1 
321 2 24 1 66 1 25 1 198 2 26 2 92 1 150 2 332 1 97 1 51 1 335 1 208 1 11 1 57 1 237 1 161 1 115 1 117 1 61 1 241 1 298 1 144 1 191 2 
55 1 369 1 288 1 
6 1 55 1 369 1 
28 1 6 1 265 1 55 3 3 1 288 2 
28 1 6 1 55 2 244 1 3 1 288 1 
28 1 6 1 55 2 3 2 288 1 
86 1 49 2 221 1 223 1 365 2 249 3 279 1 29 2 281 1 70 4 94 1 283 1 177 1 50 1 207 1 9 1 352 1 229 1 101 1 10 1 11 1 102 1 211 2 213 1 59 1 115 5 117 1 61 5 295 3 267 2 298 1 168 1 
0 1 49 6 323 1 221 3 67 1 223 1 365 6 249 8 279 1 29 6 281 2 70 7 94 3 283 6 177 1 50 2 207 2 9 3 352 2 229 2 101 3 354 1 10 1 102 3 104 5 213 3 115 9 61 9 360 1 295 9 267 5 298 4 340 1 119 5 342 1 
49 2 221 1 365 2 249 3 281 1 29 2 70 2 94 2 50 1 207 1 9 1 352 1 229 1 10 1 101 1 102 1 211 1 213 1 59 1 115 3 61 3 267 3 360 1 295 4 298 1 168 1 
0 1 49 4 323 1 221 2 365 4 249 5 29 4 281 1 70 3 94 3 50 1 207 1 9 2 352 1 229 1 10 1 101 2 102 2 211 2 213 2 59 1 115 4 61 4 267 4 295 7 360 1 298 2 340 1 168 1 
37 1 291 1 72 1 
291 1 300 1 
173 1 
291 1 89 1 
37 2 79 1 291 3 89 1 39 1 374 1 
291 1 89 1 374 1 
133 1 291 1 
102 1 221 1 105 2 184 1 88 3 185 2 273 1 77 3 274 7 359 1 263 1 206 4 318 1 379 1 20 1 181 1 269 1 
102 1 221 1 105 2 184 1 88 3 185 2 273 1 77 3 274 7 359 1 263 1 206 4 318 1 379 1 20 1 181 1 269 1 
102 1 221 1 105 2 184 1 88 3 185 2 273 1 77 3 274 7 359 1 263 1 206 4 318 1 379 1 20 1 181 1 312 1 269 1 
48 1 345 1 221 4 222 2 270 1 273 1 349 1 88 15 274 31 280 1 206 16 8 4 181 2 9 3 35 1 101 3 257 3 102 4 74 1 105 5 184 1 185 3 213 3 77 10 15 1 359 2 186 1 263 1 315 1 318 2 317 1 379 2 20 1 269 5 
48 2 221 1 222 4 270 2 349 2 88 4 273 1 274 9 280 1 206 5 180 1 181 1 102 1 105 3 184 1 185 2 77 4 359 1 41 1 317 2 318 1 379 1 20 1 269 1 
301 1 146 1 246 1 325 1 68 1 128 1 277 1 69 1 225 2 6 1 151 1 154 1 178 1 350 1 179 1 334 1 369 1 368 1 353 1 288 1 55 2 135 1 358 2 292 1 235 1 265 1 45 1 294 1 378 1 124 1 
301 1 146 1 246 1 325 1 68 1 128 1 277 1 69 1 225 3 6 1 178 1 154 2 350 1 179 1 310 1 334 1 369 1 368 1 288 1 55 2 135 1 358 3 292 1 235 1 216 1 265 1 316 1 294 1 378 1 124 1 
301 1 246 1 128 1 277 1 69 1 225 2 6 1 178 1 154 2 350 1 179 1 334 1 368 1 369 1 288 1 55 2 135 1 358 2 235 1 216 1 316 1 265 1 294 1 378 1 124 1 
246 2 325 1 68 1 89 1 128 1 69 2 329 1 225 1 178 1 310 1 32 1 367 1 368 1 157 1 135 2 355 1 291 1 235 1 358 1 294 2 378 1 242 1 145 1 
146 1 246 1 325 1 68 1 128 1 277 1 69 1 225 1 6 1 178 1 350 1 334 1 369 1 368 1 353 1 288 1 55 2 135 1 358 1 292 1 235 1 316 1 265 1 45 1 294 1 378 1 
130 1 
84 1 49 2 303 1 148 4 197 2 198 1 89 1 249 2 308 2 204 1 94 2 95 1 152 2 50 1 207 1 351 1 352 1 10 1 256 1 107 1 357 1 314 1 214 1 160 1 60 2 115 5 61 5 267 2 167 2 122 1 125 1 321 1 223 1 26 1 128 2 281 1 226 1 283 6 177 3 178 2 367 1 368 2 183 2 232 1 75 2 291 1 235 1 375 1 143 1 295 2 378 1 242 1 80 1 189 1 145 2 
84 1 125 1 321 1 337 1 256 1 148 2 303 1 232 1 357 1 198 1 26 1 314 1 204 1 283 2 115 3 177 1 61 3 80 1 351 1 189 1 122 1 183 1 
321 1 125 1 84 1 303 1 148 3 197 1 26 1 198 1 204 1 283 1 177 1 351 1 10 1 256 1 337 1 232 1 357 1 314 1 115 3 61 3 267 1 80 1 189 1 122 1 
321 1 125 1 84 1 303 1 148 3 197 1 26 1 198 1 204 1 283 2 177 1 351 1 183 1 10 1 337 1 256 1 232 1 357 1 314 1 115 3 61 3 267 1 80 1 189 1 167 1 122 1 
84 1 49 1 148 6 303 1 346 1 197 4 198 1 249 1 308 2 204 1 94 2 152 2 351 1 207 1 352 1 10 5 256 1 357 1 314 1 160 1 112 1 60 2 115 5 61 5 267 5 167 4 320 1 122 1 321 1 125 1 223 1 26 1 281 1 226 1 366 1 283 7 177 3 183 4 337 1 232 1 75 2 80 1 189 1 192 1 
125 1 321 1 84 1 49 1 303 1 148 4 197 2 223 1 198 1 26 1 249 1 308 2 281 1 226 1 204 1 283 4 94 2 177 2 152 2 207 1 351 1 352 1 183 2 10 1 256 1 107 1 232 1 75 2 357 1 314 1 160 1 60 2 115 4 61 4 267 2 295 2 80 1 167 2 189 1 122 1 
321 1 125 1 84 1 49 1 303 1 148 4 197 2 223 1 26 1 198 1 249 1 308 2 281 1 226 1 204 1 366 1 283 4 94 2 177 2 152 2 351 1 207 1 352 1 183 2 10 1 256 1 232 1 75 2 357 1 314 1 160 1 112 1 60 2 115 4 61 4 267 1 80 1 167 2 189 1 122 1 192 1 
321 1 125 1 84 1 49 1 303 1 148 4 197 2 223 1 26 1 198 1 249 1 308 2 281 1 226 1 204 1 366 1 283 4 94 2 177 2 152 2 351 1 207 1 352 1 183 2 10 1 256 1 232 1 75 2 357 1 314 1 160 1 112 1 60 2 115 4 61 4 267 1 80 1 167 2 189 1 122 1 192 1 
321 1 125 1 84 1 49 1 302 2 303 1 148 4 197 2 223 1 26 1 198 1 249 1 201 1 281 1 226 1 204 1 366 1 283 4 177 2 152 2 351 1 207 1 53 1 98 2 352 1 183 2 10 1 256 1 232 1 75 2 357 1 261 1 314 1 115 4 61 4 267 1 295 2 80 1 167 2 189 1 122 1 
321 1 125 1 84 1 49 1 303 1 148 5 197 3 223 1 26 1 198 1 249 1 308 2 281 1 226 1 204 1 366 1 94 2 283 5 177 2 152 2 207 1 351 1 352 1 183 3 10 1 256 1 232 1 75 2 357 1 314 1 160 1 112 1 60 2 115 4 61 4 267 1 80 1 189 1 167 3 320 1 122 1 192 1 
321 1 125 1 84 1 49 1 303 1 148 5 197 3 223 1 26 1 198 1 249 1 308 2 281 1 226 1 204 1 366 1 94 2 283 5 177 2 152 2 207 1 351 1 352 1 183 3 10 1 256 1 232 1 75 2 357 1 314 1 160 1 112 1 60 2 115 4 61 4 267 1 80 1 189 1 167 3 320 1 122 1 192 1 
125 1 321 1 84 1 49 1 302 2 303 1 148 4 197 2 223 1 198 1 26 1 249 1 281 1 226 1 204 1 283 4 177 2 152 2 207 1 351 1 53 1 98 2 352 1 183 2 10 1 256 1 107 1 232 1 75 2 357 1 314 1 115 4 61 4 267 1 295 2 80 1 167 2 189 1 122 1 
48 1 221 1 222 2 270 1 65 1 327 1 273 1 349 1 88 3 274 6 275 1 202 1 175 1 206 3 335 2 72 1 12 1 102 1 105 2 184 1 185 1 77 2 318 1 317 1 379 1 20 1 
48 2 221 2 222 4 270 2 65 4 327 2 199 1 88 6 349 2 248 1 4 1 274 14 275 11 149 1 175 1 206 8 8 3 156 1 335 1 9 1 54 1 100 1 101 2 12 11 257 3 102 1 74 1 105 1 77 2 213 2 315 1 317 2 269 1 
321 2 48 1 127 1 322 1 222 2 270 1 65 1 327 1 26 2 198 1 199 1 89 1 248 1 349 1 172 1 88 1 128 1 274 2 175 1 150 1 206 1 7 1 178 1 335 1 368 1 54 1 210 1 260 1 291 1 374 1 235 1 140 1 317 1 378 1 219 1 145 1 62 1 191 1 
48 3 83 2 199 1 198 1 88 10 349 3 248 1 89 2 306 1 205 2 150 1 206 10 7 2 9 2 54 1 210 2 101 2 102 3 12 7 105 4 213 2 316 1 17 2 318 1 317 3 20 1 62 2 269 4 321 3 322 1 221 3 222 6 270 3 65 7 327 3 271 1 26 3 273 1 128 3 274 20 275 7 175 3 178 3 335 2 368 3 184 1 185 1 291 2 235 2 374 2 77 8 339 2 43 1 140 1 379 1 378 2 381 2 145 1 191 1 
321 1 48 2 322 1 347 1 222 4 270 2 327 2 26 1 198 1 199 1 349 2 88 1 89 2 128 8 274 2 250 1 202 1 175 2 150 1 206 1 151 1 178 7 367 1 368 8 54 1 134 2 313 1 291 3 235 2 139 1 264 1 78 1 316 1 317 2 378 2 242 1 145 2 190 1 191 1 
48 1 321 1 221 1 222 2 270 1 65 1 327 1 198 1 26 1 349 1 248 1 88 2 275 1 274 3 175 1 150 1 206 1 286 1 9 1 101 1 12 1 102 1 105 1 77 1 213 1 266 1 317 1 81 1 191 1 
48 1 12 1 221 1 222 2 270 1 65 1 327 1 349 1 77 1 275 1 274 2 213 1 202 1 175 1 206 2 317 1 311 1 269 1 
48 1 254 1 12 1 102 1 105 1 222 2 270 1 65 1 327 1 349 1 88 2 77 1 275 1 274 2 202 1 175 1 317 1 9 1 
48 1 221 1 222 2 270 1 65 2 327 1 349 1 88 2 274 4 275 2 202 1 175 1 206 2 9 1 101 1 12 2 102 1 105 1 213 1 77 2 317 1 269 1 
48 1 12 1 221 1 222 2 270 1 65 1 313 1 327 1 349 1 77 1 275 1 274 2 213 1 175 1 206 2 317 1 311 1 269 1 
48 1 254 1 12 1 102 1 105 1 222 2 270 1 65 1 313 1 327 1 349 1 88 2 77 1 275 1 274 2 175 1 317 1 9 1 
48 1 221 1 222 2 270 1 65 2 327 1 349 1 88 2 274 4 275 2 175 1 206 2 9 1 101 1 12 2 102 1 105 1 313 1 213 1 77 2 317 1 269 1 
48 1 221 1 222 2 270 1 65 2 327 1 349 1 88 2 274 4 275 2 175 1 206 2 9 1 101 1 12 2 102 1 105 1 213 1 77 2 317 1 269 1 
321 1 48 1 222 2 270 1 327 1 26 1 199 1 89 1 349 1 88 1 274 2 128 1 175 1 206 1 7 1 178 1 335 1 368 1 54 1 210 1 291 1 374 1 235 1 339 1 317 1 378 1 145 1 62 1 
321 1 48 1 222 2 270 1 327 1 26 1 199 1 89 1 349 1 88 1 274 2 128 1 278 1 175 1 206 1 178 1 335 1 368 1 54 1 210 1 356 1 291 1 374 1 235 1 317 1 378 1 377 1 145 1 
48 1 221 1 222 2 270 1 65 2 327 1 349 1 248 1 88 2 274 4 275 2 175 1 206 2 9 1 101 1 12 2 102 1 105 1 213 1 77 2 317 1 269 1 
321 1 48 1 221 1 222 2 270 1 65 2 327 1 26 1 88 2 89 1 349 1 275 2 274 4 128 1 175 1 206 2 7 1 151 1 178 1 9 1 368 1 210 1 101 1 102 1 12 2 105 1 291 1 77 2 213 1 374 1 235 1 339 1 17 1 317 1 378 1 62 1 269 1 
48 1 321 1 221 1 222 2 270 1 65 1 327 1 198 1 26 1 88 1 349 1 248 1 274 3 275 1 175 1 150 1 206 2 9 1 101 1 102 1 12 1 77 1 213 1 266 1 317 1 81 1 191 1 269 1 362 1 
48 2 221 3 222 4 326 1 270 2 349 2 88 10 274 19 206 9 8 2 180 1 9 3 101 3 290 2 103 1 257 1 102 3 105 3 74 1 38 1 159 2 213 3 77 6 315 1 44 1 317 2 240 1 297 1 21 1 269 3 
48 3 221 3 222 6 270 3 171 1 88 12 349 3 274 26 280 2 5 1 206 14 8 2 180 1 9 2 101 3 290 1 102 2 103 2 257 2 105 2 74 2 38 1 159 4 77 4 213 3 215 1 114 1 44 1 317 3 165 1 297 1 319 1 21 2 269 2 
48 3 221 5 222 6 270 3 171 1 90 1 273 1 349 3 88 21 274 41 280 1 5 1 206 20 8 4 180 1 9 4 101 4 290 1 103 2 257 3 102 5 105 4 74 3 38 1 159 4 184 1 185 1 213 4 77 8 215 1 315 1 114 1 44 1 318 1 317 3 240 1 379 1 165 1 297 1 319 1 20 1 21 1 269 4 
48 4 221 5 222 8 270 4 171 1 90 1 273 1 349 4 88 18 274 38 280 2 5 1 206 20 8 4 180 1 9 3 101 4 290 1 103 2 257 3 102 4 105 4 74 3 38 1 159 4 184 1 185 1 213 4 77 7 215 1 315 1 114 1 44 1 318 1 317 4 240 1 379 1 165 1 297 1 319 1 20 1 21 1 269 3 
48 2 221 8 222 4 270 2 171 1 273 1 349 2 88 25 274 52 280 1 5 1 206 27 8 4 180 1 9 7 100 2 101 7 290 1 103 1 257 4 102 8 105 7 74 2 38 1 159 4 184 1 185 1 213 7 77 14 215 1 315 2 114 1 44 1 318 1 317 2 379 1 165 1 297 1 319 1 20 1 21 1 269 7 
376 1 344 1 126 1 24 1 241 1 19 1 66 1 57 1 25 1 92 1 
144 1 237 1 
18 1 24 1 118 1 241 1 66 1 57 1 25 1 99 1 92 1 
344 1 24 1 66 1 234 1 25 1 57 1 92 1 376 1 115 1 61 1 129 1 71 1 267 1 332 1 241 1 19 1 97 2 227 1 
344 1 24 1 66 1 234 1 25 1 57 1 92 1 376 1 115 1 61 1 129 1 71 1 267 1 332 1 241 1 19 1 97 2 227 1 
344 1 24 1 66 1 234 1 25 1 57 1 92 1 376 1 115 1 61 1 129 1 71 1 267 1 332 1 241 1 19 1 97 2 227 1 
141 1 120 1 341 1 
141 1 120 1 341 1 
14 1 27 1 
14 1 27 1 120 1 
161 1 208 1 
321 2 64 1 24 1 66 1 25 1 26 2 198 2 92 1 70 1 150 2 71 1 129 1 97 1 51 1 335 1 208 1 11 1 57 1 237 1 161 1 115 1 117 1 61 1 241 1 298 1 144 1 191 2 
141 1 341 1 
14 1 27 1 120 1 
321 2 48 1 222 2 270 1 327 1 26 2 198 2 199 1 89 1 248 1 349 1 88 1 128 2 274 2 175 1 206 1 178 2 333 1 368 2 182 1 370 1 371 1 54 1 36 1 134 2 291 1 235 1 139 1 264 1 317 1 378 1 
55 2 135 1 195 1 106 1 235 1 128 2 292 1 277 1 6 1 265 1 316 1 151 1 378 1 178 2 350 1 369 1 368 2 47 1 288 1 
55 2 135 1 195 1 128 1 292 1 235 1 277 1 6 1 265 1 316 1 178 1 350 1 378 1 369 1 368 1 288 1 123 1 
135 1 355 1 291 1 89 1 235 1 128 1 331 1 378 1 178 1 242 1 367 1 368 1 145 1 47 1 
55 2 135 1 195 1 106 1 235 1 128 1 292 1 277 1 6 1 265 1 316 1 178 1 350 1 378 1 369 1 368 1 47 1 288 1 
200 1 
10 1 49 1 267 1 304 1 249 1 209 1 72 1 
10 1 49 1 223 1 249 1 160 1 308 1 281 1 60 1 115 1 283 1 94 1 61 1 177 1 267 2 295 1 207 1 352 1 
1 2 49 8 194 1 304 1 89 3 249 9 95 1 94 6 151 1 50 2 207 4 9 2 352 4 209 1 10 2 101 2 102 2 259 1 13 2 110 2 213 2 115 5 61 5 267 8 23 2 220 1 221 2 223 4 224 1 365 6 128 3 281 4 29 6 283 5 177 3 178 3 30 1 368 3 372 2 133 2 37 2 136 2 291 10 39 1 235 4 374 3 238 2 378 3 295 12 80 2 381 2 300 3 145 1 82 2 
23 2 49 5 2 1 221 2 171 1 223 2 365 5 249 8 5 1 29 5 281 2 95 1 283 1 94 3 8 1 50 1 177 1 96 1 207 2 9 2 352 2 372 1 101 2 10 2 257 1 102 2 74 1 213 2 215 1 115 1 61 1 165 1 295 6 267 5 319 1 
321 1 23 2 49 2 221 2 223 1 26 1 198 1 249 2 281 1 150 1 207 1 352 1 336 1 372 1 255 1 102 1 56 1 231 1 357 1 236 1 115 1 318 1 266 1 61 1 379 1 20 1 191 1 192 1 
10 1 49 1 304 1 223 1 249 1 281 1 267 1 207 1 352 1 209 1 
372 1 23 2 101 2 49 5 102 2 221 2 365 5 213 2 249 5 29 5 94 5 295 10 267 5 381 1 9 2 
10 1 115 1 283 1 61 1 177 1 267 1 
49 2 223 1 364 1 89 1 128 4 249 2 281 2 283 4 95 2 50 2 177 2 178 4 30 1 207 2 367 1 368 4 228 1 352 2 259 2 291 1 235 1 375 1 115 3 143 1 61 3 360 1 378 1 242 1 145 2 
48 1 321 3 222 2 270 1 327 1 199 1 26 3 198 2 88 1 349 1 89 1 274 1 128 1 175 1 150 2 7 1 178 1 153 1 335 1 368 1 336 1 210 1 291 1 235 1 374 1 339 1 266 2 317 1 378 1 145 1 191 2 62 1 
10 2 49 2 223 1 365 2 185 1 249 1 29 2 281 1 94 2 95 1 50 1 295 4 267 4 207 1 352 1 
196 1 57 1 25 1 
196 1 57 1 25 1 
376 1 188 1 57 1 25 1 208 1 
196 1 57 1 25 1 
57 1 25 1 218 1 
57 1 25 1 218 1 
57 1 25 1 218 1 
57 1 25 1 
24 1 241 1 
48 2 102 1 221 1 105 2 222 4 270 2 184 1 185 1 88 4 349 2 273 1 274 8 77 3 280 1 206 4 317 2 318 1 379 1 20 1 269 1 
102 1 105 2 221 1 184 1 185 1 88 3 273 1 77 2 274 6 206 3 318 1 379 1 20 1 72 1 
48 1 101 1 102 1 105 1 221 1 222 2 270 1 88 2 349 1 77 2 91 1 213 1 274 4 206 2 317 1 9 1 269 1 
101 1 102 1 257 1 105 1 74 1 221 1 88 4 274 7 213 1 77 2 315 1 206 3 8 2 9 1 269 1 
48 2 221 3 222 4 270 2 273 1 88 12 349 2 274 23 280 2 206 11 8 2 156 1 9 2 100 1 101 2 257 2 102 3 105 5 184 1 185 1 77 9 213 2 315 1 318 2 317 2 379 2 245 1 20 1 269 4 
8 1 88 1 274 1 
206 1 257 1 274 1 
48 1 101 1 102 1 221 1 105 2 222 2 270 1 349 1 88 3 91 1 274 6 213 1 77 3 206 3 317 1 381 1 9 1 269 1 
48 1 221 2 222 2 270 1 171 1 88 6 349 1 274 12 5 1 206 6 8 1 180 1 9 2 101 2 257 1 102 2 74 1 105 1 213 2 77 2 215 1 317 1 165 1 319 1 269 1 
102 1 221 1 105 1 88 3 274 6 77 2 206 3 318 1 379 1 20 1 269 1 
48 1 105 1 222 2 270 1 184 1 88 2 349 1 273 1 77 2 274 3 280 1 206 1 318 1 317 1 379 1 245 1 269 1 
48 1 255 1 102 2 105 3 221 2 222 2 270 1 349 1 88 5 77 5 274 10 206 5 317 1 318 2 379 2 180 1 20 1 269 2 
48 1 221 1 222 2 270 1 349 1 213 1 274 2 77 1 206 2 317 1 180 1 269 1 
48 1 101 1 102 1 105 1 221 1 222 2 270 1 88 2 349 1 77 2 213 1 274 4 206 2 317 1 180 1 9 1 269 1 
48 3 105 1 222 6 270 3 88 2 349 3 274 3 77 2 280 1 206 1 317 3 318 1 240 1 379 1 180 1 245 1 269 1 
48 5 345 1 221 5 222 10 270 5 273 1 88 18 349 5 91 1 274 34 280 2 206 16 8 4 180 1 9 3 35 1 101 3 257 3 102 5 74 1 105 7 184 1 185 1 15 1 213 3 77 12 315 1 318 3 317 5 240 1 379 3 245 1 20 2 269 5 
48 1 221 1 222 2 270 1 88 4 349 1 273 1 274 8 5 1 206 4 8 1 180 1 102 1 257 1 74 1 105 2 184 1 185 1 77 2 317 1 318 1 379 1 20 1 
48 2 221 2 222 4 270 2 273 1 88 5 349 2 274 11 91 1 5 1 206 6 8 2 180 1 101 1 102 1 257 1 105 2 74 1 184 1 185 1 213 1 77 3 315 1 318 1 317 2 379 1 20 1 269 1 
48 3 221 3 222 6 270 3 171 1 273 1 88 10 349 3 91 1 274 19 5 1 280 1 206 9 8 1 180 1 9 2 101 2 257 1 102 3 74 1 105 3 184 1 185 1 213 2 77 4 215 1 318 1 317 3 379 1 165 1 319 1 20 1 269 1 
48 3 221 3 222 6 270 3 171 1 273 1 88 7 349 3 91 1 274 17 280 1 5 1 206 10 8 1 180 1 9 1 101 2 257 1 102 2 74 1 105 3 184 1 185 1 213 2 77 5 215 1 318 1 317 3 379 1 165 1 319 1 20 1 269 2 
48 1 221 1 222 2 270 1 88 4 349 1 273 1 274 8 5 1 206 4 8 1 180 1 102 1 257 1 74 1 105 2 184 1 185 1 77 2 317 1 318 1 379 1 20 1 
48 1 221 2 222 2 270 1 171 1 88 6 349 1 274 12 5 1 206 6 8 1 180 1 9 2 101 2 257 1 102 2 74 1 105 1 213 2 77 2 215 1 317 1 165 1 319 1 269 1 
48 4 221 3 222 8 270 4 171 1 273 1 88 8 349 4 274 18 91 1 5 1 280 2 206 10 8 1 180 1 9 1 101 2 257 1 102 2 74 1 105 3 184 1 185 1 213 2 77 5 215 1 318 1 317 4 379 1 165 1 319 1 20 1 269 2 
48 4 221 3 222 8 270 4 171 1 88 7 349 4 274 16 5 1 280 2 206 9 8 1 180 1 9 2 101 3 257 1 102 2 74 1 105 3 213 3 77 6 215 1 317 4 240 1 165 1 319 1 269 3 
102 1 105 3 221 1 184 2 88 4 273 1 274 7 77 6 206 3 318 3 379 3 20 1 269 3 
48 4 221 3 222 8 270 4 171 1 273 1 88 8 349 4 274 18 5 1 280 2 206 10 8 1 180 1 9 1 101 2 257 1 102 2 74 1 105 3 184 1 185 1 213 2 77 4 215 1 318 1 317 4 240 1 379 1 165 1 319 1 20 1 269 1 
321 1 293 1 93 1 351 1 26 1 198 1 335 1 
321 1 230 1 108 1 198 1 26 1 276 1 176 1 293 1 93 1 351 1 335 1 131 1 
378 1 178 1 242 1 367 1 291 1 89 1 235 1 128 1 368 1 145 1 72 1 
210 1 321 2 322 1 198 1 26 2 291 1 89 1 374 1 235 1 128 1 150 1 7 1 178 1 378 1 335 1 368 1 145 1 191 1 
321 2 84 1 322 1 26 2 198 2 89 2 128 1 150 2 7 1 178 1 335 1 368 1 210 1 133 1 256 1 259 1 357 1 291 3 235 1 374 2 238 1 378 1 191 1 
321 2 84 1 322 1 26 2 198 2 89 2 128 2 150 2 178 2 335 1 368 2 210 1 133 1 256 1 356 1 259 1 357 1 291 3 235 1 374 2 238 1 378 1 121 1 191 1 
63 1 89 1 128 3 283 1 178 3 252 1 368 3 10 1 133 1 37 1 259 1 291 4 235 1 374 1 238 1 115 2 61 2 378 1 267 1 80 1 121 1 300 1 145 1 
10 1 133 1 37 1 259 1 89 1 291 4 374 1 235 1 128 3 238 1 115 2 283 1 61 2 267 1 178 3 378 1 80 1 121 1 368 3 145 1 82 1 300 1 
378 1 178 1 235 1 128 1 368 1 250 1 
158 1 289 1 134 1 347 1 272 1 39 1 89 2 291 3 128 7 374 1 235 3 250 1 264 1 78 1 316 1 151 1 178 6 378 2 368 7 145 2 190 1 
321 2 48 2 83 1 322 1 221 1 222 4 270 2 65 1 327 2 26 2 198 1 88 3 273 1 89 1 248 1 349 2 275 1 274 6 128 1 175 2 206 3 150 1 7 1 151 1 178 1 335 2 368 1 370 1 210 1 12 1 102 1 105 2 184 1 185 1 291 1 77 2 374 1 235 1 339 1 17 1 318 1 317 2 379 1 378 1 20 1 191 1 62 1 
49 1 304 1 223 2 128 1 249 1 281 2 70 1 283 2 177 1 178 1 30 1 207 2 368 1 352 2 209 1 10 1 37 1 136 1 13 1 110 1 291 2 115 3 61 3 267 1 80 1 145 1 82 1 300 1 
37 1 224 1 39 1 89 1 291 2 128 2 374 1 235 2 250 1 151 1 178 2 378 1 368 2 
87 1 89 1 291 1 235 1 128 4 151 1 178 4 378 1 242 1 367 1 121 1 368 4 145 1 
158 1 259 1 109 1 272 1 89 1 291 1 306 1 128 2 374 1 235 2 178 2 268 1 378 1 368 2 
6 1 55 1 378 1 178 1 369 1 235 1 128 1 368 1 277 1 145 1 
316 1 151 1 378 1 178 2 333 1 291 1 89 1 235 1 128 2 368 2 264 1 
87 1 347 1 259 1 89 2 291 3 128 5 235 2 264 1 151 1 178 4 378 2 242 1 367 1 368 5 145 1 190 1 
87 1 259 1 89 2 291 3 128 5 235 2 264 1 203 1 151 1 178 4 378 2 242 1 367 1 368 5 145 1 190 1 
210 1 321 2 322 1 356 1 198 1 26 2 291 1 89 1 374 1 235 1 128 1 150 1 178 1 378 1 335 1 368 1 145 1 191 1 
158 1 289 1 259 1 272 1 39 1 89 1 291 1 128 1 374 1 235 2 178 1 378 1 368 1 
132 1 162 1 296 1 335 1 33 1 
84 1 132 2 10 1 22 1 256 1 357 1 258 1 262 1 162 2 70 1 115 2 61 2 267 1 296 2 80 1 189 1 299 1 335 1 33 1 
321 1 132 1 162 1 36 1 26 1 198 1 182 1 371 1 33 1 
258 1 299 1 33 1 
301 1 179 1 124 1 72 1 
225 1 301 1 325 1 179 1 68 1 358 1 124 1 
294 1 358 1 69 1 
169 1 301 1 325 1 137 1 68 1 358 3 40 2 225 3 166 1 179 1 353 1 124 1 
225 2 301 1 325 1 154 1 164 1 179 1 68 1 358 2 124 1 
301 1 55 1 325 1 68 1 212 1 358 1 225 1 369 1 253 1 353 1 288 1 
225 1 301 1 325 1 68 1 358 1 353 1 124 1 
225 1 325 1 179 1 68 1 358 1 353 1 124 2 
225 2 16 1 301 1 325 2 243 1 233 1 68 2 358 2 353 1 124 1 
34 1 301 2 325 1 68 1 358 3 225 3 239 1 154 2 179 1 287 1 253 1 353 1 124 1 
301 1 55 2 325 1 68 1 358 2 6 1 225 2 265 1 154 1 179 1 369 1 353 1 124 1 363 1 288 1 
34 1 301 2 325 2 68 2 358 4 225 4 284 1 164 1 154 2 179 1 253 1 353 1 124 1 
225 1 301 1 325 1 179 1 68 1 358 1 353 1 124 1 
34 1 301 3 325 1 137 1 68 1 358 4 40 1 225 4 113 1 154 2 166 1 179 2 253 1 124 2 
73 1 301 1 325 1 68 1 358 2 225 2 217 1 42 1 154 1 179 1 353 1 124 1 
225 3 301 1 373 1 325 1 166 2 179 1 137 1 68 1 358 3 40 2 353 1 124 1 
282 1 301 2 52 2 305 1 
225 1 147 1 325 1 68 1 358 1 353 1 
225 2 301 1 325 1 154 1 179 1 287 1 68 1 358 2 353 1 124 1 
193 1 
225 1 301 1 325 1 179 1 68 1 358 1 353 1 124 1 
225 3 301 1 325 1 154 1 179 1 287 1 68 1 358 3 40 1 353 1 124 1 
34 1 113 1 301 1 253 1 
301 1 124 1 

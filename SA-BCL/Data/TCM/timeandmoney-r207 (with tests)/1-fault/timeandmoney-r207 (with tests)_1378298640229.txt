#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
340 1 338 1 29 1 108 9 283 3 155 2 156 2 174 1 191 1 176 4 351 1 10 1 320 1 234 2 117 2 41 6 182 1 162 1 240 2 16 2 244 1 49 1 331 9 126 2 305 1 270 5 359 1 272 1 
340 1 338 1 29 1 108 9 283 3 155 2 156 2 174 1 191 1 176 4 351 1 10 1 320 1 234 2 117 2 41 6 182 1 162 1 240 2 16 2 244 1 49 1 331 9 126 2 305 1 270 5 359 1 272 1 
340 1 338 1 29 1 108 10 283 4 155 2 156 2 174 1 191 1 176 5 351 1 10 1 320 1 234 2 117 2 41 7 182 1 162 1 240 2 16 2 244 1 49 1 331 10 126 2 305 1 270 6 359 1 272 1 
340 1 338 1 29 1 108 7 283 2 155 2 156 2 174 1 191 1 176 3 351 1 10 1 320 1 234 2 117 1 41 4 182 1 162 1 240 2 16 2 244 1 49 1 331 7 126 2 305 1 270 4 272 1 
234 1 117 2 41 3 338 1 29 1 108 4 16 1 283 1 155 1 156 1 174 1 191 1 176 2 126 1 331 4 270 3 359 1 10 1 
234 1 43 1 162 1 29 1 108 2 16 1 240 1 18 1 156 1 174 1 191 1 126 1 331 2 270 1 272 1 333 1 
41 1 29 1 108 3 16 2 240 1 283 1 174 1 191 1 49 1 176 1 126 2 331 3 270 2 
338 1 29 1 108 9 283 3 155 1 156 1 174 1 191 1 176 4 10 1 320 1 234 1 141 1 117 2 41 7 239 1 240 1 16 2 244 1 49 1 331 9 126 2 270 5 359 1 
338 1 29 1 108 9 283 3 155 1 156 1 174 1 191 1 176 4 10 1 320 1 234 1 141 1 117 2 41 7 239 1 240 1 16 2 244 1 49 1 331 9 126 2 270 5 359 1 
20 1 167 1 28 1 
90 2 167 1 107 1 
370 2 321 2 286 1 34 2 121 1 207 2 127 2 297 2 
310 1 362 1 26 1 277 1 279 1 31 1 87 1 172 1 286 1 157 2 34 2 114 1 194 1 233 1 370 2 38 1 321 3 235 2 119 1 39 1 236 1 218 1 295 1 121 1 238 1 143 2 15 1 297 2 17 2 329 1 74 1 247 1 100 1 299 2 300 1 207 2 127 3 
370 1 321 1 75 1 34 1 121 1 207 1 127 1 148 1 297 1 139 1 
130 1 321 1 309 1 363 1 28 1 296 1 375 1 297 1 183 1 301 1 167 1 93 1 127 1 148 1 
130 1 370 1 321 1 309 1 363 1 28 1 375 2 297 1 183 1 34 1 301 2 167 1 207 1 127 1 148 1 
274 1 301 1 375 1 306 1 136 1 
313 1 220 1 274 1 301 2 167 1 28 1 375 2 306 1 
274 1 301 1 375 1 
370 1 321 1 121 1 375 1 297 1 75 1 301 1 145 1 34 1 207 1 127 1 306 1 148 1 139 1 
167 1 
313 1 274 1 48 1 301 2 167 1 28 1 375 2 306 1 
140 2 181 1 293 2 263 1 274 2 361 1 28 1 375 5 341 1 57 1 313 1 365 1 355 1 367 2 301 5 167 1 65 1 306 2 259 1 
20 1 286 1 
370 1 321 2 196 1 297 2 315 1 286 2 34 1 207 1 127 2 
227 1 348 1 159 1 
321 1 235 1 119 1 39 1 26 1 295 1 143 1 277 1 188 1 15 1 31 1 299 1 286 1 300 1 114 1 127 1 
370 4 321 5 326 2 224 1 3 1 296 1 265 1 297 5 328 1 315 1 286 1 34 1 207 4 127 5 
370 2 321 2 177 1 207 2 127 2 148 1 297 2 139 1 
370 1 321 2 235 1 119 1 224 1 326 1 39 1 26 1 295 1 277 1 143 1 15 1 297 1 31 1 299 1 300 1 114 1 207 1 127 2 159 1 
370 3 321 3 326 1 286 1 34 1 207 3 127 3 297 3 
370 1 321 1 207 1 127 1 148 1 297 1 139 1 
370 1 321 1 315 1 196 1 34 1 207 1 127 1 148 1 297 1 
130 1 224 1 309 1 310 1 362 1 26 1 277 1 363 1 31 1 172 1 87 1 315 1 286 1 157 1 114 1 34 2 92 1 233 1 370 3 38 1 321 4 119 1 235 1 326 1 39 1 236 1 218 1 295 1 121 1 143 1 375 1 15 1 297 3 17 2 183 1 74 1 100 1 248 1 299 1 300 1 301 1 207 3 127 4 148 1 
370 1 321 2 326 1 286 1 296 1 207 1 127 2 265 1 297 2 
130 1 370 3 321 3 224 1 326 2 309 1 161 1 363 1 375 1 297 3 183 1 315 1 34 1 301 1 167 1 92 1 207 3 127 3 148 1 
370 2 321 2 326 1 297 2 315 1 348 1 34 1 207 2 127 2 159 1 
321 1 235 1 119 1 39 1 26 1 295 1 143 1 277 1 15 1 31 1 299 1 286 1 300 1 114 1 127 1 
321 1 235 1 39 1 120 1 26 1 295 1 143 1 15 1 31 1 299 1 286 1 300 1 114 1 127 1 291 1 
208 1 310 1 131 1 152 1 362 1 311 1 227 2 348 2 157 4 159 2 233 2 37 1 94 1 322 1 67 1 373 1 236 1 218 1 200 1 17 2 329 2 74 1 100 1 185 1 
370 1 321 1 309 1 177 1 207 1 127 1 148 1 297 1 
110 1 226 1 
110 1 226 1 
294 1 1 1 
294 1 1 1 
294 1 1 1 
110 1 80 1 226 1 
110 1 80 1 226 1 
110 1 267 1 226 1 
110 2 88 1 294 1 1 1 214 1 226 2 
110 1 80 1 226 1 
110 1 203 1 226 1 
110 1 203 1 226 1 
110 1 203 1 226 1 
169 1 216 1 370 2 321 2 374 1 160 1 225 1 375 1 297 2 154 1 226 1 241 1 110 1 378 1 201 1 19 1 267 1 286 1 301 1 288 1 207 2 178 1 127 2 250 1 
253 1 374 3 375 2 154 2 226 2 110 2 378 2 19 2 201 1 164 1 88 1 287 1 7 1 301 2 167 1 258 1 250 2 262 2 82 1 
155 1 234 1 156 1 
18 1 234 1 156 1 
155 2 18 1 156 3 113 1 158 1 149 1 
155 1 18 1 156 2 113 1 377 1 149 1 
155 1 18 1 156 2 113 1 149 2 
334 1 273 2 274 1 361 3 152 1 225 1 28 1 107 1 86 1 313 1 365 2 366 1 367 1 90 3 116 2 64 1 65 1 94 1 216 1 140 1 67 1 293 1 354 1 373 1 375 5 241 1 184 1 301 5 167 2 304 1 306 4 129 2 
273 6 274 6 152 3 225 4 107 3 64 2 65 1 353 1 67 3 293 2 354 1 121 1 297 1 75 1 301 9 167 5 207 1 302 1 304 2 127 1 306 7 129 6 361 8 83 1 28 1 136 5 313 1 365 6 366 3 367 2 90 9 34 1 317 5 259 1 139 1 94 3 370 1 321 1 140 2 373 3 96 1 375 9 47 1 221 1 145 1 148 1 
334 1 273 2 361 3 152 1 225 1 28 1 107 2 365 2 366 1 367 1 90 4 116 1 64 1 259 1 94 1 140 1 67 1 293 1 373 1 375 3 184 1 301 3 167 3 304 1 306 2 129 2 
334 1 273 4 361 5 152 2 225 2 28 1 107 4 365 4 366 2 367 1 90 8 116 2 64 1 259 1 94 2 140 1 353 1 67 2 293 1 373 2 96 1 375 4 221 1 301 4 184 1 167 5 304 1 306 3 129 4 
268 1 20 1 295 1 
295 1 209 1 
211 1 
300 1 295 1 15 1 
295 1 81 1 
295 1 15 1 
268 2 300 1 295 3 257 1 123 1 15 1 
94 1 208 2 12 2 152 1 311 3 14 1 280 1 364 1 329 4 111 1 157 7 269 1 21 1 381 1 215 1 233 3 179 1 
94 1 208 2 12 2 152 1 311 3 14 1 280 1 364 1 329 4 111 1 157 7 269 1 21 1 381 1 215 1 233 3 179 1 
94 1 208 2 12 2 152 1 311 3 14 1 280 1 144 1 364 1 329 4 111 1 157 7 269 1 21 1 381 1 215 1 233 3 179 1 
208 5 310 1 170 1 362 1 152 4 311 10 280 1 255 1 364 1 59 1 256 1 111 1 366 3 157 31 215 1 261 3 179 2 233 15 94 4 67 3 12 3 373 3 237 1 236 1 14 2 327 1 17 2 329 16 74 1 356 1 269 5 50 4 21 2 381 2 
208 3 310 2 152 1 362 2 311 4 280 1 364 1 256 1 346 1 157 9 215 1 233 4 179 1 94 1 12 2 236 2 14 1 17 4 329 5 74 2 269 1 303 1 21 1 381 1 
55 1 29 1 108 2 109 1 155 1 285 1 156 2 60 1 174 1 191 1 114 1 158 1 63 1 234 1 235 1 41 1 39 1 143 1 266 1 16 1 240 1 72 1 18 1 299 1 331 2 126 1 270 1 357 1 147 1 150 1 
55 1 106 1 29 1 108 3 109 1 155 1 285 1 156 2 60 1 191 1 114 1 158 1 234 1 235 1 41 2 39 1 143 1 16 1 240 1 72 1 243 1 18 1 299 1 101 1 331 3 126 1 270 1 357 1 147 1 150 1 
55 1 106 1 29 1 108 2 109 1 155 1 156 2 191 1 114 1 158 1 234 1 235 1 41 2 39 1 143 1 240 1 72 1 18 1 299 1 101 1 331 2 270 1 357 1 147 1 150 1 
55 2 142 1 235 1 337 1 39 1 295 1 143 1 15 1 108 1 240 2 109 2 16 1 210 1 243 1 31 1 299 1 204 1 114 1 213 1 330 1 126 1 331 1 357 2 
55 1 106 1 108 1 109 1 155 1 285 1 156 2 60 1 174 1 114 1 158 1 63 1 234 1 235 1 39 1 143 1 16 1 240 1 72 1 18 1 299 1 331 1 126 1 357 1 147 1 150 1 
264 1 
335 1 337 1 274 6 276 1 107 2 345 1 62 1 114 1 289 2 65 1 66 1 293 1 235 2 122 2 295 1 296 1 71 2 15 1 297 1 298 1 202 4 299 2 204 1 301 5 167 2 304 1 127 1 130 1 24 1 309 1 361 2 134 2 363 1 28 1 313 3 31 2 365 2 173 1 89 2 175 2 367 1 90 2 33 2 318 1 93 1 140 1 321 1 39 1 42 1 143 2 375 5 183 1 99 1 379 1 148 1 
130 1 321 1 274 2 309 1 42 1 363 1 276 1 375 3 296 1 297 1 313 1 183 1 202 2 173 1 89 1 99 1 48 1 301 3 93 1 379 1 127 1 148 1 
130 1 274 1 309 1 276 1 363 1 28 1 313 1 173 1 289 1 93 1 321 1 42 1 296 1 375 3 297 1 183 1 202 3 99 1 301 3 48 1 167 1 127 1 379 1 148 1 
130 1 309 1 274 2 134 1 276 1 363 1 28 1 313 1 173 1 89 1 289 1 93 1 321 1 42 1 296 1 375 3 297 1 183 1 202 3 99 1 48 1 301 3 167 1 127 1 379 1 148 1 
335 1 274 7 153 1 276 1 107 2 289 4 65 1 232 1 293 1 122 2 296 1 71 2 297 1 202 6 301 5 167 5 206 1 78 1 127 1 130 1 309 1 361 1 134 4 363 1 28 5 313 3 365 1 173 1 89 4 367 1 175 2 33 2 93 1 318 1 321 1 140 1 217 1 42 1 375 5 183 1 99 1 48 1 379 1 148 1 
335 1 274 4 276 1 107 2 289 2 65 1 293 1 122 2 296 1 71 2 297 1 202 4 301 4 167 2 127 1 130 1 24 1 309 1 361 1 134 2 363 1 28 1 313 2 365 1 173 1 89 2 367 1 175 2 33 2 90 2 93 1 318 1 321 1 140 1 42 1 375 4 183 1 99 1 379 1 148 1 
130 1 335 1 274 4 309 1 361 1 134 2 153 1 276 1 363 1 28 1 107 2 313 2 365 1 173 1 89 2 175 2 367 1 33 2 289 2 318 1 93 1 65 1 232 1 321 1 140 1 293 1 42 1 122 2 296 1 375 4 71 2 297 1 183 1 202 4 99 1 301 4 167 1 206 1 127 1 379 1 148 1 
130 1 335 1 274 4 309 1 361 1 134 2 153 1 276 1 363 1 28 1 107 2 313 2 365 1 173 1 89 2 175 2 367 1 33 2 289 2 318 1 93 1 65 1 232 1 321 1 140 1 293 1 42 1 122 2 296 1 375 4 71 2 297 1 183 1 202 4 99 1 301 4 167 1 206 1 127 1 379 1 148 1 
130 1 103 2 151 1 274 4 309 1 361 1 134 2 153 1 276 1 363 1 28 1 281 1 313 2 365 1 173 1 89 2 367 1 90 2 33 2 289 2 318 1 93 1 65 1 321 1 140 1 293 1 42 1 122 2 296 1 375 4 297 1 183 1 202 4 99 1 301 4 167 1 332 2 127 1 379 1 148 1 53 1 
130 1 335 1 309 1 274 5 361 1 153 1 134 3 276 1 363 1 28 1 107 2 313 2 365 1 173 1 89 3 175 2 367 1 33 2 289 3 318 1 93 1 65 1 232 1 140 1 321 1 293 1 42 1 122 2 296 1 375 4 71 2 297 1 183 1 202 5 99 1 301 4 167 1 206 1 78 1 127 1 379 1 148 1 
130 1 335 1 309 1 274 5 361 1 153 1 134 3 276 1 363 1 28 1 107 2 313 2 365 1 173 1 89 3 175 2 367 1 33 2 289 3 318 1 93 1 65 1 232 1 140 1 321 1 293 1 42 1 122 2 296 1 375 4 71 2 297 1 183 1 202 5 99 1 301 4 167 1 206 1 78 1 127 1 379 1 148 1 
103 2 274 4 276 1 281 1 289 2 65 1 293 1 122 2 296 1 297 1 202 4 301 4 167 1 127 1 130 1 24 1 309 1 361 1 134 2 363 1 28 1 313 2 365 1 173 1 89 2 367 1 33 2 90 2 93 1 318 1 321 1 140 1 42 1 375 4 183 1 99 1 332 2 379 1 148 1 
208 2 310 1 362 1 152 1 311 2 280 1 364 1 227 1 348 1 157 6 286 2 159 1 215 1 179 1 233 3 94 1 12 1 236 1 218 1 14 1 17 2 329 3 74 1 20 1 100 1 185 1 
208 1 310 2 362 2 152 1 311 2 4 1 279 1 312 1 30 1 227 11 366 2 348 4 286 1 157 14 159 11 261 3 233 6 94 2 38 1 67 1 373 2 236 2 218 1 327 1 17 4 329 8 74 2 100 2 356 1 77 1 269 1 146 1 50 3 
224 1 310 1 26 1 362 1 277 1 188 1 279 1 31 1 314 1 348 1 286 1 157 2 114 1 233 1 370 1 321 2 38 1 119 1 235 1 326 1 39 1 197 1 295 1 236 1 218 1 143 1 15 1 297 1 17 2 329 1 74 1 299 1 100 1 300 1 146 1 207 1 127 2 358 1 
106 1 224 1 152 3 277 2 279 1 280 1 227 7 348 7 286 2 157 20 114 2 115 2 159 7 231 2 233 10 11 1 67 2 12 1 118 1 235 3 69 2 119 2 236 3 295 2 14 1 297 1 15 2 17 6 74 3 299 3 300 2 207 1 127 3 208 4 360 2 310 3 362 3 26 2 311 8 364 1 31 1 172 2 366 2 215 1 36 1 179 1 94 3 370 1 38 1 321 3 326 1 39 2 373 2 218 3 143 3 329 10 100 3 146 1 269 4 
223 1 336 1 106 1 337 1 310 2 362 2 279 1 31 2 157 2 350 1 114 2 352 1 233 1 370 1 321 1 38 1 235 8 326 1 39 2 295 3 236 2 218 2 143 8 266 1 297 1 15 2 73 1 17 4 329 1 74 2 247 2 299 7 100 2 204 1 249 1 207 1 185 1 127 1 168 1 
208 1 310 1 362 1 152 1 311 1 227 1 315 1 229 1 366 1 348 1 157 3 34 1 159 1 233 2 94 1 370 1 321 1 67 1 373 1 236 1 218 1 297 1 17 2 329 1 74 1 100 1 146 1 207 1 127 1 
94 1 310 1 373 1 362 1 218 1 236 1 311 1 17 2 227 1 329 2 74 1 100 1 348 1 157 2 269 1 185 1 159 1 37 1 
208 1 67 1 310 1 362 1 152 1 218 1 236 1 311 1 200 1 17 2 227 1 74 1 100 1 348 1 157 2 185 1 159 1 233 2 
208 1 310 1 362 1 152 1 311 2 227 2 366 1 348 2 157 4 159 2 233 2 94 1 67 1 373 1 236 1 218 1 17 2 329 2 74 1 100 1 269 1 185 1 
94 1 310 1 373 1 362 1 218 1 236 1 311 1 17 2 227 1 329 2 74 1 100 1 348 1 157 2 269 1 249 1 159 1 37 1 
208 1 67 1 310 1 362 1 152 1 218 1 236 1 311 1 200 1 17 2 227 1 74 1 100 1 348 1 157 2 249 1 159 1 233 2 
208 1 310 1 362 1 152 1 311 2 227 2 366 1 348 2 157 4 159 2 233 2 94 1 67 1 373 1 236 1 218 1 17 2 329 2 74 1 100 1 269 1 249 1 
94 1 208 1 67 1 310 1 373 1 152 1 362 1 218 1 236 1 311 2 17 2 227 2 329 2 74 1 100 1 366 1 348 2 157 4 269 1 159 2 233 2 
310 1 26 1 362 1 277 1 279 1 31 1 172 1 286 1 157 2 114 1 233 1 321 1 38 1 119 1 235 1 39 1 295 1 218 1 236 1 143 1 15 1 17 2 329 1 74 1 299 1 100 1 300 1 127 1 
310 1 26 1 362 1 279 1 31 1 6 1 286 1 157 2 114 1 291 1 233 1 321 1 38 1 235 1 39 1 120 1 295 1 218 1 236 1 143 1 15 1 17 2 329 1 74 1 299 1 100 1 300 1 127 1 
208 1 310 1 362 1 152 1 311 2 227 2 366 1 348 2 157 4 159 2 233 2 94 1 67 1 373 1 236 1 218 1 17 2 329 2 74 1 100 1 146 1 269 1 
208 1 310 1 152 1 26 1 362 1 311 2 277 1 227 2 172 1 366 1 348 2 157 4 114 1 159 2 233 2 94 1 321 1 67 1 119 1 69 1 235 1 373 1 39 1 295 1 218 1 236 1 143 1 266 1 15 1 17 2 329 2 74 1 299 1 100 1 300 1 269 1 127 1 
310 1 275 1 152 1 362 1 311 1 227 1 315 1 366 1 348 1 157 3 34 1 159 1 233 1 94 1 370 1 321 1 67 1 373 1 236 1 218 1 297 1 17 2 329 2 74 1 100 1 269 1 146 1 207 1 127 1 
307 1 208 3 310 2 362 2 152 3 311 6 342 1 190 2 366 3 112 1 157 19 193 1 261 1 233 10 94 3 371 2 67 3 68 1 373 3 236 2 327 1 17 4 329 9 74 2 356 1 269 3 50 2 303 1 186 1 22 1 
307 1 208 2 252 1 310 3 152 2 362 3 311 4 56 1 282 1 256 2 190 4 366 3 112 2 157 26 192 1 193 1 261 2 233 12 94 3 371 1 67 2 68 2 373 3 236 3 17 6 329 14 246 1 74 3 356 2 269 2 79 1 303 1 50 2 186 1 
307 1 208 4 252 1 310 3 362 3 152 5 56 1 311 8 280 1 364 1 282 1 256 1 190 4 366 4 112 1 157 41 192 1 193 1 368 1 215 1 261 3 179 1 233 21 94 5 371 1 67 4 12 1 68 2 373 4 236 3 14 1 327 1 17 6 246 1 329 20 74 3 356 3 269 4 79 1 50 4 303 1 186 1 22 1 
307 1 208 4 252 1 310 4 362 4 152 4 56 1 311 7 280 1 364 1 282 1 256 2 190 4 366 4 112 1 157 38 192 1 193 1 368 1 215 1 261 3 179 1 233 18 94 5 371 1 67 3 12 1 68 2 373 4 236 4 14 1 327 1 17 8 246 1 329 20 74 4 356 3 269 3 79 1 50 4 303 1 186 1 22 1 
307 1 208 7 252 1 310 2 362 2 152 8 56 1 311 14 280 1 312 2 364 1 282 1 256 1 190 4 366 7 112 1 157 52 192 1 193 1 215 1 261 4 179 1 233 25 94 8 371 1 67 7 12 1 68 1 373 7 236 2 14 1 327 2 17 4 246 1 329 27 74 2 356 2 269 7 79 1 50 4 303 1 186 1 
378 1 110 1 19 1 164 1 88 1 253 1 5 1 250 1 226 1 154 1 
267 1 160 1 
378 1 110 1 19 1 372 1 35 1 250 1 251 1 226 1 154 1 
132 1 80 1 
203 1 214 1 380 1 
253 1 374 2 375 1 154 1 226 1 110 1 378 1 201 1 19 1 164 1 88 1 287 1 7 1 301 1 167 1 250 1 262 1 82 1 
253 1 374 2 375 1 154 1 226 1 110 1 378 1 201 1 19 1 164 1 88 1 287 1 7 1 301 1 167 1 250 1 262 1 82 1 
253 1 374 2 375 1 154 1 226 1 110 1 378 1 201 1 19 1 164 1 88 1 287 1 7 1 301 1 167 1 250 1 262 1 82 1 
132 1 80 1 214 1 
132 1 80 1 214 1 
203 1 380 1 
203 1 214 1 380 1 
169 1 178 1 
169 1 25 1 225 1 226 1 154 1 110 1 286 1 288 1 178 1 262 1 216 1 370 2 321 2 374 1 160 1 375 1 297 2 241 1 378 1 19 1 267 1 301 1 207 2 127 2 250 1 306 1 82 1 
223 1 23 1 310 1 362 1 279 1 344 1 228 1 157 2 114 1 91 1 233 1 321 2 38 1 235 2 39 1 295 1 236 1 218 1 143 2 15 1 297 2 17 2 329 1 74 1 247 2 100 1 299 2 146 1 125 1 127 2 168 1 
234 1 235 2 106 1 254 1 39 1 143 2 45 1 266 1 109 1 72 1 155 1 18 1 156 2 285 1 299 2 114 1 158 1 52 1 147 1 
234 1 235 1 106 1 39 1 143 1 45 1 109 1 72 1 155 1 18 1 212 1 156 2 285 1 299 1 114 1 158 1 147 1 
235 1 254 1 337 1 39 1 295 1 143 1 15 1 109 1 31 1 299 1 61 1 204 1 114 1 213 1 
234 1 235 1 106 1 254 1 39 1 143 1 45 1 109 1 72 1 155 1 18 1 156 2 285 1 299 1 114 1 158 1 52 1 147 1 
180 1 
365 1 355 1 181 1 20 1 361 1 167 1 28 1 
335 1 274 1 361 1 28 1 107 1 313 1 365 1 175 1 367 1 90 1 65 1 140 1 293 1 375 1 71 1 301 1 167 2 
54 2 273 6 274 5 104 2 152 2 278 1 58 2 107 6 114 4 8 2 115 2 65 4 66 1 293 4 67 2 235 3 70 1 295 10 199 1 123 1 15 3 355 1 299 3 300 3 301 5 167 8 304 2 81 2 129 6 361 9 171 1 28 2 209 3 85 2 31 1 313 3 365 8 366 2 367 4 90 12 369 1 94 2 140 4 181 1 323 2 39 3 373 2 143 3 375 5 98 2 44 2 266 1 183 2 268 2 
273 5 274 1 361 8 152 2 56 1 28 2 107 3 282 1 85 2 313 1 365 5 366 2 367 2 90 6 8 1 192 1 65 2 261 1 66 1 94 2 140 2 293 2 67 2 324 1 373 2 375 1 376 1 246 1 356 1 301 1 167 5 304 1 79 1 50 1 129 5 
361 2 152 1 364 1 85 2 365 2 367 1 34 1 8 1 65 1 139 1 179 1 94 2 370 1 321 1 140 1 293 1 121 1 14 1 375 1 219 1 297 1 75 1 301 1 145 1 206 1 207 1 127 1 148 1 
140 1 293 1 181 1 361 1 28 1 355 1 365 1 367 1 167 1 65 1 
94 2 273 5 67 2 373 2 361 5 152 2 107 5 85 2 365 5 366 2 90 10 8 1 167 5 115 1 129 5 
313 1 274 1 301 1 167 1 28 1 375 1 
274 4 337 1 361 2 171 2 31 2 313 2 343 1 365 2 367 2 114 1 62 1 259 1 65 1 369 1 66 2 140 2 293 2 235 4 39 1 295 1 143 4 375 3 124 1 15 1 298 1 299 4 204 1 301 3 304 2 
310 1 362 1 26 1 277 1 31 1 87 1 172 1 286 1 157 1 34 2 114 1 233 1 370 2 38 1 321 3 235 1 119 1 39 1 121 1 295 1 218 1 236 1 143 1 297 2 15 1 17 2 74 1 299 1 100 1 300 1 207 2 127 3 
140 1 273 2 293 1 12 1 361 1 28 2 107 2 365 2 367 1 90 4 167 4 304 1 65 1 129 2 66 1 
378 1 19 1 165 1 
378 1 19 1 165 1 
378 1 19 1 164 1 198 1 178 1 
378 1 19 1 165 1 
378 1 19 1 40 1 
378 1 19 1 40 1 
378 1 19 1 40 1 
378 1 19 1 
110 1 226 1 
94 1 208 2 12 1 310 2 152 1 362 2 236 2 311 3 14 1 280 1 364 1 17 4 329 4 256 1 74 2 157 8 269 1 215 1 233 4 179 1 
94 1 208 2 12 1 152 1 311 2 14 1 280 1 364 1 329 3 20 1 157 6 215 1 233 3 179 1 
94 1 208 1 67 1 310 1 373 1 152 1 362 1 13 1 236 1 311 2 17 2 329 2 74 1 366 1 157 4 269 1 233 2 
94 1 208 1 67 1 373 1 152 1 311 2 327 1 329 3 366 1 356 1 157 7 269 1 50 2 261 1 233 4 
208 5 310 2 152 3 362 2 311 9 280 1 312 1 364 1 256 2 366 2 157 23 9 1 215 1 261 2 179 2 233 12 94 3 67 2 12 1 373 2 236 2 14 2 327 1 17 4 329 11 74 2 77 1 269 4 50 2 
157 1 50 1 233 1 
329 1 157 1 261 1 
94 1 208 2 67 1 310 1 373 1 362 1 152 1 236 1 13 1 311 3 17 2 329 3 74 1 366 1 157 6 269 1 115 1 233 3 
208 1 310 1 362 1 152 2 56 1 311 2 282 1 366 2 157 12 192 1 261 1 233 6 94 2 67 2 373 2 236 1 17 2 246 1 329 6 74 1 356 1 269 1 50 1 303 1 79 1 
94 1 208 1 152 1 311 2 14 1 364 1 329 3 157 6 269 1 233 3 179 1 
208 1 310 1 362 1 236 1 311 2 14 1 280 1 17 2 329 1 256 1 74 1 157 3 269 1 9 1 215 1 179 1 233 2 
94 2 208 3 310 1 362 1 152 2 236 1 311 5 14 2 219 1 364 1 17 2 329 5 74 1 157 10 269 2 303 1 179 2 233 5 
94 1 310 1 373 1 362 1 236 1 311 1 17 2 329 2 74 1 157 2 269 1 303 1 
94 1 208 1 67 1 310 1 373 1 152 1 362 1 236 1 311 2 17 2 329 2 74 1 366 1 157 4 269 1 303 1 233 2 
208 1 310 3 362 3 236 3 311 2 14 1 17 6 256 1 329 1 74 3 157 3 269 1 303 1 9 1 22 1 233 2 179 1 
208 7 170 1 310 5 362 5 152 5 311 12 280 1 364 2 59 1 256 2 366 3 157 34 9 1 215 1 261 3 179 3 233 18 94 5 67 3 12 1 373 3 237 1 13 1 236 5 14 3 327 1 17 10 329 16 74 5 356 1 269 5 50 4 303 1 22 1 
208 2 310 1 152 1 362 1 311 2 280 1 364 1 157 8 215 1 261 1 233 4 179 1 94 1 12 1 236 1 14 1 17 2 246 1 329 4 74 1 356 1 50 1 303 1 
208 2 310 2 152 1 362 2 311 3 280 1 364 1 366 1 157 11 215 1 261 1 179 1 233 5 94 2 12 1 373 1 236 2 13 1 14 1 327 1 17 4 246 1 329 6 74 2 356 1 269 1 50 2 303 1 
208 3 310 3 362 3 152 3 56 1 311 4 280 1 364 1 282 1 256 1 366 2 157 19 192 1 215 1 261 1 179 1 233 10 94 3 67 2 12 1 373 2 13 1 236 3 14 1 17 6 246 1 329 9 74 3 356 1 269 1 50 1 303 1 79 1 
208 3 310 3 362 3 152 2 56 1 311 5 280 1 364 1 282 1 256 1 366 2 157 17 192 1 215 1 261 1 179 1 233 7 94 3 67 1 12 1 373 2 13 1 236 3 14 1 17 6 246 1 329 10 74 3 356 1 269 2 50 1 303 1 79 1 
208 2 310 1 152 1 362 1 311 2 280 1 364 1 157 8 215 1 261 1 233 4 179 1 94 1 12 1 236 1 14 1 17 2 246 1 329 4 74 1 356 1 50 1 303 1 
208 1 310 1 362 1 152 2 56 1 311 2 282 1 366 2 157 12 192 1 261 1 233 6 94 2 67 2 373 2 236 1 17 2 246 1 329 6 74 1 356 1 269 1 50 1 303 1 79 1 
208 3 310 4 362 4 152 2 56 1 311 5 280 1 364 1 282 1 256 2 366 2 157 18 192 1 215 1 261 1 179 1 233 8 94 3 67 1 12 1 373 2 13 1 236 4 14 1 17 8 246 1 329 10 74 4 356 1 269 2 79 1 50 1 303 1 
208 3 310 4 362 4 152 2 56 1 311 6 282 1 256 2 366 3 157 16 192 1 261 1 233 7 94 3 67 2 373 3 236 4 17 8 246 1 329 9 74 4 356 1 269 3 79 1 50 1 303 1 22 1 
94 1 208 3 152 1 311 6 14 3 280 2 364 1 329 3 157 7 269 3 215 1 233 4 179 3 
208 3 310 4 362 4 152 2 56 1 311 4 280 1 364 1 282 1 256 2 366 2 157 18 192 1 215 1 261 1 179 1 233 8 94 3 67 1 12 1 373 2 236 4 14 1 17 8 246 1 329 10 74 4 356 1 269 1 79 1 50 1 303 1 22 1 
321 1 95 1 286 1 296 1 127 1 297 1 265 1 
321 1 95 1 133 1 135 1 296 1 265 1 297 1 84 1 286 1 316 1 127 1 128 1 
31 1 20 1 235 1 299 1 337 1 204 1 39 1 114 1 295 1 143 1 15 1 
370 1 321 2 235 1 326 1 39 1 26 1 295 1 143 1 277 1 15 1 297 1 31 1 299 1 286 1 300 1 114 1 207 1 127 2 
309 1 104 1 26 1 277 1 171 1 363 1 286 1 114 1 370 1 321 2 235 1 326 1 39 1 295 3 143 1 297 2 15 2 299 1 300 2 207 2 127 2 148 1 81 1 
309 1 104 1 26 1 171 1 363 1 286 1 114 1 370 1 321 2 235 2 326 1 39 1 120 1 295 3 143 2 297 2 15 2 46 1 299 2 300 2 207 2 127 2 148 1 81 1 
235 3 104 1 274 1 39 1 295 4 171 1 143 3 28 1 375 2 15 1 209 1 46 1 31 1 183 1 163 1 299 3 268 1 300 1 114 1 301 2 167 1 81 1 290 1 
323 1 235 3 104 1 274 1 39 1 295 4 171 1 143 3 28 1 375 2 15 1 209 1 46 1 31 1 183 1 299 3 268 1 300 1 114 1 301 2 167 1 81 1 
235 1 299 1 39 1 114 1 143 1 73 1 
223 1 336 1 325 1 235 7 106 1 39 2 295 3 143 7 123 1 266 1 15 2 73 1 31 2 32 1 247 1 299 6 300 1 350 1 138 1 114 3 352 1 
208 2 310 2 152 1 26 1 362 2 311 2 277 1 280 1 364 1 227 1 172 1 348 1 286 2 157 6 114 1 91 1 159 1 215 1 231 1 233 3 179 1 94 1 370 1 321 2 12 1 235 1 69 1 119 1 326 1 39 1 295 1 236 2 218 2 143 1 14 1 15 1 297 1 266 1 17 4 329 3 74 2 100 2 299 1 300 1 146 1 207 1 127 2 
54 1 274 2 361 1 28 1 58 1 209 1 31 1 313 1 365 1 367 2 65 2 369 1 140 2 181 1 293 2 323 1 235 1 295 2 143 1 375 3 98 1 183 1 355 1 299 1 268 1 301 3 167 1 306 1 
235 2 39 1 295 2 143 2 278 1 123 1 266 1 15 1 73 1 268 1 299 2 300 1 114 2 
31 1 308 1 235 4 299 4 337 1 204 1 39 1 114 1 295 1 143 4 15 1 266 1 46 1 
11 1 325 1 235 2 39 1 295 1 171 1 143 2 15 1 242 1 284 1 299 2 300 1 138 1 114 2 
18 1 31 1 234 1 156 1 235 1 299 1 39 1 114 1 143 1 147 1 
223 1 235 2 106 1 39 1 295 1 143 2 266 1 15 1 228 1 299 2 114 1 
308 1 223 1 235 5 337 1 39 2 295 3 171 1 143 5 266 1 15 2 31 1 299 4 204 1 350 1 114 2 352 1 
308 1 223 1 235 5 337 1 39 2 295 3 171 1 143 5 266 1 15 2 31 1 299 4 204 1 114 2 230 1 352 1 
370 1 321 2 235 1 326 1 39 1 26 1 120 1 295 1 143 1 15 1 297 1 31 1 299 1 286 1 300 1 114 1 207 1 127 2 
325 1 235 1 39 1 295 1 171 1 143 1 123 1 15 1 32 1 299 1 300 1 138 1 114 2 
321 1 23 1 105 1 27 1 297 1 344 1 189 1 125 1 127 1 
0 1 347 1 189 1 
189 1 105 1 286 1 27 1 137 1 
130 1 0 1 309 1 105 2 27 2 363 1 28 1 375 2 137 2 183 1 245 1 189 1 347 1 286 1 301 2 167 1 92 1 306 1 148 1 
20 1 191 1 270 1 29 1 
191 1 331 1 126 1 270 1 29 1 108 1 16 1 
55 1 331 1 240 1 
187 1 97 1 108 3 29 1 16 1 174 1 191 1 126 1 331 3 270 1 292 1 272 2 
117 1 41 1 191 1 331 2 126 1 270 1 29 1 108 2 16 1 
155 1 234 1 156 1 174 1 176 1 331 1 126 1 270 1 108 1 16 1 10 1 
174 1 191 1 331 1 126 1 270 1 108 1 16 1 
174 1 191 2 331 1 126 1 29 1 108 1 16 1 
222 1 108 2 16 2 174 1 191 1 205 1 126 2 331 2 270 1 260 1 
320 1 41 2 29 1 108 3 16 1 283 1 244 1 174 1 191 1 176 1 126 1 331 3 270 2 
234 1 41 1 339 1 29 1 108 2 16 1 18 1 155 1 156 2 174 1 191 1 158 1 126 1 331 2 270 1 
117 1 41 2 29 1 108 4 16 2 283 1 174 1 191 1 176 1 126 2 331 4 270 2 359 1 
174 1 191 1 331 1 126 1 270 1 29 1 108 1 16 1 
41 2 187 1 97 1 29 2 108 4 16 1 283 1 191 2 349 1 176 1 331 4 126 1 270 3 272 1 
174 1 41 1 166 1 191 1 51 1 331 2 126 1 270 1 239 1 29 1 108 2 16 1 
187 1 97 2 108 3 29 1 16 1 174 1 191 1 126 1 331 3 270 1 271 1 272 2 
195 1 2 2 76 1 270 2 
174 1 331 1 126 1 108 1 16 1 319 1 
320 1 174 1 41 1 191 1 331 2 126 1 270 1 29 1 108 2 16 1 
102 1 
174 1 191 1 331 1 126 1 270 1 29 1 108 1 16 1 
320 1 174 1 41 1 191 1 331 3 126 1 270 1 29 1 108 3 16 1 272 1 
349 1 176 1 270 1 283 1 
191 1 270 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 82 32 274 314 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
307 2 206 1 173 2 44 1 256 1 230 1 54 1 367 1 29 6 342 1 80 1 271 2 297 2 242 9 145 5 302 1 277 2 15 2 16 9 17 1 129 1 222 4 20 1 106 1 279 3 39 1 132 2 225 1 
307 2 206 1 173 2 44 1 256 1 230 1 54 1 367 1 29 6 342 1 80 1 271 2 297 2 242 9 145 5 302 1 277 2 15 2 16 9 17 1 129 1 222 4 20 1 106 1 279 3 39 1 132 2 225 1 
307 2 206 1 173 2 44 1 256 1 230 1 54 1 367 1 29 7 342 1 80 1 271 2 297 2 242 10 145 6 302 1 277 2 15 2 16 10 17 1 129 1 222 5 20 1 106 1 279 4 39 1 132 2 225 1 
307 1 206 1 173 2 44 1 256 1 230 1 54 1 367 1 29 4 342 1 80 1 271 2 297 2 242 7 145 4 302 1 277 2 15 2 16 7 17 1 129 1 222 3 20 1 106 1 279 2 39 1 132 2 
307 2 173 1 271 1 297 1 242 4 145 3 302 1 15 1 16 4 17 1 129 1 222 2 20 1 279 1 29 3 39 1 132 1 225 1 
173 1 271 1 297 1 242 2 122 1 93 1 4 1 256 1 145 1 302 1 277 1 16 2 129 1 20 1 132 1 80 1 
271 2 242 3 230 1 145 2 302 1 277 1 16 3 129 1 222 1 20 1 279 1 29 1 132 2 
307 2 206 1 173 1 230 1 29 7 79 1 343 1 271 2 297 1 242 9 145 5 302 1 277 1 15 1 16 9 17 1 222 4 129 1 20 1 106 1 279 3 39 1 132 2 225 1 
307 2 206 1 173 1 230 1 29 7 79 1 343 1 271 2 297 1 242 9 145 5 302 1 277 1 15 1 16 9 17 1 222 4 129 1 20 1 106 1 279 3 39 1 132 2 225 1 
155 1 27 1 139 1 
175 2 208 1 139 1 
138 2 64 2 289 1 171 2 127 2 180 2 182 2 245 1 
1 1 156 1 157 2 180 3 22 1 182 2 72 2 359 1 137 1 138 3 289 1 290 1 118 1 236 1 339 1 121 1 219 1 31 1 32 2 373 1 327 1 82 2 350 1 197 1 245 1 278 1 198 2 64 2 171 2 127 2 221 1 248 1 85 1 223 1 224 1 380 1 381 1 
138 1 64 1 289 1 171 1 127 1 159 1 180 1 182 1 30 1 283 1 
276 1 67 1 205 1 138 1 155 1 235 1 171 1 319 1 159 1 180 1 139 1 33 1 140 1 168 1 
205 1 67 1 155 1 159 1 180 1 182 1 33 2 276 1 64 1 138 1 127 1 171 1 319 2 139 1 140 1 
319 1 326 1 231 1 341 1 33 1 
155 1 360 1 319 2 326 1 231 1 139 1 33 2 324 1 
319 1 231 1 33 1 
159 1 326 1 180 1 182 1 33 1 64 1 138 1 289 1 127 1 171 1 319 1 28 1 30 1 283 1 
139 1 
155 1 360 1 319 2 326 1 231 1 139 1 204 1 33 2 
155 1 370 2 241 2 90 1 326 2 94 1 228 1 177 2 231 2 33 5 360 1 117 1 375 1 51 1 201 1 319 5 77 1 139 1 240 1 
219 1 156 1 32 1 157 1 180 2 82 1 182 1 48 1 359 1 161 1 114 1 64 1 138 2 236 1 118 1 171 1 221 1 85 1 223 1 224 1 
27 1 245 1 
64 1 138 2 127 1 270 1 171 2 143 1 180 2 182 1 245 2 
63 1 273 1 48 1 
219 1 156 1 32 1 157 1 180 1 82 1 245 1 359 1 138 1 118 1 236 1 221 1 330 1 85 1 223 1 224 1 
138 3 64 3 127 1 171 3 180 3 182 3 245 1 114 1 
138 1 64 1 171 1 159 1 180 1 182 1 283 1 
138 1 64 1 171 1 127 1 270 1 143 1 159 1 180 1 182 1 
205 1 67 1 1 1 156 1 157 1 159 1 229 1 180 4 22 1 182 3 72 2 359 1 161 1 336 1 114 1 137 1 138 4 236 1 118 1 289 1 339 1 319 1 140 1 219 1 31 1 270 1 32 1 373 1 327 1 82 1 350 1 197 1 245 1 33 1 276 1 198 1 64 3 127 2 171 3 221 1 85 1 223 1 224 1 380 1 
138 2 64 1 171 2 180 2 182 1 245 1 163 1 168 1 114 1 
205 1 67 1 270 1 159 1 180 3 229 1 182 3 33 1 161 1 114 2 276 1 64 3 138 3 211 1 127 1 171 3 319 1 139 1 140 1 
138 2 64 2 171 2 127 1 270 1 273 1 180 2 182 2 48 1 114 1 
219 1 156 1 32 1 157 1 180 1 82 1 245 1 359 1 138 1 118 1 236 1 221 1 85 1 223 1 224 1 
219 1 156 1 32 1 157 1 180 1 110 1 82 1 245 1 359 1 136 1 138 1 236 1 221 1 223 1 224 1 
91 1 22 1 72 2 48 2 137 1 26 1 339 1 322 1 220 1 31 1 344 1 11 1 345 1 373 2 327 1 273 2 275 1 350 1 63 2 198 4 332 1 88 1 281 1 381 2 
276 1 138 1 64 1 171 1 159 1 180 1 182 1 258 1 
284 1 270 1 180 5 182 4 245 1 161 1 168 1 114 2 64 4 138 5 171 5 127 1 130 1 163 1 
138 2 64 2 171 2 159 1 180 2 182 2 258 1 283 1 
255 1 259 1 
255 1 259 1 
346 1 301 1 
346 1 301 1 
346 1 301 1 
141 1 255 1 259 1 
141 1 255 1 259 1 
255 1 191 1 259 1 
346 1 255 2 294 1 23 1 301 1 259 2 
141 1 255 1 259 1 
255 1 111 1 259 1 
255 1 111 1 259 1 
255 1 111 1 259 1 
66 1 227 2 2 2 255 2 123 1 179 1 103 2 144 1 33 2 259 2 75 3 292 1 319 2 100 1 294 1 189 2 38 1 139 1 102 2 
285 1 227 1 2 1 92 1 255 1 180 2 5 1 134 1 182 2 259 1 75 1 138 2 213 1 319 1 102 1 191 1 123 1 243 1 103 1 245 1 33 1 64 2 171 2 202 1 
15 1 173 1 297 1 
173 1 297 1 122 1 
15 2 297 3 122 1 167 1 266 1 24 1 
15 1 304 1 297 2 122 1 167 1 266 1 
15 1 297 2 122 1 167 2 266 1 
107 1 285 1 155 1 175 3 91 1 90 1 208 1 177 1 134 1 112 1 231 1 210 2 115 1 360 1 51 3 319 5 187 1 139 2 296 2 344 1 11 1 370 1 241 1 326 4 243 1 328 2 33 5 149 1 201 2 152 1 332 1 226 1 
107 3 155 1 175 9 91 3 90 1 208 3 94 1 160 1 177 2 112 1 231 6 115 2 360 1 262 1 51 8 214 1 319 9 341 5 139 5 296 6 344 3 11 3 370 2 241 2 326 7 243 4 195 1 196 1 328 6 33 9 169 1 303 5 149 2 201 6 332 3 
107 1 155 1 91 1 175 4 208 2 94 1 177 1 115 1 210 1 51 3 187 1 319 3 139 3 296 2 344 1 11 1 370 1 241 1 326 2 243 1 328 2 33 3 149 1 201 2 152 1 332 1 
107 2 155 1 175 7 91 2 208 3 94 1 177 1 115 1 210 2 262 1 51 5 319 4 187 1 139 4 296 4 344 2 11 2 370 1 241 1 326 3 243 2 195 1 328 4 33 4 169 1 149 1 201 4 152 1 332 2 
219 1 298 1 27 1 
219 1 95 1 
172 1 
219 1 156 1 
219 3 59 1 156 1 298 2 120 1 224 1 
219 1 156 1 224 1 
219 1 295 1 
91 1 373 3 98 1 7 1 337 1 352 2 198 7 338 1 170 1 26 3 293 1 36 1 365 1 332 1 88 2 10 1 381 4 
91 1 373 3 98 1 7 1 337 1 352 2 198 7 338 1 170 1 26 3 293 1 36 1 365 1 332 1 88 2 10 1 381 4 
91 1 373 3 7 1 98 1 337 1 352 2 198 7 338 1 170 1 26 3 293 1 36 1 365 1 332 1 88 2 40 1 10 1 381 4 
107 3 91 4 209 1 22 1 96 1 71 4 72 2 7 1 98 1 337 5 137 1 338 2 260 1 212 1 293 2 26 10 52 3 365 2 10 1 344 3 11 3 373 15 327 1 350 1 352 3 198 31 13 1 170 1 36 2 378 1 65 1 332 4 88 5 381 16 
91 1 373 4 327 2 300 1 22 2 350 2 72 4 7 1 98 1 337 1 352 2 137 2 198 9 338 1 212 1 293 1 26 4 36 1 365 1 263 1 332 1 88 3 10 1 381 5 
173 1 157 1 312 1 97 1 24 1 236 1 29 1 265 1 323 1 218 1 371 1 32 1 271 1 297 2 242 2 122 1 82 1 193 1 145 1 302 1 277 1 199 1 15 1 16 2 129 1 105 1 223 1 20 1 132 1 250 1 
355 1 173 1 157 1 312 1 287 1 97 1 24 1 288 1 236 1 29 2 265 1 323 1 218 1 32 1 271 1 297 2 242 3 122 1 82 1 193 1 145 1 302 1 277 1 15 1 16 3 105 1 223 1 20 1 132 1 250 1 
355 1 173 1 157 1 312 1 287 1 24 1 236 1 29 2 265 1 323 1 218 1 32 1 297 2 242 2 122 1 82 1 145 1 302 1 277 1 15 1 16 2 105 1 223 1 20 1 250 1 
219 1 218 2 156 1 253 1 372 1 271 1 32 1 157 1 374 1 242 1 347 1 82 1 312 2 288 1 277 2 14 1 236 1 291 1 16 1 221 1 223 1 132 1 250 2 
218 1 173 1 271 1 32 1 297 2 157 1 122 1 242 1 193 1 82 1 312 1 97 1 287 1 24 1 199 1 277 1 15 1 236 1 16 1 129 1 223 1 105 1 265 1 132 1 323 1 250 1 
268 1 
42 1 133 1 175 2 90 1 3 1 177 1 180 1 231 6 232 1 183 4 138 1 291 1 236 1 235 1 99 1 51 2 186 2 238 1 139 2 140 1 241 1 12 2 353 2 149 1 201 2 354 1 310 2 205 1 67 1 155 1 156 1 108 1 157 2 208 2 159 1 116 1 360 3 119 1 318 2 319 5 264 1 321 2 219 1 370 1 32 2 374 1 82 2 125 1 33 5 168 1 276 1 221 2 171 1 376 2 223 1 
67 1 205 1 108 1 3 1 159 1 180 1 125 1 231 2 183 2 33 3 168 1 276 1 116 1 138 1 360 1 235 1 171 1 319 3 264 1 321 1 204 1 140 1 
67 1 205 1 155 1 108 1 3 1 159 1 180 1 125 1 231 1 183 3 33 3 168 1 276 1 116 1 138 1 360 1 235 1 353 1 171 1 319 3 264 1 204 1 139 1 140 1 
205 1 67 1 155 1 108 1 3 1 159 1 180 1 231 2 183 3 138 1 116 1 360 1 235 1 319 3 264 1 321 1 139 1 140 1 125 1 33 3 168 1 276 1 12 1 171 1 353 1 204 1 
133 1 90 1 3 1 180 1 177 1 231 7 183 6 138 1 235 1 51 1 53 1 186 2 139 5 190 1 140 1 241 1 244 1 12 4 353 4 201 1 204 1 354 1 67 1 205 1 310 2 155 5 108 1 208 2 159 1 116 1 360 3 315 1 318 2 319 5 264 1 321 4 370 1 125 1 33 5 168 1 276 1 171 1 376 2 377 1 
133 1 90 1 175 2 3 1 180 1 177 1 231 4 183 4 138 1 235 1 51 1 186 2 139 2 140 1 241 1 12 2 353 2 201 1 354 1 67 1 205 1 310 2 155 1 108 1 208 2 159 1 116 1 360 2 318 2 119 1 319 4 264 1 321 2 370 1 125 1 33 4 168 1 276 1 171 1 376 2 
310 2 205 1 67 1 155 1 133 1 108 1 90 1 3 1 208 2 159 1 180 1 177 1 231 4 183 4 138 1 116 1 360 2 235 1 318 2 53 1 51 1 186 2 319 4 264 1 321 2 139 1 140 1 370 1 241 1 125 1 244 1 33 4 168 1 12 2 276 1 353 2 171 1 376 2 201 1 377 1 354 1 
310 2 205 1 67 1 155 1 133 1 108 1 90 1 3 1 208 2 159 1 180 1 177 1 231 4 183 4 138 1 116 1 360 2 235 1 318 2 53 1 51 1 186 2 319 4 264 1 321 2 139 1 140 1 370 1 241 1 125 1 244 1 33 4 168 1 12 2 276 1 353 2 171 1 376 2 201 1 377 1 354 1 
205 1 67 1 155 1 133 1 108 1 175 2 90 1 3 1 158 1 159 1 180 1 177 1 231 4 183 4 8 1 138 1 116 1 360 2 235 1 237 2 318 2 53 1 51 1 319 4 264 1 321 2 139 1 140 1 370 1 241 1 299 2 125 1 33 4 168 1 12 2 276 1 353 2 171 1 376 2 201 1 151 1 
310 2 205 1 67 1 155 1 133 1 108 1 90 1 3 1 208 2 159 1 177 1 180 1 231 5 183 5 138 1 116 1 360 2 315 1 235 1 318 2 53 1 51 1 186 2 319 4 264 1 321 3 139 1 140 1 370 1 241 1 125 1 244 1 33 4 168 1 276 1 12 3 171 1 353 3 376 2 201 1 377 1 354 1 
310 2 205 1 67 1 155 1 133 1 108 1 90 1 3 1 208 2 159 1 177 1 180 1 231 5 183 5 138 1 116 1 360 2 315 1 235 1 318 2 53 1 51 1 186 2 319 4 264 1 321 3 139 1 140 1 370 1 241 1 125 1 244 1 33 4 168 1 276 1 12 3 171 1 353 3 376 2 201 1 377 1 354 1 
133 1 90 1 175 2 3 1 180 1 177 1 231 4 183 4 138 1 235 1 237 2 51 1 139 1 140 1 241 1 299 2 12 2 353 2 201 1 151 1 67 1 205 1 155 1 108 1 159 1 116 1 360 2 318 2 119 1 319 4 264 1 321 2 370 1 125 1 33 4 168 1 276 1 171 1 376 2 
91 1 22 1 48 1 72 2 7 1 98 1 137 1 338 1 293 1 26 2 339 1 27 1 10 1 31 1 345 1 373 3 273 1 327 1 350 1 245 2 352 1 63 1 198 6 332 1 88 2 381 3 
107 2 1 1 91 2 357 1 209 1 178 1 22 2 71 3 96 1 113 1 72 4 48 11 337 1 137 2 26 2 339 2 52 3 31 1 344 2 11 1 269 1 373 6 327 2 273 4 350 2 245 1 63 11 278 1 198 14 305 1 332 1 88 1 381 8 
156 1 1 1 157 1 357 1 180 2 22 1 182 1 359 1 161 1 72 2 114 1 137 1 138 2 236 1 118 1 339 1 188 1 219 1 31 1 32 1 373 1 273 1 327 1 82 1 350 1 245 1 62 1 64 1 198 2 278 1 221 1 171 1 330 1 85 1 223 1 37 1 224 1 381 1 
1 1 91 3 180 3 182 1 287 1 48 7 7 1 98 1 337 4 184 1 137 3 138 3 338 1 236 2 293 1 339 3 58 1 10 1 344 2 11 2 350 3 197 2 245 2 352 1 246 2 63 7 64 1 198 20 107 2 156 2 311 2 157 3 357 1 22 3 72 6 161 1 359 2 114 1 118 2 26 8 325 2 219 2 31 3 32 3 373 10 327 3 273 7 82 3 126 2 278 1 83 1 221 1 171 1 85 2 223 2 332 3 224 2 88 4 381 10 
43 1 1 1 156 2 157 8 180 1 22 2 182 1 287 1 72 4 114 1 137 2 138 1 236 2 291 1 339 2 76 1 121 2 219 3 31 2 371 1 345 1 32 7 272 1 373 1 374 1 327 2 82 8 350 2 64 1 278 1 198 2 147 1 171 1 221 2 104 1 86 1 223 2 251 1 381 1 
107 1 91 1 357 1 180 1 22 1 182 1 48 1 72 2 137 1 138 1 361 1 26 1 339 1 31 1 344 1 11 1 270 1 373 2 273 1 327 1 350 1 63 1 64 1 198 3 127 1 171 1 332 1 88 1 381 1 
31 1 344 1 345 1 91 1 273 1 327 1 22 1 350 1 48 1 72 2 337 1 63 1 137 1 198 2 26 1 339 1 322 1 381 2 
31 1 345 1 11 1 373 2 273 1 327 1 275 1 22 1 350 1 48 1 72 2 63 1 137 1 198 2 26 1 339 1 332 1 88 1 
107 1 91 1 22 1 72 2 48 2 337 1 137 1 26 2 339 1 344 1 31 1 345 1 11 1 373 2 327 1 273 2 350 1 63 2 198 4 332 1 88 1 381 2 
31 1 344 1 91 1 273 1 327 1 22 1 350 1 48 1 72 2 337 1 63 1 137 1 198 2 26 1 339 1 76 1 322 1 381 2 
31 1 11 1 373 2 273 1 327 1 275 1 22 1 350 1 48 1 72 2 63 1 137 1 198 2 26 1 339 1 76 1 332 1 88 1 
107 1 91 1 22 1 72 2 48 2 337 1 137 1 26 2 339 1 76 1 344 1 31 1 11 1 373 2 327 1 273 2 350 1 63 2 198 4 332 1 88 1 381 2 
107 1 91 1 22 1 72 2 48 2 337 1 137 1 26 2 339 1 344 1 31 1 11 1 373 2 327 1 273 2 350 1 63 2 198 4 332 1 88 1 381 2 
156 1 1 1 157 1 180 1 22 1 359 1 72 2 137 1 138 1 236 1 118 1 339 1 219 1 31 1 32 1 373 1 327 1 82 1 197 1 350 1 245 1 278 1 198 2 221 1 85 1 223 1 224 1 381 1 
156 1 1 1 157 1 110 1 180 1 22 1 359 1 72 2 136 1 137 1 138 1 236 1 339 1 219 1 31 1 32 1 373 1 327 1 82 1 350 1 245 1 278 1 198 2 221 1 223 1 224 1 381 1 154 1 
107 1 91 1 357 1 22 1 72 2 48 2 337 1 137 1 26 2 339 1 344 1 31 1 11 1 373 2 327 1 273 2 350 1 63 2 198 4 332 1 88 1 381 2 
107 1 156 1 91 1 157 1 180 1 22 1 48 2 359 1 72 2 337 1 137 1 138 1 236 1 118 1 26 2 339 1 219 1 344 1 31 1 11 1 371 1 32 1 373 2 273 2 327 1 82 1 197 1 350 1 63 2 246 1 198 4 85 1 223 1 332 1 224 1 88 1 381 2 
107 1 91 1 357 1 180 1 22 1 182 1 72 2 48 1 337 1 137 1 138 1 26 1 339 1 31 1 344 1 11 1 270 1 373 1 327 1 273 1 350 1 63 1 64 1 198 3 127 1 171 1 128 1 332 1 381 2 
107 4 252 1 207 1 91 5 254 1 209 3 109 4 22 3 71 4 96 1 313 1 72 6 7 1 98 1 337 4 137 3 338 1 25 1 212 1 293 1 26 8 52 3 10 1 344 4 11 4 373 21 327 3 166 1 300 1 348 1 349 1 350 3 352 1 351 1 198 41 19 1 331 1 332 5 282 1 88 4 41 2 333 1 381 20 
107 4 252 1 207 1 91 5 254 1 209 3 109 4 22 4 71 4 96 1 313 1 72 8 7 1 98 1 337 3 137 4 338 1 25 1 212 2 293 1 26 7 52 3 10 1 344 4 11 3 373 18 327 4 166 1 300 1 348 1 349 1 350 4 352 1 351 1 198 38 19 1 331 1 332 4 282 1 88 4 41 2 333 1 381 20 
107 7 207 1 91 8 254 1 209 2 109 4 22 2 71 4 96 2 313 1 113 2 72 4 7 1 98 1 337 7 137 2 338 1 25 1 212 1 293 1 26 14 52 4 10 1 344 7 11 7 373 25 327 2 166 1 300 1 349 1 350 2 352 1 351 1 198 52 19 1 331 1 332 8 282 1 88 7 41 1 333 1 381 27 
107 3 91 3 209 1 109 2 22 2 71 2 96 1 72 4 135 1 337 3 137 2 25 1 26 6 52 1 344 3 11 3 373 10 327 2 166 1 300 1 348 1 349 1 350 2 198 19 331 1 332 3 88 3 41 1 333 2 381 9 
107 3 207 1 91 3 254 1 209 2 109 4 22 3 71 2 313 1 72 6 337 2 137 3 25 2 212 2 26 4 52 2 344 3 11 2 373 12 327 3 166 1 300 1 349 1 350 3 351 1 198 26 19 1 331 1 332 2 282 1 88 2 41 2 333 1 381 14 
66 1 316 1 227 1 2 1 255 1 294 1 103 1 38 1 102 1 259 1 
92 1 191 1 
227 1 363 1 2 1 255 1 286 1 103 1 239 1 102 1 259 1 
66 1 227 1 2 1 123 1 255 1 179 1 103 1 144 1 33 1 259 1 75 2 319 1 100 1 294 1 189 1 38 1 139 1 102 1 
66 1 227 1 2 1 123 1 255 1 179 1 103 1 144 1 33 1 259 1 75 2 319 1 100 1 294 1 189 1 38 1 139 1 102 1 
66 1 227 1 2 1 123 1 255 1 179 1 103 1 144 1 33 1 259 1 75 2 319 1 100 1 294 1 189 1 38 1 139 1 102 1 
141 1 148 1 23 1 
141 1 148 1 23 1 
364 1 111 1 
364 1 111 1 23 1 
213 1 202 1 
285 1 227 1 2 1 92 1 255 1 180 2 5 1 134 1 182 2 259 1 75 1 138 2 213 1 319 1 100 1 189 1 102 1 191 1 326 1 243 1 103 1 245 1 33 1 64 2 171 2 247 1 202 1 
141 1 148 1 
364 1 111 1 23 1 
308 1 156 1 1 1 157 2 357 1 70 1 45 1 180 2 22 1 73 1 72 2 137 1 138 2 236 1 339 1 369 1 121 2 219 1 31 1 272 1 32 2 373 1 327 1 82 2 350 1 278 1 198 2 171 2 86 1 223 1 381 1 
371 1 173 1 32 2 297 2 157 2 122 1 82 2 6 1 312 1 287 1 97 1 24 1 15 1 236 1 200 1 223 1 216 1 265 1 323 1 
173 1 32 1 69 1 297 2 157 1 122 1 82 1 312 1 287 1 97 1 24 1 15 1 200 1 236 1 223 1 265 1 323 1 
219 1 156 1 32 1 157 1 374 1 82 1 6 1 312 1 14 1 236 1 291 1 221 1 50 1 223 1 
173 1 32 1 297 2 157 1 122 1 82 1 6 1 312 1 287 1 97 1 24 1 15 1 200 1 236 1 223 1 216 1 265 1 323 1 
153 1 
155 1 51 1 201 1 228 1 77 1 27 1 139 1 
310 1 155 1 370 1 241 1 175 1 90 1 208 1 177 1 231 1 33 1 360 1 51 1 319 1 186 1 201 1 139 2 354 1 
0 2 90 4 175 12 91 2 228 1 177 4 335 2 95 3 231 5 9 2 234 2 185 1 236 3 51 9 238 1 340 2 295 2 139 8 140 2 296 6 344 2 11 2 241 4 298 2 149 2 201 8 203 1 107 2 155 2 156 3 157 3 208 6 21 1 74 2 360 3 120 1 319 5 77 1 267 1 165 2 325 2 219 10 371 1 370 4 32 3 274 1 82 3 328 6 33 5 35 2 221 1 223 4 224 3 332 2 
107 2 0 1 155 2 175 6 90 2 207 1 91 2 254 1 208 3 209 1 177 2 231 1 71 1 313 1 360 1 51 8 52 1 319 1 238 1 340 2 139 5 296 5 344 2 370 2 11 2 241 2 328 5 33 1 34 1 351 1 149 1 201 5 19 1 332 2 89 1 
0 1 90 1 91 2 159 1 180 1 177 1 182 1 49 1 138 1 338 1 289 1 293 1 51 2 319 1 28 1 340 2 30 1 10 1 370 1 241 1 244 1 33 1 64 1 127 1 171 1 201 2 332 1 283 1 
370 1 155 1 241 1 90 1 177 1 228 1 51 1 201 1 77 1 139 1 
107 2 344 2 0 1 11 2 91 2 175 10 208 5 328 5 51 5 201 5 340 2 139 5 332 2 296 5 325 1 
155 1 360 1 319 1 231 1 139 1 33 1 
42 1 156 1 90 1 157 4 94 1 177 2 232 1 231 4 233 1 314 1 360 2 236 1 291 1 51 2 319 3 238 2 267 1 219 1 370 2 241 2 32 4 374 1 274 2 82 4 33 3 221 2 149 2 201 2 223 1 
1 1 156 1 157 1 180 3 22 1 182 2 72 2 359 1 137 1 138 3 289 1 118 1 236 1 339 1 219 1 31 1 32 1 373 1 327 1 82 1 197 1 350 1 245 1 198 1 64 2 221 1 171 2 127 2 85 1 223 1 224 1 380 1 
370 1 155 2 241 1 175 4 90 1 208 2 177 1 328 2 352 1 149 1 51 1 201 2 238 1 139 4 296 2 
146 1 227 1 102 1 
146 1 227 1 102 1 
227 1 162 1 202 1 38 1 102 1 
146 1 227 1 102 1 
227 1 194 1 102 1 
227 1 194 1 102 1 
227 1 194 1 102 1 
227 1 102 1 
255 1 259 1 
91 1 209 1 22 1 71 1 72 2 98 1 7 1 137 1 338 1 293 1 26 2 52 1 10 1 373 4 327 1 300 1 350 1 352 1 351 1 198 8 332 1 88 2 381 4 
107 1 91 2 209 1 22 2 71 2 96 1 72 4 7 1 98 1 337 1 137 2 338 1 293 1 26 3 52 1 10 1 344 1 373 5 327 2 300 1 350 2 352 1 351 1 198 11 18 1 332 1 88 2 381 6 
107 2 207 1 91 3 254 1 209 1 22 3 71 1 313 1 72 6 7 1 98 1 337 1 137 3 338 1 212 1 293 1 26 4 52 1 10 1 344 2 11 2 373 10 327 3 300 1 350 3 352 1 351 1 198 19 18 1 19 1 332 3 88 3 381 9 
107 2 207 1 91 3 254 1 209 1 22 3 71 1 72 6 313 1 7 1 98 1 337 2 137 3 338 1 212 1 293 1 26 5 52 1 10 1 344 2 11 1 373 7 327 3 300 1 350 3 352 1 351 1 198 17 18 1 19 1 332 2 88 3 381 10 
91 1 209 1 22 1 71 1 72 2 98 1 7 1 137 1 338 1 293 1 26 2 52 1 10 1 373 4 327 1 300 1 350 1 352 1 351 1 198 8 332 1 88 2 381 4 
107 2 207 1 91 2 254 1 209 1 22 1 71 1 72 2 313 1 337 1 137 1 26 2 52 1 344 2 11 2 373 6 327 1 300 1 350 1 351 1 198 12 19 1 332 2 88 1 381 6 
107 2 207 1 91 3 254 1 209 1 22 4 71 1 313 1 72 8 7 1 98 1 337 2 137 4 338 1 212 2 293 1 26 5 52 1 10 1 344 2 11 1 373 8 327 4 300 1 350 4 352 1 351 1 198 18 18 1 19 1 332 2 88 3 381 10 
107 3 207 1 91 3 254 1 209 1 22 4 71 1 313 1 72 8 337 3 137 4 212 2 26 6 52 1 344 3 11 2 373 7 327 4 300 1 348 1 350 4 351 1 198 16 19 1 332 2 88 3 381 9 
91 1 373 4 98 1 7 2 337 3 198 7 338 3 293 3 26 6 332 1 88 3 10 1 381 3 
107 2 207 1 91 3 254 1 209 1 22 4 71 1 313 1 72 8 7 1 98 1 337 1 137 4 338 1 212 2 293 1 26 4 52 1 10 1 344 2 11 1 373 8 327 4 300 1 348 1 350 4 352 1 351 1 198 18 19 1 332 2 88 3 381 10 
91 1 373 4 327 2 22 2 350 2 72 4 98 1 7 1 337 1 352 1 137 2 198 8 338 1 212 1 26 3 293 1 332 1 88 2 10 1 381 4 
352 1 198 6 338 1 91 1 26 2 293 1 373 3 27 1 332 1 88 2 7 1 98 1 381 3 10 1 
107 1 344 1 11 1 91 1 373 2 327 1 22 1 350 1 72 2 337 1 137 1 198 4 26 2 18 1 332 1 88 1 381 2 
107 1 344 1 11 1 91 1 373 4 209 1 71 2 96 1 337 1 198 7 26 2 52 1 332 1 88 1 381 3 
107 2 91 3 22 2 46 1 96 1 71 2 113 1 72 4 7 1 98 1 337 4 137 2 338 2 212 2 293 2 26 9 52 2 10 1 344 2 11 2 373 12 327 2 350 2 352 1 198 23 305 1 332 3 88 5 381 11 
198 1 373 1 71 1 
198 1 52 1 381 1 
107 1 344 1 11 1 91 1 373 3 327 1 22 1 350 1 72 2 337 1 137 1 198 6 26 3 18 1 332 1 88 2 325 1 381 3 
107 2 207 1 91 2 254 1 209 1 22 1 71 1 72 2 313 1 337 1 137 1 26 2 52 1 344 2 11 2 373 6 327 1 300 1 350 1 351 1 198 12 19 1 332 2 88 1 381 6 
91 1 373 3 337 1 198 6 338 1 293 1 26 2 332 1 88 1 10 1 381 3 
373 2 327 1 46 1 22 1 350 1 72 2 7 1 98 1 337 1 137 1 198 3 338 1 212 1 26 2 293 1 88 1 381 1 
91 2 373 5 327 1 22 1 300 1 350 1 72 2 49 1 337 2 137 1 198 10 338 2 293 2 26 5 332 2 88 3 381 5 10 1 
344 1 91 1 327 1 300 1 22 1 350 1 72 2 337 1 137 1 198 2 26 1 381 2 
107 1 344 1 11 1 91 1 373 2 327 1 300 1 22 1 350 1 72 2 337 1 137 1 198 4 26 2 332 1 88 1 381 2 
373 2 327 3 46 1 300 1 22 3 348 1 350 3 72 6 337 1 137 3 198 3 338 1 212 1 293 1 26 2 88 1 381 1 
107 3 91 5 209 1 46 1 22 5 71 4 96 1 72 10 7 1 98 1 337 5 137 5 338 3 212 2 260 1 293 3 26 12 52 3 10 2 344 3 11 3 373 18 327 5 300 1 348 1 350 5 352 1 198 34 18 1 378 1 65 1 332 5 88 7 381 16 
138 1 171 1 180 1 131 1 245 1 163 1 168 1 
176 1 180 1 61 1 245 1 168 1 138 1 171 1 320 1 215 1 131 1 163 1 192 1 
219 1 236 1 156 1 291 1 32 1 221 1 157 1 374 1 223 1 82 1 27 1 
219 1 156 1 32 1 157 1 180 2 82 1 182 1 245 1 359 1 114 1 64 1 138 2 236 1 171 1 221 1 85 1 223 1 224 1 
67 1 156 2 157 1 159 1 180 2 182 2 359 1 114 1 138 2 236 1 295 1 219 3 32 1 274 1 82 1 245 1 276 1 64 1 35 1 171 2 85 1 223 1 224 2 
67 1 156 2 157 2 159 1 180 2 182 2 359 1 136 1 114 1 138 2 236 1 295 1 219 3 32 2 274 1 82 2 245 1 276 1 64 1 35 1 171 2 223 1 224 2 249 1 
334 1 155 1 156 1 157 3 95 1 231 1 236 1 319 2 295 1 139 1 140 1 164 1 219 4 32 3 298 1 274 1 82 3 33 2 35 1 221 1 223 1 224 1 249 1 
219 4 155 1 156 1 32 3 157 3 298 1 274 1 82 3 95 1 231 1 33 2 35 1 9 1 236 1 221 1 319 2 223 1 139 1 295 1 224 1 249 1 140 1 
236 1 32 1 157 1 104 1 223 1 82 1 
219 3 371 1 356 1 43 1 156 2 32 6 157 7 81 1 82 7 287 1 147 1 236 2 221 2 120 1 104 1 86 1 223 3 56 1 121 1 224 1 251 1 
91 1 180 2 45 1 182 1 48 1 98 1 7 1 137 2 138 2 338 1 236 1 293 1 339 2 10 1 197 1 350 2 245 2 246 1 352 1 63 1 64 1 198 6 156 1 311 1 157 1 357 1 22 2 72 4 359 1 114 1 118 1 26 2 219 1 31 2 371 1 32 1 373 3 273 1 327 2 82 1 171 1 85 1 223 1 224 1 332 1 88 2 381 3 
155 1 90 2 157 1 228 1 177 2 335 1 95 1 231 2 74 1 9 1 360 1 51 1 319 3 77 1 139 1 267 1 140 1 165 1 219 2 370 2 241 2 32 1 298 1 326 1 82 1 33 3 221 1 201 1 
219 2 371 1 156 1 32 2 298 1 157 2 82 2 236 1 120 1 104 1 223 2 203 1 224 1 
219 1 371 1 156 1 32 4 157 4 374 1 82 4 47 1 291 1 236 1 221 1 223 1 249 1 
219 1 356 1 156 1 32 2 157 2 274 1 81 1 82 2 181 1 184 1 236 1 78 1 223 2 224 1 
173 1 236 1 32 1 221 1 297 1 157 1 122 1 223 1 82 1 323 1 
219 1 308 1 371 1 156 1 32 2 157 2 82 2 287 1 236 1 86 1 223 1 
219 3 371 1 156 2 32 4 157 5 374 1 274 1 82 5 47 1 291 1 236 2 147 1 221 1 86 1 223 2 251 1 
219 3 371 1 156 2 32 4 157 5 374 1 274 1 82 5 47 1 291 1 236 2 147 1 221 1 150 1 86 1 223 2 
219 1 156 1 32 1 157 1 180 2 82 1 182 1 245 1 359 1 136 1 114 1 64 1 138 2 236 1 171 1 221 1 223 1 224 1 
219 1 356 1 156 1 32 1 157 1 274 1 81 1 82 1 236 1 120 1 223 2 56 1 224 1 
138 1 309 1 171 1 261 1 70 1 180 1 369 1 87 1 73 1 
174 1 261 1 217 1 
309 1 261 1 87 1 245 1 57 1 
67 1 309 2 205 1 155 1 174 1 159 1 326 1 358 1 229 1 245 1 33 2 276 1 261 1 319 2 217 1 87 2 139 1 57 2 140 1 
302 1 20 1 27 1 145 1 
302 1 16 1 271 1 242 1 20 1 132 1 145 1 
277 1 16 1 250 1 
271 1 242 3 256 2 145 1 302 1 16 3 84 1 129 1 55 1 20 1 306 1 132 1 
307 1 302 1 16 2 271 1 242 2 20 1 29 1 132 1 145 1 
15 1 173 1 16 1 271 1 297 1 17 1 242 1 222 1 129 1 132 1 145 1 
16 1 271 1 242 1 129 1 20 1 132 1 145 1 
302 1 16 1 271 1 242 1 129 1 20 2 132 1 
271 2 142 1 242 2 145 1 16 2 366 1 129 1 20 1 368 1 132 2 
206 1 271 1 242 3 145 2 302 1 16 3 129 1 222 1 20 1 106 1 29 2 279 1 132 1 
173 1 271 1 297 2 122 1 242 2 329 1 24 1 145 1 302 1 15 1 16 2 129 1 20 1 29 1 132 1 
307 1 302 1 16 4 271 2 242 4 222 1 129 1 20 1 279 1 29 2 132 2 145 2 225 1 
302 1 16 1 271 1 242 1 129 1 20 1 132 1 145 1 
271 1 242 4 256 1 257 1 145 3 302 2 16 4 55 1 222 1 20 2 29 2 279 1 306 1 132 1 
343 1 271 1 242 2 145 1 302 1 16 2 362 1 129 1 20 1 101 1 29 1 132 1 
302 1 68 1 16 3 271 1 242 3 55 2 129 1 256 2 20 1 306 1 132 1 145 1 
60 2 379 1 280 1 145 2 
16 1 317 1 271 1 242 1 129 1 132 1 
302 1 16 2 271 1 242 2 129 1 20 1 106 1 29 1 132 1 145 1 
124 1 
302 1 16 1 271 1 242 1 129 1 20 1 132 1 145 1 
271 1 242 3 256 1 145 1 302 1 16 3 129 1 20 1 106 1 29 1 132 1 
222 1 257 1 279 1 145 1 
20 1 145 1 

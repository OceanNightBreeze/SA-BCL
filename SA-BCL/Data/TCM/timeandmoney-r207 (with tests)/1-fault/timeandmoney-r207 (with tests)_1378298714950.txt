#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 282 338 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 282 338 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
227 2 230 1 84 1 60 5 157 2 129 1 365 1 247 1 159 2 131 2 301 6 324 1 347 9 64 2 349 1 138 2 256 1 167 1 306 4 239 1 262 1 49 1 52 2 194 9 313 1 21 3 172 1 335 1 
227 2 230 1 84 1 60 5 157 2 129 1 365 1 247 1 159 2 131 2 301 6 324 1 347 9 64 2 349 1 138 2 256 1 167 1 306 4 239 1 262 1 49 1 52 2 194 9 313 1 21 3 172 1 335 1 
227 2 230 1 84 1 60 6 157 2 129 1 365 1 247 1 159 2 131 2 301 7 324 1 347 10 64 2 349 1 138 2 256 1 167 1 306 5 239 1 262 1 49 1 52 2 194 10 313 1 21 4 172 1 335 1 
227 2 230 1 84 1 60 4 157 2 129 1 365 1 247 1 159 2 131 2 301 4 347 7 64 2 349 1 138 2 256 1 167 1 306 3 239 1 262 1 49 1 52 1 194 7 313 1 21 2 172 1 335 1 
349 1 227 1 138 1 60 3 306 2 247 1 365 1 159 1 131 1 301 3 49 1 52 2 324 1 64 1 347 4 194 4 21 1 172 1 
36 1 349 1 227 1 138 1 256 1 60 1 69 1 157 1 159 1 342 1 262 1 49 1 64 1 347 2 194 2 172 1 
349 1 227 2 60 2 306 1 157 1 301 1 49 1 64 2 347 3 194 3 21 1 172 1 335 1 
227 2 60 5 157 1 129 1 247 1 365 1 159 1 131 1 301 7 347 9 64 2 324 1 164 1 349 1 138 1 167 1 306 4 14 1 49 1 52 2 194 9 21 3 172 1 335 1 
227 2 60 5 157 1 129 1 247 1 365 1 159 1 131 1 301 7 347 9 64 2 324 1 164 1 349 1 138 1 167 1 306 4 14 1 49 1 52 2 194 9 21 3 172 1 335 1 
46 1 323 1 234 1 
226 1 46 1 310 2 
291 1 151 2 274 1 144 2 162 2 20 2 271 2 135 2 
291 1 102 2 292 1 196 1 151 2 336 1 200 1 1 1 174 1 81 1 271 2 244 1 202 1 5 1 7 1 110 1 209 2 274 1 9 1 345 1 162 2 135 3 252 1 165 1 373 2 254 2 93 1 257 2 187 1 188 1 218 1 98 1 19 1 144 3 20 2 55 1 126 1 
33 1 371 1 151 1 274 1 363 1 144 1 162 1 20 1 271 1 135 1 
56 1 151 1 316 1 337 1 215 1 283 1 363 1 71 1 286 1 46 1 62 1 144 1 323 1 135 1 
56 1 151 1 316 1 337 2 215 1 283 2 363 1 271 1 286 1 46 1 162 1 144 1 20 1 323 1 135 1 
195 1 197 1 337 1 283 1 222 1 
195 1 46 1 337 2 283 2 222 1 82 1 323 1 341 1 
337 1 283 1 222 1 
195 1 371 1 151 1 337 1 283 1 363 1 271 1 85 1 33 1 274 1 162 1 144 1 20 1 135 1 
46 1 
195 1 46 1 268 1 337 2 283 2 222 1 82 1 323 1 
195 2 77 2 337 5 236 1 68 1 118 1 283 5 82 1 285 2 153 1 259 1 46 1 193 1 10 1 222 2 163 2 53 1 323 1 334 1 
291 1 234 1 
291 2 151 2 271 1 144 2 162 1 311 1 20 1 135 2 303 1 
319 1 210 1 340 1 
291 1 102 1 292 1 196 1 373 1 174 1 257 1 244 1 188 1 202 1 110 1 144 1 380 1 135 1 126 1 252 1 
291 1 151 5 39 1 228 2 71 1 271 1 297 1 263 1 162 4 144 5 20 4 322 1 135 5 303 1 
33 1 137 1 151 2 363 1 144 2 162 2 20 2 135 2 
196 1 292 1 102 1 151 1 373 1 228 1 174 1 257 1 244 1 188 1 202 1 110 1 210 1 162 1 144 2 20 1 322 1 135 2 252 1 126 1 
291 1 151 3 228 1 144 3 162 3 271 1 20 3 135 3 
33 1 151 1 363 1 144 1 162 1 20 1 135 1 
151 1 363 1 144 1 162 1 311 1 20 1 271 1 135 1 303 1 
291 1 196 1 292 1 102 1 56 1 151 3 336 1 316 1 228 1 337 1 200 1 1 1 174 1 81 1 363 1 271 2 296 1 244 1 202 1 7 1 110 1 209 1 274 1 162 3 322 1 303 1 135 4 252 1 373 1 254 2 215 1 283 1 257 1 187 1 286 1 188 1 218 1 98 1 19 1 332 1 144 4 20 3 55 1 126 1 
291 1 151 2 228 1 144 2 162 1 71 1 20 1 135 2 297 1 
56 1 151 3 228 2 316 1 337 1 215 1 283 1 363 1 271 1 286 1 296 1 96 1 46 1 162 3 144 3 20 3 322 1 303 1 135 3 
151 2 228 1 210 1 144 2 162 2 20 2 271 1 135 2 303 1 340 1 
291 1 102 1 292 1 196 1 373 1 174 1 257 1 244 1 202 1 188 1 110 1 144 1 135 1 126 1 252 1 
291 1 102 1 292 1 196 1 166 1 373 1 241 1 257 1 244 1 202 1 188 1 110 1 144 1 135 1 252 1 
336 2 242 1 81 1 364 1 340 2 5 2 6 1 7 1 209 4 319 2 210 2 182 1 113 1 92 1 254 2 187 1 258 1 218 1 15 1 354 1 19 1 54 1 55 1 314 1 
56 1 151 1 137 1 363 1 144 1 162 1 20 1 135 1 
13 1 90 1 
13 1 90 1 
269 1 28 1 
269 1 28 1 
269 1 28 1 
105 1 13 1 90 1 
105 1 13 1 90 1 
13 1 90 1 219 1 
178 1 344 1 269 1 28 1 13 2 90 2 
105 1 13 1 90 1 
237 1 13 1 90 1 
237 1 13 1 90 1 
237 1 13 1 90 1 
291 1 151 2 294 1 337 1 317 1 283 1 243 1 107 1 376 1 189 1 219 1 203 1 133 1 8 1 88 1 144 2 162 2 20 2 135 2 13 1 183 1 359 1 90 1 114 1 
315 1 337 2 152 2 58 1 255 1 283 2 107 1 189 2 203 2 378 1 46 1 344 1 133 3 290 1 13 2 183 2 90 2 148 1 114 2 
159 1 131 1 138 1 
159 1 138 1 69 1 
318 1 159 3 131 2 134 1 69 1 22 1 
318 1 159 2 131 1 343 1 69 1 22 1 
318 2 159 2 131 1 69 1 22 1 
226 1 195 4 77 1 337 5 317 1 82 1 243 1 6 1 63 2 163 1 323 1 136 1 235 1 118 1 283 5 285 1 258 1 376 1 73 2 15 1 46 2 16 1 307 1 193 3 122 1 170 1 222 1 310 3 288 2 53 2 265 1 314 1 
226 3 195 7 77 2 197 5 199 1 337 9 317 4 82 1 245 1 155 1 6 3 132 5 111 1 163 2 323 1 185 1 253 1 283 9 118 1 285 2 258 3 73 6 15 3 259 1 46 5 16 2 307 2 193 8 170 3 222 6 310 9 288 6 53 6 265 1 314 3 
226 2 195 2 77 1 337 3 317 1 6 1 63 1 163 1 323 1 136 1 235 1 283 3 285 1 258 1 73 2 15 1 259 1 46 3 16 1 307 1 193 3 170 1 310 4 53 2 288 2 314 1 
226 3 195 3 77 1 199 1 337 4 317 2 155 1 6 2 63 2 163 1 323 1 136 1 253 1 235 1 283 4 285 1 258 2 73 4 15 2 259 1 46 4 16 1 307 1 193 5 170 2 310 7 288 4 53 4 314 2 
302 1 188 1 234 1 
31 1 188 1 
23 1 
110 1 244 1 188 1 
224 1 188 1 
110 1 188 1 
110 1 233 1 302 2 216 1 244 1 188 3 
66 1 336 3 214 1 242 2 175 2 70 1 258 1 231 1 354 3 5 4 108 1 97 1 161 1 209 7 333 1 314 1 225 1 
66 1 336 3 214 1 242 2 175 2 70 1 258 1 231 1 354 3 5 4 108 1 97 1 161 1 209 7 333 1 314 1 225 1 
66 1 336 3 214 1 242 2 104 1 175 2 70 1 258 1 231 1 354 3 5 4 108 1 97 1 161 1 209 7 333 1 314 1 225 1 
336 15 267 1 242 5 175 3 81 1 231 2 246 1 5 16 108 2 130 1 6 3 7 1 161 1 209 31 89 1 348 1 181 1 66 2 214 5 254 2 70 1 187 1 258 4 218 1 354 10 15 3 97 2 141 4 169 3 309 1 170 3 333 1 225 1 314 4 
336 4 242 3 175 2 81 2 231 1 5 5 108 1 366 1 7 2 161 1 209 9 89 1 66 1 351 1 214 1 254 4 70 1 187 2 258 1 218 2 354 4 97 1 314 1 225 1 
102 1 292 1 227 1 361 1 80 1 29 1 60 1 157 1 159 2 131 1 87 1 301 1 134 1 347 2 64 1 252 1 349 1 373 1 138 1 280 1 281 1 116 1 257 1 69 1 240 1 143 1 49 1 194 2 101 1 172 1 
102 1 292 1 227 1 80 1 60 1 177 1 157 1 159 2 131 1 86 1 87 1 301 2 134 1 347 3 64 1 252 1 373 1 138 1 280 1 281 1 116 1 257 1 69 1 355 1 240 1 143 1 49 1 194 3 101 1 172 1 
102 1 292 1 80 1 60 1 177 1 157 1 159 2 87 1 131 1 301 2 134 1 347 2 252 1 373 1 280 1 138 1 281 1 257 1 69 1 355 1 143 1 49 1 194 2 101 1 172 1 
292 1 67 1 102 1 327 1 103 1 227 1 373 1 280 2 281 2 257 1 188 1 156 1 202 1 157 2 110 1 86 1 249 1 358 1 64 1 347 1 194 1 101 2 252 1 
102 1 292 1 227 1 361 1 80 1 157 1 159 2 131 1 87 1 134 1 347 1 64 1 252 1 349 1 373 1 138 1 280 1 281 1 116 1 257 1 69 1 355 1 240 1 143 1 194 1 101 1 
173 1 
102 2 292 1 56 1 103 1 151 1 293 1 337 5 202 2 4 2 204 1 62 1 110 1 160 1 163 1 252 1 215 1 118 1 257 2 71 1 217 2 72 2 16 1 222 6 310 2 76 1 123 1 124 2 125 1 360 1 266 2 226 2 77 1 316 1 79 1 82 3 363 1 30 1 34 1 323 1 135 1 184 1 327 1 373 2 283 5 42 4 285 1 286 1 45 1 188 1 190 2 46 2 193 2 144 1 53 2 147 2 
56 1 151 1 268 1 316 1 337 3 79 1 215 1 42 2 283 3 82 1 363 1 71 1 286 1 217 1 34 1 204 1 62 1 222 2 76 1 144 1 123 1 135 1 
56 1 151 1 268 1 316 1 337 3 79 1 215 1 42 3 283 3 82 1 363 1 71 1 286 1 4 1 34 1 204 1 46 1 62 1 222 1 76 1 144 1 323 1 123 1 135 1 
56 1 151 1 268 1 316 1 337 3 79 1 82 1 363 1 4 1 204 1 34 1 62 1 323 1 135 1 215 1 283 3 42 3 71 1 286 1 217 1 46 1 222 2 144 1 76 1 123 1 147 1 
56 1 151 1 293 1 337 5 338 1 4 4 204 1 62 1 163 1 215 1 118 1 71 1 217 4 72 2 222 7 76 1 123 1 124 2 226 2 266 2 77 1 316 1 268 1 25 1 79 1 363 1 82 3 30 1 34 1 369 1 323 5 135 1 42 6 283 5 282 1 186 1 285 1 286 1 190 2 46 5 193 1 144 1 53 1 147 4 
360 1 266 2 226 2 77 1 56 1 151 1 293 1 316 1 337 4 79 1 82 2 363 1 30 1 4 2 204 1 34 1 62 1 163 1 323 1 135 1 215 1 118 1 283 4 42 4 285 1 71 1 286 1 217 2 72 2 190 2 46 2 193 1 222 4 310 2 76 1 144 1 53 1 147 2 123 1 124 2 
266 2 226 2 56 1 77 1 151 1 293 1 316 1 25 1 337 4 79 1 82 2 30 1 363 1 4 2 204 1 34 1 62 1 163 1 323 1 135 1 215 1 283 4 42 4 282 1 118 1 186 1 71 1 285 1 286 1 217 2 72 2 190 2 46 1 193 1 222 4 144 1 76 1 53 1 147 2 123 1 124 2 
266 2 226 2 56 1 77 1 151 1 293 1 316 1 25 1 337 4 79 1 82 2 30 1 363 1 4 2 204 1 34 1 62 1 163 1 323 1 135 1 215 1 283 4 42 4 282 1 118 1 186 1 71 1 285 1 286 1 217 2 72 2 190 2 46 1 193 1 222 4 144 1 76 1 53 1 147 2 123 1 124 2 
56 1 77 1 151 1 26 2 293 1 316 1 337 4 79 1 82 2 363 1 4 2 204 1 34 1 62 1 163 1 346 2 323 1 135 1 215 1 283 4 42 4 117 1 118 1 186 1 305 1 71 1 285 1 286 1 217 2 72 2 192 1 46 1 193 1 222 4 310 2 144 1 76 1 53 1 147 2 123 1 124 2 
56 1 151 1 316 1 337 2 79 1 215 1 282 1 42 3 283 2 363 1 338 1 71 1 286 1 217 1 4 1 34 1 204 1 62 1 222 1 76 1 144 1 147 1 123 1 135 1 
56 1 151 1 316 1 337 2 79 1 215 1 282 1 42 3 283 2 363 1 338 1 71 1 286 1 217 1 4 1 34 1 204 1 62 1 222 1 76 1 144 1 147 1 123 1 135 1 
360 1 77 1 56 1 151 1 26 2 293 1 316 1 337 4 79 1 82 2 363 1 4 2 204 1 34 1 62 1 163 1 346 2 323 1 135 1 215 1 118 1 283 4 42 4 285 1 71 1 286 1 217 2 72 2 192 1 46 1 193 1 222 4 310 2 76 1 144 1 53 1 147 2 123 1 124 2 
291 2 336 3 242 2 175 1 81 1 340 1 5 3 7 1 161 1 209 6 319 1 210 1 234 1 66 1 254 2 70 1 187 1 258 1 218 1 354 2 97 1 19 1 54 1 55 1 225 1 314 1 
291 1 24 1 336 6 242 1 1 1 295 1 81 2 246 1 340 4 5 8 109 1 6 2 7 2 209 14 319 11 210 11 350 1 214 1 254 4 93 1 187 2 258 2 218 2 354 2 15 1 141 3 309 1 19 1 169 3 170 2 357 1 55 2 314 1 
291 1 196 1 292 1 102 1 151 1 336 1 228 1 174 1 1 1 81 1 244 1 202 1 340 1 5 1 110 1 7 1 209 2 162 1 322 1 135 2 252 1 350 1 373 1 254 2 93 1 257 1 95 1 187 1 188 1 218 1 18 1 19 1 380 1 144 2 20 1 55 1 100 1 126 1 
291 2 102 3 292 2 196 2 151 1 150 2 336 10 242 4 1 1 59 2 201 2 244 2 202 1 340 7 5 10 298 1 6 2 7 3 110 2 161 1 209 20 210 7 162 1 252 2 66 1 350 1 214 4 254 6 119 2 257 3 70 1 258 3 218 3 354 8 15 2 355 1 19 3 170 2 20 1 225 1 314 3 126 2 228 1 175 1 174 2 81 3 319 7 368 1 322 1 135 3 373 3 93 1 44 1 187 3 188 2 97 1 98 2 144 3 55 3 
292 2 102 7 151 1 103 1 336 1 228 1 1 1 81 2 29 1 2 1 202 2 5 1 367 1 232 1 7 2 110 2 179 1 209 2 162 1 325 1 135 1 252 2 165 2 327 1 373 8 254 4 41 1 93 1 43 1 257 8 187 2 188 3 218 2 355 1 19 2 144 1 54 1 20 1 55 2 
151 1 336 2 242 1 81 1 271 1 340 1 5 1 6 1 7 1 319 1 209 3 210 1 162 1 303 1 135 1 350 1 254 2 374 1 187 1 258 1 218 1 354 1 15 1 19 1 170 1 144 1 20 1 55 1 314 1 
214 1 92 1 254 2 81 1 187 1 258 1 340 1 218 1 354 1 5 2 6 1 7 1 319 1 209 2 210 1 19 1 54 1 55 1 
336 2 254 2 242 1 81 1 187 1 340 1 218 1 354 1 15 1 7 1 319 1 209 2 210 1 19 1 54 1 55 1 113 1 314 1 
336 2 242 1 81 1 340 2 5 2 6 1 7 1 209 4 319 2 210 2 214 1 254 2 187 1 258 1 218 1 354 2 15 1 19 1 170 1 54 1 55 1 314 1 
214 1 92 1 254 2 41 1 81 1 187 1 258 1 340 1 218 1 354 1 5 2 6 1 7 1 319 1 209 2 210 1 19 1 55 1 
336 2 254 2 242 1 41 1 81 1 187 1 340 1 218 1 354 1 15 1 7 1 319 1 209 2 210 1 19 1 55 1 113 1 314 1 
336 2 242 1 81 1 340 2 5 2 6 1 7 1 209 4 319 2 210 2 214 1 254 2 41 1 187 1 258 1 218 1 354 2 15 1 19 1 170 1 55 1 314 1 
336 2 214 1 254 2 242 1 81 1 187 1 258 1 340 2 218 1 15 1 354 2 5 2 6 1 7 1 319 2 209 4 210 2 19 1 170 1 55 1 314 1 
291 1 196 1 292 1 102 1 336 1 174 1 1 1 81 1 244 1 202 1 5 1 110 1 7 1 209 2 135 1 252 1 373 1 254 2 93 1 257 1 187 1 188 1 218 1 98 1 19 1 144 1 55 1 126 1 
291 1 196 1 292 1 102 1 336 1 241 1 1 1 81 1 244 1 202 1 5 1 110 1 7 1 209 2 135 1 252 1 166 1 373 1 254 2 93 1 257 1 187 1 188 1 218 1 330 1 19 1 144 1 55 1 
336 2 242 1 81 1 340 2 5 2 6 1 7 1 209 4 319 2 210 2 350 1 214 1 254 2 187 1 258 1 218 1 354 2 15 1 19 1 170 1 55 1 314 1 
196 1 292 1 102 1 336 2 242 1 174 1 59 1 81 1 29 1 244 1 340 2 5 2 6 1 110 1 7 1 319 2 209 4 210 2 135 1 252 1 214 1 373 1 254 2 257 1 187 1 258 1 188 1 218 1 15 1 354 2 98 1 19 1 170 1 144 1 55 1 314 1 126 1 
151 1 336 1 81 1 271 1 340 1 5 2 6 1 7 1 209 3 319 1 210 1 162 1 321 1 303 1 135 1 350 1 214 1 254 2 187 1 258 1 218 1 15 1 354 1 19 1 170 1 144 1 20 1 55 1 314 1 
336 10 242 3 81 2 272 1 339 1 246 1 5 9 366 1 6 3 206 1 7 2 209 19 251 1 91 2 214 3 254 4 187 2 328 1 258 3 218 2 354 6 15 3 141 2 221 1 309 1 169 1 170 3 51 2 50 1 314 3 
336 12 242 2 81 3 272 1 5 14 61 1 248 1 366 1 6 3 206 2 7 3 209 26 89 2 277 1 278 1 304 1 91 1 214 2 254 6 187 3 328 1 258 3 218 3 354 4 15 2 139 1 221 1 141 2 309 2 169 2 170 3 51 4 50 2 314 2 
336 21 242 4 246 1 339 1 5 20 248 1 61 1 6 4 206 2 7 3 161 1 209 41 66 1 304 1 214 4 254 6 70 1 258 5 218 3 15 4 354 8 221 1 74 1 169 3 309 3 170 4 314 5 225 1 175 1 81 3 272 1 366 1 89 1 277 1 278 1 91 1 187 3 328 1 139 1 97 1 141 4 50 1 51 4 
336 18 242 4 175 1 81 4 272 1 339 1 246 1 5 20 61 1 248 1 366 1 6 4 206 2 7 4 161 1 209 38 89 2 66 1 277 1 278 1 304 1 91 1 214 3 254 8 70 1 187 4 328 1 258 5 218 4 354 7 15 3 139 1 97 1 74 1 141 4 221 1 309 3 169 3 170 4 51 4 50 1 225 1 314 4 
336 25 242 7 175 1 295 2 81 2 272 1 246 2 5 27 61 1 248 1 366 1 6 7 206 1 7 2 161 1 209 52 89 1 66 1 277 1 278 1 304 1 91 1 214 7 254 4 70 1 187 2 328 1 258 8 218 2 354 14 15 7 139 1 97 1 141 4 221 1 309 2 169 4 170 7 51 4 50 1 225 1 314 8 
203 1 378 1 344 1 106 1 290 1 183 1 13 1 90 1 189 1 114 1 
294 1 219 1 
203 1 47 1 284 1 183 1 13 1 90 1 212 1 189 1 114 1 
105 1 375 1 
178 1 121 1 237 1 
315 1 337 1 152 1 255 1 283 1 107 1 189 1 203 1 378 1 46 1 344 1 133 2 290 1 13 1 183 1 90 1 148 1 114 1 
315 1 337 1 152 1 255 1 283 1 107 1 189 1 203 1 378 1 46 1 344 1 133 2 290 1 13 1 183 1 90 1 148 1 114 1 
315 1 337 1 152 1 255 1 283 1 107 1 189 1 203 1 378 1 46 1 344 1 133 2 290 1 13 1 183 1 90 1 148 1 114 1 
178 1 105 1 375 1 
178 1 105 1 375 1 
121 1 237 1 
178 1 121 1 237 1 
88 1 359 1 
291 1 195 1 315 1 151 2 152 1 337 1 294 1 317 1 243 1 203 1 133 1 8 1 88 1 162 2 135 2 183 1 13 1 90 1 114 1 283 1 376 1 189 1 219 1 331 1 144 2 20 2 359 1 
292 1 102 2 149 1 151 2 336 1 229 1 1 1 81 1 5 1 205 1 367 1 110 1 232 1 7 1 209 2 135 2 252 1 350 1 165 2 373 2 254 2 93 1 257 2 187 1 188 1 218 1 191 1 19 1 144 2 145 1 55 1 
292 1 102 2 373 2 138 1 281 1 116 1 80 1 29 1 69 1 257 2 128 1 355 1 159 2 131 1 299 1 134 1 143 1 11 1 252 1 
102 1 292 1 373 1 138 1 281 1 116 1 80 1 69 1 257 1 128 1 355 1 159 2 131 1 75 1 134 1 143 1 252 1 
292 1 102 1 279 1 103 1 327 1 373 1 281 1 257 1 188 1 202 1 156 1 110 1 299 1 252 1 
102 1 292 1 373 1 138 1 281 1 116 1 80 1 69 1 257 1 128 1 355 1 159 2 131 1 299 1 134 1 143 1 11 1 252 1 
65 1 
46 1 193 1 236 1 68 1 53 1 323 1 234 1 
266 1 226 1 77 1 337 1 283 1 118 1 82 1 30 1 285 1 190 1 46 2 193 1 222 1 310 1 163 1 53 1 323 1 
292 3 102 3 57 2 150 2 337 5 244 3 202 1 6 2 110 3 207 1 208 1 300 2 302 2 163 4 252 4 213 1 68 1 118 4 216 1 257 3 258 2 73 6 15 2 16 2 222 5 170 2 310 12 224 2 314 2 226 6 77 4 362 2 27 1 270 2 29 1 31 3 82 3 273 2 323 2 373 3 236 1 283 5 285 4 286 2 45 1 188 10 46 8 193 9 99 2 142 2 48 2 379 1 288 6 53 8 
226 3 77 2 337 1 82 1 61 1 248 1 6 2 163 2 323 2 370 1 277 1 304 1 283 1 118 2 285 2 45 1 258 2 73 5 15 2 139 1 16 1 46 5 17 1 99 1 193 8 141 1 142 2 309 1 169 1 222 1 170 2 310 6 288 5 53 5 314 2 
77 1 151 1 25 1 337 1 363 1 271 1 85 1 33 1 274 1 163 1 162 1 135 1 66 1 371 1 118 1 283 1 285 1 258 2 97 1 260 1 99 1 193 2 142 2 144 1 53 2 20 1 225 1 314 1 
77 1 236 1 68 1 118 1 285 1 46 1 193 1 163 1 53 1 323 1 
226 5 150 1 258 2 73 5 15 2 6 2 46 5 99 1 193 5 142 2 170 2 310 10 53 5 288 5 314 2 
46 1 337 1 283 1 222 1 82 1 323 1 
292 1 102 4 77 2 103 1 337 3 82 2 202 2 110 1 160 1 163 2 252 1 213 1 37 1 327 1 373 4 118 1 283 3 257 4 285 2 45 2 188 1 259 1 16 2 220 1 193 2 379 2 222 4 53 2 125 1 
291 1 102 1 292 1 196 1 151 2 336 1 200 1 1 1 174 1 81 1 271 2 244 1 202 1 7 1 110 1 209 1 274 1 162 2 135 3 252 1 373 1 254 2 257 1 187 1 188 1 218 1 98 1 19 1 144 3 20 2 55 1 126 1 
226 2 77 1 175 1 118 1 285 1 45 1 73 2 16 1 46 4 193 1 310 4 163 1 288 2 53 2 323 2 
83 1 183 1 114 1 
83 1 183 1 114 1 
88 1 290 1 183 1 238 1 114 1 
83 1 183 1 114 1 
35 1 183 1 114 1 
35 1 183 1 114 1 
35 1 183 1 114 1 
183 1 114 1 
13 1 90 1 
66 1 336 4 214 1 254 4 242 2 175 1 81 2 70 1 187 2 258 1 218 2 5 4 354 3 97 1 7 2 161 1 209 8 89 1 314 1 225 1 
66 1 97 1 336 3 161 1 209 6 242 2 175 1 70 1 258 1 314 1 5 3 225 1 354 2 234 1 
336 2 214 1 254 2 242 1 81 1 187 1 258 1 218 1 15 1 354 2 5 2 6 1 7 1 209 4 170 1 112 1 314 1 
336 4 214 1 242 1 258 1 246 1 15 1 5 3 354 2 6 1 141 2 209 7 309 1 169 1 170 1 314 1 
336 12 242 5 175 1 295 1 81 2 246 1 5 11 6 2 109 1 7 2 161 1 209 23 320 1 89 2 66 2 214 4 254 4 70 1 187 2 258 3 218 2 354 9 15 2 97 2 141 2 169 2 170 2 225 1 314 3 
336 1 209 1 141 1 
209 1 169 1 5 1 
150 1 336 3 214 1 254 2 242 2 81 1 187 1 258 1 218 1 5 3 354 3 15 1 6 1 7 1 209 6 170 1 112 1 314 1 
336 6 242 1 81 1 5 6 248 1 61 1 366 1 6 2 7 1 209 12 277 1 304 1 214 1 254 2 187 1 258 2 218 1 15 2 354 2 139 1 141 1 169 1 309 1 170 2 314 2 
66 1 336 3 214 1 242 1 258 1 5 3 354 2 97 1 209 6 225 1 314 1 
66 1 214 1 336 2 254 2 242 1 81 1 70 1 187 1 218 1 5 1 354 2 97 1 7 1 161 1 209 3 320 1 89 1 
66 2 214 2 336 5 254 2 242 3 81 1 187 1 258 2 218 1 354 5 5 5 366 1 260 1 97 2 7 1 209 10 225 1 314 2 
214 1 254 2 81 1 187 1 258 1 218 1 5 2 354 1 366 1 6 1 7 1 209 2 
336 2 214 1 254 2 242 1 81 1 187 1 258 1 218 1 15 1 354 2 5 2 366 1 6 1 7 1 209 4 170 1 314 1 
66 1 336 2 214 1 254 6 242 1 81 3 187 3 339 1 218 3 354 2 5 1 366 1 97 1 7 3 209 3 320 1 89 1 
267 1 336 18 242 7 175 1 81 5 339 1 246 1 5 16 130 1 366 1 6 3 7 5 161 1 209 34 320 1 89 2 181 1 112 1 66 3 214 5 254 10 70 1 187 5 258 5 218 5 354 12 15 3 97 3 141 4 309 1 169 3 170 3 225 2 314 5 
336 4 242 2 175 1 81 1 5 4 366 1 7 1 161 1 209 8 66 1 254 2 70 1 187 1 258 1 218 1 354 2 139 1 97 1 141 1 169 1 309 1 314 1 225 1 
336 5 242 2 175 1 81 2 246 1 5 6 366 1 6 1 7 2 161 1 209 11 112 1 66 1 214 1 254 4 70 1 187 2 258 2 218 2 354 3 139 1 97 1 141 2 309 1 169 1 170 1 314 1 225 1 
336 10 242 3 175 1 81 3 5 9 61 1 248 1 366 1 6 2 7 3 161 1 209 19 89 1 112 1 66 1 277 1 304 1 214 1 254 6 70 1 187 3 258 3 218 3 15 2 354 4 139 1 97 1 141 1 169 1 309 1 170 2 225 1 314 3 
336 7 242 3 175 1 81 3 5 10 248 1 61 1 366 1 6 2 7 3 161 1 209 17 89 1 112 1 66 1 277 1 304 1 214 2 254 6 70 1 187 3 258 3 218 3 15 1 354 5 139 1 97 1 141 1 169 1 309 1 170 2 225 1 314 2 
336 4 242 2 175 1 81 1 5 4 366 1 7 1 161 1 209 8 66 1 254 2 70 1 187 1 258 1 218 1 354 2 139 1 97 1 141 1 169 1 309 1 314 1 225 1 
336 6 242 1 81 1 5 6 248 1 61 1 366 1 6 2 7 1 209 12 277 1 304 1 214 1 254 2 187 1 258 2 218 1 15 2 354 2 139 1 141 1 169 1 309 1 170 2 314 2 
336 8 242 3 175 1 81 4 5 10 61 1 248 1 366 1 6 2 7 4 161 1 209 18 89 2 112 1 66 1 277 1 304 1 214 2 254 8 70 1 187 4 258 3 218 4 15 1 354 5 139 1 97 1 141 1 309 1 169 1 170 2 225 1 314 2 
336 7 242 3 81 4 339 1 5 9 61 1 248 1 366 1 6 3 7 4 209 16 89 2 277 1 304 1 214 3 254 8 187 4 258 3 218 4 15 2 354 6 139 1 141 1 309 1 169 1 170 3 314 2 
66 3 336 4 214 3 242 3 70 2 258 1 354 6 5 3 97 3 161 1 209 7 314 1 225 1 
336 8 242 3 175 1 81 4 339 1 5 10 61 1 248 1 366 1 6 2 7 4 161 1 209 18 89 2 66 1 277 1 304 1 214 1 254 8 70 1 187 4 258 3 218 4 15 1 354 4 139 1 97 1 141 1 309 1 169 1 170 2 225 1 314 2 
291 1 151 1 144 1 71 1 381 1 135 1 297 1 
291 1 151 1 356 1 144 1 211 1 71 1 381 1 135 1 287 1 154 1 297 1 120 1 
292 1 102 1 327 1 103 1 110 1 373 1 257 1 188 1 202 1 252 1 234 1 
291 1 196 1 102 1 292 1 151 1 373 1 228 1 257 1 244 1 188 1 202 1 110 1 162 1 144 2 20 1 135 2 252 1 126 1 
291 1 292 1 102 1 196 1 56 1 151 2 228 1 363 1 244 2 110 2 162 1 135 2 252 1 373 1 215 1 257 1 188 3 48 1 379 1 144 2 20 2 224 1 126 1 
291 1 292 1 102 2 196 1 56 1 151 2 198 1 241 1 228 1 363 1 244 2 110 2 162 1 135 2 252 1 373 2 215 1 257 2 188 3 48 1 379 1 144 2 20 2 224 1 
102 3 292 1 373 3 198 1 337 2 40 1 283 2 31 1 257 3 286 1 244 1 202 1 188 4 46 1 110 1 48 1 302 1 379 1 222 1 323 1 224 1 252 1 171 1 
102 3 292 1 373 3 198 1 337 2 283 2 31 1 257 3 286 1 244 1 202 1 188 4 46 1 110 1 300 1 48 1 302 1 379 1 222 1 323 1 224 1 252 1 
292 1 102 1 373 1 43 1 257 1 252 1 
102 6 292 2 165 1 372 1 373 7 43 1 29 1 216 1 257 7 2 1 244 1 202 2 188 3 3 1 329 1 355 1 232 1 110 2 179 1 325 1 252 3 
291 2 196 1 292 1 102 1 151 1 336 3 228 1 242 2 175 1 174 1 81 2 59 1 29 1 244 1 340 1 5 3 205 1 110 1 7 2 161 1 319 1 209 6 210 1 162 1 135 2 252 1 66 1 350 1 373 1 254 4 119 1 257 1 70 1 187 2 258 1 188 1 218 2 354 2 97 1 98 1 19 2 144 2 20 1 55 2 314 1 225 1 126 1 
102 1 195 1 77 2 57 1 362 1 337 3 31 1 82 1 202 1 273 1 300 1 302 1 163 2 323 1 213 1 373 1 236 1 68 1 118 2 283 3 257 1 285 2 286 1 188 2 46 1 193 1 222 2 53 1 
102 2 292 1 373 2 29 1 43 1 216 1 257 2 244 1 188 2 208 1 110 1 302 1 252 2 
102 4 292 1 103 1 327 1 373 4 198 1 29 1 257 4 202 1 188 1 110 1 180 1 252 1 
102 2 292 1 373 2 0 1 352 1 257 2 44 1 244 1 188 1 3 1 329 1 110 1 379 1 252 2 
292 1 102 1 159 1 373 1 138 1 80 1 69 1 257 1 202 1 252 1 
102 2 292 1 373 2 29 1 257 2 188 1 191 1 355 1 232 1 110 1 252 1 
102 4 292 2 327 1 103 1 373 5 29 1 257 5 2 1 202 1 188 3 232 1 110 2 379 1 180 1 325 1 252 2 
102 4 292 2 327 1 103 1 373 5 29 1 257 5 202 1 188 3 232 1 110 2 379 1 180 1 250 1 325 1 252 2 
291 1 196 1 102 1 292 1 151 1 373 1 228 1 241 1 257 1 244 1 188 1 202 1 110 1 162 1 144 2 20 1 135 2 252 1 
102 1 292 1 372 1 373 1 216 1 257 1 244 1 188 1 3 1 329 1 110 1 379 1 252 2 
291 1 168 1 176 1 32 1 276 1 
291 1 195 1 56 1 316 1 337 2 215 1 283 2 168 2 363 1 127 1 176 2 32 2 286 1 296 1 46 1 12 1 323 1 312 1 276 1 
151 1 149 1 229 1 168 1 144 1 145 1 32 1 135 1 276 1 
127 1 312 1 276 1 
60 1 49 1 172 1 234 1 
227 1 60 1 49 1 347 1 64 1 194 1 172 1 
347 1 101 1 157 1 
349 1 227 1 78 1 60 1 377 1 262 2 264 1 49 1 64 1 347 3 194 3 172 1 
227 1 301 1 60 1 49 1 52 1 347 2 64 1 194 2 172 1 
349 1 227 1 138 1 60 1 306 1 365 1 159 1 131 1 64 1 347 1 194 1 
349 1 227 1 60 1 347 1 64 1 194 1 172 1 
349 1 227 1 49 1 347 1 64 1 194 1 172 2 
349 1 227 2 60 1 353 1 261 1 64 2 347 2 289 1 194 2 172 1 
349 1 227 1 167 1 60 2 306 1 129 1 301 2 49 1 64 1 347 3 194 3 21 1 172 1 
349 1 227 1 115 1 138 1 60 1 69 1 159 2 131 1 301 1 134 1 49 1 64 1 347 2 194 2 172 1 
349 1 227 2 60 2 306 1 301 2 49 1 52 1 64 2 347 4 324 1 194 4 21 1 172 1 
349 1 227 1 60 1 49 1 347 1 64 1 194 1 172 1 
227 1 78 1 60 3 306 1 377 1 158 1 301 2 262 1 49 2 347 4 64 1 194 4 21 1 172 2 
349 1 227 1 60 1 308 1 140 1 301 1 49 1 64 1 347 2 194 2 164 1 172 1 
349 1 227 1 78 2 60 1 377 1 262 2 223 1 49 1 64 1 347 3 194 3 172 1 
38 1 275 1 60 2 146 2 
326 1 349 1 227 1 347 1 64 1 194 1 
349 1 227 1 301 1 167 1 60 1 49 1 347 2 64 1 194 2 172 1 
94 1 
349 1 227 1 60 1 49 1 347 1 64 1 194 1 172 1 
349 1 227 1 301 1 167 1 262 1 60 1 49 1 347 3 64 1 194 3 172 1 
158 1 60 1 306 1 21 1 
60 1 172 1 

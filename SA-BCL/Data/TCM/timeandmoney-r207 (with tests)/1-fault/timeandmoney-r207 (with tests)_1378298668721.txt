#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 1 332 1 347 1 127 1 14 1 82 2 192 1 144 1 195 2 117 3 45 2 325 3 216 1 
25 4 332 2 314 2 82 5 6 1 315 1 144 1 117 9 364 1 342 1 281 2 122 1 12 1 62 1 347 1 126 1 127 3 41 1 14 1 168 2 236 1 191 1 192 6 195 2 45 2 325 9 326 2 216 1 
25 4 332 2 314 2 82 5 6 1 315 1 144 1 117 9 364 1 342 1 281 2 122 1 12 1 62 1 347 1 126 1 127 3 41 1 14 1 168 2 236 1 191 1 192 6 195 2 45 2 325 9 326 2 216 1 
25 5 332 2 314 2 82 6 6 1 315 1 144 1 117 10 364 1 342 1 281 2 122 1 12 1 62 1 347 1 126 1 127 4 41 1 14 1 168 2 236 1 191 1 192 7 195 2 45 2 325 10 326 2 216 1 
25 3 332 2 314 2 82 4 6 1 315 1 144 1 117 7 364 1 342 1 281 2 122 1 12 1 62 1 347 1 126 1 127 2 41 1 14 1 168 1 236 1 192 4 195 2 45 2 325 7 326 2 216 1 
281 1 122 1 25 2 347 1 127 1 168 2 82 3 314 1 236 1 191 1 192 3 144 1 195 1 117 4 45 1 326 1 325 4 216 1 
281 1 332 1 271 1 62 1 347 1 126 1 157 1 375 1 82 1 144 1 195 1 117 2 45 1 325 2 326 1 216 1 
172 1 25 4 332 1 82 5 314 1 6 1 144 1 117 9 122 1 281 1 12 1 347 1 127 3 14 1 320 1 168 2 236 1 191 1 192 7 195 2 45 2 325 9 326 1 216 1 
172 1 25 4 332 1 82 5 314 1 6 1 144 1 117 9 122 1 281 1 12 1 347 1 127 3 14 1 320 1 168 2 236 1 191 1 192 7 195 2 45 2 325 9 326 1 216 1 
319 1 371 1 289 1 133 1 197 1 188 1 78 1 277 1 115 1 55 1 103 1 287 1 118 1 317 1 
222 1 
51 1 133 2 289 1 259 1 165 1 222 1 118 2 189 1 
109 1 132 2 289 2 133 5 344 1 165 2 222 1 13 2 65 2 28 1 189 1 51 1 54 1 234 1 362 1 261 1 336 1 118 5 318 1 
51 1 93 1 222 1 
81 1 175 2 222 1 
277 2 319 2 55 2 371 2 22 1 103 2 188 1 78 2 
22 1 267 1 290 1 329 2 114 1 361 1 2 1 309 2 77 2 49 1 78 2 79 2 310 1 277 2 139 1 176 1 55 2 333 1 180 1 316 1 363 1 183 1 184 1 88 1 319 2 61 1 371 3 188 1 251 1 253 1 68 1 257 1 104 1 103 3 152 2 214 1 106 1 
277 1 115 1 319 1 55 1 371 1 197 1 103 1 188 1 287 1 78 1 
371 1 133 1 330 1 231 1 299 1 222 1 125 1 78 1 205 1 51 1 66 1 115 1 103 1 118 1 
319 1 371 1 133 2 231 1 299 1 222 1 125 1 78 1 205 1 51 1 277 1 115 1 55 1 103 1 118 2 
133 1 289 1 165 1 48 1 118 1 
51 1 133 2 289 1 165 1 222 1 278 1 118 2 189 1 
133 1 165 1 118 1 
319 1 371 2 22 2 78 2 277 1 141 1 55 1 103 2 159 1 
185 1 321 1 143 1 
61 1 371 1 22 1 114 1 361 1 98 1 77 1 79 1 333 1 68 1 103 1 183 1 152 1 184 1 214 1 106 1 
93 1 22 1 
21 1 319 1 61 1 371 2 114 1 361 1 77 1 78 1 79 1 68 1 55 1 333 1 321 1 103 2 183 1 184 1 302 1 152 1 214 1 106 1 
368 1 21 2 319 4 371 5 22 1 330 1 78 5 277 1 55 4 141 1 378 1 103 5 302 1 262 1 
115 1 319 2 55 2 371 2 197 1 103 2 194 1 78 2 
277 1 21 1 319 3 55 3 371 3 22 1 103 3 78 3 
115 1 319 1 55 1 371 1 197 1 103 1 78 1 
277 1 115 1 319 1 55 1 141 1 371 1 103 1 159 1 78 1 
21 1 22 1 133 1 329 1 114 1 361 1 2 1 309 2 77 1 49 1 78 3 79 1 310 1 277 2 115 1 139 1 176 1 333 1 141 1 55 3 180 1 316 1 183 1 184 1 118 1 319 3 61 1 371 4 231 1 188 1 299 1 125 1 251 1 205 1 210 1 68 1 253 1 42 1 104 1 103 4 302 1 152 1 214 1 106 1 
319 1 21 1 55 1 371 2 22 1 378 1 103 2 330 1 78 2 
21 2 319 3 371 3 133 1 231 1 299 1 222 1 125 1 205 1 78 3 277 1 115 1 141 1 55 3 42 1 103 3 193 1 302 1 118 1 
21 1 319 2 371 2 78 2 277 1 141 1 55 2 321 1 143 1 103 2 
61 1 371 1 22 1 114 1 361 1 77 1 79 1 333 1 68 1 103 1 152 1 184 1 183 1 214 1 106 1 
10 1 61 1 371 1 22 1 114 1 361 1 27 1 77 1 79 1 103 1 152 1 184 1 183 1 214 1 106 1 
355 1 290 2 329 4 76 1 2 1 309 2 49 1 176 1 139 2 246 1 143 2 85 1 179 1 180 1 227 1 90 1 185 2 251 1 148 1 321 2 43 1 104 1 18 1 171 1 
115 1 319 1 55 1 371 1 103 1 299 1 194 1 78 1 
164 1 353 1 270 1 
52 1 203 1 164 2 58 1 221 1 270 2 
164 1 270 1 
164 1 270 1 
203 1 221 1 
203 1 221 1 
203 1 221 1 
164 1 57 1 270 1 
164 1 57 1 270 1 
164 1 57 1 270 1 
164 1 16 1 270 1 
164 1 16 1 270 1 
164 1 16 1 270 1 
353 1 22 1 133 1 270 1 78 2 55 2 178 1 86 1 118 1 338 1 340 1 9 1 319 2 164 1 369 1 371 2 124 1 36 1 373 1 151 1 285 1 103 2 71 1 305 1 
91 1 164 2 369 1 370 1 154 2 133 2 36 2 270 2 222 1 274 1 256 1 116 1 151 2 58 1 162 1 118 2 338 2 305 2 340 3 
157 1 314 1 211 1 326 2 167 2 
314 1 281 1 326 1 
157 1 281 1 326 1 
157 1 140 1 314 2 211 1 326 3 167 1 
157 1 314 1 211 1 182 1 326 2 167 1 
132 1 133 5 289 4 222 2 76 1 311 1 81 1 51 1 245 1 175 3 54 3 334 2 178 1 336 1 118 5 318 2 341 1 297 1 165 1 373 1 13 1 346 1 374 2 65 1 189 1 148 1 209 1 285 1 43 1 18 1 303 2 381 1 
109 1 132 2 133 9 289 7 1 1 222 5 360 1 76 3 48 5 81 3 51 1 245 2 175 9 54 8 334 6 178 4 336 1 118 9 318 6 341 2 230 1 165 6 13 2 65 2 189 1 208 5 148 3 209 1 101 1 69 1 258 1 43 3 18 3 303 6 381 3 
109 1 132 1 289 2 133 3 222 3 76 1 311 1 51 1 81 2 245 1 54 3 175 4 178 1 334 2 118 3 341 1 318 2 13 1 346 1 374 1 65 1 148 1 43 1 18 1 381 1 303 2 
109 1 132 1 133 4 289 3 1 1 222 4 360 1 76 2 311 1 51 1 81 3 245 1 175 7 54 5 334 4 178 2 118 4 341 1 318 4 13 1 346 1 374 2 65 1 148 2 258 1 43 2 18 2 303 4 381 2 
47 1 
280 1 93 1 183 1 
183 1 306 1 
183 1 214 1 106 1 
11 1 183 1 
183 1 214 1 
280 2 15 1 147 1 183 3 214 1 106 1 
35 1 290 4 173 1 329 7 198 1 76 1 273 1 139 3 246 2 102 2 158 1 5 1 43 1 335 1 213 1 89 1 304 1 171 3 
290 11 173 1 112 1 329 23 269 1 198 1 2 2 76 3 309 4 49 2 29 1 176 2 139 12 246 2 5 1 158 4 335 1 89 2 8 3 365 1 366 1 250 4 300 2 251 2 148 3 255 1 102 1 149 1 43 3 18 3 381 3 171 6 
290 5 329 9 173 1 76 1 2 2 309 4 49 2 273 1 176 2 139 4 246 3 158 1 5 1 335 1 201 1 89 1 35 1 300 1 251 2 102 2 43 1 213 1 380 1 171 4 
35 1 290 4 173 1 329 7 198 1 76 1 273 1 139 3 246 2 102 2 158 1 5 1 43 1 335 1 213 1 89 1 171 3 
35 1 290 4 173 1 329 7 198 1 76 1 273 1 139 3 246 2 102 2 158 1 5 1 43 1 335 1 213 1 89 1 171 3 
108 1 61 1 218 1 331 1 332 2 114 1 292 1 77 1 39 2 79 1 275 2 30 1 226 1 349 1 195 1 184 1 183 1 117 1 152 1 214 1 45 1 279 2 325 1 
367 1 204 1 153 1 281 1 155 1 332 1 114 1 77 1 39 1 79 1 275 1 233 1 157 1 140 1 314 1 200 1 286 1 144 1 195 1 184 1 117 1 152 1 45 1 326 2 325 1 279 1 
153 1 155 1 24 1 332 1 114 1 77 1 275 1 79 1 157 1 140 1 82 1 314 1 200 1 144 1 117 2 184 1 279 1 204 1 281 1 39 1 233 1 347 1 286 1 192 1 195 1 152 1 45 1 325 2 326 2 216 1 
153 1 155 1 110 1 332 1 114 1 77 1 275 1 79 1 157 1 140 1 82 1 314 1 226 1 200 1 117 3 184 1 279 1 367 1 204 1 281 1 39 1 347 1 286 1 192 2 195 1 152 1 45 1 325 3 326 2 216 1 
155 1 110 1 332 1 114 1 77 1 275 1 79 1 157 1 140 1 82 1 314 1 200 1 117 2 184 1 279 1 367 1 204 1 281 1 39 1 347 1 192 2 152 1 325 2 326 2 216 1 
38 1 
327 1 331 1 330 1 114 1 51 1 3 1 54 2 115 1 199 1 336 1 118 5 295 1 341 1 163 4 119 2 61 2 249 1 165 6 299 1 13 1 125 1 301 2 65 1 205 1 66 1 212 1 214 1 20 2 132 1 133 5 218 1 222 2 77 2 79 2 78 1 81 2 175 2 177 1 31 1 183 1 184 1 318 2 92 2 371 1 187 1 231 1 99 2 189 3 40 1 284 2 103 1 237 1 105 1 152 2 288 2 
133 3 330 1 78 1 3 1 115 1 31 1 118 3 163 2 371 1 187 1 249 1 231 1 165 2 299 1 125 1 205 1 189 1 40 1 66 1 284 1 259 1 103 1 
133 3 330 1 222 1 78 1 3 1 51 1 115 1 31 1 118 3 163 3 371 1 187 1 249 1 165 1 231 1 299 1 125 1 99 1 205 1 189 1 40 1 66 1 259 1 103 1 
20 1 133 3 330 1 222 1 78 1 3 1 51 1 115 1 31 1 118 3 163 3 371 1 187 1 249 1 231 1 165 2 299 1 125 1 99 1 189 1 205 1 40 1 66 1 284 1 259 1 103 1 
330 1 3 1 51 5 115 1 53 1 54 1 336 1 118 5 295 1 163 6 119 2 249 1 165 7 299 1 13 1 125 1 65 1 301 2 205 1 66 1 67 1 259 1 212 1 20 4 73 1 132 1 133 5 134 1 222 5 78 1 81 2 225 1 31 1 318 1 92 2 371 1 187 1 231 1 99 4 189 3 40 1 284 4 103 1 288 2 
330 1 3 1 51 1 115 1 54 1 336 1 118 4 295 1 163 4 119 2 249 1 165 4 299 1 13 1 125 1 65 1 301 2 205 1 66 1 212 1 20 2 132 1 133 4 222 2 78 1 81 2 175 2 177 1 31 1 318 1 92 2 371 1 187 1 231 1 99 2 189 2 40 1 284 2 103 1 288 2 
20 2 73 1 132 1 133 4 330 1 222 1 78 1 51 1 81 2 3 1 54 1 115 1 225 1 336 1 31 1 118 4 295 1 318 1 163 4 92 2 119 2 371 1 187 1 249 1 165 4 231 1 299 1 13 1 125 1 99 2 301 2 65 1 189 2 205 1 40 1 67 1 66 1 284 2 103 1 212 1 288 2 
20 2 73 1 132 1 133 4 330 1 222 1 78 1 51 1 81 2 3 1 54 1 115 1 225 1 336 1 31 1 118 4 295 1 318 1 163 4 92 2 119 2 371 1 187 1 249 1 165 4 231 1 299 1 13 1 125 1 99 2 301 2 65 1 189 2 205 1 40 1 67 1 66 1 284 2 103 1 212 1 288 2 
20 2 132 1 133 4 243 1 330 1 222 1 174 2 78 1 51 1 3 1 175 2 54 1 115 1 336 1 31 1 118 4 295 1 202 2 318 1 163 4 119 2 371 1 187 1 249 1 372 1 165 4 231 1 299 1 13 1 125 1 99 2 301 2 65 1 189 2 205 1 40 1 67 1 66 1 284 2 103 1 129 1 
73 1 20 3 132 1 133 4 330 1 222 1 78 1 51 1 81 2 3 1 54 1 115 1 53 1 225 1 336 1 31 1 118 4 295 1 318 1 163 5 92 2 119 2 371 1 187 1 249 1 231 1 165 5 299 1 13 1 125 1 301 2 65 1 99 3 189 2 205 1 40 1 67 1 66 1 284 3 103 1 212 1 288 2 
73 1 20 3 132 1 133 4 330 1 222 1 78 1 51 1 81 2 3 1 54 1 115 1 53 1 225 1 336 1 31 1 118 4 295 1 318 1 163 5 92 2 119 2 371 1 187 1 249 1 231 1 165 5 299 1 13 1 125 1 301 2 65 1 99 3 189 2 205 1 40 1 67 1 66 1 284 3 103 1 212 1 288 2 
330 1 3 1 51 1 115 1 54 1 336 1 118 4 295 1 163 4 202 2 119 2 249 1 165 4 299 1 13 1 125 1 65 1 301 2 205 1 66 1 20 2 132 1 133 4 222 1 78 1 174 2 175 2 177 1 31 1 318 1 371 1 187 1 372 1 231 1 99 2 189 2 40 1 284 2 103 1 
21 1 355 1 219 1 218 1 24 1 290 1 329 2 331 1 114 2 2 2 77 7 309 4 276 1 78 1 79 8 49 2 310 1 4 1 55 1 176 2 139 1 84 1 180 2 87 1 184 2 183 3 88 2 367 1 319 1 61 2 371 1 283 1 64 1 251 2 257 1 103 1 104 2 152 8 214 2 
290 1 329 3 2 1 76 1 309 2 49 1 137 1 78 1 277 1 246 1 55 1 141 1 176 1 139 2 143 1 56 1 180 1 185 1 319 1 371 1 251 1 148 1 321 1 43 1 104 1 103 1 18 1 381 1 171 1 
355 1 22 2 290 3 173 1 329 6 2 1 76 1 309 2 273 1 49 1 176 1 246 2 139 3 5 1 143 1 180 1 93 1 185 1 35 1 251 1 102 1 321 1 43 1 104 1 213 1 171 2 
22 1 290 13 329 22 358 1 2 2 76 4 309 4 49 2 137 1 29 1 310 1 246 2 139 9 176 2 158 2 143 6 180 1 181 1 60 2 8 4 365 2 185 16 250 4 37 1 251 2 148 2 257 1 321 16 43 2 104 2 18 4 381 4 171 4 
21 1 22 1 290 1 329 2 114 1 361 1 2 1 77 1 309 2 79 1 49 1 137 1 78 1 310 1 333 1 55 1 176 1 139 1 142 1 143 1 180 1 183 1 184 1 32 1 319 1 61 1 371 2 98 1 251 1 68 1 257 1 104 1 103 2 17 1 152 1 302 1 214 1 106 1 
290 10 329 20 114 2 2 3 49 3 246 4 55 1 333 2 5 1 158 4 61 1 251 3 253 2 68 2 257 1 128 1 213 1 302 1 214 2 18 2 171 8 21 1 22 2 173 1 272 1 361 2 76 3 77 3 309 6 273 1 79 3 78 1 137 1 310 1 313 2 139 10 176 3 143 7 180 3 184 2 183 2 228 2 367 1 319 1 185 7 146 1 371 3 94 2 35 1 186 2 148 2 102 1 321 7 43 3 103 3 104 3 152 3 381 2 106 2 
185 1 355 1 290 2 329 2 2 1 76 1 251 1 309 2 49 1 176 1 158 1 321 1 143 1 104 1 180 1 18 1 227 1 171 1 
185 1 355 1 329 2 2 1 251 1 309 2 49 1 148 1 246 1 176 1 139 2 321 1 143 1 43 1 104 1 85 1 180 1 171 1 
355 1 290 2 329 4 76 1 2 1 309 2 49 1 176 1 139 2 246 1 158 1 143 2 180 1 185 2 251 1 148 1 321 2 43 1 104 1 18 1 381 1 171 2 
185 1 290 2 329 2 2 1 76 1 251 1 309 2 49 1 176 1 158 1 321 1 143 1 104 1 180 1 87 1 18 1 227 1 171 1 
185 1 329 2 2 1 251 1 309 2 49 1 148 1 246 1 176 1 139 2 321 1 143 1 43 1 104 1 85 1 180 1 87 1 171 1 
290 2 329 4 76 1 2 1 309 2 49 1 176 1 139 2 246 1 158 1 143 2 180 1 87 1 185 2 251 1 148 1 321 2 43 1 104 1 18 1 381 1 171 2 
185 2 290 2 329 4 2 1 76 1 251 1 309 2 49 1 148 1 246 1 139 2 176 1 158 1 321 2 43 1 143 2 104 1 180 1 18 1 381 1 171 2 
22 1 290 1 329 2 114 1 361 1 2 1 77 1 309 2 79 1 49 1 310 1 333 1 176 1 139 1 180 1 184 1 183 1 61 1 371 1 251 1 68 1 253 1 257 1 103 1 104 1 152 1 214 1 106 1 
22 1 290 1 329 2 114 1 361 1 27 1 308 1 2 1 77 1 309 2 79 1 49 1 310 1 176 1 139 1 180 1 184 1 183 1 10 1 61 1 371 1 251 1 257 1 103 1 104 1 152 1 214 1 106 1 
290 2 329 4 76 1 2 1 309 2 49 1 137 1 176 1 139 2 246 1 158 1 143 2 180 1 185 2 251 1 148 1 321 2 43 1 104 1 18 1 381 1 171 2 
290 2 24 1 329 4 114 1 361 1 76 1 2 1 77 1 309 2 79 1 49 1 246 1 139 2 333 1 176 1 158 1 143 2 180 1 184 1 183 1 228 1 185 2 371 1 251 1 148 1 68 1 253 1 321 2 43 1 103 1 104 1 152 1 18 1 214 1 381 1 171 2 106 1 
241 1 290 2 329 3 2 1 76 1 309 2 49 1 137 1 78 1 277 1 139 1 55 1 141 1 176 1 158 1 143 1 180 1 319 1 185 1 371 1 251 1 148 1 321 1 43 1 104 1 103 1 18 1 381 1 171 1 
46 1 217 1 356 3 290 15 329 31 244 1 26 1 291 1 2 4 76 4 309 8 49 4 29 2 224 1 223 1 246 3 176 4 139 16 83 1 158 3 201 1 59 1 8 2 365 1 282 1 97 1 250 3 300 2 100 1 251 4 148 4 150 1 43 4 18 4 381 4 171 6 
46 1 217 1 356 4 290 24 329 46 244 1 26 1 291 1 2 3 76 7 309 6 49 3 29 2 223 1 139 22 176 3 246 4 158 4 83 1 201 1 59 1 296 1 60 2 8 4 365 2 282 1 250 4 300 2 100 2 251 3 148 6 150 2 43 6 18 7 381 7 171 8 
46 1 217 1 356 4 290 25 329 46 244 1 26 1 291 1 2 4 76 7 309 8 49 4 29 3 223 1 246 4 176 4 139 21 83 1 158 6 201 1 59 1 296 1 60 2 8 5 365 2 282 1 97 1 250 5 300 2 100 2 251 4 206 1 148 5 150 1 43 5 18 7 381 7 171 10 
46 1 217 1 356 4 290 16 329 33 244 1 26 1 291 1 2 4 76 4 309 8 49 4 29 2 223 1 246 2 176 4 139 17 83 1 158 3 201 1 59 1 296 1 8 2 365 1 282 1 97 1 250 3 300 2 100 1 251 4 148 4 150 1 43 4 18 4 381 4 171 5 
46 1 217 1 356 4 290 27 173 1 329 54 244 1 26 1 291 1 2 3 76 8 309 6 273 1 49 3 29 2 223 1 246 8 176 3 139 27 5 1 83 1 158 6 201 1 59 1 296 1 60 2 8 4 365 2 35 1 282 1 250 4 300 2 100 1 251 3 148 7 102 1 150 1 43 8 213 1 18 7 381 7 171 14 
164 1 256 1 376 1 151 1 36 1 58 1 270 1 162 1 305 1 338 1 
353 1 9 1 
164 1 120 1 123 1 151 1 36 1 270 1 305 1 338 1 207 1 
248 1 57 1 
52 1 312 1 16 1 
91 1 369 1 164 1 370 1 154 1 133 1 36 1 270 1 222 1 274 1 256 1 151 1 58 1 162 1 118 1 338 1 305 1 340 2 
91 1 369 1 164 1 370 1 154 1 133 1 36 1 270 1 222 1 274 1 256 1 151 1 58 1 162 1 118 1 338 1 305 1 340 2 
91 1 369 1 164 1 370 1 154 1 133 1 36 1 270 1 222 1 274 1 256 1 151 1 58 1 162 1 118 1 338 1 305 1 340 2 
52 1 248 1 57 1 
52 1 248 1 57 1 
312 1 16 1 
52 1 312 1 16 1 
71 1 124 1 
353 1 154 1 22 1 133 1 289 1 270 1 274 1 78 2 55 2 178 1 86 1 118 1 338 1 340 1 9 1 164 1 319 2 371 2 124 1 36 1 373 1 151 1 285 1 103 2 379 1 71 1 305 1 
290 1 111 1 357 1 329 2 114 1 2 1 309 2 77 2 276 1 79 2 49 1 137 1 78 2 310 1 176 1 139 1 180 1 184 1 183 1 161 1 88 2 229 1 371 2 63 1 64 1 251 1 257 1 104 1 103 2 152 2 214 1 
61 1 156 1 218 1 331 1 114 1 77 1 292 1 79 1 322 1 184 1 183 1 152 1 214 1 279 1 
367 1 204 1 281 1 114 1 77 1 79 1 157 1 140 1 314 1 377 1 322 1 200 1 286 1 160 1 152 1 184 1 326 2 279 1 
367 1 204 1 281 1 24 1 114 1 77 2 79 2 157 1 140 1 314 1 377 1 322 1 200 1 286 1 160 1 184 1 152 2 326 2 279 1 
367 1 204 1 281 1 359 1 114 1 77 1 79 1 157 1 140 1 314 1 200 1 286 1 160 1 152 1 184 1 326 2 279 1 
323 1 
132 1 13 1 222 1 65 1 51 1 54 1 362 1 261 1 336 1 318 1 
75 2 222 5 76 2 313 1 81 5 148 2 175 10 54 5 334 5 43 2 70 1 18 2 381 2 303 5 318 5 
51 1 133 1 165 1 222 1 118 1 189 1 
109 1 327 2 132 2 133 3 23 1 218 1 331 1 114 1 77 4 79 4 54 2 199 1 336 1 184 1 183 1 118 3 341 2 318 2 61 2 121 1 165 4 13 2 65 2 189 2 190 1 348 2 237 1 152 4 214 1 
51 1 54 1 93 1 362 1 261 1 222 1 318 1 
132 1 133 1 222 2 81 1 51 1 54 1 175 1 336 1 118 1 318 1 92 1 165 1 13 1 65 1 189 1 212 1 288 1 
327 1 242 2 114 4 51 2 54 9 334 6 336 4 118 5 339 1 341 2 61 1 11 2 165 5 13 4 65 4 205 2 348 1 15 1 70 2 261 1 214 3 131 2 18 2 19 2 303 6 306 3 132 4 133 5 24 1 307 2 75 2 222 8 76 2 77 3 79 3 313 2 81 6 175 12 362 1 184 3 183 10 145 2 318 8 280 2 96 2 189 3 232 1 148 2 190 1 43 2 44 1 152 3 381 2 106 3 
327 1 46 1 132 2 133 1 217 1 244 1 26 1 222 7 75 3 76 4 136 1 29 1 51 2 223 1 81 5 175 10 54 13 334 8 336 2 118 1 341 1 8 2 318 8 60 1 365 1 165 1 250 2 13 2 65 2 189 1 148 4 43 4 70 1 130 1 18 4 303 8 381 4 
73 1 132 1 133 1 197 1 173 1 75 2 76 2 78 1 277 1 115 1 54 2 55 1 5 1 336 1 118 1 317 1 318 2 319 1 371 1 35 1 343 1 188 1 13 1 65 1 43 1 70 1 103 1 287 1 
22 1 329 1 114 1 361 1 2 1 309 2 77 1 79 1 78 2 49 1 310 1 277 2 139 1 176 1 55 2 333 1 316 1 180 1 184 1 183 1 319 2 61 1 371 3 188 1 251 1 253 1 68 1 103 3 104 1 152 1 214 1 106 1 
327 1 132 1 13 1 222 4 65 1 81 2 51 2 175 4 54 1 102 1 334 2 336 1 303 2 318 2 341 1 
256 1 151 1 220 1 71 1 36 1 
151 1 36 1 135 1 
151 1 36 1 135 1 
151 1 36 1 135 1 
235 1 151 1 36 1 
235 1 151 1 36 1 
235 1 151 1 36 1 
151 1 36 1 
164 1 270 1 
35 1 343 1 290 5 173 2 329 10 2 1 76 2 309 2 251 1 49 1 176 1 246 3 139 5 5 2 158 2 43 2 201 1 171 5 
290 2 329 2 2 1 76 1 251 1 309 2 49 1 176 1 158 1 201 1 18 1 171 1 
290 2 329 4 2 1 76 1 251 1 309 2 49 1 148 1 246 1 139 2 176 1 158 1 43 1 201 1 18 1 381 1 171 2 
97 1 290 1 112 1 329 3 173 1 300 1 2 3 251 3 309 6 49 3 139 2 176 3 246 1 5 1 158 1 201 1 171 2 
290 7 329 15 112 1 173 2 76 2 2 4 309 8 49 4 273 1 29 1 138 1 139 8 176 4 246 3 158 3 5 2 201 1 8 1 35 1 343 1 97 1 250 1 300 1 251 4 255 1 43 2 213 1 171 6 
35 1 290 4 329 8 173 1 76 1 2 2 300 1 251 2 309 4 49 2 273 1 139 4 246 2 176 2 102 1 158 1 5 1 43 1 213 1 171 3 
93 1 35 1 290 3 173 1 329 6 76 1 273 1 139 3 246 2 102 1 5 1 43 1 213 1 171 2 
290 2 329 4 2 1 76 1 251 1 309 2 49 1 148 1 138 1 246 1 139 2 176 1 158 1 43 1 18 1 381 1 171 2 
365 1 290 6 329 12 250 2 76 2 29 1 148 2 246 1 139 6 158 1 43 2 18 2 381 2 171 2 60 1 8 2 
290 11 173 2 329 23 112 1 76 3 2 2 309 4 273 1 49 2 139 12 246 5 176 2 5 2 158 4 8 2 60 1 365 1 35 1 250 2 37 1 300 2 251 2 148 2 102 1 43 3 213 1 18 2 381 2 171 9 
139 1 329 1 250 1 
290 1 329 1 8 1 
290 3 329 6 2 1 76 1 309 2 251 1 49 1 313 1 148 1 138 1 176 1 139 3 246 2 158 1 43 1 18 1 381 1 171 3 
46 1 217 1 290 11 329 22 244 1 26 1 2 1 76 4 309 2 49 1 29 1 223 1 139 11 176 1 246 2 158 2 201 1 8 2 60 1 365 1 250 2 251 1 148 4 43 4 18 4 381 4 171 4 
35 1 290 3 329 6 173 1 76 1 139 3 246 1 5 1 158 1 43 1 171 2 
290 1 173 1 112 1 329 3 300 1 2 1 251 1 309 2 273 1 49 1 246 1 139 2 176 1 158 1 5 1 213 1 171 2 
46 1 217 1 290 14 173 2 329 24 26 1 244 1 2 2 76 5 309 4 273 1 49 2 29 1 223 1 139 10 176 2 246 5 5 2 158 4 201 1 8 1 35 2 343 1 250 1 300 1 251 2 148 1 102 1 43 4 213 1 18 2 381 2 171 9 
290 6 173 1 329 11 26 1 2 2 76 2 309 4 273 1 49 2 29 1 138 1 246 2 139 5 176 2 5 1 158 1 201 1 8 1 365 1 35 1 250 2 251 2 102 1 43 1 213 1 18 1 381 1 171 3 
46 1 217 1 290 14 173 1 329 29 244 1 26 1 2 3 76 5 309 6 273 1 49 3 29 1 223 1 138 1 139 15 176 3 246 4 5 1 158 2 201 1 8 2 60 1 365 1 35 1 250 2 300 1 251 3 148 4 102 1 43 5 213 1 18 4 381 4 171 6 
46 1 217 1 290 15 173 1 329 27 244 1 26 1 2 3 76 5 309 6 273 1 49 3 29 1 223 1 138 1 139 12 176 3 246 4 5 1 158 3 201 1 8 2 60 1 365 1 35 1 250 2 300 1 251 3 148 3 102 1 43 4 213 1 18 4 381 4 171 7 
46 1 217 1 290 14 173 2 329 24 26 1 244 1 2 2 76 5 309 4 273 1 49 2 29 1 223 1 139 10 176 2 246 5 5 2 158 4 201 1 8 1 35 2 343 1 250 1 300 1 251 2 148 1 102 1 43 4 213 1 18 2 381 2 171 9 
46 1 217 1 290 11 329 22 244 1 26 1 2 1 76 4 309 2 49 1 29 1 223 1 139 11 176 1 246 2 158 2 201 1 8 2 60 1 365 1 250 2 251 1 148 4 43 4 18 4 381 4 171 4 
46 1 217 1 290 15 173 1 329 28 244 1 26 1 2 4 76 5 309 8 273 1 49 4 29 1 223 1 138 1 139 13 176 4 246 4 5 1 158 3 201 1 8 2 60 1 365 1 35 1 250 2 300 2 251 4 148 3 102 1 43 4 213 1 18 4 381 4 171 7 
290 3 329 7 26 1 2 2 76 1 309 4 49 2 29 1 139 4 176 2 246 1 201 1 8 1 365 1 97 1 250 2 251 2 148 1 43 1 18 1 381 1 171 1 
35 1 290 3 329 7 173 3 76 1 273 2 139 4 246 3 5 3 158 3 43 1 213 1 171 6 
290 3 329 7 26 1 2 2 76 1 309 4 49 2 29 1 139 4 176 2 246 1 201 1 8 1 365 1 97 1 250 2 251 2 148 1 43 1 18 1 381 1 171 1 
371 1 22 1 378 1 103 1 330 1 239 1 78 1 
265 1 371 1 22 1 330 1 78 1 294 1 254 1 378 1 103 1 7 1 169 1 239 1 
107 1 61 1 218 1 24 1 331 1 114 1 77 4 79 4 324 1 152 4 183 1 184 1 214 1 
264 1 114 2 272 1 345 1 77 2 79 2 80 1 348 1 238 1 152 2 183 1 184 1 214 1 106 1 
157 1 61 1 281 1 200 1 114 1 184 1 152 1 77 1 326 1 79 1 
367 1 24 1 114 1 63 1 77 2 79 2 276 1 152 2 183 1 184 1 214 1 
61 1 218 1 24 1 331 1 114 2 77 4 79 5 276 1 4 1 348 1 84 1 324 1 152 5 183 3 184 2 214 2 
61 1 328 1 218 1 24 1 331 1 114 2 77 4 79 5 276 1 4 1 348 1 324 1 152 5 183 3 184 2 214 2 
93 1 61 1 218 1 331 1 114 1 184 1 183 1 152 1 214 1 77 1 79 1 
21 1 319 1 61 1 371 2 22 1 114 1 361 1 77 1 78 1 79 1 55 1 68 1 103 2 183 1 152 1 184 1 214 1 106 1 
21 1 22 1 242 1 114 1 361 1 77 1 79 1 78 2 115 1 55 1 184 1 183 3 319 2 371 2 11 1 299 1 125 1 68 1 348 1 103 2 152 1 214 2 106 2 
107 1 21 1 22 1 242 1 114 1 361 1 27 1 77 2 79 2 78 2 115 1 55 1 184 1 183 3 319 2 371 2 11 1 299 1 125 1 348 1 103 2 152 2 214 2 106 2 
107 1 280 1 61 1 11 1 133 2 298 1 242 1 165 1 222 1 114 1 77 3 205 1 79 3 50 1 51 1 348 1 152 3 183 4 184 1 214 1 118 2 106 1 306 1 
107 1 280 1 61 1 11 1 133 2 242 1 96 1 165 1 222 1 114 1 77 3 205 1 79 3 51 1 348 1 152 3 183 4 184 1 214 1 118 2 106 1 306 1 
219 1 114 1 184 1 152 1 77 1 79 1 
367 1 61 2 266 1 219 1 24 1 283 1 114 3 345 1 77 6 276 1 79 7 4 1 84 1 15 1 238 1 152 7 183 3 184 2 214 2 88 1 106 1 
21 1 22 2 290 3 24 1 329 6 173 1 111 1 114 1 361 1 76 1 2 2 309 4 77 1 273 1 49 2 137 1 78 1 79 1 139 3 246 2 55 1 176 2 333 1 5 1 143 1 180 2 183 1 184 1 228 1 185 1 319 1 371 2 94 1 35 1 251 2 253 1 68 1 102 1 321 1 43 1 104 2 103 2 213 1 152 1 214 1 171 2 106 1 
132 2 133 3 289 1 307 1 222 1 77 1 79 1 51 1 54 1 362 1 336 2 183 2 118 3 318 1 280 1 61 1 96 1 165 2 13 2 65 2 205 1 189 1 190 1 261 1 152 1 131 1 19 1 306 1 
280 1 15 1 219 1 24 1 114 2 184 1 183 2 152 2 214 1 77 2 106 1 79 2 232 1 
21 1 319 1 61 1 371 2 22 1 114 1 361 1 27 1 77 1 78 1 79 1 55 1 103 2 183 1 152 1 184 1 214 1 106 1 
266 1 114 2 345 1 77 1 79 1 348 1 15 1 238 1 152 1 183 1 184 1 214 1 106 1 
229 1 371 1 74 1 103 1 357 1 161 1 170 1 78 1 247 1 
352 1 170 1 252 1 
22 1 74 1 113 1 170 1 247 1 
22 1 289 1 133 2 74 2 113 2 231 1 299 1 222 1 125 1 205 1 252 1 51 1 115 1 42 1 352 1 118 2 170 1 263 1 247 2 
347 1 82 1 195 1 144 1 117 1 45 1 325 1 216 1 
0 1 25 1 126 1 347 2 127 1 82 3 192 2 351 1 195 1 117 4 45 1 72 1 325 4 216 2 
293 1 347 1 320 1 82 1 192 1 144 1 195 1 117 2 45 1 33 1 325 2 216 1 
0 1 95 1 126 2 347 1 82 1 351 2 144 1 195 1 117 3 45 1 325 3 216 1 
82 2 268 1 215 2 337 1 
350 1 195 1 144 1 117 1 45 1 325 1 
347 1 82 1 12 1 192 1 195 1 144 1 117 2 45 1 325 2 216 1 
354 1 
347 1 82 1 195 1 144 1 117 1 45 1 325 1 216 1 
347 1 93 1 82 1 216 1 
347 1 82 1 195 1 117 1 45 1 325 1 216 1 
332 1 275 1 325 1 
0 1 126 2 347 1 82 1 351 1 144 1 195 1 117 3 45 1 325 3 240 1 216 1 
347 1 168 1 82 1 192 1 195 1 117 2 45 1 325 2 216 1 
281 1 25 1 82 1 314 1 236 1 144 1 195 1 117 1 45 1 325 1 326 1 
347 1 82 1 195 1 144 1 117 1 45 1 325 1 
347 2 195 1 144 1 117 1 45 1 325 1 216 1 
196 1 347 1 82 1 260 1 144 1 195 2 117 2 45 2 325 2 34 1 
12 1 25 1 347 1 127 1 82 2 6 1 192 2 144 1 195 1 117 3 45 1 325 3 216 1 
281 1 166 1 347 1 157 1 140 1 82 1 314 1 192 1 144 1 195 1 117 2 45 1 326 2 325 2 216 1 
25 1 347 1 127 1 168 1 82 2 191 1 192 2 144 1 195 2 117 4 45 2 325 4 216 1 
347 1 126 1 82 1 12 1 192 1 195 1 144 1 117 3 45 1 325 3 216 1 
127 1 82 1 25 1 72 1 
347 1 82 1 

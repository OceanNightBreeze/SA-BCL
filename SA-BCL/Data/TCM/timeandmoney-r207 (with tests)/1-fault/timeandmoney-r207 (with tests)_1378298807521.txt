#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
209 1 97 1 79 1 344 2 101 2 214 6 291 3 10 2 162 9 163 2 293 2 57 1 105 1 372 1 296 1 295 4 191 1 43 1 353 1 354 2 129 1 359 1 48 2 153 1 131 1 361 9 21 5 309 1 
209 1 97 1 79 1 344 2 101 2 214 6 291 3 10 2 162 9 163 2 293 2 57 1 105 1 372 1 296 1 295 4 191 1 43 1 353 1 354 2 129 1 359 1 48 2 153 1 131 1 361 9 21 5 309 1 
209 1 97 1 79 1 344 2 101 2 214 7 291 4 10 2 162 10 163 2 293 2 57 1 105 1 372 1 296 1 295 5 191 1 43 1 353 1 354 2 129 1 359 1 48 2 153 1 131 1 361 10 21 6 309 1 
209 1 97 1 79 1 344 2 101 2 214 4 291 2 10 2 162 7 163 2 293 2 57 1 105 1 372 1 296 1 295 3 191 1 43 1 353 1 354 2 129 1 48 1 153 1 131 1 361 7 21 4 309 1 
191 1 43 1 79 1 101 1 354 1 214 3 291 1 10 1 162 4 359 1 163 1 293 1 48 2 57 1 105 1 361 4 21 3 295 2 
209 1 43 1 101 1 344 1 181 1 354 1 10 1 162 2 293 1 57 1 71 1 59 1 21 1 105 1 361 2 372 1 
43 1 344 1 354 2 214 1 291 1 162 3 293 2 57 1 105 1 361 3 21 2 296 1 295 1 
97 1 79 1 344 1 101 1 214 7 291 3 10 1 162 9 163 1 293 2 57 1 105 1 295 4 296 1 191 1 123 1 43 1 354 2 359 1 48 2 153 1 49 1 361 9 21 5 
97 1 79 1 344 1 101 1 214 7 291 3 10 1 162 9 163 1 293 2 57 1 105 1 295 4 296 1 191 1 123 1 43 1 354 2 359 1 48 2 153 1 49 1 361 9 21 5 
249 1 92 1 8 1 
249 1 47 2 155 1 
323 2 37 2 45 2 352 1 82 2 345 2 290 1 245 2 
0 2 363 1 2 1 285 1 180 1 233 1 342 1 3 2 260 1 236 1 6 1 159 1 82 3 345 2 32 1 290 1 37 2 186 1 39 1 349 1 15 1 352 1 218 1 243 1 245 3 323 2 61 1 45 2 303 1 273 1 91 1 229 2 20 2 252 1 22 1 337 1 232 2 
323 1 37 1 145 1 45 1 352 1 82 1 345 1 242 1 9 1 245 1 
25 1 323 1 31 1 82 1 9 1 249 1 92 1 347 1 109 1 175 1 370 1 254 1 95 1 245 1 
25 1 323 1 45 1 31 1 345 1 82 1 9 1 249 1 92 1 37 1 109 1 175 1 370 2 95 2 245 1 
238 1 370 1 113 1 95 1 244 1 
249 1 92 1 238 1 41 1 370 2 113 1 95 2 381 1 
238 1 370 1 95 1 
96 1 323 1 145 1 45 1 345 1 82 1 9 1 37 1 370 1 352 1 113 1 242 1 95 1 245 1 
249 1 
249 1 92 1 238 1 94 1 41 1 370 2 113 1 95 2 
297 2 29 1 259 1 272 2 379 1 195 2 34 1 249 1 92 1 238 2 117 1 330 1 41 1 334 1 177 1 370 5 113 2 281 1 95 5 
290 1 8 1 
323 2 286 1 246 1 45 1 82 2 345 1 290 2 37 1 245 2 
169 1 350 1 304 1 
0 1 61 1 363 1 3 1 236 1 6 1 303 1 82 1 32 1 290 1 273 1 91 1 20 1 349 1 245 1 322 1 
0 1 169 1 61 1 323 1 363 1 3 1 236 1 303 1 6 1 345 1 82 2 32 1 273 1 91 1 102 1 37 1 20 1 239 1 349 1 245 2 
323 3 37 3 239 1 45 1 82 3 345 3 290 1 245 3 
323 1 37 1 145 1 82 1 345 1 9 1 245 1 
323 1 37 1 286 1 246 1 45 1 82 1 345 1 9 1 245 1 
25 1 0 1 363 1 134 1 2 1 286 1 233 1 260 1 3 1 236 1 6 1 31 1 159 1 82 4 345 3 32 1 290 1 9 1 237 1 102 1 37 3 239 1 186 1 39 1 349 1 15 1 370 1 352 1 218 1 245 4 61 1 323 3 303 1 45 2 273 1 91 1 109 1 229 2 20 1 175 1 22 1 95 1 337 1 232 1 
323 2 37 1 239 1 73 1 82 2 345 1 290 1 254 1 245 2 
25 1 323 3 134 1 286 1 45 1 31 1 345 3 82 3 9 1 102 1 249 1 37 3 109 1 165 1 239 2 175 1 370 1 95 1 245 3 
323 2 169 1 286 1 45 1 345 2 82 2 37 2 239 1 350 1 245 2 
0 1 61 1 363 1 3 1 236 1 6 1 303 1 82 1 32 1 290 1 273 1 91 1 20 1 349 1 245 1 
0 1 362 1 61 1 363 1 3 1 236 1 303 1 82 1 32 1 290 1 273 1 91 1 20 1 133 1 245 1 
1 1 2 1 233 1 159 1 316 1 186 1 350 2 15 1 218 1 243 2 169 2 192 1 298 1 270 1 326 1 304 2 196 1 174 1 229 2 156 1 308 1 22 2 232 4 282 1 
323 1 37 1 31 1 82 1 345 1 112 1 9 1 245 1 
323 5 286 1 45 1 345 4 82 5 290 1 263 1 102 1 37 4 12 1 239 2 73 1 254 1 245 5 
323 2 37 2 145 1 112 1 82 2 345 2 9 1 245 2 
54 1 146 1 
54 1 146 1 
190 1 68 1 
190 1 68 1 
190 1 68 1 
118 1 54 1 146 1 
118 1 54 1 146 1 
289 1 54 1 146 1 
164 1 13 1 54 2 146 2 190 1 68 1 
118 1 54 1 146 1 
86 1 54 1 146 1 
86 1 54 1 146 1 
86 1 54 1 146 1 
179 2 78 2 300 3 54 2 146 2 100 1 128 1 161 1 199 1 249 1 84 2 368 1 87 1 164 1 185 1 14 2 40 2 370 2 95 2 
179 1 78 1 54 1 289 1 100 1 99 1 345 2 82 2 290 1 84 1 37 2 38 1 184 1 40 1 370 1 220 1 265 1 245 2 323 2 300 1 146 1 111 1 95 1 178 1 
10 1 163 1 101 1 
10 1 59 1 101 1 
324 1 163 2 59 1 302 1 279 1 101 3 
324 1 163 1 325 1 59 1 302 1 101 2 
163 1 324 2 59 1 302 1 101 2 
158 1 80 1 262 1 215 2 316 1 34 1 238 1 41 1 167 1 370 5 265 1 220 1 193 1 298 1 297 1 326 1 248 1 272 1 379 2 46 2 195 1 92 1 249 2 19 1 47 3 204 2 155 1 156 1 334 3 113 4 178 1 95 5 
311 1 158 1 262 2 316 3 34 1 137 1 238 6 117 1 41 1 370 9 60 1 220 4 244 5 193 2 298 3 297 2 326 3 327 1 272 2 379 6 46 6 195 2 150 5 92 1 249 5 19 3 151 1 47 9 204 6 277 1 155 3 156 3 334 8 113 7 95 9 
80 1 262 1 215 1 316 1 117 1 167 1 370 3 220 1 193 1 297 1 298 1 326 1 272 1 379 2 195 1 46 2 92 1 249 3 19 1 47 4 204 2 155 2 156 1 334 3 113 2 95 3 
80 1 262 1 215 2 316 2 137 1 117 1 167 1 370 4 60 1 220 2 193 1 297 1 298 2 326 2 272 1 379 4 46 4 195 1 92 1 249 4 19 2 47 7 204 4 277 1 155 3 156 2 334 5 113 3 95 4 
273 1 75 1 8 1 
139 1 273 1 
371 1 
236 1 273 1 
363 1 230 1 236 1 273 3 148 1 75 2 
363 1 236 1 273 1 
235 1 273 1 
192 3 62 1 257 1 315 1 270 2 326 1 81 1 182 1 274 2 292 1 251 1 156 1 253 1 243 4 22 3 208 1 232 7 
192 3 62 1 257 1 315 1 270 2 326 1 81 1 182 1 274 2 292 1 251 1 156 1 253 1 243 4 22 3 208 1 232 7 
192 3 62 1 340 1 257 1 315 1 270 2 326 1 81 1 182 1 274 2 292 1 251 1 156 1 253 1 243 4 22 3 208 1 232 7 
2 1 314 1 257 2 315 5 233 1 159 1 81 1 116 1 182 2 316 3 367 1 292 1 85 1 186 1 351 1 106 1 243 16 192 10 62 1 268 4 298 3 270 5 326 4 274 3 19 3 229 2 251 2 360 3 156 4 253 1 74 1 22 15 208 2 232 31 
2 2 257 1 233 2 315 1 159 2 182 1 292 1 186 2 294 1 243 5 192 4 62 1 270 3 326 1 170 1 274 2 229 4 251 1 156 1 253 1 74 1 22 4 232 9 208 1 
0 1 3 1 344 1 101 2 214 1 10 1 317 1 216 1 11 1 162 2 163 1 293 1 57 1 59 1 105 1 122 1 61 1 142 1 43 1 67 1 328 1 354 1 91 1 20 1 331 1 21 1 361 2 307 1 279 1 24 1 
0 1 3 1 344 1 101 2 214 2 10 1 317 1 216 1 36 1 11 1 162 3 163 1 293 1 57 1 59 1 105 1 188 1 122 1 61 1 142 1 67 1 354 1 91 1 20 1 202 1 331 1 21 1 279 1 361 3 307 1 
0 1 3 1 344 1 101 2 214 2 317 1 10 1 216 1 162 2 163 1 57 1 59 1 105 1 188 1 122 1 61 1 142 1 91 1 20 1 202 1 331 1 21 1 361 2 307 1 279 1 
0 1 122 2 61 1 143 1 18 1 377 1 3 1 236 1 5 1 378 1 344 2 32 1 273 1 354 1 91 1 317 2 216 2 36 1 162 1 20 1 293 1 361 1 114 1 
0 1 3 1 344 1 101 2 10 1 317 1 216 1 11 1 162 1 163 1 293 1 59 1 188 1 122 1 61 1 142 1 43 1 67 1 354 1 91 1 20 1 331 1 361 1 307 1 279 1 24 1 
140 1 
0 2 283 1 51 2 341 2 3 2 236 1 5 1 7 2 9 1 347 1 238 6 240 1 245 1 61 1 193 1 63 1 144 2 297 1 66 1 195 1 249 2 357 1 109 1 20 2 155 2 207 1 254 1 25 1 28 1 77 1 31 1 32 2 82 1 34 1 264 1 41 3 217 4 319 2 370 5 323 1 269 1 125 2 377 1 272 1 379 2 273 1 91 1 92 1 47 2 175 1 333 1 332 1 335 2 334 2 95 5 
25 1 28 1 77 1 31 1 82 1 9 1 347 1 238 2 41 1 217 2 370 3 245 1 323 1 357 1 109 1 94 1 175 1 332 1 335 1 207 1 254 1 95 3 
25 1 28 1 77 1 31 1 82 1 9 1 347 1 238 1 41 1 217 3 370 3 245 1 323 1 125 1 357 1 92 1 249 1 109 1 94 1 175 1 332 1 207 1 254 1 95 3 
25 1 28 1 77 1 31 1 82 1 7 1 9 1 347 1 238 2 41 1 217 3 370 3 245 1 323 1 125 1 357 1 92 1 249 1 109 1 94 1 175 1 332 1 335 1 207 1 254 1 95 3 
25 1 51 2 341 2 28 1 77 1 136 1 31 1 82 1 7 4 9 1 34 1 347 1 238 7 41 3 217 6 319 2 370 5 121 1 245 1 168 1 222 1 323 1 269 1 144 2 297 1 125 4 272 1 379 1 195 1 356 1 249 5 92 5 357 1 109 1 94 1 175 1 155 2 333 1 332 1 334 1 335 4 207 1 254 1 95 5 
51 2 341 2 7 2 9 1 347 1 238 4 245 1 144 2 297 1 195 1 357 1 249 2 109 1 155 2 207 1 254 1 25 1 28 1 77 1 31 1 82 1 34 1 264 1 41 2 217 4 370 4 319 2 323 1 269 1 125 2 272 1 379 1 92 1 47 2 175 1 332 1 333 1 334 1 335 2 95 4 
25 1 51 2 341 2 28 1 77 1 136 1 31 1 7 2 82 1 9 1 34 1 347 1 238 4 41 2 217 4 319 2 370 4 245 1 222 1 323 1 269 1 144 2 297 1 125 2 272 1 379 1 195 1 356 1 249 1 92 1 357 1 109 1 175 1 155 2 333 1 332 1 335 2 334 1 207 1 254 1 95 4 
25 1 51 2 341 2 28 1 77 1 136 1 31 1 7 2 82 1 9 1 34 1 347 1 238 4 41 2 217 4 319 2 370 4 245 1 222 1 323 1 269 1 144 2 297 1 125 2 272 1 379 1 195 1 356 1 249 1 92 1 357 1 109 1 175 1 155 2 333 1 332 1 335 2 334 1 207 1 254 1 95 4 
25 1 28 1 77 1 31 1 7 2 55 2 82 1 83 1 9 1 34 1 347 1 238 4 41 2 217 4 319 2 370 4 245 1 222 1 323 1 144 2 297 1 108 1 125 2 127 1 272 1 379 1 195 1 249 1 92 1 357 1 329 2 109 1 47 2 175 1 333 1 332 1 335 2 334 1 207 1 254 1 95 4 
25 1 51 2 341 2 28 1 77 1 136 1 31 1 82 1 7 3 9 1 34 1 347 1 238 5 41 2 217 5 319 2 370 4 121 1 245 1 222 1 323 1 269 1 144 2 297 1 125 3 272 1 379 1 195 1 356 1 249 1 92 1 357 1 109 1 175 1 155 2 333 1 332 1 334 1 335 3 207 1 254 1 95 4 
25 1 51 2 341 2 28 1 77 1 136 1 31 1 82 1 7 3 9 1 34 1 347 1 238 5 41 2 217 5 319 2 370 4 121 1 245 1 222 1 323 1 269 1 144 2 297 1 125 3 272 1 379 1 195 1 356 1 249 1 92 1 357 1 109 1 175 1 155 2 333 1 332 1 334 1 335 3 207 1 254 1 95 4 
55 2 7 2 9 1 347 1 238 4 245 1 144 2 297 1 195 1 357 1 249 1 109 1 207 1 254 1 25 1 28 1 77 1 31 1 82 1 83 1 34 1 264 1 41 2 217 4 370 4 319 2 323 1 125 2 272 1 379 1 92 1 329 2 47 2 175 1 332 1 333 1 334 1 335 2 95 4 
2 1 257 1 233 1 159 1 290 2 8 1 292 1 186 1 350 1 15 1 218 1 243 3 169 1 192 2 62 1 270 2 326 1 304 1 274 1 196 1 229 2 156 1 253 1 22 3 208 1 232 6 
339 1 2 2 27 1 314 1 180 1 315 1 233 2 159 2 290 1 316 1 186 2 39 1 350 4 15 2 218 1 106 1 189 1 243 8 192 2 169 11 268 3 376 1 124 1 298 2 270 1 326 1 304 11 19 2 229 4 360 3 156 2 22 6 232 14 
0 1 363 1 2 1 180 1 233 1 3 1 236 1 6 1 159 1 32 1 82 2 345 1 290 1 102 1 37 1 239 1 186 1 349 1 39 1 350 1 15 1 218 1 243 1 322 1 245 2 61 1 323 1 376 1 17 1 303 1 273 1 91 1 20 1 152 1 229 2 50 1 22 1 232 2 
0 3 2 3 284 2 180 1 233 3 3 3 236 2 6 2 345 1 290 2 102 1 292 1 239 1 186 3 349 2 350 7 188 1 15 3 243 10 245 3 61 2 192 8 62 1 107 2 298 2 303 2 304 7 19 2 20 3 156 3 253 1 22 10 208 1 363 2 115 1 257 1 315 4 260 2 159 3 32 1 82 3 316 2 37 1 166 1 120 2 39 1 218 3 375 1 323 1 169 7 376 1 270 4 326 3 273 2 274 1 91 2 173 2 229 6 232 20 
0 7 2 2 211 1 180 1 233 2 288 1 3 8 342 2 4 1 236 2 5 1 159 2 82 1 345 1 32 2 37 1 239 1 186 2 39 1 188 1 15 2 218 2 243 1 245 1 323 1 61 2 377 1 328 1 225 1 273 3 69 1 196 1 91 2 20 8 229 4 93 1 110 1 22 1 232 2 
286 1 2 1 233 1 159 1 345 1 82 1 316 1 37 1 186 1 350 1 15 1 218 1 243 1 245 1 192 1 169 1 323 1 376 1 298 1 270 1 326 1 45 1 304 1 19 1 229 2 154 1 156 1 22 2 232 3 
192 1 169 1 2 1 298 1 315 1 233 1 304 1 159 1 196 1 229 2 186 1 350 1 156 1 15 1 218 1 243 2 232 2 282 1 
192 1 169 1 2 1 233 1 270 1 326 1 304 1 159 1 316 1 196 1 174 1 229 2 186 1 350 1 15 1 218 1 22 2 232 2 
2 1 233 1 315 1 159 1 316 1 186 1 350 2 15 1 218 1 243 2 169 2 192 2 298 1 270 1 326 1 304 2 196 1 19 1 229 2 156 1 22 2 232 4 
192 1 169 1 2 1 298 1 315 1 233 1 304 1 159 1 93 1 229 2 186 1 350 1 156 1 15 1 218 1 243 2 232 2 282 1 
192 1 169 1 2 1 233 1 270 1 326 1 304 1 159 1 316 1 174 1 93 1 229 2 186 1 350 1 15 1 218 1 22 2 232 2 
2 1 233 1 315 1 159 1 316 1 186 1 350 2 15 1 218 1 243 2 169 2 192 2 298 1 270 1 326 1 304 2 19 1 229 2 93 1 156 1 22 2 232 4 
192 2 169 2 2 1 298 1 315 1 233 1 270 1 326 1 304 2 159 1 316 1 19 1 229 2 186 1 350 2 156 1 15 1 218 1 243 2 22 2 232 4 
0 1 363 1 2 1 180 1 233 1 260 1 3 1 236 1 6 1 159 1 32 1 82 1 290 1 186 1 349 1 39 1 15 1 218 1 243 1 245 1 61 1 303 1 273 1 91 1 20 1 229 2 22 1 232 2 
362 1 0 1 363 1 2 1 180 1 233 1 3 1 236 1 159 1 32 1 82 1 290 1 160 1 186 1 39 1 15 1 218 1 243 1 245 1 61 1 303 1 273 1 91 1 20 1 229 2 133 1 22 1 232 2 
2 1 233 1 315 1 159 1 316 1 186 1 350 2 15 1 218 1 243 2 169 2 192 2 376 1 298 1 270 1 326 1 304 2 19 1 229 2 156 1 22 2 232 4 
0 1 363 1 2 1 315 1 233 1 260 1 3 1 236 1 6 1 159 1 82 1 316 1 186 1 120 1 349 1 350 2 15 1 218 1 243 2 245 1 192 2 169 2 61 1 298 1 270 1 326 1 303 1 304 2 328 1 273 1 91 1 19 1 20 1 229 2 156 1 22 2 232 4 
286 1 2 1 315 1 233 1 159 1 345 1 82 1 316 1 346 1 37 1 186 1 350 1 15 1 218 1 243 2 245 1 192 1 323 1 169 1 376 1 298 1 326 1 45 1 304 1 19 1 229 2 156 1 22 1 232 3 
2 3 52 1 135 1 314 1 257 1 233 3 315 4 159 3 316 4 56 2 292 1 35 4 348 1 186 3 187 1 16 1 106 3 243 20 192 8 62 1 268 4 44 1 298 4 126 1 270 4 170 1 326 5 274 1 19 4 229 6 201 1 305 1 306 1 360 3 156 5 206 1 280 1 253 1 336 1 74 1 22 21 208 1 232 41 
2 4 52 1 135 1 314 1 257 1 233 4 315 3 159 4 316 3 56 2 292 1 35 4 348 1 186 4 187 1 16 1 106 3 243 20 192 7 62 1 268 4 44 1 298 4 126 1 270 4 170 1 326 4 274 1 19 4 229 8 201 1 305 1 306 1 360 3 156 5 206 1 280 1 253 1 336 1 74 2 22 18 208 1 232 38 
2 2 52 1 27 2 135 1 314 2 257 1 233 2 315 7 159 2 316 7 56 1 292 1 35 4 348 1 186 2 187 1 16 1 106 2 243 27 192 14 62 1 268 4 44 1 298 7 270 7 170 1 326 8 274 1 19 7 229 4 201 1 305 1 306 1 360 4 156 8 206 1 253 1 336 1 74 1 22 25 208 1 232 52 
2 2 135 1 314 1 233 2 315 3 159 2 316 3 56 1 35 2 348 1 186 2 187 1 106 1 243 9 192 6 268 2 298 3 126 1 270 3 170 1 326 3 19 3 229 4 201 1 360 1 156 3 231 1 336 2 22 10 232 19 
2 3 52 1 135 2 315 2 233 3 159 3 316 2 56 2 35 4 348 1 186 3 187 1 243 14 106 2 16 1 192 4 268 2 44 1 298 3 270 2 326 2 170 1 19 3 229 6 201 1 305 1 306 1 360 2 156 3 206 1 336 1 74 2 22 12 232 26 
199 1 228 1 84 1 164 1 179 1 40 1 78 1 54 1 146 1 128 1 
184 1 289 1 
84 1 179 1 76 1 40 1 78 1 54 1 146 1 33 1 355 1 
179 1 78 1 300 2 54 1 100 1 146 1 128 1 161 1 199 1 249 1 84 1 368 1 164 1 185 1 14 1 40 1 370 1 95 1 
179 1 78 1 300 2 54 1 100 1 146 1 128 1 161 1 199 1 249 1 84 1 368 1 164 1 185 1 14 1 40 1 370 1 95 1 
179 1 78 1 300 2 54 1 100 1 146 1 128 1 161 1 199 1 249 1 84 1 368 1 164 1 185 1 14 1 40 1 370 1 95 1 
13 1 118 1 197 1 
13 1 118 1 197 1 
86 1 103 1 
86 1 13 1 103 1 
38 1 99 1 
179 1 26 1 78 1 54 1 289 1 99 1 82 2 345 2 290 1 161 1 84 1 37 2 38 1 184 1 14 1 40 1 370 1 220 1 265 1 245 2 323 2 300 1 146 1 111 1 113 1 95 1 178 1 
118 1 197 1 
86 1 13 1 103 1 
0 2 310 1 2 1 211 1 180 1 233 1 3 2 342 2 236 1 343 1 159 1 82 2 183 1 186 1 39 1 15 1 218 1 243 1 245 2 61 1 323 2 376 1 225 1 273 1 91 1 20 2 229 2 276 1 255 1 22 1 232 2 
0 2 61 1 142 1 3 2 101 2 271 1 67 1 171 1 328 1 91 1 10 1 216 1 318 1 163 1 20 2 59 1 279 1 307 1 188 1 
0 1 61 1 142 1 3 1 101 2 271 1 67 1 91 1 10 1 216 1 163 1 20 1 70 1 59 1 279 1 307 1 188 1 
0 1 61 1 3 1 377 1 236 1 378 1 5 1 171 1 32 1 273 1 91 1 216 1 20 1 321 1 
0 1 61 1 142 1 3 1 101 2 271 1 67 1 171 1 91 1 10 1 216 1 318 1 163 1 20 1 59 1 279 1 307 1 188 1 
358 1 
249 1 92 1 29 1 259 1 334 1 379 1 8 1 
51 1 341 1 34 1 238 1 41 1 370 1 269 1 297 1 272 1 379 1 195 1 249 2 92 1 47 1 155 1 334 1 95 1 
0 3 235 2 3 3 236 3 238 5 240 1 138 2 139 3 61 3 193 2 297 4 299 1 298 2 194 2 195 4 249 8 19 2 250 2 20 3 200 2 204 6 155 6 156 2 72 2 75 2 363 3 364 2 29 1 259 1 30 1 261 1 32 1 366 1 316 2 34 4 41 3 370 5 42 1 326 2 328 1 272 4 273 10 379 8 46 6 91 4 92 2 275 2 173 2 47 12 175 2 230 1 334 9 338 2 95 5 
364 2 316 2 34 2 238 1 240 1 119 1 41 1 370 1 106 1 16 1 193 1 268 1 44 1 297 2 298 2 301 1 326 2 272 2 379 5 46 5 195 2 249 5 92 2 19 2 250 1 47 6 305 1 204 5 306 1 155 3 360 1 156 2 334 8 206 1 95 1 
96 1 364 2 257 1 82 1 345 1 9 1 34 1 37 1 370 1 352 1 242 1 245 1 323 1 297 1 145 1 326 1 45 1 272 1 379 2 195 1 90 1 356 1 250 1 156 2 334 2 253 1 95 1 208 1 
297 1 259 1 29 1 272 1 379 1 195 1 34 1 92 1 249 1 334 1 
364 2 298 2 326 2 379 5 46 5 316 2 249 5 173 1 19 2 250 1 47 10 204 5 156 2 155 5 334 5 
249 1 92 1 238 1 41 1 370 1 95 1 
0 4 3 4 236 1 5 1 261 1 32 2 34 1 238 4 117 1 240 2 41 2 370 3 61 1 63 1 193 2 42 2 297 2 377 1 66 1 272 2 273 1 379 2 195 2 198 1 91 1 20 4 205 1 334 2 95 3 
0 1 363 1 2 1 233 1 3 1 260 1 236 1 6 1 159 1 32 1 82 3 345 2 290 1 37 2 186 1 39 1 349 1 352 1 15 1 218 1 245 3 323 2 61 1 45 2 303 1 273 1 91 1 229 2 20 1 22 1 337 1 232 1 
193 1 297 1 272 1 379 2 274 1 46 2 195 1 34 1 92 2 249 4 47 4 204 2 240 1 155 2 334 1 
179 1 58 1 40 1 
179 1 58 1 40 1 
199 1 179 1 65 1 40 1 99 1 
179 1 58 1 40 1 
179 1 40 1 380 1 
179 1 40 1 380 1 
179 1 40 1 380 1 
179 1 40 1 
54 1 146 1 
2 1 257 1 233 1 159 1 292 1 186 1 106 1 16 1 243 4 192 2 62 1 268 1 270 2 326 1 170 1 274 1 229 2 156 1 360 1 253 1 22 4 232 8 208 1 
210 1 2 2 314 1 257 1 233 2 315 1 159 2 292 1 186 2 106 1 16 1 243 6 192 3 62 1 268 2 298 1 270 2 326 1 170 1 274 1 19 1 229 4 360 1 156 2 253 1 22 5 208 1 232 11 
210 1 2 3 257 1 315 1 233 3 159 3 316 2 292 1 186 3 106 1 16 1 243 9 192 4 62 1 268 1 298 2 44 1 270 3 170 1 326 3 274 1 19 2 229 6 305 1 306 1 360 1 156 3 206 1 253 1 74 1 22 10 208 1 232 19 
210 1 2 3 257 1 315 2 233 3 159 3 316 1 292 1 186 3 106 1 16 1 243 10 192 5 62 1 268 1 298 2 44 1 270 3 170 1 326 2 274 1 19 2 229 6 305 1 306 1 360 1 156 3 206 1 253 1 74 1 22 7 208 1 232 17 
2 1 257 1 233 1 159 1 292 1 186 1 106 1 16 1 243 4 192 2 62 1 268 1 270 2 326 1 170 1 274 1 229 2 156 1 360 1 253 1 22 4 232 8 208 1 
2 1 315 1 233 1 159 1 316 2 186 1 106 1 16 1 243 6 192 2 268 1 298 2 44 1 270 1 170 1 326 2 19 2 229 2 305 1 306 1 360 1 156 2 206 1 22 6 232 12 
210 1 2 4 257 1 315 2 233 4 159 4 316 1 292 1 186 4 106 1 16 1 243 10 192 5 62 1 268 1 44 1 298 2 270 3 170 1 326 2 274 1 19 2 229 8 305 1 306 1 360 1 156 3 206 1 253 1 74 2 22 8 208 1 232 18 
2 4 315 3 233 4 159 4 316 2 186 4 106 1 16 1 243 9 192 6 268 1 44 1 298 3 126 1 270 3 170 1 326 2 19 3 229 8 305 1 306 1 360 1 156 3 206 1 74 2 22 7 232 16 
192 6 62 1 257 3 315 3 270 3 326 1 292 2 156 1 253 1 243 3 22 4 232 7 208 3 
2 4 257 1 315 1 233 4 159 4 316 1 292 1 186 4 106 1 16 1 243 10 192 4 62 1 268 1 44 1 298 2 126 1 270 3 170 1 326 2 274 1 19 2 229 8 305 1 306 1 360 1 156 3 206 1 253 1 74 2 22 8 208 1 232 18 
192 3 62 1 2 2 257 1 315 1 233 2 270 2 326 1 159 2 274 1 292 1 229 4 186 2 156 1 253 1 243 4 74 1 22 4 232 8 208 1 
192 2 62 1 257 1 270 2 326 1 274 1 8 1 292 1 156 1 253 1 243 3 22 3 208 1 232 6 
192 2 210 1 2 1 298 1 233 1 315 1 270 1 326 1 159 1 316 1 19 1 229 2 186 1 156 1 243 2 22 2 232 4 
192 2 268 2 314 1 298 1 315 1 270 1 326 1 316 1 19 1 360 1 156 1 106 1 243 3 22 4 232 7 
2 2 314 1 27 1 257 2 315 4 233 2 159 2 316 2 292 1 186 2 243 11 189 1 192 9 62 1 268 2 298 2 270 5 326 3 274 1 227 1 19 2 229 4 156 3 360 2 253 1 74 2 22 12 208 2 232 23 
268 1 22 1 232 1 
360 1 243 1 232 1 
192 3 210 1 2 1 298 1 233 1 315 1 270 2 326 1 159 1 316 1 173 1 19 1 229 2 186 1 156 1 243 3 22 3 232 6 
2 1 315 1 233 1 159 1 316 2 186 1 106 1 16 1 243 6 192 2 268 1 298 2 44 1 270 1 170 1 326 2 19 2 229 2 305 1 306 1 360 1 156 2 206 1 22 6 232 12 
192 2 257 1 315 1 270 1 326 1 156 1 253 1 243 3 22 3 232 6 208 1 
192 2 62 1 2 1 257 1 315 1 233 1 270 1 159 1 227 1 292 1 229 2 186 1 243 1 74 1 22 2 208 1 232 3 
192 5 2 1 257 2 233 1 315 2 270 3 170 1 326 2 159 1 90 1 229 2 186 1 156 2 253 1 243 5 22 5 208 2 232 10 
192 1 2 1 298 1 233 1 315 1 170 1 159 1 229 2 186 1 156 1 243 2 232 2 
192 2 2 1 298 1 233 1 315 1 270 1 326 1 170 1 159 1 316 1 19 1 229 2 186 1 156 1 243 2 22 2 232 4 
192 2 2 3 257 1 233 3 315 1 126 1 270 1 170 1 159 3 227 1 229 6 186 3 74 1 243 1 22 2 232 3 208 1 
210 1 2 4 314 1 257 2 233 4 315 5 159 4 367 1 116 1 316 3 292 1 85 1 186 4 106 1 243 14 192 10 62 1 268 4 298 3 126 1 270 5 170 1 326 4 274 1 19 3 229 8 360 3 156 4 253 1 74 1 22 15 208 2 232 29 
323 1 82 1 73 1 290 1 254 1 149 1 245 1 
323 1 258 1 82 1 290 1 149 1 176 1 73 1 254 1 141 1 157 1 374 1 245 1 
0 1 61 1 20 1 377 1 3 1 236 1 5 1 32 1 273 1 8 1 91 1 
0 1 323 1 61 1 363 1 3 1 236 1 303 1 345 1 82 2 32 1 290 1 273 1 91 1 37 1 20 1 239 1 349 1 245 2 
0 1 25 1 363 2 235 1 3 1 236 2 31 1 82 2 345 1 290 1 9 1 37 2 239 1 349 1 245 2 61 1 323 2 42 1 303 1 273 3 91 1 20 1 72 1 
362 1 0 2 25 1 363 2 235 1 3 2 236 2 31 1 82 2 345 1 290 1 9 1 37 2 239 1 245 2 61 1 323 2 42 1 303 1 273 3 91 1 20 2 72 1 23 1 
0 3 363 1 235 1 3 3 213 1 236 1 32 1 238 1 139 1 370 2 61 1 42 1 224 1 273 4 91 1 92 1 249 1 20 3 175 1 72 1 23 1 75 1 95 2 
0 3 61 1 363 1 42 1 235 1 3 3 194 1 236 1 32 1 273 4 91 1 249 1 92 1 238 1 20 3 175 1 139 1 72 1 370 2 23 1 95 2 75 1 
0 1 61 1 20 1 3 1 4 1 91 1 
0 6 61 2 363 1 211 1 342 1 288 1 3 7 4 1 236 2 328 1 32 2 273 3 172 1 69 1 91 3 20 7 110 1 230 1 130 1 188 1 219 1 
0 1 310 1 363 1 2 2 284 1 257 1 233 2 3 1 260 1 236 1 6 1 159 2 82 2 345 1 290 2 292 1 37 1 239 1 186 2 120 1 349 1 350 1 15 2 218 2 243 3 245 2 169 1 192 2 61 1 323 1 62 1 376 1 270 2 326 1 303 1 304 1 328 1 273 1 274 1 91 1 229 4 20 1 156 1 253 1 22 3 232 6 208 1 
0 1 29 1 259 1 3 1 32 1 261 1 34 2 238 2 138 1 139 1 41 1 370 3 297 2 194 1 272 2 379 1 273 2 195 2 249 1 92 1 20 1 200 1 175 1 334 1 113 1 95 3 338 1 75 1 
0 2 61 1 363 1 299 1 3 2 4 1 236 1 328 1 273 2 91 2 20 2 230 1 75 1 
0 4 61 1 3 4 377 1 236 1 5 1 328 1 32 1 273 1 91 1 20 4 221 1 23 1 
0 2 61 1 363 1 42 1 115 1 53 1 234 1 3 2 236 1 273 1 91 2 20 2 130 1 219 1 
10 1 0 1 61 1 142 1 20 1 59 1 3 1 101 1 32 1 91 1 
0 2 61 1 211 1 3 2 236 1 328 1 273 1 91 1 20 2 276 1 188 1 
0 4 61 2 42 1 211 1 377 1 3 5 288 1 236 2 5 1 328 1 32 1 273 3 69 1 91 2 20 5 221 1 
0 4 61 2 42 1 211 1 223 1 377 1 3 5 288 1 236 2 5 1 328 1 32 1 273 3 91 2 20 5 221 1 
0 1 362 1 323 1 61 1 363 1 3 1 236 1 303 1 345 1 82 2 32 1 290 1 273 1 91 1 37 1 20 1 239 1 245 2 
0 1 61 1 363 1 42 1 3 1 236 1 273 1 172 1 91 2 20 1 230 1 130 1 219 1 
313 1 132 1 290 1 267 1 373 1 
25 1 134 1 313 2 212 1 31 1 290 1 9 1 249 1 92 1 109 1 175 1 278 1 132 2 370 2 113 1 266 1 95 2 267 2 373 1 
323 1 183 1 313 1 343 1 82 1 255 1 267 1 245 1 373 1 
212 1 278 1 373 1 
57 1 21 1 105 1 8 1 
162 1 293 1 57 1 21 1 105 1 361 1 354 1 
122 1 344 1 361 1 
209 2 312 1 43 1 287 1 354 1 162 3 293 1 369 1 57 1 21 1 361 3 105 1 
162 2 48 1 293 1 57 1 21 1 105 1 361 2 214 1 354 1 
10 1 191 1 162 1 163 1 293 1 43 1 101 1 21 1 361 1 295 1 354 1 
162 1 293 1 43 1 21 1 105 1 361 1 354 1 
162 1 293 1 43 1 57 1 105 2 361 1 354 1 
256 1 43 1 64 1 354 2 162 2 203 1 293 2 21 1 105 1 361 2 
43 1 97 1 354 1 214 2 291 1 162 3 293 1 57 1 153 1 105 1 361 3 21 2 295 1 
43 1 365 1 101 2 354 1 214 1 10 1 162 2 163 1 293 1 57 1 59 1 21 1 105 1 361 2 279 1 
43 1 354 2 214 2 291 1 162 4 359 1 293 2 48 1 57 1 105 1 361 4 21 2 295 1 
162 1 293 1 43 1 57 1 21 1 105 1 361 1 354 1 
209 1 287 1 147 1 214 2 354 1 291 1 162 4 293 1 369 1 57 2 105 2 361 4 21 3 295 1 
43 1 354 1 214 1 162 2 293 1 57 1 88 1 49 1 241 1 21 1 105 1 361 2 
209 2 43 1 287 1 354 1 162 3 293 1 369 2 57 1 21 1 361 3 105 1 320 1 
247 2 21 2 226 1 104 1 
162 1 293 1 43 1 361 1 354 1 89 1 
162 2 293 1 43 1 57 1 153 1 21 1 105 1 361 2 214 1 354 1 
98 1 
162 1 293 1 43 1 57 1 21 1 105 1 361 1 354 1 
209 1 43 1 214 1 354 1 162 3 293 1 57 1 153 1 361 3 105 1 21 1 
21 1 147 1 295 1 291 1 
21 1 105 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 66 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 198 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (82,168) (82,168) 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 59 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 288 56 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 213 49 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 304 163 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 185 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 185 103 326 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 185 103 326 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 185 103 116 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 304 163 100 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 304 163 100 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 185 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (82,168) (82,168) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (82,168) (82,168) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (82,168) (82,168) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 114 26 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (112,269) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 66 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 141 (65,190) 150 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 221 170 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (44,239) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (187,287) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
300 1 55 1 119 2 84 1 120 1 176 1 64 1 177 1 8 3 331 2 253 3 258 1 179 2 
209 1 300 4 119 2 81 2 3 1 84 1 120 1 220 2 176 1 177 6 8 9 272 1 179 2 180 1 184 1 55 3 101 1 246 1 284 1 64 2 107 1 331 5 250 2 253 9 336 1 73 1 74 2 258 1 
209 1 300 4 119 2 81 2 3 1 84 1 120 1 220 2 176 1 177 6 8 9 272 1 179 2 180 1 184 1 55 3 101 1 246 1 284 1 64 2 107 1 331 5 250 2 253 9 336 1 73 1 74 2 258 1 
209 1 300 5 119 2 81 2 3 1 84 1 120 1 220 2 176 1 177 7 8 10 272 1 179 2 180 1 184 1 55 4 101 1 246 1 284 1 64 2 107 1 331 6 250 2 253 10 336 1 73 1 74 2 258 1 
209 1 300 3 119 2 81 2 3 1 84 1 120 1 220 1 176 1 177 4 8 7 272 1 179 2 180 1 184 1 55 2 101 1 246 1 284 1 64 2 107 1 331 4 250 2 253 7 73 1 74 2 258 1 
300 2 55 1 119 1 101 1 81 1 84 1 3 1 120 1 220 2 176 1 177 3 8 4 331 3 250 1 253 4 336 1 74 1 179 1 
35 1 184 1 119 1 265 1 84 1 120 1 105 1 284 1 176 1 64 1 8 2 331 1 250 1 253 2 74 1 179 1 
300 4 119 2 81 1 84 1 3 1 120 1 220 2 176 1 177 7 8 9 179 2 181 1 55 3 101 1 64 1 107 1 195 1 331 5 250 1 253 9 336 1 73 1 258 1 74 1 
300 4 119 2 81 1 84 1 3 1 120 1 220 2 176 1 177 7 8 9 179 2 181 1 55 3 101 1 64 1 107 1 195 1 331 5 250 1 253 9 336 1 73 1 258 1 74 1 
292 1 205 1 
292 1 205 1 
223 1 292 2 156 1 205 1 296 1 152 1 
66 1 
117 1 172 1 6 1 325 1 88 1 312 1 328 1 292 1 201 1 335 1 95 1 
117 1 39 1 172 1 325 1 124 1 88 1 312 1 328 1 292 2 28 1 335 1 95 1 
292 1 205 1 
292 1 205 1 
292 1 
0 1 39 1 88 2 124 1 312 2 67 2 28 1 95 2 72 1 
140 1 136 1 318 1 
214 1 264 1 57 1 40 2 216 1 123 1 88 1 287 1 125 1 23 1 224 1 67 1 251 1 134 2 71 1 254 2 95 1 231 1 159 1 
214 1 264 1 57 1 39 1 40 1 123 1 287 1 124 1 88 2 312 1 224 1 154 1 134 1 71 1 254 1 136 1 29 1 231 1 95 2 159 1 
67 1 66 1 
139 1 39 4 6 1 124 4 88 5 312 5 154 2 67 1 68 1 28 1 29 1 95 5 72 1 51 1 
88 2 124 2 312 2 117 1 39 2 267 1 95 2 121 1 
88 3 124 3 312 3 67 1 154 1 39 3 28 1 95 3 
88 1 124 1 312 1 117 1 39 1 95 1 121 1 
0 1 88 1 124 1 312 1 117 1 39 1 28 1 95 1 72 1 
117 1 39 2 172 1 325 1 124 2 88 2 312 2 196 1 328 1 154 1 292 1 335 1 28 1 29 1 95 2 72 1 206 1 
88 2 124 1 312 2 67 1 154 1 68 1 39 1 6 1 95 2 
117 1 39 1 172 1 325 1 124 1 88 1 312 1 328 1 154 1 198 1 292 1 335 1 29 1 95 1 206 1 
140 1 39 2 124 2 88 2 312 2 154 1 28 1 136 1 72 1 95 2 
214 1 264 1 57 1 40 1 123 1 88 1 287 1 224 1 67 1 134 1 71 1 254 1 95 1 231 1 159 1 
239 1 264 1 57 1 40 1 282 1 123 1 88 1 224 1 67 1 134 1 71 1 254 1 95 1 231 1 159 1 
301 1 263 1 174 1 310 1 130 1 132 1 229 1 228 2 92 1 230 1 136 2 50 1 318 2 140 2 277 2 97 1 17 1 21 1 192 1 108 1 334 1 293 4 295 2 158 1 
88 1 124 1 312 1 117 1 39 1 335 1 267 1 95 1 
291 1 47 1 203 1 
237 1 291 2 203 2 245 1 324 1 297 1 
291 1 203 1 
291 1 203 1 
324 1 297 1 
324 1 297 1 
324 1 297 1 
291 1 98 1 203 1 
291 1 98 1 203 1 
291 1 98 1 203 1 
291 1 166 1 203 1 
291 1 166 1 203 1 
291 1 166 1 203 1 
183 1 320 1 322 1 39 1 286 1 88 1 124 1 312 1 291 1 292 1 203 1 114 1 93 1 338 1 95 1 
183 2 320 1 168 1 322 2 82 1 60 1 286 2 291 2 271 1 292 2 203 2 93 2 338 2 
24 1 81 1 247 2 74 2 105 1 
250 1 81 1 74 1 
250 1 74 1 105 1 
24 1 164 1 81 2 247 1 74 3 105 1 
24 1 81 1 281 1 247 1 74 2 105 1 
2 1 292 1 205 1 
299 1 292 2 59 1 205 2 234 1 
211 1 143 1 152 1 223 1 288 1 89 1 332 1 292 2 156 1 205 1 296 1 
211 1 143 1 56 1 152 1 288 1 223 1 89 1 332 1 292 1 156 1 296 1 
294 1 
66 1 71 1 22 1 
178 1 71 1 
57 1 71 1 231 1 
9 1 71 1 
71 1 231 1 
57 1 58 1 71 3 22 2 231 1 235 1 
277 4 17 3 323 1 21 1 42 1 188 1 226 1 204 1 293 7 229 1 92 2 295 3 259 1 157 1 161 1 162 1 261 2 75 1 
5 3 42 1 218 1 174 3 221 1 45 1 130 1 226 1 273 3 228 2 229 4 92 5 230 3 233 4 236 1 277 16 186 1 17 10 323 2 21 4 192 1 199 1 249 1 334 1 293 31 204 2 295 15 157 1 158 1 259 5 75 1 161 2 261 3 162 2 
36 1 37 1 218 1 42 1 130 2 226 1 229 1 228 4 92 3 277 5 17 4 323 1 21 1 192 2 334 2 293 9 204 1 295 4 158 2 259 1 157 1 261 2 162 1 161 1 
277 4 17 3 323 1 21 1 42 1 226 1 204 1 293 7 229 1 92 2 295 3 259 1 157 1 161 1 162 1 261 2 75 1 
277 4 17 3 323 1 21 1 42 1 226 1 204 1 293 7 229 1 92 2 295 3 259 1 157 1 161 1 162 1 261 2 75 1 
1 1 264 1 119 1 169 2 18 1 306 2 40 1 219 1 86 1 64 2 8 1 224 1 109 1 330 1 329 2 134 1 71 1 253 1 254 1 231 1 137 1 179 1 159 1 
210 1 164 1 169 1 119 1 264 1 81 1 306 1 40 1 84 1 87 1 8 1 224 1 270 1 134 1 179 1 12 1 14 1 241 1 105 1 64 1 329 1 250 1 253 1 254 1 337 1 74 2 
210 1 164 1 169 1 119 1 264 1 81 1 306 1 40 1 84 1 120 1 217 1 87 1 176 1 177 1 8 2 224 1 270 1 134 1 179 1 12 1 14 1 241 1 105 1 64 1 331 1 329 1 250 1 253 2 254 1 74 2 
210 1 164 1 169 1 119 1 264 1 81 1 306 1 40 1 120 1 219 1 87 1 176 1 177 2 8 3 224 1 134 1 179 1 12 1 14 1 241 1 191 1 105 1 64 1 331 1 329 1 250 1 253 3 254 1 337 1 74 2 
210 1 164 1 169 1 264 1 81 1 306 1 40 1 120 1 87 1 176 1 177 2 8 2 224 1 134 1 12 1 191 1 105 1 64 1 331 1 329 1 250 1 253 2 254 1 337 1 74 2 
155 1 
211 1 13 1 213 1 40 1 223 1 332 1 292 1 134 1 156 1 254 1 49 1 296 1 159 1 
304 1 99 1 117 1 240 1 83 1 172 1 307 1 6 1 325 1 88 1 312 1 328 1 197 1 292 2 201 1 335 1 95 1 
99 1 117 1 240 1 83 1 172 1 307 1 6 1 325 1 88 1 312 1 328 1 197 1 292 2 201 1 335 1 30 1 95 1 
163 1 304 1 99 1 117 1 240 1 83 1 172 1 307 1 6 1 325 1 88 1 312 1 328 1 197 1 292 2 201 1 335 1 95 1 
292 1 
211 1 117 1 83 1 172 1 6 1 307 1 223 1 88 1 312 1 95 1 96 1 13 1 185 1 99 1 240 1 19 1 325 1 289 1 197 1 328 1 292 2 333 1 110 1 201 1 335 1 156 1 296 1 
211 1 117 1 83 1 172 1 6 1 307 1 88 1 223 1 312 1 135 1 95 1 96 1 13 1 185 1 99 1 240 1 103 1 19 1 325 1 326 1 289 1 197 1 328 1 292 2 333 1 110 1 201 1 335 1 156 1 296 1 
211 1 117 1 83 1 172 1 6 1 307 1 88 1 223 1 312 1 135 1 95 1 96 1 13 1 185 1 99 1 240 1 103 1 19 1 325 1 326 1 289 1 197 1 328 1 292 2 333 1 110 1 201 1 335 1 156 1 296 1 
211 1 116 1 167 1 117 1 83 1 172 1 6 1 307 1 88 1 223 1 312 1 95 1 138 1 96 1 276 1 13 1 185 1 99 1 240 1 103 1 325 1 289 1 197 1 328 1 292 2 110 1 201 1 335 1 156 1 296 1 
163 1 304 1 99 1 100 1 117 1 240 1 83 1 172 1 307 1 6 1 325 1 88 1 312 1 328 1 197 1 292 2 201 1 335 1 95 1 
163 1 304 1 99 1 100 1 117 1 240 1 83 1 172 1 307 1 6 1 325 1 88 1 312 1 328 1 197 1 292 2 201 1 335 1 95 1 
211 1 117 1 83 1 172 1 6 1 307 1 223 1 88 1 312 1 95 1 138 1 276 1 96 1 13 1 185 1 99 1 240 1 325 1 289 1 197 1 328 1 292 2 110 1 201 1 335 1 156 1 296 1 
301 1 264 2 118 1 39 1 40 8 217 1 7 1 86 1 88 1 124 1 125 2 312 1 128 1 224 2 130 2 129 1 131 1 132 2 134 7 228 4 95 1 231 2 52 1 97 2 277 1 192 2 248 1 154 1 330 1 334 2 293 2 71 3 337 1 254 8 295 1 256 1 158 2 31 1 159 2 
39 1 5 1 174 1 124 1 88 1 312 1 130 1 132 1 92 1 228 2 274 1 229 1 136 1 230 1 95 1 318 1 140 1 97 1 277 1 17 1 21 1 149 1 192 1 334 1 293 3 28 1 295 2 72 1 158 1 
301 1 42 1 130 1 226 1 132 1 228 2 92 2 229 1 136 1 318 1 140 1 97 1 277 3 17 2 323 1 21 1 192 1 66 1 67 2 334 1 293 6 295 3 157 1 158 1 161 1 261 1 
212 1 5 2 174 2 221 1 129 1 130 2 132 2 273 3 92 1 228 4 229 2 136 11 230 1 233 3 318 11 140 4 97 1 277 8 17 2 243 1 147 1 21 1 149 1 192 2 67 1 199 1 334 2 202 1 293 14 295 6 31 1 259 1 158 2 
79 1 214 1 264 1 39 1 40 1 266 1 216 1 123 1 88 2 124 1 312 1 224 1 130 1 129 1 132 1 134 1 228 2 231 1 95 2 140 1 97 1 277 1 57 1 149 1 192 1 287 1 67 1 154 1 334 1 293 2 71 1 111 1 254 1 29 1 295 1 158 1 31 1 159 1 
262 2 264 2 5 2 174 2 88 3 10 1 92 4 95 3 97 3 277 10 17 8 21 3 190 2 192 3 287 2 25 2 293 20 295 10 29 1 31 1 214 2 39 1 40 3 42 1 123 2 124 1 222 2 312 1 311 2 224 2 129 1 130 3 226 1 132 3 134 3 228 6 229 3 136 7 230 2 231 2 318 7 140 7 142 1 238 1 323 1 57 2 149 1 67 2 154 1 334 3 71 2 337 1 254 3 157 1 158 3 259 4 261 1 161 1 159 1 
140 1 301 1 97 1 277 2 17 1 192 1 174 1 130 1 132 1 334 1 293 2 228 2 229 1 136 1 50 1 259 1 318 1 158 1 
140 1 301 1 97 1 17 1 21 1 192 1 108 1 130 1 132 1 334 1 293 2 92 1 228 2 136 1 230 1 295 2 318 1 158 1 
301 1 5 1 174 1 130 1 132 1 229 1 228 2 92 1 136 2 230 1 318 2 140 2 277 2 97 1 17 2 21 1 192 1 334 1 293 4 295 2 158 1 259 1 
52 1 140 1 97 1 277 2 17 1 192 1 174 1 130 1 132 1 334 1 293 2 228 2 229 1 136 1 50 1 259 1 318 1 158 1 
52 1 140 1 97 1 17 1 21 1 192 1 108 1 130 1 132 1 334 1 293 2 92 1 228 2 136 1 230 1 295 2 318 1 158 1 
5 1 174 1 130 1 132 1 229 1 228 2 92 1 136 2 230 1 318 2 52 1 140 2 277 2 97 1 17 2 21 1 192 1 334 1 293 4 295 2 158 1 259 1 
5 1 174 1 130 1 132 1 229 1 228 2 92 1 136 2 230 1 318 2 140 2 277 2 97 1 17 2 21 1 192 1 334 1 293 4 295 2 158 1 259 1 
214 1 264 1 40 1 123 1 88 1 311 1 224 1 129 1 130 1 132 1 134 1 228 2 231 1 95 1 277 1 97 1 57 1 192 1 287 1 67 1 334 1 293 2 71 1 254 1 295 1 158 1 31 1 159 1 
264 1 171 1 40 1 123 1 88 1 224 1 129 1 130 1 132 1 134 1 228 2 231 1 95 1 277 1 97 1 239 1 57 1 282 1 192 1 67 1 334 1 293 2 71 1 254 1 295 1 158 1 31 1 159 1 
5 1 174 1 130 1 132 1 229 1 228 2 92 1 136 2 230 1 318 2 140 2 277 2 97 1 17 2 21 1 149 1 192 1 334 1 293 4 295 2 158 1 259 1 
214 1 264 1 40 1 5 1 217 1 174 1 123 1 222 1 88 1 311 1 224 1 130 1 132 1 134 1 92 1 229 1 228 2 230 1 136 2 231 1 95 1 318 2 140 2 277 2 97 1 17 2 57 1 21 1 192 1 287 1 334 1 293 4 71 1 254 1 295 2 259 1 158 1 
39 1 5 1 174 1 124 1 88 1 43 1 312 1 130 1 132 1 228 2 229 1 230 1 136 1 95 1 318 1 140 1 97 1 277 2 17 1 21 1 149 1 192 1 334 1 293 3 28 1 295 1 72 1 259 1 158 1 
208 1 37 1 4 2 5 3 174 3 221 1 127 1 130 2 227 1 273 1 91 1 92 3 228 4 229 3 230 3 275 2 233 2 277 9 54 1 17 6 21 3 192 2 63 1 199 1 27 1 334 2 293 19 295 10 158 2 259 3 
208 2 37 1 170 1 4 4 5 3 41 1 218 2 174 3 221 2 127 2 130 3 227 1 273 2 91 1 92 2 228 6 229 3 94 1 230 2 275 1 233 2 277 14 17 4 242 1 21 2 192 3 63 1 290 1 334 3 293 26 295 12 257 1 259 2 158 3 
170 1 4 4 5 4 174 4 273 3 91 1 92 4 94 1 275 1 277 20 280 1 17 8 21 5 192 3 290 1 199 1 293 41 295 21 208 1 37 1 218 1 41 1 42 1 221 3 127 2 130 3 226 1 227 1 229 5 228 6 230 4 233 4 54 1 242 1 323 1 63 1 334 3 257 1 259 4 158 3 157 1 161 1 261 1 
208 1 37 1 170 1 4 4 5 4 42 1 41 1 218 2 174 4 221 3 127 2 130 4 226 1 227 1 273 3 91 1 92 4 228 8 229 5 94 1 230 3 275 1 233 4 277 20 54 1 280 1 17 7 323 1 242 1 21 4 192 4 63 1 290 1 199 1 334 4 293 38 295 18 257 1 157 1 158 4 259 3 261 1 161 1 
208 1 37 1 170 1 4 4 5 7 42 1 218 1 41 1 174 7 221 2 127 1 130 2 226 1 227 1 273 4 91 1 92 7 228 4 229 8 94 1 230 7 275 1 233 4 277 27 17 14 323 1 242 1 21 8 192 2 63 1 290 1 199 2 334 2 202 2 293 52 295 25 257 1 157 1 158 2 259 7 261 1 161 1 
237 1 34 1 291 1 183 1 322 1 203 1 189 1 93 1 298 1 286 1 
47 1 113 1 
53 1 291 1 183 1 144 1 322 1 203 1 93 1 232 1 286 1 
98 1 122 1 
166 1 316 1 245 1 
183 1 320 1 168 1 322 1 82 1 60 1 286 1 291 1 271 1 292 1 203 1 93 1 338 2 
183 1 320 1 168 1 322 1 82 1 60 1 286 1 291 1 271 1 292 1 203 1 93 1 338 2 
183 1 320 1 168 1 322 1 82 1 60 1 286 1 291 1 271 1 292 1 203 1 93 1 338 2 
98 1 245 1 122 1 
98 1 245 1 122 1 
166 1 316 1 
166 1 316 1 245 1 
80 1 16 1 
183 1 322 1 60 1 286 1 291 1 271 1 292 1 26 1 203 1 114 1 93 1 205 1 338 1 
305 1 264 1 118 1 40 2 88 2 125 2 126 1 312 2 224 1 130 1 129 1 132 1 134 2 228 2 231 1 95 2 97 1 277 1 148 1 149 1 192 1 151 1 69 1 334 1 293 2 71 1 254 2 295 1 256 1 158 1 31 1 
264 1 40 1 306 1 268 1 86 1 224 1 90 1 109 1 330 1 134 1 71 1 254 1 231 1 159 1 
164 1 14 1 264 1 81 1 40 1 306 1 268 1 105 1 87 1 224 1 250 1 134 1 337 1 254 1 74 2 32 1 260 1 12 1 
164 1 14 1 264 1 81 1 40 2 306 1 268 1 217 1 105 1 87 1 224 1 250 1 134 2 337 1 254 2 74 2 32 1 260 1 12 1 
164 1 14 1 264 1 81 1 40 1 102 1 306 1 105 1 87 1 224 1 250 1 134 1 337 1 254 1 74 2 260 1 12 1 
61 1 
96 1 223 1 269 1 13 1 156 1 296 1 
96 1 211 1 229 1 21 1 5 1 230 1 174 1 
134 1 40 1 254 1 159 1 
96 1 269 1 66 1 112 1 
96 1 223 1 211 1 13 1 333 1 19 1 156 1 296 1 
141 1 211 1 13 1 264 1 57 1 40 1 150 1 65 1 223 1 178 1 224 2 332 1 134 1 71 2 156 1 254 1 231 1 235 1 296 1 159 1 207 1 
96 1 223 1 211 1 13 1 273 1 170 1 156 1 233 1 296 1 221 1 
96 2 211 1 13 1 323 1 146 2 104 1 21 1 283 1 42 1 223 1 292 1 229 2 135 1 156 1 296 1 161 1 
96 1 223 1 211 1 77 1 13 1 332 1 156 1 296 1 
80 1 314 1 189 1 93 1 286 1 
78 1 93 1 286 1 
78 1 93 1 286 1 
78 1 93 1 286 1 
20 1 93 1 286 1 
20 1 93 1 286 1 
20 1 93 1 286 1 
93 1 286 1 
291 1 203 1 
277 5 37 1 17 5 323 2 21 2 283 1 42 1 192 1 130 1 334 1 293 10 228 2 92 3 229 2 295 5 158 1 259 2 161 2 
277 2 37 1 17 1 192 1 174 1 130 1 334 1 293 2 228 2 229 1 158 1 259 1 
277 2 37 1 17 2 21 1 5 1 192 1 174 1 130 1 334 1 293 4 92 1 228 2 229 1 295 2 230 1 158 1 259 1 
277 1 54 1 37 1 17 2 323 1 218 1 173 1 192 3 130 3 334 3 293 3 228 6 92 1 295 2 158 3 259 1 161 1 
37 1 5 3 42 2 173 1 218 2 174 3 221 1 45 1 130 5 226 1 273 3 228 10 229 5 92 7 230 3 233 4 236 1 277 16 54 1 17 12 323 3 21 5 192 5 199 1 249 1 334 5 293 34 70 1 295 18 157 1 158 5 259 5 261 1 161 3 
37 1 170 1 42 1 221 1 130 1 226 1 273 1 229 1 228 2 92 2 233 1 277 4 17 2 323 1 21 1 192 1 334 1 293 8 295 4 158 1 157 1 261 1 161 1 
37 1 170 1 5 1 42 1 174 1 221 1 130 2 226 1 273 1 92 2 228 4 229 2 233 2 277 6 17 3 323 1 21 1 192 2 199 1 334 2 293 11 70 1 295 5 157 1 158 2 259 1 261 1 161 1 
37 1 170 1 5 2 42 1 218 1 41 1 174 2 221 1 130 3 226 1 273 1 228 6 229 3 92 3 230 2 233 1 277 9 17 4 323 1 242 1 21 3 192 3 290 1 334 3 293 19 70 1 295 10 257 1 157 1 259 1 158 3 261 1 161 1 
37 1 170 1 5 2 42 1 218 1 41 1 174 2 221 1 130 3 226 1 273 1 228 6 229 3 92 3 230 1 233 1 277 10 17 5 323 1 242 1 21 2 192 3 290 1 334 3 293 17 70 1 295 7 257 1 157 1 259 2 158 3 261 1 161 1 
37 1 170 1 42 1 221 1 130 1 226 1 273 1 229 1 228 2 92 2 233 1 277 4 17 2 323 1 21 1 192 1 334 1 293 8 295 4 158 1 157 1 261 1 161 1 
37 1 170 1 5 2 41 1 174 2 221 1 130 1 273 1 228 2 229 2 92 1 230 2 233 1 277 6 17 2 242 1 21 2 192 1 290 1 334 1 293 12 295 6 257 1 259 1 158 1 
37 1 170 1 5 2 42 1 41 1 218 2 174 2 221 1 130 4 226 1 273 1 228 8 229 3 92 3 230 1 233 1 277 10 17 5 323 1 242 1 21 2 192 4 290 1 334 4 293 18 70 1 295 8 257 1 157 1 259 2 158 4 261 1 161 1 
37 1 170 1 5 3 41 1 218 2 174 3 221 1 130 4 273 1 228 8 229 3 92 3 230 2 233 1 277 9 54 1 17 6 242 1 21 2 192 4 290 1 334 4 293 16 295 7 257 1 259 3 158 4 
277 3 17 6 323 3 21 1 42 1 226 2 293 7 92 3 229 1 295 4 157 1 259 3 161 3 
37 1 170 1 5 2 42 1 41 1 218 2 174 2 221 1 130 4 226 1 273 1 228 8 229 3 92 3 230 1 233 1 277 10 54 1 17 4 323 1 242 1 21 2 192 4 290 1 334 4 293 18 295 8 257 1 157 1 259 1 158 4 261 1 161 1 
277 4 17 3 323 1 21 1 42 1 218 1 192 2 130 2 226 1 334 2 293 8 229 1 92 2 228 4 295 4 259 1 158 2 157 1 261 1 161 1 
277 3 17 2 323 1 21 1 42 1 66 1 226 1 293 6 92 2 229 1 295 3 157 1 261 1 161 1 
277 2 17 2 21 1 5 1 192 1 174 1 130 1 334 1 293 4 92 1 70 1 228 2 229 1 295 2 230 1 158 1 259 1 
277 3 17 2 21 1 5 1 174 1 221 1 199 1 273 1 293 7 92 1 229 1 230 1 295 4 233 2 259 1 
212 1 5 2 42 1 218 2 173 1 174 2 130 2 226 1 273 2 229 3 92 5 228 4 230 2 233 2 277 11 17 9 323 2 21 3 192 2 199 1 334 2 293 23 202 1 295 12 157 1 259 4 158 2 261 1 161 2 
293 1 295 1 233 1 
277 1 273 1 293 1 
262 1 277 3 17 3 5 1 21 1 192 1 174 1 130 1 334 1 293 6 228 2 70 1 229 1 92 2 295 3 230 1 158 1 259 1 
37 1 170 1 5 2 41 1 174 2 221 1 130 1 273 1 228 2 229 2 92 1 230 2 233 1 277 6 17 2 242 1 21 2 192 1 290 1 334 1 293 12 295 6 257 1 259 1 158 1 
277 3 17 2 323 1 21 1 42 1 293 6 229 1 92 1 295 3 259 1 161 1 
277 1 17 2 323 1 173 1 218 1 192 1 130 1 226 1 334 1 293 3 92 1 228 2 295 2 259 1 158 1 157 1 161 1 
88 1 175 1 312 1 67 1 68 1 6 1 95 1 
279 1 6 1 309 1 175 1 88 1 312 1 67 1 46 1 68 1 317 1 95 1 115 1 
303 1 302 1 264 1 40 4 217 1 86 1 224 1 330 1 134 4 71 1 254 4 231 1 159 1 
142 1 264 1 57 1 40 2 85 1 285 1 327 1 224 2 252 1 134 2 315 1 71 1 254 2 231 1 
224 1 250 1 264 1 134 1 40 1 254 1 74 1 105 1 87 1 159 1 
224 1 264 1 69 1 134 2 71 1 40 2 337 1 254 2 217 1 231 1 256 1 
303 1 264 2 40 5 217 1 86 1 224 2 131 1 248 1 330 1 134 4 315 1 71 3 254 5 256 1 231 2 159 1 
303 1 264 2 40 5 217 1 86 1 224 2 313 1 248 1 330 1 134 4 315 1 71 3 254 5 256 1 231 2 159 1 
224 1 66 1 330 1 264 1 134 1 71 1 40 1 254 1 231 1 86 1 159 1 
264 1 57 1 39 1 40 1 123 1 124 1 88 2 287 1 312 1 224 1 67 1 154 1 134 1 71 1 254 1 231 1 95 2 159 1 
264 1 117 1 39 1 40 1 172 1 123 1 88 2 124 2 312 2 224 1 9 1 134 1 315 1 48 1 95 2 231 2 57 2 287 1 67 1 154 1 71 3 335 1 254 1 
302 1 264 1 117 1 39 1 40 2 172 1 123 1 88 2 124 2 312 2 224 1 9 1 134 2 315 1 48 1 95 2 231 2 239 1 57 2 67 1 154 1 71 3 335 1 254 2 
178 1 44 1 292 1 134 1 71 1 40 1 315 1 254 1 
178 1 187 1 292 1 134 1 71 1 40 1 315 1 254 1 
224 1 128 1 264 1 134 1 40 1 254 1 
15 1 264 2 57 1 40 7 217 1 85 1 7 1 125 1 128 1 224 3 248 1 131 1 252 1 134 6 71 3 337 1 254 7 256 1 231 2 235 1 159 2 
214 1 264 1 39 1 40 1 42 1 217 1 123 1 88 2 124 1 222 1 126 1 312 1 311 1 224 1 130 2 226 1 132 2 134 1 229 1 92 2 228 4 136 1 231 1 95 2 318 1 140 1 277 3 97 2 17 2 323 1 57 1 21 1 149 1 190 1 192 2 287 1 67 2 154 1 334 2 293 6 71 1 254 1 295 3 157 1 158 2 261 1 161 1 
292 1 205 1 
264 1 57 1 40 2 217 1 22 1 128 1 224 2 134 2 71 2 254 2 231 1 235 1 207 1 
239 1 264 1 57 1 39 1 40 1 123 1 124 1 88 2 312 1 224 1 67 1 154 1 134 1 71 1 254 1 231 1 95 2 159 1 
15 1 264 1 57 1 40 1 85 1 224 2 252 1 134 1 315 1 71 1 254 1 231 1 235 1 
67 1 62 1 11 1 308 1 160 1 
321 1 165 1 117 1 172 1 244 1 325 1 62 2 308 1 67 1 328 1 292 2 335 1 205 1 11 2 206 1 160 2 
305 1 148 1 62 1 308 1 151 1 88 1 312 1 95 1 160 1 
165 1 321 1 308 1 
176 1 8 1 331 1 119 1 253 1 84 1 120 1 179 1 
300 1 184 1 55 1 119 1 120 2 176 2 177 2 8 4 225 1 331 3 133 1 253 4 179 1 33 1 
181 1 119 1 145 1 84 1 120 1 176 1 177 1 8 2 194 1 331 1 253 2 179 1 
176 1 8 3 225 1 184 2 331 1 119 1 253 3 84 1 120 1 179 1 33 2 319 1 
38 1 331 2 200 2 255 1 
8 1 119 1 253 1 84 1 179 1 153 1 
176 1 177 1 8 2 331 1 119 1 253 2 84 1 120 1 73 1 179 1 
278 1 
176 1 8 1 331 1 119 1 253 1 84 1 120 1 179 1 
176 1 66 1 331 1 120 1 
176 1 8 1 331 1 119 1 253 1 120 1 179 1 
64 1 329 1 253 1 
184 2 119 1 84 1 120 1 193 1 176 1 8 3 225 1 331 1 253 3 179 1 33 1 
176 1 177 1 8 2 331 1 119 1 253 2 120 1 179 1 220 1 
300 1 8 1 331 1 250 1 119 1 81 1 3 1 253 1 84 1 74 1 179 1 
176 1 8 1 331 1 119 1 253 1 84 1 179 1 
176 2 8 1 119 1 253 1 84 1 120 1 179 1 
182 1 119 2 84 1 215 1 106 1 176 1 8 2 331 1 253 2 179 2 
300 1 55 1 119 1 84 1 120 1 176 1 107 1 177 2 8 3 331 2 253 3 73 1 179 1 
76 1 164 1 119 1 81 1 84 1 120 1 105 1 176 1 177 1 8 2 331 1 250 1 253 2 74 2 179 1 
300 1 55 1 119 2 84 1 120 1 220 1 176 1 177 2 8 4 331 2 253 4 336 1 179 2 
184 1 119 1 84 1 120 1 177 1 176 1 8 3 331 1 253 3 73 1 179 1 
300 1 55 1 331 1 133 1 
176 1 331 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 1 75 5 153 1 79 1 6 6 207 2 325 2 159 1 185 1 328 1 60 4 210 2 211 1 234 3 63 9 88 1 66 1 41 2 238 2 339 1 18 1 356 1 293 1 273 9 294 2 92 1 248 2 315 1 
149 1 75 5 153 1 79 1 6 6 207 2 325 2 159 1 185 1 328 1 60 4 210 2 211 1 234 3 63 9 88 1 66 1 41 2 238 2 339 1 18 1 356 1 293 1 273 9 294 2 92 1 248 2 315 1 
149 1 75 6 153 1 79 1 6 7 207 2 325 2 159 1 185 1 328 1 60 5 210 2 211 1 234 4 63 10 88 1 66 1 41 2 238 2 339 1 18 1 356 1 293 1 273 10 294 2 92 1 248 2 315 1 
149 1 75 4 153 1 79 1 6 4 207 2 325 2 159 1 185 1 328 1 60 3 210 1 211 1 234 2 63 7 88 1 66 1 41 2 238 2 339 1 18 1 293 1 273 7 294 2 92 1 248 2 315 1 
210 2 234 1 63 4 88 1 149 1 75 3 41 1 238 1 153 1 6 3 18 1 356 1 294 1 273 4 325 1 185 1 248 1 60 2 
63 2 88 1 149 1 75 1 336 1 238 1 339 1 153 1 273 2 358 1 294 1 207 1 325 1 118 1 248 1 315 1 
234 1 63 3 88 1 149 1 75 2 238 2 153 1 6 1 273 3 207 1 159 1 248 2 60 1 
149 1 75 5 153 1 6 7 207 1 32 1 159 1 185 1 325 1 60 4 210 2 234 3 63 9 88 1 41 1 238 2 240 1 18 1 356 1 293 1 273 9 294 1 92 1 248 2 
149 1 75 5 153 1 6 7 207 1 32 1 159 1 185 1 325 1 60 4 210 2 234 3 63 9 88 1 41 1 238 2 240 1 18 1 356 1 293 1 273 9 294 1 92 1 248 2 
73 1 311 1 261 1 
113 2 73 1 190 1 
132 2 133 2 101 2 80 2 99 2 126 2 189 1 370 1 
316 2 22 1 318 1 221 1 320 1 99 2 180 2 126 3 3 1 4 1 202 1 78 1 259 1 132 3 324 1 133 2 101 2 80 2 260 1 326 1 264 1 304 1 332 1 162 2 189 1 370 1 110 1 308 1 242 1 114 1 271 1 245 1 117 1 48 1 94 1 360 2 342 2 
132 1 133 1 101 1 80 1 99 1 126 1 208 1 370 1 301 1 224 1 
73 1 126 1 2 1 53 1 301 1 352 1 129 1 353 1 132 1 133 1 357 1 311 1 171 1 361 1 
73 1 99 1 126 1 2 1 53 2 301 1 129 1 353 2 132 1 133 1 101 1 357 1 311 1 80 1 361 1 
353 1 333 1 188 1 53 1 191 1 
353 2 73 1 298 1 311 1 188 1 142 1 53 2 191 1 
353 1 188 1 53 1 
329 1 99 1 126 1 53 1 370 1 301 1 224 1 191 1 353 1 132 1 133 1 101 1 80 1 208 1 
73 1 
353 2 330 1 73 1 298 1 311 1 188 1 53 2 191 1 
73 1 161 1 175 1 298 1 306 1 307 1 300 1 188 2 53 5 143 2 269 1 191 2 353 5 241 2 311 1 366 1 347 1 227 1 196 2 
261 1 189 1 
99 1 126 2 109 1 189 2 28 1 132 2 133 2 101 1 80 1 
317 1 230 1 119 1 
22 1 108 1 162 1 180 1 126 1 189 1 110 1 78 1 259 1 132 1 324 1 245 1 117 1 48 1 326 1 360 1 
132 3 133 3 101 3 80 1 99 3 313 1 126 3 189 1 
132 1 133 1 101 1 99 1 126 1 208 1 301 1 
28 1 132 1 133 1 101 1 80 1 99 1 126 1 109 1 301 1 
316 1 22 1 318 1 221 1 320 1 99 3 180 1 126 4 2 1 53 1 4 1 78 1 301 1 129 1 259 1 132 4 324 1 133 3 101 3 80 2 326 1 264 1 304 1 104 1 332 1 162 1 335 1 109 1 189 1 370 1 110 1 353 1 308 1 114 1 271 1 357 1 244 1 245 1 117 1 48 1 313 1 360 1 342 2 361 1 
72 1 132 2 133 2 101 1 99 1 126 2 313 1 189 1 352 1 
287 1 73 1 99 3 2 1 335 1 126 3 109 1 53 1 301 1 129 1 353 1 132 3 133 3 101 3 357 1 80 1 244 1 313 2 361 1 
317 1 99 2 126 2 109 1 132 2 133 2 101 2 80 1 313 1 230 1 
22 1 162 1 180 1 126 1 189 1 110 1 78 1 259 1 132 1 324 1 245 1 48 1 117 1 326 1 360 1 
22 1 162 1 180 1 126 1 189 1 110 1 78 1 5 1 132 1 324 1 81 1 48 1 117 1 326 1 360 1 
316 4 317 2 51 1 320 1 277 1 3 2 4 1 321 1 258 1 322 1 138 1 304 1 230 2 285 1 332 1 42 1 308 2 114 1 271 1 45 1 314 1 119 2 342 2 362 1 
132 1 133 1 357 1 101 1 266 1 99 1 126 1 301 1 
317 1 22 1 99 1 162 1 180 1 335 1 126 2 78 1 110 1 259 1 132 2 324 1 133 1 101 1 245 1 117 1 48 1 313 1 326 1 360 1 
72 1 297 1 176 1 99 4 126 5 335 1 109 1 189 1 352 1 132 5 133 5 101 4 80 1 313 2 
132 2 133 2 101 2 266 1 99 2 126 2 208 1 301 1 
82 1 100 1 
82 1 100 1 
213 1 156 1 
213 1 156 1 
213 1 156 1 
82 1 359 1 100 1 
354 1 82 1 100 1 
204 1 213 1 319 1 156 1 82 2 100 2 
82 1 359 1 100 1 
82 1 359 1 100 1 
236 1 82 1 100 1 
236 1 82 1 100 1 
236 1 82 1 100 1 
0 1 121 1 73 1 13 1 199 1 65 1 177 2 179 2 100 2 350 1 53 2 16 3 353 2 204 1 157 1 225 2 82 2 348 2 120 2 
65 1 177 1 179 1 99 2 126 2 100 1 222 1 189 1 53 1 16 1 353 1 354 1 132 2 133 2 101 2 102 1 225 1 282 1 82 1 145 1 84 1 231 1 120 1 295 1 
294 1 325 1 41 1 
294 1 358 1 325 1 
167 1 358 1 9 1 41 2 325 3 262 1 
167 1 358 1 41 1 325 2 262 1 139 1 
167 2 358 1 41 1 325 2 262 1 
73 1 174 1 175 1 298 1 1 1 99 1 126 1 127 1 53 5 301 1 224 1 132 1 133 1 101 1 80 1 134 1 227 1 208 1 285 1 329 1 107 1 307 2 39 1 188 1 42 1 370 1 143 1 191 4 241 1 353 5 193 1 289 2 311 1 196 1 295 1 50 1 
73 1 174 1 175 1 298 1 1 1 99 1 126 1 127 1 53 5 301 1 224 1 132 1 133 1 101 1 80 1 227 1 208 1 285 1 329 1 89 2 107 1 333 2 307 2 39 1 188 3 42 1 143 1 370 1 191 4 241 1 353 5 371 1 372 1 311 1 196 1 295 1 50 1 
73 1 174 1 99 1 1 1 126 1 300 1 127 1 53 3 301 1 224 1 132 1 133 1 101 1 80 1 134 1 227 1 208 1 329 1 285 1 107 1 39 1 307 2 42 1 370 1 143 1 191 2 241 1 353 3 193 1 289 1 311 1 196 1 295 1 
174 1 1 1 300 1 127 1 53 2 134 1 227 1 285 1 107 1 39 1 307 2 42 1 143 1 191 1 241 1 353 2 193 1 289 1 274 1 196 1 295 1 
226 1 261 1 117 1 
117 1 172 1 
122 1 
117 1 326 1 
22 1 38 1 299 1 226 2 117 3 326 1 
22 1 117 1 326 1 
117 1 344 1 
316 7 51 3 64 1 250 2 305 1 42 1 3 4 338 1 308 3 56 1 346 1 290 1 158 1 138 2 314 1 11 1 71 1 
316 7 51 3 64 1 250 2 305 1 42 1 3 4 338 1 308 3 56 1 346 1 290 1 158 1 138 2 314 1 11 1 71 1 
316 7 51 3 64 1 250 2 305 1 182 1 42 1 3 4 338 1 308 3 56 1 346 1 290 1 158 1 138 2 314 1 11 1 71 1 
316 31 51 10 250 3 174 3 320 1 4 1 3 16 321 3 302 1 27 1 155 1 56 2 346 2 158 1 83 1 138 5 11 5 285 3 62 1 64 2 332 1 305 2 337 3 42 4 338 1 308 15 114 1 290 1 292 1 217 1 218 4 314 4 71 1 342 2 
316 9 62 1 51 4 64 1 332 2 250 2 124 1 305 1 320 2 42 1 3 5 4 2 308 4 114 2 192 1 56 1 290 1 346 1 158 1 138 3 314 1 11 1 71 1 342 4 
220 1 149 1 75 1 180 1 257 1 323 1 153 1 6 1 57 1 207 1 135 1 9 1 34 1 137 1 325 2 63 2 88 1 67 1 162 1 41 1 238 1 110 1 19 1 194 1 294 1 273 2 358 1 48 1 360 1 248 1 
220 1 75 1 180 1 255 1 323 1 153 1 6 2 57 1 9 1 207 1 135 1 34 1 137 1 325 2 63 3 88 1 67 1 162 1 41 1 238 1 110 1 291 1 19 1 116 1 294 1 273 3 358 1 48 1 360 1 248 1 
220 1 75 1 180 1 255 1 153 1 6 2 57 1 207 1 135 1 9 1 34 1 137 1 325 2 63 2 88 1 67 1 162 1 41 1 110 1 116 1 273 2 358 1 294 1 48 1 360 1 
220 2 180 1 151 1 324 1 207 2 34 2 326 1 349 1 63 1 212 1 87 1 67 2 162 1 238 1 110 1 291 1 273 1 48 1 21 1 117 1 169 1 360 1 248 1 
220 1 149 1 180 1 255 1 323 1 57 1 207 1 135 1 9 1 34 1 137 1 325 2 63 1 67 1 162 1 41 1 238 1 110 1 19 1 194 1 294 1 273 1 358 1 48 1 360 1 248 1 
154 1 
296 2 298 3 198 1 2 1 53 5 256 2 54 1 301 1 345 1 206 2 263 2 265 1 349 1 212 1 307 2 162 2 110 1 352 1 113 2 353 5 270 1 357 1 311 1 216 2 117 1 171 1 360 2 361 1 73 2 175 1 180 2 126 1 223 1 129 1 280 2 130 1 365 1 324 2 132 1 133 1 227 2 326 1 284 1 140 4 39 1 188 6 190 2 143 1 44 2 241 1 46 1 195 1 144 1 48 1 196 1 
330 1 140 2 298 1 198 1 188 2 2 1 126 1 53 3 301 1 54 1 352 1 129 1 280 1 353 3 130 1 270 1 345 1 132 1 133 1 357 1 171 1 361 1 
296 1 73 1 298 1 198 1 126 1 2 1 53 3 54 1 301 1 129 1 130 1 132 1 345 1 133 1 140 3 330 1 188 1 352 1 353 3 270 1 357 1 311 1 171 1 361 1 
296 1 73 1 298 1 198 1 126 1 2 1 53 3 54 1 301 1 129 1 130 1 280 1 132 1 345 1 133 1 330 1 140 3 188 2 352 1 353 3 44 1 270 1 357 1 311 1 171 1 361 1 
296 4 298 3 198 1 2 1 53 5 256 2 301 1 54 1 345 1 206 2 10 1 263 2 265 1 307 1 268 1 17 1 352 1 353 5 270 1 357 1 311 5 216 2 171 1 361 1 73 5 23 1 175 1 126 1 25 1 129 1 280 4 130 1 132 1 133 1 227 1 284 1 140 6 330 1 188 7 190 2 143 1 44 4 241 1 196 1 
296 2 298 2 198 1 2 1 53 4 256 2 301 1 54 1 345 1 206 2 263 2 265 1 307 1 352 1 353 4 113 2 270 1 357 1 311 1 216 2 171 1 361 1 73 2 175 1 126 1 129 1 130 1 280 2 132 1 133 1 227 1 284 1 140 4 188 4 190 2 143 1 241 1 44 2 46 1 196 1 
296 2 73 1 298 2 175 1 198 1 126 1 2 1 25 1 53 4 256 2 54 1 301 1 129 1 280 2 130 1 132 1 345 1 206 2 133 1 227 1 263 2 265 1 284 1 140 4 307 1 188 4 190 2 268 1 143 1 17 1 352 1 44 2 241 1 353 4 270 1 357 1 311 1 216 2 196 1 171 1 361 1 
296 2 73 1 298 2 175 1 198 1 126 1 2 1 25 1 53 4 256 2 54 1 301 1 129 1 280 2 130 1 132 1 345 1 206 2 133 1 227 1 263 2 265 1 284 1 140 4 307 1 188 4 190 2 268 1 143 1 17 1 352 1 44 2 241 1 353 4 270 1 357 1 311 1 216 2 196 1 171 1 361 1 
296 2 73 1 74 1 298 2 175 1 198 1 126 1 2 1 25 1 53 4 54 1 301 1 129 1 280 2 130 1 132 1 345 1 206 2 133 1 227 1 136 1 265 1 140 4 307 1 214 2 188 4 15 1 143 1 352 1 44 2 113 2 241 1 353 4 270 1 355 2 357 1 311 1 216 2 196 1 171 1 361 1 
296 3 73 1 298 2 175 1 23 1 198 1 126 1 2 1 25 1 53 4 256 2 54 1 301 1 129 1 130 1 280 3 132 1 345 1 206 2 133 1 227 1 263 2 265 1 284 1 140 5 307 1 188 5 190 2 268 1 143 1 17 1 352 1 241 1 353 4 44 3 270 1 357 1 311 1 216 2 196 1 171 1 361 1 
296 3 73 1 298 2 175 1 23 1 198 1 126 1 2 1 25 1 53 4 256 2 54 1 301 1 129 1 130 1 280 3 132 1 345 1 206 2 133 1 227 1 263 2 265 1 284 1 140 5 307 1 188 5 190 2 268 1 143 1 17 1 352 1 241 1 353 4 44 3 270 1 357 1 311 1 216 2 196 1 171 1 361 1 
296 2 298 2 198 1 2 1 53 4 301 1 54 1 345 1 206 2 265 1 307 1 214 2 352 1 353 4 113 2 270 1 355 2 357 1 311 1 216 2 171 1 361 1 74 1 73 1 175 1 126 1 129 1 130 1 280 2 132 1 133 1 227 1 140 4 188 4 143 1 241 1 44 2 46 1 196 1 
317 1 316 6 51 2 250 1 320 1 4 1 3 3 322 1 56 1 158 1 261 1 138 2 230 1 304 1 332 1 305 1 42 1 189 2 308 3 114 1 271 1 290 1 314 1 71 1 119 1 342 2 
316 14 317 11 51 2 174 2 253 1 320 2 150 1 4 2 3 8 321 1 203 1 155 1 138 1 264 1 11 1 304 2 230 4 186 1 285 2 332 2 189 1 337 3 42 2 308 6 242 1 114 2 243 1 271 1 217 1 218 3 314 1 119 11 342 4 
316 2 22 1 180 1 99 1 320 1 126 2 4 1 3 1 78 1 259 1 324 1 132 2 133 1 101 1 184 1 326 1 264 1 230 1 304 1 61 1 332 1 108 1 162 1 335 1 189 1 110 1 308 1 114 1 243 1 242 1 271 1 245 1 340 1 117 1 48 1 313 1 360 1 342 2 
51 8 250 1 99 1 255 1 4 3 3 10 259 2 56 1 101 1 158 1 264 1 11 4 304 3 305 1 162 3 164 1 215 2 110 2 308 10 114 3 271 3 313 1 117 2 314 3 71 1 360 3 119 7 316 20 317 7 22 2 318 2 174 2 180 3 320 3 178 2 126 3 278 1 78 2 321 2 324 1 132 3 133 1 138 4 326 2 230 7 285 2 286 2 332 3 40 1 335 1 189 2 42 3 242 1 243 1 290 1 373 2 245 2 48 2 342 6 
316 2 99 1 180 8 320 2 126 1 52 1 255 1 257 1 4 2 3 1 322 1 132 1 324 2 133 1 101 1 103 1 326 2 264 1 283 1 304 2 349 1 86 1 331 1 212 1 332 2 162 7 110 2 165 1 308 1 114 2 242 1 271 2 313 1 48 2 117 3 341 1 94 2 360 8 342 4 
317 1 316 3 51 1 174 1 320 1 99 1 126 1 4 1 3 1 321 1 132 1 133 1 101 1 80 1 138 1 230 1 304 1 36 1 285 1 332 1 109 1 42 1 308 2 114 1 243 1 271 1 314 1 119 1 342 2 
317 1 316 2 285 1 51 1 332 1 320 1 42 1 4 1 3 2 322 1 114 1 271 1 11 1 230 1 119 1 304 1 342 2 362 1 
317 1 316 2 51 1 332 1 320 1 4 1 258 1 321 1 322 1 308 2 114 1 271 1 138 1 314 1 230 1 119 1 304 1 342 2 
317 2 316 4 285 1 51 2 332 1 174 1 320 1 42 1 4 1 3 2 321 1 322 1 308 2 114 1 271 1 138 1 314 1 11 1 230 2 119 2 304 1 342 2 
317 1 316 2 285 1 51 1 332 1 320 1 42 1 4 1 3 2 114 1 271 1 103 1 11 1 230 1 119 1 304 1 342 2 362 1 
317 1 316 2 51 1 332 1 320 1 4 1 258 1 321 1 308 2 114 1 271 1 103 1 138 1 314 1 230 1 119 1 304 1 342 2 
317 2 316 4 285 1 51 2 332 1 174 1 320 1 42 1 4 1 3 2 321 1 308 2 114 1 271 1 103 1 138 1 314 1 11 1 230 2 119 2 304 1 342 2 
317 2 285 1 316 4 51 2 332 1 174 1 320 1 42 1 4 1 3 2 321 1 308 2 114 1 271 1 138 1 314 1 11 1 230 2 119 2 304 1 342 2 
316 2 22 1 318 1 180 1 320 1 126 1 3 1 4 1 78 1 259 1 324 1 132 1 326 1 264 1 304 1 332 1 162 1 189 1 110 1 308 1 242 1 114 1 271 1 245 1 48 1 117 1 360 1 342 2 
316 2 22 1 180 1 320 1 126 1 3 1 77 1 4 1 78 1 5 1 324 1 132 1 81 1 326 1 264 1 304 1 332 1 162 1 189 1 110 1 308 1 242 1 114 1 271 1 48 1 117 1 360 1 342 2 
317 2 316 4 285 1 51 2 332 1 174 1 320 1 42 1 4 1 3 2 321 1 308 2 243 1 114 1 271 1 138 1 314 1 11 1 230 2 119 2 304 1 342 2 
317 2 316 4 22 1 51 2 318 1 174 1 180 1 320 1 126 1 3 2 257 1 4 1 321 1 78 1 259 1 132 1 138 1 326 1 11 1 230 2 304 1 285 1 332 1 162 1 42 1 215 1 110 1 308 2 114 1 271 1 245 1 48 1 117 1 314 1 119 2 360 1 342 2 
316 3 317 1 51 1 174 1 320 1 99 1 126 1 4 1 3 2 321 1 132 1 133 1 101 1 80 1 33 1 11 1 304 1 230 1 285 1 332 1 109 1 42 1 308 1 114 1 243 1 271 1 314 1 119 1 342 2 
316 19 147 2 51 6 123 1 174 3 251 2 124 1 320 2 152 1 4 2 3 9 321 3 205 1 155 1 30 1 31 1 138 3 11 3 285 3 332 2 163 1 337 1 42 3 308 10 114 2 217 1 218 2 314 3 95 1 342 4 
316 26 147 4 51 4 123 1 174 3 251 1 124 1 320 3 181 1 152 1 4 3 3 14 321 2 30 2 138 2 11 2 285 3 62 2 332 3 334 1 163 2 267 1 337 2 42 3 43 1 308 12 114 3 217 2 93 1 218 2 314 2 95 1 374 1 342 6 
147 4 51 8 250 1 251 1 3 20 4 3 152 1 155 1 56 1 158 1 11 4 62 1 305 1 163 2 267 1 308 21 114 3 217 3 218 4 314 5 71 1 316 41 174 4 123 1 124 1 320 3 181 1 321 4 30 1 31 1 138 4 285 4 332 3 288 1 334 1 42 5 337 3 43 1 290 1 93 1 374 1 95 1 342 6 
316 38 147 4 51 7 250 1 123 1 174 4 251 1 124 1 320 4 181 1 152 1 4 4 3 20 321 3 155 1 56 1 30 1 31 1 158 1 138 4 11 3 285 4 62 2 332 4 305 1 288 1 334 1 163 2 267 1 337 3 42 5 43 1 308 18 114 4 290 1 217 3 93 1 218 4 314 4 71 1 95 1 374 1 342 8 
316 52 147 4 51 14 250 1 123 1 174 7 251 1 124 1 320 2 181 1 152 1 4 2 3 27 321 7 155 2 56 1 30 1 158 1 138 7 11 7 186 2 285 7 62 1 332 2 305 1 334 1 163 1 267 1 337 4 42 8 43 1 308 25 114 2 290 1 217 2 93 1 218 4 314 8 71 1 95 1 374 1 342 4 
204 1 121 1 20 1 157 1 177 1 225 1 179 1 82 1 100 1 120 1 
354 1 282 1 
364 1 112 1 70 1 177 1 225 1 179 1 82 1 100 1 120 1 
121 1 73 1 13 1 199 1 65 1 177 1 179 1 100 1 350 1 53 1 16 2 353 1 204 1 157 1 225 1 82 1 348 1 120 1 
121 1 73 1 13 1 199 1 65 1 177 1 179 1 100 1 350 1 53 1 16 2 353 1 204 1 157 1 225 1 82 1 348 1 120 1 
121 1 73 1 13 1 199 1 65 1 177 1 179 1 100 1 350 1 53 1 16 2 353 1 204 1 157 1 225 1 82 1 348 1 120 1 
319 1 359 1 69 1 
319 1 359 1 69 1 
85 1 236 1 
85 1 236 1 319 1 
222 1 231 1 
177 1 179 1 99 2 126 2 100 1 222 1 53 1 132 2 133 2 101 2 102 1 225 1 82 1 282 1 84 1 348 1 231 1 369 1 350 1 189 1 16 1 191 1 353 1 354 1 145 1 120 1 295 1 
359 1 69 1 
85 1 236 1 319 1 
316 2 197 1 180 2 320 1 126 2 4 1 3 1 132 2 7 1 133 2 326 1 264 1 304 1 209 1 141 1 332 1 162 2 110 1 165 1 308 1 243 1 114 1 242 1 271 1 47 1 48 1 117 1 341 1 94 2 360 2 342 2 
67 1 162 2 180 2 41 1 76 1 255 1 257 1 110 1 90 1 29 1 19 1 57 1 294 1 358 1 9 1 48 1 137 1 325 2 360 2 
67 1 162 1 180 1 41 1 255 1 343 1 110 1 29 1 19 1 57 1 294 1 358 1 9 1 137 1 48 1 325 2 360 1 
212 1 67 1 162 1 180 1 151 1 110 1 90 1 131 1 324 1 48 1 117 1 326 1 360 1 349 1 
67 1 162 1 180 1 41 1 76 1 255 1 110 1 90 1 29 1 19 1 57 1 294 1 358 1 9 1 48 1 137 1 325 2 360 1 
55 1 
73 1 311 1 307 1 347 1 227 1 261 1 269 1 
73 2 175 1 298 1 53 1 256 1 227 1 263 1 284 1 307 1 188 1 190 1 143 1 241 1 113 1 353 1 311 1 196 1 
97 1 22 1 174 1 298 1 175 2 299 1 1 2 180 1 2 1 53 2 183 1 324 1 226 1 227 2 367 1 326 1 285 1 107 2 307 3 39 1 162 1 188 2 68 1 42 1 143 2 110 1 353 2 241 2 373 1 115 1 91 1 117 4 48 2 196 2 49 1 360 1 172 2 
175 1 174 4 1 8 181 1 321 4 155 1 227 11 186 1 285 4 107 8 307 7 334 1 267 1 337 2 190 3 42 4 143 1 43 1 241 1 113 3 310 2 217 1 218 2 196 1 314 4 374 1 
148 1 175 1 99 1 126 1 53 1 301 1 224 1 132 1 56 1 133 1 101 1 80 1 227 2 208 1 233 1 329 1 305 1 307 2 268 1 42 2 143 1 370 1 241 1 353 1 310 2 196 1 314 1 71 1 
73 1 175 1 307 1 143 1 269 1 241 1 311 1 347 1 227 1 196 1 
285 1 107 1 174 1 307 2 1 1 42 1 
353 1 73 1 298 1 311 1 188 1 53 1 
98 1 175 1 298 2 180 4 300 1 53 3 223 2 324 2 227 2 326 1 349 1 212 1 39 2 307 2 162 4 188 4 237 1 143 2 110 1 241 2 353 3 272 1 195 1 144 1 246 2 48 1 117 1 196 2 360 4 
316 1 22 1 318 1 221 1 320 1 180 1 99 2 126 3 4 1 78 1 259 1 324 1 132 3 133 2 101 2 80 2 326 1 264 1 304 1 332 1 162 1 189 1 370 1 110 1 308 1 114 1 271 1 245 1 48 1 117 1 360 1 342 2 
73 1 175 1 307 1 39 1 1 1 143 1 223 1 241 1 311 1 227 1 196 1 
106 1 179 1 120 1 
157 1 179 1 170 1 231 1 120 1 
106 1 179 1 120 1 
106 1 179 1 120 1 
179 1 35 1 120 1 
179 1 35 1 120 1 
179 1 35 1 120 1 
179 1 120 1 
82 1 100 1 
316 8 62 1 51 3 332 2 250 1 305 1 320 2 42 1 3 4 4 2 308 4 114 2 56 1 290 1 158 1 138 2 314 1 11 1 71 1 342 4 
316 6 51 2 250 1 305 1 42 1 3 3 308 3 56 1 290 1 261 1 158 1 138 2 314 1 71 1 
285 1 316 4 235 1 51 2 332 1 174 1 320 1 42 1 4 1 3 2 321 1 308 2 114 1 138 1 314 1 11 1 342 2 
316 7 285 1 51 2 174 1 337 1 42 1 3 3 321 1 308 4 155 1 217 1 138 1 218 2 314 1 11 1 
316 23 51 9 250 1 174 2 253 1 320 2 3 11 4 2 321 2 155 1 56 2 158 1 228 1 138 5 11 4 186 1 285 2 62 2 332 2 305 2 42 3 337 2 308 12 114 2 290 1 218 2 314 3 71 1 342 4 
316 1 308 1 218 1 
316 1 337 1 3 1 
316 6 285 1 235 1 332 1 51 3 174 1 320 1 42 1 4 1 3 3 321 1 308 3 114 1 373 1 138 2 314 1 11 1 342 2 
316 12 51 2 174 2 124 1 320 1 181 1 4 1 3 6 321 2 138 1 11 1 285 2 332 1 334 1 267 1 337 1 42 2 43 1 308 6 114 1 217 1 218 1 314 2 374 1 342 2 
316 6 51 2 305 1 42 1 3 3 308 3 56 1 138 1 314 1 11 1 71 1 
316 3 62 1 51 2 332 1 305 1 320 1 3 1 4 1 308 2 114 1 56 1 290 1 158 1 228 1 138 1 11 1 342 2 
316 10 148 1 332 1 51 5 124 1 305 2 320 1 42 2 4 1 3 5 308 5 114 1 56 2 138 3 314 2 11 2 71 1 342 2 
285 1 316 2 332 1 51 1 124 1 320 1 42 1 4 1 3 2 114 1 11 1 342 2 
285 1 316 4 51 2 332 1 174 1 124 1 320 1 42 1 4 1 3 2 321 1 308 2 114 1 138 1 314 1 11 1 342 2 
316 3 62 1 332 3 51 2 124 1 305 1 320 3 4 3 3 1 308 2 114 3 56 1 31 1 228 1 138 1 11 1 342 6 
316 34 51 12 250 1 174 3 124 1 320 5 4 5 3 16 321 3 27 1 155 1 56 3 31 1 158 1 228 1 83 1 138 7 11 5 285 3 62 2 235 1 332 5 305 3 337 3 42 5 308 18 114 5 290 1 292 1 217 1 218 4 314 5 71 2 342 10 
316 8 51 2 250 1 124 1 320 1 181 1 4 1 3 4 56 1 158 1 138 2 332 1 305 1 42 1 337 1 308 4 114 1 290 1 217 1 218 1 314 1 71 1 342 2 
316 11 51 3 250 1 174 1 124 1 320 2 181 1 4 2 3 6 155 1 56 1 158 1 138 2 11 1 285 1 235 1 332 2 305 1 337 1 42 2 308 5 114 2 290 1 217 1 218 2 314 1 71 1 342 4 
316 19 51 4 250 1 174 2 124 1 320 3 181 1 4 3 3 9 321 2 56 1 158 1 138 3 11 1 285 2 62 1 235 1 332 3 305 1 334 1 267 1 337 1 42 3 43 1 308 10 114 3 290 1 217 1 218 1 314 3 71 1 374 1 342 6 
316 17 51 5 250 1 174 2 124 1 320 3 181 1 4 3 3 10 321 1 56 1 158 1 138 3 11 2 285 2 62 1 235 1 332 3 305 1 334 1 267 1 337 1 42 3 43 1 308 7 114 3 290 1 217 1 218 1 314 2 71 1 374 1 342 6 
316 8 51 2 250 1 124 1 320 1 181 1 4 1 3 4 56 1 158 1 138 2 332 1 305 1 42 1 337 1 308 4 114 1 290 1 217 1 218 1 314 1 71 1 342 2 
316 12 51 2 174 2 124 1 320 1 181 1 4 1 3 6 321 2 138 1 11 1 285 2 332 1 334 1 267 1 337 1 42 2 43 1 308 6 114 1 217 1 218 1 314 2 374 1 342 2 
316 18 51 5 250 1 174 2 124 1 320 4 181 1 4 4 3 10 321 1 56 1 158 1 138 3 11 2 285 2 62 2 235 1 332 4 305 1 334 1 267 1 337 1 42 3 43 1 308 8 114 4 290 1 217 1 218 1 314 2 71 1 374 1 342 8 
316 16 51 6 174 3 124 1 320 4 181 1 4 4 3 9 321 2 31 1 138 3 11 3 285 3 62 2 332 4 334 1 267 1 337 1 42 3 43 1 308 7 114 4 217 1 218 1 314 2 374 1 342 8 
316 7 51 6 305 3 42 1 3 3 308 4 56 3 290 1 158 2 138 3 314 1 11 3 71 1 
316 18 51 4 250 1 174 2 124 1 320 4 181 1 4 4 3 10 321 1 56 1 31 1 158 1 138 3 11 1 285 2 62 2 332 4 305 1 334 1 267 1 337 1 42 3 43 1 308 8 114 4 290 1 217 1 218 1 314 2 71 1 374 1 342 8 
132 1 72 1 133 1 59 1 126 1 189 1 352 1 
26 1 132 1 72 1 133 1 59 1 125 1 126 1 254 1 189 1 12 1 352 1 276 1 
212 1 324 1 261 1 180 1 162 1 48 1 117 1 326 1 360 1 110 1 349 1 
22 1 99 1 162 1 180 1 126 2 189 1 78 1 110 1 132 2 324 1 133 1 101 1 245 1 117 1 48 1 313 1 326 1 360 1 
22 2 99 2 162 1 180 1 126 2 189 1 344 1 301 1 78 1 110 1 132 2 133 2 357 1 101 1 245 1 312 1 246 1 117 3 48 1 313 1 326 2 360 1 361 1 
22 2 363 1 99 2 162 2 180 2 126 2 189 1 344 1 301 1 78 1 110 1 132 2 133 2 357 1 101 1 81 1 312 1 246 1 117 3 48 1 313 1 326 2 360 2 361 1 
22 1 363 1 249 1 73 1 180 3 2 1 53 2 344 1 324 1 226 1 281 1 326 1 162 3 188 1 110 1 353 2 311 1 246 1 312 1 117 4 48 1 172 1 360 3 
22 1 363 1 73 1 162 3 180 3 2 1 188 1 53 2 344 1 110 1 353 2 324 1 115 1 311 1 226 1 312 1 246 1 48 1 117 4 326 1 360 3 172 1 
180 1 162 1 48 1 52 1 360 1 110 1 
86 1 331 1 22 1 299 1 200 1 162 6 180 7 52 1 255 1 257 1 110 2 165 1 324 2 117 3 48 3 94 1 326 2 283 1 219 1 360 7 146 1 
51 2 250 1 99 1 257 1 4 2 3 3 259 1 56 1 101 1 158 1 304 2 305 1 162 1 215 1 110 1 308 3 114 2 271 2 313 1 117 1 314 1 360 1 71 1 119 1 316 6 317 1 22 1 318 1 180 1 320 2 126 2 78 1 132 2 133 1 326 1 138 2 230 1 286 1 332 2 42 1 189 2 243 1 290 1 47 1 245 1 48 1 342 4 
97 1 73 1 175 2 298 1 180 1 2 1 53 3 183 1 324 1 347 1 226 1 227 1 367 1 307 1 162 1 188 2 143 2 269 1 191 1 241 2 353 3 272 1 115 1 311 1 117 2 196 2 360 1 172 1 
22 1 299 1 162 2 180 2 52 1 257 1 110 1 226 1 117 2 48 2 326 1 49 1 360 2 
212 1 363 1 162 4 180 4 257 1 110 1 324 1 48 1 117 1 326 1 275 1 360 4 349 1 
22 1 200 1 162 2 180 2 164 1 239 1 110 1 58 1 246 1 117 1 48 2 326 1 219 1 360 2 
324 1 294 1 358 1 180 1 162 1 48 1 137 1 325 1 360 1 110 1 
7 1 180 2 162 2 48 1 117 1 326 1 255 1 360 2 257 1 110 1 165 1 
212 1 331 1 162 4 180 5 257 1 110 2 165 1 324 1 246 1 117 3 48 2 326 2 283 1 275 1 360 5 349 1 
212 1 331 1 162 4 180 5 257 1 110 2 165 1 166 1 324 1 246 1 117 3 48 2 326 2 275 1 360 5 349 1 
22 1 99 1 162 1 180 1 126 2 189 1 78 1 110 1 132 2 324 1 133 1 101 1 81 1 117 1 48 1 313 1 326 1 360 1 
22 1 299 1 200 1 162 1 180 1 110 1 246 1 117 1 48 2 326 1 219 1 360 1 146 1 
37 1 229 1 189 1 232 1 160 1 
368 1 37 2 73 1 2 1 189 1 53 2 301 1 191 1 129 1 353 2 357 1 311 1 8 1 244 1 168 1 229 2 232 2 361 1 160 1 
132 1 141 1 37 1 133 1 197 1 126 1 229 1 209 1 160 1 
8 1 168 1 160 1 
153 1 88 1 75 1 261 1 
153 1 63 1 88 1 75 1 273 1 248 1 238 1 
220 1 273 1 207 1 
63 3 149 1 88 1 75 1 238 1 128 1 111 1 339 2 153 1 309 1 273 3 248 1 
153 1 210 1 6 1 63 2 88 1 75 1 273 2 248 1 238 1 
63 1 149 1 75 1 41 1 238 1 18 1 273 1 294 1 325 1 248 1 60 1 
153 1 63 1 149 1 75 1 273 1 248 1 238 1 
153 2 63 1 88 1 149 1 273 1 248 1 238 1 
153 1 63 2 149 1 75 1 273 2 14 1 24 1 248 2 238 2 96 1 
234 1 63 3 88 1 149 1 75 2 238 1 153 1 6 2 293 1 273 3 92 1 248 1 60 1 
63 2 88 1 149 1 75 1 41 1 238 1 153 1 6 1 358 1 273 2 294 1 9 1 247 1 325 2 248 1 
210 1 234 1 63 4 88 1 149 1 75 2 238 2 153 1 6 2 356 1 273 4 248 2 60 1 
153 1 63 1 88 1 149 1 75 1 273 1 248 1 238 1 
234 1 63 4 88 2 75 3 128 1 238 1 339 1 153 2 6 2 309 1 303 1 273 4 248 1 60 1 
63 2 149 1 88 1 75 1 351 1 238 1 153 1 6 1 273 2 32 1 248 1 105 1 
63 3 149 1 88 1 75 1 201 1 238 1 128 2 339 2 153 1 309 1 273 3 248 1 
173 1 75 2 327 1 279 2 
63 1 149 1 252 1 273 1 248 1 238 1 
153 1 6 1 63 2 88 1 149 1 75 1 293 1 273 2 248 1 238 1 
187 1 
153 1 63 1 88 1 149 1 75 1 273 1 248 1 238 1 
153 1 6 1 63 3 88 1 149 1 75 1 293 1 273 3 248 1 238 1 339 1 
234 1 75 1 303 1 60 1 
153 1 75 1 

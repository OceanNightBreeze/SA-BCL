#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 246 1 221 1 360 2 68 1 87 1 5 6 139 3 334 1 293 1 89 1 294 2 70 1 50 1 71 1 271 1 196 4 226 2 198 1 74 2 146 9 300 2 276 2 147 5 55 9 93 1 303 1 245 2 
188 1 246 1 360 2 221 1 68 1 87 1 5 6 139 3 334 1 293 1 89 1 294 2 70 1 50 1 71 1 271 1 196 4 226 2 198 1 74 2 146 9 300 2 276 2 147 5 55 9 93 1 303 1 245 2 
188 1 246 1 360 2 221 1 68 1 87 1 5 7 139 4 334 1 293 1 89 1 294 2 70 1 50 1 71 1 271 1 196 5 226 2 198 1 74 2 146 10 300 2 276 2 147 6 55 10 93 1 303 1 245 2 
188 1 246 1 360 2 221 1 68 1 87 1 5 4 139 2 334 1 293 1 294 1 70 1 50 1 71 1 271 1 196 3 226 2 198 1 74 2 146 7 300 2 276 2 147 4 55 7 93 1 303 1 245 2 
93 1 360 1 5 3 139 1 334 1 89 1 294 2 70 1 50 1 271 1 196 2 74 1 300 1 245 1 146 4 276 1 147 3 55 4 
93 1 76 1 68 1 113 1 303 1 16 1 70 1 50 1 226 1 74 1 245 1 146 2 300 1 147 1 276 1 55 2 
93 1 5 1 139 1 70 1 50 1 71 1 196 1 226 1 74 2 245 2 146 3 147 2 55 3 
360 1 5 7 139 3 334 1 293 1 294 2 89 1 70 1 71 1 50 1 271 1 196 4 226 1 198 1 365 1 74 2 146 9 300 1 147 5 276 1 55 9 366 1 93 1 245 2 
360 1 5 7 139 3 334 1 293 1 294 2 89 1 70 1 71 1 50 1 271 1 196 4 226 1 198 1 365 1 74 2 146 9 300 1 147 5 276 1 55 9 366 1 93 1 245 2 
38 1 308 1 256 1 
253 1 38 1 131 2 
141 2 224 2 42 2 295 1 44 1 242 2 244 2 208 2 
42 2 44 1 266 1 333 2 21 1 168 1 292 1 140 2 335 1 141 3 224 2 295 1 10 1 116 1 320 1 251 1 175 1 12 1 149 2 176 1 31 2 75 1 280 1 177 1 34 2 59 1 208 3 324 1 63 1 352 1 379 1 242 2 353 1 214 1 328 1 244 2 216 1 
141 1 61 1 224 1 42 1 362 1 295 1 232 1 242 1 244 1 208 1 
42 1 191 1 141 2 249 1 224 1 362 2 295 1 338 1 202 1 232 1 256 1 208 2 61 1 126 1 241 1 377 1 38 1 212 1 242 1 184 1 244 2 
42 2 232 1 256 1 208 2 61 1 141 2 249 1 224 2 295 1 362 2 38 1 241 1 126 2 212 1 338 2 242 2 202 1 184 1 244 2 
240 1 296 1 8 1 126 1 338 1 
296 1 8 1 38 1 126 2 338 2 381 1 256 1 342 1 
296 1 126 1 338 1 
42 1 232 1 208 1 61 1 141 1 249 1 224 1 362 1 295 1 8 1 126 1 338 1 242 1 244 1 
38 1 
296 1 8 1 38 1 126 2 338 2 381 1 186 1 256 1 
14 2 281 2 256 1 336 1 179 1 223 1 307 1 8 2 296 2 38 1 126 5 363 1 338 5 275 1 213 2 117 1 381 1 364 1 299 1 
44 1 308 1 
42 1 44 2 208 2 141 2 69 1 224 1 161 1 242 1 244 2 
111 1 233 1 173 1 
263 1 176 1 44 1 34 1 168 1 292 1 140 1 208 1 141 1 324 1 63 1 328 1 320 1 175 1 12 1 149 1 
176 1 111 1 255 1 34 1 168 1 292 1 140 1 208 2 324 1 141 2 224 1 63 1 242 1 328 1 244 1 320 1 175 1 12 1 301 1 149 1 
141 3 42 1 224 3 44 1 242 3 244 3 301 1 208 3 
141 1 224 1 362 1 232 1 242 1 244 1 208 1 
141 1 69 1 224 1 42 1 362 1 242 1 161 1 244 1 208 1 
42 2 44 1 190 1 333 1 140 1 292 1 141 4 295 1 338 1 202 1 12 1 149 1 301 1 150 1 255 1 59 1 208 4 63 1 352 1 212 1 161 1 353 1 216 1 266 1 21 1 168 1 224 3 362 2 225 1 116 1 320 1 175 1 176 1 31 2 280 1 177 1 34 1 324 1 126 1 241 1 379 1 242 3 184 1 328 1 244 3 
141 2 224 1 44 1 377 1 242 1 244 2 193 1 208 2 301 1 
42 1 255 1 208 3 141 3 224 3 362 1 38 1 126 1 241 1 26 1 212 1 161 1 338 1 242 3 202 1 184 1 244 3 301 2 150 1 
42 1 111 1 208 2 141 2 224 2 161 1 242 2 173 1 244 2 301 1 
176 1 44 1 34 1 168 1 140 1 292 1 208 1 141 1 324 1 63 1 328 1 320 1 175 1 12 1 149 1 
176 1 44 1 34 1 370 1 205 1 168 1 140 1 292 1 208 1 141 1 63 1 328 1 175 1 12 1 149 1 
132 1 218 1 111 2 266 1 21 1 333 4 222 1 24 1 27 1 116 1 201 1 173 2 31 2 32 1 233 2 75 2 280 2 177 1 95 1 207 1 183 1 353 1 215 1 216 1 
141 1 224 1 362 1 127 1 202 1 242 1 244 1 208 1 
42 1 44 1 255 1 193 1 236 1 208 5 141 5 7 1 224 4 377 1 242 4 161 1 244 5 301 2 
141 2 224 2 362 1 232 1 127 1 242 2 244 2 208 2 
97 1 318 1 
97 1 318 1 
359 1 115 1 
359 1 115 1 
359 1 115 1 
103 1 97 1 318 1 
103 1 97 1 318 1 
274 1 97 1 318 1 
62 1 359 1 115 1 260 1 97 2 318 2 
103 1 97 1 318 1 
97 1 53 1 318 1 
97 1 53 1 318 1 
97 1 53 1 318 1 
345 2 65 1 361 1 15 1 247 1 97 2 318 2 160 2 81 3 37 1 38 1 126 2 144 2 338 2 260 1 145 1 228 2 29 2 162 1 
65 1 219 1 44 1 318 1 141 2 224 2 144 1 199 1 274 1 338 1 228 1 340 1 345 1 13 1 348 1 97 1 35 1 208 2 160 1 81 1 126 1 242 2 244 2 185 1 
360 1 300 1 276 1 
113 1 300 1 276 1 
311 1 23 1 360 2 254 1 113 1 276 3 
269 1 23 1 360 1 254 1 113 1 276 2 
23 1 360 1 254 2 113 1 276 2 
218 1 189 1 219 1 289 2 248 2 336 1 171 1 195 1 296 1 8 4 201 1 338 5 340 1 117 3 341 1 151 1 253 1 32 1 153 1 348 1 14 1 281 1 256 1 178 1 305 2 179 2 183 1 126 5 38 2 213 1 381 1 131 3 
66 5 218 3 219 4 134 1 2 1 290 1 289 6 336 1 171 2 296 6 8 7 363 1 201 3 338 9 227 1 117 8 341 2 151 3 253 3 32 3 14 2 281 2 256 1 206 1 178 1 305 6 179 6 240 5 183 3 126 9 38 5 104 1 213 2 381 1 131 9 
218 1 189 1 219 1 289 2 248 1 171 1 8 2 363 1 338 3 201 1 117 3 341 1 151 1 253 2 153 1 32 1 14 1 281 1 256 1 305 2 179 2 183 1 38 3 126 3 213 1 131 4 
218 2 189 1 219 2 290 1 289 4 248 2 171 1 8 3 363 1 338 4 201 2 117 5 341 1 151 2 253 3 153 1 32 2 14 1 281 1 256 1 206 1 305 4 179 4 183 2 38 4 126 4 104 1 213 1 131 7 
355 1 308 1 292 1 
330 1 292 1 
138 1 
292 1 175 1 
155 1 355 2 168 1 315 1 292 3 175 1 
168 1 292 1 175 1 
28 1 292 1 
329 1 280 3 75 4 136 1 166 1 222 2 333 7 291 1 114 1 49 1 209 1 183 1 194 1 9 1 201 1 215 3 203 2 
329 1 280 3 75 4 136 1 166 1 222 2 333 7 291 1 114 1 49 1 209 1 183 1 194 1 9 1 201 1 215 3 203 2 
329 1 280 3 75 4 136 1 166 1 222 2 333 7 291 1 114 1 49 1 209 1 183 1 194 1 9 1 201 1 215 3 259 1 203 2 
329 2 110 1 218 3 3 1 136 2 166 1 21 1 333 31 222 5 291 5 114 1 49 2 194 2 9 1 52 1 201 4 11 4 203 3 151 3 31 2 32 3 280 15 75 16 177 1 349 1 282 1 99 1 238 3 209 1 183 4 353 1 215 10 216 1 40 1 
329 1 136 1 166 1 112 1 21 2 46 1 333 9 222 3 291 1 114 1 49 1 194 1 9 1 201 1 203 2 31 4 75 5 280 4 177 2 282 1 183 1 353 2 215 4 216 2 
85 1 311 1 360 1 137 1 5 1 88 1 113 1 140 1 270 1 70 1 50 1 226 1 200 1 74 1 300 1 146 2 147 1 276 2 149 1 55 2 93 1 154 1 34 1 98 1 80 1 63 1 211 1 328 1 245 1 261 1 
311 1 85 1 360 1 137 1 5 2 88 1 113 1 47 1 140 1 270 1 70 1 226 1 200 1 74 1 300 1 146 3 147 1 276 2 149 1 55 3 93 1 154 1 34 1 98 1 375 1 17 1 63 1 328 1 245 1 261 1 
85 1 311 1 360 1 137 1 5 2 113 1 47 1 140 1 270 1 70 1 226 1 200 1 146 2 300 1 147 1 276 2 149 1 55 2 93 1 154 1 34 1 98 1 375 1 63 1 328 1 
137 2 34 1 313 1 292 1 140 1 270 2 325 1 17 1 273 1 63 1 226 2 90 1 25 1 200 2 328 1 74 1 175 1 245 1 146 1 12 1 262 1 55 1 149 1 
85 1 311 1 360 1 137 1 88 1 113 1 47 1 140 1 270 1 50 1 226 1 200 1 74 1 300 1 146 1 276 2 149 1 55 1 154 1 34 1 98 1 80 1 63 1 328 1 245 1 261 1 
120 1 
191 1 140 2 292 1 336 1 141 1 296 6 90 1 338 5 202 1 250 1 341 1 12 2 148 1 92 1 149 2 253 2 14 1 256 2 208 1 63 1 212 1 354 2 213 1 262 1 109 1 164 2 220 1 19 2 362 1 117 2 175 1 278 1 281 1 369 2 34 2 123 1 36 1 376 1 179 2 239 2 181 4 125 2 126 5 82 1 377 1 241 1 38 3 243 1 328 1 184 1 381 3 244 1 129 2 131 2 187 1 
220 1 191 1 141 1 362 1 296 2 338 3 202 1 250 1 148 1 123 1 256 2 208 1 181 2 377 1 82 1 126 3 241 1 38 2 212 1 184 1 381 1 244 1 186 1 129 1 
164 1 220 1 191 1 256 2 123 1 208 1 141 1 181 3 362 1 38 2 241 1 126 2 82 1 377 1 212 1 202 1 338 2 184 1 250 1 244 1 148 1 
164 1 220 1 191 1 19 1 141 1 362 1 296 2 338 3 202 1 250 1 148 1 123 1 256 2 208 1 181 3 377 1 82 1 126 3 241 1 38 2 212 1 184 1 381 1 244 1 186 1 129 1 
286 1 42 1 191 1 141 2 336 1 249 1 295 1 296 7 197 1 202 1 338 5 339 1 250 1 148 1 253 2 14 1 256 4 208 2 61 1 212 1 18 1 213 1 354 2 164 3 220 1 19 4 224 1 362 2 117 1 278 1 232 1 281 1 369 2 123 1 237 1 179 1 181 5 239 2 125 2 38 4 241 1 126 5 82 1 377 1 242 1 243 1 184 1 381 3 244 2 186 1 129 4 
191 1 141 1 336 1 296 4 202 1 338 4 250 1 148 1 253 2 14 1 256 3 208 1 212 1 213 1 354 2 164 2 220 1 19 2 362 1 117 1 278 1 281 1 369 2 123 1 179 1 376 1 181 4 239 2 125 2 38 4 241 1 377 1 126 4 82 1 243 1 184 1 244 1 381 2 129 2 131 2 
164 2 220 1 19 2 191 1 141 1 336 1 362 1 296 4 197 1 338 4 202 1 117 1 250 1 148 1 278 1 253 2 14 1 281 1 369 2 123 1 256 3 208 1 237 1 179 1 239 2 181 4 125 2 377 1 82 1 126 4 241 1 38 3 212 1 18 1 243 1 354 2 184 1 213 1 381 2 244 1 129 2 
164 2 220 1 19 2 191 1 141 1 336 1 362 1 296 4 197 1 338 4 202 1 117 1 250 1 148 1 278 1 253 2 14 1 281 1 369 2 123 1 256 3 208 1 237 1 179 1 239 2 181 4 125 2 377 1 82 1 126 4 241 1 38 3 212 1 18 1 243 1 354 2 184 1 213 1 381 2 244 1 129 2 
358 2 164 2 220 1 19 2 191 1 141 1 336 1 362 1 296 4 338 4 202 1 117 1 250 1 148 1 14 1 281 1 373 1 123 1 256 3 208 1 78 1 79 2 179 1 239 2 181 4 125 2 377 1 82 1 126 4 241 1 38 3 212 1 18 1 243 1 184 1 213 1 381 2 244 1 129 2 131 2 107 1 
164 3 220 1 191 1 19 3 336 1 141 1 362 1 197 1 296 5 338 4 202 1 339 1 117 1 250 1 148 1 278 1 253 2 14 1 281 1 369 2 123 1 256 3 208 1 237 1 179 1 239 2 181 5 125 2 377 1 82 1 126 4 241 1 38 3 212 1 18 1 243 1 354 2 213 1 184 1 381 2 244 1 129 3 
164 3 220 1 191 1 19 3 336 1 141 1 362 1 197 1 296 5 338 4 202 1 339 1 117 1 250 1 148 1 278 1 253 2 14 1 281 1 369 2 123 1 256 3 208 1 237 1 179 1 239 2 181 5 125 2 377 1 82 1 126 4 241 1 38 3 212 1 18 1 243 1 354 2 213 1 184 1 381 2 244 1 129 3 
358 2 164 2 220 1 19 2 191 1 336 1 141 1 362 1 296 4 338 4 202 1 117 1 250 1 148 1 14 1 281 1 373 1 123 1 256 3 208 1 79 2 376 1 179 1 239 2 181 4 125 2 82 1 126 4 377 1 241 1 38 3 212 1 243 1 213 1 184 1 381 2 244 1 129 2 131 2 
329 1 111 1 44 2 266 1 166 1 21 1 222 2 333 6 114 1 49 1 9 1 116 1 201 1 173 1 203 1 31 2 233 1 75 3 280 3 177 1 207 1 183 1 353 1 215 2 308 1 216 1 
108 1 218 1 44 1 111 11 266 1 167 1 222 1 21 2 333 14 291 1 10 1 116 2 52 1 201 2 298 1 173 4 11 3 151 2 30 1 31 4 32 2 233 11 280 6 75 8 177 2 59 1 99 1 238 3 183 1 84 1 215 2 353 2 216 2 
263 1 108 1 44 1 266 1 21 1 333 2 168 1 292 1 140 1 141 2 224 1 116 1 10 1 320 1 173 1 175 1 91 1 12 1 149 1 301 1 176 1 31 2 280 1 75 1 177 1 34 1 255 1 350 1 59 1 208 2 324 1 63 1 242 1 328 1 353 1 244 1 309 1 216 1 
329 1 133 1 44 2 287 2 333 20 47 1 291 4 140 3 292 2 49 1 141 3 9 1 10 1 201 3 203 1 12 1 149 3 301 1 151 2 94 2 255 1 59 1 208 3 60 1 306 2 63 2 352 2 353 3 215 8 217 1 216 3 108 1 218 2 111 7 266 3 166 1 222 4 21 3 168 2 114 1 224 1 319 2 116 3 320 2 173 7 175 2 176 2 31 6 32 2 233 7 280 10 75 10 177 3 34 3 324 2 183 3 242 1 328 2 244 1 
163 1 266 2 21 2 333 2 47 1 292 3 140 7 141 1 172 1 224 1 116 2 10 1 90 1 251 2 175 2 12 2 301 1 149 8 56 1 31 4 75 1 280 1 177 2 34 8 234 1 59 1 207 1 208 1 63 2 211 1 242 1 327 1 105 1 328 2 353 2 244 1 216 2 356 1 262 1 
108 1 218 1 42 1 111 1 266 1 222 1 21 1 333 3 141 1 224 1 116 1 201 1 173 1 151 1 230 1 31 2 32 1 233 1 75 1 280 2 177 1 208 1 183 1 161 1 242 1 215 1 353 1 244 1 216 1 
31 2 32 1 111 1 233 1 75 2 266 1 177 1 333 2 21 1 291 1 207 1 24 1 116 1 201 1 215 1 353 1 173 1 216 1 
218 1 31 2 111 1 233 1 280 2 266 1 177 1 222 1 333 2 21 1 207 1 183 1 116 1 27 1 215 1 353 1 173 1 216 1 
218 1 111 2 266 1 21 1 333 4 222 1 291 1 116 1 201 1 173 2 151 1 32 1 31 2 233 2 75 2 280 2 177 1 207 1 183 1 353 1 215 2 216 1 
31 2 32 1 111 1 233 1 75 2 266 1 177 1 333 2 21 1 291 1 24 1 116 1 327 1 201 1 215 1 353 1 173 1 216 1 
218 1 31 2 111 1 233 1 280 2 266 1 177 1 222 1 333 2 21 1 183 1 116 1 27 1 327 1 215 1 353 1 173 1 216 1 
218 1 111 2 266 1 21 1 333 4 222 1 291 1 116 1 201 1 173 2 151 1 32 1 31 2 233 2 75 2 280 2 177 1 183 1 327 1 353 1 215 2 216 1 
151 1 218 1 31 2 32 1 111 2 233 2 280 2 75 2 266 1 177 1 222 1 21 1 333 4 291 1 183 1 116 1 201 1 215 2 353 1 173 2 216 1 
44 1 266 1 333 2 21 1 168 1 140 1 292 1 141 1 10 1 116 1 320 1 175 1 12 1 149 1 176 1 31 2 75 1 280 1 177 1 34 1 59 1 208 1 324 1 63 1 352 1 328 1 353 1 216 1 
44 1 266 1 333 2 21 1 168 1 140 1 292 1 141 1 10 1 116 1 73 1 175 1 12 1 149 1 176 1 31 2 75 1 280 1 177 1 370 1 34 1 205 1 59 1 208 1 63 1 328 1 353 1 216 1 
108 1 218 1 111 2 266 1 21 1 333 4 222 1 291 1 116 1 201 1 173 2 151 1 32 1 31 2 233 2 75 2 280 2 177 1 183 1 353 1 215 2 216 1 
218 1 111 2 266 1 222 1 333 4 21 1 291 1 168 1 140 1 292 1 141 1 116 1 201 1 173 2 320 1 175 1 149 1 151 1 176 1 32 1 31 2 233 2 280 2 75 2 177 1 34 1 208 1 324 1 306 1 183 1 63 1 352 1 211 1 215 2 328 1 353 1 216 1 
108 1 218 1 42 1 111 1 266 1 21 1 333 3 291 1 141 1 224 1 116 1 201 1 173 1 151 1 31 2 32 1 233 1 280 1 75 2 177 1 351 1 208 1 183 1 161 1 242 1 215 1 353 1 244 1 216 1 
329 1 333 41 46 1 291 4 49 1 9 1 297 1 201 5 52 3 11 4 203 1 343 1 151 4 346 4 57 1 302 1 99 1 210 1 257 1 102 1 215 8 353 3 216 3 218 4 166 1 21 3 222 4 114 1 268 2 118 1 32 4 31 6 323 1 75 20 280 21 177 3 374 1 282 1 238 3 183 5 124 1 285 1 380 1 
329 1 218 3 166 1 222 4 21 4 46 1 333 38 291 3 114 1 49 1 268 2 9 1 297 1 52 3 201 5 11 4 118 1 203 1 343 1 346 4 151 4 57 1 323 1 31 8 32 4 302 1 280 18 75 20 177 4 282 2 374 1 99 1 238 3 210 1 124 1 183 4 257 1 102 1 285 1 380 1 353 4 215 7 216 4 
329 1 218 7 166 1 222 7 21 2 46 1 333 52 291 7 114 1 49 1 268 1 9 1 297 1 52 2 201 8 11 4 203 1 343 1 346 4 151 7 57 1 323 1 31 4 32 7 302 1 280 25 75 27 177 2 282 1 374 1 99 2 238 4 210 1 124 1 183 8 257 1 102 1 84 2 380 1 353 2 215 14 216 2 
218 3 222 3 21 2 46 1 333 19 291 3 268 1 297 2 52 1 201 3 11 2 118 1 343 1 346 2 151 3 31 4 32 3 280 10 75 9 177 2 99 1 238 1 210 1 124 1 183 3 83 1 380 1 353 2 215 6 216 2 
218 2 222 2 21 3 46 1 333 26 291 2 268 2 297 1 52 2 201 3 11 2 343 1 346 4 151 3 57 1 31 6 323 1 32 3 280 12 75 14 302 1 177 3 282 2 374 1 238 2 210 1 183 2 124 2 257 1 102 1 380 1 215 4 353 3 216 3 
345 1 1 1 160 1 144 1 260 1 15 1 228 1 97 1 162 1 318 1 
13 1 274 1 
337 1 345 1 160 1 144 1 228 1 97 1 156 1 106 1 318 1 
65 1 345 1 15 1 247 1 97 1 318 1 160 1 81 2 37 1 38 1 126 1 144 1 338 1 260 1 145 1 228 1 29 1 162 1 
65 1 345 1 15 1 247 1 97 1 318 1 160 1 81 2 37 1 38 1 126 1 144 1 338 1 260 1 145 1 228 1 29 1 162 1 
65 1 345 1 15 1 247 1 97 1 318 1 160 1 81 2 37 1 38 1 126 1 144 1 338 1 260 1 145 1 228 1 29 1 162 1 
62 1 103 1 96 1 
62 1 103 1 96 1 
53 1 317 1 
62 1 53 1 317 1 
185 1 35 1 
219 1 44 1 318 1 141 2 224 2 8 1 144 1 199 1 274 1 338 1 228 1 340 1 29 1 345 1 13 1 348 1 97 1 35 1 208 2 160 1 37 1 81 1 126 1 242 2 244 2 185 1 64 1 
103 1 96 1 
62 1 53 1 317 1 
108 1 67 1 265 1 266 1 21 1 333 2 292 1 140 2 141 2 116 1 10 1 72 1 251 2 175 1 149 2 31 2 368 1 75 1 280 1 177 1 34 2 59 1 208 2 180 1 63 1 328 1 105 1 353 1 244 2 216 1 356 1 
311 1 86 1 85 1 154 1 165 1 360 1 267 1 34 2 113 1 88 1 47 1 140 2 270 1 63 1 211 1 328 1 300 1 276 2 149 2 
311 1 85 1 154 1 360 1 267 1 34 1 113 1 88 1 47 1 140 1 169 1 270 1 63 1 328 1 300 1 276 2 149 1 
165 1 34 1 313 1 292 1 140 1 270 1 63 1 128 1 90 1 328 1 175 1 12 1 149 1 262 1 
311 1 86 1 85 1 154 1 165 1 360 1 267 1 34 1 113 1 88 1 47 1 140 1 270 1 63 1 328 1 300 1 276 2 149 1 
264 1 
179 1 223 1 307 1 38 1 117 1 308 1 256 1 
336 1 296 1 338 1 117 1 278 1 253 1 14 1 281 1 369 1 256 1 179 1 38 2 126 1 354 1 213 1 381 1 131 1 
330 2 43 1 4 1 287 1 289 3 292 4 140 1 336 2 296 2 338 2 201 1 341 1 12 1 149 1 151 1 155 1 253 3 14 2 305 3 101 1 63 1 213 2 355 1 357 1 218 1 168 1 314 1 117 4 175 1 32 1 281 2 34 1 77 1 179 3 183 1 241 1 126 2 38 3 328 2 381 1 39 1 130 1 131 6 
41 1 218 2 289 5 314 2 336 2 143 1 296 1 338 1 52 1 201 2 117 8 341 1 11 1 92 1 151 2 253 3 323 1 32 2 14 2 302 1 281 2 374 1 256 2 305 5 238 1 179 5 183 2 257 1 378 1 102 1 126 1 38 5 213 2 381 1 131 6 
329 1 42 1 166 1 314 2 141 1 49 1 336 1 249 1 224 1 362 1 295 1 143 1 338 1 201 2 117 2 232 1 14 1 119 1 281 1 208 1 237 1 61 1 179 2 183 1 126 1 242 1 213 1 244 1 
14 1 281 1 256 1 336 1 223 1 179 1 307 1 38 1 213 1 117 1 
151 2 218 2 32 2 253 5 287 1 289 5 314 2 305 5 179 5 183 2 143 1 38 5 201 2 117 5 131 10 
296 1 38 1 126 1 338 1 381 1 256 1 
109 1 135 2 292 1 140 4 336 1 296 4 90 1 363 1 338 3 117 2 341 2 175 1 277 1 12 2 149 4 92 2 33 1 14 2 281 2 34 4 36 1 100 1 179 2 63 1 126 3 328 1 213 2 381 2 262 1 
42 2 44 1 266 1 333 1 21 1 168 1 140 1 292 1 141 3 224 2 295 1 116 1 320 1 175 1 12 1 149 1 176 1 31 2 280 1 177 1 34 1 59 1 208 3 324 1 63 1 352 1 379 1 242 2 353 1 328 1 244 2 216 1 
253 2 14 1 281 1 289 2 256 2 305 2 336 1 179 2 38 4 213 1 117 1 341 1 203 1 131 4 92 1 
144 1 228 1 304 1 
144 1 228 1 304 1 
144 1 228 1 35 1 284 1 162 1 
144 1 228 1 304 1 
144 1 20 1 228 1 
144 1 20 1 228 1 
144 1 20 1 228 1 
144 1 228 1 
97 1 318 1 
329 1 166 1 333 8 21 1 46 1 222 2 114 1 49 1 9 1 201 1 52 1 11 1 203 1 31 2 280 4 75 4 177 1 374 1 238 1 183 1 353 1 215 2 216 1 
329 1 166 1 222 2 333 11 46 1 21 2 291 1 114 1 49 1 9 1 52 1 201 2 11 2 203 1 151 1 31 4 32 1 280 5 75 6 177 2 374 1 99 1 238 1 183 1 353 2 215 3 216 2 310 1 
329 1 218 2 166 1 333 19 21 3 46 1 222 3 291 1 114 1 49 1 9 1 52 1 201 3 11 1 203 1 151 2 31 6 323 1 32 2 280 10 75 9 302 1 177 3 374 1 282 1 238 1 183 3 257 1 102 1 353 3 215 4 216 3 310 1 
329 1 218 1 166 1 333 17 21 3 46 1 222 3 291 2 114 1 49 1 9 1 52 1 201 3 11 1 203 1 151 2 31 6 323 1 32 2 280 7 75 10 302 1 177 3 282 1 374 1 238 1 183 2 257 1 102 1 353 3 215 5 216 3 310 1 
329 1 166 1 333 8 21 1 46 1 222 2 114 1 49 1 9 1 201 1 52 1 11 1 203 1 31 2 280 4 75 4 177 1 374 1 238 1 183 1 353 1 215 2 216 1 
218 2 333 12 21 1 46 1 222 1 291 1 52 1 201 2 11 1 151 2 31 2 323 1 32 2 280 6 75 6 302 1 177 1 374 1 238 1 183 2 257 1 102 1 353 1 215 2 216 1 
329 1 218 1 166 1 333 18 21 4 46 1 222 3 291 2 114 1 49 1 9 1 52 1 201 3 11 1 203 1 151 2 31 8 323 1 32 2 280 8 75 10 302 1 177 4 374 1 282 2 238 1 183 2 257 1 102 1 353 4 215 5 216 4 310 1 
218 2 333 16 46 1 21 4 222 3 291 3 52 1 201 3 11 1 118 1 151 3 31 8 323 1 32 3 280 7 75 9 302 1 177 4 374 1 282 2 238 1 183 2 257 1 102 1 353 4 215 6 216 4 
329 3 280 4 75 3 166 1 333 7 222 3 291 3 114 2 49 3 183 1 9 1 201 1 215 6 
329 1 218 1 166 1 333 18 46 1 21 4 222 3 291 1 114 1 49 1 9 1 52 1 201 3 11 1 203 1 118 1 151 2 31 8 323 1 32 2 280 8 75 10 302 1 177 4 374 1 282 2 238 1 183 2 257 1 102 1 353 4 215 4 216 4 
329 1 31 4 280 4 75 4 177 2 166 1 333 8 222 2 21 2 282 1 291 1 114 1 49 1 183 1 9 1 201 1 215 3 353 2 216 2 203 1 
329 1 280 3 75 3 166 1 222 2 333 6 114 1 49 1 183 1 9 1 201 1 215 2 308 1 203 1 
151 1 218 1 31 2 32 1 280 2 75 2 177 1 222 1 21 1 333 4 291 1 183 1 201 1 215 2 353 1 216 1 310 1 
151 1 218 1 32 1 280 4 75 3 222 1 333 7 291 1 99 1 238 1 183 1 52 1 201 1 215 2 11 2 
329 2 218 2 166 1 288 1 333 23 222 5 21 2 291 4 114 1 49 2 9 1 201 3 11 2 203 1 151 2 30 1 32 2 31 4 75 11 280 12 177 2 282 2 99 1 238 2 183 3 84 1 215 9 353 2 216 2 
280 1 333 1 11 1 
238 1 75 1 333 1 
151 1 218 1 31 2 32 1 280 3 75 3 177 1 287 1 21 1 333 6 222 2 291 1 183 1 201 1 353 1 215 3 216 1 310 1 
218 2 333 12 21 1 46 1 222 1 291 1 52 1 201 2 11 1 151 2 31 2 323 1 32 2 280 6 75 6 302 1 177 1 374 1 238 1 183 2 257 1 102 1 353 1 215 2 216 1 
329 1 75 3 280 3 166 1 333 6 222 1 291 1 49 1 183 1 201 1 215 2 
329 1 31 2 75 1 280 2 177 1 288 1 222 1 333 3 282 1 21 1 291 1 114 1 49 1 9 1 215 2 353 1 216 1 
329 2 31 2 75 5 280 5 177 1 119 1 166 1 21 1 46 1 222 3 333 10 291 2 49 2 183 2 201 2 353 1 215 5 216 1 
31 2 32 1 75 2 177 1 46 1 21 1 333 2 291 1 201 1 353 1 215 1 216 1 
151 1 218 1 31 2 32 1 280 2 75 2 177 1 222 1 46 1 21 1 333 4 291 1 183 1 201 1 215 2 353 1 216 1 
329 1 31 6 280 2 75 1 177 3 288 1 282 1 333 3 46 1 21 3 222 1 291 1 49 1 353 3 215 2 216 3 118 1 
329 3 110 1 218 3 3 1 166 2 288 1 21 5 46 1 333 34 222 7 291 5 114 1 49 3 9 1 52 1 201 5 11 4 203 1 118 1 151 3 31 10 32 3 280 18 75 16 177 5 349 1 282 2 99 1 238 3 183 5 353 5 215 12 216 5 310 1 
141 1 347 1 44 1 377 1 244 1 193 1 208 1 
279 1 347 1 44 1 332 1 157 1 193 1 208 1 141 1 142 1 377 1 258 1 244 1 
63 1 90 1 34 1 328 1 308 1 292 1 175 1 140 1 12 1 262 1 149 1 
176 1 44 1 34 1 168 1 292 1 140 1 208 2 141 2 324 1 224 1 63 1 242 1 328 1 244 1 175 1 12 1 301 1 149 1 
44 1 135 1 168 2 140 1 292 3 141 2 170 1 224 1 362 1 202 1 28 1 175 2 149 1 301 1 176 1 34 1 208 2 324 1 63 1 212 1 242 2 328 1 244 2 
44 1 135 1 331 1 168 2 140 2 292 3 141 2 170 1 224 1 362 1 202 1 28 1 175 2 149 2 301 1 176 1 34 2 205 1 208 2 63 1 212 1 242 2 328 1 244 2 
42 1 330 1 135 1 168 1 292 4 140 1 141 1 249 1 6 1 170 1 224 1 362 1 295 1 272 1 296 1 338 2 28 1 175 1 149 1 232 1 34 1 256 1 208 1 61 1 63 1 126 2 241 1 38 1 242 1 355 1 328 1 244 1 
42 1 330 1 135 1 168 1 292 4 140 1 141 1 249 1 170 1 224 1 362 1 295 1 296 1 338 2 28 1 175 1 149 1 232 1 34 1 256 1 208 1 61 1 63 1 126 2 241 1 38 1 242 1 355 1 328 1 244 1 357 1 
63 1 34 1 328 1 234 1 140 1 149 1 
56 1 0 1 155 1 163 1 58 1 34 7 234 1 47 1 168 1 140 6 292 3 172 1 63 2 211 1 105 1 328 3 251 1 174 1 175 2 12 2 149 7 
329 1 44 2 333 6 140 1 292 1 141 2 49 1 9 1 201 1 203 1 149 1 301 1 208 2 306 1 63 1 352 1 211 1 353 2 215 2 216 2 108 1 67 1 111 1 266 2 166 1 21 2 222 2 168 1 114 1 224 1 319 1 116 2 173 1 320 1 175 1 176 1 31 4 233 1 75 3 280 3 177 2 34 1 324 1 183 1 242 1 328 1 244 1 
329 1 330 1 42 1 43 1 4 1 292 2 140 1 336 2 49 1 141 1 249 1 295 1 143 1 296 2 8 1 338 3 201 2 12 1 149 1 14 2 256 2 208 1 61 1 307 1 355 1 213 2 357 1 166 1 314 2 223 1 224 1 362 1 117 4 232 1 33 1 281 2 119 1 34 1 77 1 179 5 183 2 241 1 126 3 38 2 242 1 381 1 244 1 
155 1 34 2 234 1 168 1 140 2 292 2 63 1 211 1 355 1 328 2 130 1 175 1 149 2 
331 1 34 4 121 1 140 4 292 1 63 1 211 1 90 1 328 1 175 1 12 1 149 4 262 1 
0 1 135 1 34 2 168 1 140 2 292 1 63 1 328 2 174 1 217 1 175 1 204 1 149 2 252 1 
85 1 63 1 34 1 328 1 113 1 300 1 140 1 276 1 12 1 149 1 
34 2 47 1 140 2 292 1 63 1 211 1 72 1 105 1 328 1 175 1 149 2 
56 1 135 1 34 5 121 1 140 4 292 3 172 1 63 2 211 1 90 1 105 1 328 2 175 2 12 1 262 1 149 5 
56 1 135 1 34 5 121 1 140 4 292 3 316 1 63 2 211 1 90 1 105 1 328 2 175 2 12 1 262 1 149 5 
176 1 44 1 34 1 205 1 168 1 292 1 140 1 208 2 141 2 224 1 63 1 242 1 328 1 244 1 175 1 12 1 301 1 149 1 
0 1 155 1 135 1 58 1 34 1 168 1 140 1 292 1 63 1 328 2 174 1 175 1 149 1 
265 1 368 1 208 1 141 1 180 1 182 1 244 1 229 1 344 1 
152 1 235 1 229 1 
182 1 44 1 158 1 229 1 344 1 
42 1 141 1 249 1 224 1 295 1 362 2 8 1 338 2 202 1 229 1 150 1 344 1 152 1 367 1 232 1 235 1 256 1 158 1 208 1 61 1 182 1 126 2 241 1 38 1 212 1 242 1 184 1 244 1 
93 1 70 1 308 1 147 1 
93 1 70 1 74 1 146 1 245 1 147 1 55 1 
226 1 137 1 55 1 
231 1 93 1 68 2 122 1 159 1 50 1 70 1 74 1 245 1 146 3 147 1 55 3 
294 1 93 1 70 1 5 1 74 1 146 2 245 1 147 1 55 2 
360 1 50 1 271 1 196 1 74 1 245 1 146 1 300 1 147 1 276 1 55 1 
93 1 50 1 74 1 146 1 245 1 147 1 55 1 
93 2 70 1 50 1 74 1 146 1 245 1 55 1 
93 1 48 1 22 1 50 1 51 1 74 2 245 2 146 2 147 1 55 2 
93 1 5 2 139 1 293 1 70 1 50 1 196 1 198 1 74 1 245 1 146 3 147 2 55 3 
311 1 93 1 360 1 372 1 5 1 113 1 70 1 50 1 74 1 245 1 146 2 300 1 147 1 276 2 55 2 
93 1 5 2 139 1 89 1 294 1 70 1 50 1 196 1 74 2 245 2 146 4 147 2 55 4 
93 1 70 1 50 1 74 1 146 1 245 1 147 1 55 1 
93 2 68 1 5 2 139 1 122 1 159 1 70 2 196 1 74 1 146 4 245 1 54 1 147 3 55 4 
93 1 312 1 5 1 283 1 50 1 70 1 74 1 365 1 245 1 146 2 147 1 55 2 
159 1 93 1 70 1 50 1 68 2 371 1 74 1 122 2 146 3 245 1 147 1 55 3 
326 1 192 2 321 1 147 2 
50 1 74 1 322 1 146 1 245 1 55 1 
93 1 70 1 50 1 198 1 5 1 74 1 146 2 245 1 147 1 55 2 
45 1 
93 1 70 1 50 1 74 1 146 1 245 1 147 1 55 1 
93 1 70 1 50 1 198 1 68 1 5 1 74 1 146 3 245 1 147 1 55 3 
196 1 139 1 54 1 147 1 
93 1 147 1 

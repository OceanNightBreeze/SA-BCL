#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isClosed()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
111 1 355 1 188 1 35 1 118 5 87 3 334 6 147 2 305 2 335 2 336 1 242 1 172 9 45 1 199 4 244 1 16 2 369 2 292 2 152 1 177 2 153 1 99 1 77 1 207 1 142 9 349 1 353 1 
111 1 355 1 188 1 35 1 118 5 87 3 334 6 147 2 305 2 335 2 336 1 242 1 172 9 45 1 199 4 244 1 16 2 369 2 292 2 152 1 177 2 153 1 99 1 77 1 207 1 142 9 349 1 353 1 
111 1 355 1 188 1 35 1 118 6 87 4 334 7 147 2 305 2 335 2 336 1 242 1 172 10 45 1 199 5 244 1 16 2 369 2 292 2 152 1 177 2 153 1 99 1 77 1 207 1 142 10 349 1 353 1 
111 1 355 1 188 1 35 1 118 4 87 2 334 4 147 1 305 2 335 2 336 1 242 1 172 7 45 1 199 3 244 1 16 2 369 2 292 2 152 1 177 2 153 1 99 1 77 1 142 7 349 1 353 1 
199 2 244 1 369 1 292 1 152 1 177 1 188 1 118 3 87 1 334 3 147 2 335 1 305 1 207 1 142 4 242 1 45 1 172 4 
244 1 16 1 369 1 152 1 177 1 35 1 118 1 77 1 305 1 335 1 64 1 122 1 142 2 45 1 172 2 350 1 
199 1 244 1 16 1 369 2 152 1 177 2 99 1 118 2 87 1 334 1 142 3 45 1 172 3 
355 1 188 1 118 5 87 3 334 7 147 2 305 1 335 1 242 1 172 9 45 1 199 4 244 1 16 1 287 1 369 2 292 1 152 1 177 2 154 1 99 1 142 9 207 1 353 1 
355 1 188 1 118 5 87 3 334 7 147 2 305 1 335 1 242 1 172 9 45 1 199 4 244 1 16 1 287 1 369 2 292 1 152 1 177 2 154 1 99 1 142 9 207 1 353 1 
270 1 258 1 20 1 
57 2 270 1 63 1 
86 1 286 2 231 2 322 2 168 2 148 2 191 1 237 2 
231 3 275 1 356 2 191 1 116 1 237 2 6 1 213 1 86 1 319 1 120 1 192 1 322 3 168 2 148 2 169 1 10 1 338 1 285 1 286 2 340 1 175 2 68 1 222 1 370 1 74 1 130 2 75 1 225 1 22 2 251 1 252 1 28 1 377 1 141 1 378 2 106 1 
86 1 286 1 231 1 309 1 9 1 322 1 168 1 148 1 323 1 237 1 
286 1 210 1 231 1 288 1 5 1 20 1 236 1 346 1 270 1 138 1 253 1 322 1 89 1 323 1 
286 1 210 2 231 1 288 1 5 1 20 1 236 1 237 1 270 1 253 2 148 1 168 1 322 1 89 1 323 1 
318 1 210 1 182 1 253 1 95 1 
149 1 210 2 182 1 270 1 253 2 95 1 230 1 20 1 
210 1 182 1 253 1 
286 1 210 1 339 1 231 1 309 1 95 1 237 1 86 1 9 1 253 1 148 1 168 1 322 1 323 1 
270 1 
149 1 210 2 182 1 270 1 253 2 95 1 20 1 324 1 
209 2 149 1 210 5 162 1 112 1 95 2 221 1 72 1 20 1 294 1 361 1 132 2 183 1 182 2 270 1 253 5 282 2 337 1 171 1 
258 1 191 1 
286 1 1 1 340 1 231 2 356 1 74 1 75 1 116 1 237 1 281 1 319 1 22 1 192 1 251 1 252 1 168 1 322 2 65 1 106 1 378 1 
286 2 231 2 237 1 191 2 181 1 157 1 322 2 148 1 168 1 
126 1 281 1 359 1 
340 1 231 1 356 1 74 1 75 1 191 1 116 1 21 1 22 1 319 1 251 1 192 1 252 1 322 1 378 1 106 1 
286 3 231 3 148 1 322 3 168 3 65 1 191 1 237 3 
286 1 231 1 309 1 322 1 168 1 323 1 237 1 
181 1 286 1 157 1 231 1 322 1 168 1 148 1 323 1 237 1 
1 1 210 1 231 4 275 1 356 1 5 1 236 1 191 1 116 1 278 1 237 3 213 1 86 1 319 1 120 1 192 1 89 1 148 2 322 4 168 3 65 1 10 1 323 1 338 1 285 1 286 3 340 1 175 2 68 1 288 1 222 1 370 1 74 1 130 1 75 1 181 1 22 1 103 1 251 1 252 1 253 1 141 1 106 1 378 1 
286 2 308 1 231 2 138 1 322 2 168 1 65 1 191 1 237 1 
286 3 210 1 1 1 231 3 288 1 5 1 236 1 237 3 278 1 181 1 320 1 270 1 253 1 148 1 168 3 322 3 89 1 65 2 323 1 
126 1 286 2 231 2 237 2 181 1 281 1 148 1 168 2 322 2 65 1 
340 1 231 1 356 1 74 1 75 1 191 1 116 1 22 1 319 1 251 1 192 1 252 1 322 1 378 1 106 1 
231 1 356 1 74 1 115 1 75 1 191 1 116 1 304 1 22 1 319 1 251 1 252 1 322 1 378 1 106 1 
161 1 255 1 332 1 359 2 238 1 6 2 213 1 281 2 120 1 121 1 126 2 285 1 175 2 68 1 222 1 370 1 372 1 48 1 130 4 374 1 343 1 326 1 26 1 141 2 
155 1 286 1 231 1 322 1 168 1 323 1 236 1 237 1 
286 5 308 1 1 1 231 5 165 1 237 4 191 1 180 1 181 1 138 1 168 4 322 5 148 1 65 2 
155 1 286 2 231 2 309 1 322 2 168 2 323 1 237 2 
160 1 31 1 
160 1 31 1 
37 1 256 1 
37 1 256 1 
37 1 256 1 
276 1 160 1 31 1 
276 1 160 1 31 1 
298 1 160 1 31 1 
37 1 256 1 160 2 31 2 375 1 249 1 
276 1 160 1 31 1 
2 1 160 1 31 1 
2 1 160 1 31 1 
2 1 160 1 31 1 
210 2 173 1 234 1 73 1 301 1 373 2 212 2 375 1 119 2 134 1 270 1 253 2 327 1 273 2 123 1 160 2 380 2 31 2 80 3 
210 1 231 2 212 1 191 1 237 2 119 1 168 2 322 2 241 1 286 2 73 1 129 1 202 1 373 1 98 1 50 1 250 1 298 1 253 1 29 1 380 1 160 1 80 1 31 1 
335 1 305 1 292 1 
335 1 305 1 122 1 
280 1 143 1 229 1 305 3 292 2 122 1 
280 1 229 1 305 2 292 1 239 1 122 1 
280 1 229 2 305 2 292 1 122 1 
209 1 161 1 210 5 0 1 57 3 3 1 112 1 114 2 39 1 121 1 63 1 282 1 12 1 149 1 95 4 341 2 221 3 311 1 129 1 294 2 20 1 374 1 343 1 50 1 297 1 132 1 250 1 182 1 158 2 270 2 253 5 379 1 
209 2 161 3 162 1 210 9 0 2 57 9 3 3 112 1 145 1 318 5 194 1 121 3 63 3 282 2 149 1 47 1 95 7 341 6 221 8 129 4 311 2 342 1 294 6 20 1 374 3 343 3 132 2 182 6 24 5 271 1 158 6 270 5 253 9 79 1 379 1 
209 1 161 1 210 3 162 1 0 1 57 4 3 1 114 1 39 1 121 1 63 2 282 1 12 1 95 2 221 3 341 2 311 1 129 1 20 1 294 2 343 1 374 1 132 1 270 3 158 2 253 3 
209 1 161 2 210 4 162 1 0 1 57 7 3 2 114 2 194 1 39 1 121 2 63 3 282 1 12 1 47 1 95 3 341 4 221 5 311 1 129 2 342 1 20 1 294 4 343 2 374 2 132 1 270 4 158 4 253 4 
258 1 75 1 363 1 
75 1 179 1 
367 1 
74 1 75 1 
108 1 74 1 75 3 131 1 116 1 363 2 
74 1 75 1 116 1 
218 1 75 1 
94 1 15 1 255 3 84 1 151 1 189 1 130 7 374 1 277 1 6 4 227 1 206 1 121 1 26 2 27 2 141 3 243 1 
94 1 15 1 255 3 84 1 151 1 189 1 130 7 374 1 277 1 6 4 227 1 206 1 121 1 26 2 27 2 141 3 243 1 
94 1 15 1 255 3 84 1 151 1 371 1 189 1 130 7 374 1 277 1 6 4 227 1 206 1 121 1 26 2 27 2 141 3 243 1 
161 3 314 1 255 10 84 1 3 3 189 2 277 2 279 1 6 16 120 1 121 4 42 3 197 1 243 1 285 1 15 2 94 5 175 2 174 1 68 1 151 2 222 1 130 31 343 3 374 4 344 1 227 1 206 1 348 1 25 4 139 1 26 5 27 3 141 15 
255 4 84 1 189 1 277 1 6 5 120 2 121 1 243 1 285 2 15 1 94 1 17 1 175 4 68 2 222 2 151 1 130 9 374 1 344 1 135 1 206 1 26 3 27 2 141 4 
143 1 257 1 356 1 118 1 334 1 335 1 305 2 41 1 122 1 170 1 172 2 45 1 244 1 16 1 369 1 292 1 152 1 177 1 178 1 267 1 22 1 102 1 347 1 252 1 378 1 142 2 106 1 254 1 187 1 55 1 
143 1 356 1 211 1 358 1 118 1 334 2 335 1 305 2 41 1 122 1 170 1 172 3 244 1 16 1 369 1 292 1 152 1 177 1 178 1 267 1 22 1 102 1 347 1 184 1 252 1 378 1 142 3 106 1 254 1 55 1 
143 1 356 1 211 1 118 1 334 2 305 2 335 1 41 1 122 1 170 1 172 2 244 1 16 1 292 1 152 1 178 1 267 1 22 1 347 1 184 1 252 1 378 1 142 2 106 1 254 1 
356 1 358 1 366 1 170 2 172 1 263 1 219 1 16 2 67 1 369 1 177 1 178 2 246 1 74 1 75 1 22 1 347 2 251 1 252 1 378 1 142 1 106 1 351 1 
143 1 356 1 211 1 335 1 305 2 41 1 122 1 170 1 172 1 45 1 16 1 369 1 292 1 177 1 178 1 267 1 22 1 102 1 347 1 252 1 378 1 142 1 106 1 254 1 187 1 55 1 
97 1 
209 1 0 1 210 5 57 2 112 1 5 1 61 2 166 2 63 2 13 1 67 1 18 1 69 1 221 2 71 4 74 1 20 1 224 1 75 1 23 2 132 1 22 2 346 1 182 6 270 2 138 1 30 2 231 1 356 2 236 1 88 2 366 1 321 1 322 1 89 1 40 2 282 1 323 1 368 2 286 1 149 3 288 1 291 1 325 1 294 2 248 1 100 1 251 2 253 5 252 1 328 1 378 2 106 1 53 1 329 1 
286 1 149 1 210 3 231 1 288 1 71 2 5 1 236 1 248 1 100 1 23 1 346 1 182 2 253 3 138 1 322 1 89 1 323 1 328 1 324 1 13 1 329 1 
286 1 149 1 210 3 231 1 288 1 71 3 5 1 20 1 236 1 248 1 100 1 346 1 182 1 270 1 253 3 138 1 322 1 89 1 323 1 328 1 324 1 30 1 13 1 329 1 
210 3 231 1 5 1 236 1 88 1 89 1 322 1 323 1 324 1 13 1 286 1 149 1 288 1 71 3 248 1 20 1 100 1 23 1 346 1 182 2 270 1 138 1 253 3 328 1 30 1 329 1 
209 1 210 3 112 1 5 1 9 1 168 1 13 1 339 1 309 1 71 2 221 1 312 1 224 1 20 1 23 2 132 1 346 1 182 3 270 1 138 1 352 1 231 2 236 1 237 1 86 1 88 2 89 1 322 2 148 1 323 2 282 1 324 1 286 2 149 1 288 1 248 1 294 1 100 1 376 1 253 3 104 1 328 1 329 1 
209 1 210 4 57 2 231 1 112 1 5 1 236 1 61 2 166 2 88 2 322 1 89 1 63 2 40 2 282 1 323 1 13 1 368 2 286 1 149 2 288 1 291 1 221 1 71 4 325 1 20 1 294 1 248 1 224 1 100 1 23 2 132 1 346 1 182 4 270 2 253 4 138 1 328 1 30 2 329 1 
209 1 210 2 231 2 112 1 5 1 236 1 237 1 86 1 9 1 168 1 148 1 89 1 322 2 323 2 282 1 13 1 286 2 339 1 309 1 288 1 221 1 71 2 20 1 294 1 224 1 248 1 100 1 132 1 346 1 376 1 270 1 138 1 253 2 104 1 328 1 329 1 
209 1 210 2 231 2 112 1 5 1 236 1 237 1 86 1 9 1 168 1 148 1 89 1 322 2 323 2 282 1 13 1 286 2 339 1 309 1 288 1 221 1 71 2 20 1 294 1 224 1 248 1 100 1 132 1 346 1 376 1 270 1 138 1 253 2 104 1 328 1 329 1 
209 1 210 4 57 2 231 1 112 1 5 1 236 1 303 1 166 2 88 2 89 1 322 1 323 1 282 1 43 1 66 2 264 1 13 1 368 2 286 1 307 1 149 2 288 1 291 1 221 1 71 4 20 1 294 1 248 1 100 1 23 2 132 1 346 1 182 4 270 1 52 2 138 1 253 4 328 1 30 2 329 1 
209 1 210 2 112 1 5 1 9 1 168 1 13 1 339 1 309 1 71 3 221 1 224 1 20 1 23 1 132 1 346 1 182 1 270 1 138 1 30 1 352 1 231 2 236 1 237 1 86 1 88 1 322 2 89 1 148 1 323 2 282 1 286 2 288 1 248 1 294 1 100 1 376 1 253 2 104 1 328 1 329 1 
209 1 210 2 112 1 5 1 9 1 168 1 13 1 339 1 309 1 71 3 221 1 224 1 20 1 23 1 132 1 346 1 182 1 270 1 138 1 30 1 352 1 231 2 236 1 237 1 86 1 88 1 322 2 89 1 148 1 323 2 282 1 286 2 288 1 248 1 294 1 100 1 376 1 253 2 104 1 328 1 329 1 
209 1 210 4 57 2 231 1 112 1 5 1 236 1 166 2 88 2 322 1 89 1 282 1 323 1 43 1 66 2 13 1 368 2 286 1 149 2 288 1 291 1 221 1 71 4 325 1 20 1 294 1 248 1 100 1 23 2 132 1 346 1 182 4 270 1 52 2 253 4 138 1 328 1 30 2 329 1 
255 2 84 1 258 1 359 1 277 1 191 2 281 1 213 1 6 3 120 1 121 1 243 1 126 1 285 1 175 2 68 1 151 1 222 1 370 1 48 1 130 6 374 1 206 1 26 2 27 1 141 3 
161 1 314 1 255 2 109 1 3 2 359 11 191 1 213 1 281 11 6 8 120 2 195 1 121 1 42 3 338 1 126 4 94 1 285 2 175 4 174 1 68 2 176 1 222 2 370 2 295 1 130 14 343 2 374 2 204 1 25 3 26 1 28 1 141 6 
1 1 231 2 356 1 191 1 116 1 237 1 213 1 6 1 319 1 120 1 192 1 322 2 168 1 65 1 338 1 92 1 126 1 286 1 285 1 340 1 175 2 150 1 68 1 201 1 222 1 370 1 74 1 130 2 75 1 21 1 22 1 204 1 251 1 252 1 28 1 106 1 378 1 141 1 
161 2 1 1 255 8 3 2 211 1 116 2 213 3 6 10 120 3 167 1 168 1 121 3 65 1 10 2 338 1 126 7 340 2 175 6 68 3 222 3 266 2 74 2 130 20 75 2 343 2 22 3 26 4 27 1 28 1 141 10 84 1 231 3 82 2 356 3 359 7 191 2 277 1 237 1 281 7 319 2 192 2 322 3 91 1 243 1 285 3 286 1 94 4 245 2 151 1 370 3 49 1 374 3 204 1 101 2 251 1 206 1 252 2 378 3 106 2 
231 1 257 1 356 8 211 1 34 1 237 1 213 2 6 1 120 2 366 1 322 1 168 1 65 1 283 1 338 1 286 1 285 2 175 4 67 1 68 2 222 2 70 1 370 2 247 1 74 2 48 1 130 2 75 3 22 7 156 1 251 2 252 2 140 1 105 1 28 1 377 2 106 2 378 8 141 1 
161 1 255 1 231 1 3 1 359 1 237 1 281 1 213 1 6 1 120 1 168 1 148 1 322 1 121 1 126 1 285 1 286 1 175 2 68 1 222 1 370 1 19 1 130 3 343 1 374 1 181 1 204 1 26 1 141 2 
126 1 94 1 285 1 255 1 175 2 68 1 222 1 370 1 130 2 48 1 359 1 343 1 374 1 281 1 213 1 6 2 120 1 326 1 
126 1 285 1 161 1 255 1 175 2 68 1 222 1 370 1 130 2 48 1 359 1 238 1 281 1 213 1 120 1 26 1 121 1 141 2 
161 1 255 2 3 1 359 2 6 2 213 1 281 2 120 1 121 1 126 2 285 1 94 1 175 2 68 1 222 1 370 1 48 1 130 4 374 1 343 1 26 1 141 2 
126 1 94 1 285 1 255 1 175 2 68 1 70 1 222 1 370 1 130 2 359 1 343 1 374 1 281 1 213 1 6 2 120 1 326 1 
126 1 285 1 161 1 255 1 175 2 68 1 70 1 222 1 370 1 130 2 359 1 238 1 281 1 213 1 120 1 26 1 121 1 141 2 
161 1 255 2 3 1 359 2 6 2 213 1 281 2 120 1 121 1 126 2 285 1 94 1 175 2 68 1 222 1 70 1 370 1 130 4 374 1 343 1 26 1 141 2 
126 2 161 1 94 1 285 1 255 2 175 2 68 1 3 1 222 1 370 1 130 4 359 2 343 1 374 1 281 2 213 1 6 2 120 1 26 1 121 1 141 2 
231 1 356 1 191 1 116 1 6 1 213 1 319 1 120 1 192 1 322 1 10 1 338 1 285 1 340 1 175 2 68 1 222 1 370 1 74 1 130 2 75 1 22 1 251 1 252 1 28 1 106 1 378 1 141 1 
354 1 231 1 356 1 115 1 191 1 116 1 6 1 304 1 213 1 319 1 120 1 322 1 338 1 285 1 175 2 68 1 222 1 370 1 74 1 130 2 75 1 22 1 251 1 252 1 28 1 106 1 378 1 141 1 
161 1 255 2 3 1 359 2 6 2 213 1 281 2 120 1 121 1 126 2 285 1 94 1 175 2 68 1 222 1 370 1 130 4 374 1 343 1 204 1 26 1 141 2 
161 1 255 2 82 1 231 1 3 1 257 1 356 1 359 2 116 1 281 2 6 2 213 1 319 1 120 1 192 1 322 1 121 1 10 1 126 2 94 1 285 1 340 1 175 2 68 1 222 1 370 1 74 1 130 4 374 1 343 1 75 1 22 1 252 1 26 1 141 2 106 1 378 1 
161 1 255 1 231 1 3 1 359 1 237 1 213 1 6 2 281 1 120 1 168 1 148 1 322 1 121 1 126 1 94 1 285 1 286 1 175 2 68 1 222 1 370 1 130 3 343 1 374 1 226 1 181 1 204 1 141 1 
161 3 314 1 255 6 163 1 3 3 233 1 36 1 6 9 120 2 121 3 42 1 217 1 285 2 94 3 175 4 174 1 68 2 127 1 222 2 130 19 296 2 343 3 374 3 133 2 228 1 136 1 135 1 25 2 26 3 141 10 
56 1 161 2 255 4 314 2 300 1 163 1 3 3 60 1 36 1 6 14 120 3 121 2 42 2 217 1 198 1 306 1 94 2 285 3 175 6 68 3 127 2 222 3 130 26 296 4 343 3 374 3 344 2 133 1 136 2 135 1 25 2 26 2 141 12 208 1 
56 1 161 4 314 3 255 8 84 1 300 1 163 1 3 4 233 1 277 1 60 1 36 1 6 20 120 3 260 1 121 5 42 3 217 1 198 1 243 1 306 1 285 3 94 4 175 6 174 1 68 3 127 1 151 1 222 3 130 41 296 4 343 4 374 5 344 1 133 1 136 2 135 1 206 1 25 4 26 4 27 1 141 21 208 1 
56 1 161 3 314 3 255 7 84 1 300 1 163 1 3 4 233 1 277 1 60 1 36 1 6 20 120 4 260 1 121 4 42 3 217 1 198 1 243 1 306 1 285 4 94 3 175 8 174 1 68 4 127 1 151 1 222 4 130 38 296 4 343 4 374 5 344 2 133 1 136 2 135 1 206 1 25 4 26 4 27 1 141 18 208 1 
56 1 161 7 314 2 255 14 84 1 300 1 163 1 3 7 277 1 60 1 36 1 6 27 120 2 121 8 42 4 217 1 198 1 243 1 306 1 285 2 94 7 175 4 174 2 68 2 127 1 151 1 222 2 295 2 130 52 296 4 343 7 374 8 344 1 133 1 136 1 135 1 206 1 25 4 26 7 27 1 141 25 208 1 
119 1 259 1 134 1 327 1 373 1 380 1 160 1 212 1 31 1 375 1 
298 1 241 1 
14 1 119 1 205 1 373 1 380 1 160 1 212 1 54 1 31 1 
210 1 173 1 234 1 73 1 301 1 373 1 212 1 375 1 119 1 134 1 270 1 253 1 327 1 273 1 160 1 380 1 31 1 80 2 
210 1 173 1 234 1 73 1 301 1 373 1 212 1 375 1 119 1 134 1 270 1 253 1 327 1 273 1 160 1 380 1 31 1 80 2 
210 1 173 1 234 1 73 1 301 1 373 1 212 1 375 1 119 1 134 1 270 1 253 1 327 1 273 1 160 1 380 1 31 1 80 2 
113 1 276 1 249 1 
113 1 276 1 249 1 
7 1 2 1 
7 1 2 1 249 1 
202 1 98 1 
210 1 231 2 212 1 191 1 237 2 119 1 216 1 322 2 168 2 241 1 286 2 173 1 95 1 129 1 202 1 373 1 98 1 50 1 250 1 298 1 253 1 273 1 29 1 380 1 160 1 31 1 80 1 
113 1 276 1 
7 1 2 1 249 1 
231 2 356 2 213 1 6 1 120 1 8 1 322 2 11 1 338 1 200 1 286 2 285 1 175 2 68 1 222 1 370 1 74 1 247 1 130 2 75 1 204 1 22 2 159 1 252 1 105 1 28 1 377 2 106 1 378 2 141 1 107 1 
143 1 284 1 81 1 257 1 4 1 292 1 356 2 178 1 211 1 22 2 102 1 335 1 305 2 252 1 41 1 122 1 106 1 378 2 254 1 
143 1 4 1 292 1 356 1 144 1 178 1 211 1 22 1 102 1 335 1 305 2 252 1 41 1 122 1 378 1 106 1 254 1 
284 1 299 1 67 1 356 1 74 1 178 1 246 1 75 1 22 1 251 1 252 1 366 1 106 1 378 1 
143 1 284 1 81 1 4 1 292 1 356 1 178 1 211 1 22 1 102 1 335 1 305 2 252 1 41 1 122 1 378 1 106 1 254 1 
196 1 
183 1 270 1 221 1 72 1 258 1 20 1 294 1 
209 1 210 1 57 1 112 1 61 1 63 1 40 1 282 1 149 1 221 1 294 1 224 1 20 1 132 1 182 1 270 2 253 1 
209 4 161 2 0 2 210 5 57 12 164 2 3 2 257 1 112 4 331 2 5 2 58 1 59 2 116 3 214 2 63 6 121 2 218 2 262 1 125 1 124 2 220 2 221 9 341 6 72 1 74 3 20 2 75 10 131 1 343 2 179 3 132 4 22 3 183 1 182 5 270 8 78 2 356 3 363 2 321 1 282 4 240 2 93 1 149 3 294 8 374 2 203 1 101 2 251 1 158 6 252 4 253 5 106 3 378 3 
209 2 56 1 161 2 0 1 210 1 314 1 57 6 3 2 112 2 60 1 214 2 321 1 63 3 121 2 42 1 240 1 282 2 198 1 306 1 149 1 341 5 221 8 294 5 20 2 343 2 374 2 132 2 182 1 158 5 270 5 253 1 272 1 25 1 381 1 208 1 
209 1 210 1 231 1 84 1 112 1 315 1 277 1 237 1 86 1 214 2 9 1 322 1 148 1 168 1 121 1 240 1 323 1 282 1 286 1 339 1 309 1 151 1 221 2 294 2 374 2 132 1 104 1 253 1 
209 1 112 1 221 1 72 1 294 1 20 1 132 1 183 1 270 1 282 1 
161 2 57 10 3 2 341 5 221 5 294 5 343 2 374 2 101 1 214 2 158 5 270 5 63 5 121 2 240 1 
210 1 149 1 182 1 270 1 253 1 20 1 
209 2 162 1 0 2 210 3 112 1 356 4 317 1 366 1 321 2 282 2 262 1 149 2 67 1 18 1 69 1 221 2 74 1 294 2 75 1 203 2 132 2 22 4 182 4 251 2 252 1 253 3 186 1 106 1 378 4 
231 3 275 1 356 1 191 1 237 2 116 1 86 1 213 1 319 1 120 1 192 1 322 3 168 2 148 2 10 1 338 1 285 1 286 2 340 1 175 2 68 1 222 1 370 1 74 1 130 1 75 1 22 1 251 1 252 1 141 1 378 1 106 1 
209 1 0 1 57 4 112 1 341 2 221 1 294 2 20 2 132 1 158 2 270 4 321 1 63 2 27 1 282 1 
119 1 316 1 380 1 
119 1 316 1 380 1 
119 1 134 1 202 1 76 1 380 1 
119 1 316 1 380 1 
119 1 51 1 380 1 
119 1 51 1 380 1 
119 1 51 1 380 1 
119 1 380 1 
160 1 31 1 
94 1 285 2 255 3 84 1 175 4 68 2 222 2 151 1 130 8 374 1 277 1 344 1 6 4 120 2 206 1 121 1 26 2 27 1 141 4 243 1 
255 2 84 1 151 1 258 1 130 6 374 1 277 1 6 3 206 1 26 2 121 1 27 1 141 3 243 1 
161 1 285 1 94 1 255 2 175 2 68 1 3 1 222 1 128 1 130 4 343 1 374 1 6 2 120 1 26 1 121 1 141 2 
161 1 94 1 314 1 255 2 174 1 3 1 130 7 343 1 374 1 6 3 25 2 26 1 121 1 42 1 141 4 
161 2 255 9 84 1 3 2 277 2 6 11 120 2 121 3 42 2 243 1 94 4 285 2 174 1 175 4 68 2 176 1 151 2 222 2 293 1 130 23 295 1 374 3 343 2 344 2 206 1 25 2 26 5 27 1 141 12 
25 1 130 1 141 1 
6 1 42 1 130 1 
285 1 94 1 161 1 255 3 175 2 68 1 3 1 222 1 128 1 130 6 343 1 374 1 6 3 101 1 120 1 121 1 26 2 141 3 
161 2 56 1 314 1 255 2 3 2 60 1 6 6 120 1 121 2 42 1 198 1 306 1 94 1 285 1 175 2 68 1 222 1 130 12 343 2 374 2 135 1 25 1 26 1 141 6 208 1 
94 1 255 2 84 1 151 1 130 6 374 1 277 1 6 3 121 1 26 1 141 3 
94 1 285 1 255 2 175 2 68 1 151 1 222 1 293 1 130 3 277 1 344 1 6 1 120 1 206 1 26 1 141 2 243 1 
285 1 94 2 255 5 175 2 84 1 68 1 222 1 151 2 315 1 130 10 374 2 277 2 6 5 120 1 135 1 26 3 121 2 141 5 
285 1 94 1 255 1 175 2 68 1 222 1 130 2 343 1 374 1 6 2 120 1 135 1 
161 1 285 1 94 1 255 2 175 2 68 1 3 1 222 1 130 4 343 1 374 1 6 2 120 1 135 1 26 1 121 1 141 2 
285 3 94 1 255 2 175 6 68 3 233 1 222 3 151 1 293 1 130 3 277 1 344 1 6 1 120 3 135 1 26 1 141 2 
161 3 314 1 255 12 84 2 3 3 233 1 277 3 6 16 120 5 121 5 197 1 42 3 243 1 285 5 94 5 175 10 174 1 68 5 151 3 222 5 293 1 128 1 130 34 343 3 374 5 344 2 135 1 206 1 348 1 25 4 139 1 26 7 27 1 141 18 
314 1 255 2 84 1 60 1 277 1 6 4 120 1 121 1 42 1 243 1 285 1 175 2 68 1 222 1 151 1 130 8 374 1 135 1 206 1 25 1 26 2 27 1 141 4 
314 1 255 3 84 1 3 1 277 1 60 1 6 6 120 2 121 1 42 1 243 1 285 2 94 1 175 4 174 1 68 2 151 1 222 2 128 1 130 11 343 1 374 2 135 1 206 1 25 2 26 2 27 1 141 5 
161 2 56 1 314 1 255 4 84 1 3 2 277 1 60 1 6 9 120 3 121 3 42 1 198 1 243 1 306 1 94 1 285 3 175 6 68 3 151 1 222 3 128 1 130 19 343 2 374 3 344 1 135 1 206 1 25 1 26 3 27 1 141 10 208 1 
161 1 56 1 314 1 255 5 84 1 3 2 277 1 60 1 6 10 120 3 121 2 42 1 198 1 243 1 306 1 94 2 285 3 175 6 68 3 151 1 222 3 128 1 130 17 343 2 374 3 344 1 135 1 206 1 25 1 26 3 27 1 141 7 208 1 
314 1 255 2 84 1 60 1 277 1 6 4 120 1 121 1 42 1 243 1 285 1 175 2 68 1 222 1 151 1 130 8 374 1 135 1 206 1 25 1 26 2 27 1 141 4 
161 2 56 1 314 1 255 2 3 2 60 1 6 6 120 1 121 2 42 1 198 1 306 1 94 1 285 1 175 2 68 1 222 1 130 12 343 2 374 2 135 1 25 1 26 1 141 6 208 1 
56 1 161 1 314 1 255 5 84 1 3 2 277 1 60 1 6 10 120 4 121 2 42 1 198 1 243 1 306 1 94 2 285 4 175 8 68 4 151 1 222 4 128 1 130 18 343 2 374 3 344 2 135 1 206 1 25 1 26 3 27 1 141 8 208 1 
56 1 161 2 314 1 255 6 3 3 233 1 60 1 6 9 120 4 121 2 42 1 198 1 306 1 94 3 285 4 175 8 68 4 222 4 130 16 343 3 374 3 344 2 135 1 25 1 26 3 141 7 208 1 
94 3 255 6 84 1 151 3 130 7 374 1 277 3 6 3 206 1 121 1 26 3 141 4 243 2 
56 1 161 1 314 1 255 4 84 1 3 2 233 1 277 1 60 1 6 10 120 4 121 2 42 1 198 1 243 1 306 1 94 1 285 4 175 8 68 4 151 1 222 4 130 18 343 2 374 3 344 2 135 1 206 1 25 1 26 3 27 1 141 8 208 1 
286 1 308 1 231 1 138 1 85 1 322 1 191 1 
286 1 308 1 231 1 290 1 85 1 268 1 313 1 191 1 362 1 365 1 138 1 322 1 
22 1 67 1 251 1 252 1 366 1 356 1 258 1 74 1 106 1 378 1 75 1 
286 1 231 2 356 1 74 1 75 1 191 1 116 1 237 1 319 1 22 1 251 1 192 1 252 1 168 1 322 2 65 1 378 1 106 1 
231 2 356 1 331 1 236 1 191 1 237 2 116 2 319 1 192 1 322 2 168 1 65 1 323 1 218 1 286 2 288 1 74 2 75 3 22 1 203 1 252 1 106 1 378 1 
231 2 356 2 331 1 236 1 191 1 237 2 116 2 304 1 319 1 193 1 322 2 168 1 65 1 323 1 218 1 286 2 288 1 74 2 75 3 22 2 203 1 252 1 106 1 378 2 
210 2 331 1 356 3 5 1 74 1 20 1 75 4 116 1 179 1 363 1 203 1 22 3 215 1 182 1 251 1 270 1 193 1 252 1 253 2 218 1 378 3 44 1 106 1 
124 1 210 2 331 1 356 3 5 1 74 1 20 1 75 4 116 1 179 1 363 1 203 1 22 3 182 1 251 1 270 1 193 1 252 1 253 2 218 1 378 3 106 1 
22 1 156 1 252 1 356 1 106 1 378 1 
32 1 257 1 265 1 356 7 74 2 211 1 34 1 131 1 75 3 116 1 22 6 156 1 251 2 137 1 252 3 140 1 377 1 105 1 283 1 378 7 106 2 
255 2 84 1 231 2 82 1 257 1 356 1 359 1 191 2 277 1 116 1 237 1 281 1 6 3 213 2 319 1 120 2 192 1 322 2 168 1 121 1 65 1 10 1 243 1 126 1 200 1 286 1 285 2 340 1 175 4 68 2 245 1 151 1 222 2 370 2 74 1 130 6 374 1 75 1 204 1 22 1 206 1 252 1 26 2 27 1 141 3 106 1 378 1 
209 2 210 3 164 1 112 2 356 1 5 1 59 1 363 1 282 2 262 1 124 1 149 1 220 1 95 1 221 1 72 1 20 1 294 1 75 2 179 1 22 1 132 2 183 1 182 2 270 1 251 1 253 3 378 1 
257 1 356 2 58 1 74 1 131 1 75 2 116 1 363 1 22 2 156 1 252 2 378 2 106 1 
67 1 330 1 257 1 356 4 74 1 75 1 22 4 251 1 193 1 252 1 366 1 378 4 106 1 
32 1 265 1 356 2 357 1 74 1 49 1 75 1 116 1 203 1 22 2 252 2 185 1 378 2 106 1 
22 1 251 1 335 1 305 1 252 1 356 1 41 1 122 1 106 1 378 1 
257 1 356 2 74 1 211 1 75 1 22 2 159 1 252 1 105 1 378 2 106 1 
67 1 330 1 257 1 356 5 74 2 75 3 34 1 203 1 22 4 251 1 366 1 252 2 140 1 105 1 378 5 106 2 
67 1 330 1 257 1 356 5 310 1 74 2 75 3 34 1 203 1 22 4 251 1 366 1 252 2 105 1 378 5 106 2 
286 1 231 2 356 1 74 1 75 1 191 1 116 1 237 1 304 1 319 1 22 1 251 1 252 1 168 1 322 2 65 1 378 1 106 1 
32 1 265 1 356 1 74 1 131 1 75 1 116 1 203 1 22 1 137 1 252 2 378 1 106 1 
345 1 286 1 333 1 231 1 8 1 322 1 261 1 11 1 107 1 
232 1 223 1 261 1 
345 1 333 1 96 1 261 1 191 1 
210 2 288 1 232 1 95 1 96 2 5 1 223 1 20 1 236 1 191 1 278 1 345 2 333 2 270 1 38 1 253 2 89 1 323 1 261 1 
118 1 244 1 152 1 258 1 
118 1 244 1 369 1 152 1 177 1 142 1 172 1 
16 1 347 1 142 1 
118 1 244 1 369 1 46 1 152 1 177 1 235 1 142 3 274 1 172 3 45 1 35 2 
118 1 334 1 244 1 147 1 369 1 152 1 177 1 142 2 172 2 
199 1 369 1 292 1 177 1 118 1 305 1 335 1 142 1 242 1 45 1 172 1 
118 1 369 1 152 1 177 1 142 1 172 1 45 1 
244 1 369 1 152 2 177 1 142 1 172 1 45 1 
369 2 152 1 177 2 33 1 269 1 118 1 62 1 142 2 45 1 172 2 
199 1 244 1 355 1 369 1 152 1 177 1 118 2 334 2 87 1 142 3 45 1 172 3 353 1 
143 1 244 1 369 1 292 1 152 1 177 1 118 1 146 1 334 1 305 2 335 1 122 1 142 2 45 1 172 2 
199 1 244 1 369 2 152 1 177 2 118 2 334 2 87 1 147 1 142 4 207 1 45 1 172 4 
118 1 244 1 369 1 152 1 177 1 142 1 172 1 45 1 
199 1 244 2 369 1 46 1 152 2 177 1 360 1 35 1 118 3 334 2 87 1 142 4 274 1 172 4 
83 1 244 1 369 1 152 1 177 1 154 1 118 1 302 1 334 1 142 2 45 1 172 2 
118 1 244 1 110 1 369 1 46 1 152 1 177 1 142 3 274 2 172 3 45 1 35 2 
118 2 364 2 90 1 190 1 
117 1 369 1 177 1 142 1 172 1 45 1 
118 1 334 1 244 1 355 1 369 1 152 1 177 1 142 2 172 2 45 1 
289 1 
118 1 244 1 369 1 152 1 177 1 142 1 172 1 45 1 
118 1 334 1 244 1 355 1 369 1 152 1 177 1 142 3 172 3 45 1 35 1 
118 1 199 1 87 1 360 1 
118 1 152 1 

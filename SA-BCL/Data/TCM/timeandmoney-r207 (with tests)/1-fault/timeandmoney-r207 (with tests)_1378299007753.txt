#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
187 1 120 1 149 3 336 2 364 1 86 1 41 1 87 1 219 1 250 1 344 2 197 1 280 2 79 1 22 1 326 5 81 9 281 1 302 1 303 1 83 9 208 2 283 2 117 1 380 2 306 2 61 6 164 4 
187 1 120 1 149 3 336 2 364 1 86 1 41 1 87 1 219 1 250 1 344 2 197 1 280 2 79 1 22 1 326 5 81 9 281 1 302 1 303 1 83 9 208 2 283 2 117 1 380 2 61 6 306 2 164 4 
187 1 120 1 149 4 336 2 364 1 86 1 41 1 87 1 219 1 250 1 344 2 197 1 280 2 79 1 22 1 326 6 81 10 281 1 302 1 303 1 83 10 208 2 283 2 117 1 380 2 61 7 306 2 164 5 
187 1 120 1 149 2 336 2 364 1 86 1 41 1 87 1 219 1 250 1 344 2 280 2 79 1 22 1 326 4 81 7 281 1 302 1 303 1 83 7 208 2 283 2 117 1 380 2 61 4 306 1 164 3 
280 1 149 1 79 1 336 1 326 3 81 4 302 1 303 1 83 4 208 1 250 1 117 1 344 1 380 1 197 1 306 2 61 3 164 2 
280 1 79 1 336 1 22 1 326 1 41 1 81 2 303 1 83 2 353 1 208 1 283 1 117 1 271 1 380 1 330 1 
149 1 79 1 86 1 326 2 81 3 303 1 83 3 208 2 283 1 117 1 380 2 61 1 164 1 
280 1 307 1 120 1 172 1 149 3 79 1 336 1 326 5 86 1 81 9 302 1 281 1 303 1 83 9 208 2 250 1 283 1 117 1 344 1 380 2 197 1 306 2 61 7 164 4 
280 1 307 1 120 1 172 1 149 3 79 1 336 1 326 5 86 1 81 9 302 1 281 1 303 1 83 9 208 2 250 1 283 1 117 1 344 1 380 2 197 1 306 2 61 7 164 4 
148 1 232 1 292 1 
155 1 148 1 217 2 
93 2 94 2 209 1 346 1 378 2 264 2 151 2 168 2 
35 1 4 2 312 1 6 1 8 1 104 1 238 1 240 1 9 1 151 2 88 1 127 1 341 1 90 1 71 1 276 1 46 1 168 3 74 2 170 1 299 2 18 1 93 2 94 2 346 1 174 1 157 1 351 1 177 1 27 2 209 1 30 1 160 2 378 3 379 1 33 1 264 2 
93 1 94 1 209 1 311 1 378 1 263 1 264 1 151 1 243 1 168 1 
148 1 171 1 2 1 200 1 292 1 151 1 189 1 243 1 218 1 176 1 247 1 126 1 378 1 168 1 
93 1 148 1 94 1 171 1 2 1 200 1 292 1 151 1 189 2 243 1 176 2 126 1 378 1 264 1 168 1 
17 1 176 1 305 1 189 1 190 1 
176 2 148 1 161 1 292 1 305 1 146 1 189 2 190 1 
176 1 305 1 189 1 
93 1 94 1 311 1 151 1 190 1 189 1 243 1 176 1 209 1 378 1 263 1 264 1 198 1 168 1 
148 1 
176 2 148 1 292 1 262 1 305 1 146 1 189 2 190 1 
102 1 148 1 133 1 7 1 292 1 241 1 293 1 228 2 190 2 189 5 11 1 158 1 140 1 206 2 176 5 91 1 233 2 146 1 305 2 
232 1 346 1 
93 1 332 1 94 1 333 1 346 2 151 2 378 2 264 1 168 2 
150 1 239 1 329 1 
346 1 6 1 238 1 240 1 9 1 351 1 27 1 341 1 160 1 378 1 33 1 46 1 265 1 168 1 74 1 170 1 
94 1 6 1 238 1 239 1 9 1 240 1 151 1 351 1 27 1 341 1 377 1 160 1 378 2 221 1 33 1 264 1 46 1 168 2 74 1 170 1 
156 1 93 1 94 4 332 1 346 1 95 1 151 5 247 1 52 1 377 2 378 5 221 1 264 4 168 5 
94 2 378 2 263 1 264 2 151 2 138 1 243 1 168 2 
93 1 94 3 346 1 377 1 378 3 264 3 151 3 168 3 
94 1 378 1 263 1 264 1 151 1 243 1 168 1 
93 1 94 1 332 1 333 1 378 1 264 1 151 1 243 1 168 1 
332 1 35 1 2 1 4 2 6 1 8 1 104 1 238 1 9 1 240 1 151 3 189 1 243 1 88 1 127 1 126 1 341 1 90 1 71 1 221 1 276 1 46 1 168 4 170 1 74 1 299 1 18 1 93 2 94 3 171 1 200 1 346 1 348 1 207 1 351 1 176 1 177 1 27 1 209 1 377 1 160 1 378 4 33 1 264 3 
156 1 247 1 94 1 346 1 377 1 378 2 264 1 151 2 168 2 
0 1 93 1 332 1 148 1 94 3 171 1 2 1 200 1 348 1 151 3 189 1 243 1 176 1 126 1 377 2 378 3 221 1 264 3 168 3 
93 1 332 1 94 2 239 1 151 2 377 1 378 2 264 2 329 1 168 2 
346 1 6 1 238 1 240 1 9 1 351 1 27 1 341 1 160 1 378 1 33 1 46 1 168 1 74 1 170 1 
254 1 346 1 238 1 240 1 9 1 351 1 27 1 318 1 341 1 160 1 378 1 33 1 46 1 168 1 74 1 
299 4 237 1 212 1 214 1 35 1 290 1 4 2 256 1 150 2 104 1 8 1 239 2 114 1 100 1 177 1 127 1 167 1 30 2 288 1 44 1 71 1 297 1 276 2 329 2 
171 1 94 1 378 1 264 1 151 1 138 1 243 1 168 1 
101 1 181 1 
101 1 181 1 
343 1 48 1 
343 1 48 1 
343 1 48 1 
101 1 181 1 375 1 
101 1 181 1 375 1 
116 1 101 1 181 1 
101 2 343 1 181 2 23 1 48 1 139 1 
101 1 181 1 375 1 
101 1 181 1 244 1 
101 1 181 1 244 1 
101 1 181 1 244 1 
186 1 213 1 20 1 94 2 77 1 346 1 300 1 151 2 189 1 176 1 25 1 116 1 101 1 328 1 69 1 58 1 162 1 378 2 107 1 357 1 181 1 264 2 163 1 168 2 
148 1 20 2 96 1 300 2 189 2 139 1 205 1 270 1 25 2 176 2 352 1 101 2 328 2 178 1 69 1 84 1 107 3 234 2 181 2 
280 1 344 1 336 1 
280 1 271 1 336 1 
193 1 271 1 159 1 344 2 336 3 12 1 
193 1 28 1 271 1 344 1 336 2 12 1 
193 1 271 1 344 1 336 2 12 2 
213 1 212 1 148 2 215 1 292 1 217 3 189 5 190 4 11 3 165 1 246 2 167 1 273 1 91 1 368 1 277 1 278 1 155 1 372 1 77 1 256 1 228 1 327 2 158 2 50 2 206 1 100 1 176 5 233 1 357 1 305 1 146 1 
212 3 148 5 215 2 292 1 217 9 189 9 190 7 11 8 294 1 165 2 319 1 246 6 167 3 274 1 273 1 91 1 155 3 17 5 372 3 77 4 133 1 256 3 203 1 97 1 228 2 158 6 50 6 206 2 26 1 100 3 82 5 176 9 233 2 305 6 146 1 
212 1 148 3 215 1 292 1 217 4 190 2 189 3 11 3 165 1 246 2 167 1 277 1 278 1 155 2 77 1 372 1 133 1 256 1 228 1 327 1 158 2 206 1 50 2 100 1 176 3 233 1 
212 2 148 4 215 1 292 1 217 7 189 4 190 3 11 5 294 1 165 1 319 1 246 4 167 2 277 1 278 1 155 3 77 2 372 2 133 1 256 2 228 1 327 2 158 4 50 4 206 1 100 2 26 1 176 4 233 1 
232 1 46 1 374 1 
46 1 106 1 
269 1 
351 1 33 1 46 1 
15 1 46 1 
351 1 46 1 
351 1 54 1 33 1 46 3 374 2 225 1 
299 7 214 2 256 1 291 2 313 1 137 1 100 1 13 1 296 1 42 1 30 4 70 1 288 3 276 3 144 1 321 1 235 1 
299 7 214 2 256 1 291 2 313 1 137 1 100 1 13 1 296 1 42 1 30 4 70 1 288 3 276 3 144 1 321 1 235 1 
299 7 214 2 256 1 291 2 313 1 216 1 137 1 100 1 13 1 296 1 42 1 30 4 70 1 288 3 276 3 144 1 321 1 235 1 
266 1 212 3 35 1 214 5 4 2 334 1 103 1 291 3 313 5 8 1 123 1 127 1 367 3 42 1 13 2 296 2 167 3 70 1 71 1 276 15 321 2 370 4 299 31 372 3 109 1 256 4 137 1 51 1 100 4 30 16 179 1 288 10 144 1 235 2 
35 2 214 3 4 4 291 2 313 1 8 2 123 1 127 2 296 1 13 1 70 1 71 2 276 4 321 1 108 1 299 9 256 1 135 1 137 1 100 1 30 5 288 4 144 1 235 1 
268 1 238 1 336 2 9 1 365 1 124 1 194 1 342 1 271 1 344 1 252 1 154 1 253 1 74 1 280 1 79 1 326 1 81 2 303 1 27 1 83 2 208 1 283 1 117 1 285 1 159 1 160 1 380 1 61 1 360 1 
238 1 336 2 9 1 365 1 192 1 194 1 342 1 271 1 344 1 252 1 154 1 253 1 74 1 280 1 110 1 326 1 81 3 303 1 27 1 83 3 208 1 142 1 283 1 117 1 285 1 159 1 160 1 380 1 61 2 360 1 
238 1 336 2 9 1 194 1 342 1 271 1 344 1 252 1 154 1 253 1 74 1 280 1 110 1 326 1 81 2 303 1 27 1 83 2 283 1 142 1 117 1 285 1 159 1 160 1 61 2 
62 1 238 1 9 1 240 1 192 1 315 1 317 1 68 1 196 1 252 2 154 2 131 1 253 2 46 1 74 1 81 1 351 1 27 1 83 1 208 1 283 2 160 1 380 1 
268 1 238 1 336 2 9 1 365 1 194 1 342 1 271 1 344 1 252 1 154 1 253 1 74 1 280 1 79 1 81 1 27 1 83 1 208 1 142 1 283 1 285 1 159 1 160 1 380 1 360 1 
19 1 
148 2 1 1 2 1 292 1 238 1 64 1 240 2 9 1 151 1 189 5 11 2 243 1 247 1 14 1 196 1 298 1 73 4 74 2 155 2 200 1 158 2 206 1 351 1 27 2 259 2 160 2 305 6 267 1 38 1 121 1 85 2 217 2 165 1 89 2 218 1 317 1 126 1 275 1 129 1 91 1 46 1 168 1 279 2 171 1 228 1 176 5 53 1 55 1 284 2 287 2 143 1 378 1 233 1 146 3 183 2 
171 1 267 1 2 1 200 1 121 1 151 1 189 3 243 1 176 3 218 1 53 1 126 1 247 1 55 1 284 1 143 1 378 1 262 1 146 1 305 2 73 2 168 1 
267 1 148 1 2 1 121 1 292 1 151 1 189 3 243 1 218 1 247 1 126 1 168 1 73 3 171 1 200 1 176 3 53 1 55 1 378 1 143 1 262 1 305 1 146 1 183 1 
267 1 148 1 2 1 121 1 292 1 151 1 189 3 243 1 218 1 247 1 126 1 168 1 73 3 279 1 171 1 200 1 176 3 53 1 55 1 284 1 378 1 143 1 262 1 146 1 305 2 183 1 
148 1 267 1 2 1 311 1 121 1 292 1 151 2 189 3 243 2 218 1 247 1 126 1 198 1 168 2 73 2 279 1 93 1 94 1 171 1 200 1 176 3 53 1 209 1 55 1 284 1 32 1 143 1 378 2 263 1 264 1 262 1 305 2 146 1 
148 2 2 1 292 1 64 1 151 1 189 4 243 1 11 1 247 1 73 4 155 2 200 1 158 1 206 1 259 2 305 4 267 1 121 1 85 2 217 2 218 1 89 2 126 1 275 1 91 1 129 1 168 1 279 2 171 1 228 1 176 4 53 1 55 1 284 2 378 1 143 1 287 2 233 1 146 2 183 2 
148 1 267 1 2 1 121 1 292 1 85 2 64 1 151 1 338 1 189 4 11 1 243 1 89 2 218 1 247 1 126 1 275 1 91 1 168 1 73 4 279 2 155 2 171 1 200 1 228 1 229 1 158 1 206 1 176 4 53 1 55 1 284 2 259 2 287 2 378 1 143 1 233 1 305 4 146 2 183 2 381 1 
148 1 267 1 2 1 121 1 292 1 85 2 64 1 151 1 338 1 189 4 11 1 243 1 89 2 218 1 247 1 126 1 275 1 91 1 168 1 73 4 279 2 155 2 171 1 200 1 228 1 229 1 158 1 206 1 176 4 53 1 55 1 284 2 259 2 287 2 378 1 143 1 233 1 305 4 146 2 183 2 381 1 
148 1 267 1 2 1 363 1 121 1 292 1 85 2 217 2 151 1 189 4 11 1 243 1 89 2 218 1 247 1 126 1 220 2 275 1 91 1 222 1 168 1 73 4 199 1 279 2 171 1 200 1 228 1 204 2 158 1 206 1 176 4 53 1 55 1 284 2 378 1 143 1 233 1 305 4 146 2 183 2 381 1 
148 1 267 1 2 1 121 1 292 1 85 2 64 1 338 1 151 1 189 4 11 1 243 1 89 2 218 1 247 1 126 1 275 1 91 1 168 1 73 5 155 2 279 3 171 1 200 1 347 1 228 1 229 1 158 1 206 1 176 4 53 1 55 1 259 2 284 3 287 2 378 1 143 1 233 1 146 2 305 5 381 1 183 3 
148 1 267 1 2 1 121 1 292 1 85 2 64 1 338 1 151 1 189 4 11 1 243 1 89 2 218 1 247 1 126 1 275 1 91 1 168 1 73 5 155 2 279 3 171 1 200 1 347 1 228 1 229 1 158 1 206 1 176 4 53 1 55 1 259 2 284 3 287 2 378 1 143 1 233 1 146 2 305 5 381 1 183 3 
148 1 2 1 292 1 151 1 189 4 243 1 11 1 247 1 73 4 200 1 158 1 204 2 206 1 305 4 267 1 121 1 85 2 217 2 218 1 89 2 126 1 220 2 275 1 91 1 129 1 222 1 168 1 279 2 171 1 228 1 176 4 53 1 55 1 284 2 378 1 143 1 233 1 146 2 183 2 
299 6 214 2 35 1 4 2 291 1 346 2 256 1 150 1 104 1 8 1 239 1 137 1 100 1 177 1 127 1 13 1 296 1 30 3 70 1 232 1 288 2 44 1 71 1 276 3 144 1 329 1 
212 1 214 1 35 2 4 4 313 1 150 11 8 2 104 1 239 11 245 1 127 2 367 3 167 2 128 1 71 2 276 6 370 3 18 1 324 1 299 14 372 2 346 1 256 2 157 1 373 1 349 1 51 1 100 1 177 2 30 8 288 2 179 1 329 4 
184 1 35 1 309 1 4 2 6 1 238 1 8 1 104 1 9 1 240 1 151 1 245 1 127 1 341 1 130 1 71 1 221 1 276 1 46 1 168 2 170 1 74 1 18 1 299 2 94 1 346 1 157 1 351 1 27 1 177 1 30 1 160 1 377 1 378 2 33 1 264 1 329 1 265 1 
4 6 291 1 6 2 150 7 104 3 8 3 238 2 239 7 240 1 9 2 151 1 245 1 341 2 13 1 296 1 70 1 71 3 345 1 74 3 18 1 299 20 346 2 256 3 157 1 301 2 351 2 27 3 29 2 30 10 160 3 33 2 264 1 212 2 214 4 35 3 313 4 127 3 167 2 90 2 221 1 276 10 46 2 47 1 168 3 170 2 94 1 325 1 372 2 137 1 99 2 100 3 177 3 142 1 377 1 378 3 288 8 144 1 329 7 236 2 
35 2 5 1 4 4 312 2 335 1 238 2 8 2 104 2 9 2 240 2 151 1 124 1 127 2 317 1 67 1 195 1 196 1 44 1 71 2 276 1 46 3 72 1 168 1 74 8 299 2 18 1 94 1 157 1 351 2 230 1 27 7 177 2 142 1 30 1 377 1 160 8 378 1 264 1 358 1 
332 1 212 1 214 1 35 1 4 2 150 1 8 1 104 1 239 1 151 1 245 1 127 1 167 1 71 1 276 2 168 1 93 1 299 3 94 1 372 1 256 1 100 1 177 1 30 1 288 1 378 1 264 1 180 1 329 1 
299 2 35 1 4 2 256 1 313 1 150 1 104 1 8 1 239 1 177 1 127 1 167 1 30 2 288 1 44 1 71 1 297 1 329 1 
299 2 212 1 214 1 35 1 4 2 150 1 104 1 8 1 239 1 114 1 100 1 177 1 127 1 288 1 44 1 71 1 276 2 329 1 
299 4 212 1 214 1 35 1 372 1 4 2 256 1 313 1 150 2 104 1 8 1 239 2 100 1 177 1 127 1 167 1 30 2 288 2 44 1 71 1 276 2 329 2 
299 2 35 1 4 2 256 1 313 1 150 1 104 1 8 1 239 1 177 1 127 1 167 1 30 2 288 1 71 1 297 1 329 1 72 1 
299 2 212 1 214 1 35 1 4 2 150 1 104 1 8 1 239 1 114 1 100 1 177 1 127 1 288 1 71 1 276 2 329 1 72 1 
299 4 212 1 214 1 35 1 372 1 4 2 256 1 313 1 150 2 104 1 8 1 239 2 100 1 177 1 127 1 167 1 30 2 288 2 71 1 276 2 329 2 72 1 
299 4 212 1 214 1 35 1 372 1 4 2 256 1 313 1 150 2 104 1 8 1 239 2 100 1 177 1 127 1 167 1 30 2 288 2 71 1 276 2 329 2 
35 1 4 2 6 1 238 1 104 1 8 1 9 1 240 1 127 1 341 1 90 1 71 1 276 1 46 1 168 1 170 1 74 1 299 2 18 1 346 1 157 1 351 1 27 1 177 1 30 1 160 1 378 1 33 1 
35 1 4 2 238 1 104 1 8 1 9 1 240 1 318 1 127 1 341 1 71 1 276 1 46 1 168 1 74 1 254 1 299 2 18 1 346 1 157 1 351 1 27 1 177 1 30 1 160 1 378 1 33 1 331 1 
212 1 35 1 214 1 4 2 150 2 313 1 8 1 104 1 239 2 245 1 127 1 167 1 71 1 276 2 299 4 372 1 256 1 100 1 177 1 30 2 288 2 329 2 
212 1 214 1 35 1 4 2 313 1 150 2 6 1 238 1 104 1 8 1 239 2 9 1 124 1 127 1 341 1 167 1 90 1 71 1 276 2 46 1 168 1 170 1 74 1 299 4 372 1 256 1 99 1 100 1 351 1 27 1 177 1 30 2 160 1 288 2 378 1 33 1 329 2 
212 1 332 1 35 1 4 2 313 1 150 1 8 1 104 1 239 1 151 1 245 1 127 1 167 1 71 1 276 1 168 1 93 1 299 3 76 1 94 1 372 1 256 1 100 1 177 1 30 2 288 1 378 1 264 1 329 1 
212 3 214 3 35 2 4 4 313 3 8 2 40 1 65 1 127 2 367 1 167 3 272 1 71 2 276 10 92 1 370 2 299 19 372 3 256 3 135 1 350 1 111 1 115 1 51 1 100 3 30 9 261 2 179 1 288 6 145 2 
212 2 214 2 35 3 37 1 4 6 313 2 8 3 123 2 65 1 10 1 127 3 367 2 167 3 272 2 251 1 71 3 45 1 276 12 369 1 370 2 299 26 255 1 372 3 256 3 135 1 350 1 111 1 115 2 51 2 100 2 30 14 261 1 288 4 145 4 
4 6 291 1 8 3 65 1 10 1 296 1 13 1 251 1 70 1 71 3 299 41 255 1 256 5 111 1 350 1 115 1 30 20 261 1 212 4 35 3 214 4 37 1 313 4 123 1 367 3 127 3 167 4 272 2 276 21 45 1 92 1 369 1 370 4 372 4 135 1 137 1 51 3 100 5 57 1 288 8 179 1 144 1 145 4 
212 3 214 4 35 4 37 1 4 8 291 1 313 3 8 4 123 2 10 1 65 1 127 4 367 3 13 1 296 1 167 4 70 1 251 1 272 2 71 4 45 1 276 18 92 1 369 1 370 4 299 38 255 1 372 4 256 5 135 1 137 1 350 1 111 1 115 1 51 3 100 4 57 1 30 20 261 1 179 1 288 7 144 1 145 4 
212 7 214 7 35 2 37 1 4 4 291 1 313 7 8 2 123 1 10 1 65 1 127 2 367 4 13 1 296 1 167 7 128 2 70 1 251 1 272 1 71 2 45 1 276 25 369 1 370 4 299 52 255 1 372 7 256 8 135 1 137 1 350 1 111 1 115 1 51 2 100 8 30 27 261 1 179 2 288 14 144 1 145 4 
270 1 25 1 248 1 20 1 328 1 101 1 178 1 300 1 181 1 139 1 
186 1 116 1 
25 1 20 1 328 1 101 1 300 1 181 1 182 1 113 1 125 1 
339 1 375 1 
56 1 23 1 244 1 
148 1 20 1 96 1 300 1 189 1 139 1 205 1 270 1 176 1 25 1 101 1 328 1 178 1 69 1 84 1 107 2 234 1 181 1 
148 1 20 1 96 1 300 1 189 1 139 1 205 1 270 1 176 1 25 1 101 1 328 1 178 1 69 1 84 1 107 2 234 1 181 1 
148 1 20 1 96 1 300 1 189 1 139 1 205 1 270 1 176 1 25 1 101 1 328 1 178 1 69 1 84 1 107 2 234 1 181 1 
339 1 23 1 375 1 
339 1 23 1 375 1 
56 1 244 1 
56 1 23 1 244 1 
58 1 163 1 
186 1 213 1 151 2 189 1 190 1 107 1 168 2 20 1 94 2 77 1 346 1 257 1 96 1 300 1 176 1 25 1 116 1 328 1 101 1 58 1 378 2 162 1 234 1 181 1 357 1 264 2 163 1 
35 1 4 2 312 2 335 1 238 1 8 1 104 1 9 1 151 2 245 1 127 1 195 1 71 1 276 1 46 1 168 2 74 2 299 2 18 1 371 1 134 1 157 1 136 1 351 1 177 1 27 2 30 1 286 1 160 2 378 2 359 1 
226 1 280 1 336 2 238 1 9 1 258 1 365 1 124 1 66 1 27 2 194 1 142 1 271 1 285 1 159 1 344 1 160 2 252 1 74 2 
226 1 280 1 336 2 238 1 9 1 365 1 27 1 194 1 142 1 271 1 285 1 159 1 344 1 160 1 252 1 356 1 74 1 
238 1 9 1 240 1 258 1 152 1 351 1 27 1 317 1 68 1 196 1 160 1 252 1 46 1 74 1 
226 1 280 1 336 2 238 1 9 1 258 1 365 1 66 1 27 1 194 1 142 1 271 1 285 1 159 1 344 1 160 1 252 1 74 1 
289 1 
148 1 232 1 292 1 241 1 293 1 11 1 158 1 
148 2 292 1 64 1 217 1 189 1 11 1 91 1 155 1 228 1 158 1 206 1 176 1 259 1 287 1 233 1 146 1 305 1 
185 2 1 1 148 8 292 2 238 3 241 1 293 1 9 4 240 1 106 3 189 5 11 9 246 6 295 2 153 2 15 2 74 3 155 6 200 2 78 2 256 2 158 8 24 2 206 4 351 3 27 3 160 3 33 3 305 5 361 1 212 2 310 1 122 1 217 12 124 1 165 2 366 2 167 2 91 4 46 10 223 2 169 1 372 2 228 4 374 2 376 1 50 6 176 5 100 2 54 1 233 4 146 3 60 2 236 2 
147 1 1 1 148 5 212 2 37 1 292 2 217 6 189 1 10 1 11 8 165 1 246 5 367 1 167 2 251 1 91 2 369 1 370 1 155 3 255 1 372 2 78 2 256 2 175 1 228 2 158 5 50 5 51 1 206 2 176 1 100 2 233 2 60 1 305 1 146 1 
118 1 311 1 338 1 151 1 189 1 243 1 11 2 13 1 296 1 70 1 91 1 168 1 198 1 93 1 94 1 78 2 256 2 228 1 158 2 206 1 176 1 100 1 209 1 378 1 233 1 263 1 264 1 60 1 
148 1 292 1 293 1 241 1 228 1 158 1 11 1 206 1 91 1 233 1 
155 5 148 5 212 2 372 2 78 2 256 2 217 10 158 5 11 5 50 5 100 2 246 5 167 2 60 1 236 1 
176 1 148 1 292 1 189 1 305 1 146 1 
1 2 362 1 38 1 238 1 122 2 9 1 240 2 189 3 11 2 165 2 317 1 196 1 91 1 298 1 46 1 224 1 74 4 133 1 228 2 158 2 206 2 376 1 351 1 176 3 27 4 160 4 233 2 305 4 146 2 
35 1 4 2 6 1 238 1 104 1 8 1 240 1 9 1 151 2 88 1 127 1 341 1 90 1 71 1 276 1 46 1 168 3 74 1 170 1 299 1 18 1 93 2 94 2 346 1 351 1 27 1 177 1 209 1 160 1 378 3 33 1 264 2 
155 2 148 4 1 1 291 1 292 2 217 4 228 1 158 2 11 1 165 1 50 2 206 1 246 2 91 1 233 1 
328 1 227 1 300 1 
328 1 227 1 300 1 
270 1 328 1 300 1 98 1 163 1 
328 1 227 1 300 1 
328 1 300 1 59 1 
328 1 300 1 59 1 
328 1 300 1 59 1 
328 1 300 1 
101 1 181 1 
299 8 214 2 35 2 4 4 291 1 256 1 313 1 8 2 137 1 123 1 100 1 127 2 296 1 13 1 30 4 70 1 288 3 71 2 276 4 144 1 
299 6 214 2 291 1 256 1 137 1 100 1 296 1 13 1 30 3 232 1 70 1 288 2 276 3 144 1 
299 4 212 1 214 1 35 1 372 1 4 2 256 1 313 1 8 1 100 1 340 1 127 1 167 1 30 2 288 2 71 1 276 2 
299 7 212 1 214 1 372 1 256 1 313 1 51 1 100 1 367 1 167 1 30 3 179 1 288 2 276 4 370 2 
212 2 214 5 35 2 4 4 291 1 313 4 8 2 123 2 367 2 127 2 13 2 296 2 167 2 128 1 70 1 71 2 276 12 370 2 299 23 324 1 372 2 256 3 137 1 100 3 30 11 288 9 179 1 144 1 34 1 
299 1 276 1 370 1 
299 1 367 1 30 1 
299 6 212 1 35 1 214 2 372 1 4 2 256 1 313 1 8 1 100 1 127 1 340 1 167 1 30 3 288 3 71 1 276 3 236 1 
212 2 35 1 214 1 37 1 4 2 313 1 8 1 10 1 367 1 127 1 167 2 251 1 71 1 276 6 369 1 370 1 299 12 255 1 372 2 256 2 135 1 51 1 100 2 30 6 288 2 
299 6 214 1 256 1 313 1 100 1 296 1 13 1 30 3 70 1 288 2 276 3 
299 3 214 1 35 1 4 2 313 1 8 1 137 1 123 1 127 1 13 1 296 1 30 1 288 2 71 1 276 2 144 1 34 1 
118 1 299 10 35 1 214 3 4 2 256 2 313 2 8 1 135 1 100 2 127 1 296 2 13 2 30 5 70 1 288 5 71 1 276 5 
299 2 35 1 4 2 256 1 313 1 135 1 8 1 127 1 167 1 30 2 288 1 71 1 
299 4 212 1 214 1 35 1 372 1 4 2 256 1 313 1 135 1 8 1 100 1 127 1 167 1 30 2 288 2 71 1 276 2 
299 3 35 3 214 1 4 6 313 1 135 1 8 3 123 1 127 3 296 1 13 1 30 1 288 2 71 3 276 2 92 1 34 1 
212 3 35 5 214 7 334 1 4 10 291 1 103 1 313 5 8 5 123 2 340 1 127 5 367 3 13 3 296 3 167 3 70 2 71 5 276 18 92 1 370 4 299 34 372 3 109 1 256 5 135 1 137 1 51 1 100 5 30 16 179 1 288 12 144 1 34 1 
35 1 214 2 4 2 291 1 8 1 10 1 367 1 127 1 296 1 13 1 70 1 71 1 276 4 370 1 299 8 256 1 135 1 137 1 51 1 100 1 30 4 288 2 144 1 
214 2 35 2 4 4 291 1 313 1 8 2 10 1 127 2 340 1 367 1 13 1 296 1 167 1 70 1 71 2 276 5 370 2 299 11 372 1 256 2 135 1 137 1 51 1 100 1 30 6 179 1 288 3 144 1 
212 2 35 3 214 3 37 1 4 6 291 1 313 1 8 3 10 1 123 1 340 1 367 1 127 3 13 1 296 1 167 2 70 1 251 1 71 3 276 10 369 1 370 1 299 19 255 1 372 2 256 3 135 1 137 1 51 1 100 3 30 9 288 4 144 1 
212 1 35 3 214 3 37 1 4 6 291 1 313 2 8 3 123 1 10 1 340 1 367 1 127 3 13 1 296 1 167 2 70 1 251 1 71 3 276 7 369 1 370 1 299 17 255 1 372 2 256 3 135 1 137 1 51 1 100 2 30 10 288 5 144 1 
35 1 214 2 4 2 291 1 8 1 10 1 367 1 127 1 296 1 13 1 70 1 71 1 276 4 370 1 299 8 256 1 135 1 137 1 51 1 100 1 30 4 288 2 144 1 
212 2 35 1 214 1 37 1 4 2 313 1 8 1 10 1 367 1 127 1 167 2 251 1 71 1 276 6 369 1 370 1 299 12 255 1 372 2 256 2 135 1 51 1 100 2 30 6 288 2 
212 1 35 4 214 3 37 1 4 8 291 1 313 2 8 4 10 1 123 2 340 1 127 4 367 1 13 1 296 1 167 2 70 1 251 1 71 4 276 8 369 1 370 1 299 18 255 1 372 2 256 3 135 1 137 1 51 1 100 2 30 10 288 5 144 1 
212 2 35 4 214 3 37 1 4 8 313 3 8 4 10 1 123 2 127 4 367 1 167 3 251 1 71 4 276 7 92 1 369 1 370 1 299 16 255 1 372 3 256 3 135 1 51 1 100 2 30 9 288 6 
299 7 214 3 256 1 313 3 137 2 100 1 296 3 13 3 30 3 70 1 288 6 276 4 144 1 
212 1 35 4 214 3 37 1 4 8 291 1 313 1 8 4 10 1 123 2 127 4 367 1 13 1 296 1 167 2 70 1 251 1 71 4 276 8 92 1 369 1 370 1 299 18 255 1 372 2 256 3 135 1 137 1 51 1 100 2 30 10 288 4 144 1 
156 1 247 1 31 1 346 1 378 1 151 1 168 1 
156 1 346 1 202 1 151 1 191 1 141 1 247 1 231 1 31 1 210 1 378 1 168 1 
351 1 317 1 27 1 196 1 232 1 160 1 238 1 9 1 240 1 46 1 74 1 
94 1 346 1 6 1 238 1 9 1 240 1 151 1 351 1 27 1 341 1 377 1 160 1 378 2 33 1 264 1 46 1 168 2 74 1 
171 1 94 2 346 1 6 1 238 1 122 1 9 1 151 2 243 1 351 2 126 1 27 1 341 1 295 1 377 1 160 1 378 2 33 2 15 1 264 1 46 3 168 2 74 1 
171 1 94 2 3 1 346 1 238 1 122 1 9 1 151 2 243 1 351 2 126 1 27 2 318 1 341 1 295 1 377 1 160 2 378 2 33 2 15 1 264 1 46 3 168 2 74 2 
119 1 148 1 3 1 238 1 292 1 122 1 9 1 240 1 106 1 189 2 295 1 15 1 46 4 74 3 200 1 21 1 374 1 176 2 351 1 27 3 160 3 33 1 305 1 
185 1 148 1 3 1 200 1 292 1 238 1 122 1 240 1 9 1 106 1 189 2 374 1 351 1 176 2 27 3 295 1 160 3 33 1 15 1 46 4 305 1 74 3 
27 1 160 1 238 1 9 1 358 1 74 1 
312 1 5 1 335 1 238 2 49 1 240 2 9 3 124 1 351 2 230 1 27 6 67 1 54 1 142 1 43 1 160 7 33 1 358 1 46 3 132 1 74 7 
214 2 35 2 4 4 291 1 150 1 6 1 238 1 8 2 104 2 239 1 9 1 151 1 245 1 124 1 127 2 341 1 13 1 296 1 70 1 90 1 71 2 276 3 46 1 168 2 74 1 170 1 299 6 94 1 346 2 256 1 137 1 301 1 99 1 100 1 351 1 177 2 27 1 30 3 377 1 160 1 288 2 378 2 144 1 33 1 264 1 329 1 359 1 
185 1 148 1 292 1 241 1 293 1 240 1 106 1 189 3 190 1 11 1 366 1 91 2 46 2 223 1 74 1 200 1 228 2 158 1 374 1 206 2 376 1 24 1 176 3 27 1 160 1 233 2 305 2 146 1 
238 1 9 2 374 1 124 1 351 1 27 2 54 1 160 2 33 1 358 1 46 2 74 2 169 1 
3 1 238 1 201 1 9 1 240 1 124 1 351 1 27 4 317 1 196 1 160 4 46 1 74 4 
211 1 325 1 238 1 122 1 49 1 9 2 351 1 27 2 160 2 260 1 33 1 46 1 132 1 74 2 
280 1 27 1 194 1 271 1 160 1 336 1 238 1 9 1 240 1 74 1 
371 1 335 1 238 1 9 1 124 1 351 1 27 2 142 1 160 2 46 1 74 2 
5 1 335 1 238 2 201 1 122 1 240 1 9 2 124 1 351 2 317 1 27 4 230 1 196 1 160 5 46 3 74 5 
5 1 335 1 238 2 201 1 122 1 240 1 9 2 124 1 351 2 317 1 27 4 282 1 196 1 160 5 46 3 74 5 
94 1 346 1 238 1 9 1 240 1 151 1 351 1 27 1 318 1 341 1 377 1 160 1 378 2 33 1 264 1 46 1 168 2 74 1 
238 1 122 1 49 1 9 2 351 1 27 1 54 1 43 1 160 1 33 1 46 1 132 1 74 1 
308 1 346 1 173 1 314 1 323 1 
75 1 148 1 171 1 308 2 2 1 200 1 346 1 173 1 292 1 105 1 314 2 337 1 348 1 190 1 189 2 243 1 176 2 126 1 323 2 
308 1 173 1 134 1 136 1 151 1 286 1 378 1 323 1 168 1 
173 1 105 1 337 1 
303 1 117 1 232 1 326 1 
303 1 83 1 208 1 117 1 380 1 326 1 81 1 
83 1 283 1 253 1 
303 1 83 3 208 1 354 1 117 1 79 1 80 1 380 1 326 1 41 2 81 3 112 1 
303 1 83 2 208 1 117 1 380 1 326 1 81 2 61 1 306 1 
280 1 79 1 336 1 326 1 81 1 83 1 208 1 250 1 344 1 380 1 164 1 
303 1 83 1 208 1 79 1 380 1 326 1 81 1 
303 2 83 1 208 1 117 1 79 1 380 1 81 1 
79 1 326 1 81 2 303 1 83 2 208 2 249 1 355 1 380 2 322 1 
120 1 149 1 79 1 326 2 81 3 281 1 303 1 83 3 208 1 117 1 380 1 61 2 164 1 
280 1 79 1 336 2 326 1 242 1 81 2 303 1 83 2 208 1 117 1 271 1 159 1 344 1 380 1 61 1 
303 1 83 4 208 2 117 1 149 1 79 1 380 2 326 2 197 1 81 4 61 2 306 1 164 1 
303 1 83 1 208 1 117 1 79 1 380 1 326 1 81 1 
149 1 63 1 80 1 326 3 41 1 81 4 303 2 83 4 208 1 354 1 117 2 380 1 61 2 164 1 
303 1 83 2 307 1 208 1 117 1 36 1 79 1 380 1 326 1 81 2 61 1 16 1 
303 1 83 3 208 1 354 2 117 1 79 1 80 1 380 1 326 1 41 2 81 3 166 1 
304 1 320 1 39 2 326 2 
83 1 208 1 188 1 79 1 380 1 81 1 
303 1 83 2 208 1 120 1 117 1 79 1 380 1 326 1 81 2 61 1 
316 1 
303 1 83 1 208 1 117 1 79 1 380 1 326 1 81 1 
303 1 83 3 208 1 120 1 117 1 79 1 380 1 326 1 41 1 81 3 61 1 
149 1 63 1 326 1 164 1 
303 1 326 1 

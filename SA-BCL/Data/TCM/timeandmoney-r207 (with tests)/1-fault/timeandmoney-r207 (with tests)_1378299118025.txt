#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
246 1 215 1 149 1 27 1 217 3 61 3 312 2 362 1 44 1 23 1 306 2 185 1 338 2 
113 1 144 1 246 1 149 2 94 1 27 1 311 1 95 1 312 5 175 1 362 3 185 1 55 2 232 1 338 2 215 4 341 1 217 9 129 1 61 9 64 1 40 1 292 2 87 2 44 6 23 1 306 2 201 2 
113 1 144 1 246 1 149 2 94 1 27 1 311 1 95 1 312 5 175 1 362 3 185 1 55 2 232 1 338 2 215 4 341 1 217 9 129 1 61 9 64 1 40 1 292 2 87 2 44 6 23 1 306 2 201 2 
113 1 144 1 246 1 149 2 94 1 27 1 311 1 95 1 312 6 175 1 362 4 185 1 55 2 232 1 338 2 215 5 341 1 217 10 129 1 61 10 64 1 40 1 292 2 87 2 44 7 23 1 306 2 201 2 
113 1 144 1 246 1 149 2 94 1 27 1 311 1 95 1 312 4 175 1 362 2 185 1 55 2 232 1 338 2 215 3 341 1 217 7 129 1 61 7 64 1 292 2 87 2 44 4 23 1 306 2 201 1 
215 2 27 1 217 4 129 1 61 4 312 3 175 1 40 1 292 1 87 1 362 1 44 3 23 1 306 1 185 1 55 1 338 1 201 2 
287 1 149 1 27 1 341 1 311 1 217 2 61 2 312 1 302 1 87 1 317 1 23 1 306 1 185 1 55 1 338 1 
246 1 149 1 94 1 27 1 312 5 175 1 9 1 362 3 185 1 232 1 55 1 338 2 215 4 233 1 217 9 129 1 61 9 40 1 292 1 87 1 44 7 23 1 306 2 201 2 
246 1 149 1 94 1 27 1 312 5 175 1 9 1 362 3 185 1 232 1 55 1 338 2 215 4 233 1 217 9 129 1 61 9 40 1 292 1 87 1 44 7 23 1 306 2 201 2 
143 1 112 1 348 1 127 1 342 1 63 1 240 1 334 1 316 1 21 1 376 1 183 1 231 1 166 1 
359 1 
359 1 334 2 335 1 271 1 65 1 140 1 231 2 183 1 
74 1 3 1 116 2 310 1 263 1 320 2 344 1 278 2 359 1 334 5 163 1 98 1 65 1 271 2 140 1 183 2 231 5 22 1 213 1 
359 1 193 1 140 1 
359 1 139 1 254 2 
224 1 348 2 240 2 127 2 316 2 376 2 342 2 166 1 
224 1 0 1 348 2 168 1 148 1 6 1 353 2 150 1 355 1 316 2 180 2 100 1 51 1 364 2 189 1 127 2 191 2 78 1 79 1 36 1 59 1 216 1 195 1 83 1 342 3 370 1 133 1 38 1 240 2 86 1 324 1 374 1 376 3 166 1 328 1 110 2 307 1 
63 1 348 1 240 1 112 1 127 1 316 1 21 1 376 1 342 1 166 1 
203 1 259 1 342 1 268 1 239 1 359 1 43 1 316 1 162 1 334 1 21 1 140 1 376 1 231 1 
348 1 203 1 127 1 342 1 268 1 239 1 240 1 359 1 334 2 316 1 162 1 21 1 140 1 376 1 231 2 
334 1 271 1 231 1 183 1 238 1 
359 1 279 1 334 2 271 1 65 1 140 1 231 2 183 1 
334 1 271 1 231 1 
224 2 348 1 188 1 127 1 342 2 240 1 47 1 316 2 376 2 
25 1 103 1 171 1 
224 1 364 1 0 1 78 1 36 1 79 1 216 1 342 1 370 1 353 1 150 1 355 1 119 1 324 1 376 1 110 1 
224 1 193 1 
0 1 364 1 348 1 103 1 127 1 78 1 79 1 36 1 216 1 342 2 370 1 150 1 353 1 355 1 356 1 209 1 324 1 316 1 376 2 110 1 
224 1 240 1 348 3 127 3 209 1 316 3 376 3 342 3 
63 1 348 1 127 1 316 1 21 1 376 1 342 1 
348 1 240 1 188 1 127 1 47 1 316 1 21 1 376 1 342 1 
224 1 0 1 348 3 203 1 148 1 6 1 150 1 353 1 355 1 356 1 47 1 209 1 316 3 334 1 180 1 231 1 100 1 51 1 364 1 339 1 127 3 191 2 78 1 79 1 36 1 59 1 216 1 195 1 342 4 370 1 38 1 268 1 239 1 240 2 324 1 162 1 374 1 21 1 376 4 166 1 328 1 200 1 110 1 307 1 
224 1 348 1 127 1 209 1 43 1 316 2 376 2 342 2 236 1 
348 3 203 1 127 3 342 3 268 1 356 1 239 1 240 1 359 1 47 1 209 2 229 1 334 1 162 1 316 3 21 1 376 3 231 1 200 1 
348 2 127 2 103 1 171 1 342 2 240 1 47 1 209 1 316 2 376 2 
224 1 364 1 0 1 36 1 79 1 78 1 216 1 342 1 370 1 353 1 150 1 355 1 324 1 376 1 110 1 
224 1 364 1 0 1 36 1 79 1 78 1 216 1 342 1 108 1 353 1 355 1 324 1 376 1 110 1 92 1 
245 1 45 1 148 1 25 2 171 2 205 1 280 1 123 1 49 1 180 4 100 1 51 1 103 2 191 2 340 1 195 1 39 1 290 1 86 2 374 1 223 1 164 1 328 2 307 1 
134 1 348 1 127 1 316 1 21 1 376 1 342 1 268 1 
224 1 348 4 247 1 127 4 218 1 342 5 236 1 356 1 240 1 47 1 209 2 43 1 316 5 376 5 
134 1 63 1 348 2 127 2 316 2 21 1 376 2 342 2 
314 1 235 1 248 1 
102 1 42 1 71 1 104 1 235 2 248 2 
235 1 248 1 
235 1 248 1 
102 1 42 1 
102 1 42 1 
102 1 42 1 
146 1 235 1 248 1 
146 1 235 1 248 1 
146 1 235 1 248 1 
204 1 235 1 248 1 
204 1 235 1 248 1 
204 1 235 1 248 1 
35 1 5 1 235 2 248 2 295 1 237 1 289 3 359 1 323 1 71 1 303 1 334 2 241 2 11 2 304 2 211 2 141 2 231 2 111 1 
224 1 348 2 127 2 194 1 235 1 248 1 352 1 342 2 289 1 135 1 314 1 323 1 316 2 334 1 361 1 241 1 11 1 305 1 376 2 211 1 165 1 231 1 141 1 54 1 
292 1 287 1 14 2 264 1 55 2 
292 1 87 1 55 1 
287 1 87 1 55 1 
161 1 292 2 287 1 14 1 264 1 55 3 
292 1 287 1 14 1 58 1 264 1 55 2 
45 1 26 1 3 2 116 1 206 1 30 2 357 2 278 1 359 2 252 1 334 5 280 1 98 1 123 1 254 3 231 5 183 4 212 1 54 1 74 3 258 1 340 1 109 1 17 2 320 1 291 1 139 1 271 1 65 1 305 1 140 1 165 1 
274 1 45 3 26 2 3 6 116 2 30 6 278 2 176 1 315 5 359 5 334 9 280 3 360 1 98 1 123 3 254 9 231 9 183 7 212 1 54 4 337 1 74 8 286 1 258 2 340 3 16 1 109 3 17 6 320 2 238 5 139 3 271 6 65 1 140 1 22 1 
45 1 26 1 3 2 206 1 116 1 357 1 30 2 278 1 359 3 252 1 334 3 280 1 123 1 254 4 183 2 231 3 54 1 74 3 258 1 340 1 109 1 17 2 320 1 139 2 140 1 22 1 
274 1 45 2 26 1 3 4 116 1 206 1 30 4 357 2 278 1 359 4 334 4 252 1 280 2 123 2 254 7 231 4 183 3 54 2 337 1 74 5 286 1 258 1 340 2 109 2 17 4 320 1 139 3 140 1 22 1 
186 1 
193 1 78 1 131 1 
270 1 78 1 
78 1 79 1 
1 1 78 3 79 1 36 1 131 2 354 1 
78 1 79 1 36 1 
78 1 308 1 
329 2 330 1 192 1 158 1 18 1 132 1 39 2 298 1 86 4 251 1 154 1 280 1 123 1 49 3 281 1 180 7 12 1 328 3 
272 1 329 3 330 1 148 1 45 3 225 4 173 1 151 1 298 5 154 1 251 2 280 4 281 2 49 10 123 4 180 31 283 1 100 1 34 1 191 2 192 2 340 3 81 1 195 1 158 2 109 3 18 1 132 1 39 5 322 3 371 1 86 16 328 15 307 1 
329 2 148 2 151 1 298 1 154 1 251 1 280 1 123 1 281 1 49 4 180 9 100 2 191 4 192 1 195 2 158 1 266 1 132 1 18 1 39 3 86 5 20 1 328 4 307 2 
329 2 330 1 192 1 158 1 18 1 132 1 39 2 298 1 86 4 251 1 154 1 280 1 123 1 49 3 281 1 180 7 328 3 
329 2 330 1 192 1 158 1 18 1 132 1 39 2 298 1 86 4 251 1 154 1 280 1 123 1 49 3 281 1 180 7 328 3 
0 1 364 1 57 1 149 2 78 1 79 1 172 1 217 1 227 1 61 1 319 1 228 2 353 1 355 1 159 2 324 1 50 2 99 1 90 1 306 1 336 1 110 1 338 1 
0 1 56 1 364 1 287 1 149 1 27 1 217 1 61 1 96 1 228 1 353 1 355 1 84 1 321 1 159 1 161 1 292 1 87 1 138 1 199 1 50 1 377 1 306 1 55 2 110 1 338 1 
0 1 149 1 27 1 228 1 96 1 353 1 312 1 355 1 50 1 185 1 55 2 338 1 364 1 56 1 190 1 287 1 217 2 61 2 159 1 84 1 161 1 292 1 87 1 138 1 199 1 44 1 23 1 306 1 377 1 110 1 
0 1 147 1 149 1 228 1 96 1 353 1 312 1 355 1 50 1 185 1 336 1 55 2 338 1 364 1 287 1 217 3 61 3 159 1 321 1 84 1 161 1 292 1 87 1 138 1 199 1 44 2 23 1 306 1 377 1 110 1 
0 1 147 1 149 1 228 1 353 1 312 1 355 1 50 1 185 1 55 2 364 1 287 1 217 2 61 2 159 1 321 1 84 1 161 1 292 1 87 1 199 1 44 2 23 1 377 1 110 1 
249 1 
0 1 203 1 3 2 4 1 8 2 210 1 334 5 98 1 254 2 255 1 53 1 300 2 101 1 214 1 258 1 157 1 259 1 342 1 343 2 268 1 162 1 65 3 271 6 21 1 346 1 347 2 110 2 116 1 276 4 172 1 353 2 355 1 278 1 359 2 358 1 316 1 182 1 231 5 73 2 74 2 364 2 33 1 76 2 79 1 78 1 319 1 320 1 196 1 239 1 324 2 43 1 139 2 140 1 376 1 242 2 
203 1 157 1 259 1 276 2 342 1 268 1 196 1 239 1 358 1 43 1 162 1 334 3 316 1 335 1 65 1 271 2 21 1 376 1 231 3 73 1 53 1 101 1 
203 1 276 3 358 1 359 1 316 1 334 3 335 1 231 3 53 1 101 1 259 1 157 1 76 1 342 1 268 1 239 1 196 1 43 1 162 1 271 1 21 1 65 1 376 1 140 1 
203 1 276 3 358 1 8 1 359 1 316 1 334 3 335 1 231 3 53 1 73 1 101 1 259 1 157 1 76 1 342 1 268 1 239 1 196 1 43 1 162 1 65 1 21 1 271 2 376 1 140 1 
203 1 3 1 116 1 276 6 294 1 278 1 359 5 358 1 8 4 333 1 316 1 334 5 98 1 335 1 231 5 53 1 73 4 300 2 155 1 126 1 101 1 74 1 214 1 33 1 259 1 157 1 76 4 342 1 343 2 320 1 268 1 196 1 239 1 43 1 162 1 139 2 373 1 271 7 65 3 21 1 140 5 376 1 242 2 347 2 
203 1 3 1 8 2 334 4 98 1 254 2 53 1 300 2 101 1 214 1 157 1 259 1 342 1 343 2 268 1 162 1 21 1 65 2 271 4 346 1 347 2 276 4 116 1 278 1 358 1 359 2 316 1 231 4 73 2 74 1 33 1 76 2 320 1 239 1 196 1 43 1 139 2 376 1 140 1 242 2 
203 1 3 1 116 1 276 4 294 1 278 1 359 1 8 2 358 1 316 1 334 4 98 1 231 4 73 2 53 1 300 2 155 1 101 1 74 1 214 1 33 1 259 1 157 1 76 2 342 1 343 2 320 1 268 1 239 1 196 1 43 1 162 1 139 2 373 1 271 4 65 2 21 1 140 1 376 1 242 2 347 2 
203 1 3 1 116 1 276 4 294 1 278 1 359 1 8 2 358 1 316 1 334 4 98 1 231 4 73 2 53 1 300 2 155 1 101 1 74 1 214 1 33 1 259 1 157 1 76 2 342 1 343 2 320 1 268 1 239 1 196 1 43 1 162 1 139 2 373 1 271 4 65 2 21 1 140 1 376 1 242 2 347 2 
203 1 115 1 3 1 116 1 276 4 294 1 278 1 359 1 8 2 358 1 316 1 334 4 98 1 254 2 231 4 73 2 53 1 300 2 125 2 101 1 74 1 214 1 366 1 259 1 157 1 76 2 342 1 267 2 320 1 268 1 239 1 196 1 221 1 43 1 162 1 271 4 65 2 21 1 140 1 376 1 242 2 
203 1 3 1 116 1 276 5 294 1 278 1 359 1 358 1 8 3 316 1 334 4 98 1 231 4 53 1 73 3 300 2 155 1 101 1 126 1 74 1 214 1 33 1 259 1 157 1 76 3 342 1 343 2 320 1 268 1 239 1 196 1 43 1 162 1 139 2 373 1 65 2 21 1 271 5 140 1 376 1 242 2 347 2 
203 1 3 1 116 1 276 5 294 1 278 1 359 1 358 1 8 3 316 1 334 4 98 1 231 4 53 1 73 3 300 2 155 1 101 1 126 1 74 1 214 1 33 1 259 1 157 1 76 3 342 1 343 2 320 1 268 1 239 1 196 1 43 1 162 1 139 2 373 1 65 2 21 1 271 5 140 1 376 1 242 2 347 2 
203 1 115 1 3 1 116 1 276 4 278 1 359 1 8 2 358 1 334 4 316 1 98 1 254 2 231 4 73 2 53 1 300 2 125 2 101 1 74 1 214 1 259 1 157 1 76 2 342 1 267 2 320 1 268 1 196 1 239 1 43 1 162 1 271 4 65 2 21 1 140 1 376 1 346 1 242 2 
0 2 245 1 348 1 148 2 172 1 6 1 207 1 353 8 355 2 68 1 209 1 316 1 179 1 181 1 180 2 100 2 51 2 364 7 187 1 189 1 190 1 127 1 191 4 78 3 79 2 195 2 342 1 319 1 133 2 62 1 321 1 269 1 86 1 324 2 374 2 376 1 110 8 328 1 307 2 
348 1 167 1 25 1 148 1 45 1 171 1 250 1 47 1 316 1 280 1 49 1 123 1 180 3 100 1 51 1 103 1 127 1 191 2 340 1 195 1 342 1 109 1 39 1 240 1 86 1 374 1 376 1 328 2 307 1 
329 1 224 2 245 1 25 1 148 1 103 1 191 2 193 1 171 1 195 1 158 1 18 1 132 1 39 2 86 3 154 1 251 1 280 1 374 1 123 1 49 2 180 6 51 1 100 1 328 3 307 1 
224 1 349 1 167 1 148 2 25 11 45 1 225 3 171 4 6 1 173 1 152 1 298 1 280 2 49 2 123 1 72 1 180 14 100 2 51 1 318 1 189 1 103 11 191 4 340 2 195 2 109 2 39 1 322 3 86 8 371 1 374 2 328 6 307 2 
224 1 0 1 348 1 167 1 148 1 171 1 6 1 150 1 353 1 355 1 119 1 356 1 209 1 316 1 180 2 51 1 100 1 285 1 364 1 189 1 127 1 191 2 78 1 79 1 36 1 216 1 195 1 342 2 370 1 86 1 324 1 374 1 376 2 345 1 110 1 328 1 307 1 244 1 
329 1 0 2 148 3 45 2 6 1 208 2 150 2 97 2 298 4 251 1 154 1 209 1 299 2 49 8 100 3 51 3 256 1 103 7 340 2 262 2 59 2 216 2 158 1 342 3 109 2 18 1 110 3 307 3 224 2 348 1 167 1 25 7 171 7 226 1 353 3 118 1 355 2 356 1 316 1 280 3 123 3 180 20 364 3 189 1 127 1 191 6 36 2 79 2 78 2 195 3 132 1 370 2 321 1 39 4 86 10 324 1 374 3 376 3 328 10 
245 1 25 1 148 1 103 1 191 2 340 1 171 1 195 1 298 1 86 2 374 1 280 1 49 1 164 1 180 2 51 1 100 1 307 1 
245 1 25 1 148 1 45 1 103 1 191 2 171 1 195 1 39 1 290 1 374 1 49 1 123 1 180 2 51 1 100 1 328 2 307 1 
245 1 148 1 25 2 45 1 171 2 298 1 280 1 49 2 123 1 180 4 100 1 51 1 103 2 340 1 191 2 195 1 109 1 39 1 86 2 374 1 328 2 307 1 
25 1 148 1 103 1 191 2 340 1 171 1 195 1 298 1 86 2 374 1 280 1 49 1 164 1 180 2 181 1 51 1 100 1 307 1 
25 1 148 1 45 1 103 1 191 2 171 1 195 1 39 1 290 1 374 1 49 1 123 1 180 2 181 1 51 1 100 1 328 2 307 1 
148 1 25 2 45 1 171 2 298 1 280 1 49 2 123 1 181 1 180 4 100 1 51 1 103 2 340 1 191 2 195 1 109 1 39 1 86 2 374 1 328 2 307 1 
148 1 25 2 45 1 171 2 298 1 280 1 49 2 123 1 180 4 100 1 51 1 103 2 340 1 191 2 195 1 109 1 39 1 86 2 374 1 328 2 307 1 
224 1 0 1 148 1 6 1 150 1 353 1 355 1 180 2 51 1 100 1 364 1 189 1 191 2 79 1 36 1 59 1 78 1 216 1 195 1 342 1 370 1 86 1 324 1 374 1 376 1 110 1 328 1 307 1 
224 1 0 1 148 1 6 1 353 1 355 1 180 2 51 1 100 1 364 1 189 1 191 2 77 1 79 1 36 1 78 1 216 1 195 1 108 1 342 1 86 1 324 1 374 1 376 1 92 1 110 1 328 1 307 1 
167 1 148 1 25 2 45 1 171 2 298 1 280 1 49 2 123 1 180 4 100 1 51 1 103 2 340 1 191 2 195 1 109 1 39 1 86 2 374 1 328 2 307 1 
0 1 45 1 25 2 148 1 171 2 150 1 208 1 353 1 355 1 298 1 280 1 123 1 49 2 180 4 51 1 100 1 364 1 103 2 190 1 340 1 191 2 36 1 59 1 79 1 78 1 216 1 195 1 342 1 109 1 370 1 39 1 86 2 374 1 376 1 328 2 110 1 307 1 
348 1 167 1 45 1 148 1 25 1 171 1 298 1 47 1 316 1 280 1 123 1 49 1 180 3 100 1 51 1 365 1 127 1 103 1 191 2 340 1 195 1 342 1 109 1 240 1 86 2 374 1 376 1 328 1 307 1 
2 1 148 2 45 3 225 2 46 2 173 1 313 1 298 3 48 2 280 3 49 6 123 3 180 19 100 2 260 1 191 4 340 3 15 1 106 1 195 2 109 3 266 1 39 3 322 1 86 9 371 1 222 1 375 1 328 10 307 2 
2 1 148 2 45 2 225 2 46 3 351 1 173 2 29 1 151 1 313 2 298 1 153 1 48 1 280 3 49 1 123 2 180 24 100 2 260 2 191 4 340 3 15 1 195 2 128 1 109 3 266 1 160 1 322 2 86 13 375 1 198 1 328 11 307 2 
2 1 148 2 45 4 225 4 46 3 351 1 173 3 29 1 313 1 298 3 153 1 48 1 280 4 49 4 123 4 180 32 100 2 257 1 260 2 191 4 340 4 15 1 106 1 195 2 128 1 109 4 266 1 39 1 160 1 322 3 86 15 371 1 375 1 198 1 328 17 307 2 
2 1 148 3 45 3 225 4 46 4 351 1 173 3 29 1 151 1 313 1 298 3 153 1 48 1 280 4 49 5 123 3 180 33 100 3 257 1 260 2 191 6 340 4 15 1 106 1 195 3 128 1 109 4 266 1 39 2 160 1 322 3 86 17 371 1 375 1 198 1 328 16 307 3 
329 1 2 1 148 2 45 7 225 4 46 4 351 1 173 2 29 1 151 1 313 1 298 7 251 1 154 1 153 1 48 1 280 8 49 14 123 8 180 52 100 2 318 2 260 1 191 4 340 7 15 1 195 2 158 1 128 1 109 7 18 1 132 1 266 1 39 7 160 1 322 4 86 27 371 2 375 1 198 1 328 25 307 2 
71 1 303 1 10 1 5 1 235 1 11 1 248 1 241 1 211 1 141 1 
314 1 361 1 
137 1 178 1 235 1 11 1 248 1 241 1 211 1 141 1 378 1 
35 1 5 1 235 1 248 1 237 1 289 2 359 1 323 1 71 1 303 1 334 1 241 1 11 1 304 1 211 1 231 1 141 1 111 1 
35 1 5 1 235 1 248 1 237 1 289 2 359 1 323 1 71 1 303 1 334 1 241 1 11 1 304 1 211 1 231 1 141 1 111 1 
35 1 5 1 235 1 248 1 237 1 289 2 359 1 323 1 71 1 303 1 334 1 241 1 11 1 304 1 211 1 231 1 141 1 111 1 
146 1 69 1 104 1 
146 1 69 1 104 1 
204 1 282 1 
204 1 104 1 282 1 
135 1 352 1 
224 1 348 2 67 1 248 1 352 1 314 1 334 1 316 2 11 1 361 1 211 1 231 1 183 1 54 1 127 2 235 1 194 1 342 2 237 1 289 1 135 1 304 1 241 1 376 2 305 1 141 1 165 1 
146 1 69 1 
204 1 104 1 282 1 
0 1 167 1 114 1 148 1 6 1 353 2 355 1 68 1 122 1 316 2 180 2 51 1 100 1 364 2 189 1 191 2 261 1 78 1 79 1 105 1 195 1 342 2 133 2 62 1 86 1 374 1 376 2 110 2 328 1 307 1 293 1 
0 1 364 1 78 1 79 1 172 1 227 1 319 1 353 1 355 1 324 1 88 1 50 1 156 1 110 1 
364 1 0 1 287 1 353 1 355 1 321 1 84 1 296 1 161 1 292 1 87 1 120 1 88 1 138 1 50 1 377 1 55 2 110 1 
0 1 364 2 287 1 190 1 353 2 355 1 321 1 84 1 296 1 161 1 292 1 87 1 120 1 88 1 138 1 50 1 377 1 55 2 110 2 
364 1 0 1 287 1 353 1 355 1 321 1 84 1 296 1 161 1 292 1 87 1 138 1 50 1 377 1 55 2 110 1 363 1 
66 1 
74 1 344 1 278 1 359 1 3 1 116 1 98 1 310 1 140 1 320 1 
74 5 45 2 340 2 3 5 275 1 109 2 17 5 288 2 97 1 30 5 359 5 280 2 139 5 254 10 123 2 
359 1 334 1 271 1 65 1 140 1 231 1 
0 1 273 2 3 2 4 1 116 2 172 1 353 4 355 1 278 2 253 1 210 1 334 3 98 1 231 3 255 2 364 4 74 2 258 2 78 1 79 1 319 1 320 2 324 2 326 1 271 4 65 2 22 1 110 4 379 1 
74 1 344 1 359 1 3 1 193 1 310 1 140 1 
3 1 116 1 278 1 359 2 334 1 98 1 254 1 231 1 74 1 33 1 343 1 320 1 139 1 65 1 271 1 140 1 347 1 
0 3 1 1 45 2 3 8 97 2 334 5 98 4 254 12 255 1 52 1 258 2 340 2 219 2 109 2 17 6 344 1 270 3 162 2 271 5 65 3 110 3 308 2 273 1 350 1 169 2 275 2 116 4 310 1 353 3 355 4 277 2 30 6 278 4 359 8 32 1 280 2 123 2 231 5 74 9 364 3 190 1 78 10 79 3 36 3 369 2 131 2 288 2 320 4 324 1 325 2 139 6 140 2 243 2 379 1 
45 2 225 1 3 4 351 1 116 1 173 1 29 1 30 5 278 1 359 4 153 1 98 1 280 2 254 6 123 2 74 7 340 2 128 1 109 2 17 5 320 1 160 1 322 1 139 3 140 1 
143 1 112 1 348 1 3 2 275 1 116 1 278 1 251 1 334 1 316 1 98 1 280 2 123 1 231 1 155 1 13 1 74 2 127 1 158 1 342 1 18 1 288 2 320 1 63 1 240 1 21 1 376 1 166 1 
224 1 0 1 348 2 148 1 6 1 353 1 150 1 355 1 316 2 180 1 100 1 51 1 364 1 127 2 191 2 59 1 36 1 79 1 78 1 216 1 195 1 342 3 370 1 38 1 240 2 324 1 374 1 376 3 166 1 328 1 110 1 307 1 
329 1 74 1 258 1 3 2 116 1 17 2 320 1 30 2 278 1 359 4 139 2 98 1 254 4 140 2 255 1 
135 1 5 1 11 1 368 1 141 1 
11 1 141 1 28 1 
11 1 141 1 28 1 
11 1 141 1 28 1 
11 1 141 1 93 1 
11 1 141 1 93 1 
11 1 141 1 93 1 
11 1 141 1 
235 1 248 1 
13 1 148 1 191 2 195 1 158 2 266 1 18 1 39 3 298 2 86 5 251 2 280 2 49 5 123 2 180 10 100 1 328 5 307 1 
148 1 191 2 340 1 195 1 266 1 86 2 298 1 280 1 49 1 180 2 100 1 307 1 
45 1 148 1 191 2 340 1 195 1 109 1 266 1 39 1 86 2 298 1 280 1 123 1 49 2 180 4 100 1 328 2 307 1 
202 1 148 3 191 6 106 1 195 3 158 1 266 1 151 1 39 1 298 1 86 1 251 1 49 2 180 3 100 3 328 2 307 3 
329 1 272 1 202 1 148 5 45 3 225 4 173 1 151 2 298 5 251 3 154 1 280 5 49 12 123 5 283 1 180 34 100 5 191 10 340 3 106 1 81 1 195 5 158 3 109 3 18 2 132 1 266 1 39 7 197 1 322 3 86 16 371 1 328 18 307 5 
329 1 148 2 191 4 195 2 158 1 18 1 132 1 151 1 39 2 86 4 298 1 154 1 251 1 280 1 123 1 49 3 180 8 100 2 328 4 307 2 
329 1 193 1 158 1 132 1 18 1 39 2 86 3 154 1 251 1 280 1 49 2 123 1 180 6 328 3 
45 1 148 1 191 2 340 1 195 1 109 1 39 1 197 1 86 2 298 1 280 1 123 1 49 2 180 4 100 1 328 2 307 1 
45 1 225 2 340 1 173 1 109 1 39 1 322 1 86 3 371 1 298 1 280 1 123 1 49 2 180 7 328 4 
329 1 202 1 45 2 148 2 225 2 151 2 298 4 251 2 154 1 280 3 49 9 123 3 180 23 72 1 100 2 318 1 340 2 191 4 195 2 158 2 109 2 18 1 132 1 39 5 322 2 371 1 86 11 328 12 307 2 
225 1 180 1 328 1 
322 1 86 1 180 1 
148 1 45 1 191 2 340 1 195 1 109 1 97 1 39 2 197 1 86 3 298 1 280 1 49 3 123 1 180 6 100 1 328 3 307 1 
148 1 45 2 225 1 351 1 173 1 29 1 298 1 153 1 280 2 123 2 49 2 180 12 100 1 191 2 340 2 195 1 128 1 109 2 266 1 39 1 160 1 322 1 86 6 328 6 307 1 
158 1 18 1 39 1 86 3 298 1 251 1 280 1 123 1 49 2 180 6 328 3 
202 1 148 1 191 2 195 1 158 1 132 1 151 1 39 1 86 1 298 1 251 1 154 1 49 2 180 3 100 1 328 2 307 1 
329 1 148 1 225 1 351 1 173 1 154 1 251 1 280 1 123 1 49 2 180 8 100 1 191 2 195 1 158 1 266 1 132 1 18 1 39 2 322 1 86 4 328 4 307 1 
329 1 148 2 225 2 351 1 173 1 298 1 251 1 154 1 280 2 123 1 49 3 180 11 100 2 191 4 340 1 195 2 158 1 109 1 18 1 132 1 266 1 39 2 197 1 322 1 86 6 371 1 328 5 307 2 
148 2 45 2 225 1 351 1 173 1 29 1 298 1 153 1 280 2 123 2 49 1 180 13 100 2 191 4 340 2 195 2 128 1 109 2 266 1 197 1 160 1 322 1 86 6 328 7 307 2 
329 1 148 3 45 1 225 1 351 1 173 1 29 1 151 1 298 2 251 1 154 1 153 1 280 3 123 2 49 5 180 17 100 3 191 6 340 2 195 3 158 1 128 1 109 2 18 1 132 1 266 1 39 3 197 1 160 1 322 1 86 10 328 7 307 3 
329 1 148 1 225 1 351 1 173 1 154 1 251 1 280 1 123 1 49 2 180 8 100 1 191 2 195 1 158 1 266 1 132 1 18 1 39 2 322 1 86 4 328 4 307 1 
148 1 45 2 225 1 351 1 173 1 29 1 298 1 153 1 280 2 123 2 49 2 180 12 100 1 191 2 340 2 195 1 128 1 109 2 266 1 39 1 160 1 322 1 86 6 328 6 307 1 
148 3 45 1 225 1 351 1 173 1 29 1 151 1 298 1 153 1 280 2 49 1 123 1 180 12 100 3 191 6 340 2 195 3 128 1 109 2 266 1 197 1 160 1 322 1 86 7 328 5 307 3 
148 3 45 1 225 1 351 1 173 1 29 1 151 1 298 2 153 1 280 2 123 1 49 4 180 12 100 3 191 6 340 2 106 1 195 3 128 1 109 2 266 1 39 2 160 1 322 1 86 7 328 5 307 3 
158 3 132 1 18 1 39 3 298 3 86 3 154 2 251 3 280 1 123 1 49 6 180 7 328 4 
148 3 45 1 225 1 351 1 173 1 29 1 151 1 298 1 153 1 280 2 49 1 123 1 180 12 100 3 191 6 340 2 106 1 195 3 128 1 109 2 266 1 160 1 322 1 86 7 328 5 307 3 
224 1 43 1 316 1 376 1 342 1 236 1 117 1 
224 1 75 1 265 1 342 1 117 1 236 1 177 1 43 1 316 1 89 1 376 1 184 1 
0 1 364 4 145 1 190 1 324 1 78 1 79 1 172 1 331 1 319 1 110 4 353 4 355 1 
364 2 0 1 273 1 36 1 79 1 78 1 130 1 353 2 7 1 355 2 124 1 142 1 256 1 110 2 
0 1 364 1 287 1 87 1 324 1 377 1 55 1 110 1 353 1 355 1 
0 1 68 1 321 1 364 2 190 1 261 1 78 1 79 1 110 2 353 2 355 1 
364 4 0 2 145 1 273 1 190 1 79 2 78 3 172 1 319 1 353 5 355 2 269 1 68 1 324 1 179 1 110 5 
364 4 0 2 145 1 273 1 190 1 79 2 78 3 172 1 319 1 353 5 355 2 68 1 324 1 179 1 24 1 110 5 
0 1 364 1 193 1 324 1 78 1 79 1 172 1 319 1 110 1 353 1 355 1 
224 1 364 1 0 1 348 1 127 1 78 1 79 1 36 1 216 1 342 2 353 1 150 1 355 1 209 1 324 1 316 1 376 2 110 1 
224 1 0 1 348 2 203 1 273 1 150 1 353 1 355 1 209 1 316 2 364 1 127 1 36 2 79 2 78 3 216 1 342 2 268 1 325 1 21 1 376 2 110 1 308 1 
224 1 0 1 348 2 203 1 273 1 331 1 353 2 355 1 209 1 316 2 364 2 127 1 36 2 79 2 78 3 216 1 108 1 342 2 268 1 325 1 21 1 376 2 110 2 308 1 
364 3 0 1 273 1 234 1 79 1 36 1 78 4 331 1 131 1 353 3 355 1 270 1 359 1 324 1 162 1 334 2 325 1 271 1 140 1 284 1 231 2 110 3 308 1 
364 3 0 1 273 1 79 1 36 1 78 4 331 1 219 1 131 1 353 3 355 1 270 1 359 1 324 1 162 1 334 2 325 1 271 1 140 1 231 2 110 3 308 1 
0 1 364 1 187 1 110 1 353 1 355 1 
364 6 0 2 187 1 1 1 190 1 36 1 79 2 78 3 207 1 130 1 133 1 353 7 355 3 321 1 68 1 269 1 230 1 324 2 179 1 142 1 110 7 
329 1 224 2 0 1 348 1 167 1 25 1 148 2 171 1 353 1 208 1 150 1 355 1 251 1 154 1 209 1 122 1 316 1 280 1 123 1 49 2 180 6 51 2 100 2 364 1 103 1 127 1 190 1 191 4 78 1 79 1 36 1 262 1 59 1 216 1 195 2 158 1 342 2 18 1 132 1 370 1 39 2 86 3 374 2 376 2 328 3 110 1 307 2 
169 1 3 1 116 2 310 1 353 1 277 1 278 2 359 1 334 3 98 2 231 3 183 1 74 1 364 1 78 2 219 1 131 1 320 2 344 1 270 1 324 1 162 1 271 2 65 1 140 1 243 1 110 1 379 1 
364 2 0 1 187 1 1 1 190 1 36 1 79 1 78 2 131 1 353 2 355 2 52 1 110 2 
224 1 364 1 0 1 348 1 127 1 78 1 79 1 36 1 216 1 342 2 108 1 353 1 355 1 209 1 324 1 316 1 376 2 110 1 
364 1 0 1 273 1 1 1 36 1 79 1 78 1 130 1 353 1 355 2 230 1 142 1 110 1 
224 1 367 1 372 1 301 1 332 1 
224 1 203 1 367 2 301 2 170 1 332 2 174 1 268 1 239 1 359 1 70 1 372 1 162 1 334 2 21 1 140 1 183 1 231 2 200 1 
114 1 372 1 301 1 316 1 105 1 376 1 342 1 332 1 293 1 
70 1 372 1 174 1 
27 1 217 1 61 1 23 1 306 1 185 1 312 1 338 1 
215 1 311 1 217 4 61 4 220 1 312 3 31 1 362 1 327 1 44 2 23 2 306 1 185 2 338 1 
27 1 60 1 217 2 61 2 312 1 297 1 9 1 44 1 23 1 306 1 185 1 338 1 
27 1 217 3 311 2 61 3 312 1 31 1 327 2 306 1 23 1 91 1 185 1 338 1 
85 2 121 1 82 1 312 2 
41 1 27 1 217 1 61 1 306 1 338 1 
27 1 217 2 44 1 61 2 23 1 306 1 185 1 232 1 312 1 338 1 
107 1 
27 1 217 1 61 1 23 1 306 1 185 1 312 1 338 1 
193 1 23 1 185 1 312 1 
217 1 61 1 23 1 306 1 185 1 312 1 338 1 
159 1 149 1 217 1 
27 1 217 3 311 2 61 3 37 1 312 1 31 1 327 1 306 1 23 1 185 1 338 1 
217 2 44 1 61 2 23 1 306 1 185 1 312 1 201 1 338 1 
215 1 27 1 217 1 129 1 61 1 312 1 292 1 87 1 306 1 55 1 338 1 
27 1 217 1 61 1 23 1 306 1 312 1 338 1 
27 1 217 1 61 1 23 2 306 1 185 1 338 1 
309 1 27 1 80 1 217 2 61 2 312 1 19 1 23 1 306 2 338 2 
215 1 94 1 27 1 217 3 61 3 312 2 362 1 44 2 23 1 306 1 185 1 232 1 338 1 
287 1 27 1 217 2 61 2 312 1 161 1 292 1 87 1 136 1 44 1 23 1 306 1 185 1 55 2 338 1 
215 1 27 1 217 4 61 4 312 2 40 1 362 1 44 2 23 1 306 2 185 1 338 2 201 1 
27 1 217 3 311 1 61 3 312 1 44 1 306 1 23 1 185 1 232 1 338 1 
215 1 362 1 220 1 312 1 
23 1 312 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
150 1 97 1 247 1 338 2 288 1 153 1 102 2 361 4 29 1 340 1 131 2 342 1 319 5 36 2 7 1 371 1 345 9 327 1 80 6 215 1 12 2 166 2 282 2 195 3 197 1 198 1 20 9 91 1 
150 1 97 1 338 2 247 1 288 1 153 1 102 2 361 4 29 1 340 1 131 2 342 1 319 5 36 2 7 1 371 1 345 9 327 1 80 6 215 1 12 2 166 2 282 2 195 3 197 1 198 1 20 9 91 1 
150 1 97 1 338 2 247 1 288 1 153 1 102 2 361 5 29 1 340 1 131 2 342 1 319 6 36 2 7 1 371 1 345 10 327 1 80 7 215 1 12 2 166 2 282 2 195 4 197 1 198 1 20 10 91 1 
150 1 97 1 338 2 247 1 288 1 153 1 102 1 361 3 29 1 340 1 131 2 342 1 319 4 36 2 7 1 371 1 345 7 327 1 80 4 215 1 12 2 166 2 282 2 195 2 197 1 20 7 91 1 
345 4 97 1 80 3 338 1 288 1 102 2 361 2 29 1 166 1 131 1 319 3 282 1 195 1 36 1 371 1 198 1 91 1 20 4 
345 2 327 1 289 1 165 1 29 1 12 1 166 1 131 1 319 1 282 1 36 1 138 1 7 1 371 1 91 1 20 2 
345 3 80 1 361 1 29 1 12 1 166 2 131 2 342 1 319 2 195 1 371 1 91 1 20 3 
122 1 97 1 338 1 288 1 153 1 102 2 361 4 29 1 131 2 342 1 319 5 36 1 298 1 371 1 345 9 80 7 12 1 166 2 282 1 195 3 197 1 198 1 20 9 91 1 
122 1 97 1 338 1 288 1 153 1 102 2 361 4 29 1 131 2 342 1 319 5 36 1 298 1 371 1 345 9 80 7 12 1 166 2 282 1 195 3 197 1 198 1 20 9 91 1 
265 1 110 1 60 1 
265 1 201 1 38 2 
31 2 258 2 159 2 324 1 172 2 239 2 115 1 363 2 
1 1 360 2 248 1 49 1 294 1 295 1 363 2 31 2 51 1 322 1 159 2 134 2 231 1 160 1 324 1 297 1 206 1 55 2 37 1 374 1 377 1 258 3 164 1 236 2 212 1 112 1 43 1 239 2 115 1 61 2 330 1 240 1 172 3 64 1 308 1 173 1 357 1 
31 1 258 1 224 1 159 1 144 1 172 1 239 1 115 1 335 1 363 1 
265 1 224 1 152 1 178 1 179 1 249 1 30 1 363 1 31 1 159 1 258 2 144 1 239 2 115 1 60 1 172 2 245 1 284 1 263 1 335 2 264 1 
265 1 258 2 224 1 144 1 152 1 178 2 249 2 115 1 239 2 60 1 363 2 30 1 31 2 159 2 172 2 245 1 284 1 264 1 335 2 
120 1 178 1 249 1 369 1 13 1 
265 1 118 1 178 2 249 2 369 1 60 1 217 1 13 1 
178 1 249 1 369 1 
258 1 224 1 144 1 178 1 249 1 115 1 239 1 13 1 363 1 31 1 159 1 172 1 284 1 335 1 
265 1 
265 1 326 1 118 1 178 2 249 2 369 1 60 1 13 1 
265 1 178 5 349 1 249 5 60 1 157 1 280 1 156 1 13 2 202 1 50 2 203 2 194 1 118 1 381 1 334 2 233 1 369 2 21 1 
110 1 324 1 
258 2 277 1 239 2 363 1 31 1 107 1 159 1 324 2 172 2 
48 1 344 1 174 1 
374 1 258 1 164 1 236 1 360 1 112 1 49 1 294 1 295 1 330 1 134 1 324 1 172 1 135 1 173 1 357 1 
31 3 32 1 258 3 159 1 324 1 172 3 239 3 363 3 
31 1 258 1 144 1 172 1 239 1 335 1 363 1 
31 1 258 1 159 1 107 1 172 1 277 1 239 1 335 1 363 1 
152 1 248 1 249 1 49 1 294 1 295 1 51 1 107 1 159 2 160 1 206 1 55 2 258 4 164 1 212 1 112 1 115 1 61 1 172 4 117 1 173 1 264 1 357 1 311 1 360 1 178 1 30 1 363 3 130 1 31 3 32 1 322 1 134 1 324 1 37 1 374 1 377 1 187 1 236 1 43 1 239 3 330 1 240 1 245 1 335 2 
354 1 31 1 258 2 32 1 324 1 172 2 263 1 239 2 363 1 
265 1 311 1 258 3 123 1 187 1 152 1 178 1 249 1 239 3 363 3 30 1 31 3 32 2 159 1 107 1 172 3 245 1 335 1 264 1 
258 2 239 2 363 2 31 2 32 1 107 1 159 1 172 2 344 1 174 1 
374 1 258 1 164 1 236 1 360 1 112 1 49 1 294 1 295 1 330 1 134 1 324 1 172 1 173 1 357 1 
223 1 258 1 164 1 236 1 360 1 112 1 49 1 294 1 295 1 14 1 330 1 134 1 324 1 172 1 173 1 
248 1 103 1 48 2 296 1 364 1 51 1 322 1 230 1 33 1 231 2 160 1 35 1 366 1 206 1 55 2 344 2 256 1 325 1 377 2 350 1 43 1 61 4 220 1 174 2 
31 1 258 1 151 1 152 1 172 1 239 1 335 1 363 1 
374 1 311 1 258 2 164 1 236 1 112 1 360 1 49 1 295 1 294 1 239 1 363 1 330 1 31 1 32 1 134 1 172 2 173 1 174 1 357 1 
258 5 311 1 239 5 363 4 354 1 31 4 72 1 32 2 107 1 159 1 260 1 324 1 172 5 263 1 
31 2 258 2 151 1 144 1 172 2 239 2 335 1 363 2 
184 1 332 1 
184 1 332 1 
98 1 3 1 
98 1 3 1 
98 1 3 1 
184 1 332 1 226 1 
184 1 332 1 226 1 
184 1 332 1 162 1 
121 1 184 2 98 1 332 2 69 1 3 1 
184 1 332 1 226 1 
184 1 332 1 209 1 
184 1 332 1 209 1 
184 1 332 1 209 1 
265 1 184 2 378 2 125 1 178 2 11 1 69 1 237 2 127 2 249 2 27 1 104 1 15 1 323 2 332 2 75 1 45 3 299 1 139 2 
0 1 287 1 178 1 127 1 249 1 27 1 363 2 31 2 323 1 324 1 162 1 204 1 139 1 210 1 184 1 258 2 378 1 348 1 278 1 239 2 332 1 45 1 172 2 89 1 
338 1 282 1 36 1 
282 1 36 1 138 1 
158 1 338 2 36 3 138 1 315 1 92 1 
338 1 36 2 114 1 138 1 315 1 92 1 
338 1 36 2 138 1 315 1 92 2 
65 1 265 2 0 1 96 1 313 1 100 2 178 5 227 1 201 1 249 5 128 2 364 1 270 1 202 3 203 1 50 1 33 1 230 1 204 1 256 1 369 1 38 3 257 1 210 1 81 2 301 1 60 1 13 4 194 2 118 1 381 1 334 1 
265 5 313 2 100 6 178 9 227 1 201 3 249 9 128 6 157 1 71 1 364 3 202 8 50 2 203 2 33 3 230 3 204 4 256 3 369 6 38 9 257 3 274 1 347 1 214 5 301 2 60 1 13 7 241 1 149 1 194 6 118 1 120 5 381 1 334 2 93 1 
65 1 265 3 313 1 100 2 178 3 201 2 249 3 128 2 157 1 364 1 270 1 202 3 203 1 50 1 33 1 230 1 204 1 256 1 38 4 257 1 81 1 301 1 60 1 13 2 194 2 334 1 
65 1 265 4 313 1 100 4 178 4 201 3 249 4 128 4 157 1 364 2 270 1 202 5 203 1 50 1 33 2 230 2 204 2 256 2 38 7 257 2 347 1 81 2 301 1 60 1 13 3 149 1 194 4 334 1 93 1 
330 1 140 1 110 1 
330 1 167 1 
252 1 
330 1 112 1 
140 2 330 3 300 1 164 1 17 1 112 1 
330 1 164 1 112 1 
330 1 63 1 
325 2 377 3 211 1 99 1 23 1 101 1 350 3 351 1 61 7 33 1 230 1 231 4 242 1 232 1 305 1 136 2 367 1 
325 2 377 3 211 1 99 1 23 1 101 1 350 3 351 1 61 7 33 1 230 1 231 4 242 1 232 1 305 1 136 2 367 1 
325 2 377 3 211 1 99 1 23 1 101 1 350 3 351 1 61 7 33 1 230 1 168 1 231 4 242 1 232 1 305 1 136 2 367 1 
99 1 23 2 248 1 101 5 250 3 267 1 129 1 181 4 364 3 51 1 365 1 230 4 33 4 160 1 231 16 232 2 367 1 136 3 55 2 256 3 257 3 325 5 377 15 211 2 143 1 350 10 43 1 351 2 61 31 242 1 169 1 305 1 307 1 337 1 
99 1 23 1 248 2 101 1 51 2 365 1 33 1 230 1 160 2 231 5 34 1 232 1 136 2 367 1 55 4 325 3 377 4 211 1 213 1 350 4 43 2 351 1 61 9 305 1 
338 1 360 1 24 1 49 1 29 1 294 1 131 1 319 1 158 1 134 1 36 2 182 1 207 1 138 1 371 1 370 1 345 2 185 1 80 1 236 1 188 1 190 1 12 1 166 1 219 1 304 1 282 1 88 1 20 2 91 1 
338 1 360 1 24 1 228 1 49 1 29 1 294 1 131 1 319 1 158 1 134 1 36 2 182 1 207 1 138 1 371 1 370 1 345 3 236 1 80 2 188 1 190 1 12 1 166 1 219 1 282 1 88 1 90 1 20 3 310 1 
338 1 360 1 24 1 228 1 49 1 29 1 294 1 319 1 158 1 134 1 36 2 138 1 371 1 370 1 345 2 236 1 80 2 188 1 190 1 12 1 219 1 282 1 88 1 90 1 20 2 
345 1 68 1 379 1 236 1 112 1 360 1 24 2 238 1 49 1 12 2 294 1 166 1 330 1 131 1 52 1 134 1 46 1 88 2 108 1 173 1 370 2 310 1 20 1 
338 1 360 1 24 1 49 1 294 1 131 1 158 1 134 1 36 2 182 1 207 1 138 1 370 1 345 1 236 1 188 1 190 1 12 1 166 1 219 1 304 1 282 1 88 1 90 1 20 1 91 1 
53 1 
286 2 152 1 201 2 249 5 49 1 293 2 155 2 294 1 202 2 50 1 203 1 251 1 5 2 52 1 254 1 56 1 57 1 258 1 10 1 112 1 60 2 118 3 172 1 221 2 173 2 263 1 264 1 265 3 175 1 313 1 360 2 178 5 25 2 314 1 179 1 362 4 30 1 132 2 133 1 134 2 369 6 271 1 38 2 375 1 379 1 236 2 82 1 83 1 239 1 330 1 194 2 381 1 245 1 334 1 335 1 
265 2 286 1 152 1 178 3 179 1 314 1 249 3 362 2 30 1 251 1 369 2 375 1 258 1 326 1 82 1 83 1 239 1 60 2 118 1 172 1 245 1 263 1 264 1 335 1 
265 2 375 1 258 1 152 1 82 1 178 2 83 1 314 1 179 1 249 2 362 3 239 1 60 2 30 1 251 1 172 1 245 1 221 1 263 1 335 1 264 1 
265 2 286 1 152 1 178 3 25 1 179 1 314 1 249 3 362 3 30 1 251 1 369 2 375 1 258 1 326 1 82 1 83 1 239 1 60 2 118 1 172 1 245 1 221 1 263 1 264 1 335 1 
286 4 152 1 201 2 249 5 155 2 293 2 202 1 251 1 50 1 203 1 159 1 5 2 57 1 258 2 115 1 60 4 303 1 172 2 118 3 221 3 263 1 264 1 265 4 175 1 224 1 178 5 25 4 314 1 179 1 28 1 362 5 363 1 30 1 31 1 132 2 369 7 375 1 234 1 326 1 144 1 82 1 380 1 83 1 145 1 239 2 194 1 245 1 381 1 284 1 334 1 335 2 
286 2 152 1 201 2 249 4 155 2 293 2 202 1 50 1 203 1 251 1 5 2 56 1 57 1 258 1 60 3 172 1 118 2 221 2 263 1 264 1 265 4 175 1 178 4 25 2 314 1 179 1 362 4 30 1 132 2 369 4 38 2 375 1 82 1 83 1 239 1 194 1 245 1 381 1 334 1 335 1 
286 2 265 3 175 1 152 1 178 4 25 2 201 2 179 1 314 1 249 4 362 4 293 2 155 2 30 1 202 1 132 2 203 1 251 1 50 1 5 2 369 4 57 1 375 1 234 1 258 1 380 1 82 1 83 1 145 1 239 1 60 3 118 2 194 1 172 1 245 1 381 1 221 2 334 1 263 1 264 1 335 1 
286 2 265 3 175 1 152 1 178 4 25 2 201 2 179 1 314 1 249 4 362 4 293 2 155 2 30 1 202 1 132 2 203 1 251 1 50 1 5 2 369 4 57 1 375 1 234 1 258 1 380 1 82 1 83 1 145 1 239 1 60 3 118 2 194 1 172 1 245 1 381 1 221 2 334 1 263 1 264 1 335 1 
286 2 265 3 175 1 312 1 152 1 178 4 25 2 179 1 314 1 249 4 362 4 293 2 155 2 229 1 30 1 202 1 203 1 251 1 50 1 368 2 369 4 38 2 235 1 375 1 258 1 380 1 82 1 83 1 239 1 60 3 87 2 118 2 194 1 172 1 245 1 381 1 221 2 334 1 263 1 264 1 335 1 
265 3 286 3 175 1 152 1 178 4 25 3 201 2 179 1 314 1 249 4 362 5 293 2 155 2 30 1 202 1 132 2 203 1 50 1 251 1 5 2 369 5 57 1 234 1 375 1 258 1 380 1 82 1 83 1 145 1 239 1 60 3 303 1 118 2 194 1 172 1 381 1 245 1 221 3 334 1 263 1 264 1 335 1 
265 3 286 3 175 1 152 1 178 4 25 3 201 2 179 1 314 1 249 4 362 5 293 2 155 2 30 1 202 1 132 2 203 1 50 1 251 1 5 2 369 5 57 1 234 1 375 1 258 1 380 1 82 1 83 1 145 1 239 1 60 3 303 1 118 2 194 1 172 1 381 1 245 1 221 3 334 1 263 1 264 1 335 1 
286 2 152 1 249 4 155 2 293 2 202 1 50 1 203 1 251 1 56 1 258 1 60 3 172 1 118 2 221 2 263 1 264 1 265 3 175 1 178 4 25 2 314 1 179 1 362 4 30 1 368 2 369 4 38 2 375 1 235 1 82 1 83 1 239 1 87 2 194 1 245 1 381 1 334 1 335 1 
325 2 377 3 110 1 99 1 248 1 48 1 350 2 43 1 296 1 351 1 61 6 51 1 322 1 33 1 230 1 231 3 160 1 324 2 232 1 305 1 136 1 206 1 367 1 55 2 344 1 174 1 
246 1 1 1 248 2 101 1 48 11 250 3 129 1 181 3 364 1 51 2 322 1 230 2 33 1 160 2 231 8 324 1 205 1 206 2 163 1 55 4 256 2 344 4 257 2 325 1 377 6 9 1 350 2 43 2 352 1 61 14 240 1 307 1 174 11 
311 1 1 1 360 1 248 1 291 1 49 1 295 1 294 1 180 1 363 1 31 1 51 1 32 1 322 1 134 1 160 1 231 1 324 1 135 1 206 1 163 1 55 2 344 1 374 1 258 2 377 1 164 1 236 1 112 1 43 1 239 1 44 1 61 2 330 1 240 1 172 2 173 1 357 1 
1 1 99 1 339 1 248 3 101 4 48 7 49 2 294 2 295 2 51 3 160 3 161 2 206 3 163 1 55 6 344 7 256 2 257 2 258 3 164 2 212 2 112 2 350 8 351 1 61 20 18 1 305 1 172 3 173 1 357 2 174 7 311 1 360 3 268 2 316 1 363 1 364 2 31 1 32 1 322 3 33 3 134 3 230 3 231 10 324 2 232 1 136 1 367 1 77 2 374 2 325 4 377 10 236 3 43 3 239 1 330 2 240 1 193 2 90 1 
1 1 360 8 248 2 154 1 292 1 49 2 296 1 294 2 363 1 31 1 32 1 51 2 322 2 134 8 52 1 160 2 231 1 206 2 55 4 183 1 185 1 258 1 79 1 377 1 236 7 379 1 112 2 43 2 239 1 192 1 61 2 330 3 240 1 170 1 16 1 172 1 90 1 64 2 173 2 
248 1 48 1 363 1 364 1 31 1 51 1 322 1 159 1 107 1 230 1 33 1 160 1 231 1 206 1 163 1 55 2 344 1 256 1 257 1 325 1 258 1 377 2 350 1 43 1 239 1 302 1 61 3 172 1 174 1 
248 1 101 1 48 1 350 1 43 1 296 1 61 2 51 1 322 1 230 1 160 1 231 2 35 1 206 1 55 2 344 1 256 1 174 1 
325 1 377 2 248 1 48 1 103 1 350 1 43 1 296 1 61 2 364 1 51 1 322 1 33 1 160 1 206 1 55 2 344 1 174 1 
325 1 377 2 248 1 101 1 48 2 350 2 43 1 296 1 61 4 364 1 51 1 322 1 33 1 230 1 160 1 231 2 206 1 55 2 344 2 256 1 174 2 257 1 
248 1 101 1 48 1 350 1 43 1 61 2 51 1 322 1 230 1 160 1 231 2 16 1 35 1 206 1 55 2 344 1 256 1 174 1 
325 1 377 2 248 1 48 1 103 1 350 1 43 1 61 2 364 1 51 1 322 1 33 1 160 1 16 1 206 1 55 2 344 1 174 1 
325 1 377 2 248 1 101 1 48 2 350 2 43 1 61 4 364 1 51 1 322 1 33 1 230 1 160 1 231 2 16 1 206 1 55 2 344 2 256 1 174 2 257 1 
325 1 377 2 248 1 101 1 48 2 350 2 43 1 61 4 364 1 51 1 322 1 33 1 230 1 160 1 231 2 206 1 55 2 344 2 256 1 174 2 257 1 
1 1 360 1 248 1 49 1 295 1 294 1 51 1 322 1 134 1 231 1 160 1 324 1 206 1 55 2 374 1 258 1 377 1 164 1 212 1 236 1 112 1 43 1 61 2 330 1 240 1 172 1 173 1 357 1 
223 1 1 1 359 1 360 1 248 1 49 1 295 1 294 1 51 1 322 1 134 1 231 1 160 1 324 1 206 1 55 2 258 1 377 1 164 1 236 1 112 1 43 1 61 2 14 1 330 1 240 1 172 1 173 1 
325 1 377 2 248 1 101 1 48 2 350 2 43 1 61 4 364 1 51 1 322 1 33 1 230 1 160 1 231 2 206 1 163 1 55 2 344 2 256 1 174 2 257 1 
360 1 248 1 101 1 48 2 49 1 295 1 294 1 364 1 51 1 322 1 33 1 230 1 134 1 231 2 160 1 206 1 55 2 344 2 256 1 257 1 374 1 325 1 377 2 185 1 258 1 164 1 212 1 236 1 112 1 350 2 43 1 61 4 330 1 193 1 172 1 174 2 357 1 
248 1 101 1 48 1 363 1 364 1 31 1 51 1 322 1 73 1 33 1 159 1 107 1 230 1 160 1 231 2 206 1 163 1 55 2 256 1 344 1 257 1 377 1 258 1 350 1 43 1 239 1 61 3 172 1 174 1 
126 2 2 1 248 2 101 3 250 1 129 1 181 2 364 3 51 2 230 3 33 3 160 2 231 9 55 4 256 3 257 3 325 3 377 10 259 1 213 1 275 1 276 1 113 1 328 1 350 6 43 2 61 19 171 1 307 1 261 2 
66 1 124 1 126 1 248 3 101 2 250 2 181 2 364 2 106 1 51 3 365 2 33 2 74 1 230 3 160 3 231 14 55 6 256 3 257 3 325 2 377 12 259 2 213 1 275 1 276 1 113 1 328 2 350 4 279 1 329 1 43 3 61 26 307 2 261 4 
66 1 124 1 99 1 126 1 248 3 101 4 250 3 129 1 105 1 181 4 364 4 106 1 51 3 365 1 74 1 230 5 33 5 160 3 231 20 232 1 136 1 367 1 55 6 256 4 257 4 325 4 377 21 259 2 213 1 275 1 276 1 113 1 328 1 329 1 279 1 350 8 43 3 351 1 61 41 171 1 305 1 307 3 261 4 
66 1 124 1 99 1 126 1 248 4 101 3 250 3 129 1 105 1 181 4 364 3 106 1 51 4 365 2 74 1 230 5 33 4 160 4 231 20 232 1 136 1 367 1 55 8 256 4 257 4 325 4 377 18 259 2 213 1 275 1 276 1 113 1 328 1 329 1 279 1 350 7 43 4 351 1 61 38 171 1 305 1 307 3 261 4 
66 1 124 1 99 1 126 1 248 2 101 7 250 4 129 2 181 4 364 7 106 1 51 2 365 1 74 1 230 8 33 8 160 2 231 27 232 1 136 1 367 1 55 4 256 7 257 7 325 7 377 25 259 1 213 1 275 1 276 1 113 1 328 1 329 1 279 1 350 14 43 2 351 1 352 2 61 52 305 1 307 2 261 4 
184 1 378 1 125 1 332 1 323 1 243 1 11 1 69 1 127 1 139 1 
348 1 162 1 
184 1 378 1 58 1 332 1 323 1 127 1 8 1 139 1 62 1 
265 1 184 1 378 1 125 1 178 1 11 1 69 1 237 1 27 1 249 1 127 1 104 1 15 1 323 1 332 1 75 1 45 2 139 1 
265 1 184 1 378 1 125 1 178 1 11 1 69 1 237 1 27 1 249 1 127 1 104 1 15 1 323 1 332 1 75 1 45 2 139 1 
265 1 184 1 378 1 125 1 178 1 11 1 69 1 237 1 27 1 249 1 127 1 104 1 15 1 323 1 332 1 75 1 45 2 139 1 
116 1 121 1 226 1 
116 1 121 1 226 1 
177 1 209 1 
121 1 177 1 209 1 
89 1 278 1 
0 1 287 1 178 1 249 1 127 1 104 1 363 2 31 2 323 1 324 1 162 1 204 1 139 1 210 1 258 2 184 1 378 1 348 1 237 1 278 1 239 2 13 1 332 1 172 2 45 1 89 1 262 1 
116 1 226 1 
121 1 177 1 209 1 
176 1 266 1 67 1 1 1 360 2 248 1 154 1 49 1 294 1 51 1 322 1 134 2 160 1 231 1 206 1 163 1 55 2 258 2 79 1 377 1 236 2 112 1 41 1 43 1 239 2 61 2 330 1 85 1 240 1 172 2 64 2 
185 1 338 1 236 2 360 2 225 1 188 1 49 1 294 1 353 1 158 1 219 1 331 1 134 2 282 1 36 2 207 1 138 1 90 1 370 1 
94 1 338 1 236 1 360 1 225 1 188 1 49 1 294 1 158 1 219 1 134 1 282 1 36 2 207 1 138 1 90 1 370 1 
236 1 379 1 112 1 360 1 49 1 294 1 353 1 330 1 134 1 52 1 306 1 108 1 173 1 370 1 
338 1 236 1 360 1 225 1 188 1 49 1 294 1 353 1 158 1 219 1 331 1 134 1 282 1 36 2 207 1 138 1 90 1 370 1 
281 1 
202 1 265 1 110 1 194 1 349 1 60 1 21 1 
265 2 178 1 201 1 249 1 202 1 203 1 50 1 132 1 5 1 369 1 38 1 57 1 60 1 194 1 118 1 381 1 334 1 
200 1 100 3 201 3 49 2 249 2 294 1 202 4 50 2 203 2 256 1 257 1 300 1 164 1 112 1 355 1 167 2 118 1 173 1 265 3 313 1 360 1 178 2 268 1 269 1 128 3 318 1 364 1 134 1 230 1 33 1 369 2 38 6 140 1 39 1 236 1 330 4 84 1 86 1 194 3 381 2 245 1 196 1 334 2 
265 5 313 1 66 1 100 5 178 1 201 3 249 1 250 1 128 5 202 8 181 1 364 2 203 2 50 2 106 1 74 1 230 2 33 2 256 2 369 1 38 6 257 2 142 1 186 1 10 1 279 1 329 1 60 2 218 1 118 1 194 5 307 1 381 2 196 2 334 2 
224 1 178 1 249 1 363 1 202 2 203 1 50 1 31 1 321 1 230 2 33 1 159 1 232 1 234 1 258 1 186 1 144 1 351 1 115 1 239 1 172 1 305 1 194 2 381 1 196 2 334 1 284 1 335 1 
265 1 349 1 60 1 202 1 50 1 203 1 194 1 381 1 334 1 21 1 
265 5 186 1 100 5 201 5 268 1 128 5 364 2 202 5 230 2 33 2 194 5 196 2 256 2 38 10 257 2 
265 1 118 1 178 1 249 1 369 1 60 1 
95 1 313 2 360 4 178 3 49 1 249 3 70 1 294 1 157 1 202 2 203 2 50 2 133 1 134 4 52 1 254 1 369 4 373 2 236 4 379 1 10 2 112 1 146 1 330 1 194 2 118 2 381 1 173 2 334 2 
360 1 248 1 49 1 294 1 295 1 363 2 31 2 51 1 322 1 134 1 159 2 160 1 324 1 206 1 55 2 37 1 374 1 377 1 258 3 164 1 236 1 212 1 112 1 43 1 239 2 115 1 61 1 330 1 240 1 172 3 173 1 357 1 
265 4 313 1 100 2 10 1 201 2 128 2 60 2 202 1 50 1 203 1 194 2 136 1 381 1 334 1 38 4 
4 1 378 1 127 1 
4 1 378 1 127 1 
378 1 11 1 278 1 127 1 372 1 
4 1 378 1 127 1 
378 1 119 1 127 1 
378 1 119 1 127 1 
378 1 119 1 127 1 
378 1 127 1 
184 1 332 1 
325 2 377 4 99 1 248 2 101 1 350 3 43 2 351 1 61 8 51 2 365 1 33 1 230 1 231 4 160 2 232 1 305 1 136 1 367 1 55 4 
325 2 377 3 110 1 99 1 350 2 351 1 61 6 230 1 33 1 231 3 232 1 305 1 136 1 367 1 
325 1 377 2 248 1 101 1 350 2 43 1 61 4 364 1 51 1 33 1 230 1 160 1 231 2 55 2 256 1 272 1 257 1 
325 1 377 4 101 1 250 1 350 2 61 7 129 1 364 1 181 2 33 1 230 1 231 3 307 1 256 1 257 1 
99 1 248 2 101 4 250 2 129 1 181 2 364 2 51 2 365 2 230 3 33 3 231 11 160 2 232 2 205 1 136 1 367 1 55 4 256 2 257 2 325 5 377 12 350 9 43 2 351 2 352 1 61 23 305 1 336 1 
181 1 377 1 61 1 
231 1 250 1 61 1 
325 2 377 3 248 1 101 1 268 1 350 3 43 1 61 6 364 1 51 1 230 1 33 1 160 1 231 3 55 2 256 1 272 1 257 1 
66 1 248 1 101 1 250 1 181 1 364 2 51 1 106 1 74 1 230 2 33 2 160 1 231 6 55 2 256 2 257 2 325 1 377 6 213 1 279 1 329 1 350 2 43 1 61 12 307 1 
325 1 377 3 101 1 350 2 351 1 61 6 230 1 33 1 231 3 232 1 305 1 
325 1 377 2 99 1 248 1 101 1 350 2 43 1 351 1 61 3 51 1 365 1 231 1 160 1 232 1 367 1 55 2 336 1 
325 3 377 5 213 1 248 1 101 2 350 5 43 1 351 2 61 10 51 1 321 1 230 2 33 2 160 1 231 5 232 2 305 1 55 2 
213 1 248 1 101 1 350 1 43 1 61 2 51 1 230 1 160 1 231 2 55 2 256 1 
325 1 377 2 213 1 248 1 101 1 350 2 43 1 61 4 364 1 51 1 33 1 230 1 160 1 231 2 55 2 256 1 257 1 
325 1 377 2 213 1 248 3 101 1 350 2 43 3 351 1 61 3 51 3 365 1 160 3 231 1 232 1 171 1 55 6 336 1 
99 1 248 5 101 5 267 1 250 3 129 1 181 4 364 3 51 5 365 2 230 5 33 5 160 5 231 16 232 3 136 1 367 1 55 10 256 3 272 1 257 3 325 7 377 18 213 1 143 1 350 12 43 5 351 3 61 34 169 1 305 2 171 1 307 1 336 1 
99 1 248 1 250 1 181 1 51 1 33 1 230 1 74 1 160 1 231 4 232 1 136 1 367 1 55 2 325 2 377 4 213 1 350 2 43 1 351 1 61 8 305 1 307 1 
99 1 248 2 101 1 250 1 129 1 181 2 51 2 33 1 74 1 230 2 160 2 231 6 232 1 136 1 367 1 55 4 256 1 272 1 257 1 325 2 377 5 213 1 350 3 43 2 351 1 61 11 305 1 307 1 
66 1 99 1 248 3 101 1 250 1 181 1 364 2 51 3 106 1 365 1 74 1 230 3 33 3 160 3 231 9 232 1 136 1 367 1 55 6 256 2 272 1 257 2 325 3 377 10 213 1 279 1 329 1 350 4 43 3 351 1 61 19 305 1 307 1 
66 1 99 1 248 3 101 2 250 1 181 1 364 1 51 3 106 1 365 1 74 1 230 3 33 2 160 3 231 10 232 1 136 1 367 1 55 6 256 2 272 1 257 2 325 3 377 7 213 1 279 1 329 1 350 5 43 3 351 1 61 17 305 1 307 1 
99 1 248 1 250 1 181 1 51 1 33 1 230 1 74 1 160 1 231 4 232 1 136 1 367 1 55 2 325 2 377 4 213 1 350 2 43 1 351 1 61 8 305 1 307 1 
66 1 248 1 101 1 250 1 181 1 364 2 51 1 106 1 74 1 230 2 33 2 160 1 231 6 55 2 256 2 257 2 325 1 377 6 213 1 279 1 329 1 350 2 43 1 61 12 307 1 
66 1 99 1 248 4 101 2 250 1 181 1 364 1 106 1 51 4 365 2 74 1 230 3 33 2 160 4 231 10 232 1 136 1 367 1 55 8 256 2 272 1 257 2 325 3 377 8 213 1 279 1 329 1 350 5 43 4 351 1 61 18 305 1 307 1 
66 1 248 4 101 3 250 1 181 1 364 2 106 1 51 4 365 2 74 1 230 3 33 2 160 4 231 9 55 8 256 3 257 3 325 3 377 7 213 1 279 1 329 1 350 6 43 4 61 16 171 1 307 1 
325 3 377 4 99 2 101 3 350 6 351 3 61 7 33 1 230 1 231 3 232 3 305 1 367 1 
66 1 99 1 248 4 101 1 250 1 181 1 364 1 106 1 51 4 365 2 74 1 230 3 33 2 160 4 231 10 232 1 136 1 367 1 55 8 256 2 257 2 325 3 377 8 213 1 279 1 329 1 350 4 43 4 351 1 61 18 305 1 171 1 307 1 
354 1 258 1 324 1 172 1 26 1 239 1 263 1 
258 1 22 1 189 1 26 1 239 1 354 1 148 1 324 1 172 1 333 1 263 1 199 1 
330 1 110 1 52 1 134 1 379 1 236 1 112 1 360 1 49 1 173 1 294 1 
258 2 164 1 236 1 112 1 360 1 49 1 295 1 239 1 294 1 363 1 330 1 31 1 32 1 134 1 324 1 172 2 173 1 357 1 
373 1 258 2 164 2 236 1 152 1 112 2 360 1 49 1 295 1 239 2 294 1 30 1 363 2 341 1 330 3 31 1 32 1 134 1 324 1 172 2 63 1 335 1 357 1 
373 1 258 2 164 2 236 2 152 1 112 2 360 2 49 1 295 1 239 2 294 1 30 1 363 2 14 1 341 1 330 3 31 1 32 1 134 2 324 1 172 2 63 1 335 1 273 1 
265 1 224 1 360 1 178 2 249 2 49 1 294 1 363 1 341 1 31 1 159 1 134 1 137 1 369 1 140 1 373 1 258 1 164 1 236 1 144 1 112 1 42 1 239 1 115 1 60 1 330 4 167 1 172 1 245 1 63 1 284 1 335 1 
265 1 224 1 360 1 178 2 249 2 49 1 269 1 294 1 363 1 341 1 31 1 159 1 134 1 369 1 140 1 373 1 258 1 164 1 236 1 144 1 112 1 239 1 115 1 60 1 330 4 167 1 172 1 245 1 63 1 284 1 335 1 
134 1 236 1 360 1 49 1 292 1 294 1 
183 1 300 1 185 1 164 1 236 6 360 7 112 2 154 1 292 1 49 3 294 2 192 1 317 1 330 3 134 7 170 1 356 1 54 1 64 1 90 1 173 2 
67 1 99 1 360 1 248 2 48 1 49 1 295 1 294 1 363 1 31 1 51 2 32 1 322 2 33 1 230 1 134 1 231 3 160 2 161 1 324 2 232 1 136 1 367 1 206 2 163 1 55 4 344 1 374 1 325 2 377 3 258 2 185 1 164 1 236 1 212 1 112 1 350 2 43 2 351 1 239 1 61 6 330 1 193 1 305 1 172 2 174 1 357 1 
249 3 202 4 50 2 203 2 159 1 258 1 349 1 351 1 115 1 60 2 13 1 167 1 172 1 118 1 305 1 173 1 21 1 265 2 224 1 360 1 178 3 269 1 363 1 318 1 31 1 321 1 134 1 230 2 33 2 232 1 369 2 140 1 39 1 186 1 236 1 144 1 239 1 146 1 330 2 86 1 194 5 245 1 381 2 196 2 334 2 284 1 335 1 
140 1 300 1 185 1 164 1 236 2 200 1 360 2 112 1 292 1 49 2 294 1 330 2 134 2 
185 1 236 4 379 1 360 4 112 1 49 1 294 1 330 1 134 4 52 1 76 1 173 1 273 1 
373 1 164 1 236 2 360 2 112 1 49 2 294 1 330 1 134 2 18 1 356 1 54 1 208 1 283 1 
219 1 134 1 236 1 282 1 36 1 360 1 138 1 49 1 173 1 294 1 
185 1 176 1 236 2 360 2 112 1 154 1 49 1 294 1 330 1 134 2 90 1 
373 1 183 1 185 1 379 1 236 4 360 5 112 2 154 1 49 2 294 2 330 3 52 1 134 5 170 1 76 1 173 1 
373 1 183 1 185 1 379 1 236 4 360 5 112 2 154 1 49 2 294 2 330 3 52 1 134 5 76 1 173 1 78 1 
258 2 164 1 236 1 112 1 360 1 49 1 295 1 239 1 294 1 363 1 14 1 330 1 31 1 32 1 134 1 324 1 172 2 173 1 
373 1 300 1 164 1 236 1 360 1 112 1 49 2 294 1 317 1 330 1 134 1 356 1 54 1 
253 1 324 1 290 1 191 1 109 1 
265 1 224 1 152 1 290 1 178 2 249 2 363 1 30 1 31 1 159 1 253 1 109 1 258 1 111 1 187 1 144 1 59 1 191 1 239 1 115 1 60 1 147 1 13 1 172 1 245 1 284 1 264 1 335 2 
258 1 266 1 290 1 41 1 239 1 85 1 253 1 172 1 109 1 
111 1 147 1 109 1 
319 1 110 1 29 1 371 1 
345 1 131 1 319 1 29 1 371 1 166 1 20 1 
88 1 12 1 20 1 
345 3 358 1 141 1 327 2 29 1 166 1 131 1 319 1 6 1 371 1 91 1 20 3 
345 2 131 1 319 1 80 1 102 1 29 1 371 1 166 1 20 2 
345 1 131 1 319 1 338 1 282 1 288 1 36 1 361 1 166 1 20 1 91 1 
345 1 131 1 319 1 371 1 166 1 20 1 91 1 
345 1 131 1 29 1 371 2 166 1 20 1 91 1 
346 1 345 2 216 1 166 2 131 2 319 1 285 1 371 1 91 1 20 2 
345 3 80 2 153 1 361 1 29 1 166 1 131 1 319 2 195 1 197 1 371 1 91 1 20 3 
345 2 338 1 80 1 29 1 166 1 131 1 319 1 158 1 282 1 36 2 138 1 371 1 91 1 20 2 222 1 
345 4 80 2 102 1 361 1 29 1 166 2 131 2 319 2 195 1 371 1 198 1 91 1 20 4 
345 1 131 1 319 1 29 1 371 1 166 1 20 1 91 1 
345 4 141 1 327 1 80 2 361 1 29 2 166 1 131 1 319 3 6 1 19 1 195 1 371 2 20 4 
345 2 122 1 40 1 80 1 29 1 166 1 131 1 319 1 343 1 371 1 91 1 20 2 
345 3 141 2 327 2 29 1 166 1 131 1 319 1 6 1 244 1 371 1 91 1 20 3 
376 1 319 2 320 1 309 2 
345 1 131 1 255 1 166 1 20 1 91 1 
345 2 131 1 319 1 80 1 153 1 29 1 371 1 166 1 20 2 91 1 
47 1 
345 1 131 1 319 1 29 1 371 1 166 1 20 1 91 1 
345 3 80 1 327 1 153 1 29 1 166 1 131 1 319 1 371 1 91 1 20 3 
319 1 19 1 195 1 361 1 
319 1 371 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 2 248 1 224 1 278 5 279 1 32 2 210 9 254 9 363 3 332 1 14 2 335 2 366 4 307 1 108 1 18 6 150 1 152 1 111 1 130 2 265 1 134 1 290 1 75 1 159 1 322 1 200 2 51 2 
54 2 248 1 224 1 278 5 279 1 32 2 210 9 254 9 363 3 332 1 14 2 335 2 366 4 307 1 108 1 18 6 150 1 152 1 111 1 130 2 265 1 134 1 290 1 75 1 159 1 322 1 200 2 51 2 
54 2 248 1 224 1 278 6 279 1 32 2 210 10 254 10 363 4 332 1 14 2 335 2 366 5 307 1 108 1 18 7 150 1 152 1 111 1 130 2 265 1 134 1 290 1 75 1 159 1 322 1 200 2 51 2 
54 2 248 1 224 1 278 4 279 1 32 1 210 7 254 7 363 2 332 1 14 2 335 2 366 3 307 1 108 1 18 4 150 1 152 1 111 1 130 2 265 1 134 1 75 1 159 1 322 1 200 2 51 2 
54 1 224 1 278 3 32 2 279 1 290 1 75 1 159 1 363 1 200 1 254 4 210 4 332 1 51 1 335 1 14 1 366 2 18 3 
297 1 247 1 248 1 224 1 111 1 278 1 130 1 75 1 159 1 254 2 210 2 200 1 51 1 335 1 14 1 162 1 
150 1 224 1 278 2 130 1 75 1 159 1 254 3 210 3 363 1 335 2 14 2 366 1 18 1 
54 1 150 1 152 1 224 1 278 5 130 1 279 1 32 2 134 1 290 1 75 1 159 1 200 1 332 1 254 9 210 9 331 1 363 3 51 1 335 2 14 2 366 4 170 1 18 7 
54 1 150 1 152 1 224 1 278 5 130 1 279 1 32 2 134 1 290 1 75 1 159 1 200 1 332 1 254 9 210 9 331 1 363 3 51 1 335 2 14 2 366 4 170 1 18 7 
236 1 212 1 68 1 
212 1 227 1 352 2 
376 1 173 2 369 1 47 2 351 2 202 2 196 2 105 2 
273 1 293 1 274 1 163 1 327 1 4 2 249 1 57 1 31 1 7 1 63 1 64 1 36 1 37 2 189 1 16 1 105 3 40 1 173 2 369 1 153 1 260 1 196 2 345 1 373 2 157 1 376 1 289 2 24 2 348 1 115 1 47 2 380 1 351 2 267 1 202 3 204 1 
376 1 173 1 174 1 47 1 124 1 351 1 202 1 196 1 105 1 341 1 
212 1 68 1 120 1 287 1 47 1 304 1 362 1 25 1 190 1 15 1 367 1 202 1 105 1 341 1 
212 1 173 1 68 1 120 2 196 1 47 1 304 1 362 1 25 1 351 1 190 1 15 2 202 1 105 1 341 1 
144 1 120 1 183 1 15 1 107 1 
212 1 68 1 144 1 93 1 120 2 183 1 324 1 15 2 
144 1 120 1 15 1 
207 1 173 1 174 1 183 1 120 1 196 1 376 1 124 1 47 1 351 1 15 1 202 1 105 1 341 1 
212 1 
212 1 68 1 2 1 144 1 93 1 120 2 183 1 15 2 
368 1 125 1 195 1 212 1 342 1 68 1 343 1 183 2 120 5 22 2 144 2 197 2 177 1 168 1 93 1 15 5 229 2 192 1 325 1 
236 1 369 1 
173 1 369 2 196 1 47 2 291 1 351 1 231 1 202 2 105 2 
201 1 358 1 156 1 
274 1 163 1 369 1 4 1 153 1 7 1 261 1 289 1 64 1 24 1 63 1 380 1 267 1 202 1 16 1 105 1 
274 1 163 1 173 1 84 1 153 1 4 1 196 1 7 1 156 1 61 1 289 1 63 1 64 1 24 1 47 1 380 1 267 1 16 1 202 2 105 2 
173 3 369 1 47 3 351 1 202 3 196 3 105 3 61 1 
173 1 174 1 47 1 202 1 196 1 105 1 341 1 
173 1 47 1 291 1 351 1 231 1 202 1 196 1 105 1 341 1 
293 1 274 1 163 1 327 1 4 1 120 1 249 1 31 1 7 1 61 1 63 1 64 1 37 1 304 1 362 1 189 1 364 1 190 1 15 1 231 1 16 1 105 4 341 1 40 1 20 1 173 3 369 1 84 1 153 1 260 1 196 3 345 1 373 2 376 1 289 1 24 1 115 1 47 3 25 1 380 1 351 2 267 1 202 4 204 1 
173 1 369 1 47 2 313 1 367 1 202 2 196 1 105 2 61 1 
326 1 212 1 173 3 20 1 84 1 120 1 196 3 61 2 47 3 25 1 304 1 362 1 351 1 190 1 15 1 231 1 202 3 105 3 341 1 
173 2 196 2 61 1 156 1 47 2 351 1 231 1 201 1 202 2 105 2 
274 1 163 1 369 1 4 1 153 1 7 1 289 1 64 1 24 1 63 1 380 1 267 1 202 1 16 1 105 1 
274 1 163 1 369 1 4 1 7 1 88 1 289 1 64 1 24 1 63 1 81 1 267 1 202 1 16 1 105 1 
273 2 293 1 327 1 142 1 249 1 97 1 31 1 358 2 100 1 34 1 37 4 228 1 189 1 40 2 86 1 373 2 374 1 131 1 156 2 264 1 158 1 115 1 48 1 201 2 
173 1 243 1 47 1 190 1 202 1 196 1 105 1 341 1 
173 4 369 1 84 1 313 1 196 4 299 1 71 1 61 2 47 5 351 1 231 1 367 1 202 5 105 5 
243 1 173 2 174 1 47 2 202 2 196 2 105 2 341 1 
315 1 251 1 
315 1 251 1 
52 1 233 1 
52 1 233 1 
52 1 233 1 
259 1 315 1 251 1 
259 1 315 1 251 1 
205 1 315 1 251 1 
295 1 52 1 315 2 251 2 308 1 233 1 
259 1 315 1 251 1 
292 1 315 1 251 1 
292 1 315 1 251 1 
292 1 315 1 251 1 
212 1 311 1 95 2 120 2 276 2 5 3 129 2 42 1 315 2 251 2 101 1 318 2 198 2 80 1 191 1 179 1 15 2 308 1 139 1 
141 1 205 1 95 1 77 1 120 1 5 1 276 1 251 1 6 1 15 1 105 2 339 1 309 1 173 2 369 1 315 1 196 2 318 1 198 1 176 1 47 2 202 2 139 1 272 1 
54 1 200 1 51 1 
200 1 297 1 51 1 
102 1 238 1 54 2 320 1 297 1 51 3 
102 1 54 1 320 1 69 1 297 1 51 2 
102 1 54 1 320 2 297 1 51 2 
222 1 144 1 120 5 183 4 97 1 250 1 6 1 34 1 33 1 227 1 361 2 168 2 282 2 15 5 337 1 229 1 339 1 212 2 195 3 68 1 22 1 286 1 374 1 197 1 131 1 176 1 93 1 118 2 137 1 244 1 352 3 325 1 
222 2 144 6 120 9 183 7 121 1 97 3 277 1 34 3 33 2 227 3 361 6 168 6 15 9 337 1 229 2 232 5 107 5 368 1 212 5 195 8 68 1 126 1 22 2 374 3 197 2 131 3 317 1 176 4 136 1 93 1 118 6 137 3 270 1 352 9 325 1 
222 1 183 2 120 3 97 1 250 1 34 1 33 1 227 2 361 2 282 1 168 2 15 3 229 1 368 1 212 3 195 3 68 1 22 1 197 1 374 1 131 1 176 1 244 1 137 1 118 2 352 4 
222 1 120 4 183 3 97 2 250 1 277 1 34 2 33 1 227 3 361 4 282 2 168 4 15 4 229 1 368 1 212 4 195 5 68 1 126 1 22 1 197 1 374 2 131 2 176 2 136 1 118 4 244 1 137 2 352 7 
236 1 163 1 187 1 
163 1 117 1 
219 1 
163 1 7 1 
119 1 163 3 63 1 187 2 7 1 306 1 
163 1 63 1 7 1 
163 1 185 1 
273 4 29 1 40 3 97 1 145 1 316 1 226 1 131 1 89 1 12 2 48 3 334 1 228 2 37 7 116 1 27 1 147 1 
273 4 29 1 40 3 97 1 145 1 316 1 226 1 131 1 89 1 12 2 48 3 334 1 228 2 37 7 116 1 27 1 147 1 
273 4 171 1 29 1 40 3 97 1 145 1 316 1 226 1 131 1 89 1 12 2 48 3 334 1 228 2 37 7 116 1 27 1 147 1 
273 16 293 1 29 1 354 1 143 1 249 1 145 2 97 4 226 5 34 3 12 3 334 1 66 1 37 31 228 5 255 1 189 1 147 2 106 1 40 15 149 4 310 1 316 1 373 2 374 3 131 4 375 3 89 2 46 1 115 1 48 10 116 1 27 2 137 3 
293 2 273 5 29 1 184 1 249 2 97 1 145 1 226 1 12 2 37 9 228 3 334 1 189 2 147 1 40 4 373 4 131 1 132 1 89 1 46 1 115 2 48 4 116 1 27 1 
76 1 274 1 54 1 4 1 297 1 96 1 224 1 278 1 165 1 210 2 254 2 14 1 335 1 83 1 148 1 16 1 18 1 238 1 213 1 130 1 289 1 90 1 24 1 75 1 159 1 200 1 50 1 379 1 51 2 218 1 
76 1 274 1 54 1 4 1 297 1 96 1 224 1 278 1 210 3 254 3 14 1 335 1 83 1 148 1 16 1 18 2 238 1 213 1 130 1 289 1 24 1 159 1 266 1 200 1 50 1 379 1 51 2 161 1 218 1 245 1 
274 1 54 1 4 1 297 1 96 1 224 1 278 1 210 2 254 2 83 1 148 1 16 1 18 2 238 1 213 1 130 1 289 1 24 1 159 1 266 1 50 1 200 1 51 2 161 1 218 1 
274 1 163 1 4 1 85 1 370 1 96 2 112 1 7 1 130 2 289 1 253 1 64 1 24 1 135 1 188 1 50 2 254 1 210 1 335 1 14 1 16 1 148 2 245 1 
76 1 274 1 54 1 4 1 297 1 96 1 165 1 210 1 254 1 14 1 335 1 83 1 148 1 16 1 238 1 213 1 130 1 289 1 24 1 75 1 266 1 200 1 50 1 379 1 51 2 218 1 
146 1 
274 1 221 2 275 2 220 1 222 1 3 2 4 2 144 6 7 1 9 1 227 2 64 2 188 1 190 1 15 5 230 2 229 1 16 1 105 1 193 1 341 1 234 2 195 2 68 1 22 1 240 1 197 1 287 1 288 4 289 2 24 2 73 1 25 1 28 1 202 1 352 2 163 1 120 5 301 2 302 1 304 1 362 1 168 2 305 1 367 1 169 1 212 2 172 1 85 1 214 2 47 1 178 1 93 3 325 1 181 1 
220 1 275 1 2 1 120 3 144 2 302 1 304 1 362 1 305 1 190 1 15 3 367 1 105 1 341 1 287 1 288 2 47 1 25 1 93 1 28 1 202 1 181 1 
220 1 221 1 2 1 144 1 120 3 302 1 304 1 362 1 305 1 190 1 15 3 367 1 105 1 341 1 212 1 68 1 287 1 288 3 47 1 25 1 93 1 28 1 202 1 181 1 
220 1 275 1 221 1 2 1 120 3 144 2 302 1 304 1 362 1 305 1 190 1 15 3 367 1 105 1 341 1 212 1 68 1 214 1 287 1 288 3 47 1 25 1 93 1 28 1 202 1 181 1 
275 4 220 1 221 4 182 1 2 1 3 2 144 7 58 1 227 2 190 1 15 5 229 1 230 2 105 1 341 1 234 2 195 1 68 5 22 1 197 1 287 1 288 6 73 1 25 1 28 1 202 1 120 5 78 1 301 2 302 1 123 1 362 1 304 1 305 1 168 1 367 1 212 5 214 4 43 1 47 1 178 1 93 3 325 1 181 1 
220 1 275 2 221 2 3 2 144 4 227 2 190 1 15 4 229 1 230 2 105 1 341 1 234 2 195 1 68 1 22 1 197 1 287 1 288 4 73 1 25 1 28 1 202 1 352 2 120 4 301 2 302 1 362 1 304 1 305 1 168 1 367 1 212 2 172 1 214 2 47 1 178 1 93 2 325 1 181 1 
221 2 275 2 220 1 3 2 144 4 120 4 58 1 78 1 301 2 227 2 302 1 304 1 362 1 168 1 305 1 190 1 15 4 230 2 229 1 367 1 105 1 341 1 234 2 212 1 195 1 68 1 22 1 214 2 43 1 197 1 287 1 288 4 73 1 47 1 178 1 25 1 93 2 28 1 202 1 325 1 181 1 
221 2 275 2 220 1 3 2 144 4 120 4 58 1 78 1 301 2 227 2 302 1 304 1 362 1 168 1 305 1 190 1 15 4 230 2 229 1 367 1 105 1 341 1 234 2 212 1 195 1 68 1 22 1 214 2 43 1 197 1 287 1 288 4 73 1 47 1 178 1 25 1 93 2 28 1 202 1 325 1 181 1 
221 2 275 2 220 1 3 2 223 1 144 4 120 4 79 2 302 1 82 2 304 1 362 1 168 1 305 1 190 1 15 4 229 1 367 1 105 1 341 1 234 2 212 1 195 1 68 1 22 1 154 1 214 2 43 1 197 1 287 1 288 4 73 1 47 1 49 1 25 1 93 2 28 1 202 1 352 2 325 1 181 1 
220 1 275 3 221 3 3 2 120 4 144 5 58 1 78 1 301 2 227 2 302 1 123 1 304 1 362 1 168 1 305 1 190 1 15 4 230 2 229 1 367 1 105 1 341 1 234 2 212 1 195 1 68 1 22 1 43 1 214 3 197 1 287 1 288 5 73 1 47 1 178 1 25 1 93 2 28 1 202 1 325 1 181 1 
220 1 275 3 221 3 3 2 120 4 144 5 58 1 78 1 301 2 227 2 302 1 123 1 304 1 362 1 168 1 305 1 190 1 15 4 230 2 229 1 367 1 105 1 341 1 234 2 212 1 195 1 68 1 22 1 43 1 214 3 197 1 287 1 288 5 73 1 47 1 178 1 25 1 93 2 28 1 202 1 325 1 181 1 
220 1 275 2 221 2 3 2 144 4 190 1 15 4 229 1 105 1 341 1 234 2 195 1 68 1 22 1 197 1 287 1 288 4 73 1 25 1 28 1 202 1 352 2 120 4 79 2 302 1 362 1 304 1 82 2 305 1 168 1 367 1 212 1 172 1 214 2 47 1 49 1 93 2 325 1 181 1 
273 3 293 1 236 1 29 1 40 3 369 2 327 1 249 1 97 1 145 1 31 1 358 1 373 2 131 1 156 1 12 1 264 1 48 2 115 1 37 6 334 1 228 2 189 1 116 1 27 1 201 1 
293 2 273 8 206 1 327 2 208 1 249 2 97 1 31 1 226 1 358 11 209 1 186 1 34 1 36 1 228 1 37 14 189 2 106 1 194 1 40 6 149 3 369 1 310 1 345 1 373 4 374 2 131 2 156 11 375 3 48 2 115 2 137 2 201 4 
293 1 273 1 274 1 163 1 206 1 327 1 4 1 249 1 31 1 7 1 61 1 63 1 64 1 36 1 37 2 189 1 16 1 105 2 40 1 173 1 369 1 257 1 84 1 153 1 196 1 373 2 345 1 261 1 242 1 289 1 24 1 47 1 115 1 380 1 267 1 269 1 201 1 202 2 
273 10 274 2 94 2 327 3 4 3 145 1 97 3 7 2 226 4 61 1 12 1 64 1 63 2 334 1 228 4 189 3 16 2 105 3 17 1 153 2 196 1 345 1 156 7 289 3 24 3 115 3 116 1 27 1 202 3 201 7 293 3 29 1 206 1 163 2 249 3 298 1 31 3 358 7 34 2 36 1 37 20 211 2 40 10 173 1 369 2 84 1 372 1 260 2 373 6 44 2 374 2 131 3 47 1 48 8 266 1 380 2 267 2 137 2 53 2 
293 2 273 1 274 2 163 3 327 2 4 7 249 2 31 2 7 2 61 1 64 2 36 1 37 2 188 1 189 2 284 1 16 2 105 1 40 1 173 1 312 1 70 1 85 1 196 1 373 4 345 1 23 1 90 1 289 8 91 1 24 8 319 1 217 1 264 1 348 2 47 1 115 2 266 1 202 1 
293 1 273 1 206 1 327 1 249 1 97 1 31 1 358 1 34 1 228 1 37 3 189 1 231 1 105 1 19 1 40 2 173 1 196 1 373 2 374 1 131 1 156 1 48 1 115 1 47 1 351 1 137 1 201 1 202 1 
293 1 273 2 327 1 142 1 249 1 31 1 226 1 358 1 373 2 374 1 131 1 156 1 264 1 48 1 115 1 37 2 189 1 201 1 
293 1 40 2 327 1 249 1 97 1 31 1 358 1 373 2 100 1 156 1 34 1 264 1 48 1 115 1 228 1 37 2 189 1 201 1 
273 2 293 1 327 1 249 1 97 1 31 1 358 2 226 1 34 1 37 4 228 1 189 1 40 2 374 1 373 2 131 1 156 2 264 1 115 1 48 2 137 1 201 2 
293 1 273 2 327 1 142 1 249 1 31 1 226 1 358 1 373 2 374 1 131 1 156 1 48 1 115 1 37 2 189 1 284 1 201 1 
293 1 40 2 327 1 249 1 97 1 31 1 358 1 373 2 100 1 156 1 34 1 48 1 115 1 228 1 37 2 189 1 284 1 201 1 
273 2 293 1 327 1 249 1 97 1 31 1 358 2 226 1 34 1 37 4 228 1 189 1 284 1 40 2 374 1 373 2 131 1 156 2 115 1 48 2 137 1 201 2 
273 2 293 1 327 1 249 1 97 1 31 1 358 2 226 1 34 1 37 4 228 1 189 1 40 2 374 1 373 2 131 1 156 2 115 1 48 2 137 1 201 2 
273 1 293 1 274 1 163 1 327 1 4 1 249 1 31 1 7 1 63 1 64 1 36 1 37 2 189 1 16 1 105 1 40 1 369 1 153 1 260 1 373 2 345 1 289 1 24 1 115 1 380 1 267 1 202 1 
273 1 293 1 274 1 163 1 327 1 4 1 249 1 31 1 7 1 63 1 64 1 81 1 36 1 37 2 189 1 16 1 105 1 40 1 369 1 373 2 345 1 88 1 289 1 24 1 115 1 26 1 267 1 202 1 
273 2 293 1 206 1 327 1 249 1 97 1 31 1 358 2 226 1 34 1 37 4 228 1 189 1 40 2 374 1 373 2 131 1 156 2 115 1 48 2 137 1 201 2 
273 2 293 1 274 1 163 1 327 1 4 1 249 1 97 1 31 1 226 1 358 2 7 1 34 1 63 1 228 1 37 4 189 1 16 1 105 1 40 2 153 1 260 1 374 1 373 2 131 1 156 2 289 1 90 1 24 1 48 2 115 1 380 1 267 1 137 1 201 2 202 1 53 1 
293 1 273 2 206 1 327 1 249 1 97 1 31 1 226 1 358 1 34 1 37 3 189 1 231 1 105 1 40 1 173 1 196 1 373 2 374 1 131 1 156 1 74 1 48 1 115 1 47 1 351 1 137 1 202 1 201 1 
293 2 273 9 353 1 294 1 249 2 98 1 59 1 97 3 226 3 8 2 34 3 359 2 281 1 228 3 37 19 189 2 106 1 149 2 40 10 310 1 110 1 373 4 374 3 131 3 132 1 375 1 72 1 115 2 48 6 137 3 
293 3 273 14 140 1 353 1 30 1 249 3 98 1 97 2 226 2 8 1 34 2 359 4 35 1 281 2 228 2 37 26 333 1 303 1 189 3 106 2 40 12 149 2 110 1 373 6 374 3 131 3 132 1 375 2 199 1 72 2 46 2 48 4 115 3 137 3 
273 20 140 1 97 5 145 1 59 1 98 1 226 4 8 1 12 1 281 2 228 4 333 1 334 1 189 3 106 3 149 4 109 1 110 1 72 1 199 1 115 3 116 1 27 1 293 3 353 1 29 1 30 1 249 3 34 4 359 4 35 1 37 41 303 1 40 21 310 1 374 4 373 6 131 5 132 1 375 3 46 1 48 8 137 4 
293 4 273 20 29 1 140 1 353 1 30 1 249 4 98 1 59 1 145 1 97 4 226 3 8 1 34 3 12 1 359 4 35 1 281 2 334 1 303 1 333 1 228 4 37 38 189 4 106 3 149 4 40 18 310 1 109 1 110 1 373 8 374 4 131 5 132 1 375 3 199 1 72 1 46 2 115 4 48 7 116 1 27 1 137 4 
293 2 273 27 29 1 140 1 353 1 30 1 249 2 98 1 145 1 97 8 226 7 8 1 186 2 34 7 12 1 359 4 35 1 281 1 334 1 303 1 333 1 228 7 37 52 189 2 106 2 149 4 40 25 310 2 110 1 373 4 374 7 131 8 132 1 375 4 199 1 72 1 46 1 115 2 48 14 116 1 27 1 137 7 
318 1 198 1 311 1 95 1 276 1 42 1 256 1 315 1 251 1 308 1 
205 1 141 1 
318 1 45 1 198 1 95 1 65 1 336 1 276 1 315 1 251 1 
212 1 311 1 95 1 120 1 276 1 5 2 129 1 42 1 315 1 251 1 318 1 198 1 80 1 191 1 179 1 15 1 308 1 139 1 
212 1 311 1 95 1 120 1 276 1 5 2 129 1 42 1 315 1 251 1 318 1 198 1 80 1 191 1 179 1 15 1 308 1 139 1 
212 1 311 1 95 1 120 1 276 1 5 2 129 1 42 1 315 1 251 1 318 1 198 1 80 1 191 1 179 1 15 1 308 1 139 1 
295 1 259 1 155 1 
295 1 259 1 155 1 
292 1 87 1 
295 1 292 1 87 1 
77 1 272 1 
141 1 205 1 95 1 77 1 120 1 183 1 276 1 5 1 251 1 6 1 99 1 80 1 15 1 105 2 339 1 309 1 173 2 369 1 129 1 315 1 196 2 318 1 198 1 176 1 47 2 202 2 272 1 
259 1 155 1 
295 1 292 1 87 1 
293 1 273 1 274 1 163 1 246 1 206 1 327 1 4 2 164 1 225 1 249 1 31 1 7 1 10 1 36 1 37 2 189 1 16 1 105 2 40 1 70 1 373 2 345 1 289 2 24 2 319 1 348 2 47 2 115 1 350 1 202 2 
274 1 237 1 238 1 54 1 297 1 4 2 241 1 289 2 90 1 24 2 266 1 200 1 50 1 51 2 283 1 379 1 83 1 16 1 218 1 
274 1 238 1 54 1 297 1 4 1 241 1 289 1 24 1 266 1 200 1 50 1 51 2 323 1 379 1 83 1 16 1 218 1 
274 1 237 1 163 1 1 1 4 1 85 1 112 1 7 1 289 1 64 1 24 1 50 1 188 1 16 1 
274 1 237 1 238 1 54 1 297 1 4 1 241 1 289 1 24 1 266 1 200 1 50 1 51 2 283 1 379 1 83 1 16 1 218 1 
215 1 
236 1 195 1 212 1 342 1 68 1 168 1 343 1 
144 1 120 1 301 1 227 1 168 1 15 1 229 1 230 1 195 1 212 2 68 1 22 1 197 1 178 1 93 1 325 1 352 1 
274 2 163 4 94 1 222 1 4 1 120 2 144 2 97 1 329 1 7 1 34 1 227 3 361 3 64 1 63 1 187 1 330 1 168 3 15 2 229 2 16 1 306 1 285 1 212 3 195 4 67 1 314 1 22 2 374 1 197 2 131 1 262 1 289 1 24 1 377 1 25 1 93 1 117 2 137 1 118 3 352 6 325 2 
222 1 30 1 120 1 144 1 97 2 34 2 62 1 227 3 361 5 35 1 333 1 303 1 168 5 15 1 229 2 193 1 106 1 195 8 149 1 212 5 68 2 151 1 22 2 197 2 374 2 131 2 114 1 375 1 199 1 349 2 93 1 118 5 137 2 352 6 325 2 
207 1 120 1 58 1 145 1 97 1 60 1 124 1 334 1 168 2 15 1 229 1 105 1 341 1 195 2 173 1 174 1 151 1 22 1 196 1 197 1 131 2 376 1 349 2 47 1 27 1 351 1 202 1 325 1 
212 1 195 1 342 1 68 1 343 1 22 1 197 1 168 1 229 1 325 1 
212 2 195 2 97 1 374 1 131 1 34 1 227 2 361 2 168 2 137 1 118 2 352 4 
212 1 68 1 120 1 144 1 93 1 15 1 
274 1 163 1 222 2 4 4 144 4 120 3 7 1 9 1 13 2 64 2 188 1 168 2 15 3 229 2 16 1 193 2 368 1 195 2 258 1 22 2 85 1 240 1 197 2 113 1 347 1 289 4 24 4 93 2 325 1 
293 1 274 1 163 1 327 1 4 1 249 1 31 1 7 1 64 1 63 1 37 1 189 1 16 1 105 3 40 1 173 2 369 1 153 1 260 1 196 2 345 1 373 2 376 1 289 1 24 1 115 1 47 2 380 1 351 2 267 1 202 3 204 1 
195 1 212 2 222 1 68 1 22 1 197 1 227 1 361 1 168 1 229 1 352 2 325 1 193 1 
318 1 95 1 38 1 
318 1 95 1 38 1 
318 1 77 1 95 1 356 1 42 1 
318 1 95 1 38 1 
39 1 318 1 95 1 
39 1 318 1 95 1 
39 1 318 1 95 1 
318 1 95 1 
315 1 251 1 
273 4 293 2 29 1 40 4 249 2 97 1 145 1 226 1 373 4 131 1 12 1 46 1 48 3 115 2 334 1 37 8 228 2 189 2 116 1 27 1 
236 1 273 3 29 1 40 3 145 1 97 1 131 1 12 1 48 2 228 2 334 1 37 6 116 1 27 1 
293 1 273 2 40 2 249 1 97 1 373 2 374 1 226 1 131 1 34 1 48 2 115 1 228 1 37 4 189 1 137 1 180 1 
273 3 149 2 40 4 310 1 97 1 374 1 226 1 131 1 34 1 375 1 48 2 228 1 37 7 137 1 106 1 
273 11 293 2 29 1 249 2 145 2 97 3 226 4 209 1 34 2 186 1 12 1 334 1 37 23 228 5 189 2 40 12 149 2 310 1 374 2 373 4 131 3 375 2 46 2 48 9 115 2 378 1 116 1 27 2 137 2 
40 1 149 1 37 1 
273 1 375 1 37 1 
293 1 273 3 40 3 94 1 249 1 97 1 373 2 374 1 226 1 131 1 34 1 115 1 48 3 37 6 228 2 189 1 137 1 180 1 
293 1 273 6 30 1 249 1 97 2 226 1 34 2 35 1 37 12 333 1 303 1 228 1 189 1 106 1 40 6 149 1 373 2 374 2 131 2 132 1 375 1 199 1 115 1 48 2 137 2 
273 3 40 3 97 1 145 1 226 1 131 1 48 2 334 1 37 6 228 1 27 1 
273 1 293 1 29 1 40 2 249 1 145 1 226 1 373 2 46 1 48 2 115 1 228 1 378 1 37 3 116 1 189 1 27 1 
293 1 273 5 40 5 249 1 145 2 97 2 373 2 226 2 60 1 131 2 132 1 115 1 48 5 228 3 37 10 334 1 189 1 27 2 
293 1 273 2 249 1 373 2 374 1 226 1 131 1 132 1 115 1 48 1 37 2 189 1 
293 1 273 2 40 2 249 1 97 1 373 2 374 1 226 1 131 1 34 1 132 1 48 2 115 1 228 1 37 4 189 1 137 1 
293 3 273 1 40 2 249 3 59 1 145 1 373 6 226 1 132 1 46 1 115 3 48 2 378 1 37 3 228 1 189 3 27 1 
293 5 273 16 29 1 143 1 249 5 145 3 59 1 97 5 226 5 34 3 12 1 334 2 255 1 66 1 37 34 228 7 189 5 106 1 40 18 149 4 310 1 373 10 374 3 131 5 132 1 375 3 46 2 115 5 48 12 378 1 116 1 27 3 137 3 180 1 
293 1 273 4 29 1 249 1 97 1 145 1 12 1 35 1 37 8 228 2 334 1 189 1 106 1 40 4 149 1 373 2 131 1 132 1 375 1 115 1 48 2 116 1 27 1 
293 2 273 6 29 1 249 2 97 1 145 1 226 1 12 1 35 1 334 1 228 2 37 11 189 2 106 1 40 5 149 2 310 1 373 4 374 1 131 2 132 1 375 1 115 2 48 3 116 1 27 1 137 1 180 1 
293 3 273 9 29 1 30 1 249 3 145 1 97 3 226 1 34 2 12 1 35 1 334 1 37 19 333 1 303 1 228 3 189 3 106 1 40 10 149 1 373 6 374 2 131 3 132 1 375 1 199 1 46 1 115 3 48 4 116 1 27 1 137 2 180 1 
293 3 273 10 29 1 30 1 249 3 145 1 97 2 226 2 34 1 12 1 35 1 334 1 37 17 333 1 303 1 228 3 189 3 106 1 40 7 149 1 373 6 374 2 131 3 132 1 375 1 199 1 46 1 115 3 48 5 116 1 27 1 137 2 180 1 
293 1 273 4 29 1 249 1 97 1 145 1 12 1 35 1 37 8 228 2 334 1 189 1 106 1 40 4 149 1 373 2 131 1 132 1 375 1 115 1 48 2 116 1 27 1 
293 1 273 6 30 1 249 1 97 2 226 1 34 2 35 1 37 12 333 1 303 1 228 1 189 1 106 1 40 6 149 1 373 2 374 2 131 2 132 1 375 1 199 1 115 1 48 2 137 2 
293 4 273 10 29 1 30 1 249 4 145 1 97 2 226 2 34 1 12 1 35 1 334 1 37 18 333 1 303 1 228 3 189 4 106 1 40 8 149 1 373 8 374 2 131 3 132 1 375 1 199 1 46 2 115 4 48 5 116 1 27 1 137 2 180 1 
293 4 273 9 30 1 249 4 59 1 97 2 226 3 34 2 35 1 37 16 333 1 303 1 228 3 189 4 106 1 40 7 149 1 373 8 374 3 131 3 132 1 375 1 199 1 46 2 115 4 48 6 137 3 
273 3 29 1 40 4 97 1 145 3 226 3 131 1 48 6 37 7 228 3 334 1 116 2 27 3 
293 4 273 10 29 1 30 1 249 4 145 1 59 1 97 2 226 1 34 1 12 1 35 1 334 1 37 18 333 1 303 1 228 3 189 4 106 1 40 8 149 1 373 8 374 2 131 3 132 1 375 1 199 1 46 2 115 4 48 4 116 1 27 1 137 2 
369 1 47 1 313 1 365 1 202 1 367 1 105 1 
369 1 41 1 55 1 371 1 313 1 47 1 103 1 365 1 367 1 202 1 203 1 105 1 
236 1 274 1 163 1 289 1 24 1 64 1 188 1 4 1 85 1 16 1 7 1 
274 1 163 1 173 1 369 1 4 1 153 1 196 1 7 1 61 1 289 1 63 1 64 1 24 1 47 1 267 1 202 2 16 1 105 2 
274 1 163 3 173 1 369 1 4 1 153 1 185 1 196 2 7 2 61 1 13 1 289 1 63 2 24 1 122 1 47 2 362 1 190 1 267 1 202 2 16 1 105 2 341 1 
274 1 163 3 4 2 185 1 7 2 61 1 13 1 63 2 122 1 362 1 190 1 16 1 105 2 341 1 173 1 369 1 196 2 88 1 289 2 24 2 321 1 47 2 267 1 202 2 
274 1 212 1 163 4 68 1 128 1 4 3 120 2 144 1 185 1 344 1 7 1 13 1 289 3 64 1 63 1 24 3 122 1 187 1 321 1 25 1 15 2 117 1 16 1 
274 1 212 1 163 4 68 1 4 3 120 2 314 1 144 1 185 1 7 1 13 1 289 3 64 1 63 1 24 3 122 1 187 1 321 1 25 1 15 2 117 1 16 1 
274 1 289 1 24 1 312 1 4 1 16 1 
274 3 163 3 312 1 4 6 7 2 166 1 23 1 90 1 216 1 289 7 91 1 64 2 24 7 63 1 348 1 319 1 217 1 266 1 338 1 16 2 306 1 
273 3 274 1 327 2 4 1 145 1 97 1 7 1 61 1 12 1 63 1 228 2 334 1 189 2 16 1 105 2 153 1 196 1 156 1 289 1 24 1 115 2 116 1 27 1 201 1 202 2 293 2 29 1 206 1 163 1 164 1 249 2 31 2 358 1 37 6 40 3 173 1 369 2 260 1 44 1 373 4 131 1 90 1 47 1 48 2 380 1 267 1 53 1 
163 2 4 1 120 3 183 1 144 2 329 1 64 1 187 1 168 1 15 3 229 2 195 1 212 1 342 1 68 1 343 1 22 2 314 1 197 2 113 1 262 1 289 1 24 1 377 1 25 1 93 1 117 1 325 2 
274 2 163 2 312 1 4 2 7 1 90 1 289 2 24 2 63 1 187 1 330 1 16 1 306 1 
274 1 163 1 4 4 85 1 7 1 280 1 289 4 90 1 64 1 24 4 321 1 188 1 16 1 
274 2 163 1 296 1 328 1 4 2 372 1 7 1 166 1 13 1 216 1 289 2 24 2 63 1 16 1 
274 1 289 1 24 1 64 1 200 1 297 1 4 1 51 1 83 1 16 1 
274 1 246 1 163 1 4 2 7 1 90 1 289 2 24 2 319 1 266 1 16 1 
274 2 163 3 4 4 85 1 7 2 280 1 13 1 289 5 90 1 23 1 64 1 24 5 217 1 319 1 188 1 16 2 
274 2 163 3 4 4 85 1 56 1 7 2 280 1 13 1 289 5 90 1 23 1 64 1 24 5 319 1 188 1 16 2 
274 1 163 1 173 1 369 1 4 1 196 1 7 1 61 1 88 1 289 1 63 1 64 1 24 1 47 1 267 1 202 2 16 1 105 2 
274 2 163 1 4 1 7 1 166 1 216 1 13 1 289 1 24 1 63 1 338 1 16 1 306 1 
0 1 225 1 10 1 47 1 350 1 160 1 268 1 202 1 105 1 
133 1 0 1 104 1 
369 1 0 1 160 1 268 1 252 1 
212 1 20 1 369 1 68 1 0 1 183 1 120 2 252 2 133 1 25 1 362 1 304 1 190 1 15 2 104 1 160 2 268 2 340 1 341 1 
236 1 159 1 224 1 278 1 
159 1 210 1 254 1 224 1 14 1 335 1 278 1 
210 1 96 1 130 1 
239 1 224 1 111 2 278 1 175 1 346 1 75 1 159 1 254 3 210 3 335 1 14 1 
32 1 159 1 210 2 254 2 224 1 14 1 335 1 278 1 18 1 
279 1 54 1 75 1 200 1 210 1 254 1 51 1 366 1 14 1 335 1 278 1 
75 1 210 1 254 1 224 1 14 1 335 1 278 1 
75 1 159 1 210 1 254 1 224 2 14 1 335 1 
224 1 278 1 11 1 75 1 92 1 254 2 210 2 167 1 335 2 14 2 
152 1 224 1 278 2 134 1 75 1 159 1 254 3 210 3 363 1 335 1 14 1 366 1 18 2 
238 1 54 1 297 1 224 1 278 1 300 1 75 1 159 1 254 2 210 2 200 1 51 2 335 1 14 1 18 1 
224 1 278 2 32 1 75 1 290 1 159 1 254 4 210 4 363 1 335 2 14 2 366 1 18 2 
75 1 159 1 210 1 254 1 224 1 14 1 335 1 278 1 
239 1 224 2 111 1 357 1 175 1 278 3 159 2 254 4 210 4 363 1 335 1 14 1 366 1 18 2 
235 1 224 1 278 1 75 1 159 1 254 2 210 2 331 1 335 1 14 1 271 1 18 1 
239 2 224 1 111 2 175 1 278 1 360 1 75 1 159 1 254 3 210 3 335 1 14 1 
263 2 355 1 21 1 278 2 
75 1 127 1 210 1 254 1 14 1 335 1 
75 1 159 1 152 1 210 2 254 2 224 1 14 1 335 1 278 1 18 1 
138 1 
75 1 159 1 210 1 254 1 224 1 14 1 335 1 278 1 
75 1 159 1 152 1 210 3 254 3 224 1 14 1 335 1 111 1 278 1 18 1 
363 1 366 1 357 1 278 1 
224 1 278 1 

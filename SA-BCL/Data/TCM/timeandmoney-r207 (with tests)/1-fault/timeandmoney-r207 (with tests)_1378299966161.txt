#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 2 180 1 203 1 296 4 181 2 272 2 3 1 45 1 234 9 6 2 205 5 322 1 323 9 157 1 326 1 133 3 162 1 16 2 165 1 284 1 245 1 371 6 331 1 373 2 110 1 65 1 176 2 178 1 
253 2 180 1 203 1 296 4 181 2 272 2 3 1 45 1 234 9 205 5 6 2 322 1 323 9 157 1 326 1 133 3 162 1 16 2 165 1 284 1 245 1 371 6 331 1 373 2 110 1 65 1 176 2 178 1 
253 2 180 1 203 1 296 5 181 2 272 2 3 1 45 1 234 10 205 6 6 2 322 1 323 10 157 1 326 1 133 4 162 1 16 2 165 1 284 1 245 1 371 7 331 1 373 2 110 1 65 1 176 2 178 1 
253 2 180 1 203 1 296 3 181 2 272 2 3 1 45 1 234 7 205 4 6 1 322 1 323 7 157 1 326 1 133 2 162 1 16 2 165 1 284 1 245 1 371 4 331 1 373 2 65 1 176 2 178 1 
326 1 133 1 253 1 296 2 181 1 272 1 16 1 3 1 45 1 165 1 371 3 234 4 6 2 205 3 110 1 323 4 157 1 176 1 
326 1 280 1 253 1 180 1 181 1 272 1 3 1 331 1 234 2 205 1 373 1 311 1 323 2 113 1 157 1 176 1 
326 1 253 2 133 1 296 1 272 2 3 1 371 1 234 3 373 1 205 2 323 3 157 1 178 1 
326 1 253 2 133 3 296 4 181 1 16 1 272 2 3 1 327 1 165 1 45 1 245 1 371 7 234 9 6 2 205 5 373 1 110 1 207 1 323 9 65 1 157 1 176 1 178 1 
326 1 253 2 133 3 296 4 181 1 16 1 272 2 3 1 327 1 165 1 45 1 245 1 371 7 234 9 6 2 205 5 373 1 110 1 207 1 323 9 65 1 157 1 176 1 178 1 
261 1 340 1 107 1 
228 1 226 2 340 1 
193 2 268 2 292 2 244 2 195 2 98 2 276 1 266 1 
201 1 227 1 254 1 356 2 230 2 71 1 123 2 72 1 96 1 74 1 30 1 242 1 9 1 126 1 275 1 98 3 367 2 276 1 129 1 345 1 13 2 279 1 193 2 58 1 194 1 244 3 195 2 266 1 352 1 268 2 292 2 64 1 335 1 114 1 42 1 66 1 43 1 
193 1 268 1 153 1 357 1 292 1 244 1 195 1 98 1 266 1 278 1 
337 1 229 1 61 1 244 1 195 1 204 1 340 1 248 1 261 1 153 1 187 1 11 1 98 1 94 1 
193 1 229 1 244 1 195 1 204 1 340 1 248 2 261 1 268 1 153 1 292 1 187 1 11 2 98 1 94 1 
57 1 365 1 11 1 175 1 248 1 
261 1 220 1 365 1 11 2 340 1 233 1 175 1 248 2 
365 1 11 1 248 1 
193 1 357 1 244 1 195 1 266 1 248 1 141 1 268 1 153 1 292 1 11 1 98 1 175 1 278 1 
340 1 
261 1 220 1 306 1 365 1 11 2 340 1 175 1 248 2 
336 2 132 1 202 1 150 1 246 1 340 1 248 5 261 1 18 1 219 2 220 1 301 1 377 1 143 2 364 1 365 2 11 5 175 2 179 1 
201 1 279 1 193 1 227 1 194 1 1 1 230 1 244 2 195 1 72 1 74 1 19 1 242 1 9 1 292 1 335 1 378 1 98 2 367 1 13 1 
276 1 107 1 
193 1 244 2 195 2 317 1 358 1 268 1 292 1 98 2 276 2 
378 1 309 1 225 1 
279 1 201 1 227 1 194 1 351 1 230 1 244 1 72 1 74 1 242 1 9 1 335 1 98 1 367 1 276 1 13 1 
193 3 268 1 1 1 292 3 244 3 195 3 98 3 276 1 
193 1 153 1 357 1 292 1 244 1 195 1 98 1 
193 1 268 1 153 1 292 1 244 1 195 1 98 1 317 1 358 1 
201 1 227 1 254 1 356 1 1 1 229 1 230 1 204 1 71 1 358 1 123 2 72 1 96 1 74 1 30 1 242 1 153 1 9 1 154 1 187 1 11 1 98 4 367 1 276 1 129 1 345 1 13 1 279 1 193 3 194 1 265 1 244 4 195 3 266 1 248 1 19 1 268 2 292 3 64 1 335 1 114 1 42 1 43 1 94 1 
193 1 1 1 292 1 61 1 244 2 195 2 86 1 98 2 276 1 
193 3 1 2 229 1 244 3 195 3 204 1 358 1 38 1 340 1 248 1 19 1 268 1 153 1 292 3 154 1 187 1 11 1 98 3 94 1 
193 2 268 1 1 1 292 2 244 2 195 2 378 1 98 2 358 1 225 1 
279 1 201 1 227 1 194 1 230 1 244 1 72 1 74 1 242 1 9 1 335 1 98 1 367 1 276 1 13 1 
201 1 227 1 194 1 230 1 244 1 72 1 74 1 321 1 242 1 9 1 98 1 367 1 144 1 276 1 13 1 
24 1 356 4 183 1 71 1 123 2 237 1 96 1 48 1 30 2 343 1 345 1 330 1 309 2 247 1 250 1 352 2 89 1 64 1 173 1 114 1 174 1 378 2 43 1 225 2 
193 1 153 1 292 1 274 1 244 1 195 1 98 1 94 1 
193 4 1 2 61 1 244 5 195 5 86 1 358 1 298 1 19 1 268 1 288 1 292 4 98 5 276 1 
193 2 153 1 357 1 292 2 274 1 244 2 195 2 98 2 
50 1 88 1 
50 1 88 1 
342 1 354 1 
342 1 354 1 
342 1 354 1 
81 1 50 1 88 1 
81 1 50 1 88 1 
81 1 50 1 88 1 
300 1 50 1 88 1 
342 1 166 1 50 2 151 1 354 1 88 2 
50 1 372 1 88 1 
50 1 372 1 88 1 
50 1 372 1 88 1 
120 1 192 3 59 2 148 2 167 2 151 1 340 1 267 1 73 1 235 2 248 2 88 2 109 2 264 1 50 2 11 2 51 1 127 1 199 1 
148 1 149 1 235 1 238 1 241 1 300 1 264 1 32 1 50 1 11 1 98 2 34 1 276 1 193 2 192 1 59 1 244 2 195 2 168 1 248 1 88 1 109 1 292 2 224 1 
181 1 16 1 176 1 
181 1 113 1 176 1 
131 1 315 1 16 2 113 1 312 1 176 3 
131 1 124 1 16 1 113 1 312 1 176 2 
131 1 16 1 113 1 312 2 176 2 
336 1 228 1 226 3 271 1 149 1 340 2 237 1 238 1 261 1 185 1 186 1 241 1 76 2 341 1 365 1 11 5 158 2 191 1 104 2 214 1 330 1 246 3 248 5 250 1 18 1 286 1 219 1 220 1 173 1 377 2 143 1 175 4 
336 2 228 3 226 9 271 2 297 1 316 1 149 4 340 5 237 3 261 1 185 2 206 5 76 6 365 6 11 9 158 6 191 1 57 5 161 1 213 1 214 3 330 3 246 8 248 9 250 3 18 1 219 2 220 1 40 1 222 1 173 3 377 6 143 2 175 7 179 1 
336 1 228 2 226 4 271 1 149 1 340 3 237 1 261 1 185 1 341 1 76 2 11 3 158 2 104 1 214 1 246 3 330 1 248 3 250 1 286 1 219 1 173 1 143 1 377 2 175 2 179 1 
336 1 228 3 226 7 271 1 316 1 149 2 340 4 237 2 261 1 185 1 76 4 341 1 11 4 158 4 104 2 214 2 246 5 330 2 248 4 250 2 286 1 219 1 40 1 173 2 222 1 143 1 377 4 175 3 179 1 
242 1 374 1 107 1 
242 1 170 1 
47 1 
201 1 242 1 
201 1 374 2 242 3 9 1 91 1 177 1 
201 1 242 1 9 1 
242 1 5 1 
200 1 14 1 356 7 2 2 60 1 183 3 138 1 330 1 28 1 237 1 108 1 352 4 30 3 269 1 343 2 99 1 53 1 
200 1 14 1 356 7 2 2 60 1 183 3 138 1 330 1 28 1 237 1 108 1 352 4 30 3 269 1 343 2 99 1 53 1 
200 1 14 1 356 7 2 2 60 1 183 3 138 1 330 1 28 1 237 1 108 1 360 1 352 4 30 3 269 1 343 2 99 1 53 1 
200 1 356 31 2 3 122 1 183 10 71 1 28 2 123 2 237 4 30 15 263 1 343 5 99 2 159 1 53 2 345 1 14 1 211 1 60 1 138 2 214 3 17 1 330 4 250 3 108 5 352 16 334 1 269 1 90 3 353 4 114 1 173 3 115 1 43 1 
200 1 356 9 2 2 183 4 71 2 28 1 123 4 237 1 30 4 263 1 343 3 99 1 345 2 53 1 14 1 60 1 37 1 138 1 330 1 108 1 352 5 20 1 114 2 43 2 
253 1 255 1 181 1 315 1 272 1 230 1 3 1 234 2 205 1 74 1 152 1 323 2 299 1 367 1 157 1 13 1 326 1 194 1 16 1 370 1 371 1 62 1 215 1 373 1 113 1 67 1 313 1 119 1 176 2 69 1 
253 1 25 1 255 1 181 1 315 1 272 1 230 1 182 1 234 3 205 1 74 1 152 1 323 3 367 1 157 1 13 1 326 1 194 1 16 1 370 1 371 2 215 1 373 1 113 1 294 1 67 1 313 1 119 1 176 2 69 1 
255 1 315 1 181 1 230 1 182 1 234 2 205 1 74 1 152 1 323 2 367 1 157 1 13 1 326 1 194 1 16 1 370 1 371 2 373 1 113 1 294 1 313 1 119 1 176 2 69 1 
201 1 25 1 253 1 227 1 194 1 272 1 230 1 106 1 370 2 234 1 184 1 74 1 373 2 240 1 242 1 323 1 21 1 33 1 367 1 156 1 313 2 119 2 13 1 
253 1 255 1 181 1 315 1 272 1 230 1 3 1 182 1 234 1 74 1 152 1 323 1 367 1 13 1 194 1 16 1 370 1 62 1 215 1 373 1 113 1 67 1 313 1 119 1 176 2 69 1 
221 1 
201 1 336 1 337 1 147 1 204 1 95 2 46 1 97 1 153 1 11 3 98 1 13 2 210 1 349 1 163 1 61 1 18 1 219 1 220 1 223 1 68 1 227 2 229 1 230 2 70 1 184 1 185 1 74 1 320 1 240 1 242 1 365 2 187 1 367 2 194 1 135 1 244 1 195 1 246 2 248 3 251 1 332 1 293 1 377 2 143 1 94 1 
337 1 229 1 231 1 70 1 204 1 95 2 153 1 187 1 365 2 11 3 98 1 163 1 306 1 244 1 61 1 195 1 248 3 332 1 220 1 223 1 68 1 94 1 
337 1 229 1 70 1 204 1 95 3 340 1 261 1 153 1 365 1 187 1 11 3 98 1 163 1 306 1 244 1 61 1 195 1 308 1 248 3 332 1 220 1 223 1 68 1 94 1 
337 1 229 1 231 1 70 1 204 1 95 3 340 1 261 1 153 1 187 1 365 2 11 3 98 1 306 1 163 1 244 1 61 1 195 1 308 1 248 3 332 1 220 1 116 1 223 1 68 1 94 1 
336 1 337 1 147 1 204 1 95 2 340 1 261 1 153 2 11 3 98 2 163 1 306 1 61 1 266 1 18 1 219 1 220 1 268 1 116 2 223 1 68 1 357 1 229 1 231 2 70 1 319 1 320 2 187 1 365 3 188 1 278 1 277 1 193 1 244 2 195 2 246 1 248 3 251 2 332 1 141 1 142 1 292 1 291 1 293 1 143 1 377 1 94 1 
336 1 337 1 229 1 147 1 70 1 204 1 95 2 46 1 320 1 153 1 187 1 11 2 98 1 163 1 61 1 244 1 195 1 246 1 248 2 251 1 332 1 18 1 219 1 293 1 377 1 143 1 223 1 68 1 94 1 
336 1 357 1 337 1 229 1 147 1 70 1 204 1 95 2 340 1 261 1 319 1 320 2 153 2 187 1 11 2 98 2 278 1 193 1 163 1 244 2 61 1 195 2 246 1 266 1 248 2 251 2 332 1 18 1 141 1 219 1 268 1 142 1 292 1 291 1 293 1 377 1 143 1 223 1 68 1 94 1 
336 1 357 1 337 1 229 1 147 1 70 1 204 1 95 2 340 1 261 1 319 1 320 2 153 2 187 1 11 2 98 2 278 1 193 1 163 1 244 2 61 1 195 2 246 1 266 1 248 2 251 2 332 1 18 1 141 1 219 1 268 1 142 1 292 1 291 1 293 1 377 1 143 1 223 1 68 1 94 1 
336 1 357 1 256 1 337 1 229 1 70 1 204 1 95 2 340 1 261 1 320 2 153 2 125 1 187 1 11 2 98 2 278 1 193 1 282 1 163 1 244 2 61 1 195 2 246 1 266 1 248 2 251 2 332 1 18 1 141 1 219 1 268 1 142 1 292 1 293 1 377 1 143 1 223 1 68 1 94 1 
336 1 337 1 147 1 204 1 95 3 340 1 261 1 153 2 11 2 98 2 163 1 61 1 308 1 266 1 18 1 219 1 268 1 116 1 223 1 68 1 357 1 229 1 231 1 70 1 319 1 320 2 365 1 187 1 277 1 278 1 193 1 244 2 195 2 246 1 248 2 251 2 332 1 141 1 142 1 292 1 291 1 293 1 143 1 377 1 94 1 
336 1 337 1 147 1 204 1 95 3 340 1 261 1 153 2 11 2 98 2 163 1 61 1 308 1 266 1 18 1 219 1 268 1 116 1 223 1 68 1 357 1 229 1 231 1 70 1 319 1 320 2 365 1 187 1 277 1 278 1 193 1 244 2 195 2 246 1 248 2 251 2 332 1 141 1 142 1 292 1 291 1 293 1 143 1 377 1 94 1 
336 1 337 1 229 1 256 1 70 1 204 1 95 2 46 1 320 1 153 1 187 1 11 2 98 1 163 1 61 1 244 1 195 1 246 1 248 2 251 1 332 1 18 1 219 1 293 1 377 1 143 1 223 1 68 1 94 1 
200 1 14 1 356 6 2 1 60 1 183 2 138 1 330 1 71 1 309 1 123 2 107 1 237 1 96 1 48 1 352 3 30 3 64 1 343 2 114 1 378 1 43 1 276 2 99 1 225 1 345 1 
254 1 356 14 26 1 122 1 183 2 71 2 123 4 237 1 96 1 30 6 126 1 343 1 276 1 130 1 78 1 345 2 103 1 211 1 214 2 330 2 309 11 108 1 250 2 352 8 353 3 90 3 64 2 114 2 173 1 378 11 43 2 92 1 225 4 
201 1 227 1 254 1 356 2 1 1 230 1 71 1 123 2 72 1 318 1 96 1 74 1 242 1 30 1 9 1 126 1 367 1 98 2 276 1 13 1 345 1 279 1 193 1 194 1 15 1 351 1 244 2 195 1 216 1 19 1 352 1 292 1 335 1 64 1 114 1 43 1 92 1 225 1 
200 1 201 2 254 1 145 1 1 1 2 1 146 2 338 2 96 3 9 2 343 4 98 3 99 1 13 3 345 3 14 1 60 1 214 2 309 7 108 4 19 1 352 10 64 3 114 3 173 2 225 7 227 1 356 20 230 3 182 1 183 8 71 3 123 6 237 3 72 2 75 1 74 2 30 10 242 2 126 1 367 3 276 2 279 2 193 1 194 2 83 2 283 1 244 3 195 1 138 1 330 3 250 2 292 1 335 2 42 2 378 7 43 3 92 1 295 2 
201 2 227 2 254 1 356 2 1 1 4 1 230 8 182 1 71 2 123 4 96 2 184 1 74 2 48 1 240 1 242 3 30 1 299 1 126 1 189 1 98 1 367 8 275 2 368 1 13 7 345 2 55 1 193 1 194 2 281 1 244 1 195 1 352 1 292 1 64 2 114 2 270 1 43 2 93 1 
355 1 356 3 183 1 358 1 71 1 123 2 237 1 96 1 30 2 343 1 98 1 345 1 193 1 244 1 195 1 214 1 330 1 309 1 250 1 352 1 268 1 292 1 64 1 114 1 173 1 378 1 43 1 92 1 225 1 
356 2 183 1 71 1 330 1 309 1 123 2 108 1 96 1 250 1 48 1 352 2 89 1 64 1 114 1 378 1 43 1 225 1 345 1 
24 1 356 2 183 1 71 1 309 1 123 2 237 1 96 1 48 1 30 2 64 1 343 1 114 1 173 1 378 1 43 1 225 1 345 1 
356 4 183 2 71 1 123 2 237 1 96 1 48 1 30 2 343 1 345 1 214 1 330 1 309 2 250 1 108 1 352 2 64 1 114 1 173 1 378 2 43 1 225 2 
281 1 356 2 183 1 71 1 330 1 309 1 123 2 108 1 96 1 250 1 352 2 89 1 64 1 114 1 378 1 43 1 225 1 345 1 
24 1 281 1 356 2 183 1 71 1 309 1 123 2 237 1 96 1 30 2 64 1 343 1 114 1 173 1 378 1 43 1 225 1 345 1 
356 4 183 2 71 1 123 2 237 1 96 1 30 2 343 1 345 1 281 1 214 1 330 1 309 2 250 1 108 1 352 2 64 1 114 1 173 1 378 2 43 1 225 2 
356 4 183 2 71 1 123 2 237 1 96 1 30 2 343 1 345 1 214 1 330 1 309 2 250 1 108 1 352 2 64 1 114 1 173 1 378 2 43 1 225 2 
201 1 227 1 254 1 356 2 230 1 71 1 123 2 72 1 96 1 74 1 242 1 30 1 9 1 126 1 367 1 98 1 276 1 13 1 345 1 279 1 194 1 244 1 352 1 335 1 64 1 114 1 42 1 43 1 
201 1 227 1 254 1 356 2 230 1 71 1 123 2 72 1 96 1 74 1 321 1 242 1 30 1 9 1 126 1 302 1 367 1 98 1 276 1 13 1 345 1 194 1 244 1 352 1 64 1 114 1 144 1 43 1 
356 4 183 2 71 1 123 2 237 1 96 1 30 2 343 1 345 1 214 1 330 1 309 2 250 1 108 1 352 2 64 1 114 1 173 1 378 2 43 1 92 1 225 2 
201 1 356 4 338 1 230 1 183 2 71 1 123 2 237 1 72 1 96 1 74 1 30 2 242 1 9 1 299 1 343 1 367 1 98 1 13 1 345 1 279 1 194 1 244 1 214 1 330 1 309 2 108 1 250 1 352 2 335 1 64 1 173 1 114 1 42 1 378 2 43 1 225 2 
356 3 183 1 358 1 71 1 123 2 237 1 96 1 30 1 98 1 100 1 345 1 193 1 244 1 195 1 214 1 330 1 309 1 108 1 250 1 352 2 268 1 292 1 64 1 173 1 114 1 378 1 43 1 92 1 225 1 
200 1 23 1 356 41 2 1 122 3 183 8 71 3 123 6 237 5 7 1 361 1 8 2 30 21 263 1 208 1 343 4 243 1 190 1 99 1 52 1 345 3 14 1 35 1 36 1 211 1 304 1 82 1 136 1 60 1 37 1 138 1 214 4 330 5 250 4 108 4 218 4 352 20 353 4 90 3 114 3 173 4 43 3 22 1 
200 1 23 1 356 38 2 1 122 3 183 7 71 4 123 8 237 4 7 1 361 1 8 2 30 18 263 2 208 1 343 4 243 1 190 1 99 1 52 1 345 4 14 1 35 1 36 1 211 1 304 1 82 1 136 1 60 1 37 1 138 1 214 4 330 5 250 4 108 3 218 4 352 20 353 4 90 3 114 4 173 3 43 4 22 1 
200 1 23 1 356 52 2 1 122 2 183 14 71 2 123 4 237 8 7 1 361 1 8 1 30 25 263 1 208 1 343 7 243 1 190 1 99 1 130 2 52 1 345 2 14 1 35 1 36 1 211 2 82 1 136 1 60 1 37 1 138 1 214 7 330 8 250 7 108 7 218 4 352 27 353 4 90 4 114 2 173 7 43 2 
23 1 356 19 122 1 183 6 71 2 123 4 237 3 7 1 8 1 30 10 343 3 77 1 190 1 243 2 52 1 345 2 211 1 37 1 214 3 330 3 250 3 108 3 218 2 352 9 353 2 90 1 114 2 173 3 43 2 22 1 
23 1 356 26 122 2 183 4 71 3 123 6 237 2 7 2 30 12 8 2 361 1 263 2 208 1 343 2 243 1 190 1 52 1 345 3 35 1 36 1 82 1 136 1 37 1 214 3 330 3 108 2 250 3 218 4 352 14 353 2 90 2 114 3 173 2 43 3 
109 1 49 1 59 1 148 1 50 1 151 1 73 1 199 1 235 1 88 1 
300 1 32 1 
109 1 0 1 169 1 196 1 59 1 148 1 50 1 235 1 88 1 
192 2 59 1 148 1 167 1 151 1 340 1 267 1 73 1 248 1 235 1 88 1 109 1 264 1 11 1 50 1 51 1 127 1 199 1 
192 2 59 1 148 1 167 1 151 1 340 1 267 1 73 1 248 1 235 1 88 1 109 1 264 1 11 1 50 1 51 1 127 1 199 1 
192 2 59 1 148 1 167 1 151 1 340 1 267 1 73 1 248 1 235 1 88 1 109 1 264 1 11 1 50 1 51 1 127 1 199 1 
79 1 81 1 166 1 
79 1 81 1 166 1 
359 1 372 1 
166 1 359 1 372 1 
34 1 168 1 
148 1 149 1 235 1 238 1 241 1 300 1 209 1 32 1 11 1 50 1 98 2 127 1 34 1 276 1 192 1 193 2 59 1 244 2 167 1 195 2 168 1 248 1 88 1 109 1 292 2 224 1 175 1 
79 1 81 1 
166 1 359 1 372 1 
201 1 254 1 356 2 230 2 71 1 123 2 96 1 74 1 239 1 242 1 30 1 126 1 189 1 367 2 98 2 275 2 344 1 345 1 13 2 346 1 194 1 244 2 195 2 310 1 352 1 111 1 64 1 114 1 270 1 43 1 92 1 
194 1 255 1 181 1 315 1 16 1 230 2 350 1 182 1 215 1 74 1 152 1 299 1 113 1 155 1 367 2 118 1 313 1 176 2 13 2 
194 1 255 1 181 1 315 1 16 1 230 1 350 1 137 1 182 1 215 1 74 1 152 1 113 1 367 1 313 1 176 2 13 1 
201 1 227 1 194 1 230 1 184 1 74 1 240 1 140 1 242 1 21 1 367 1 118 1 313 1 13 1 
194 1 255 1 181 1 315 1 16 1 230 1 350 1 182 1 215 1 74 1 152 1 113 1 155 1 367 1 118 1 313 1 176 2 13 1 
285 1 
261 1 202 1 377 1 364 1 246 1 340 1 107 1 
336 1 228 1 226 1 147 1 340 2 261 1 362 1 365 1 11 1 246 1 248 1 18 1 219 1 287 1 220 1 377 1 143 1 
201 3 336 4 202 1 259 2 5 2 340 8 261 2 299 1 9 3 11 5 158 6 13 3 56 1 305 2 214 2 18 4 219 4 220 3 170 3 171 2 173 2 177 1 227 1 226 12 228 6 229 2 230 3 27 2 237 2 185 2 74 3 273 1 242 10 76 6 364 1 365 5 367 3 194 4 135 1 84 2 83 2 328 1 329 2 246 9 139 1 330 2 87 1 248 5 249 2 250 2 374 2 375 2 143 4 377 8 
336 2 226 6 228 3 122 1 340 5 237 2 185 1 261 2 361 1 76 5 208 1 365 1 11 1 158 5 54 1 35 1 348 1 135 1 82 1 136 1 329 1 214 2 246 8 330 2 248 1 249 2 250 2 18 2 219 2 220 1 353 1 90 1 143 2 377 5 173 2 
336 1 357 1 237 1 319 1 153 1 10 1 11 1 98 1 99 1 278 1 14 1 193 1 244 1 195 1 329 1 138 1 330 2 246 2 266 1 248 1 249 2 18 1 219 1 141 1 268 1 292 1 143 1 377 2 
336 1 202 1 246 1 340 1 261 1 18 1 219 1 143 1 377 1 364 1 
226 10 228 5 83 1 329 1 214 2 330 2 246 5 340 5 237 2 249 2 250 2 76 5 377 5 173 2 158 5 
261 1 220 1 365 1 11 1 340 1 248 1 
201 1 336 2 227 2 230 4 236 1 184 1 74 1 97 1 185 2 273 2 240 1 242 1 365 4 11 3 367 4 13 4 56 1 194 1 135 2 349 1 246 2 248 3 63 1 18 1 219 2 220 2 143 2 377 2 179 1 
201 1 227 1 254 1 356 1 230 1 71 1 123 2 72 1 96 1 74 1 30 1 242 1 9 1 367 1 98 3 276 1 129 1 13 1 345 1 279 1 193 2 194 1 244 3 195 2 266 1 268 2 292 2 335 1 64 1 114 1 42 1 43 1 
336 1 228 2 226 4 135 1 2 1 246 1 340 4 185 1 261 2 18 1 219 1 76 2 377 2 143 1 158 2 
109 1 307 1 59 1 
109 1 307 1 59 1 
109 1 307 1 59 1 
109 1 347 1 59 1 168 1 73 1 
109 1 333 1 59 1 
109 1 333 1 59 1 
109 1 333 1 59 1 
109 1 59 1 
50 1 88 1 
200 1 356 8 2 1 122 1 183 2 71 1 123 2 237 1 30 4 361 1 343 2 99 1 345 1 14 1 60 1 37 1 138 1 330 1 352 4 90 1 353 1 114 1 43 1 
200 1 356 11 2 1 122 1 183 3 71 2 123 4 237 1 30 5 361 1 343 2 99 1 345 2 14 1 211 1 60 1 37 1 138 1 214 1 330 2 250 1 108 1 352 6 353 2 90 1 112 1 114 2 43 2 
200 1 356 19 2 1 122 1 183 4 71 3 123 6 237 3 30 10 361 1 263 1 208 1 343 3 99 1 345 3 14 1 35 1 82 1 136 1 60 1 37 1 138 1 214 2 330 3 108 1 250 2 352 9 90 1 353 1 112 1 114 3 173 2 43 3 
200 1 356 17 2 1 122 1 183 5 71 3 123 6 237 2 30 7 361 1 263 1 208 1 343 3 99 1 345 3 14 1 35 1 136 1 82 1 60 1 37 1 138 1 214 2 330 3 108 2 250 2 352 10 90 1 353 1 112 1 114 3 173 1 43 3 
200 1 356 8 2 1 122 1 183 2 71 1 123 2 237 1 30 4 361 1 343 2 99 1 345 1 14 1 60 1 37 1 138 1 330 1 352 4 90 1 353 1 114 1 43 1 
356 12 122 1 183 2 71 1 123 2 237 2 30 6 361 1 208 1 343 1 345 1 35 1 136 1 82 1 37 1 214 2 330 2 108 1 250 2 352 6 90 1 353 1 114 1 173 2 43 1 
200 1 356 18 2 1 122 1 183 5 71 4 123 8 237 2 30 8 361 1 263 2 208 1 343 3 99 1 345 4 14 1 35 1 82 1 136 1 60 1 37 1 138 1 214 2 330 3 108 2 250 2 352 10 353 1 90 1 112 1 114 4 173 1 43 4 
356 16 122 1 183 6 71 4 123 8 237 2 30 7 361 1 263 2 208 1 343 3 345 4 35 1 82 1 136 1 37 1 214 3 330 3 108 3 250 3 352 9 353 1 90 1 114 4 173 2 43 4 22 1 
200 2 14 1 356 7 60 1 138 3 183 6 330 1 237 1 108 3 352 3 30 4 343 3 99 3 
200 1 356 18 2 1 122 1 183 4 71 4 123 8 237 2 30 8 361 1 263 2 208 1 343 3 99 1 345 4 14 1 35 1 82 1 136 1 60 1 37 1 138 1 214 2 330 3 108 1 250 2 352 10 353 1 90 1 114 4 173 1 43 4 22 1 
200 1 14 1 356 8 2 1 60 1 183 3 138 1 330 1 71 2 123 4 237 1 108 1 352 4 30 4 263 1 343 2 114 2 43 2 99 1 345 2 
200 1 14 1 352 3 30 3 356 6 2 1 343 2 60 1 183 2 138 1 330 1 99 1 107 1 237 1 
356 4 183 2 214 1 71 1 330 1 123 2 237 1 250 1 108 1 352 2 30 2 112 1 343 1 173 1 114 1 43 1 345 1 
211 1 356 7 122 1 214 1 183 2 330 1 237 1 250 1 108 1 352 3 30 4 353 2 90 1 343 1 173 1 
200 1 356 23 2 1 183 9 71 2 123 4 237 3 30 12 263 2 343 5 99 2 130 1 78 1 345 2 14 1 211 1 60 1 105 1 138 2 214 2 330 3 108 4 250 2 352 11 90 2 353 2 173 2 114 2 43 2 
30 1 356 1 353 1 
352 1 356 1 90 1 
356 6 83 1 214 1 183 3 71 1 330 1 123 2 237 1 250 1 108 1 352 3 30 3 112 1 114 1 173 1 343 2 43 1 345 1 
356 12 122 1 183 2 71 1 123 2 237 2 30 6 361 1 208 1 343 1 345 1 35 1 136 1 82 1 37 1 214 2 330 2 108 1 250 2 352 6 90 1 353 1 114 1 173 2 43 1 
14 1 356 6 138 1 183 2 330 1 237 1 108 1 352 3 30 3 343 1 99 1 
200 1 356 3 105 1 60 1 183 2 138 1 71 1 123 2 108 1 352 1 30 2 263 1 343 1 114 1 43 1 99 1 345 1 
14 1 356 10 37 1 138 2 183 5 71 1 330 2 123 2 237 2 108 2 352 5 30 5 114 1 343 3 10 1 43 1 99 2 345 1 
356 2 37 1 183 1 71 1 330 1 123 2 250 1 108 1 352 2 114 1 43 1 345 1 
356 4 37 1 183 2 214 1 71 1 330 1 123 2 237 1 250 1 108 1 352 2 30 2 343 1 173 1 114 1 43 1 345 1 
356 3 105 1 37 1 138 1 183 2 71 3 123 6 108 1 352 1 30 2 263 1 114 3 343 1 43 3 22 1 99 1 345 3 
200 1 356 34 2 1 122 1 183 12 71 5 123 10 237 5 30 18 263 2 343 7 99 3 159 1 345 5 14 2 211 1 60 1 105 1 37 1 138 3 214 3 17 1 330 5 250 3 108 5 352 16 353 4 90 3 112 1 114 5 173 3 115 1 43 5 22 1 
289 1 244 1 61 1 195 1 98 1 86 1 276 1 
212 1 61 1 244 1 195 1 86 1 289 1 197 1 41 1 366 1 98 1 276 1 12 1 
74 1 201 1 240 1 227 1 194 1 242 1 230 1 367 1 107 1 184 1 13 1 
201 1 193 1 227 1 194 1 1 1 230 1 244 2 195 1 72 1 74 1 242 1 9 1 292 1 335 1 98 2 367 1 276 1 13 1 
201 2 193 2 194 1 1 1 305 1 230 1 244 2 204 1 195 2 5 1 72 1 74 1 273 1 242 3 153 1 9 2 292 1 335 1 98 2 367 1 276 1 94 1 13 1 
201 2 193 2 194 1 1 1 305 1 230 2 244 2 204 1 195 2 5 1 72 1 74 1 273 1 242 3 321 1 153 1 9 2 292 1 31 1 98 2 367 2 276 1 94 1 13 2 
201 1 227 1 194 1 229 1 305 1 230 3 5 1 340 1 248 2 261 1 74 1 273 1 242 4 374 1 324 1 170 1 9 1 31 1 365 1 11 2 367 3 198 1 13 3 
201 1 227 1 194 1 229 1 305 1 84 1 230 3 5 1 340 1 248 2 261 1 74 1 273 1 242 4 374 1 170 1 9 1 31 1 365 1 11 2 367 3 13 3 
74 1 194 1 230 1 367 1 93 1 13 1 
55 1 201 2 227 2 194 3 4 1 230 7 182 1 260 1 232 1 74 2 242 3 299 1 9 1 189 1 275 1 367 7 128 1 177 1 93 1 368 1 13 6 
200 1 201 1 356 6 1 1 2 1 146 1 338 1 230 1 183 2 71 2 123 4 237 1 72 1 96 2 74 1 30 3 242 1 9 1 299 1 343 2 98 2 367 1 344 1 276 2 99 1 345 2 13 1 279 1 14 1 193 1 194 1 60 1 244 2 195 1 138 1 330 1 309 1 352 3 292 1 64 2 335 1 114 2 42 1 378 1 43 2 92 1 225 1 
336 2 202 1 227 1 229 1 230 1 259 1 340 1 261 1 242 2 364 1 365 2 11 3 367 1 13 1 56 1 84 1 246 1 248 3 18 2 219 2 374 1 220 1 170 1 171 1 375 1 377 1 143 2 175 1 
201 1 194 2 230 2 87 1 74 1 374 1 242 2 299 1 9 1 367 2 177 1 93 1 13 2 
201 1 102 1 227 1 194 1 230 4 184 1 74 1 240 1 242 1 299 1 31 1 367 4 13 4 
201 1 194 2 314 1 230 2 232 1 75 1 29 1 74 1 273 1 242 1 9 1 367 2 128 1 13 2 
74 1 227 1 194 1 255 1 181 1 113 1 230 1 367 1 176 1 13 1 
201 1 194 1 230 2 182 1 74 1 242 1 111 1 299 1 189 1 367 2 13 2 
55 1 201 2 102 1 227 1 194 2 230 5 4 1 184 1 74 2 273 1 240 1 242 3 299 1 189 1 367 5 13 4 
201 2 102 1 227 1 194 2 230 5 4 1 184 1 74 2 273 1 240 1 242 3 299 1 290 1 189 1 367 5 13 4 
201 1 193 1 227 1 194 1 1 1 230 1 244 2 195 1 72 1 74 1 242 1 321 1 9 1 292 1 98 2 367 1 276 1 13 1 
201 1 194 2 230 1 260 1 232 1 74 1 273 1 242 1 9 1 367 1 128 1 177 1 13 1 
121 1 252 1 258 1 339 1 276 1 
80 1 121 2 229 1 258 2 339 1 204 1 340 1 248 2 261 1 39 1 153 1 154 1 252 2 325 1 187 1 11 2 276 1 175 1 94 1 
239 1 346 1 310 1 252 1 258 1 244 1 339 1 195 1 98 1 
39 1 325 1 339 1 
205 1 326 1 157 1 107 1 
205 1 326 1 253 1 323 1 272 1 157 1 234 1 
373 1 323 1 370 1 
326 1 253 1 303 1 272 1 3 1 164 1 331 2 234 3 262 1 205 1 323 3 157 1 
205 1 326 1 6 1 253 1 323 2 272 1 371 1 157 1 234 2 
205 1 253 1 296 1 323 1 181 1 16 1 272 1 3 1 165 1 176 1 234 1 
205 1 326 1 253 1 323 1 272 1 3 1 234 1 
326 2 253 1 323 1 272 1 3 1 157 1 234 1 
326 1 160 1 253 2 272 2 3 1 234 2 205 1 323 2 363 1 101 1 
326 1 253 1 133 1 296 1 272 1 3 1 245 1 371 2 234 3 205 2 323 3 65 1 157 1 
326 1 253 1 315 1 181 1 272 1 16 1 3 1 371 1 234 2 205 1 323 2 113 1 157 1 117 1 176 2 
326 1 253 2 133 1 296 1 272 2 3 1 371 2 234 4 6 1 205 2 110 1 323 4 157 1 
205 1 326 1 253 1 323 1 272 1 3 1 157 1 234 1 
326 2 253 1 133 1 303 1 296 1 272 1 164 1 371 2 331 1 234 4 205 3 323 4 376 1 157 2 
326 1 253 1 44 1 272 1 3 1 327 1 371 1 234 2 205 1 323 2 157 1 369 1 
326 1 253 1 303 2 272 1 257 1 164 1 3 1 331 2 234 3 205 1 323 3 157 1 
205 2 217 1 85 1 379 2 
253 1 134 1 323 1 272 1 3 1 234 1 
205 1 326 1 253 1 323 2 272 1 3 1 245 1 371 1 157 1 234 2 
172 1 
205 1 326 1 253 1 323 1 272 1 3 1 157 1 234 1 
326 1 253 1 272 1 3 1 245 1 371 1 331 1 234 3 205 1 323 3 157 1 
205 1 133 1 296 1 376 1 
205 1 326 1 

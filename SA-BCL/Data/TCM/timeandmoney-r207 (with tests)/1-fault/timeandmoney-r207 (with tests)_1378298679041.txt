#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
323 1 339 1 190 1 350 1 318 3 319 2 143 2 232 1 291 1 222 1 135 1 89 3 159 2 
323 6 339 1 299 2 143 2 5 2 232 1 70 1 35 1 72 1 39 2 41 1 237 1 147 1 159 5 45 2 163 1 190 1 105 1 216 1 106 1 193 1 350 3 318 9 319 2 291 2 222 4 135 1 89 9 
323 6 339 1 299 2 143 2 5 2 232 1 70 1 35 1 72 1 39 2 41 1 237 1 147 1 159 5 45 2 163 1 190 1 105 1 216 1 106 1 193 1 350 3 318 9 319 2 291 2 222 4 135 1 89 9 
323 7 339 1 299 2 143 2 5 2 232 1 70 1 35 1 72 1 39 2 41 1 237 1 147 1 159 6 45 2 163 1 190 1 105 1 216 1 106 1 193 1 350 4 318 10 319 2 291 2 222 5 135 1 89 10 
323 4 339 1 299 2 143 2 5 2 232 1 70 1 72 1 39 2 41 1 237 1 147 1 159 4 45 1 163 1 190 1 105 1 216 1 106 1 193 1 350 2 318 7 319 2 291 2 222 3 135 1 89 7 
323 3 45 2 299 1 190 1 105 1 350 1 318 4 319 1 143 1 232 1 5 1 35 1 222 2 135 1 39 1 41 1 89 4 159 3 
299 1 15 1 190 1 193 1 318 2 319 1 143 1 232 1 20 1 291 1 196 1 72 1 135 1 39 1 159 1 89 2 
323 7 339 1 299 1 143 2 232 1 5 1 35 1 10 1 207 1 39 1 41 1 159 5 45 2 190 1 216 1 106 1 105 1 350 3 318 9 319 2 291 1 222 4 135 1 89 9 
323 7 339 1 299 1 143 2 232 1 5 1 35 1 10 1 207 1 39 1 41 1 159 5 45 2 190 1 216 1 106 1 105 1 350 3 318 9 319 2 291 1 222 4 135 1 89 9 
211 1 28 1 76 1 139 1 2 1 19 1 307 1 79 1 233 1 206 1 293 1 294 1 183 1 186 1 
243 1 
243 1 211 1 234 1 293 2 294 2 31 1 334 1 265 1 
211 2 272 1 161 1 117 2 250 1 203 2 31 1 306 1 265 2 243 1 68 2 355 1 234 1 293 5 124 1 294 5 38 1 311 1 225 1 
243 1 234 1 251 1 
243 1 91 1 220 2 
307 2 206 2 138 1 139 2 183 2 2 2 186 2 19 1 
174 1 227 2 138 1 1 1 139 3 27 1 2 2 3 1 32 1 305 1 141 1 342 2 307 2 327 1 344 1 255 1 206 2 181 2 157 1 183 3 187 1 186 2 259 1 238 1 44 1 212 2 17 2 18 1 131 1 219 1 19 1 78 1 242 1 357 1 83 1 199 1 296 1 
307 1 79 1 206 1 233 1 28 1 139 1 183 1 2 1 186 1 19 1 
139 1 243 1 79 1 345 1 133 1 234 1 293 1 359 1 294 1 173 1 183 1 186 1 59 1 42 1 
139 1 2 1 243 1 307 1 79 1 206 1 345 1 133 1 234 1 293 2 294 2 173 1 183 1 186 1 59 1 
211 1 293 1 294 1 274 1 265 1 
243 1 211 1 234 1 293 2 294 2 31 1 265 1 148 1 
293 1 294 1 265 1 
14 1 138 2 139 2 2 1 307 1 206 1 182 1 183 2 186 2 
335 1 312 1 322 1 
174 1 212 1 138 1 139 1 27 1 17 1 3 1 342 1 242 1 328 1 357 1 83 1 157 1 183 1 199 1 259 1 
138 1 251 1 
174 1 212 1 27 1 139 2 2 1 17 1 3 1 342 1 242 1 307 1 357 1 126 1 37 1 83 1 157 1 199 1 183 2 186 1 259 1 322 1 
307 3 206 1 138 1 126 1 139 3 183 3 2 3 186 3 
307 1 79 1 28 1 139 1 183 1 2 1 186 1 
307 1 79 1 206 1 14 1 182 1 139 1 183 1 2 1 186 1 
174 1 227 1 363 1 138 1 27 1 139 4 2 3 3 1 32 1 305 1 342 1 307 3 327 1 255 1 206 2 345 1 181 2 182 1 126 1 157 1 37 1 183 4 187 1 186 3 259 1 238 1 44 1 212 1 17 1 18 1 219 1 19 1 78 1 242 1 79 1 133 1 357 1 293 1 294 1 83 1 173 1 199 1 114 1 59 1 
307 1 138 1 126 1 244 1 139 2 183 2 2 1 186 2 42 1 
128 1 139 3 2 3 243 1 307 3 79 1 206 1 133 1 345 1 293 1 182 1 294 1 126 2 37 1 173 1 183 3 186 3 114 1 59 1 
307 2 206 1 335 1 182 1 126 1 139 2 183 2 2 2 186 2 322 1 
174 1 212 1 138 1 139 1 27 1 17 1 3 1 342 1 242 1 357 1 83 1 157 1 183 1 199 1 259 1 
174 1 212 1 138 1 139 1 27 1 17 1 3 1 342 1 54 1 357 1 170 1 83 1 183 1 199 1 259 1 
271 1 227 4 30 1 32 1 305 1 252 1 343 1 327 1 255 1 181 2 312 2 331 1 73 1 238 1 75 1 333 1 262 1 218 1 219 1 78 2 353 1 335 2 322 2 296 2 
307 1 79 1 345 1 281 1 139 1 183 1 2 1 186 1 
138 1 139 5 2 4 307 4 206 1 182 1 126 2 244 1 37 1 183 5 186 5 58 1 42 1 116 1 
307 2 79 1 281 1 28 1 139 2 183 2 2 2 186 2 
201 1 169 1 209 1 
154 1 12 1 74 1 169 2 115 1 209 2 
169 1 209 1 
169 1 209 1 
12 1 115 1 
12 1 115 1 
12 1 115 1 
169 1 268 1 209 1 
169 1 268 1 209 1 
169 1 268 1 209 1 
169 1 264 1 209 1 
169 1 264 1 209 1 
169 1 264 1 209 1 
100 1 154 1 103 2 317 1 16 1 261 1 67 2 352 1 243 1 6 3 290 2 169 2 329 2 293 2 294 2 198 1 295 2 127 1 209 2 
201 1 103 1 138 1 217 1 139 2 261 1 301 1 286 1 2 2 230 1 67 1 307 2 6 1 194 1 293 1 169 1 329 1 294 1 295 1 183 2 84 1 86 1 186 2 209 1 
43 2 5 1 299 2 15 1 65 1 
5 1 299 1 39 1 
299 1 15 1 39 1 
43 1 5 2 299 3 15 1 65 1 146 1 
43 1 5 1 299 2 15 1 240 1 65 1 
361 2 91 1 202 1 117 1 301 1 203 1 30 1 31 1 276 1 343 1 68 1 144 2 69 1 234 1 38 3 258 1 239 1 211 4 333 1 262 1 286 1 192 1 220 3 265 1 243 2 355 1 293 5 294 5 223 1 86 1 88 2 225 2 
361 6 91 3 117 2 203 2 30 3 274 5 31 1 276 3 306 1 343 3 68 2 69 1 234 1 38 8 208 1 40 1 210 5 239 2 211 7 333 3 262 3 349 1 192 2 220 9 265 6 243 5 109 1 354 1 355 1 293 9 294 9 85 1 86 4 88 6 225 6 
361 2 91 2 117 1 203 1 30 1 276 1 306 1 343 1 68 1 144 1 234 1 38 3 258 1 239 1 211 2 333 1 262 1 192 1 220 4 243 3 293 3 294 3 223 1 86 1 225 2 88 2 
361 4 91 3 117 1 203 1 30 2 276 2 306 1 343 2 68 1 144 2 234 1 38 5 208 1 258 1 40 1 239 1 211 3 333 2 262 2 192 1 220 7 243 4 293 4 294 4 85 1 223 1 86 2 88 4 225 4 
374 1 
174 1 277 1 251 1 
174 1 221 1 
174 1 357 1 
174 3 277 2 357 1 330 1 3 1 288 1 
174 1 357 1 3 1 
174 1 53 1 
340 1 347 1 227 7 63 1 282 1 75 2 262 1 77 2 107 1 252 3 33 1 78 3 343 1 110 1 111 1 378 1 11 1 296 4 
340 1 227 31 63 2 205 1 30 3 276 3 252 10 33 1 343 4 93 1 327 1 255 1 181 2 235 4 145 3 238 1 347 2 282 2 333 3 75 5 77 3 262 4 107 2 287 1 219 1 78 15 197 1 110 1 378 1 111 5 200 1 61 1 296 16 338 1 
273 1 227 9 340 1 63 1 252 4 33 1 343 1 327 2 255 2 181 4 238 2 347 1 282 1 75 3 262 1 77 2 287 1 107 1 219 2 78 4 336 1 110 1 111 1 296 5 
340 1 347 1 227 7 63 1 282 1 75 2 262 1 77 2 107 1 252 3 33 1 78 3 343 1 110 1 111 1 378 1 296 4 
340 1 347 1 227 7 63 1 282 1 75 2 262 1 77 2 107 1 252 3 33 1 78 3 343 1 110 1 111 1 378 1 296 4 
174 1 212 1 13 2 27 1 17 1 375 1 376 1 229 2 49 1 318 1 319 1 365 1 342 1 143 1 291 2 292 2 357 1 95 1 83 1 184 1 259 1 332 1 89 1 
136 1 62 1 299 2 27 1 229 1 342 1 143 1 5 1 232 1 122 1 146 1 39 1 259 1 371 1 212 1 13 1 101 1 162 1 15 1 17 1 318 1 319 1 292 1 291 1 56 1 89 1 
136 1 323 1 62 1 299 2 27 1 229 1 342 1 143 1 5 1 232 1 122 1 146 1 39 1 259 1 371 1 159 1 212 1 13 1 101 1 15 1 190 1 17 1 318 2 319 1 292 1 291 1 356 1 56 1 135 1 89 2 
136 1 323 2 62 1 299 2 178 1 27 1 229 1 342 1 365 1 143 1 5 1 122 1 146 1 39 1 259 1 159 1 212 1 13 1 101 1 162 1 15 1 190 1 17 1 318 3 319 1 292 1 291 1 56 1 135 1 89 3 
323 2 62 1 299 2 178 1 27 1 229 1 342 1 5 1 122 1 146 1 39 1 259 1 159 1 212 1 13 1 101 1 162 1 15 1 190 1 17 1 318 2 291 1 292 1 135 1 89 2 
34 1 
117 1 203 1 342 2 68 1 254 1 345 1 7 2 158 1 259 1 315 4 212 2 346 1 17 2 130 1 166 2 220 2 167 1 265 6 132 1 266 2 79 1 355 1 133 1 357 1 358 2 359 1 83 2 173 1 225 2 269 1 174 1 137 1 91 2 27 1 139 1 31 3 275 1 326 1 234 1 369 1 38 2 183 1 185 2 96 2 186 1 97 1 42 1 239 1 376 1 49 1 50 2 243 2 293 5 294 5 59 1 
139 1 31 1 326 1 345 1 183 1 158 1 186 1 97 1 315 2 42 1 334 1 132 1 265 2 79 1 133 1 293 3 358 1 359 1 294 3 173 1 59 1 269 1 
139 1 31 1 326 1 345 1 234 1 183 1 158 1 186 1 97 1 315 3 42 1 166 1 334 1 265 1 132 1 243 1 79 1 133 1 293 3 359 1 294 3 173 1 59 1 269 1 
139 1 31 1 326 1 345 1 234 1 183 1 158 1 186 1 185 1 97 1 315 3 42 1 334 1 166 1 132 1 265 2 243 1 79 1 133 1 293 3 358 1 359 1 294 3 173 1 59 1 269 1 
117 1 203 1 68 1 345 1 7 2 9 1 71 1 158 1 315 6 130 1 166 4 265 7 132 1 167 1 266 2 79 1 133 1 355 1 358 4 359 1 172 1 173 1 269 1 225 1 91 2 139 1 29 1 31 3 326 1 234 5 38 1 183 1 185 4 186 1 96 2 97 1 42 1 279 1 334 1 50 2 243 5 293 5 294 5 59 1 
117 1 203 1 68 1 345 1 7 2 158 1 315 4 130 1 166 2 220 2 132 1 167 1 265 4 266 2 79 1 133 1 355 1 358 2 359 1 173 1 269 1 225 1 91 2 139 1 31 2 326 1 234 1 369 1 38 1 183 1 186 1 96 2 185 2 97 1 42 1 50 2 243 2 293 4 294 4 59 1 
91 2 117 1 139 1 29 1 203 1 31 2 326 1 68 1 345 1 234 1 7 2 38 1 183 1 158 1 185 2 96 2 186 1 97 1 315 4 42 1 279 1 130 1 166 2 50 2 265 4 167 1 132 1 243 1 266 2 79 1 133 1 355 1 358 2 293 4 359 1 294 4 172 1 173 1 225 1 59 1 269 1 
91 2 117 1 139 1 29 1 203 1 31 2 326 1 68 1 345 1 234 1 7 2 38 1 183 1 158 1 185 2 96 2 186 1 97 1 315 4 42 1 279 1 130 1 166 2 50 2 265 4 167 1 132 1 243 1 266 2 79 1 133 1 355 1 358 2 293 4 359 1 294 4 172 1 173 1 225 1 59 1 269 1 
90 1 117 1 139 1 203 1 31 2 120 1 326 1 68 1 345 1 234 1 257 1 38 1 310 2 183 1 158 1 185 2 96 2 186 1 97 1 315 4 42 1 279 1 166 2 220 2 265 4 167 1 132 1 243 1 266 2 79 1 133 1 355 1 358 2 293 4 359 1 294 4 82 2 173 1 225 1 59 1 269 1 
91 2 117 1 139 1 29 1 203 1 31 2 326 1 68 1 345 1 234 1 7 2 9 1 38 1 183 1 158 1 96 2 186 1 185 3 97 1 315 5 42 1 279 1 130 1 166 3 50 2 167 1 132 1 265 5 243 1 266 2 79 1 355 1 133 1 293 4 358 3 359 1 294 4 172 1 173 1 225 1 59 1 269 1 
91 2 117 1 139 1 29 1 203 1 31 2 326 1 68 1 345 1 234 1 7 2 9 1 38 1 183 1 158 1 96 2 186 1 185 3 97 1 315 5 42 1 279 1 130 1 166 3 50 2 167 1 132 1 265 5 243 1 266 2 79 1 355 1 133 1 293 4 358 3 359 1 294 4 172 1 173 1 225 1 59 1 269 1 
117 1 139 1 203 1 31 2 326 1 68 1 345 1 234 1 369 1 257 1 38 1 310 2 158 1 183 1 185 2 96 2 186 1 97 1 315 4 42 1 166 2 220 2 265 4 167 1 132 1 243 1 266 2 79 1 355 1 133 1 358 2 293 4 359 1 294 4 82 2 173 1 225 1 269 1 59 1 
174 3 226 1 227 2 1 2 139 1 27 2 2 1 140 1 32 2 305 2 342 8 307 1 327 2 255 2 181 4 126 1 183 1 186 1 187 1 313 1 259 2 238 2 212 7 162 1 17 8 150 1 376 1 219 2 131 1 49 1 78 1 353 1 356 1 357 2 83 2 320 1 113 1 379 1 296 1 
153 1 227 3 177 1 139 1 2 1 30 1 32 1 252 1 305 1 276 1 343 1 307 1 327 1 206 1 255 1 181 2 182 1 183 1 312 1 186 1 238 1 75 1 333 1 262 1 219 1 78 2 335 1 322 1 296 1 
340 1 227 6 63 1 138 2 251 1 32 1 305 1 252 2 33 1 343 1 327 1 255 1 181 2 312 1 238 1 75 2 262 1 77 1 107 1 219 1 78 3 353 1 335 1 110 1 322 1 296 3 
153 1 227 14 138 1 228 1 30 1 304 1 32 1 252 2 305 2 276 2 343 2 327 2 255 2 181 4 36 1 235 3 145 3 312 11 187 1 238 2 75 1 260 1 333 2 262 1 131 1 219 2 78 6 335 4 111 1 200 1 322 11 296 8 61 1 
174 1 153 1 227 2 138 1 27 1 139 2 2 1 3 1 32 1 305 1 342 1 307 1 327 1 255 1 328 1 181 2 126 1 157 1 37 1 183 2 186 1 187 1 259 1 238 1 212 1 283 1 316 1 17 1 219 1 131 1 242 1 78 1 289 1 357 1 335 1 83 1 199 1 296 1 
153 1 340 1 248 1 63 1 2 1 3 2 303 2 305 3 252 8 342 3 343 3 307 1 255 3 126 1 157 2 312 7 259 2 212 3 162 1 129 2 75 4 77 1 262 3 17 3 18 2 131 1 219 3 78 10 357 2 83 1 24 2 322 7 174 2 227 20 138 2 364 1 139 3 27 2 30 2 32 3 276 2 33 1 142 1 327 3 181 6 37 1 183 3 187 1 186 1 238 3 333 2 107 1 242 2 335 7 110 1 112 2 199 2 111 4 296 10 
238 1 227 2 333 1 32 1 219 1 252 1 305 1 343 1 353 1 327 1 255 1 335 1 181 2 111 1 312 1 73 1 322 1 296 2 
238 1 227 2 75 1 262 1 30 1 32 1 219 1 252 1 305 1 78 2 353 1 327 1 255 1 335 1 181 2 312 1 331 1 322 1 
238 1 227 4 75 1 333 1 262 1 30 1 32 1 219 1 252 2 305 1 276 1 78 2 343 1 353 1 327 1 255 1 335 2 181 2 111 1 312 2 322 2 296 2 
238 1 227 2 333 1 32 1 219 1 252 1 305 1 343 1 327 1 255 1 335 1 181 2 111 1 312 1 113 1 73 1 322 1 296 2 
238 1 227 2 75 1 262 1 30 1 32 1 219 1 252 1 305 1 78 2 327 1 255 1 335 1 181 2 312 1 113 1 331 1 322 1 
238 1 227 4 75 1 333 1 262 1 30 1 32 1 219 1 252 2 305 1 276 1 78 2 343 1 327 1 255 1 335 2 181 2 111 1 312 2 113 1 322 2 296 2 
238 1 227 4 75 1 333 1 262 1 30 1 32 1 219 1 252 2 305 1 276 1 78 2 343 1 327 1 255 1 335 2 181 2 111 1 312 2 322 2 296 2 
174 1 227 2 138 1 27 1 139 1 3 1 32 1 305 1 342 1 327 1 255 1 181 2 157 1 183 1 187 1 259 1 238 1 212 1 17 1 18 1 131 1 219 1 242 1 78 1 357 1 83 1 199 1 296 1 
174 1 227 2 138 1 27 1 139 1 3 1 32 1 305 1 342 1 327 1 255 1 181 2 368 1 183 1 187 1 259 1 238 1 212 1 17 1 131 1 219 1 78 1 357 1 54 1 170 1 83 1 199 1 296 1 
238 1 153 1 227 4 75 1 333 1 262 1 30 1 32 1 219 1 252 2 305 1 276 1 78 2 343 1 327 1 255 1 335 2 181 2 111 1 312 2 322 2 296 2 
174 1 227 4 27 1 139 1 30 1 3 1 303 1 32 1 252 2 305 1 276 1 342 1 343 1 327 1 255 1 181 2 157 1 183 1 312 2 259 1 238 1 212 1 75 1 333 1 262 1 17 1 18 1 219 1 78 2 242 1 356 1 357 1 335 2 111 1 199 1 322 2 296 2 
153 1 227 3 139 1 2 1 30 1 32 1 252 1 305 1 276 1 180 1 343 1 307 1 327 1 206 1 255 1 181 2 182 1 183 1 312 1 186 1 238 1 333 1 262 1 219 1 78 1 335 1 111 1 322 1 296 2 
270 2 298 1 273 1 227 19 300 1 66 1 30 3 276 3 252 6 253 1 343 3 327 2 366 1 255 2 123 1 181 4 235 2 145 1 238 2 75 3 333 3 214 2 262 3 219 2 78 10 80 1 111 3 200 1 296 9 61 1 
270 4 298 2 273 1 227 26 300 1 249 1 66 1 30 2 252 4 276 3 343 3 327 3 366 2 255 3 181 6 256 1 235 2 145 2 238 3 280 1 75 2 333 3 214 1 262 2 287 2 351 1 219 3 78 12 80 1 111 2 337 1 152 1 200 2 296 14 
298 2 340 1 63 1 300 1 249 1 66 1 252 8 343 5 253 1 255 3 256 1 75 4 262 5 77 1 214 1 165 1 219 3 351 1 78 21 80 1 270 4 227 41 273 1 30 4 276 4 33 1 327 3 366 1 181 6 235 4 145 3 238 3 280 1 333 4 287 1 107 1 110 1 111 4 337 1 152 1 200 3 61 1 296 20 
270 4 298 2 340 1 273 1 227 38 63 1 300 1 249 1 66 1 30 3 276 4 252 7 33 1 253 1 343 5 327 4 366 1 255 4 256 1 181 8 235 4 145 3 238 4 280 1 75 4 333 4 214 1 77 1 262 4 165 1 107 1 287 2 351 1 219 4 78 18 80 1 110 1 111 3 337 1 152 1 200 3 296 20 61 1 
270 4 298 1 340 1 273 1 227 52 63 1 300 1 249 1 228 2 66 1 30 7 276 7 252 14 33 1 343 8 327 2 366 1 255 2 256 1 181 4 235 4 145 4 238 2 280 1 75 7 333 7 214 1 77 1 262 8 107 1 287 1 351 1 219 2 78 25 80 1 110 1 111 7 337 1 152 1 200 2 296 27 61 2 
100 1 154 1 329 1 169 1 103 1 16 1 295 1 23 1 67 1 209 1 
201 1 230 1 
99 1 329 1 169 1 103 1 370 1 309 1 295 1 67 1 209 1 
100 1 154 1 103 1 16 1 261 1 67 1 352 1 243 1 6 2 290 1 293 1 169 1 329 1 294 1 198 1 295 1 127 1 209 1 
100 1 154 1 103 1 16 1 261 1 67 1 352 1 243 1 6 2 290 1 293 1 169 1 329 1 294 1 198 1 295 1 127 1 209 1 
100 1 154 1 103 1 16 1 261 1 67 1 352 1 243 1 6 2 290 1 293 1 169 1 329 1 294 1 198 1 295 1 127 1 209 1 
297 1 74 1 268 1 
297 1 74 1 268 1 
8 1 264 1 
74 1 8 1 264 1 
194 1 217 1 
201 1 138 1 139 2 301 1 2 2 67 1 230 1 307 2 6 1 329 1 183 2 186 2 209 1 211 1 103 1 104 1 217 1 286 1 352 1 290 1 194 1 293 1 169 1 294 1 295 1 84 1 86 1 
297 1 268 1 
74 1 8 1 264 1 
174 1 153 1 227 2 1 2 27 1 139 2 140 1 179 1 32 1 305 1 342 2 327 1 255 1 181 2 367 1 183 2 186 2 187 1 259 1 238 1 212 2 213 1 164 1 17 2 219 1 131 1 78 1 357 1 171 1 379 1 296 1 
174 1 212 1 27 1 64 1 17 1 376 1 49 1 342 1 292 1 357 1 95 1 83 1 259 1 360 1 
136 1 212 1 299 2 101 1 162 1 15 1 27 1 64 1 17 1 108 1 241 1 342 1 5 1 292 1 122 1 146 1 39 1 259 1 
136 1 212 2 299 2 101 1 162 1 15 1 27 1 64 1 17 2 108 1 241 1 342 2 5 1 292 1 122 1 356 1 146 1 39 1 259 1 
136 1 212 1 299 2 101 1 162 1 15 1 27 1 17 1 92 1 241 1 342 1 5 1 292 1 122 1 146 1 39 1 259 1 
362 1 
117 1 250 1 203 1 68 1 243 1 355 1 234 1 38 1 311 1 225 1 
361 5 91 5 333 2 262 2 30 2 276 2 220 10 343 2 243 5 308 1 38 5 224 2 24 1 225 5 88 5 
243 1 234 1 293 1 294 1 31 1 265 1 
174 1 247 1 117 2 27 1 203 2 275 2 31 2 306 1 342 4 121 1 68 2 254 1 38 2 259 1 239 2 212 4 346 1 46 1 17 4 376 1 49 1 265 4 355 1 134 2 357 1 293 3 294 3 83 2 225 2 
243 1 234 1 38 1 250 1 311 1 251 1 225 1 
91 1 117 1 130 1 203 1 31 1 220 1 50 1 265 1 243 2 68 1 355 1 234 1 7 1 293 1 294 1 38 1 225 1 
247 1 117 4 250 1 203 4 3 3 342 3 341 2 343 2 68 4 308 2 125 2 311 1 259 3 212 3 262 2 17 3 220 12 265 5 355 4 133 2 134 1 356 1 357 3 221 3 83 1 224 2 87 1 24 2 88 6 225 8 174 10 361 6 91 6 27 4 275 1 31 3 30 2 325 2 276 2 277 2 234 2 94 1 38 9 278 2 236 2 239 2 333 2 288 1 53 2 243 8 195 1 293 5 294 5 380 2 
361 5 91 3 117 2 249 1 203 2 275 1 31 1 30 2 276 2 343 2 68 2 234 2 256 1 308 1 235 1 38 8 145 1 239 1 280 1 333 2 262 2 351 1 220 6 265 1 51 1 243 5 355 2 293 1 294 1 245 1 337 1 224 2 200 1 88 5 225 5 
175 1 340 1 63 1 117 1 28 1 139 1 2 1 203 1 343 2 68 1 307 1 233 1 206 1 308 1 38 2 183 1 186 1 262 1 76 1 107 1 19 1 79 1 355 1 293 1 294 1 172 1 224 2 225 2 
174 1 227 1 138 1 139 3 27 1 2 2 3 1 32 1 305 1 342 1 307 2 327 1 255 1 206 2 181 2 157 1 183 3 187 1 186 2 259 1 238 1 44 1 212 1 17 1 18 1 219 1 19 1 78 1 242 1 357 1 83 1 199 1 
361 2 239 1 91 2 117 1 77 1 203 1 275 1 220 4 68 1 243 4 355 1 234 2 38 1 88 2 225 2 
329 1 16 1 217 1 67 1 52 1 
0 1 329 1 67 1 
0 1 329 1 67 1 
0 1 329 1 67 1 
329 1 302 1 67 1 
329 1 302 1 67 1 
329 1 302 1 67 1 
329 1 67 1 
169 1 209 1 
238 1 175 1 273 1 227 10 340 1 63 2 75 3 262 2 107 2 219 1 252 5 78 5 343 2 327 1 255 1 181 2 111 2 296 5 
238 1 273 1 227 2 333 1 219 1 252 1 343 1 327 1 255 1 181 2 111 1 296 2 
238 1 273 1 227 4 75 1 333 1 262 1 30 1 219 1 252 2 276 1 78 2 343 1 327 1 255 1 181 2 111 1 296 2 
238 3 227 3 273 1 63 1 75 1 118 1 287 1 107 1 219 3 252 2 253 1 78 2 327 3 255 3 181 6 111 1 296 1 
340 2 273 1 227 34 63 3 118 1 205 1 30 3 119 1 276 3 252 12 33 1 253 1 343 5 93 1 327 5 255 5 181 10 235 4 145 3 238 5 333 3 75 7 77 1 262 5 107 3 287 2 219 5 78 18 110 1 111 5 200 1 338 1 296 16 61 1 
238 2 340 1 227 8 63 1 75 2 77 1 262 1 287 1 107 1 219 2 252 3 33 1 343 1 78 4 327 2 255 2 181 4 110 1 111 1 296 4 
340 1 227 6 63 1 75 2 77 1 262 1 251 1 107 1 252 2 33 1 78 3 343 1 110 1 296 3 
238 1 227 4 75 1 333 1 262 1 30 1 119 1 219 1 252 2 276 1 78 2 343 1 327 1 255 1 181 2 111 1 296 2 
227 7 75 1 333 1 262 1 30 1 276 1 252 2 78 4 343 1 235 2 145 1 111 1 200 1 296 3 61 1 
340 1 227 23 63 2 228 1 118 1 30 2 304 1 252 9 276 2 33 1 343 3 327 2 255 2 181 4 235 2 145 2 238 2 333 2 75 5 77 1 262 3 107 2 287 2 219 2 78 12 110 1 111 4 61 1 296 11 
227 1 235 1 78 1 
227 1 145 1 296 1 
238 1 227 6 333 1 75 2 262 1 30 1 219 1 119 1 276 1 252 3 78 3 343 1 327 1 255 1 181 2 111 1 24 1 296 3 
227 12 273 1 249 1 30 2 276 2 252 2 343 2 327 1 255 1 181 2 256 1 235 1 145 1 238 1 280 1 333 2 75 1 262 2 219 1 351 1 78 6 111 1 337 1 200 1 296 6 
340 1 227 6 63 1 75 1 262 1 107 1 252 2 343 1 78 3 111 1 296 3 
238 1 227 3 63 1 75 1 118 1 107 1 287 1 219 1 252 2 33 1 78 2 327 1 255 1 181 2 110 1 111 1 296 1 
227 8 273 1 340 1 63 1 252 2 33 1 343 1 327 1 255 1 181 2 235 1 145 1 238 1 280 1 75 2 77 1 262 1 107 1 219 1 78 4 110 1 200 1 296 4 
340 1 227 11 273 1 63 1 119 1 276 1 252 3 33 1 343 2 327 2 255 2 181 4 235 2 145 1 238 2 280 1 75 2 333 1 77 1 262 1 107 1 219 2 78 5 110 1 111 1 200 1 296 6 61 1 
340 1 227 19 273 1 63 1 249 1 30 2 119 1 276 2 252 4 33 1 343 3 327 3 255 3 181 6 256 1 235 1 145 1 238 3 280 1 333 2 75 3 77 1 262 3 107 1 287 1 351 1 219 3 78 10 110 1 111 1 337 1 200 1 296 9 
340 1 227 17 273 1 63 1 249 1 30 1 119 1 276 2 252 5 33 1 343 3 327 3 255 3 181 6 256 1 235 1 145 1 238 3 280 1 333 2 75 3 77 1 262 2 107 1 287 1 219 3 351 1 78 7 110 1 111 2 337 1 200 1 296 10 
227 8 273 1 340 1 63 1 252 2 33 1 343 1 327 1 255 1 181 2 235 1 145 1 238 1 280 1 75 2 77 1 262 1 107 1 219 1 78 4 110 1 200 1 296 4 
227 12 273 1 249 1 30 2 276 2 252 2 343 2 327 1 255 1 181 2 256 1 235 1 145 1 238 1 280 1 333 2 75 1 262 2 219 1 351 1 78 6 111 1 337 1 200 1 296 6 
340 1 227 18 273 1 63 1 249 1 30 1 119 1 276 2 252 5 33 1 343 3 327 4 255 4 181 8 256 1 235 1 145 1 238 4 280 1 333 2 75 3 77 1 262 2 107 1 287 2 351 1 219 4 78 8 110 1 111 2 337 1 200 1 296 10 
227 16 273 1 249 1 30 2 276 3 252 6 253 1 343 3 327 4 255 4 181 8 256 1 235 1 145 1 238 4 280 1 333 3 75 3 262 2 287 2 351 1 219 4 78 7 111 3 337 1 200 1 296 9 
227 7 340 1 63 3 75 3 262 1 107 3 252 6 33 1 78 4 343 1 110 2 111 3 296 3 
340 1 227 18 273 1 63 1 249 1 30 1 276 2 252 4 33 1 253 1 343 3 327 4 255 4 181 8 256 1 235 1 145 1 238 4 280 1 333 2 75 3 77 1 262 2 107 1 287 2 351 1 219 4 78 8 110 1 111 1 337 1 200 1 296 10 
138 1 244 1 139 1 191 1 183 1 186 1 42 1 
372 1 138 1 284 1 26 1 191 1 139 1 156 1 244 1 183 1 186 1 314 1 42 1 
174 1 212 4 357 1 356 1 83 1 27 1 17 4 204 1 376 1 49 1 259 1 342 4 60 1 
174 1 189 1 212 1 176 1 364 1 285 1 27 2 17 1 3 1 342 1 81 1 357 1 259 1 
212 1 122 1 299 1 15 1 83 1 27 1 17 1 39 1 259 1 342 1 
174 1 212 2 213 1 162 1 27 1 17 2 140 1 342 2 356 1 357 1 259 1 
174 3 212 4 226 1 27 2 17 5 376 1 140 1 49 1 342 5 134 1 356 1 357 2 83 1 320 1 259 2 60 1 
174 3 212 4 226 1 27 2 17 5 376 1 140 1 49 1 151 1 342 5 134 1 356 1 357 2 83 1 259 2 60 1 
174 1 212 1 357 1 83 1 27 1 17 1 251 1 376 1 49 1 259 1 342 1 
174 1 212 1 138 1 27 1 139 2 2 1 17 1 3 1 342 1 242 1 307 1 357 1 126 1 83 1 199 1 183 2 186 1 259 1 
174 3 212 1 138 1 27 1 139 2 2 2 17 1 3 2 53 1 342 1 242 1 307 1 79 1 345 1 357 2 134 1 125 1 126 1 173 1 199 1 183 2 186 2 259 1 
174 3 212 2 138 1 27 1 139 2 2 2 17 2 204 1 3 2 53 1 342 2 307 1 79 1 345 1 357 2 134 1 170 1 125 1 126 1 173 1 199 1 183 2 186 2 259 1 
174 4 212 3 25 1 27 1 17 3 204 1 3 1 53 1 342 3 265 1 243 1 133 1 277 1 234 1 357 1 134 1 293 2 294 2 221 1 125 1 83 1 259 1 381 1 
174 4 212 3 27 1 17 3 204 1 3 1 53 1 342 3 265 1 243 1 133 1 277 1 234 1 357 1 134 1 293 2 294 2 221 1 125 1 83 1 278 1 259 1 
212 1 27 1 17 1 259 1 313 1 342 1 
160 1 174 1 189 1 212 1 285 1 27 2 17 1 3 1 342 1 288 1 357 1 83 1 259 1 
174 1 153 1 227 6 340 1 138 2 63 1 27 1 139 2 2 1 3 1 32 2 303 1 252 2 305 2 33 1 342 1 343 1 307 1 327 2 255 2 181 4 367 1 126 1 157 1 183 2 312 1 186 1 259 1 238 2 212 1 75 2 77 1 262 1 17 1 107 1 18 1 219 2 78 3 242 1 357 1 356 1 335 1 110 1 199 1 112 1 322 1 296 3 
174 2 247 1 117 2 250 1 203 2 31 1 342 1 341 1 68 2 277 1 234 1 38 1 311 1 278 1 236 1 212 1 211 1 17 1 265 2 243 1 355 2 133 1 293 3 294 3 221 1 83 1 380 1 225 1 
174 2 212 2 27 2 17 2 3 1 342 2 288 1 277 1 356 1 94 1 357 1 313 1 259 1 
174 1 212 1 138 1 27 1 139 2 2 1 17 1 3 1 342 1 307 1 357 1 170 1 126 1 83 1 199 1 183 2 186 1 259 1 
160 1 174 1 189 1 212 1 285 1 27 2 17 1 3 1 342 1 288 1 134 1 357 1 259 1 
168 1 21 1 138 1 55 1 47 1 
211 1 246 1 138 1 47 2 4 1 243 1 79 1 133 1 345 1 168 1 234 1 21 2 293 2 294 2 55 2 173 1 57 1 114 1 59 1 
168 1 21 1 171 1 139 1 164 1 183 1 186 1 179 1 47 1 
168 1 57 1 4 1 
143 1 232 1 190 1 135 1 318 1 319 1 159 1 89 1 
323 2 190 2 348 1 350 1 318 4 319 1 143 1 22 1 72 1 222 1 321 1 135 2 89 4 159 3 
323 1 190 1 48 1 318 2 319 1 143 1 231 1 232 1 207 1 135 1 159 1 89 2 
190 1 263 1 318 3 319 1 143 1 232 1 22 1 72 2 321 2 135 1 159 1 89 3 
149 1 102 1 155 2 159 2 
143 1 377 1 232 1 318 1 319 1 89 1 
143 1 323 1 232 1 190 1 106 1 135 1 318 2 319 1 159 1 89 2 
373 1 
143 1 232 1 190 1 135 1 318 1 319 1 159 1 89 1 
190 1 135 1 251 1 159 1 
143 1 190 1 135 1 318 1 319 1 159 1 89 1 
291 1 229 1 318 1 
190 1 318 3 319 1 143 1 267 1 232 1 22 1 72 2 321 1 135 1 159 1 89 3 
143 1 323 1 45 1 190 1 135 1 318 2 319 1 159 1 89 2 
299 1 105 1 318 1 319 1 143 1 232 1 5 1 222 1 39 1 89 1 159 1 
143 1 232 1 135 1 318 1 319 1 159 1 89 1 
143 1 232 1 190 1 135 2 318 1 319 1 89 1 
98 1 215 1 318 2 319 2 143 2 232 1 135 1 159 1 89 2 188 1 
323 2 190 1 216 1 106 1 350 1 318 3 319 1 143 1 232 1 222 1 135 1 89 3 159 2 
323 1 299 2 15 1 190 1 324 1 318 2 319 1 143 1 232 1 5 1 135 1 146 1 39 1 159 1 89 2 
323 2 45 1 190 1 350 1 318 4 319 2 143 2 232 1 35 1 222 1 135 1 89 4 159 2 
323 1 190 1 106 1 318 3 319 1 143 1 232 1 72 1 135 1 89 3 159 1 
348 1 222 1 350 1 159 1 
135 1 159 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 189 335 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 189 172 199 219 (74,282) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 189 263 316 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 189 263 316 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 189 263 316 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 189 263 316 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 189 263 316 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 189 335 101 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 205 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 189 211 209 274 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 189 335 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 189 172 199 270 196 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 189 172 199 219 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 189 172 199 219 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 189 335 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 189 335 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 189 109 322 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 189 109 322 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 189 109 322 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 189 109 322 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 189 109 322 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 189 335 101 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 189 172 144 142 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 189 172 199 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 41 365 338 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 189 211 23 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 41 365 338 (66,123) (66,123) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 41 365 338 (66,123) (66,123) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 205 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 189 172 199 270 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 189 211 23 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 189 211 209 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 189 211 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 189 172 199 270 196 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 189 211 23 161 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 189 172 144 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 41 365 338 (66,123) (66,123) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 189 172 144 (66,123) (66,123) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 3 61 2 30 1 260 1 179 1 43 1 244 3 267 1 76 1 51 1 91 2 239 1 115 2 
128 9 61 2 30 1 298 2 354 1 131 1 190 1 12 1 91 2 213 1 239 1 257 1 115 5 313 2 242 1 178 1 260 6 179 1 43 3 139 1 244 9 266 2 267 4 76 1 51 2 202 1 166 1 224 2 
128 9 61 2 30 1 298 2 354 1 131 1 190 1 12 1 91 2 213 1 239 1 257 1 115 5 313 2 242 1 178 1 260 6 179 1 43 3 139 1 244 9 266 2 267 4 76 1 51 2 202 1 166 1 224 2 
128 10 61 2 30 1 298 2 354 1 131 1 190 1 12 1 91 2 213 1 239 1 257 1 115 6 313 2 242 1 178 1 260 7 179 1 43 4 139 1 244 10 266 2 267 5 76 1 51 2 202 1 166 1 224 2 
128 7 61 2 30 1 298 2 354 1 131 1 190 1 12 1 91 2 239 1 257 1 115 4 313 2 242 1 178 1 260 4 179 1 43 2 139 1 244 7 266 1 267 3 76 1 51 2 202 1 166 1 224 2 
128 4 61 1 30 1 298 1 260 3 179 1 43 1 139 1 244 4 266 2 267 2 76 1 91 1 213 1 166 1 115 3 313 1 224 1 
128 2 241 1 61 1 136 1 242 1 178 1 30 1 348 1 298 1 179 1 244 2 76 1 51 1 91 1 115 1 224 1 
128 9 61 2 30 1 298 1 131 1 190 1 91 2 213 1 239 1 115 5 313 1 260 7 179 1 43 3 139 1 244 9 266 2 267 4 76 1 51 1 125 1 166 1 57 1 224 1 
128 9 61 2 30 1 298 1 131 1 190 1 91 2 213 1 239 1 115 5 313 1 260 7 179 1 43 3 139 1 244 9 266 2 267 4 76 1 51 1 125 1 166 1 57 1 224 1 
285 1 36 1 16 1 297 1 83 1 130 1 19 1 262 1 289 1 220 1 269 1 362 1 145 1 330 1 
204 1 
36 2 97 1 37 1 255 1 204 1 19 1 198 1 330 2 
36 5 97 1 176 2 347 1 37 2 108 1 100 1 339 1 19 2 229 1 103 1 234 1 255 1 204 1 236 2 185 1 330 5 222 2 283 1 
255 1 204 1 205 1 
122 2 204 1 306 1 
285 2 16 2 297 2 130 2 84 1 362 2 145 2 262 1 
3 1 251 1 297 2 129 1 252 1 130 2 84 1 210 1 302 2 253 1 189 1 279 1 11 1 173 1 174 2 157 1 285 2 15 1 16 2 71 1 335 1 320 1 262 1 264 1 21 1 265 1 75 1 245 1 246 1 362 3 248 2 249 1 145 3 27 1 126 1 80 1 366 1 
285 1 16 1 297 1 83 1 130 1 220 1 269 1 362 1 145 1 262 1 
149 1 36 1 16 1 83 1 343 1 255 1 153 1 204 1 237 1 362 1 52 1 145 1 330 1 294 1 
285 1 36 2 149 1 16 1 297 1 130 1 83 1 255 1 153 1 204 1 237 1 362 1 52 1 145 1 330 2 
36 1 37 1 34 1 19 1 330 1 
36 2 97 1 37 1 255 1 204 1 7 1 19 1 330 2 
36 1 37 1 330 1 
285 1 16 2 297 1 130 1 84 2 13 1 362 2 145 2 147 1 
150 1 99 1 74 1 
129 1 252 1 84 1 210 1 358 1 302 1 253 1 21 1 265 1 279 1 174 1 362 1 248 1 145 1 126 1 80 1 
84 1 205 1 
285 4 16 5 297 1 130 4 84 1 273 1 111 1 8 1 343 1 163 2 212 1 362 5 145 5 147 1 
285 2 16 2 133 1 83 1 130 2 269 1 362 2 145 2 
285 1 16 1 150 1 252 1 129 1 130 1 210 1 302 1 163 1 253 1 21 1 265 1 212 1 279 1 174 1 362 2 248 1 145 2 80 1 126 1 
285 3 16 3 297 1 130 3 84 1 362 3 145 3 163 1 
285 1 16 1 83 1 130 1 269 1 362 1 145 1 
285 1 16 1 297 1 83 1 130 1 13 1 362 1 145 1 147 1 
149 1 3 1 252 1 129 1 297 2 130 3 83 1 84 1 210 1 302 1 253 1 212 1 279 1 153 1 173 1 237 1 174 1 330 1 240 1 157 1 285 3 36 1 15 1 16 3 71 1 320 1 262 1 163 1 264 1 21 1 265 1 75 1 245 1 246 1 362 4 248 1 52 1 249 1 145 4 80 1 126 1 147 1 366 1 167 1 
285 1 16 2 130 1 84 1 362 2 111 1 145 2 343 1 163 1 
285 3 36 1 149 1 16 3 297 1 83 1 130 3 163 2 212 1 153 1 204 1 328 1 237 1 362 3 52 1 145 3 330 1 147 1 240 1 
285 2 16 2 150 1 297 1 130 2 362 2 145 2 74 1 147 1 163 1 
129 1 252 1 84 1 210 1 302 1 21 1 253 1 265 1 279 1 174 1 362 1 248 1 145 1 126 1 80 1 
216 1 84 1 210 1 302 1 21 1 253 1 265 1 279 1 174 1 165 1 362 1 248 1 145 1 126 1 80 1 
157 1 148 1 3 1 15 1 96 1 150 1 99 1 340 1 301 1 74 1 199 1 264 1 75 2 189 1 219 1 245 1 172 1 282 1 246 1 78 1 249 1 366 2 
285 1 16 1 133 1 83 1 130 1 237 1 362 1 145 1 
118 1 171 1 350 1 
98 1 171 2 361 1 226 1 25 1 350 2 
171 1 350 1 
171 1 350 1 
226 1 25 1 
226 1 25 1 
226 1 25 1 
171 1 350 1 284 1 
171 1 350 1 284 1 
171 1 350 1 284 1 
171 1 350 1 81 1 
171 1 350 1 81 1 
171 1 350 1 81 1 
130 2 84 1 350 1 86 1 152 1 171 1 90 1 14 1 330 1 155 1 285 2 36 1 118 1 119 1 16 2 318 1 180 1 206 1 182 1 124 1 247 1 362 2 145 2 54 1 
36 2 195 1 271 1 98 1 318 1 85 2 350 2 86 2 359 1 305 1 113 1 171 2 204 1 206 2 247 2 54 2 330 2 155 3 214 1 
258 2 348 1 298 2 313 1 357 1 
298 1 313 1 224 1 
348 1 298 1 224 1 
258 1 348 1 287 1 298 3 313 2 357 1 
258 1 217 1 348 1 298 2 313 1 357 1 
108 3 301 1 229 1 303 1 306 1 255 1 90 1 172 1 236 1 311 1 14 1 330 5 356 1 194 2 68 1 36 5 96 1 176 1 97 1 37 1 122 3 137 1 19 4 288 1 141 2 199 1 204 2 182 1 77 2 270 1 185 2 222 1 
108 8 276 1 301 3 351 5 229 1 304 1 306 3 31 1 89 1 255 1 34 5 172 3 236 2 14 4 330 9 194 6 68 2 314 1 36 9 96 3 97 1 176 2 37 6 40 1 122 9 100 1 137 1 19 7 288 2 141 6 199 3 204 5 270 3 185 6 222 2 
108 3 301 1 303 1 306 2 255 1 236 1 172 1 311 1 14 1 330 3 194 2 68 1 36 3 96 1 176 1 122 4 100 1 19 2 288 1 199 1 141 2 204 3 77 1 270 1 185 2 222 1 
108 5 276 1 301 2 304 1 303 1 306 3 31 1 255 1 236 1 172 2 311 1 14 2 330 4 194 4 68 1 36 4 96 2 176 1 122 7 100 1 19 3 288 1 141 4 199 2 204 4 77 2 270 2 185 4 222 1 
341 1 
38 1 205 1 253 1 
329 1 253 1 
279 1 253 1 21 1 
309 1 253 1 
253 1 21 1 
225 1 279 1 38 2 253 3 21 1 46 1 
117 1 189 1 316 1 184 1 263 1 
189 1 316 1 184 1 263 1 
189 1 316 1 184 1 263 1 
189 1 316 1 184 1 263 1 
189 1 316 1 184 1 263 1 
58 1 0 1 128 1 324 1 61 1 210 1 277 1 302 1 278 1 253 1 281 1 256 1 174 1 91 1 175 2 67 2 312 2 21 1 244 1 51 2 248 1 80 1 126 1 
128 1 61 1 30 1 348 1 298 2 110 1 302 1 232 1 10 1 174 1 91 1 175 1 67 1 313 1 312 1 156 1 116 1 42 1 287 1 342 1 244 1 51 1 248 1 126 1 80 1 224 1 
128 2 61 1 30 1 348 1 298 2 110 1 302 1 10 1 33 1 174 1 91 1 175 1 115 1 67 1 313 1 312 1 156 1 116 1 42 1 287 1 260 1 179 1 342 1 244 2 76 1 51 1 248 1 126 1 80 1 224 1 
58 1 128 3 61 1 348 1 298 2 110 1 302 1 232 1 10 1 174 1 91 1 175 1 115 1 67 1 313 1 312 1 156 1 116 1 42 1 18 1 287 1 260 2 179 1 244 3 76 1 51 1 248 1 126 1 80 1 224 1 
128 2 348 1 298 2 110 1 302 1 232 1 10 1 174 1 175 1 115 1 67 1 312 1 313 1 42 1 18 1 287 1 260 2 179 1 244 2 76 1 51 1 248 1 126 1 80 1 224 1 
28 1 
0 1 149 1 60 2 106 1 108 2 227 1 112 1 229 1 151 1 153 1 236 1 237 1 330 5 332 2 68 1 158 2 17 2 16 1 122 2 73 2 20 1 343 1 21 1 291 2 204 2 248 2 126 1 80 1 295 1 294 1 250 1 169 1 83 1 210 2 302 2 306 2 253 1 255 1 256 1 174 2 35 1 36 5 97 3 176 1 37 6 259 4 39 1 45 1 181 1 362 1 52 1 145 1 185 2 222 1 223 2 
149 1 60 1 83 1 153 1 237 1 35 1 330 3 36 3 97 1 16 1 37 2 259 2 39 1 198 1 343 1 181 1 362 1 52 1 145 1 294 1 295 1 250 1 
149 1 83 1 153 1 255 1 237 1 35 1 330 3 36 3 97 1 37 1 16 1 17 1 259 3 39 1 198 1 343 1 181 1 204 1 362 1 52 1 145 1 294 1 295 1 250 1 
149 1 60 1 83 1 153 1 255 1 237 1 35 1 330 3 332 1 36 3 97 1 16 1 37 2 17 1 259 3 39 1 198 1 343 1 181 1 204 1 362 1 52 1 145 1 294 1 295 1 250 1 
149 1 4 1 60 4 106 1 108 1 229 1 153 1 236 1 237 1 330 5 332 4 158 2 16 1 17 4 73 2 198 1 343 1 291 2 204 5 292 1 295 1 294 1 250 1 83 1 306 2 255 5 310 1 35 1 36 5 97 3 176 1 37 7 259 6 39 1 45 1 181 1 360 1 362 1 52 1 145 1 185 1 56 1 222 1 223 2 
149 1 60 2 106 1 108 1 229 1 112 1 153 1 236 1 237 1 330 4 332 2 158 2 16 1 17 2 73 2 122 2 343 1 291 2 204 2 295 1 294 1 250 1 83 1 306 2 255 1 35 1 36 4 176 1 97 2 37 4 259 4 39 1 45 1 181 1 362 1 52 1 145 1 185 1 222 1 223 2 
149 1 60 2 106 1 108 1 83 1 229 1 306 2 255 1 153 1 236 1 310 1 237 1 35 1 330 4 332 2 158 2 36 4 97 2 176 1 17 2 37 4 16 1 259 4 39 1 73 2 45 1 343 1 181 1 360 1 291 2 204 1 292 1 362 1 52 1 145 1 185 1 294 1 295 1 222 1 223 2 250 1 
149 1 60 2 106 1 108 1 83 1 229 1 306 2 255 1 153 1 236 1 310 1 237 1 35 1 330 4 332 2 158 2 36 4 97 2 176 1 17 2 37 4 16 1 259 4 39 1 73 2 45 1 343 1 181 1 360 1 291 2 204 1 292 1 362 1 52 1 145 1 185 1 294 1 295 1 222 1 223 2 250 1 
127 1 149 1 60 2 106 1 108 1 83 1 29 1 229 1 231 1 255 1 153 1 64 2 236 1 237 1 35 1 330 4 332 2 158 2 36 4 97 2 176 1 17 2 37 4 16 1 259 4 39 1 122 2 73 2 343 1 345 2 181 1 360 1 204 1 362 1 52 1 145 1 185 1 294 1 295 1 222 1 250 1 
149 1 60 3 106 1 108 1 83 1 229 1 306 2 255 1 153 1 236 1 310 1 237 1 35 1 330 4 332 3 158 2 36 4 97 2 176 1 16 1 37 5 17 3 259 5 39 1 73 2 45 1 343 1 181 1 360 1 291 2 204 1 292 1 362 1 52 1 145 1 185 1 222 1 294 1 295 1 56 1 223 2 250 1 
149 1 60 3 106 1 108 1 83 1 229 1 306 2 255 1 153 1 236 1 310 1 237 1 35 1 330 4 332 3 158 2 36 4 97 2 176 1 16 1 37 5 17 3 259 5 39 1 73 2 45 1 343 1 181 1 360 1 291 2 204 1 292 1 362 1 52 1 145 1 185 1 222 1 294 1 295 1 56 1 223 2 250 1 
149 1 60 2 106 1 108 1 229 1 112 1 153 1 236 1 64 2 237 1 330 4 332 2 158 2 16 1 17 2 73 2 122 2 343 1 345 2 204 1 295 1 294 1 250 1 127 1 83 1 255 1 35 1 36 4 176 1 97 2 37 4 259 4 39 1 181 1 362 1 52 1 145 1 185 1 222 1 
157 1 3 1 15 1 335 1 101 1 210 1 302 1 264 1 189 1 245 1 246 1 174 1 248 1 249 1 114 1 
285 1 157 1 215 1 3 1 15 1 16 1 297 1 130 1 199 1 264 1 189 1 245 1 172 1 246 1 362 1 270 1 145 1 134 1 249 1 147 1 
157 1 3 1 15 1 338 1 340 1 200 1 264 1 189 1 245 1 123 1 144 1 172 1 205 1 246 1 66 1 249 1 92 1 365 1 
157 1 3 1 15 1 209 1 168 1 150 1 99 1 274 1 211 1 264 1 75 1 189 1 245 1 246 1 134 1 249 1 366 1 
157 1 285 1 3 1 15 1 16 1 6 1 335 1 130 1 163 1 264 1 75 1 212 1 189 1 245 1 173 1 246 1 362 1 145 1 134 1 249 1 366 1 95 1 
105 1 3 2 170 1 150 1 252 1 129 1 130 1 210 1 302 1 253 1 212 1 189 1 279 1 172 1 173 1 174 1 134 1 94 1 285 1 157 2 15 2 16 1 196 1 99 1 320 1 261 1 74 1 163 1 199 1 21 1 264 2 265 1 75 2 245 2 246 2 362 2 248 1 270 1 249 2 145 2 80 1 126 1 366 2 
157 1 189 1 15 1 3 1 219 1 245 1 172 1 246 1 340 1 249 1 199 1 264 1 
157 1 3 1 15 1 96 1 150 1 99 1 340 1 301 1 74 1 200 1 264 1 75 2 245 1 246 1 78 1 249 1 92 1 366 2 
157 1 189 1 15 1 3 1 245 1 172 1 246 1 340 1 270 1 249 1 199 1 264 1 
157 1 189 1 15 1 3 1 219 1 245 1 172 1 246 1 249 1 114 1 199 1 264 1 
157 1 3 1 15 1 96 1 150 1 99 1 301 1 74 1 200 1 264 1 75 2 245 1 246 1 78 1 249 1 92 1 114 1 366 2 
157 1 189 1 15 1 3 1 245 1 172 1 246 1 270 1 249 1 114 1 199 1 264 1 
157 1 189 1 15 1 3 1 245 1 172 1 246 1 270 1 249 1 199 1 264 1 
3 1 252 1 129 1 84 1 210 1 302 1 253 1 189 1 279 1 173 1 174 1 157 1 15 1 335 1 320 1 21 1 264 1 265 1 75 1 245 1 246 1 248 1 362 1 145 1 249 1 80 1 126 1 366 1 
3 1 84 1 210 1 302 1 253 1 189 1 279 1 173 1 174 1 157 1 15 1 335 1 216 1 21 1 264 1 265 1 75 1 245 1 165 1 246 1 248 1 362 1 364 1 145 1 249 1 80 1 126 1 366 1 
157 1 189 1 15 1 3 1 245 1 172 1 246 1 270 1 249 1 134 1 199 1 264 1 
3 1 252 1 129 1 302 1 253 1 189 1 279 1 33 1 172 1 174 1 157 1 15 1 320 1 261 1 199 1 21 1 264 1 265 1 245 1 246 1 248 1 362 1 145 1 249 1 270 1 80 1 126 1 
285 1 157 1 3 1 15 1 16 1 297 1 130 1 199 1 264 1 189 1 245 1 172 1 246 1 362 1 270 1 145 1 134 1 249 1 55 1 147 1 
157 1 3 1 15 1 272 1 159 1 109 1 264 1 140 1 75 1 189 1 245 1 321 1 322 1 366 1 
157 1 3 1 15 1 272 1 159 1 109 1 264 1 140 1 75 1 189 1 245 1 321 1 322 1 366 1 
157 1 3 1 15 1 272 1 159 1 109 1 264 1 140 1 75 1 189 1 245 1 321 1 322 1 366 1 
157 1 3 1 15 1 272 1 159 1 109 1 264 1 140 1 75 1 189 1 245 1 321 1 322 1 366 1 
157 1 3 1 15 1 272 1 159 1 109 1 264 1 140 1 75 1 189 1 245 1 321 1 322 1 366 1 
271 1 98 1 171 1 206 1 247 1 350 1 352 1 86 1 54 1 214 1 
118 1 180 1 
171 1 319 1 206 1 65 1 247 1 350 1 221 1 86 1 54 1 
218 1 284 1 
361 1 81 1 87 1 
36 1 271 1 98 1 318 1 85 1 350 1 86 1 359 1 305 1 113 1 171 1 204 1 206 1 247 1 330 1 54 1 155 2 214 1 
36 1 271 1 98 1 318 1 85 1 350 1 86 1 359 1 305 1 113 1 171 1 204 1 206 1 247 1 330 1 54 1 155 2 214 1 
36 1 271 1 98 1 318 1 85 1 350 1 86 1 359 1 305 1 113 1 171 1 204 1 206 1 247 1 330 1 54 1 155 2 214 1 
218 1 361 1 284 1 
218 1 361 1 284 1 
81 1 87 1 
361 1 81 1 87 1 
119 1 124 1 
130 2 84 1 85 1 350 1 86 1 152 1 113 1 171 1 90 1 14 1 330 1 331 1 155 1 285 2 36 1 118 1 119 1 16 2 19 1 180 1 206 1 182 1 124 1 362 2 247 1 145 2 54 1 
157 1 15 1 3 1 16 2 335 1 101 1 162 1 264 1 189 1 22 1 63 1 245 1 246 1 362 2 355 1 145 2 134 1 249 1 
0 1 210 1 302 1 62 1 253 1 21 1 278 1 50 1 256 1 174 1 248 1 80 1 126 1 312 1 
156 1 42 1 348 1 287 1 298 2 232 1 302 1 307 1 290 1 10 1 50 1 174 1 248 1 80 1 126 1 313 1 312 1 224 1 
156 1 42 1 348 1 287 1 298 2 232 1 302 2 307 1 290 1 10 1 50 1 33 1 174 2 248 2 80 1 126 1 313 1 312 1 224 1 
156 1 42 1 348 1 287 1 298 2 232 1 302 1 290 1 10 1 174 1 248 1 126 1 80 1 313 1 312 1 224 1 333 1 
135 1 
176 1 347 1 108 1 229 1 255 1 236 1 204 1 185 1 222 1 283 1 
286 2 96 2 196 1 122 10 108 5 301 2 199 2 141 5 306 5 268 1 172 2 204 5 270 2 185 5 194 5 
36 1 97 1 37 1 255 1 204 1 330 1 
0 1 169 2 108 2 188 1 210 2 227 1 353 1 229 1 302 4 233 2 151 1 253 1 308 1 236 2 256 1 174 4 330 3 68 2 36 3 176 2 97 2 37 4 100 1 21 1 248 4 80 1 126 1 185 2 222 2 
347 1 255 1 108 1 204 1 205 1 185 1 283 1 
108 1 229 1 306 1 255 1 236 1 330 1 36 1 176 1 97 1 37 1 122 1 45 1 291 1 204 2 185 1 222 1 223 1 
225 1 186 1 149 2 323 1 108 9 229 4 233 1 279 3 236 4 329 3 330 5 194 6 283 1 68 2 286 2 70 2 120 1 196 2 337 2 122 12 21 3 164 2 199 2 204 8 248 3 80 4 126 3 347 1 169 1 210 1 301 2 302 3 253 10 306 6 33 1 255 2 308 1 309 2 172 2 174 3 36 5 176 4 97 3 96 2 37 5 38 2 141 6 47 2 143 2 268 2 183 2 270 2 185 8 222 4 
168 1 169 1 108 8 325 1 299 1 275 1 301 2 229 2 211 1 306 3 255 2 236 2 172 2 330 1 194 5 68 1 36 1 286 2 97 1 176 2 96 2 37 1 336 1 122 6 161 1 102 1 141 5 199 2 23 1 268 1 204 5 270 2 185 5 222 2 82 1 
297 1 83 1 108 2 130 1 229 1 236 1 172 2 330 1 285 1 286 2 36 1 176 1 96 1 16 1 338 1 262 1 289 1 142 1 144 1 268 1 220 1 292 1 269 1 362 1 145 1 185 2 365 1 222 1 
3 1 297 2 129 1 252 1 130 2 84 1 210 1 302 1 253 1 279 1 173 1 174 1 157 1 285 2 15 1 16 2 71 1 320 1 262 1 264 1 21 1 265 1 75 1 245 1 246 1 248 1 362 3 145 3 249 1 126 1 80 1 366 1 
176 1 169 1 122 4 108 1 263 1 229 1 141 2 306 2 255 2 236 1 204 4 185 2 194 2 222 1 68 1 
124 1 206 1 154 1 54 1 214 1 
280 1 206 1 54 1 
280 1 206 1 54 1 
280 1 206 1 54 1 
206 1 363 1 54 1 
206 1 363 1 54 1 
206 1 363 1 54 1 
206 1 54 1 
171 1 350 1 
142 1 189 1 144 1 172 1 338 1 92 1 365 1 200 1 
157 1 189 1 15 1 3 1 245 1 159 1 172 1 199 1 264 1 
157 1 189 1 15 1 3 1 245 1 159 1 172 1 270 1 199 1 264 1 
157 2 3 2 15 2 159 1 41 1 338 1 230 1 264 2 200 1 245 2 92 1 365 1 
157 3 3 3 15 3 168 1 159 1 230 1 211 1 264 3 201 1 75 1 189 1 245 3 23 1 104 1 366 1 
157 1 3 1 15 1 168 1 159 1 161 1 211 1 264 1 75 1 189 1 245 1 23 1 366 1 
157 2 3 2 15 2 168 1 159 1 161 1 211 1 264 2 75 1 189 1 245 2 23 1 104 1 366 1 
157 1 3 1 15 1 168 1 159 1 161 1 211 1 264 1 75 1 189 1 245 1 23 1 366 1 
157 1 3 1 15 1 168 1 159 1 161 1 211 1 264 1 75 1 189 1 245 1 23 1 366 1 
157 1 3 1 15 1 168 1 159 1 161 1 211 1 264 1 75 1 189 1 245 1 23 1 366 1 
157 1 3 1 15 1 168 1 159 1 161 1 211 1 264 1 75 1 189 1 245 1 23 1 366 1 
157 2 3 2 15 2 168 1 159 1 161 1 211 1 264 2 75 1 189 1 245 2 23 1 104 1 366 1 
157 2 3 2 15 2 168 1 159 1 161 1 230 1 211 1 264 2 75 1 189 1 245 2 23 1 366 1 
123 1 41 1 338 1 66 1 92 1 365 1 200 1 
157 2 3 2 15 2 168 1 159 1 161 1 230 1 211 1 264 2 75 1 189 1 245 2 23 1 366 1 
157 2 3 2 15 2 41 1 338 1 200 1 264 2 235 1 245 2 123 1 66 1 92 1 365 1 
189 1 123 1 144 1 172 1 205 1 338 1 66 1 92 1 365 1 200 1 
157 1 189 1 15 1 3 1 245 1 172 1 104 1 270 1 199 1 264 1 
75 1 189 1 168 1 23 1 211 1 366 1 
75 1 189 1 168 1 209 1 211 1 366 1 
75 1 168 1 366 1 
189 1 211 1 
75 1 189 1 196 1 172 1 270 1 366 1 199 1 
157 1 3 1 15 1 168 1 159 1 161 1 211 1 264 1 75 1 189 1 245 1 23 1 366 1 
189 1 144 1 172 1 
157 1 69 1 3 1 15 1 41 1 338 1 200 1 264 1 75 1 235 1 123 1 245 1 66 1 92 1 365 1 366 1 
16 1 84 1 187 1 362 1 111 1 145 1 343 1 
1 1 59 1 16 1 84 1 187 1 111 1 343 1 191 1 24 1 362 1 145 1 93 1 
0 1 197 1 210 1 302 4 21 1 253 1 48 1 33 1 256 1 174 4 248 4 80 1 126 1 
334 1 302 2 233 1 9 1 21 1 253 1 279 1 49 1 203 1 174 2 248 2 193 1 126 1 80 2 
10 1 348 1 174 1 210 1 298 1 248 1 80 1 126 1 302 1 224 1 
300 1 302 2 232 1 21 1 253 1 33 1 174 2 238 1 248 2 126 1 80 1 
0 1 315 1 197 1 210 1 302 5 233 1 21 2 253 3 33 1 256 1 174 5 238 1 248 4 293 1 126 2 80 2 
0 1 315 1 107 1 197 1 210 1 302 5 233 1 21 2 253 3 33 1 256 1 174 5 238 1 248 4 126 2 80 2 
0 1 256 1 205 1 174 1 210 1 248 1 80 1 126 1 302 1 253 1 21 1 
285 1 16 1 252 1 130 1 84 1 210 1 302 1 163 1 253 1 21 1 265 1 279 1 174 1 362 2 248 1 145 2 80 1 126 1 
285 2 16 2 252 1 83 1 130 1 84 1 302 1 163 1 233 1 253 3 21 2 265 1 47 1 279 2 153 1 309 1 237 1 174 1 362 2 248 1 145 2 80 1 126 1 
285 2 16 2 83 1 130 1 84 1 302 2 163 1 233 1 253 3 21 2 265 1 47 1 279 2 48 1 153 1 309 1 237 1 174 2 165 1 362 2 248 2 145 2 80 1 126 1 
149 1 36 2 37 1 38 1 210 1 138 1 302 3 327 1 233 1 21 1 253 4 47 1 279 1 48 1 255 1 309 1 204 1 174 3 248 3 329 1 80 1 330 2 126 1 
149 1 36 2 37 1 38 1 337 1 210 1 302 3 233 1 21 1 253 4 47 1 279 1 48 1 255 1 309 1 204 1 174 3 248 3 329 1 80 1 330 2 126 1 
174 1 248 1 80 1 126 1 302 1 254 1 
225 1 334 1 315 1 210 2 232 1 302 7 254 1 21 2 253 3 279 1 33 1 238 1 174 7 248 6 293 1 193 1 192 1 207 1 27 1 126 2 80 3 
105 1 3 2 129 1 252 1 130 1 302 1 253 1 189 1 279 1 33 1 172 1 174 1 66 1 134 1 92 1 285 1 157 2 15 2 16 1 338 1 320 1 261 1 162 1 163 1 200 1 21 1 264 2 265 1 123 1 245 2 144 1 246 2 362 2 248 1 249 2 145 2 80 1 126 1 365 1 
149 1 347 1 108 1 210 1 229 2 302 1 253 2 255 1 308 1 236 2 174 1 329 1 330 3 283 1 36 3 70 1 176 2 97 1 37 2 38 1 337 1 19 1 164 1 204 1 248 1 183 1 185 1 222 2 
225 1 186 1 38 1 302 2 254 1 21 1 253 2 279 1 33 1 174 2 248 2 126 1 80 2 
285 1 16 1 130 1 84 1 210 1 302 1 163 1 253 1 21 1 265 1 279 1 174 1 165 1 362 2 248 1 145 2 80 1 126 1 
225 1 334 1 302 1 233 1 21 1 253 1 279 1 174 1 248 1 193 1 192 1 126 1 80 2 
88 1 16 1 63 1 22 1 121 1 346 1 362 1 355 1 145 1 
317 1 346 1 44 1 
88 1 177 1 121 1 84 1 346 1 
149 1 36 2 83 1 121 2 177 2 84 1 317 1 349 1 19 1 44 1 88 2 255 1 153 1 204 1 346 1 237 1 52 1 330 2 240 1 
244 1 128 1 76 1 61 1 91 1 30 1 179 1 115 1 
208 1 128 4 61 1 178 1 160 1 260 2 179 2 43 1 244 4 132 1 267 1 76 2 91 1 115 3 
128 2 72 1 61 1 30 1 260 1 179 1 244 2 32 1 76 1 91 1 125 1 115 1 
208 1 128 3 61 1 30 1 178 2 179 1 244 3 132 2 344 1 76 1 91 1 115 1 
228 1 326 1 115 2 243 2 
244 1 128 1 61 1 91 1 30 1 79 1 
244 2 128 2 190 1 76 1 61 1 91 1 30 1 260 1 179 1 115 1 
146 1 
244 1 128 1 76 1 61 1 91 1 30 1 179 1 115 1 
76 1 205 1 179 1 115 1 
244 1 128 1 76 1 61 1 91 1 179 1 115 1 
244 1 51 1 175 1 
208 1 128 3 5 1 61 1 30 1 178 2 179 1 244 3 132 1 76 1 91 1 115 1 
244 2 266 1 128 2 76 1 61 1 91 1 260 1 179 1 115 1 
128 1 61 1 30 1 298 1 244 1 267 1 91 1 166 1 115 1 313 1 224 1 
244 1 128 1 61 1 91 1 30 1 179 1 115 1 
244 1 128 1 76 1 61 1 91 1 30 1 179 2 
296 1 244 2 128 2 2 1 61 2 91 2 30 1 179 1 26 1 115 1 
128 3 61 1 30 1 260 2 179 1 43 1 131 1 244 3 190 1 267 1 76 1 91 1 115 2 
128 2 61 1 348 1 30 1 298 2 287 1 260 1 179 1 244 2 76 1 91 1 53 1 115 1 313 1 224 1 
128 4 61 2 30 1 260 2 179 1 43 1 244 4 266 1 267 1 76 1 91 2 213 1 115 2 
244 3 128 3 190 1 76 1 61 1 178 1 91 1 30 1 260 1 179 1 115 1 
267 1 160 1 43 1 115 1 
179 1 115 1 

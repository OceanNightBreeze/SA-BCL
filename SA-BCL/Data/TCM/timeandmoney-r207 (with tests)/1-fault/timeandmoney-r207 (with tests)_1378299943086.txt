#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 86 209 228 166 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
361 9 267 1 68 4 187 1 216 1 213 5 299 1 138 1 163 1 29 2 143 1 61 2 348 1 282 2 39 2 283 2 131 6 255 1 199 1 285 1 309 2 288 2 132 9 354 1 20 1 235 1 234 3 207 1 
361 9 267 1 68 4 187 1 216 1 213 5 299 1 138 1 163 1 29 2 143 1 61 2 348 1 282 2 39 2 283 2 131 6 255 1 199 1 309 2 285 1 288 2 132 9 354 1 20 1 235 1 234 3 207 1 
361 10 267 1 68 5 187 1 216 1 213 6 299 1 138 1 163 1 29 2 143 1 61 2 348 1 282 2 39 2 283 2 131 7 255 1 199 1 309 2 285 1 288 2 132 10 354 1 20 1 235 1 234 4 207 1 
361 7 267 1 68 3 187 1 216 1 213 4 299 1 138 1 163 1 29 2 143 1 61 2 348 1 282 2 39 1 283 2 131 4 255 1 199 1 309 2 285 1 288 2 132 7 354 1 235 1 234 2 207 1 
143 1 361 4 61 1 68 2 187 1 348 1 282 1 39 2 283 1 213 3 131 3 199 1 309 1 132 4 163 1 29 1 234 1 20 1 
143 1 361 2 61 1 171 1 348 1 282 1 213 1 283 1 199 1 132 2 288 1 29 1 256 1 354 1 235 1 261 1 
143 1 199 1 361 3 288 1 132 3 68 1 29 2 348 1 234 1 282 2 213 2 216 1 131 1 
361 9 68 4 187 1 119 1 216 1 213 5 138 1 163 1 29 2 143 1 61 1 348 1 282 2 39 2 283 1 131 7 255 1 199 1 65 1 309 1 288 1 132 9 234 3 20 1 
361 9 68 4 187 1 119 1 216 1 213 5 138 1 163 1 29 2 143 1 61 1 348 1 282 2 39 2 283 1 131 7 255 1 199 1 65 1 309 1 288 1 132 9 234 3 20 1 
304 1 379 1 181 1 
304 1 86 2 291 1 
222 2 93 2 116 2 336 1 258 2 357 2 279 1 240 2 
136 1 186 1 93 3 116 2 188 2 336 1 365 1 72 1 6 1 271 1 339 1 340 2 54 1 33 2 58 1 279 1 277 1 34 1 60 1 79 1 222 2 35 1 10 1 325 2 145 1 195 1 174 1 147 1 64 1 198 1 15 1 232 2 378 1 258 3 134 1 357 2 240 2 
222 1 93 1 116 1 336 1 258 1 214 1 357 1 113 1 240 1 249 1 
335 1 304 1 93 1 224 1 95 1 52 1 374 1 204 1 341 1 258 1 379 1 357 1 113 1 343 1 
222 1 304 1 93 1 116 1 224 1 95 1 52 1 374 1 341 2 258 1 379 1 357 1 113 1 343 2 240 1 
360 1 341 1 330 1 297 1 343 1 
360 1 230 1 304 1 341 2 330 1 379 1 281 1 343 2 
360 1 341 1 343 1 
222 1 93 1 116 1 336 1 214 1 40 1 341 1 330 1 258 1 357 1 113 1 343 1 249 1 240 1 
304 1 
360 1 230 1 304 1 341 2 330 1 379 1 367 1 343 2 
345 1 360 2 185 1 304 1 37 2 49 1 149 1 269 2 191 1 176 1 177 2 230 1 351 1 341 5 330 2 87 1 379 1 237 1 343 5 
181 1 279 1 
222 1 184 1 93 2 116 1 16 1 258 2 357 2 279 2 240 1 
157 1 266 1 5 1 
79 1 325 1 93 1 145 1 188 1 174 1 72 1 6 1 365 1 271 1 232 1 258 1 58 1 134 1 380 1 279 1 
79 1 222 1 325 1 266 1 145 1 370 1 93 2 174 1 116 1 188 1 365 1 6 1 72 1 271 1 232 1 258 2 58 1 134 1 357 1 381 1 
222 3 370 1 93 3 116 3 258 3 357 3 279 1 240 1 
222 1 93 1 116 1 258 1 214 1 357 1 113 1 
222 1 184 1 16 1 93 1 116 1 258 1 357 1 113 1 240 1 
358 1 184 1 186 1 93 4 116 3 188 1 336 1 95 1 52 1 365 1 6 1 72 1 271 1 339 1 340 1 54 1 341 1 33 2 58 1 279 1 277 1 343 1 34 1 79 1 222 3 325 1 145 1 370 1 195 1 174 1 224 1 147 1 64 1 198 1 374 1 15 1 232 1 258 4 134 1 89 1 357 3 381 1 113 1 240 2 
335 1 110 1 222 1 93 2 370 1 116 1 258 2 357 2 279 1 
358 1 222 3 184 1 304 1 370 2 93 3 224 1 116 3 95 1 52 1 374 1 341 1 258 3 357 3 113 1 381 1 240 1 343 1 22 1 
222 2 184 1 370 1 93 2 266 1 5 1 116 2 258 2 357 2 240 1 
79 1 325 1 93 1 145 1 188 1 174 1 72 1 6 1 365 1 271 1 232 1 258 1 58 1 134 1 279 1 
79 1 325 1 144 1 93 1 145 1 188 1 226 1 6 1 365 1 271 1 232 1 258 1 58 1 134 1 279 1 
312 1 136 2 186 1 266 2 5 2 362 1 189 1 25 1 157 2 97 1 339 1 340 4 54 1 165 1 33 2 194 1 277 1 147 2 11 1 64 1 284 1 310 1 15 1 135 1 
222 1 93 1 116 1 107 1 258 1 357 1 52 1 113 1 
323 1 335 1 222 4 45 1 184 1 370 2 93 5 116 4 110 1 258 5 357 5 279 1 381 1 240 1 
222 2 93 2 116 2 107 1 258 2 214 1 357 2 113 1 
23 1 81 1 
23 1 81 1 
127 1 96 1 
127 1 96 1 
127 1 96 1 
287 1 23 1 81 1 
287 1 23 1 81 1 
23 1 81 1 109 1 
23 2 127 1 81 2 306 1 12 1 96 1 
287 1 23 1 81 1 
23 1 3 1 81 1 
23 1 3 1 81 1 
23 1 3 1 81 1 
23 2 105 2 304 1 81 2 306 1 38 2 372 1 7 1 122 1 159 2 74 3 257 2 341 2 292 1 180 1 368 1 59 2 221 1 343 2 
115 1 104 1 23 1 222 2 243 1 105 1 93 2 81 1 116 2 308 1 317 1 109 1 122 1 140 1 159 1 74 1 75 1 341 1 257 1 258 2 357 2 279 1 59 1 343 1 
309 1 61 1 283 1 
61 1 261 1 283 1 
359 1 309 2 334 1 261 1 283 3 238 1 
359 1 309 1 14 1 261 1 283 2 238 1 
309 1 359 2 261 1 283 2 238 1 
115 1 313 1 360 1 296 2 47 1 362 1 269 1 25 1 191 3 97 1 124 2 123 1 75 1 341 5 78 1 343 5 304 2 37 1 308 1 373 2 177 1 230 1 84 1 289 1 133 1 86 3 330 4 291 1 87 2 379 1 135 1 237 1 
313 3 360 6 296 6 2 1 47 1 362 3 297 5 269 2 25 3 191 8 97 3 124 6 123 2 192 1 75 4 164 1 274 5 341 9 193 1 78 2 343 9 169 1 304 5 37 2 149 1 177 2 230 1 86 9 330 7 291 3 87 6 379 1 135 3 237 1 183 1 
313 1 296 2 362 1 269 1 25 1 191 3 97 1 123 1 124 2 75 1 341 3 78 1 343 3 304 3 37 1 149 1 373 1 177 1 84 1 133 1 330 2 86 4 291 2 87 2 379 1 135 1 
313 2 296 4 2 1 362 2 269 1 25 2 191 5 97 2 124 4 123 1 192 1 75 2 341 4 78 1 343 4 169 1 304 4 37 1 149 1 373 2 177 1 84 1 133 1 86 7 330 3 291 3 87 4 379 1 135 2 
202 1 145 1 181 1 
145 1 71 1 
92 1 
271 1 145 1 
271 1 202 2 145 3 99 1 365 1 53 1 
271 1 145 1 365 1 
286 1 145 1 
136 4 106 2 196 1 147 3 328 1 11 2 120 1 70 1 25 1 97 1 150 1 139 1 340 7 57 1 194 3 90 1 102 1 
136 4 106 2 196 1 147 3 328 1 11 2 120 1 70 1 25 1 97 1 150 1 139 1 340 7 57 1 194 3 90 1 102 1 
136 4 106 2 196 1 147 3 328 1 11 2 120 1 70 1 25 1 97 1 150 1 139 1 340 7 57 1 276 1 194 3 90 1 102 1 
313 3 136 16 0 1 362 3 268 1 70 1 120 2 25 4 97 4 339 1 139 2 340 31 320 1 54 1 57 1 33 2 194 10 102 1 106 3 196 2 147 15 305 3 307 4 328 5 11 5 64 1 231 1 150 2 15 1 355 1 19 1 66 1 90 1 135 3 
136 5 106 2 196 1 147 4 328 1 11 3 156 1 120 1 70 1 64 2 25 1 97 1 150 1 339 2 366 1 139 1 15 2 340 9 54 2 57 1 355 1 33 4 194 4 102 1 
334 1 361 2 154 1 4 1 188 1 213 1 6 1 8 1 162 1 29 1 167 1 143 1 126 1 325 1 80 1 61 1 348 1 282 1 283 2 131 1 199 1 309 1 132 2 288 1 232 1 21 1 134 1 42 1 261 1 239 1 
334 1 361 3 154 1 4 1 188 1 213 1 6 1 162 1 29 1 167 1 278 1 369 1 126 1 325 1 80 1 61 1 348 1 282 1 283 2 131 2 350 1 199 1 309 1 132 3 288 1 232 1 134 1 42 1 261 1 239 1 
334 1 361 2 154 1 4 1 188 1 213 1 6 1 162 1 167 1 278 1 325 1 61 1 348 1 283 2 131 2 350 1 199 1 309 1 288 1 132 2 232 1 134 1 42 1 261 1 239 1 
361 1 325 1 46 1 145 1 48 1 154 2 188 1 326 1 282 1 6 1 271 1 352 1 288 2 132 1 162 2 29 1 232 1 356 1 58 1 134 1 321 1 239 2 369 1 
143 1 334 1 126 1 361 1 80 1 325 1 61 1 4 1 154 1 188 1 282 1 283 2 6 1 309 1 288 1 132 1 162 1 29 1 232 1 134 1 21 1 261 1 42 1 167 1 278 1 239 1 
43 1 
335 1 93 1 188 2 190 2 245 2 95 1 52 1 6 1 191 2 341 5 58 2 343 5 250 1 103 1 304 2 145 1 253 1 352 1 353 2 203 2 204 1 18 1 356 1 258 1 357 1 113 1 360 6 209 1 314 1 364 2 212 2 69 4 269 1 271 1 160 1 219 1 78 1 325 2 224 1 37 1 227 1 374 1 177 1 375 1 230 3 376 2 232 2 86 2 179 1 291 2 87 2 379 1 134 1 293 1 237 1 
360 2 335 1 93 1 69 2 95 1 52 1 160 1 341 3 367 1 343 3 103 1 224 1 374 1 375 1 230 1 353 1 204 1 179 1 258 1 293 1 357 1 113 1 
360 1 335 1 93 1 69 3 95 1 52 1 245 1 160 1 341 3 367 1 343 3 103 1 304 1 224 1 374 1 375 1 230 1 204 1 179 1 258 1 379 1 293 1 357 1 113 1 
360 2 335 1 93 1 364 1 69 3 95 1 52 1 245 1 160 1 341 3 367 1 343 3 103 1 304 1 224 1 374 1 375 1 230 1 353 1 204 1 179 1 258 1 379 1 293 1 357 1 113 1 
335 1 1 1 93 1 190 2 52 1 95 1 245 4 191 1 341 5 343 5 103 1 304 5 353 4 203 2 204 1 18 1 258 1 357 1 113 1 360 7 209 1 364 4 212 2 69 6 269 1 160 1 367 1 224 1 37 1 83 1 228 1 374 1 375 1 177 1 230 3 376 2 41 1 179 1 87 1 291 2 379 5 293 1 88 1 237 1 
335 1 93 1 190 2 52 1 95 1 245 2 191 1 341 4 343 4 103 1 304 2 203 2 353 2 204 1 18 1 258 1 357 1 113 1 360 4 209 1 212 2 364 2 69 4 269 1 160 1 224 1 37 1 227 1 374 1 177 1 375 1 230 2 376 2 179 1 86 2 87 1 291 2 379 1 293 1 237 1 
360 4 335 1 209 1 1 1 93 1 364 2 212 2 190 2 69 4 245 2 95 1 52 1 269 1 191 1 160 1 341 4 343 4 103 1 304 1 224 1 37 1 228 1 374 1 375 1 177 1 230 2 376 2 353 2 203 2 204 1 18 1 179 1 291 2 87 1 258 1 379 1 293 1 88 1 357 1 237 1 113 1 
360 4 335 1 209 1 1 1 93 1 364 2 212 2 190 2 69 4 245 2 95 1 52 1 269 1 191 1 160 1 341 4 343 4 103 1 304 1 224 1 37 1 228 1 374 1 375 1 177 1 230 2 376 2 353 2 203 2 204 1 18 1 179 1 291 2 87 1 258 1 379 1 293 1 88 1 357 1 237 1 113 1 
335 1 209 1 265 1 93 1 212 1 69 2 95 1 52 1 269 1 191 1 160 1 341 2 166 1 343 2 103 1 146 1 224 1 37 1 228 1 374 1 375 1 177 1 203 1 377 1 204 1 86 1 179 1 87 1 258 1 293 1 357 1 237 1 113 1 
360 5 335 1 209 1 1 1 93 1 212 2 364 3 190 2 69 5 269 1 95 1 52 1 245 3 191 1 160 1 341 4 343 4 103 1 304 1 224 1 37 1 228 1 374 1 177 1 375 1 230 2 376 2 203 2 41 1 353 3 204 1 18 1 179 1 291 2 87 1 258 1 379 1 88 1 293 1 357 1 237 1 113 1 
360 5 335 1 209 1 1 1 93 1 212 2 364 3 190 2 69 5 269 1 95 1 52 1 245 3 191 1 160 1 341 4 343 4 103 1 304 1 224 1 37 1 228 1 374 1 177 1 375 1 230 2 376 2 203 2 41 1 353 3 204 1 18 1 179 1 291 2 87 1 258 1 379 1 88 1 293 1 357 1 237 1 113 1 
335 1 93 1 52 1 95 1 245 2 191 1 341 4 343 4 103 1 304 1 146 1 203 2 353 2 204 1 258 1 357 1 113 1 152 2 360 4 209 1 212 2 364 2 69 4 269 1 160 1 224 1 37 1 227 1 374 1 177 1 375 1 230 2 377 2 179 1 86 2 87 1 379 1 293 1 237 1 
136 3 266 1 186 1 5 1 120 1 70 1 25 1 157 1 97 1 339 1 340 6 54 1 57 1 165 1 33 2 194 2 277 1 279 2 102 1 106 1 196 1 147 3 11 2 64 1 15 1 181 1 
313 2 295 1 136 8 186 1 266 11 5 4 362 2 50 1 51 1 298 1 25 1 157 11 97 2 339 2 340 14 54 2 33 4 194 2 279 1 277 2 60 1 195 1 147 6 305 3 307 3 328 1 11 1 64 2 231 1 15 2 290 1 66 1 135 1 
136 1 186 1 93 2 188 1 5 1 116 1 298 1 365 1 6 1 72 1 271 1 339 1 340 2 54 1 58 1 33 2 275 1 279 1 277 1 79 1 60 1 222 1 325 1 145 1 370 1 174 1 195 1 147 1 64 1 15 1 232 1 205 1 258 2 134 1 380 1 357 1 263 1 381 1 
136 10 93 3 186 3 188 3 5 7 298 1 338 1 6 2 97 3 339 3 340 20 98 1 54 3 57 1 58 1 194 8 102 1 60 1 303 2 145 2 106 1 195 1 196 1 147 10 11 4 197 2 64 3 198 2 15 3 258 3 357 1 313 2 24 2 266 7 116 1 362 2 120 1 70 1 25 3 72 2 365 2 157 7 271 2 33 6 278 1 279 2 277 3 79 2 222 1 170 2 325 3 370 1 371 1 174 2 328 4 232 3 134 2 135 2 381 1 
136 1 93 1 186 2 116 1 188 8 6 2 73 1 271 2 27 1 8 1 339 2 340 2 54 2 165 1 58 2 33 4 220 1 100 1 278 1 277 2 60 1 222 1 325 7 36 1 370 1 145 3 195 1 147 1 64 2 15 2 352 1 232 8 378 2 258 1 356 1 134 2 236 1 357 1 331 1 
313 1 136 1 184 1 266 1 186 1 93 1 5 1 116 1 362 1 298 1 25 1 157 1 97 1 339 1 340 3 54 1 33 2 194 1 277 1 222 1 147 2 11 1 64 1 15 1 258 1 357 1 135 1 240 1 241 1 
312 1 136 2 266 1 186 1 5 1 362 1 328 1 64 1 157 1 97 1 339 1 15 1 340 2 54 1 165 1 33 2 194 1 277 1 
266 1 186 1 5 1 147 2 189 1 11 1 64 1 25 1 157 1 339 1 15 1 340 2 54 1 165 1 33 2 194 1 277 1 135 1 
313 1 136 2 186 1 266 2 5 2 362 1 25 1 157 2 97 1 339 1 340 4 54 1 165 1 33 2 194 2 277 1 147 2 328 1 11 1 64 1 15 1 135 1 
312 1 136 2 266 1 186 1 5 1 362 1 328 1 64 1 157 1 97 1 339 1 15 1 340 2 54 1 33 2 194 1 277 1 331 1 
266 1 186 1 5 1 147 2 189 1 11 1 64 1 25 1 157 1 339 1 15 1 340 2 54 1 33 2 194 1 277 1 135 1 331 1 
313 1 136 2 186 1 266 2 5 2 362 1 25 1 157 2 97 1 339 1 340 4 54 1 33 2 194 2 277 1 147 2 328 1 11 1 64 1 15 1 135 1 331 1 
313 1 136 2 186 1 266 2 5 2 362 1 25 1 157 2 97 1 339 1 340 4 54 1 33 2 194 2 277 1 147 2 328 1 11 1 64 1 15 1 135 1 
136 1 93 1 186 1 188 1 365 1 6 1 72 1 271 1 339 1 340 2 54 1 58 1 33 2 279 1 277 1 60 1 79 1 325 1 145 1 174 1 195 1 147 1 64 1 198 1 15 1 232 1 258 1 134 1 
136 1 153 1 93 1 186 1 188 1 365 1 6 1 271 1 339 1 340 2 54 1 58 1 33 2 279 1 277 1 60 1 79 1 144 1 325 1 145 1 195 1 147 1 226 1 64 1 15 1 232 1 258 1 134 1 
313 1 136 2 186 1 266 2 5 2 362 1 298 1 25 1 157 2 97 1 339 1 340 4 54 1 33 2 194 2 277 1 147 2 328 1 11 1 64 1 15 1 135 1 
313 1 136 2 266 2 93 1 186 1 5 2 188 1 362 1 25 1 365 1 6 1 72 1 157 2 97 1 271 1 8 1 339 1 340 4 54 1 33 2 194 2 277 1 79 1 325 1 145 1 174 1 147 2 328 1 11 1 197 1 64 1 198 1 15 1 232 1 258 1 134 1 135 1 
313 1 136 2 184 1 186 1 93 1 266 1 116 1 5 1 362 1 298 1 25 1 157 1 97 1 339 1 340 3 54 1 33 2 194 1 277 1 222 1 147 1 328 1 64 1 15 1 233 1 258 1 357 1 135 1 240 1 
313 3 136 9 362 3 318 1 156 1 25 3 246 1 97 3 339 2 273 1 340 19 54 2 33 4 194 6 223 1 252 1 147 10 305 1 307 2 349 2 328 3 11 3 64 2 175 1 231 1 200 1 15 2 112 2 66 1 135 3 
313 3 136 14 362 3 315 1 318 2 156 1 25 2 246 1 97 3 339 3 273 2 340 26 301 1 54 3 302 1 141 1 33 6 194 4 342 1 223 1 147 12 305 2 307 2 328 2 349 4 11 2 64 3 200 1 231 2 15 3 112 1 355 2 135 2 208 1 
313 4 136 20 362 4 315 1 318 1 156 1 120 1 70 1 25 5 246 1 97 5 339 3 273 2 340 41 301 1 54 3 57 1 302 1 141 1 33 6 194 8 342 1 102 1 223 1 252 1 106 1 196 1 147 21 305 3 307 4 349 4 328 4 11 4 64 3 231 3 200 1 15 3 112 1 355 1 66 1 135 4 262 1 208 1 
313 4 136 20 362 4 315 1 318 1 156 1 120 1 70 1 25 4 246 1 97 5 339 4 273 2 340 38 301 1 54 4 57 1 302 1 141 1 33 8 194 7 342 1 102 1 223 1 252 1 106 1 196 1 147 18 305 3 307 4 349 4 328 3 11 4 64 4 231 3 200 1 15 4 112 1 355 2 66 1 135 3 262 1 208 1 
313 7 136 27 362 7 315 1 50 2 318 1 156 1 120 1 70 1 25 8 246 1 97 8 339 2 273 1 340 52 301 1 54 2 57 1 302 1 141 1 33 4 194 14 342 1 102 1 223 1 106 1 196 1 147 25 305 4 307 4 349 4 328 7 11 7 64 2 231 2 200 1 15 2 112 1 355 1 66 2 135 7 208 1 
23 1 159 1 105 1 81 1 257 1 306 1 372 1 368 1 59 1 344 1 
140 1 109 1 
272 1 23 1 159 1 105 1 81 1 257 1 31 1 108 1 59 1 
23 1 105 1 304 1 81 1 306 1 38 1 372 1 7 1 122 1 159 1 74 2 341 1 257 1 180 1 368 1 59 1 221 1 343 1 
23 1 105 1 304 1 81 1 306 1 38 1 372 1 7 1 122 1 159 1 74 2 341 1 257 1 180 1 368 1 59 1 221 1 343 1 
23 1 105 1 304 1 81 1 306 1 38 1 372 1 7 1 122 1 159 1 74 2 341 1 257 1 180 1 368 1 59 1 221 1 343 1 
44 1 287 1 12 1 
44 1 287 1 12 1 
3 1 319 1 
3 1 12 1 319 1 
243 1 317 1 
115 1 23 1 243 1 93 2 116 2 94 1 317 1 159 1 74 1 140 1 75 1 341 1 279 1 221 1 59 1 343 1 104 1 222 2 105 1 81 1 38 1 308 1 109 1 257 1 330 1 258 2 357 2 
44 1 287 1 
3 1 12 1 319 1 
136 1 186 1 93 2 188 2 298 1 6 1 26 1 247 1 271 1 339 1 340 2 54 1 55 1 33 2 100 1 277 1 60 1 325 2 145 1 36 1 195 1 62 1 147 1 64 1 311 1 15 1 232 2 378 2 258 2 134 1 357 2 
334 1 325 2 80 1 61 1 188 2 225 1 254 1 283 2 6 1 309 1 8 1 162 1 232 2 134 1 260 1 261 1 42 1 167 1 278 1 
334 1 325 1 80 1 61 1 188 1 225 1 283 2 229 1 6 1 309 1 162 1 232 1 134 1 261 1 42 1 167 1 278 1 
325 1 46 1 145 1 188 1 254 1 6 1 271 1 352 1 162 1 232 1 85 1 58 1 356 1 134 1 
334 1 325 1 80 1 61 1 188 1 225 1 254 1 283 2 6 1 309 1 162 1 232 1 134 1 260 1 261 1 42 1 167 1 278 1 
300 1 
345 1 185 1 304 1 87 1 379 1 181 1 191 1 
360 1 190 1 269 1 191 1 341 1 343 1 304 2 37 1 177 1 230 1 376 1 18 1 86 1 291 1 87 1 379 1 237 1 
332 1 185 1 296 6 188 3 337 2 6 3 53 1 191 9 97 2 8 1 341 5 58 1 343 5 345 1 251 2 347 1 145 10 304 8 253 1 13 2 202 2 111 1 151 2 313 2 360 5 24 2 362 2 316 2 269 4 71 3 365 3 25 2 271 3 158 2 124 6 30 2 78 2 168 2 325 3 224 2 37 4 129 1 177 4 286 2 230 3 329 1 232 3 86 12 291 6 87 8 379 2 134 4 237 4 135 2 
313 2 360 1 296 5 362 2 315 1 269 2 25 2 191 8 97 2 158 2 124 5 301 1 341 1 141 1 78 1 342 1 343 1 251 1 304 5 37 2 253 1 305 1 307 1 177 2 230 1 231 1 17 1 86 6 291 3 87 5 379 2 182 1 237 2 135 2 208 1 
93 1 116 1 336 1 214 1 120 1 269 1 25 1 191 2 97 2 158 2 341 1 343 1 102 1 249 1 251 1 222 1 196 1 37 1 327 1 40 1 177 1 258 1 87 2 88 1 357 1 237 1 113 1 240 1 
345 1 185 1 304 1 37 1 269 1 191 1 177 1 87 1 379 1 237 1 
313 2 251 1 296 5 24 1 304 5 362 2 25 2 191 5 97 2 158 2 124 5 86 10 87 5 291 5 135 2 
360 1 230 1 304 1 341 1 379 1 343 1 
332 2 360 4 188 4 269 2 6 1 191 2 271 1 218 1 341 3 219 1 58 2 78 2 343 3 142 1 250 1 325 4 145 1 37 2 253 2 149 1 177 2 230 2 329 1 352 1 232 4 87 2 356 1 134 1 237 1 
93 3 186 1 188 1 116 2 336 1 72 1 6 1 365 1 271 1 339 1 340 1 54 1 33 2 58 1 279 1 277 1 34 1 79 1 222 2 325 1 145 1 195 1 174 1 147 1 64 1 198 1 15 1 232 1 258 3 134 1 357 2 240 2 
296 2 304 4 106 1 37 1 253 1 269 1 191 1 177 1 124 2 86 4 291 2 87 2 379 2 78 1 237 1 
121 1 159 1 105 1 
121 1 159 1 105 1 
159 1 243 1 105 1 372 1 217 1 
121 1 159 1 105 1 
159 1 105 1 155 1 
159 1 105 1 155 1 
159 1 105 1 155 1 
159 1 105 1 
23 1 81 1 
136 4 106 1 196 1 147 4 328 1 11 2 64 2 70 1 120 1 25 1 97 1 339 2 15 2 340 8 54 2 57 1 355 1 33 4 194 3 102 1 
136 3 97 1 340 6 106 1 196 1 57 1 147 3 194 2 11 2 181 1 120 1 70 1 25 1 102 1 
313 1 136 2 362 1 147 2 328 1 11 1 64 1 25 1 97 1 339 1 15 1 340 4 54 1 33 2 194 2 101 1 135 1 
313 1 136 3 362 1 147 4 305 1 307 2 328 1 11 1 25 1 231 1 97 1 340 7 66 1 194 2 135 1 
313 2 136 11 362 2 50 1 120 2 70 1 25 3 97 3 339 2 340 23 54 2 57 1 33 4 194 9 102 1 324 1 106 1 196 2 147 12 305 2 307 2 328 4 11 5 64 2 15 2 290 1 355 2 66 1 135 2 
340 1 147 1 307 1 
136 1 340 1 305 1 
313 1 136 3 24 1 362 1 147 3 328 1 11 2 64 1 25 1 97 1 339 1 15 1 340 6 54 1 33 2 194 3 101 1 135 1 
313 2 136 6 362 2 315 1 156 1 25 2 97 2 339 1 340 12 301 1 54 1 141 1 33 2 194 2 342 1 147 6 305 1 307 1 328 1 11 1 64 1 231 1 15 1 135 2 208 1 
136 3 196 1 147 3 328 1 11 1 120 1 25 1 97 1 340 6 194 2 102 1 
136 1 324 1 196 1 147 2 328 1 11 1 120 1 70 1 64 1 339 1 15 1 340 3 54 1 57 1 355 1 33 2 194 2 
136 5 196 2 147 5 327 1 328 2 156 1 11 3 64 1 120 2 25 2 97 2 339 1 15 1 340 10 54 1 33 2 194 5 102 1 
136 2 362 1 328 1 156 1 64 1 97 1 339 1 15 1 340 2 54 1 33 2 194 1 
313 1 136 2 362 1 147 2 328 1 11 1 156 1 64 1 25 1 97 1 339 1 15 1 340 4 54 1 33 2 194 2 135 1 
136 1 324 1 252 1 196 1 147 2 328 1 156 1 11 1 64 3 120 1 339 3 15 3 340 3 54 3 355 1 33 6 194 2 
313 3 0 1 136 16 362 3 268 1 156 1 120 3 70 1 25 5 97 5 339 5 340 34 54 5 57 1 33 10 194 12 101 1 102 2 324 1 252 1 106 1 196 3 147 18 305 3 307 4 328 5 11 7 64 5 231 1 15 5 355 2 19 1 66 1 135 3 
136 4 315 1 156 1 70 1 120 1 25 1 97 1 339 1 340 8 54 1 57 1 33 2 194 2 102 1 106 1 196 1 147 4 305 1 307 1 11 2 64 1 231 1 15 1 
313 1 136 6 362 1 315 1 156 1 120 1 70 1 25 1 97 2 339 2 340 11 54 2 57 1 33 4 194 3 101 1 102 1 106 1 196 1 147 5 305 1 307 2 328 1 11 2 64 2 231 1 15 2 66 1 
313 2 136 9 362 2 315 1 156 1 120 1 70 1 25 3 97 3 339 3 340 19 301 1 54 3 57 1 141 1 33 6 194 4 101 1 342 1 102 1 106 1 196 1 147 10 305 1 307 1 328 1 11 3 64 3 231 1 15 3 355 1 135 2 208 1 
313 2 136 10 362 2 315 1 156 1 120 1 70 1 25 2 97 3 339 3 340 17 301 1 54 3 57 1 141 1 33 6 194 5 101 1 342 1 102 1 106 1 196 1 147 7 305 1 307 1 328 2 11 3 64 3 231 1 15 3 355 1 135 1 208 1 
136 4 315 1 156 1 70 1 120 1 25 1 97 1 339 1 340 8 54 1 57 1 33 2 194 2 102 1 106 1 196 1 147 4 305 1 307 1 11 2 64 1 231 1 15 1 
313 2 136 6 362 2 315 1 156 1 25 2 97 2 339 1 340 12 301 1 54 1 141 1 33 2 194 2 342 1 147 6 305 1 307 1 328 1 11 1 64 1 231 1 15 1 135 2 208 1 
313 2 136 10 362 2 315 1 156 1 120 1 70 1 25 2 97 3 339 4 340 18 301 1 54 4 57 1 141 1 33 8 194 5 101 1 342 1 102 1 106 1 196 1 147 8 305 1 307 1 328 2 11 3 64 4 231 1 15 4 355 2 135 1 208 1 
313 3 136 9 362 3 315 1 156 1 25 2 97 3 339 4 340 16 301 1 54 4 141 1 33 8 194 6 342 1 252 1 147 7 305 1 307 1 328 3 11 3 64 4 231 1 15 4 355 2 135 2 208 1 
136 3 196 3 147 4 328 3 11 3 70 2 120 3 25 1 97 1 340 7 57 1 194 6 102 1 
313 2 136 10 362 2 315 1 156 1 120 1 70 1 25 2 97 3 339 4 340 18 301 1 54 4 57 1 141 1 33 8 194 4 342 1 102 1 252 1 106 1 196 1 147 8 305 1 307 1 328 1 11 3 64 4 231 1 15 4 355 2 135 1 208 1 
335 1 110 1 93 1 77 1 258 1 357 1 279 1 
242 1 335 1 137 1 93 1 130 1 270 1 110 1 161 1 77 1 258 1 357 1 279 1 
271 1 325 1 352 1 145 1 232 1 188 1 356 1 58 1 134 1 181 1 6 1 
79 1 222 1 325 1 145 1 370 1 93 2 116 1 188 1 174 1 365 1 6 1 271 1 232 1 258 2 58 1 134 1 357 1 279 1 
332 1 79 1 222 1 325 1 145 3 370 1 93 2 116 2 188 1 174 1 52 1 374 1 365 2 6 1 286 1 271 2 232 1 30 1 258 2 134 1 357 2 279 1 113 1 
332 1 93 2 188 2 116 2 52 1 6 1 365 2 271 2 30 1 279 1 79 1 222 1 325 2 370 1 145 3 226 1 374 1 286 1 232 2 259 1 258 2 134 1 357 2 113 1 
332 1 360 1 211 1 188 3 6 1 71 1 365 1 271 1 341 2 30 1 58 1 280 1 343 2 325 3 145 4 304 1 224 1 286 1 202 1 232 3 259 1 134 1 379 1 
332 1 360 1 325 3 304 1 145 4 224 1 188 3 365 1 71 1 6 1 13 1 286 1 271 1 202 1 232 3 341 2 30 1 259 1 58 1 379 1 134 1 343 2 
325 1 232 1 188 1 134 1 6 1 73 1 
325 6 36 1 145 3 188 7 117 1 53 1 365 1 6 2 73 1 271 2 27 1 8 1 232 7 378 1 58 2 134 3 220 1 236 1 278 1 91 1 9 1 
136 3 93 2 186 2 5 1 188 1 298 1 6 1 97 1 8 1 339 2 340 6 54 2 57 1 194 2 102 1 145 1 106 1 62 1 196 1 147 3 197 1 11 2 64 2 198 1 15 2 258 2 357 1 266 1 116 1 70 1 120 1 72 1 365 1 25 1 157 1 271 1 33 4 277 2 279 2 79 1 170 1 222 1 325 1 370 1 174 1 232 1 134 1 
360 2 185 1 188 1 316 1 269 2 337 1 71 1 191 1 341 3 58 1 343 3 345 1 168 1 325 1 304 1 145 2 224 1 37 2 177 2 13 1 230 1 329 1 202 1 232 1 330 1 87 1 379 1 237 2 
325 2 145 2 188 2 53 1 365 1 6 1 73 1 271 1 8 1 202 1 111 1 232 2 134 2 
325 4 145 1 188 4 6 1 271 1 8 1 352 1 56 1 232 4 259 1 58 1 356 1 134 1 
332 1 325 2 145 1 371 1 188 2 117 1 244 1 118 1 365 1 6 1 271 1 232 2 134 2 9 1 
325 1 61 1 232 1 188 1 58 1 134 1 261 1 283 1 167 1 6 1 
271 1 8 1 311 1 325 2 145 1 36 1 232 2 188 2 134 1 278 1 6 1 
332 1 325 4 36 1 145 3 188 5 6 2 271 2 8 1 27 1 352 1 56 1 232 5 356 1 58 1 134 2 236 1 
332 1 325 4 36 1 145 3 188 5 6 2 271 2 8 1 352 1 56 1 232 5 125 1 356 1 58 1 134 2 236 1 
79 1 222 1 325 1 145 1 370 1 93 2 116 1 188 1 226 1 365 1 6 1 271 1 232 1 258 2 58 1 134 1 357 1 279 1 
332 1 325 1 145 1 188 1 117 1 53 1 365 1 6 1 271 1 232 1 134 2 91 1 9 1 
173 1 93 1 247 1 26 1 28 1 55 1 258 1 248 1 357 1 
76 1 82 1 248 1 
201 1 28 1 173 1 248 1 279 1 
358 1 333 1 304 1 173 2 224 1 82 1 52 1 95 1 374 1 28 2 201 2 76 1 341 2 330 1 379 1 248 1 279 1 113 1 343 2 
199 1 348 1 213 1 181 1 
199 1 361 1 132 1 29 1 348 1 282 1 213 1 
361 1 288 1 239 1 
143 1 199 1 361 3 210 1 132 3 128 1 29 1 348 1 235 2 148 1 282 1 213 1 
199 1 361 2 132 2 29 1 348 1 282 1 39 1 213 1 131 1 
143 1 309 1 361 1 61 1 132 1 68 1 187 1 29 1 282 1 283 1 213 1 
143 1 361 1 132 1 29 1 348 1 282 1 213 1 
143 1 199 1 361 1 132 1 29 1 348 2 282 1 
143 1 361 2 67 1 348 1 282 2 213 1 132 2 29 2 206 1 322 1 
143 1 199 1 138 1 361 3 132 3 68 1 29 1 348 1 234 1 282 1 213 2 131 2 255 1 
143 1 334 1 361 2 61 1 348 1 363 1 282 1 213 1 283 2 131 1 199 1 309 1 132 2 29 1 261 1 
143 1 199 1 361 4 132 4 68 1 29 2 348 1 234 1 20 1 282 2 39 1 213 2 131 2 
143 1 199 1 361 1 132 1 29 1 348 1 282 1 213 1 
361 4 68 1 128 1 348 2 148 1 282 1 213 3 63 1 131 2 199 2 132 4 29 1 235 1 234 1 
178 1 143 1 199 1 264 1 361 2 132 2 29 1 348 1 282 1 119 1 213 1 131 1 
143 1 361 3 172 1 128 2 348 1 148 1 282 1 213 1 199 1 132 3 29 1 235 2 
114 2 346 1 213 2 294 1 
143 1 361 1 132 1 29 1 282 1 215 1 
143 1 199 1 361 2 132 2 29 1 348 1 282 1 213 1 131 1 255 1 
32 1 
143 1 199 1 361 1 132 1 29 1 348 1 282 1 213 1 
143 1 199 1 361 3 132 3 29 1 348 1 235 1 282 1 213 1 131 1 255 1 
68 1 234 1 213 1 63 1 
348 1 213 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 50 4 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 50 4 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 50 4 123 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 6 192 1 169 1 314 3 61 9 295 2 65 5 248 1 174 1 149 1 103 1 24 9 232 2 151 4 104 1 348 1 325 1 10 2 136 1 260 2 261 2 37 1 287 1 334 2 335 1 164 2 57 1 263 1 
313 6 192 1 169 1 314 3 61 9 295 2 65 5 248 1 174 1 149 1 103 1 24 9 232 2 151 4 104 1 348 1 325 1 10 2 136 1 260 2 261 2 37 1 334 2 287 1 335 1 164 2 57 1 263 1 
313 7 192 1 169 1 314 4 61 10 295 2 65 6 248 1 174 1 149 1 103 1 24 10 232 2 151 5 104 1 348 1 325 1 10 2 136 1 260 2 261 2 37 1 334 2 287 1 335 1 164 2 57 1 263 1 
313 4 192 1 169 1 314 2 61 7 295 2 65 4 248 1 174 1 149 1 103 1 24 7 232 2 151 3 104 1 325 1 10 1 136 1 260 2 261 2 37 1 334 2 287 1 335 1 164 2 57 1 263 1 
348 1 10 2 136 1 313 3 192 1 314 1 295 1 61 4 65 3 260 1 261 1 24 4 103 1 287 1 334 1 232 1 151 2 263 1 
216 1 136 1 192 1 295 1 61 2 65 1 260 1 261 1 37 1 149 1 24 2 287 1 232 1 164 1 59 1 8 1 
136 1 313 1 192 1 314 1 295 2 61 3 65 2 261 2 24 3 287 1 151 1 104 1 164 1 
348 1 325 1 10 2 136 1 313 7 192 1 314 3 295 2 61 9 65 5 260 1 261 2 23 1 103 1 24 9 334 1 287 1 232 1 151 4 263 1 57 1 104 1 164 1 205 1 
348 1 325 1 10 2 136 1 313 7 192 1 314 3 295 2 61 9 65 5 260 1 261 2 23 1 103 1 24 9 334 1 287 1 232 1 151 4 263 1 57 1 104 1 164 1 205 1 
355 1 68 1 357 1 
267 1 350 1 280 1 245 1 30 1 51 1 124 1 13 1 242 1 300 1 6 1 16 1 58 1 153 1 
68 1 
272 1 133 1 6 1 350 2 355 1 68 1 78 1 153 2 
267 1 312 1 245 1 190 1 315 1 124 1 272 1 300 1 98 1 6 2 45 4 26 1 68 1 153 5 133 2 280 1 350 5 240 1 281 1 30 1 51 1 179 1 109 1 284 1 13 1 182 1 181 1 110 2 242 1 259 1 112 1 333 2 355 1 16 1 17 1 41 4 58 1 188 2 
283 2 12 1 68 1 
267 2 280 2 245 2 30 2 16 1 124 2 77 1 13 2 
267 2 245 2 337 1 294 2 194 1 124 3 297 1 63 1 339 1 3 1 148 1 210 2 171 1 22 1 230 1 44 1 249 1 150 1 132 2 73 2 280 3 30 2 219 1 351 1 77 1 13 2 159 1 224 1 183 1 111 1 139 1 140 1 203 1 16 1 116 1 120 1 91 2 
267 1 300 1 280 1 245 1 30 1 16 1 51 1 58 1 124 1 13 1 
267 1 280 1 350 1 215 1 329 1 124 1 307 1 300 1 355 1 275 1 89 1 27 1 68 1 153 1 
267 1 350 2 280 1 245 1 215 1 30 1 124 1 13 1 307 1 300 1 355 1 89 1 27 1 68 1 153 2 
238 1 133 1 6 1 350 1 153 1 
272 1 354 1 133 1 6 1 350 2 355 1 68 1 153 2 
133 1 350 1 153 1 
77 1 357 1 
267 2 280 2 245 1 30 1 124 2 13 1 77 2 160 1 250 1 
213 1 118 1 258 1 
73 1 280 1 351 1 124 1 297 1 77 1 339 1 63 1 224 1 210 1 22 1 139 1 342 1 249 1 116 1 91 1 
267 1 73 1 280 2 106 1 245 1 351 1 124 2 297 1 63 1 339 1 13 1 224 1 317 1 210 1 22 1 139 1 249 1 116 1 118 1 91 1 
267 5 278 1 280 5 106 2 245 4 176 1 30 1 124 5 13 4 77 1 317 1 301 1 160 1 275 1 
267 2 300 1 280 2 245 2 186 1 58 1 124 2 13 2 
267 3 280 3 106 1 245 3 30 1 124 3 77 1 13 3 
267 1 300 1 280 1 245 1 58 1 124 1 13 1 
267 1 300 1 160 1 280 1 245 1 250 1 30 1 124 1 13 1 
267 3 245 3 337 1 294 1 194 1 124 4 297 1 63 1 339 1 3 1 148 1 317 1 210 1 22 1 300 1 230 1 249 1 150 1 27 1 153 1 132 2 73 1 280 4 350 1 106 1 215 1 74 1 30 2 219 1 351 1 77 1 13 3 307 1 159 1 224 1 183 1 139 1 160 1 203 1 16 1 116 1 290 1 89 1 91 1 
267 2 280 2 245 1 106 1 176 1 275 1 124 2 77 1 13 1 
267 3 350 1 280 3 215 1 106 2 245 3 30 1 74 1 124 3 13 3 307 1 317 1 160 1 300 1 89 1 253 1 27 1 68 1 153 1 
267 2 280 2 106 1 245 2 30 1 124 2 13 2 160 1 213 1 118 1 
73 1 280 1 351 1 124 1 297 1 77 1 339 1 63 1 224 1 210 1 139 1 22 1 249 1 116 1 91 1 
73 1 280 1 33 1 351 1 124 1 297 1 77 1 339 1 63 1 210 1 139 1 22 1 308 1 116 1 91 1 
292 1 337 1 294 4 3 1 126 1 171 2 231 1 150 1 252 1 213 2 277 1 303 1 256 1 132 2 32 1 219 1 258 2 159 2 183 1 333 1 203 1 118 2 188 1 168 1 
267 1 300 1 280 1 245 1 186 1 124 1 27 1 13 1 
288 1 40 1 296 1 
121 1 302 1 234 1 288 2 40 2 241 1 
288 1 40 1 
288 1 40 1 
234 1 241 1 
234 1 241 1 
234 1 241 1 
25 1 288 1 40 1 
25 1 288 1 40 1 
25 1 288 1 40 1 
288 1 40 1 79 1 
288 1 40 1 79 1 
288 1 40 1 79 1 
267 2 268 1 245 2 60 1 296 1 124 2 273 1 251 1 212 1 67 1 153 1 49 1 236 1 350 1 280 2 177 1 77 1 13 2 81 1 38 1 288 1 40 1 264 1 265 1 
350 2 75 1 177 2 11 1 62 1 64 1 81 2 302 1 46 1 288 2 40 2 264 2 67 1 265 2 166 2 68 1 153 2 236 3 92 1 
334 1 232 1 260 1 
232 1 260 1 8 1 
29 1 334 2 198 1 53 1 260 3 8 1 
286 1 29 1 334 1 53 1 260 2 8 1 
29 2 334 1 53 1 260 2 8 1 
239 1 133 1 350 4 281 1 221 1 247 1 272 1 6 3 56 1 355 1 84 1 68 1 153 4 
239 1 238 1 133 2 350 4 281 1 272 1 99 1 6 3 202 1 355 1 161 1 84 1 68 1 153 4 
190 1 247 1 229 2 6 2 45 2 277 1 68 3 153 3 49 1 345 2 256 1 350 3 179 1 221 1 283 4 284 1 12 2 181 1 56 1 333 1 355 1 84 1 41 3 204 1 167 1 188 1 
190 1 229 4 247 1 6 3 45 4 214 1 277 2 68 4 345 4 153 4 49 2 69 1 256 2 350 4 179 1 283 7 221 2 284 1 12 3 181 1 55 1 56 1 333 2 355 1 84 1 41 5 204 1 167 2 188 2 
22 1 107 1 357 1 
207 1 
22 1 351 1 63 1 
22 1 87 1 
22 1 137 1 
22 1 63 1 
22 3 107 2 351 1 343 1 63 1 70 1 
292 2 312 1 191 1 217 2 122 1 315 1 294 7 0 1 159 3 171 4 333 1 162 1 26 1 206 1 303 3 188 1 255 1 
292 2 312 1 191 1 217 2 122 1 315 1 294 7 0 1 159 3 171 4 333 1 162 1 26 1 206 1 303 3 188 1 255 1 
292 2 312 1 191 1 217 2 122 1 315 1 0 1 294 7 159 3 171 4 333 1 226 1 162 1 26 1 206 1 303 3 188 1 255 1 
292 5 312 1 191 2 122 1 337 1 0 1 315 2 294 31 170 1 3 1 171 16 105 1 277 3 26 2 130 4 303 10 255 5 279 1 256 3 132 2 72 1 135 3 217 3 178 1 219 1 159 15 332 1 333 4 203 1 162 1 228 1 206 2 167 3 188 4 
292 3 312 1 191 1 337 2 294 9 0 1 315 1 3 2 171 5 26 1 303 4 255 1 131 1 132 4 72 1 28 1 217 2 219 2 159 4 333 1 203 2 162 1 206 1 188 1 
313 1 192 1 338 1 147 1 61 2 295 1 271 1 339 1 65 1 209 1 210 1 24 2 198 1 232 1 344 1 8 1 347 1 73 1 136 1 108 1 223 1 285 1 260 2 261 1 139 1 334 1 287 1 164 1 187 1 91 1 
313 2 192 1 338 1 61 3 295 1 271 1 339 1 65 1 340 1 209 1 210 1 318 1 24 3 198 1 232 1 344 1 8 1 347 1 73 1 136 1 108 1 223 1 260 2 261 1 139 1 334 1 164 1 144 1 187 1 91 1 
313 2 192 1 338 1 61 2 271 1 339 1 65 1 340 1 209 1 210 1 318 1 24 2 198 1 232 1 344 1 8 1 347 1 73 1 136 1 108 1 260 2 139 1 334 1 164 1 91 1 
61 1 295 1 297 1 63 1 339 1 209 2 299 1 210 1 22 1 24 1 344 2 48 1 73 1 108 2 261 1 139 1 141 1 309 1 164 2 144 1 336 1 91 1 18 1 
338 1 147 1 61 1 295 1 271 1 339 1 340 1 209 1 210 1 24 1 198 1 232 1 344 1 8 1 347 1 73 1 108 1 223 1 260 2 261 1 139 1 334 1 287 1 164 1 187 1 91 1 
173 1 
267 1 124 1 196 1 96 1 4 1 5 1 43 1 300 1 275 1 235 1 27 1 153 2 133 1 280 1 350 2 281 1 215 1 50 1 329 1 76 1 307 1 142 3 262 1 15 1 85 1 89 1 
267 1 124 1 196 1 96 1 4 1 5 1 43 1 300 1 275 1 235 1 27 1 153 2 133 1 280 1 350 2 281 1 215 1 50 1 329 1 76 1 307 1 142 3 262 1 15 1 85 1 89 1 
267 1 350 2 280 1 215 1 281 1 76 1 329 1 124 1 307 1 96 1 5 1 300 1 43 1 142 2 85 1 275 1 89 1 27 1 153 2 
73 1 350 1 281 1 297 1 153 1 91 1 210 1 
267 1 133 2 350 3 280 1 215 1 76 1 329 1 124 1 307 1 78 1 96 1 272 1 5 1 300 1 43 1 142 2 262 1 85 1 275 1 89 1 27 1 153 3 
267 1 133 1 350 3 280 1 215 1 76 1 329 1 124 1 307 1 78 1 96 1 272 1 5 1 300 1 43 1 142 3 355 1 15 1 85 1 275 1 89 1 27 1 68 1 153 3 
267 1 124 1 96 1 272 1 5 1 43 1 300 1 275 1 235 1 27 1 153 3 68 1 133 2 280 1 350 3 215 1 329 1 76 1 307 1 78 1 142 3 262 1 15 1 355 1 85 1 89 1 
267 1 123 1 124 1 196 1 96 1 4 1 5 1 272 1 43 1 300 1 275 1 235 2 27 1 153 3 133 3 350 3 280 1 281 1 215 1 50 1 329 1 76 1 307 1 78 1 142 2 262 2 85 1 89 1 
267 1 350 2 280 1 215 1 281 1 76 1 329 1 124 1 307 1 96 1 5 1 300 1 43 1 142 2 85 1 275 1 89 1 27 1 153 2 
267 1 350 2 280 1 281 1 215 1 50 1 76 1 329 1 124 1 307 1 196 1 96 1 5 1 300 1 43 1 142 2 85 1 275 1 89 1 27 1 153 2 
267 1 350 2 280 1 281 1 215 1 50 1 76 1 329 1 124 1 307 1 196 1 96 1 5 1 300 1 43 1 142 2 85 1 275 1 89 1 27 1 153 2 
267 1 350 2 280 1 281 1 215 1 76 1 329 1 124 1 307 1 96 1 298 1 5 1 300 1 43 1 101 1 142 2 85 1 275 1 89 1 27 1 153 2 
292 2 132 2 312 1 217 1 337 1 294 6 219 1 0 1 315 1 258 1 77 2 159 3 3 1 183 1 171 3 333 1 203 1 162 1 150 1 213 1 118 1 26 1 303 2 188 1 168 1 357 1 
292 1 337 2 194 1 294 14 95 1 3 2 171 8 233 1 150 1 105 1 213 4 277 1 129 1 303 2 130 3 255 1 279 1 256 2 132 4 135 3 219 2 258 11 77 1 54 1 159 6 183 2 333 1 203 2 83 1 118 11 120 1 167 2 188 2 
267 1 245 1 337 2 294 2 194 1 124 1 297 2 339 2 63 2 340 1 3 2 210 7 22 3 171 1 211 1 150 2 73 8 132 4 9 1 305 1 280 1 134 1 106 1 327 1 219 2 138 1 180 1 13 1 285 1 159 1 183 2 111 2 139 2 203 2 120 1 336 1 168 1 91 8 18 1 
267 1 292 1 245 1 337 1 294 3 124 1 3 1 171 1 150 1 213 1 277 1 303 1 256 1 132 2 280 1 30 1 219 1 258 1 13 1 159 2 183 1 80 1 160 1 333 1 203 1 83 1 118 1 167 1 188 1 
267 1 245 1 337 1 194 1 294 2 297 1 124 2 63 1 339 1 3 1 210 1 317 1 22 1 171 1 342 1 249 1 150 1 66 1 213 1 73 1 132 2 280 2 106 1 31 1 219 1 351 1 34 1 77 1 13 1 224 1 159 1 183 1 139 1 203 1 83 1 116 1 120 1 91 1 
267 1 312 1 42 2 315 1 0 1 194 1 3 3 148 2 317 1 150 3 276 1 277 2 152 1 154 2 280 3 106 1 13 1 159 10 333 3 203 3 162 1 116 2 118 7 120 1 167 2 292 4 293 2 245 1 337 3 294 20 297 1 124 3 339 2 63 2 340 1 210 3 22 2 171 10 249 2 213 7 26 1 303 8 255 4 256 2 73 3 132 6 217 1 219 3 351 2 258 7 77 2 224 2 353 2 183 3 139 2 83 1 90 1 188 3 91 3 
256 1 132 2 337 1 294 2 219 1 258 1 3 1 183 1 126 1 171 2 203 1 150 1 213 1 118 1 303 1 255 1 188 1 168 1 
292 1 132 2 32 1 337 1 294 2 219 1 258 1 159 2 3 1 183 1 333 1 203 1 150 1 213 1 118 1 277 1 303 1 168 1 
292 1 337 1 294 4 3 1 171 2 150 1 213 2 277 1 303 2 255 1 256 1 132 2 219 1 258 2 159 2 183 1 333 1 203 1 118 2 188 1 167 1 168 1 
256 1 9 1 132 2 337 1 294 2 219 1 258 1 3 1 183 1 126 1 171 2 203 1 150 1 213 1 118 1 303 1 255 1 188 1 
292 1 9 1 132 2 32 1 337 1 294 2 219 1 258 1 159 2 3 1 183 1 333 1 203 1 150 1 213 1 118 1 277 1 303 1 
292 1 337 1 294 4 3 1 171 2 150 1 213 2 277 1 303 2 255 1 256 1 132 2 9 1 219 1 258 2 159 2 183 1 333 1 203 1 118 2 188 1 167 1 
292 1 337 1 294 4 3 1 171 2 150 1 213 2 277 1 303 2 255 1 256 1 132 2 219 1 258 2 159 2 183 1 333 1 203 1 118 2 188 1 167 1 
337 1 294 2 194 1 297 1 124 1 63 1 339 1 148 1 3 1 210 1 171 1 22 1 249 1 150 1 73 1 132 2 280 1 219 1 351 1 77 1 224 1 159 1 183 1 139 1 203 1 116 1 120 1 91 1 
337 1 294 2 194 1 297 1 124 1 63 1 339 1 3 1 210 1 171 1 22 1 150 1 73 1 132 2 280 1 219 1 351 1 33 1 77 1 159 1 183 1 139 1 201 1 308 1 203 1 116 1 120 1 91 1 
292 1 337 1 294 4 3 1 171 2 150 1 213 2 277 1 303 2 255 1 256 1 132 2 219 1 258 2 159 2 183 1 333 1 203 1 83 1 118 2 188 1 167 1 
292 1 42 1 337 1 294 4 124 1 339 1 63 1 148 1 3 1 210 1 171 2 22 1 249 1 150 1 213 2 277 1 303 2 255 1 256 1 73 1 132 2 280 1 219 1 351 1 258 2 159 2 224 1 285 1 183 1 139 1 333 1 203 1 116 1 118 2 188 1 167 1 91 1 
267 1 245 1 337 1 294 3 1 1 124 1 3 1 171 2 150 1 213 1 277 1 303 1 255 1 256 1 132 2 280 1 30 1 219 1 258 1 13 1 159 1 183 1 160 1 333 1 203 1 83 1 118 1 167 1 188 1 
292 4 312 1 146 1 337 3 315 1 0 1 294 41 195 1 316 2 3 3 97 1 172 1 171 20 105 1 277 4 26 1 130 4 303 8 254 1 255 4 279 3 256 4 72 1 132 6 28 1 135 3 217 1 158 1 257 1 219 3 330 1 36 1 159 21 333 5 203 3 162 1 115 1 163 1 86 1 117 4 167 4 188 5 266 1 
292 4 312 1 146 1 337 4 315 1 0 1 294 38 195 1 316 2 3 4 97 1 172 1 171 20 105 1 277 3 26 1 130 4 303 7 254 1 255 3 279 3 256 4 72 2 132 8 28 1 135 3 217 1 158 1 257 1 219 4 330 1 36 1 159 18 333 4 203 4 162 1 115 1 163 1 86 1 117 4 167 4 188 5 266 1 
292 7 312 1 146 1 337 2 315 1 0 1 294 52 195 1 316 1 3 2 97 1 172 1 171 27 105 2 277 7 26 1 130 4 303 14 254 1 255 7 279 2 256 7 72 1 132 4 28 1 135 4 217 1 158 1 257 1 219 2 54 2 159 25 333 8 203 2 162 1 115 1 163 1 86 1 117 4 167 7 188 8 266 1 
292 3 146 1 337 2 294 19 316 1 3 2 97 2 172 1 171 9 105 1 277 3 130 2 303 6 255 3 279 1 256 3 132 4 28 1 135 1 219 2 36 1 159 10 333 3 203 2 115 1 163 1 117 2 311 1 167 3 188 3 
292 2 146 1 337 3 294 26 195 1 316 2 3 3 97 1 172 1 171 14 277 2 303 4 130 2 255 2 254 1 279 2 256 3 72 2 132 6 28 1 135 2 158 1 219 3 257 1 159 12 333 2 203 3 115 2 163 1 86 1 117 4 167 3 188 3 266 1 
81 1 302 1 177 1 46 1 288 1 40 1 264 1 64 1 265 1 243 1 
273 1 296 1 
81 1 185 1 177 1 288 1 21 1 274 1 40 1 264 1 265 1 
25 1 145 1 
121 1 246 1 79 1 
350 1 177 1 11 1 62 1 64 1 81 1 302 1 46 1 288 1 40 1 264 1 67 1 265 1 166 1 68 1 153 1 236 2 92 1 
350 1 177 1 11 1 62 1 64 1 81 1 302 1 46 1 288 1 40 1 264 1 67 1 265 1 166 1 68 1 153 1 236 2 92 1 
350 1 177 1 11 1 62 1 64 1 81 1 302 1 46 1 288 1 40 1 264 1 67 1 265 1 166 1 68 1 153 1 236 2 92 1 
121 1 25 1 145 1 
121 1 25 1 145 1 
246 1 79 1 
121 1 246 1 79 1 
268 1 38 1 
267 2 268 1 245 2 60 1 62 1 296 1 124 2 6 1 273 1 251 1 212 1 153 1 49 1 236 1 280 2 350 1 177 1 77 1 13 2 81 1 38 1 288 1 227 1 40 1 264 1 166 1 265 1 
267 2 337 1 294 2 194 1 124 2 339 1 63 1 3 1 210 2 22 1 171 1 127 1 150 1 304 1 322 1 200 1 73 2 132 2 305 1 280 2 134 1 219 1 159 1 183 1 111 2 139 1 203 1 83 1 114 1 120 1 91 2 
189 1 347 1 73 2 108 1 271 1 352 1 339 1 340 1 285 1 260 2 14 1 210 2 139 1 334 1 198 1 232 1 187 1 8 1 91 2 
347 1 73 1 52 1 108 1 271 1 352 1 339 1 340 1 260 2 210 1 139 1 334 1 198 1 232 1 187 1 8 1 91 1 
189 1 73 1 108 1 297 1 339 1 63 1 210 1 139 1 22 1 310 1 48 1 336 1 91 1 18 1 
189 1 347 1 73 1 108 1 271 1 352 1 339 1 340 1 260 2 14 1 210 1 139 1 334 1 198 1 232 1 187 1 8 1 91 1 
225 1 
240 1 45 1 355 1 41 1 68 1 259 1 357 1 
240 1 281 1 
256 2 293 1 283 10 229 5 110 2 12 5 112 1 333 2 45 5 41 5 277 2 345 5 68 5 167 2 188 2 
272 1 133 1 350 1 355 1 68 1 153 1 
73 1 281 1 82 1 297 1 91 1 210 1 
267 2 245 2 337 1 294 1 194 1 297 1 124 3 339 1 63 1 3 1 148 1 210 1 22 1 230 1 249 1 150 1 132 2 73 1 280 3 30 2 219 1 351 1 77 1 13 2 159 1 224 1 183 1 139 1 203 1 16 1 116 1 91 1 
281 1 
281 1 
73 1 281 1 297 1 91 1 210 1 
281 1 
350 1 281 1 196 1 153 1 
268 1 264 1 64 1 265 1 125 1 
306 1 264 1 265 1 
306 1 264 1 265 1 
306 1 264 1 265 1 
270 1 264 1 265 1 
270 1 264 1 265 1 
270 1 264 1 265 1 
264 1 265 1 
288 1 40 1 
292 2 132 4 72 1 312 1 217 1 337 2 294 8 219 2 0 1 315 1 159 4 3 2 171 4 333 1 203 2 162 1 26 1 303 3 188 1 255 1 
292 2 312 1 217 1 0 1 315 1 294 6 159 3 171 3 333 1 162 1 26 1 303 2 188 1 357 1 
256 1 292 1 132 2 337 1 219 1 294 4 159 2 3 1 171 2 333 1 203 1 175 1 277 1 303 2 167 1 188 1 255 1 
256 1 171 3 279 1 292 1 333 1 135 1 105 1 294 7 277 1 303 2 159 4 130 2 255 1 188 1 167 1 
292 5 312 1 337 2 315 2 0 1 294 23 3 2 171 11 233 1 105 1 277 2 26 2 303 9 130 2 255 4 256 2 72 2 132 4 135 2 155 1 217 1 219 2 159 12 54 1 333 3 203 2 162 1 188 3 167 2 
294 1 159 1 130 1 
171 1 135 1 294 1 
256 1 132 2 293 1 292 2 337 1 219 1 294 6 159 3 3 1 171 3 333 1 203 1 175 1 277 1 303 3 167 1 188 1 255 1 
292 1 337 1 294 12 195 1 3 1 171 6 277 2 130 1 303 2 255 1 254 1 279 1 256 2 132 2 135 1 28 1 158 1 219 1 257 1 159 6 333 2 203 1 86 1 167 2 188 2 
292 1 312 1 294 6 315 1 159 3 171 3 333 1 26 1 303 2 188 1 255 1 
292 1 72 1 132 2 155 1 337 1 315 1 0 1 294 3 219 1 159 2 3 1 171 1 203 1 162 1 26 1 303 2 255 1 
292 2 312 1 337 1 294 8 0 1 315 1 3 1 171 4 26 1 130 1 303 2 254 1 279 1 132 2 135 1 28 1 217 1 219 1 159 4 333 1 203 1 162 1 188 1 
292 2 312 1 337 2 315 1 0 1 294 11 3 2 171 6 105 1 175 1 26 1 130 2 303 3 254 1 255 1 279 1 256 1 132 4 28 1 135 1 217 1 219 2 159 5 333 1 203 2 162 1 167 1 188 2 
292 3 312 1 337 3 315 1 0 1 294 19 195 1 3 3 171 9 175 1 277 2 26 1 130 1 303 4 255 1 254 1 279 1 256 2 132 6 72 1 135 1 28 1 217 1 158 1 219 3 257 1 159 10 333 3 203 3 162 1 86 1 167 2 188 3 
292 3 312 1 337 3 315 1 0 1 294 17 195 1 3 3 171 10 175 1 277 1 26 1 130 1 303 5 255 2 254 1 279 1 256 2 72 1 132 6 135 1 28 1 217 1 158 1 219 3 257 1 159 7 333 2 203 3 162 1 86 1 167 2 188 3 
292 2 312 1 337 1 294 8 0 1 315 1 3 1 171 4 26 1 130 1 303 2 254 1 279 1 132 2 135 1 28 1 217 1 219 1 159 4 333 1 203 1 162 1 188 1 
292 1 337 1 294 12 195 1 3 1 171 6 277 2 130 1 303 2 255 1 254 1 279 1 256 2 132 2 135 1 28 1 158 1 219 1 257 1 159 6 333 2 203 1 86 1 167 2 188 2 
292 3 312 1 337 4 315 1 0 1 294 18 195 1 3 4 171 10 175 1 277 1 26 1 130 1 303 5 255 2 254 1 279 1 256 2 132 8 72 2 28 1 135 1 217 1 158 1 219 4 257 1 159 8 333 2 203 4 162 1 86 1 167 2 188 3 
292 3 337 4 294 16 195 1 3 4 171 9 277 2 130 1 303 6 255 3 254 1 279 1 256 3 132 8 72 2 28 1 135 1 158 1 219 4 257 1 159 7 36 1 333 2 203 4 86 1 167 3 188 3 
292 3 312 1 294 7 0 2 315 3 159 4 171 3 333 1 162 1 26 3 303 6 255 3 188 1 
292 3 312 1 337 4 315 1 0 1 294 18 195 1 3 4 171 10 277 1 26 1 130 1 303 4 255 1 254 1 279 1 256 2 132 8 72 2 28 1 135 1 217 1 158 1 219 4 257 1 159 8 36 1 333 2 203 4 162 1 86 1 167 2 188 3 
132 2 292 3 312 1 28 1 337 1 219 1 315 2 294 10 159 5 3 1 171 5 333 2 203 1 17 1 26 2 303 5 255 2 188 2 
256 1 132 2 28 1 337 1 219 1 294 2 3 1 171 2 203 1 303 1 188 1 255 1 
256 1 292 1 132 2 28 1 337 1 219 1 294 4 159 2 3 1 171 2 333 1 203 1 277 1 303 2 167 1 188 1 255 1 
72 1 132 6 292 1 28 1 155 1 337 3 294 3 219 3 315 1 36 1 159 2 3 3 171 1 203 3 26 1 303 2 255 1 
292 7 312 2 337 5 315 3 0 1 294 34 170 1 3 5 171 16 105 1 175 1 277 3 26 3 130 4 303 12 255 5 279 1 256 3 72 2 132 10 28 1 135 3 155 1 217 1 178 1 219 5 159 18 36 1 333 5 203 5 162 1 228 1 167 3 188 5 
267 1 280 1 349 1 176 1 275 1 124 1 77 1 
267 1 349 1 280 1 19 1 176 1 20 1 2 1 124 1 77 1 35 1 113 1 275 1 
139 1 22 1 73 1 297 1 339 1 63 1 336 1 18 1 357 1 91 1 210 1 
73 4 326 1 297 1 63 1 339 1 285 1 210 4 139 1 22 1 143 1 336 1 91 4 18 1 
73 2 351 1 222 1 63 1 339 1 210 2 319 1 22 1 139 2 320 1 184 1 90 1 128 1 91 2 
139 1 73 1 232 1 271 1 297 1 339 1 260 1 8 1 91 1 210 1 
73 2 134 1 63 1 339 1 285 1 340 1 210 2 22 1 139 1 127 1 91 2 
73 5 134 1 326 1 327 1 180 1 297 1 63 2 339 2 285 1 210 4 22 3 139 2 184 1 336 1 18 1 91 5 
73 5 134 1 326 1 180 1 297 1 63 2 339 2 285 1 210 4 22 3 139 2 184 1 336 1 237 1 18 1 91 5 
267 1 73 1 280 2 106 1 245 1 351 1 124 2 297 1 77 1 63 1 13 1 339 1 210 1 22 1 139 1 308 1 116 1 91 1 
73 1 351 1 222 1 63 1 339 1 331 1 210 1 319 1 22 1 139 2 184 1 91 1 70 1 
267 1 73 1 280 2 106 1 245 1 351 1 124 2 297 1 77 1 63 1 13 1 339 1 224 1 210 1 22 1 139 1 116 1 91 1 
267 2 245 2 124 2 339 1 63 2 210 1 22 3 300 1 27 1 73 1 280 2 106 1 351 2 77 1 13 1 307 1 224 1 139 1 184 1 116 1 87 1 244 1 91 1 
267 2 245 2 124 2 339 1 63 2 210 2 22 3 300 1 27 1 73 2 280 2 106 1 351 2 77 1 13 1 307 1 139 1 308 1 184 1 143 1 116 1 87 1 244 1 91 2 
73 3 133 1 350 2 215 1 137 1 107 1 351 1 297 1 63 1 339 1 210 3 139 1 22 4 100 1 184 1 355 1 143 1 87 1 244 1 119 1 68 1 153 2 91 3 
73 3 133 1 350 2 215 1 137 1 107 1 351 1 297 1 63 1 339 1 210 3 139 1 22 4 184 1 355 1 143 1 87 1 244 1 68 1 153 2 91 3 324 1 
139 1 73 1 138 1 339 1 91 1 210 1 
73 7 134 1 327 1 138 1 180 1 351 1 222 1 297 2 63 2 339 2 340 1 285 1 331 1 111 1 210 6 319 1 22 3 139 3 211 1 91 7 70 1 
267 1 292 2 312 1 42 1 245 1 337 2 294 6 315 1 0 1 124 2 63 1 339 1 3 2 148 1 210 1 171 3 22 1 249 1 150 2 213 1 26 1 303 2 304 1 132 4 73 1 154 1 280 2 106 1 217 1 219 2 351 1 258 1 77 2 13 1 159 3 285 1 224 1 183 2 139 1 333 1 203 2 162 1 83 1 116 1 118 1 188 1 91 1 
133 2 73 1 350 3 215 1 281 2 156 1 137 1 107 1 297 1 210 1 272 1 22 2 6 1 82 1 165 1 153 3 346 1 324 1 91 1 
73 2 107 1 193 1 138 1 351 1 63 1 339 1 285 1 210 2 22 2 139 2 91 2 70 1 
267 1 280 1 157 1 328 1 124 1 7 1 114 1 200 1 322 1 
197 1 208 1 328 1 
157 1 7 1 328 1 291 1 77 1 
350 2 215 1 74 1 157 2 208 1 328 1 218 1 77 1 307 1 300 1 6 1 197 1 355 1 7 2 291 2 89 1 27 1 68 1 153 2 
136 1 192 1 65 1 357 1 
24 1 136 1 192 1 61 1 295 1 65 1 261 1 
24 1 164 1 344 1 
37 2 24 3 136 1 287 1 192 1 289 1 220 1 88 1 61 3 295 1 65 1 261 1 
10 1 24 2 136 1 313 1 192 1 61 2 295 1 65 1 261 1 
103 1 24 1 334 1 287 1 232 1 151 1 61 1 295 1 65 1 260 1 261 1 
24 1 136 1 287 1 61 1 295 1 65 1 261 1 
24 1 136 2 287 1 192 1 61 1 295 1 261 1 
71 1 136 1 295 2 61 2 65 1 341 1 261 2 39 1 24 2 287 1 
325 1 136 1 313 2 192 1 314 1 295 1 61 3 65 2 261 1 24 3 287 1 151 1 57 1 
136 1 313 1 192 1 295 1 61 2 65 1 260 2 261 1 24 2 287 1 198 1 334 1 232 1 321 1 8 1 
348 1 10 1 136 1 313 2 192 1 314 1 295 2 61 4 65 2 261 2 24 4 287 1 151 1 
24 1 136 1 287 1 192 1 61 1 295 1 65 1 261 1 
136 2 313 2 192 2 314 1 61 4 295 1 65 3 261 1 37 1 102 1 24 4 151 1 289 1 88 1 
269 1 136 1 313 1 192 1 295 1 61 2 65 1 261 1 24 2 287 1 47 1 205 1 
136 1 282 1 192 1 295 1 61 3 65 1 261 1 37 2 24 3 287 1 289 2 88 1 
356 1 93 1 65 2 94 2 
24 1 287 1 199 1 61 1 295 1 261 1 
325 1 24 2 136 1 287 1 313 1 192 1 61 2 295 1 65 1 261 1 
323 1 
24 1 136 1 287 1 192 1 61 1 295 1 65 1 261 1 
325 1 37 1 24 3 136 1 287 1 313 1 192 1 61 3 295 1 65 1 261 1 
102 1 151 1 314 1 65 1 
136 1 65 1 

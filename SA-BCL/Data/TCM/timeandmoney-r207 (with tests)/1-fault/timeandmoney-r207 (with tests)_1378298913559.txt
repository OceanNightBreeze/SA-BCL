#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
216 1 140 1 244 1 219 3 85 1 347 9 90 1 105 2 182 2 149 2 12 1 281 1 228 1 305 1 257 1 40 1 129 9 308 4 229 2 43 5 285 2 192 1 167 1 168 2 46 6 80 1 81 2 50 1 
216 1 140 1 244 1 219 3 85 1 347 9 90 1 105 2 182 2 149 2 12 1 281 1 228 1 305 1 257 1 40 1 129 9 308 4 229 2 43 5 285 2 192 1 167 1 168 2 46 6 80 1 81 2 50 1 
216 1 140 1 244 1 219 4 85 1 347 10 90 1 105 2 182 2 149 2 12 1 281 1 228 1 305 1 257 1 40 1 129 10 308 5 229 2 43 6 285 2 192 1 167 1 168 2 46 7 80 1 81 2 50 1 
257 1 216 1 40 1 244 1 140 1 219 2 129 7 308 3 229 2 43 4 285 2 347 7 90 1 167 1 192 1 105 2 168 2 46 4 149 2 182 2 80 1 81 1 12 1 50 1 305 1 228 1 281 1 
40 1 219 1 129 4 308 2 229 1 85 1 43 3 285 1 347 4 90 1 167 1 168 1 46 3 149 1 182 1 81 2 12 1 50 1 
129 2 283 1 229 1 43 1 285 1 347 2 90 1 167 1 105 1 236 1 182 1 149 1 80 1 35 1 50 1 281 1 
257 1 219 1 129 3 308 1 43 2 285 2 347 3 90 1 167 1 105 1 46 1 182 2 50 1 
257 1 40 1 244 1 140 1 101 1 219 3 129 9 308 4 229 1 85 1 43 5 285 2 347 9 90 1 167 1 105 1 168 1 46 7 290 1 149 1 182 2 81 2 12 1 50 1 
257 1 40 1 244 1 140 1 101 1 219 3 129 9 308 4 229 1 85 1 43 5 285 2 347 9 90 1 167 1 105 1 168 1 46 7 290 1 149 1 182 2 81 2 12 1 50 1 
307 1 269 1 317 1 
243 2 175 1 269 1 
39 2 82 2 150 1 34 2 316 1 152 2 300 2 263 2 
52 1 99 1 343 1 53 2 82 2 246 1 176 1 299 2 319 1 369 1 368 1 300 2 178 1 250 1 220 1 31 2 150 1 34 3 8 1 152 2 61 1 227 2 108 2 256 1 39 2 160 1 309 1 162 1 335 1 379 1 20 1 194 1 380 1 316 1 263 3 296 1 214 1 
56 1 39 1 82 1 34 1 316 1 151 1 152 1 300 1 263 1 
51 1 82 1 269 1 311 1 71 1 73 1 324 1 288 1 134 1 34 1 60 1 263 1 317 1 340 1 
39 1 51 2 82 1 269 1 311 1 71 1 300 1 73 1 324 2 288 1 134 1 34 1 152 1 263 1 317 1 
324 1 51 1 121 1 136 1 133 1 
324 2 51 2 269 1 189 1 317 1 301 1 136 1 133 1 
324 1 51 1 136 1 
39 1 51 1 82 1 300 1 358 1 133 1 56 1 324 1 34 1 316 1 151 1 152 1 263 1 
269 1 
324 2 51 2 269 1 189 1 317 1 322 1 136 1 133 1 
51 5 0 1 269 1 268 1 189 1 2 1 131 2 3 1 302 1 133 2 286 2 199 1 324 5 276 1 361 1 91 1 363 2 317 1 136 2 
150 1 307 1 
39 1 82 2 300 1 34 2 150 2 374 1 152 1 263 2 264 1 
13 1 367 1 320 1 
99 1 246 1 299 1 309 1 335 1 379 1 20 1 220 1 31 1 150 1 34 1 380 1 263 1 61 1 238 1 108 1 
99 1 13 1 82 1 246 1 299 1 309 1 300 1 335 1 379 1 18 1 20 1 220 1 31 1 380 1 34 2 152 1 263 2 61 1 239 1 108 1 
39 1 82 3 150 1 34 3 152 3 300 3 263 3 18 1 
56 1 82 1 34 1 152 1 300 1 263 1 
39 1 82 1 34 1 374 1 152 1 300 1 263 1 264 1 73 1 
51 1 52 1 99 1 343 1 53 2 82 3 246 1 176 1 299 1 300 3 178 1 250 1 220 1 324 1 31 1 150 1 34 4 8 1 152 3 61 1 227 1 108 1 256 1 39 2 160 1 309 1 311 1 71 1 162 1 335 1 379 1 18 1 73 1 20 1 288 1 134 1 380 1 316 1 21 1 263 4 264 1 265 1 239 1 214 1 
82 2 150 1 34 2 60 1 27 1 152 1 300 1 263 2 18 1 
39 1 51 1 331 1 82 3 269 1 311 1 71 1 300 3 18 2 73 1 324 1 288 1 134 1 34 3 21 1 152 3 263 3 264 1 239 1 
39 1 82 2 13 1 367 1 300 2 18 1 34 2 152 2 263 2 264 1 
99 1 246 1 299 1 309 1 335 1 379 1 20 1 220 1 31 1 150 1 34 1 380 1 263 1 61 1 108 1 
99 1 258 1 299 1 309 1 335 1 379 1 220 1 31 1 57 1 150 1 34 1 380 1 263 1 61 1 108 1 
52 2 53 2 1 1 176 1 54 1 320 2 367 2 369 2 146 1 178 1 371 1 250 1 120 1 62 1 304 1 227 4 256 1 13 2 127 1 377 1 160 1 284 1 162 1 360 1 
29 1 82 1 34 1 311 1 152 1 300 1 263 1 73 1 
39 1 82 5 27 1 188 1 300 4 18 2 34 5 150 1 237 1 60 1 152 4 263 5 264 1 239 1 
56 1 82 1 34 1 152 1 300 1 263 1 
119 1 291 1 
119 1 291 1 
158 1 310 1 
158 1 310 1 
158 1 310 1 
24 1 119 1 291 1 
24 1 119 1 291 1 
119 1 291 1 95 1 
158 1 102 1 310 1 119 2 291 2 5 1 
24 1 119 1 291 1 
119 1 291 1 248 1 
119 1 291 1 248 1 
119 1 291 1 248 1 
51 2 267 3 26 1 269 1 346 1 356 1 87 2 163 1 5 1 165 1 324 2 348 1 33 2 169 1 200 2 291 2 119 2 155 2 116 2 
51 1 267 1 82 2 346 1 103 1 300 2 87 1 324 1 30 1 33 1 150 1 34 2 119 1 152 2 154 1 155 1 37 1 95 1 291 1 337 1 196 1 263 2 115 1 116 1 
168 1 149 1 229 1 
236 1 149 1 229 1 
168 2 185 1 236 1 128 1 229 3 164 1 
168 1 236 1 128 1 143 1 229 2 164 1 
168 1 236 1 128 1 229 2 164 2 
51 5 243 3 175 1 298 1 270 1 269 2 103 1 2 1 272 2 88 1 179 1 323 2 324 5 30 1 276 2 32 1 328 1 120 1 252 2 37 1 304 1 355 1 189 1 284 1 131 1 286 1 133 4 360 1 361 3 363 1 317 1 136 1 
51 9 243 9 175 3 298 1 269 5 103 4 2 1 4 1 302 1 272 6 88 2 179 3 324 9 276 6 349 1 32 2 120 3 121 5 252 6 304 3 123 1 189 1 284 3 131 2 19 1 133 7 286 2 360 3 361 8 362 1 171 1 363 2 317 1 136 6 215 5 
51 3 243 4 175 2 269 3 270 1 103 1 302 1 88 1 272 2 179 1 323 1 324 3 276 2 32 1 328 1 120 1 252 2 304 1 284 1 131 1 133 2 286 1 360 1 361 3 363 1 317 1 
51 4 243 7 175 3 269 4 270 1 103 2 4 1 272 4 302 1 88 1 179 2 323 2 324 4 276 4 32 1 328 1 120 2 252 4 304 2 284 2 131 1 19 1 286 1 133 3 360 2 361 5 362 1 363 1 317 1 
126 1 380 1 307 1 
118 1 380 1 
166 1 
380 1 379 1 
126 2 380 3 335 1 173 1 379 1 240 1 
380 1 335 1 379 1 
380 1 110 1 
137 1 52 3 41 1 127 2 284 1 369 4 72 1 360 1 59 1 327 1 47 2 201 1 172 1 62 3 339 1 254 1 227 7 
137 1 52 3 41 1 127 2 284 1 369 4 72 1 360 1 59 1 327 1 47 2 201 1 172 1 62 3 339 1 254 1 227 7 
137 1 52 3 41 1 127 2 284 1 369 4 72 1 117 1 360 1 59 1 327 1 47 2 201 1 172 1 62 3 339 1 254 1 227 7 
137 5 52 15 53 2 83 1 176 1 271 1 369 16 179 3 250 1 221 1 327 2 59 2 201 1 120 3 92 4 62 10 254 2 304 3 227 31 157 1 256 1 41 1 186 1 127 5 160 1 284 4 72 1 74 1 111 1 209 3 360 4 47 3 172 1 339 2 
137 1 52 4 53 4 176 2 369 5 250 2 327 1 59 1 201 1 11 1 62 4 254 1 227 9 157 1 256 2 127 3 378 1 160 2 284 1 72 1 360 1 47 2 172 1 339 1 
138 1 99 1 299 1 370 1 347 2 90 1 220 1 105 1 275 1 31 1 149 1 182 1 372 1 223 1 108 1 282 1 185 1 129 2 229 2 43 1 16 1 285 1 167 1 168 1 46 1 236 1 197 1 262 1 48 1 50 1 
138 1 99 1 299 1 365 1 347 3 90 1 220 1 105 1 275 1 31 1 149 1 182 1 372 1 223 1 108 1 185 1 129 3 229 2 43 1 109 1 16 1 285 1 17 1 168 1 46 2 236 1 197 1 262 1 48 1 50 1 
138 1 185 1 99 1 365 1 129 2 299 1 229 2 43 1 16 1 17 1 347 2 90 1 220 1 105 1 168 1 31 1 236 1 46 2 149 1 372 1 262 1 223 1 48 1 50 1 108 1 
99 1 129 1 299 1 309 1 70 1 109 1 16 2 285 1 379 1 347 1 220 1 105 2 106 1 31 1 193 1 107 1 380 1 279 1 182 1 183 1 223 2 48 2 108 1 
138 1 99 1 299 1 347 1 220 1 105 1 275 1 31 1 149 1 182 1 372 1 223 1 108 1 282 1 185 1 129 1 229 2 16 1 285 1 17 1 167 1 168 1 236 1 197 1 262 1 48 1 
206 1 
51 5 243 2 99 1 100 1 247 2 299 2 2 1 107 1 251 1 352 1 353 2 60 1 202 1 253 1 108 2 65 2 161 2 309 2 311 1 71 1 73 1 75 4 361 2 170 2 363 1 263 1 317 1 174 2 175 2 82 1 269 2 177 1 86 1 220 1 324 5 276 2 277 1 31 2 32 1 279 1 34 1 225 1 189 3 131 1 44 2 379 1 286 1 191 1 288 1 235 1 134 1 380 1 338 1 136 6 340 1 
51 3 100 1 82 1 247 1 311 1 189 1 71 1 86 1 322 1 73 1 75 2 324 3 288 1 134 1 251 1 34 1 352 1 60 1 263 1 225 1 136 2 340 1 
51 3 100 1 82 1 269 1 86 1 322 1 324 3 251 1 34 1 352 1 60 1 353 1 225 1 311 1 71 1 189 1 73 1 75 3 288 1 134 1 263 1 317 1 136 1 340 1 
51 3 174 1 100 1 82 1 247 1 269 1 86 1 322 1 324 3 251 1 34 1 352 1 60 1 353 1 225 1 311 1 189 1 71 1 73 1 75 3 288 1 134 1 263 1 317 1 340 1 136 2 
51 5 100 1 247 4 2 1 251 1 352 1 60 1 353 4 202 1 65 2 69 1 161 2 311 1 71 1 73 1 75 6 210 1 361 1 170 2 263 1 363 1 317 5 174 4 217 1 266 1 82 1 175 2 269 5 177 1 86 1 322 1 324 5 276 1 34 1 225 1 189 3 131 1 44 2 286 1 288 1 134 1 136 7 340 1 297 1 
51 4 243 2 100 1 247 2 2 1 251 1 352 1 60 1 353 2 202 1 65 2 161 2 311 1 71 1 73 1 75 4 361 1 170 2 263 1 363 1 317 1 174 2 82 1 175 2 269 2 177 1 86 1 324 4 276 1 34 1 225 1 189 2 131 1 44 2 286 1 288 1 235 1 134 1 340 1 136 4 
51 4 174 2 217 1 100 1 175 2 82 1 247 2 269 1 177 1 86 1 2 1 324 4 276 1 251 1 34 1 352 1 353 2 60 1 202 1 225 1 65 2 161 2 69 1 311 1 189 2 71 1 131 1 44 2 73 1 75 4 286 1 288 1 134 1 361 1 170 2 363 1 263 1 317 1 136 4 340 1 297 1 
51 4 174 2 217 1 100 1 175 2 82 1 247 2 269 1 177 1 86 1 2 1 324 4 276 1 251 1 34 1 352 1 353 2 60 1 202 1 225 1 65 2 161 2 69 1 311 1 189 2 71 1 131 1 44 2 73 1 75 4 286 1 288 1 134 1 361 1 170 2 363 1 263 1 317 1 136 4 340 1 297 1 
51 4 174 2 243 2 217 1 364 1 100 1 82 1 247 2 144 2 269 1 177 1 86 1 2 1 28 1 324 4 276 1 251 1 34 1 352 1 353 2 60 1 225 1 65 2 311 1 189 2 71 1 132 2 131 1 73 1 75 4 286 1 313 1 288 1 134 1 361 1 170 2 363 1 263 1 317 1 136 4 340 1 
51 4 217 1 174 3 100 1 175 2 82 1 247 3 269 1 177 1 2 1 86 1 324 4 276 1 251 1 34 1 352 1 60 1 353 3 202 1 225 1 65 2 161 2 69 1 311 1 189 2 71 1 131 1 44 2 73 1 286 1 75 5 288 1 210 1 134 1 361 1 170 2 363 1 263 1 317 1 340 1 136 5 297 1 
51 4 217 1 174 3 100 1 175 2 82 1 247 3 269 1 177 1 2 1 86 1 324 4 276 1 251 1 34 1 352 1 60 1 353 3 202 1 225 1 65 2 161 2 69 1 311 1 189 2 71 1 131 1 44 2 73 1 286 1 75 5 288 1 210 1 134 1 361 1 170 2 363 1 263 1 317 1 340 1 136 5 297 1 
51 4 174 2 243 2 100 1 82 1 247 2 144 2 269 1 177 1 86 1 2 1 28 1 324 4 276 1 251 1 34 1 352 1 353 2 60 1 225 1 65 2 311 1 189 2 71 1 132 2 131 1 73 1 286 1 75 4 288 1 235 1 134 1 361 1 170 2 363 1 263 1 317 1 136 4 340 1 
52 3 53 2 176 1 54 1 367 1 320 1 369 3 178 1 250 1 150 2 201 1 62 2 254 1 227 6 256 1 13 1 127 2 160 1 307 1 284 1 162 1 72 1 360 1 47 1 172 1 339 1 
137 1 52 6 53 4 176 2 319 1 320 11 271 1 367 4 369 8 178 2 249 1 179 2 250 2 150 1 8 1 120 2 92 3 62 2 304 1 38 1 227 14 255 1 256 2 127 1 13 11 66 1 160 2 284 1 162 1 359 1 74 1 209 3 360 2 
99 1 52 1 245 1 82 1 53 2 246 1 299 1 176 1 319 1 367 1 300 1 369 1 178 1 220 1 250 1 31 1 150 1 34 2 8 1 152 1 61 1 108 1 38 1 227 2 256 1 160 1 309 1 162 1 335 1 379 1 18 1 20 1 45 1 380 1 22 1 263 2 238 1 239 1 
137 4 52 10 99 2 343 2 53 6 246 2 299 3 345 1 300 1 250 3 58 2 150 2 201 1 8 1 7 2 152 1 61 2 62 8 254 1 304 2 108 3 256 3 64 2 13 7 160 3 309 1 15 1 72 1 162 3 17 1 18 1 20 2 360 3 315 1 113 2 172 1 263 3 82 1 176 3 319 1 320 7 367 7 369 10 178 3 179 2 220 2 31 3 34 3 120 2 38 1 227 20 127 4 284 3 335 2 379 2 380 2 47 1 339 1 239 1 
99 2 52 1 82 1 53 4 299 7 176 2 366 1 54 1 319 1 300 1 369 1 368 2 178 2 370 1 220 2 250 2 31 8 107 1 34 1 279 1 8 1 152 1 63 1 108 8 227 2 256 2 160 2 309 2 334 1 162 2 17 1 18 1 379 2 77 1 380 3 114 1 263 1 381 1 341 1 
52 2 53 2 82 1 176 1 367 1 320 1 300 1 369 1 178 1 179 1 250 1 34 1 184 1 120 1 152 1 62 1 304 1 38 1 227 3 39 1 256 1 127 1 13 1 160 1 284 1 162 1 360 1 263 1 264 1 
256 1 137 1 13 1 53 2 160 1 1 1 176 1 54 1 367 1 320 1 369 2 162 1 178 1 250 1 360 1 120 1 62 1 227 2 
256 1 52 2 127 1 13 1 53 2 160 1 176 1 54 1 367 1 320 1 284 1 162 1 178 1 250 1 371 1 62 1 304 1 227 2 
137 1 52 2 53 2 176 1 54 1 320 2 367 2 369 2 178 1 179 1 250 1 120 1 62 2 304 1 227 4 256 1 13 2 127 1 160 1 284 1 162 1 360 1 
256 1 137 1 13 1 53 2 160 1 1 1 366 1 176 1 367 1 320 1 369 2 162 1 178 1 250 1 360 1 120 1 62 1 227 2 
256 1 52 2 127 1 13 1 53 2 160 1 366 1 176 1 367 1 320 1 284 1 162 1 178 1 250 1 371 1 62 1 304 1 227 2 
256 1 137 1 52 2 127 1 13 2 53 2 160 1 366 1 176 1 367 2 320 2 284 1 369 2 162 1 178 1 179 1 250 1 360 1 120 1 62 2 304 1 227 4 
256 1 137 1 52 2 127 1 13 2 53 2 160 1 176 1 367 2 320 2 284 1 369 2 162 1 178 1 179 1 250 1 360 1 120 1 62 2 304 1 227 4 
99 1 52 1 343 1 53 2 246 1 299 1 176 1 319 1 369 1 178 1 220 1 250 1 31 1 150 1 34 1 8 1 61 1 227 2 108 1 256 1 160 1 309 1 162 1 335 1 379 1 20 1 380 1 263 1 
99 1 52 1 53 2 299 1 176 1 319 1 369 1 178 1 220 1 250 1 31 1 57 1 150 1 34 1 8 1 61 1 226 1 227 2 108 1 256 1 258 1 160 1 309 1 162 1 335 1 379 1 380 1 263 1 
256 1 137 1 52 2 127 1 13 2 53 2 160 1 176 1 367 2 320 2 284 1 369 2 162 1 178 1 179 1 250 1 360 1 120 1 62 2 304 1 227 4 38 1 
137 1 52 2 99 1 343 1 53 2 246 1 299 1 176 1 367 2 320 2 369 2 178 1 370 1 179 1 220 1 250 1 31 1 58 1 34 1 120 1 61 1 62 2 304 1 227 4 108 1 256 1 127 1 13 2 160 1 284 1 162 1 335 1 379 1 20 1 360 1 380 1 263 1 
137 1 52 1 53 2 82 1 176 1 320 1 367 1 300 1 369 2 178 1 179 1 250 1 34 1 120 1 152 1 62 1 304 1 330 1 38 1 227 3 39 1 256 1 13 1 160 1 284 1 162 1 360 1 263 1 264 1 
241 1 137 3 52 10 53 4 176 2 84 1 271 1 369 9 179 3 274 1 250 2 120 3 36 2 11 1 92 2 62 6 304 3 227 19 159 1 256 2 127 3 160 2 230 1 190 2 284 3 74 1 209 1 287 1 234 1 360 3 
241 2 137 2 52 12 53 6 176 3 369 14 179 3 274 2 250 3 373 1 120 3 36 1 222 1 11 1 92 2 62 4 376 1 304 2 157 2 227 26 256 3 332 1 127 2 160 3 230 1 284 2 190 4 207 1 74 2 209 2 287 1 234 1 360 3 23 1 
241 1 137 4 52 21 53 6 250 3 6 1 201 1 11 1 62 8 304 4 254 1 157 1 256 3 160 3 72 1 207 1 74 3 209 3 360 5 23 1 172 1 176 3 84 1 271 1 369 20 179 4 274 2 120 4 373 1 36 1 222 1 92 4 376 1 227 41 332 1 127 4 230 1 284 5 190 4 234 1 287 1 47 1 339 1 
241 1 137 3 52 18 53 8 176 4 84 1 271 1 369 20 179 4 274 2 250 4 6 1 201 1 373 1 120 4 36 1 222 1 11 1 92 4 376 1 62 7 254 1 304 3 157 2 227 38 256 4 332 1 127 4 160 4 230 1 190 4 284 4 72 1 207 1 74 3 209 3 287 1 234 1 360 5 47 1 23 1 172 1 339 1 
241 1 137 7 52 25 53 4 176 2 271 2 369 27 179 7 274 1 250 2 201 1 373 1 120 7 36 1 222 1 11 1 92 4 376 1 62 14 254 1 304 7 157 1 227 52 256 2 332 1 127 7 66 2 160 2 230 1 190 4 284 8 72 1 207 1 74 2 209 4 287 1 234 1 360 8 47 1 23 1 172 1 339 1 
141 1 33 1 119 1 291 1 87 1 163 1 155 1 5 1 116 1 165 1 
154 1 95 1 
318 1 33 1 205 1 119 1 291 1 312 1 87 1 155 1 116 1 
51 1 267 2 269 1 346 1 356 1 87 1 163 1 5 1 165 1 324 1 348 1 33 1 169 1 200 1 291 1 119 1 155 1 116 1 
51 1 267 2 269 1 346 1 356 1 87 1 163 1 5 1 165 1 324 1 348 1 33 1 169 1 200 1 291 1 119 1 155 1 116 1 
51 1 267 2 269 1 346 1 356 1 87 1 163 1 5 1 165 1 324 1 348 1 33 1 169 1 200 1 291 1 119 1 155 1 116 1 
24 1 102 1 98 1 
24 1 102 1 98 1 
342 1 248 1 
342 1 102 1 248 1 
196 1 115 1 
51 1 267 1 82 2 103 1 87 1 300 2 324 1 30 1 33 1 200 1 150 1 34 2 119 1 152 2 154 1 155 1 37 1 94 1 356 1 95 1 133 1 291 1 337 1 196 1 263 2 115 1 116 1 
24 1 98 1 
342 1 102 1 248 1 
242 1 99 1 52 1 82 2 53 2 176 1 299 2 319 1 369 1 368 2 178 1 220 1 250 1 31 2 278 1 34 2 8 1 153 1 108 2 38 1 227 2 256 1 160 1 162 1 379 1 77 1 112 1 380 1 261 1 263 2 381 1 
138 1 185 1 99 1 299 2 229 2 16 1 17 1 370 1 220 1 168 1 31 2 236 1 149 1 372 1 79 1 197 1 203 1 198 1 108 2 
138 1 185 1 99 1 299 1 229 2 16 1 17 1 220 1 168 1 31 1 236 1 78 1 149 1 372 1 197 1 198 1 108 1 
99 1 299 1 309 1 70 1 16 1 379 1 220 1 180 1 31 1 107 1 380 1 279 1 79 1 108 1 
138 1 185 1 99 1 299 1 229 2 16 1 17 1 220 1 168 1 31 1 236 1 149 1 372 1 79 1 197 1 203 1 198 1 108 1 
25 1 
199 1 276 1 307 1 269 1 268 1 361 1 317 1 
51 1 243 1 175 1 269 2 2 1 324 1 276 1 202 1 161 1 189 1 131 1 44 1 286 1 361 1 363 1 317 1 136 1 
51 5 99 4 243 12 142 2 299 3 2 4 199 1 303 2 7 2 252 6 304 2 108 3 259 2 260 1 309 1 357 1 110 2 76 2 360 2 361 9 363 4 317 2 173 1 213 2 175 6 268 1 269 8 272 6 370 1 179 2 118 3 220 3 324 5 276 8 277 1 31 3 32 2 325 1 120 2 329 2 126 2 93 2 189 3 131 4 284 2 335 3 379 3 286 4 96 2 134 2 336 1 380 10 294 1 136 5 
51 1 243 6 175 3 269 5 2 2 272 5 179 2 324 1 276 5 277 1 32 1 373 1 120 2 222 1 252 5 92 1 376 1 304 2 306 1 124 1 332 1 93 1 259 2 189 1 131 2 284 2 74 1 286 2 209 1 360 2 361 8 23 1 363 2 317 2 136 1 
51 1 82 1 2 1 300 1 56 1 324 1 276 2 34 1 351 1 151 1 152 1 254 1 39 1 93 1 259 2 69 1 131 1 284 1 72 1 358 1 286 1 360 2 316 1 361 2 263 1 363 1 339 1 
268 1 269 1 2 1 131 1 286 1 199 1 276 1 361 1 363 1 317 1 
243 10 93 1 259 2 175 5 269 5 284 2 272 5 179 2 276 5 360 2 7 1 120 2 361 5 252 5 304 2 
324 1 51 1 269 1 189 1 317 1 136 1 
51 3 99 1 299 4 2 1 302 1 220 1 324 3 276 2 31 4 277 2 32 2 107 1 279 1 326 1 325 1 280 1 253 1 108 4 309 2 357 2 189 2 131 2 379 1 286 2 380 1 361 2 363 2 338 1 136 4 
52 1 99 1 343 1 53 2 82 2 246 1 176 1 299 1 300 2 178 1 250 1 220 1 31 1 150 1 34 3 8 1 152 2 61 1 227 1 108 1 256 1 39 2 160 1 309 1 162 1 335 1 379 1 20 1 380 1 316 1 263 3 214 1 
243 4 175 2 269 4 2 1 131 1 272 2 286 1 276 2 277 1 32 1 47 1 361 1 252 2 363 1 317 2 
218 1 33 1 87 1 
218 1 33 1 87 1 
33 1 196 1 293 1 87 1 163 1 
218 1 33 1 87 1 
33 1 87 1 321 1 
33 1 87 1 321 1 
33 1 87 1 321 1 
33 1 87 1 
119 1 291 1 
256 2 137 1 52 4 127 2 53 4 160 2 176 2 284 1 369 4 72 1 250 2 360 1 47 1 201 1 172 1 62 3 339 1 254 1 227 8 157 1 
52 3 360 1 127 2 307 1 47 1 201 1 284 1 369 3 72 1 172 1 62 2 339 1 254 1 227 6 
256 1 137 1 52 2 127 1 53 2 160 1 176 1 284 1 369 2 179 1 250 1 360 1 120 1 375 1 62 2 304 1 227 4 
137 1 52 4 127 1 271 1 284 1 369 3 179 1 74 1 209 1 360 1 120 1 92 2 62 2 304 1 227 7 
137 4 52 12 53 4 176 2 271 1 369 11 179 2 250 2 201 1 120 2 92 2 62 9 254 2 304 2 227 23 157 2 256 2 204 1 127 5 66 1 160 2 284 3 72 1 359 1 209 2 360 3 47 1 172 1 339 2 
52 1 92 1 227 1 
209 1 369 1 227 1 
256 1 137 1 52 3 53 2 127 2 160 1 176 1 369 3 284 1 179 1 250 1 360 1 7 1 120 1 375 1 62 3 304 1 227 6 
137 1 52 6 53 2 176 1 369 6 179 2 250 1 120 2 373 1 11 1 222 1 92 1 376 1 62 2 304 2 227 12 256 1 332 1 127 1 160 1 284 2 74 1 209 1 360 2 23 1 
137 1 52 3 127 1 369 3 284 1 72 1 360 1 339 1 62 2 254 1 227 6 
256 1 137 1 204 1 52 2 127 1 53 2 160 1 176 1 369 1 250 1 201 1 172 1 62 2 339 1 254 1 227 3 157 1 
256 1 137 2 52 5 53 2 127 3 160 1 176 1 369 5 284 2 72 1 250 1 360 2 351 1 11 1 339 2 62 5 254 2 227 10 
256 1 137 1 53 2 160 1 176 1 369 2 250 1 360 1 120 1 11 1 62 1 227 2 
256 1 137 1 52 2 127 1 53 2 160 1 176 1 284 1 369 2 179 1 250 1 360 1 120 1 11 1 62 2 304 1 227 4 
256 3 204 1 137 1 52 2 53 6 127 1 160 3 176 3 84 1 369 1 250 3 11 1 339 1 62 2 254 1 157 1 227 3 
137 5 52 18 53 10 83 1 176 5 84 1 271 1 369 16 179 3 250 5 201 1 120 3 375 1 11 1 92 4 62 12 254 3 304 3 157 2 227 34 256 5 204 1 186 1 127 7 160 5 284 5 72 2 111 1 74 1 209 3 360 5 47 1 172 1 339 3 
52 4 53 2 176 1 369 4 250 1 201 1 11 1 92 1 62 2 254 1 227 8 256 1 332 1 127 2 160 1 284 1 72 1 74 1 209 1 360 1 47 1 172 1 339 1 
137 1 52 5 53 4 176 2 271 1 369 6 179 1 250 2 201 1 120 1 375 1 11 1 92 2 62 3 254 1 227 11 256 2 332 1 127 2 160 2 284 1 72 1 74 1 209 1 360 2 47 1 172 1 339 1 
137 1 52 10 53 6 176 3 369 9 179 2 250 3 201 1 373 1 120 2 375 1 11 1 222 1 92 1 376 1 62 4 254 1 304 2 227 19 157 1 256 3 332 1 127 3 160 3 284 3 72 1 74 1 209 1 360 3 47 1 23 1 172 1 339 1 
137 2 52 7 53 6 176 3 369 10 179 2 250 3 201 1 120 2 373 1 375 1 11 1 222 1 92 1 376 1 62 5 254 1 304 1 157 1 227 17 256 3 332 1 127 3 160 3 284 2 72 1 74 1 209 1 360 3 47 1 23 1 172 1 339 1 
52 4 53 2 176 1 369 4 250 1 201 1 11 1 92 1 62 2 254 1 227 8 256 1 332 1 127 2 160 1 284 1 72 1 74 1 209 1 360 1 47 1 172 1 339 1 
137 1 52 6 53 2 176 1 369 6 179 2 250 1 120 2 373 1 11 1 222 1 92 1 376 1 62 2 304 2 227 12 256 1 332 1 127 1 160 1 284 2 74 1 209 1 360 2 23 1 
137 2 52 8 53 8 176 4 369 10 179 2 250 4 201 1 373 1 120 2 375 1 222 1 11 1 92 1 376 1 62 5 254 1 304 1 227 18 157 2 256 4 332 1 127 3 160 4 284 2 72 1 74 1 209 1 360 3 47 1 23 1 172 1 339 1 
137 3 52 7 53 8 176 4 84 1 369 9 179 3 250 4 373 1 120 3 222 1 11 1 92 1 376 1 62 6 304 2 227 16 157 2 256 4 332 1 127 3 160 4 284 2 74 1 209 1 360 3 23 1 
137 3 52 4 127 3 284 1 369 3 72 1 360 1 201 1 172 2 339 3 62 6 254 3 227 7 
137 1 52 8 53 8 176 4 84 1 369 10 179 2 250 4 201 1 373 1 120 2 222 1 11 1 92 1 376 1 62 4 254 1 304 1 227 18 157 2 256 4 332 1 127 3 160 4 284 2 72 1 74 1 209 1 360 3 47 1 23 1 172 1 339 1 
82 1 150 1 34 1 60 1 27 1 97 1 263 1 
42 1 82 1 27 1 333 1 314 1 150 1 34 1 60 1 97 1 10 1 263 1 295 1 
220 1 99 1 31 1 107 1 380 1 279 1 307 1 299 1 309 1 379 1 108 1 
99 1 82 1 299 1 309 1 300 1 335 1 379 1 18 1 20 1 220 1 31 1 150 1 380 1 34 2 152 1 263 2 61 1 108 1 
99 1 82 2 299 1 300 1 220 1 31 1 150 1 34 2 152 2 329 1 61 1 108 1 311 1 357 1 335 2 18 1 379 2 73 1 20 1 110 1 288 1 380 3 263 2 
99 1 82 2 299 2 300 1 220 1 31 2 150 1 34 2 152 2 329 1 61 1 108 2 258 1 311 1 357 1 335 2 18 1 379 2 73 1 110 1 288 1 380 3 263 2 49 1 
51 2 99 1 299 3 269 1 89 1 220 1 118 1 324 2 31 3 329 1 108 3 126 1 68 1 309 1 357 1 335 1 379 1 110 1 134 1 380 4 49 1 317 1 136 1 
51 2 99 1 126 1 299 3 309 1 269 1 357 1 335 1 379 1 110 1 118 1 220 1 324 2 96 1 31 3 134 1 380 4 329 1 49 1 317 1 136 1 108 3 
220 1 99 1 31 1 299 1 108 1 63 1 
99 3 299 6 309 2 368 1 334 1 335 1 17 1 379 2 370 1 220 2 77 1 181 1 31 7 211 1 380 3 114 1 173 1 63 1 341 1 108 7 122 1 
242 1 99 1 52 3 343 1 53 4 246 1 299 1 300 1 250 2 58 1 150 2 201 1 152 1 61 1 62 2 254 1 108 1 256 2 64 1 13 1 160 2 162 2 72 1 18 1 20 1 360 1 263 2 172 1 82 1 176 2 367 1 320 1 369 3 178 2 370 1 220 1 31 1 34 2 38 1 227 6 127 2 284 1 335 1 379 1 380 1 47 1 339 1 
51 3 299 1 269 1 268 1 2 2 118 1 199 1 324 3 276 1 31 1 325 1 303 1 108 1 126 1 309 1 189 1 131 2 286 2 133 1 76 1 96 1 134 1 380 2 361 1 363 2 317 1 213 1 136 2 
99 2 126 1 299 2 335 1 379 1 370 1 220 1 31 2 380 2 294 1 173 1 63 1 108 2 
220 1 99 1 31 4 107 1 380 1 279 1 299 4 309 1 9 1 49 1 379 1 370 1 108 4 
99 2 187 1 299 2 345 1 357 1 335 1 379 1 233 1 220 1 181 1 31 2 211 1 380 1 108 2 
220 1 138 1 99 1 31 1 236 1 149 1 299 1 309 1 229 1 108 1 
99 1 299 2 17 1 379 1 370 1 220 1 31 2 77 1 112 1 380 1 108 2 
99 2 299 4 309 1 357 1 334 1 379 2 370 1 220 2 31 5 77 1 107 1 279 1 380 3 9 1 114 1 108 5 
99 2 299 4 309 1 357 1 379 2 370 1 220 2 31 5 77 1 107 1 279 1 380 3 9 1 114 1 224 1 108 5 
99 1 258 1 82 1 299 1 309 1 300 1 335 1 379 1 18 1 220 1 31 1 150 1 380 1 34 2 152 1 263 2 61 1 108 1 
99 2 299 1 357 1 335 1 379 1 220 1 181 1 31 1 211 1 380 1 173 1 108 1 122 1 
82 1 278 1 34 1 261 1 231 1 263 1 153 1 104 1 147 1 
350 1 156 1 147 1 
344 1 150 1 231 1 104 1 147 1 
51 2 344 2 269 1 311 1 14 1 71 1 231 2 104 2 73 1 147 1 133 1 324 2 288 1 134 1 150 1 350 1 21 1 317 1 156 1 
307 1 43 1 50 1 90 1 
129 1 182 1 43 1 285 1 50 1 347 1 90 1 
105 1 129 1 223 1 
129 3 43 1 130 1 285 1 347 3 90 1 167 1 148 1 182 1 80 2 212 1 50 1 
46 1 129 2 182 1 43 1 81 1 285 1 50 1 347 2 90 1 
129 1 308 1 229 1 43 1 285 1 347 1 167 1 168 1 182 1 149 1 12 1 
167 1 129 1 182 1 43 1 285 1 50 1 347 1 
167 1 129 1 182 1 285 1 50 2 347 1 90 1 
139 1 129 2 43 1 285 2 347 2 273 1 167 1 289 1 182 2 50 1 
140 1 244 1 219 1 129 3 308 1 43 2 285 1 347 3 90 1 167 1 46 2 182 1 50 1 
185 1 129 2 229 2 43 1 285 1 347 2 90 1 167 1 168 1 236 1 46 1 182 1 149 1 292 1 50 1 
219 1 129 4 308 1 85 1 43 2 285 2 347 4 90 1 167 1 46 2 182 2 81 1 50 1 
167 1 129 1 182 1 43 1 285 1 50 1 347 1 90 1 
219 1 129 4 308 1 145 1 130 1 43 3 285 1 347 4 90 2 148 1 46 2 182 1 80 1 50 2 
125 1 101 1 129 2 43 1 285 1 347 2 90 1 167 1 46 1 182 1 195 1 50 1 
129 3 130 1 43 1 285 1 347 3 55 1 90 1 167 1 148 2 182 1 80 2 50 1 
67 1 135 2 43 2 208 1 
167 1 354 1 129 1 182 1 285 1 347 1 
167 1 244 1 46 1 129 2 182 1 43 1 285 1 50 1 347 2 90 1 
232 1 
167 1 129 1 182 1 43 1 285 1 50 1 347 1 90 1 
167 1 244 1 46 1 129 3 182 1 43 1 80 1 285 1 50 1 347 3 90 1 
219 1 308 1 145 1 43 1 
43 1 50 1 

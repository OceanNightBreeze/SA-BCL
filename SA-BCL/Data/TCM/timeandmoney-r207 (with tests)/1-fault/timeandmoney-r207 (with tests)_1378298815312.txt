#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 105 (307,353) (307,353) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 105 (307,353) (307,353) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 105 (307,353) (307,353) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 105 (307,353) (307,353) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 105 (51,365) (51,365) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (42,122,245,323) (42,122,245,323) (42,122,245,323) 215 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (42,122,245,323) (42,122,245,323) (42,122,245,323) 215 36 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (42,122,245,323) (42,122,245,323) (42,122,245,323) 215 36 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (42,122,245,323) (42,122,245,323) (102,312,338) (102,312,338) (102,312,338) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (42,122,245,323) (42,122,245,323) (102,312,338) (102,312,338) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (42,122,245,323) (42,122,245,323) (102,312,338) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (23,214) (23,214) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
245 1 96 1 122 1 142 1 105 1 353 1 307 1 42 1 14 1 
245 1 96 1 122 1 142 1 105 1 353 1 307 1 42 1 14 1 
245 1 96 1 122 1 142 1 105 1 353 1 307 1 42 1 14 1 
245 1 96 1 122 1 142 1 105 1 353 1 307 1 42 1 14 1 
245 1 295 2 250 1 323 3 14 1 42 4 273 2 133 1 122 1 96 4 342 1 368 1 200 1 327 1 230 1 370 1 371 3 163 1 
51 1 245 1 365 1 96 1 122 1 142 1 342 1 260 1 105 1 42 1 14 1 
245 2 215 1 96 1 122 2 142 1 42 2 14 1 
245 2 215 1 96 2 122 2 142 1 257 1 323 1 36 1 42 3 14 1 
245 2 215 1 96 2 122 2 142 1 257 1 323 1 36 1 42 3 14 1 
320 1 217 1 341 1 
156 1 320 1 146 2 
265 2 288 2 174 2 340 2 114 2 261 1 363 1 339 2 
294 1 22 1 265 3 0 1 2 1 174 3 340 2 128 1 154 2 363 1 228 1 136 1 203 1 304 2 369 1 229 2 161 2 205 1 346 1 232 1 308 1 140 1 375 1 12 1 114 2 352 1 288 2 334 1 45 1 189 2 46 1 261 1 169 1 291 1 49 1 339 2 356 1 
94 1 149 1 265 1 288 1 174 1 340 1 114 1 300 1 363 1 339 1 
317 1 151 1 265 1 320 1 62 1 174 1 248 1 377 1 249 1 143 1 341 1 94 1 204 1 339 1 
317 2 265 1 320 1 62 1 340 1 174 1 114 1 249 2 377 1 143 1 341 1 94 1 288 1 204 1 339 1 
317 1 144 1 315 1 249 1 89 1 
317 2 320 1 329 1 315 1 69 1 249 2 341 1 89 1 
317 1 249 1 89 1 
149 1 317 1 265 1 340 1 174 1 114 1 249 1 300 1 363 1 94 1 82 1 288 1 315 1 339 1 
320 1 
317 2 320 1 329 1 315 1 249 2 341 1 104 1 89 1 
50 1 99 1 317 5 320 1 297 2 329 1 247 1 283 1 284 1 249 5 341 1 15 1 227 2 93 1 276 2 31 1 315 2 147 1 89 2 
217 1 261 1 
265 2 174 2 340 1 114 1 81 1 288 1 261 2 124 1 339 2 
289 1 33 1 116 1 
308 1 375 1 265 1 319 1 0 1 174 1 228 1 189 1 136 1 203 1 229 1 161 1 261 1 169 1 346 1 232 1 
308 1 375 1 265 2 0 1 340 1 174 2 228 1 288 1 289 1 56 1 203 1 136 1 189 1 229 1 161 1 169 1 305 1 346 1 232 1 339 1 
265 3 288 3 56 1 174 3 340 3 114 1 261 1 339 3 
94 1 149 1 265 1 288 1 174 1 340 1 339 1 
94 1 265 1 288 1 174 1 340 1 114 1 124 1 81 1 339 1 
317 1 22 1 150 1 265 4 0 1 2 1 174 4 340 3 128 1 154 2 269 1 249 1 81 1 363 1 228 1 56 1 203 1 136 1 304 1 369 1 229 1 161 1 204 1 305 1 346 1 232 1 308 1 140 1 375 1 62 1 114 2 377 1 143 1 352 1 94 1 288 3 334 1 45 1 189 1 261 1 169 1 291 1 49 1 339 3 
234 1 265 2 288 1 56 1 174 2 340 1 248 1 261 1 339 2 
317 1 150 1 265 3 320 1 62 1 340 3 174 3 114 1 249 1 377 1 143 1 81 1 94 1 288 3 56 2 204 1 253 1 305 1 339 3 
265 2 340 2 174 2 114 1 81 1 116 1 288 2 56 1 289 1 339 2 
308 1 375 1 265 1 0 1 174 1 228 1 189 1 136 1 203 1 229 1 161 1 261 1 169 1 232 1 346 1 
265 1 0 1 174 1 28 1 228 1 57 1 189 1 136 1 203 1 229 1 161 1 261 1 169 1 232 1 346 1 
22 2 267 1 2 1 76 1 154 2 80 1 33 2 369 1 304 4 254 1 140 1 374 1 113 1 12 2 116 2 289 2 314 1 334 1 354 1 71 1 243 1 290 1 291 1 49 1 
94 1 265 1 288 1 174 1 340 1 204 1 64 1 339 1 
234 1 265 5 340 4 174 5 53 1 248 1 114 1 81 1 27 1 288 4 56 2 261 1 305 1 339 5 
94 1 149 1 265 2 288 2 174 2 340 2 64 1 339 2 
112 1 145 1 
112 1 145 1 
333 1 193 1 
333 1 193 1 
333 1 193 1 
112 1 145 1 108 1 
112 1 145 1 108 1 
255 1 112 1 145 1 
333 1 266 1 112 2 145 2 88 1 193 1 
112 1 145 1 108 1 
29 1 112 1 145 1 
29 1 112 1 145 1 
29 1 112 1 145 1 
209 1 317 2 112 2 320 1 195 1 175 1 237 1 197 2 249 2 258 2 43 2 157 2 145 2 32 1 201 3 148 2 206 1 88 1 379 1 
317 1 318 1 265 2 224 1 340 2 174 2 197 1 249 1 55 1 157 1 201 1 135 1 34 1 110 1 209 1 255 1 112 1 61 1 258 1 288 2 145 1 261 1 148 1 339 2 
342 1 250 1 163 1 
342 1 260 1 163 1 
84 1 342 3 103 1 260 1 250 2 190 1 
95 1 342 2 103 1 260 1 250 1 190 1 
342 2 103 2 260 1 250 1 190 1 
50 3 317 5 318 1 267 1 297 1 320 2 224 1 194 2 298 2 77 1 249 5 341 1 227 1 156 1 276 1 31 2 179 1 277 1 34 1 182 1 254 1 89 1 329 1 283 1 259 1 287 1 314 1 146 3 315 4 290 1 220 2 293 1 
50 8 317 9 318 4 267 3 320 5 297 2 247 1 194 6 361 5 298 6 249 9 271 1 341 1 227 2 156 3 276 2 31 6 159 1 277 3 280 1 182 2 254 3 89 6 328 1 329 1 283 1 92 1 117 1 144 5 287 1 314 3 146 9 315 7 290 3 293 2 
50 3 317 3 318 1 320 3 297 1 267 1 247 1 194 2 77 1 298 2 249 3 341 1 227 1 156 2 276 1 31 2 179 1 277 1 182 1 254 1 314 1 315 2 146 4 290 1 220 1 293 1 
50 5 317 4 318 2 320 4 297 1 267 2 194 4 247 1 298 4 77 1 249 4 341 1 227 1 156 3 276 1 31 4 179 1 277 2 280 1 182 1 254 2 92 1 117 1 314 2 146 7 315 3 290 2 220 2 293 1 
348 1 217 1 346 1 
106 1 346 1 
8 1 
0 1 346 1 
74 1 0 1 348 2 177 1 169 1 346 3 
0 1 169 1 346 1 
152 1 346 1 
185 1 22 3 374 3 186 1 267 1 113 2 101 1 12 4 65 2 344 1 304 7 281 1 180 1 18 1 19 1 254 1 222 1 
185 1 22 3 374 3 186 1 267 1 113 2 101 1 12 4 65 2 344 1 304 7 281 1 180 1 18 1 19 1 254 1 222 1 
185 1 22 3 374 3 186 1 267 1 113 2 101 1 12 4 65 2 107 1 344 1 304 7 281 1 180 1 18 1 19 1 254 1 222 1 
22 15 267 4 101 2 2 1 154 2 322 1 325 1 367 1 160 1 344 2 277 3 369 1 304 31 345 1 180 2 281 5 254 4 185 1 235 1 374 10 186 1 376 4 113 5 40 3 12 16 65 3 314 3 316 1 290 3 18 1 291 1 19 2 49 1 222 1 
185 1 374 4 22 4 186 1 267 1 101 1 113 3 173 1 2 2 12 5 154 4 26 1 65 2 367 1 344 1 304 9 369 2 281 1 180 1 18 1 291 2 19 1 49 2 254 1 
73 1 245 1 102 1 250 1 323 1 228 1 275 1 342 2 84 1 136 1 161 1 229 1 162 1 163 1 236 1 142 1 312 1 42 2 14 1 313 1 96 1 122 1 189 1 70 1 260 1 338 1 192 1 
73 1 245 1 250 1 323 2 228 1 275 1 84 1 342 2 136 1 161 1 229 1 279 1 162 1 163 1 236 1 256 1 142 1 312 1 42 3 96 2 122 1 189 1 70 1 260 1 123 1 338 1 192 1 
73 1 236 1 256 1 142 1 250 1 312 1 323 2 42 2 228 1 275 1 96 1 84 1 342 2 136 1 189 1 229 1 161 1 260 1 162 1 123 1 163 1 192 1 
245 1 0 1 23 1 228 1 136 1 161 1 229 1 279 1 162 2 232 1 346 1 236 2 90 1 142 2 141 1 310 1 350 1 42 1 214 1 96 1 122 1 189 1 192 2 
73 1 245 1 102 1 250 1 228 1 275 1 342 2 84 1 136 1 161 1 229 1 162 1 163 1 236 1 142 1 312 1 42 1 14 1 96 1 122 1 189 1 70 1 260 1 123 1 338 1 192 1 
20 1 
50 2 151 1 0 1 297 1 1 1 248 1 249 5 341 1 156 2 161 2 204 1 109 1 346 1 207 2 306 1 60 2 309 2 211 1 164 1 62 1 310 1 212 2 166 1 216 1 219 2 17 1 355 1 317 5 265 1 320 2 174 1 227 1 228 1 276 1 31 2 136 1 229 2 183 1 232 2 282 2 89 6 372 4 90 1 329 3 330 1 283 1 377 1 143 1 41 2 285 1 94 1 146 2 189 2 293 1 339 1 
317 3 151 1 265 1 1 1 174 1 248 1 249 3 104 1 204 1 109 1 89 2 372 2 62 1 329 1 330 1 377 1 143 1 285 1 94 1 17 1 219 1 339 1 
317 3 151 1 265 1 1 1 320 1 174 1 248 1 249 3 341 1 104 1 204 1 109 1 89 1 372 3 62 1 329 1 330 1 377 1 143 1 212 1 285 1 94 1 17 1 339 1 
317 3 151 1 265 1 1 1 320 1 174 1 248 1 249 3 341 1 104 1 204 1 109 1 89 2 372 3 309 1 62 1 329 1 330 1 377 1 143 1 212 1 285 1 94 1 17 1 219 1 339 1 
50 1 151 1 1 1 297 1 248 1 249 5 341 5 104 1 156 2 204 1 109 1 306 1 207 2 60 2 309 4 62 1 212 4 213 1 219 4 168 1 17 1 317 5 265 1 320 5 174 1 127 1 227 1 131 1 276 1 31 1 326 1 183 1 89 7 282 2 372 6 329 3 330 1 283 1 377 1 143 1 41 2 285 1 94 1 339 1 
50 1 151 1 297 1 1 1 248 1 249 4 341 1 156 2 204 1 109 1 306 1 207 2 60 2 309 2 211 1 62 1 212 2 17 1 219 2 317 4 265 1 320 2 174 1 227 1 276 1 31 1 183 1 282 2 89 4 372 4 329 2 330 1 283 1 377 1 143 1 41 2 285 1 94 1 146 2 339 1 
50 1 317 4 151 1 265 1 320 1 1 1 297 1 174 1 127 1 248 1 249 4 341 1 227 1 131 1 156 2 276 1 31 1 204 1 109 1 183 1 207 2 306 1 89 4 282 2 60 2 372 4 309 2 62 1 329 2 330 1 283 1 377 1 212 2 143 1 213 1 41 2 285 1 94 1 219 2 17 1 339 1 
50 1 317 4 151 1 265 1 320 1 1 1 297 1 174 1 127 1 248 1 249 4 341 1 227 1 131 1 156 2 276 1 31 1 204 1 109 1 183 1 207 2 306 1 89 4 282 2 60 2 372 4 309 2 62 1 329 2 330 1 283 1 377 1 212 2 143 1 213 1 41 2 285 1 94 1 219 2 17 1 339 1 
50 1 317 4 151 1 265 1 320 1 1 1 297 1 174 1 127 1 248 1 78 1 249 4 341 1 25 1 227 1 276 1 31 1 204 1 109 1 183 1 89 4 282 2 60 2 372 4 309 2 111 2 347 1 62 1 329 2 330 1 283 1 377 1 212 2 143 1 285 1 94 1 68 2 146 2 219 2 17 1 339 1 
50 1 317 4 151 1 265 1 320 1 297 1 1 1 174 1 127 1 248 1 249 4 341 1 227 1 131 1 156 2 276 1 31 1 326 1 204 1 109 1 183 1 207 2 306 1 282 2 89 5 60 2 372 5 309 3 62 1 329 2 330 1 283 1 377 1 143 1 212 3 213 1 41 2 285 1 94 1 17 1 219 3 339 1 
50 1 317 4 151 1 265 1 320 1 297 1 1 1 174 1 127 1 248 1 249 4 341 1 227 1 131 1 156 2 276 1 31 1 326 1 204 1 109 1 183 1 207 2 306 1 282 2 89 5 60 2 372 5 309 3 62 1 329 2 330 1 283 1 377 1 143 1 212 3 213 1 41 2 285 1 94 1 17 1 219 3 339 1 
50 1 317 4 151 1 265 1 320 1 1 1 297 1 174 1 248 1 249 4 341 1 25 1 227 1 276 1 31 1 204 1 109 1 183 1 89 4 282 2 60 2 372 4 309 2 111 2 211 1 62 1 329 2 330 1 283 1 377 1 212 2 143 1 285 1 94 1 68 2 146 2 219 2 17 1 339 1 
185 1 22 3 374 2 140 1 186 1 267 1 113 2 101 1 2 1 12 3 154 2 80 1 116 1 65 1 289 1 334 1 33 1 304 6 369 1 217 1 261 2 291 1 18 1 49 1 19 1 254 1 
294 1 22 6 360 1 267 2 2 2 128 1 154 4 366 1 343 1 33 11 277 2 369 2 304 14 281 1 254 1 235 1 374 2 140 2 376 3 113 1 40 3 12 8 240 1 116 4 289 11 334 1 314 1 218 1 261 1 316 1 290 2 291 2 49 2 
294 1 22 1 319 1 360 1 265 2 0 1 2 1 174 2 340 1 154 2 128 1 362 1 228 1 56 1 203 1 136 1 161 1 229 1 369 1 304 2 305 1 86 1 346 1 232 1 308 1 375 1 140 1 12 1 116 1 288 1 334 1 189 1 336 1 261 1 169 1 291 1 49 1 339 1 
294 1 0 2 101 1 2 3 340 1 154 6 5 2 158 2 56 1 203 2 161 3 304 20 305 1 346 2 254 3 308 2 113 4 12 10 116 7 352 2 65 1 119 1 66 1 314 2 261 2 262 2 123 1 169 2 18 1 19 1 22 10 265 3 360 1 267 3 174 3 128 1 226 2 228 2 136 2 33 7 277 2 229 3 369 3 281 4 181 1 232 1 185 1 140 3 375 2 374 8 186 1 288 1 289 7 334 3 189 3 290 2 291 3 49 3 339 1 
294 1 22 1 265 1 0 2 2 2 174 1 340 1 52 1 154 4 128 1 80 1 178 1 228 2 56 1 303 1 136 2 161 8 229 7 369 2 304 2 59 1 205 2 346 3 232 2 233 1 140 2 90 1 91 1 310 1 12 1 349 1 313 1 288 1 334 2 189 8 123 1 291 2 49 2 339 1 
22 2 360 1 265 1 267 1 2 1 340 1 174 1 154 2 81 1 33 1 277 1 369 1 304 3 254 1 37 1 374 1 140 1 113 1 114 1 12 1 116 1 288 1 289 1 334 1 314 1 290 1 291 1 49 1 339 1 
374 1 140 1 267 1 2 1 154 2 12 2 80 1 116 1 289 1 334 1 33 1 304 2 369 1 71 1 281 1 290 1 291 1 49 1 
374 1 140 1 22 2 113 1 2 1 154 2 80 1 116 1 289 1 334 1 314 1 33 1 354 1 304 2 369 1 291 1 49 1 254 1 
22 2 267 1 2 1 154 2 80 1 277 1 33 2 369 1 304 4 281 1 254 1 140 1 374 2 113 1 12 2 116 2 289 2 334 1 314 1 290 1 291 1 49 1 
374 1 140 1 267 1 2 1 154 2 12 2 116 1 289 1 303 1 334 1 33 1 304 2 369 1 71 1 281 1 290 1 291 1 49 1 
374 1 140 1 22 2 113 1 2 1 154 2 116 1 289 1 303 1 334 1 314 1 33 1 354 1 304 2 369 1 291 1 49 1 254 1 
22 2 267 1 2 1 154 2 303 1 277 1 33 2 369 1 304 4 281 1 254 1 140 1 374 2 113 1 12 2 116 2 289 2 334 1 314 1 290 1 291 1 49 1 
22 2 374 2 140 1 267 1 113 1 2 1 154 2 12 2 116 2 289 2 314 1 334 1 33 2 277 1 369 1 304 4 281 1 290 1 291 1 49 1 254 1 
294 1 22 1 265 1 0 1 2 1 174 1 154 2 128 1 228 1 203 1 136 1 304 2 161 1 229 1 369 1 232 1 346 1 308 1 375 1 140 1 12 1 352 1 334 1 189 1 261 1 169 1 291 1 49 1 
294 1 22 1 265 1 0 1 2 1 174 1 154 2 128 1 28 1 228 1 57 1 203 1 136 1 304 2 161 1 229 1 369 1 232 1 346 1 140 1 12 1 334 1 378 1 189 1 261 1 169 1 291 1 49 1 
22 2 360 1 267 1 2 1 154 2 277 1 33 2 369 1 304 4 281 1 254 1 140 1 374 2 113 1 12 2 116 2 289 2 334 1 314 1 290 1 291 1 49 1 
22 2 265 1 267 1 0 1 2 1 174 1 154 2 226 1 228 1 33 2 203 1 136 1 277 1 304 4 161 1 229 1 369 1 281 1 346 1 254 1 308 1 374 2 375 1 140 1 113 1 12 2 116 2 352 1 313 1 289 2 314 1 334 1 189 1 290 1 169 1 291 1 49 1 
22 1 360 1 265 1 267 1 2 1 340 1 174 1 154 2 81 1 155 1 277 1 33 1 369 1 304 3 281 1 254 1 374 1 140 1 114 1 12 2 116 1 288 1 289 1 314 1 334 1 290 1 291 1 49 1 339 1 
98 1 22 21 268 4 267 5 101 1 2 3 173 1 4 1 176 1 154 6 129 1 367 1 277 4 137 1 369 3 304 41 252 1 281 4 254 5 373 1 185 1 235 3 374 8 39 1 186 1 376 4 113 4 40 3 12 20 239 1 13 1 65 1 120 1 314 4 188 1 316 1 290 4 18 1 291 3 19 1 49 3 244 1 263 2 
98 1 22 18 268 4 267 5 101 1 2 4 173 1 4 1 176 1 154 8 129 1 367 2 277 4 137 1 369 4 304 38 252 1 281 3 254 4 373 1 185 1 235 3 374 7 39 1 186 1 376 4 113 4 40 3 12 20 239 1 13 1 65 1 120 1 314 3 188 1 316 1 290 4 18 1 291 4 19 1 49 4 244 1 263 2 
98 1 22 25 268 4 267 8 101 1 2 2 173 1 4 1 176 1 154 4 367 1 277 7 137 1 369 2 304 52 252 1 281 7 254 8 373 1 185 1 235 2 374 14 186 1 376 4 113 7 40 4 12 27 239 1 13 1 240 2 65 1 120 1 314 7 188 1 316 2 290 7 18 1 291 2 19 1 49 2 244 1 263 1 
98 1 22 10 268 2 267 3 2 2 173 1 153 1 154 4 129 1 277 3 137 1 369 2 304 19 252 1 281 3 254 3 373 2 235 1 374 6 376 2 113 3 40 1 12 9 120 1 314 3 316 1 290 3 291 2 49 2 263 1 
98 1 22 12 268 4 267 3 2 3 173 1 4 1 176 1 154 6 367 2 277 3 137 2 369 3 304 26 252 1 281 2 254 2 373 1 374 4 235 2 376 2 113 2 40 2 12 14 13 1 239 1 120 1 314 2 188 1 290 3 291 3 49 3 263 2 244 1 
357 1 112 1 157 1 145 1 237 1 197 1 258 1 148 1 206 1 88 1 
255 1 135 1 
138 1 112 1 157 1 145 1 197 1 165 1 231 1 258 1 148 1 
209 1 317 1 112 1 320 1 195 1 175 1 237 1 197 1 249 1 258 1 43 1 157 1 145 1 201 2 148 1 206 1 88 1 379 1 
209 1 317 1 112 1 320 1 195 1 175 1 237 1 197 1 249 1 258 1 43 1 157 1 145 1 201 2 148 1 206 1 88 1 379 1 
209 1 317 1 112 1 320 1 195 1 175 1 237 1 197 1 249 1 258 1 43 1 157 1 145 1 201 2 148 1 206 1 88 1 379 1 
266 1 246 1 108 1 
266 1 246 1 108 1 
29 1 132 1 
29 1 132 1 266 1 
61 1 110 1 
317 1 318 1 265 2 224 1 174 2 340 2 197 1 249 1 272 1 55 1 157 1 201 1 135 1 34 1 110 1 255 1 112 1 61 1 258 1 43 1 288 2 145 1 315 1 261 1 148 1 379 1 339 2 
246 1 108 1 
29 1 132 1 266 1 
294 1 22 1 360 1 265 2 0 1 2 1 174 2 154 2 128 1 299 1 130 1 228 1 178 1 83 1 136 1 161 2 369 1 304 2 229 2 205 2 346 1 233 1 140 1 12 1 16 1 334 1 189 2 291 1 49 1 339 2 125 1 
73 1 359 1 236 1 250 1 228 1 313 1 275 1 84 1 342 2 136 1 189 2 10 1 229 2 161 2 70 1 260 1 123 1 87 1 163 1 
73 1 359 1 236 1 250 1 228 1 275 1 84 1 342 2 189 1 136 1 229 1 161 1 335 1 70 1 260 1 123 1 163 1 
236 1 0 1 90 1 141 1 310 1 228 1 136 1 189 1 10 1 229 1 161 1 278 1 346 1 232 1 
73 1 359 1 236 1 250 1 228 1 275 1 84 1 342 2 136 1 189 1 10 1 229 1 161 1 70 1 260 1 123 1 87 1 163 1 
54 1 
50 1 99 1 320 1 31 1 217 1 341 1 15 1 
50 1 317 1 297 1 320 2 249 1 341 1 227 1 156 1 276 1 31 1 306 1 207 1 89 1 329 1 283 1 41 1 146 1 
50 9 99 1 0 3 297 4 152 2 194 6 298 6 249 5 341 2 106 3 9 1 156 6 161 3 58 1 346 10 254 2 210 1 62 2 348 2 15 1 313 1 314 2 262 2 169 3 355 1 172 1 358 2 74 1 317 5 264 2 320 8 267 2 270 2 24 2 227 4 228 3 276 4 31 8 136 4 277 2 229 3 232 1 89 5 38 2 329 3 283 4 332 2 241 1 242 2 146 12 189 3 290 2 293 2 191 2 
50 8 317 1 297 2 320 5 267 2 194 5 4 1 176 1 298 5 249 1 24 2 341 2 227 2 156 3 276 2 31 5 277 2 89 1 254 2 235 1 376 1 329 1 40 1 283 2 13 1 239 1 351 1 146 6 314 2 167 1 290 2 355 1 293 1 191 1 244 1 
50 2 149 1 317 1 126 1 265 1 297 1 267 2 101 1 174 1 340 1 249 1 300 1 24 2 363 1 227 1 131 1 276 1 82 1 31 2 254 1 185 1 283 1 114 1 94 1 288 1 191 1 19 1 339 1 
50 1 99 1 297 1 320 1 283 1 341 1 227 1 15 1 276 1 31 1 
50 5 156 5 320 5 31 5 267 2 314 2 146 10 194 5 298 5 277 2 262 1 290 2 24 2 191 1 254 2 
317 1 320 1 329 1 249 1 341 1 89 1 
50 2 172 2 317 3 0 1 297 2 247 1 249 3 227 2 228 1 276 2 31 2 202 1 136 1 85 1 161 4 229 4 58 1 346 1 232 2 89 4 164 1 90 1 329 2 310 1 283 1 166 1 189 4 293 2 355 2 
22 1 265 3 0 1 2 1 174 3 340 2 128 1 154 2 363 1 228 1 136 1 203 1 304 1 369 1 161 1 229 1 232 1 346 1 308 1 375 1 140 1 114 2 352 1 288 2 334 1 189 1 45 1 261 1 169 1 291 1 49 1 339 2 
50 1 297 1 320 4 194 2 298 2 283 1 341 2 227 1 65 1 156 2 276 1 31 2 146 4 293 1 355 1 
274 1 157 1 148 1 
274 1 157 1 148 1 
61 1 157 1 237 1 170 1 148 1 
274 1 157 1 148 1 
157 1 238 1 148 1 
157 1 238 1 148 1 
157 1 238 1 148 1 
157 1 148 1 
112 1 145 1 
22 4 267 1 2 1 173 1 101 1 154 2 304 8 369 1 254 1 185 1 235 1 374 2 186 1 376 1 113 2 40 1 12 4 65 1 291 1 18 1 49 1 19 1 244 1 
22 5 267 2 101 1 173 1 2 2 154 4 277 1 304 11 369 2 281 1 254 1 185 1 235 1 374 3 186 1 376 2 113 2 40 1 12 6 65 1 316 1 290 1 18 1 291 2 19 1 49 2 244 1 21 1 
22 10 267 3 101 1 2 3 173 1 4 1 176 1 154 6 367 1 277 2 304 19 369 3 281 1 254 3 185 1 235 1 374 4 186 1 376 1 113 3 40 1 12 9 13 1 239 1 65 1 314 2 290 2 18 1 291 3 19 1 49 3 21 1 244 1 
22 7 267 3 101 1 2 3 173 1 176 1 4 1 154 6 367 1 277 2 304 17 369 3 281 2 254 2 185 1 235 1 374 5 186 1 376 1 113 3 40 1 12 10 13 1 239 1 65 1 314 1 290 2 18 1 291 3 19 1 49 3 21 1 244 1 
22 4 267 1 2 1 173 1 101 1 154 2 304 8 369 1 254 1 185 1 235 1 374 2 186 1 376 1 113 2 40 1 12 4 65 1 291 1 18 1 49 1 19 1 244 1 
22 6 267 2 2 1 173 1 176 1 4 1 154 2 277 2 304 12 369 1 281 1 254 2 235 1 374 2 376 1 113 1 40 1 12 6 13 1 239 1 314 2 290 2 291 1 49 1 244 1 
22 8 267 3 101 1 2 4 173 1 4 1 176 1 154 8 367 2 277 2 304 18 369 4 281 2 254 2 185 1 235 1 374 5 186 1 376 1 113 3 40 1 12 10 13 1 239 1 65 1 314 1 290 2 18 1 291 4 19 1 49 4 244 1 21 1 
22 7 267 3 173 1 2 4 4 1 176 1 154 8 129 1 367 2 277 3 304 16 369 4 281 3 254 2 235 1 374 6 376 1 113 3 40 1 12 9 13 1 239 1 314 2 290 3 291 4 49 4 244 1 
185 1 22 4 374 6 186 2 267 1 101 3 113 3 12 3 304 7 281 3 18 1 19 3 254 1 
22 8 267 3 101 1 173 1 2 4 4 1 176 1 154 8 129 1 367 2 277 2 304 18 369 4 281 1 254 2 185 1 235 1 374 4 186 1 376 1 113 3 40 1 12 10 13 1 239 1 65 1 314 1 290 2 18 1 291 4 19 1 49 4 244 1 
185 1 22 4 374 3 186 1 267 1 113 2 2 2 101 1 12 4 154 4 65 1 367 1 304 8 369 2 281 1 291 2 18 1 49 2 19 1 254 1 
185 1 22 3 374 2 186 1 267 1 101 1 113 2 12 3 65 1 217 1 304 6 18 1 19 1 254 1 
22 2 374 2 267 1 113 1 2 1 154 2 12 2 314 1 277 1 369 1 304 4 290 1 281 1 291 1 49 1 254 1 21 1 
235 1 22 4 374 2 376 2 267 1 113 1 40 1 12 3 314 1 277 1 304 7 316 1 290 1 281 1 254 1 
22 12 296 1 267 3 101 2 2 2 154 4 367 2 277 2 304 23 369 2 281 4 254 3 185 1 374 9 186 1 376 2 113 5 40 2 12 11 240 1 65 1 314 2 218 1 316 1 290 2 18 1 291 2 19 2 49 2 
22 1 376 1 304 1 
40 1 304 1 12 1 
22 3 374 3 267 1 2 1 113 2 154 2 12 3 314 1 277 1 369 1 304 6 262 1 290 1 281 1 291 1 49 1 21 1 254 1 
22 6 267 2 2 1 173 1 176 1 4 1 154 2 277 2 304 12 369 1 281 1 254 2 235 1 374 2 376 1 113 1 40 1 12 6 13 1 239 1 314 2 290 2 291 1 49 1 244 1 
185 1 22 3 374 2 267 1 101 1 113 1 12 3 304 6 281 1 19 1 254 1 
374 2 296 1 22 2 186 1 113 1 101 1 2 1 12 1 154 2 367 1 304 3 369 1 281 1 291 1 18 1 19 1 49 1 
185 1 126 1 374 5 22 5 267 2 2 1 173 1 101 2 113 3 154 2 12 5 369 1 304 10 281 2 291 1 49 1 19 2 254 2 
374 1 267 1 173 1 2 1 154 2 12 2 369 1 304 2 290 1 281 1 291 1 49 1 
22 2 374 2 267 1 113 1 173 1 2 1 154 2 12 2 314 1 277 1 369 1 304 4 290 1 281 1 291 1 49 1 254 1 
296 1 22 2 374 2 173 1 2 3 101 1 113 1 154 6 12 1 129 1 367 1 304 3 369 3 281 1 291 3 49 3 19 1 
296 1 22 18 267 5 101 3 2 5 173 1 154 10 129 1 322 1 367 2 160 1 277 3 345 1 369 5 304 34 281 5 254 5 185 2 235 1 374 12 186 1 376 4 113 7 40 3 12 16 65 1 314 3 316 1 290 3 18 1 291 5 19 3 49 5 21 1 
234 1 265 1 174 1 196 1 248 1 261 1 339 1 
234 1 100 1 265 1 187 1 174 1 196 1 248 1 286 1 261 1 47 1 292 1 339 1 
228 1 0 1 90 1 310 1 136 1 189 1 217 1 161 1 229 1 346 1 232 1 
308 1 265 2 0 1 340 1 174 2 228 1 288 1 56 1 203 1 136 1 189 1 229 1 161 1 261 1 169 1 346 1 232 1 339 1 
308 1 172 1 264 1 265 2 0 2 152 1 340 2 174 2 377 1 94 1 228 1 288 1 56 1 203 1 136 1 189 1 229 1 161 1 204 1 261 1 169 2 346 3 339 2 
172 1 264 1 265 2 223 1 0 2 152 1 174 2 340 2 228 1 57 1 56 1 136 1 203 1 161 2 229 2 204 1 346 3 377 1 94 1 288 1 189 2 261 1 169 2 339 2 
172 1 317 2 264 1 223 1 0 1 320 1 75 1 152 1 249 2 7 1 341 1 106 1 228 1 136 1 161 3 229 3 346 4 232 1 89 1 62 1 348 1 189 3 169 1 
317 2 172 1 264 1 223 1 320 1 0 1 62 1 152 1 348 1 249 2 270 1 341 1 106 1 228 1 136 1 189 3 229 3 161 3 169 1 232 1 346 4 89 1 
228 1 136 1 189 1 52 1 161 1 229 1 
74 1 0 2 91 1 52 1 349 1 251 1 178 1 324 1 228 2 313 1 189 7 136 3 229 6 161 7 59 1 205 1 123 1 169 1 232 2 346 3 171 1 
22 3 360 1 265 2 267 1 0 1 101 1 2 2 174 2 340 1 154 4 5 1 226 1 228 1 83 1 56 1 33 1 203 1 136 1 304 6 369 2 229 1 161 1 346 1 254 1 308 1 185 1 374 2 140 2 375 1 186 1 113 2 12 3 116 1 352 1 65 1 313 1 288 1 289 1 334 2 189 1 261 2 169 1 18 1 291 2 19 1 49 2 339 1 
50 1 99 1 317 3 358 1 320 1 297 2 249 3 270 1 341 1 227 2 106 1 276 2 31 1 229 1 161 1 58 1 232 1 346 2 89 2 38 1 62 1 348 1 329 1 283 2 15 1 242 1 315 1 189 1 
210 1 74 1 0 1 348 1 52 1 228 1 313 1 189 2 136 2 229 2 161 2 169 1 346 2 
223 1 90 1 0 1 310 1 6 1 228 1 313 1 136 1 189 4 229 4 161 4 232 1 346 1 
172 1 139 1 0 1 115 1 251 1 228 1 66 1 189 2 136 2 229 2 161 2 169 1 346 1 171 1 
228 1 275 1 342 1 136 1 189 1 161 1 229 1 260 1 232 1 163 1 
228 1 178 1 313 1 0 1 136 1 189 2 161 2 229 2 299 1 123 1 346 1 
172 1 90 1 0 2 91 1 310 1 6 1 349 1 178 1 228 2 313 1 189 5 136 2 229 4 161 5 232 1 346 3 
172 1 90 1 0 2 91 1 310 1 6 1 199 1 178 1 228 2 313 1 189 5 136 2 229 4 161 5 232 1 346 3 
265 2 0 1 340 1 174 2 228 1 288 1 56 1 57 1 203 1 136 1 189 1 229 1 161 1 261 1 169 1 346 1 232 1 339 1 
172 1 74 1 0 1 251 1 324 1 228 1 189 1 136 2 229 1 161 1 169 1 346 1 171 1 
30 1 261 1 321 1 35 1 302 1 
72 1 317 2 150 1 320 1 62 1 377 1 249 2 321 1 143 1 301 1 341 1 302 2 94 1 121 1 30 2 315 1 204 1 261 1 35 2 
265 1 174 1 321 1 130 1 30 1 16 1 35 1 125 1 339 1 
121 1 321 1 301 1 
133 1 217 1 371 1 370 1 
133 1 245 1 96 1 122 1 371 1 370 1 42 1 
96 1 142 1 192 1 
245 1 63 1 79 1 14 1 42 3 133 1 122 1 96 3 67 1 337 2 371 1 370 1 
133 1 245 1 96 2 122 1 323 1 371 1 370 1 273 1 42 2 
245 1 295 1 96 1 122 1 342 1 368 1 250 1 371 1 163 1 42 1 14 1 
245 1 96 1 122 1 371 1 370 1 42 1 14 1 
133 1 245 1 96 1 122 1 370 2 42 1 14 1 
245 2 3 1 331 1 14 1 42 2 122 2 96 2 134 1 371 1 370 1 
245 1 295 1 311 1 323 2 14 1 42 3 133 1 122 1 96 3 327 1 48 1 370 1 371 2 
245 1 250 1 323 1 14 1 42 2 133 1 118 1 122 1 96 2 342 2 84 1 260 1 371 1 370 1 163 1 
245 2 295 1 323 2 14 1 42 4 273 1 133 1 122 2 96 4 230 1 327 1 370 1 371 2 
133 1 245 1 96 1 122 1 371 1 370 1 42 1 14 1 
184 1 245 1 295 1 63 1 323 2 42 4 133 2 96 4 122 1 67 1 337 1 327 1 370 2 371 3 
245 1 257 1 323 1 364 1 14 1 42 2 133 1 122 1 96 2 371 1 370 1 221 1 
245 1 198 1 63 2 14 1 42 3 133 1 122 1 96 3 67 1 337 2 371 1 370 1 
225 1 371 2 97 2 208 1 
245 1 96 1 122 1 11 1 42 1 14 1 
133 1 245 1 96 2 122 1 311 1 323 1 371 1 370 1 42 2 14 1 
44 1 
133 1 245 1 96 1 122 1 371 1 370 1 42 1 14 1 
133 1 245 1 96 3 122 1 311 1 337 1 323 1 371 1 370 1 42 3 14 1 
184 1 295 1 327 1 371 1 
371 1 370 1 

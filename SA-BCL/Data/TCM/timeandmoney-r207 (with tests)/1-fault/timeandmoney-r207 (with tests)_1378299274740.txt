#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 1 1 150 2 292 1 55 1 293 2 239 2 9 1 178 1 156 9 297 9 372 1 299 1 247 1 335 2 248 2 339 6 159 1 67 2 253 1 208 5 20 4 343 1 98 1 185 3 287 1 145 1 119 2 
0 1 1 1 150 2 292 1 55 1 293 2 239 2 9 1 178 1 156 9 297 9 372 1 299 1 247 1 335 2 248 2 339 6 159 1 67 2 253 1 208 5 20 4 343 1 98 1 185 3 287 1 145 1 119 2 
0 1 1 1 150 2 292 1 55 1 293 2 239 2 9 1 178 1 156 10 297 10 372 1 299 1 247 1 335 2 248 2 339 7 159 1 67 2 253 1 208 6 20 5 343 1 98 1 185 4 287 1 145 1 119 2 
0 1 1 1 150 2 292 1 55 1 293 2 239 2 9 1 178 1 156 7 297 7 372 1 299 1 247 1 335 2 248 2 339 4 159 1 67 2 253 1 208 4 20 3 98 1 185 2 287 1 145 1 119 1 
339 3 150 1 239 1 293 1 292 1 253 1 208 3 20 2 343 1 156 4 185 1 297 4 287 1 299 1 119 2 247 1 335 1 248 1 
0 1 150 1 67 1 293 1 239 1 208 1 156 2 96 1 98 1 328 1 297 2 287 1 299 1 108 1 247 1 248 1 
339 1 150 2 67 1 293 2 208 2 9 1 20 1 156 3 185 1 297 3 287 1 299 1 247 1 
1 1 150 2 293 2 292 1 239 1 9 1 156 9 297 9 299 1 247 1 335 1 248 1 339 7 159 1 67 1 94 1 253 1 208 5 20 4 256 1 343 1 185 3 287 1 119 2 
1 1 150 2 293 2 292 1 239 1 9 1 156 9 297 9 299 1 247 1 335 1 248 1 339 7 159 1 67 1 94 1 253 1 208 5 20 4 256 1 343 1 185 3 287 1 119 2 
337 1 245 1 125 1 
337 1 46 2 91 1 
364 2 22 2 251 2 75 2 7 2 89 1 242 1 349 2 
364 2 320 1 4 1 5 2 81 2 128 1 175 2 29 1 7 3 240 1 242 1 348 1 349 2 61 1 330 1 179 1 89 1 302 2 304 1 111 1 66 2 251 2 162 1 139 1 209 1 210 1 232 1 117 1 22 3 23 1 189 1 262 1 100 1 50 1 75 2 216 1 26 1 
258 1 364 1 22 1 251 1 226 1 75 1 7 1 242 1 290 1 349 1 
337 1 103 1 149 1 251 1 125 1 6 1 7 1 377 1 258 1 22 1 202 1 102 1 193 1 303 1 
337 1 364 1 149 1 251 1 125 1 7 1 349 1 377 1 258 1 22 1 75 1 202 1 102 1 193 2 303 2 
59 1 229 1 15 1 193 1 303 1 
337 1 59 1 316 1 125 1 229 1 39 1 193 2 303 2 
229 1 193 1 303 1 
364 1 251 1 7 1 242 1 349 1 258 1 59 1 22 1 198 1 226 1 75 1 290 1 193 1 303 1 
337 1 
337 1 59 1 125 1 229 1 39 1 177 1 193 2 303 2 
337 1 110 1 306 2 125 1 39 1 229 2 231 1 18 1 176 1 153 1 357 1 368 1 59 2 327 2 269 1 44 1 97 2 193 5 303 5 
245 1 89 1 
364 1 27 1 251 2 7 2 349 1 344 1 22 2 75 1 89 2 
34 1 63 1 69 1 
320 1 66 1 5 1 81 1 128 1 7 1 162 1 139 1 210 1 369 1 22 1 189 1 262 1 330 1 89 1 304 1 
320 1 364 1 66 1 251 1 80 1 5 1 81 1 128 1 162 1 139 1 7 2 349 1 210 1 130 1 34 1 22 2 189 1 330 1 262 1 304 1 
364 3 22 3 251 3 80 1 75 1 7 3 89 1 349 3 
258 1 364 1 22 1 251 1 7 1 290 1 349 1 
258 1 344 1 364 1 22 1 27 1 251 1 75 1 7 1 349 1 
320 1 364 3 149 1 80 1 5 1 81 1 128 1 175 1 29 1 7 4 324 1 242 1 349 3 130 1 61 1 330 1 202 1 89 1 302 2 304 1 303 1 111 1 66 1 251 3 162 1 139 1 210 1 377 1 258 1 232 1 117 1 344 1 22 4 23 1 189 1 262 1 288 1 100 1 50 1 75 2 216 1 26 1 102 1 193 1 
364 1 13 1 22 2 251 2 80 1 6 1 7 2 89 1 349 1 
337 1 364 3 149 1 251 3 80 2 7 3 324 1 349 3 130 1 258 1 378 1 377 1 344 1 22 3 75 1 202 1 193 1 102 1 303 1 
344 1 34 1 364 2 22 2 251 2 63 1 80 1 75 1 7 2 349 2 
320 1 66 1 5 1 81 1 128 1 7 1 139 1 162 1 210 1 22 1 189 1 262 1 330 1 89 1 304 1 
66 1 5 1 81 1 128 1 7 1 139 1 162 1 356 1 210 1 143 1 22 1 262 1 330 1 89 1 304 1 
222 1 196 1 29 1 175 4 34 2 224 1 35 1 63 2 373 1 302 2 111 1 69 2 209 2 283 1 117 1 232 2 315 1 190 1 345 1 169 1 100 1 50 1 76 1 26 1 
258 1 149 1 364 1 88 1 22 1 251 1 7 1 349 1 
364 4 251 5 80 2 6 1 7 5 349 4 130 1 344 1 165 1 13 1 22 5 317 1 75 1 89 1 
258 1 88 1 364 2 22 2 251 2 7 2 290 1 349 2 
92 1 360 1 
92 1 360 1 
168 1 82 1 
168 1 82 1 
168 1 82 1 
92 1 45 1 360 1 
92 1 360 1 74 1 
92 2 360 2 168 1 118 1 127 1 82 1 
92 1 45 1 360 1 
92 1 45 1 360 1 
92 1 360 1 86 1 
92 1 360 1 86 1 
92 1 360 1 86 1 
337 1 374 1 37 3 92 2 277 2 230 2 8 1 182 2 183 1 197 1 313 1 211 2 360 2 118 1 272 2 200 1 191 1 193 2 303 2 
364 2 123 1 8 1 7 2 349 2 225 1 272 1 64 1 89 1 303 1 37 1 92 1 277 1 309 1 181 1 251 2 230 1 113 1 73 1 211 1 22 2 360 1 74 1 193 1 
239 1 335 1 248 1 
239 1 108 1 248 1 
239 3 108 1 234 1 367 1 217 1 335 2 
239 2 108 1 234 1 217 1 335 1 326 1 
239 2 108 1 234 2 335 1 217 1 
222 1 123 1 122 1 125 1 151 2 153 1 327 1 59 4 269 3 224 1 352 1 227 2 373 1 91 1 303 5 337 2 306 1 249 1 136 1 309 1 229 1 39 1 310 1 113 1 255 1 42 1 44 2 97 1 46 3 214 2 76 1 193 5 
222 3 122 3 125 1 151 6 31 1 153 1 32 1 59 7 155 1 327 2 269 8 224 3 158 1 15 5 133 1 373 3 91 3 90 5 303 9 337 5 306 2 249 2 136 1 309 4 229 6 39 1 255 2 312 1 231 1 44 6 97 2 46 9 214 6 76 3 193 9 
222 1 122 1 125 1 151 2 59 2 327 1 269 3 224 1 227 1 373 1 91 2 303 3 337 3 306 1 249 1 309 1 310 1 255 1 231 1 42 1 44 2 97 1 46 4 214 2 76 1 193 3 
222 2 122 2 125 1 151 4 32 1 327 1 59 3 269 5 224 2 158 1 227 2 373 2 91 3 303 4 337 4 306 1 249 1 309 2 310 1 255 1 312 1 231 1 42 1 44 4 97 1 46 7 214 4 76 2 193 4 
218 1 245 1 162 1 
52 1 162 1 
124 1 
162 1 210 1 
218 2 371 1 330 1 162 3 235 1 210 1 
330 1 162 1 210 1 
58 1 162 1 
222 1 79 1 3 2 196 2 206 1 175 7 355 1 209 4 41 1 342 1 259 1 232 3 260 1 224 1 345 3 263 1 332 1 
222 1 79 1 3 2 196 2 206 1 175 7 355 1 209 4 41 1 342 1 259 1 232 3 260 1 224 1 345 3 263 1 332 1 
222 1 79 1 3 2 196 2 206 1 175 7 355 1 84 1 209 4 41 1 342 1 259 1 232 3 260 1 224 1 345 3 263 1 332 1 
78 1 221 1 79 1 222 4 3 3 122 3 196 5 29 1 175 31 154 1 224 4 332 1 302 2 373 3 278 4 354 3 206 2 71 1 355 1 209 16 207 1 41 5 19 1 342 2 259 2 232 15 117 1 260 2 285 1 345 10 100 1 263 1 76 3 26 1 
219 1 222 2 3 1 196 2 29 1 175 9 224 2 332 1 302 2 206 1 311 1 355 1 209 5 41 1 342 1 259 1 232 4 117 1 260 1 345 3 100 1 192 1 263 1 26 1 
150 1 81 1 5 1 293 1 239 2 367 1 104 1 57 1 156 2 297 2 298 1 299 1 108 1 331 1 247 1 335 1 248 1 16 1 339 1 204 1 66 1 67 1 228 1 139 1 208 1 213 1 167 1 287 1 262 1 170 1 
194 1 150 1 81 1 5 1 323 1 293 1 239 2 367 1 57 1 156 3 297 3 298 1 108 1 331 1 247 1 335 1 248 1 16 1 339 2 204 1 66 1 67 1 228 1 139 1 208 1 213 1 167 1 287 1 262 1 318 1 
194 1 81 1 5 1 239 2 367 1 57 1 156 2 297 2 298 1 108 1 331 1 247 1 335 1 248 1 339 2 204 1 66 1 67 1 228 1 139 1 208 1 213 1 287 1 262 1 318 1 
204 2 205 1 66 1 67 2 150 1 323 1 5 1 81 1 228 2 293 1 128 1 139 1 162 1 210 1 156 1 157 1 12 1 261 1 297 1 262 1 346 1 201 1 331 2 
16 1 204 1 66 1 67 1 150 1 5 1 81 1 228 1 239 2 293 1 367 1 139 1 57 1 156 1 213 1 167 1 297 1 298 1 262 1 299 1 108 1 170 1 318 1 331 1 335 1 248 1 
93 1 
103 1 149 1 291 1 5 2 6 1 7 1 153 1 106 1 157 1 12 1 351 2 199 1 202 1 303 5 306 1 249 1 66 2 251 1 70 1 162 1 163 1 210 1 257 1 258 1 358 2 359 2 22 1 262 1 171 2 125 1 266 1 81 2 128 2 327 1 269 2 270 2 333 2 334 1 91 2 276 4 337 2 375 1 39 3 229 6 376 1 139 1 377 1 144 2 44 2 97 1 46 2 48 1 51 1 193 5 102 1 
103 1 149 1 171 1 251 1 39 1 229 2 376 1 70 1 6 1 7 1 177 1 257 1 258 1 377 1 22 1 202 1 51 1 102 1 193 3 334 1 276 2 303 3 
103 1 149 1 125 1 6 1 7 1 177 1 202 1 333 1 334 1 303 3 276 3 337 1 251 1 229 1 376 1 39 1 70 1 257 1 377 1 258 1 22 1 51 1 193 3 102 1 
103 1 149 1 171 1 125 1 6 1 7 1 177 1 202 1 333 1 334 1 303 3 276 3 337 1 251 1 39 1 376 1 229 2 70 1 257 1 377 1 258 1 144 1 22 1 51 1 193 3 102 1 
103 1 149 1 291 1 6 1 7 1 153 1 106 1 294 1 351 2 202 1 303 5 306 1 251 1 70 1 257 1 115 1 258 1 358 2 359 2 22 1 171 4 172 1 125 5 177 1 327 1 269 1 270 2 333 4 334 1 336 1 276 6 91 2 337 5 338 1 39 3 229 7 376 1 377 1 144 4 44 1 97 1 51 1 102 1 193 5 
103 1 149 1 291 1 6 1 7 1 153 1 106 1 351 2 199 1 202 1 303 4 306 1 251 1 70 1 257 1 258 1 358 2 359 2 22 1 171 2 125 1 327 1 269 1 270 2 333 2 334 1 276 4 91 2 337 2 376 1 39 2 229 4 377 1 44 1 144 2 97 1 46 2 51 1 102 1 193 4 
103 1 149 1 171 2 291 1 172 1 125 1 6 1 7 1 153 1 106 1 327 1 294 1 269 1 270 2 351 2 202 1 333 2 334 1 91 2 303 4 276 4 337 1 306 1 338 1 251 1 229 4 39 2 376 1 70 1 257 1 377 1 258 1 144 2 44 1 358 2 97 1 359 2 22 1 51 1 193 4 102 1 
103 1 149 1 171 2 291 1 172 1 125 1 6 1 7 1 153 1 106 1 327 1 294 1 269 1 270 2 351 2 202 1 333 2 334 1 91 2 303 4 276 4 337 1 306 1 338 1 251 1 229 4 39 2 376 1 70 1 257 1 377 1 258 1 144 2 44 1 358 2 97 1 359 2 22 1 51 1 193 4 102 1 
103 1 149 1 171 2 125 1 6 1 7 1 241 1 325 1 153 1 106 1 327 1 294 1 269 1 351 2 65 1 202 1 333 2 135 2 334 1 303 4 276 4 337 1 306 1 251 1 68 2 229 4 39 2 376 1 70 1 257 1 377 1 258 1 144 2 44 1 358 2 97 1 46 2 22 1 51 1 193 4 102 1 
103 1 149 1 291 1 171 3 172 1 125 1 6 1 7 1 153 1 106 1 327 1 294 1 269 1 270 2 351 2 202 1 333 3 334 1 91 2 303 4 276 5 337 1 306 1 338 1 251 1 39 2 376 1 229 5 70 1 257 1 115 1 377 1 258 1 44 1 144 3 358 2 97 1 359 2 22 1 51 1 193 4 102 1 
103 1 149 1 291 1 171 3 172 1 125 1 6 1 7 1 153 1 106 1 327 1 294 1 269 1 270 2 351 2 202 1 333 3 334 1 91 2 303 4 276 5 337 1 306 1 338 1 251 1 39 2 376 1 229 5 70 1 257 1 115 1 377 1 258 1 44 1 144 3 358 2 97 1 359 2 22 1 51 1 193 4 102 1 
103 1 149 1 6 1 7 1 153 1 106 1 351 2 199 1 202 1 303 4 306 1 251 1 68 2 70 1 257 1 258 1 358 2 22 1 171 2 125 1 325 1 327 1 269 1 333 2 334 1 135 2 276 4 337 1 376 1 39 2 229 4 377 1 44 1 144 2 97 1 46 2 51 1 102 1 193 4 
222 1 3 1 196 2 29 1 175 6 34 1 224 1 35 1 245 1 63 1 89 2 332 1 302 2 111 1 69 1 355 1 209 3 342 1 117 1 232 3 260 1 345 2 100 1 50 1 263 1 26 1 
363 1 221 1 265 1 222 1 122 2 196 1 29 2 175 14 34 11 224 2 63 4 179 1 89 1 302 4 373 1 111 1 278 3 112 1 69 11 354 3 71 1 209 8 41 1 40 1 232 6 117 2 345 2 146 1 100 2 50 2 216 1 76 2 26 2 
320 1 364 1 81 1 5 1 80 1 128 1 7 2 29 1 175 2 349 1 369 1 87 1 130 1 63 1 330 1 179 1 89 1 302 2 304 1 111 1 66 1 251 1 162 1 139 1 209 1 72 1 210 1 40 1 117 1 232 1 22 2 189 1 379 1 262 1 100 1 50 1 216 1 26 1 
3 1 196 4 238 1 5 3 7 3 349 1 61 2 63 7 302 6 304 2 111 3 66 3 251 1 69 7 355 1 162 2 209 10 210 2 164 2 117 3 260 1 22 3 262 2 263 1 318 1 216 1 76 2 26 3 364 1 320 2 222 3 122 2 81 3 80 1 128 1 29 3 175 20 130 1 34 7 224 3 330 2 179 1 89 2 132 2 332 1 373 2 139 2 40 1 41 4 342 1 142 1 232 10 184 2 286 2 189 2 345 8 50 3 100 3 381 1 
148 1 364 1 322 1 80 1 81 8 5 7 128 2 7 1 29 2 175 2 104 1 349 1 348 2 244 1 12 1 157 1 107 1 35 1 296 1 179 1 302 4 305 1 111 2 66 8 251 1 254 1 139 2 162 3 209 1 210 2 117 2 232 1 22 1 262 2 100 2 50 2 318 1 216 1 26 2 
364 1 222 1 122 1 196 1 29 1 7 1 175 3 349 1 34 1 224 1 63 1 302 2 373 1 111 1 251 1 69 1 209 1 40 1 344 1 117 1 232 2 22 1 24 1 345 1 75 1 100 1 50 1 76 1 26 1 
111 1 69 1 175 2 29 1 209 2 283 1 41 1 117 1 34 1 224 1 35 1 345 1 63 1 50 1 100 1 76 1 302 2 26 1 
111 1 222 1 196 1 69 1 175 2 29 1 117 1 232 2 34 1 35 1 345 1 63 1 190 1 50 1 100 1 302 2 26 1 373 1 
222 1 122 1 196 1 29 1 175 4 34 2 224 1 35 1 63 2 302 2 373 1 111 1 69 2 209 2 41 1 117 1 232 2 345 2 100 1 50 1 76 1 26 1 
111 1 69 1 175 2 29 1 209 2 283 1 41 1 117 1 34 1 224 1 296 1 345 1 63 1 50 1 100 1 76 1 302 2 26 1 
111 1 222 1 196 1 69 1 175 2 29 1 117 1 232 2 34 1 296 1 345 1 63 1 190 1 50 1 100 1 302 2 26 1 373 1 
222 1 122 1 196 1 29 1 175 4 34 2 224 1 296 1 63 2 302 2 373 1 111 1 69 2 209 2 41 1 117 1 232 2 345 2 100 1 50 1 76 1 26 1 
222 1 122 1 196 1 175 4 29 1 34 2 224 1 63 2 302 2 373 1 111 1 69 2 209 2 41 1 117 1 232 2 345 2 100 1 50 1 76 1 26 1 
320 1 81 1 5 1 128 1 175 2 7 1 29 1 61 1 330 1 179 1 89 1 302 2 304 1 111 1 66 1 139 1 162 1 209 1 210 1 117 1 232 1 22 1 189 1 262 1 50 1 100 1 216 1 26 1 
126 1 81 1 5 1 128 1 175 2 7 1 29 1 330 1 179 1 89 1 302 2 304 1 111 1 66 1 139 1 162 1 209 1 356 1 210 1 143 1 117 1 232 1 22 1 262 1 50 1 100 1 216 1 26 1 
222 1 122 1 196 1 29 1 175 4 34 2 224 1 63 2 302 2 373 1 111 1 69 2 209 2 40 1 41 1 117 1 232 2 345 2 100 1 50 1 76 1 26 1 
320 1 222 1 122 1 196 1 81 1 5 1 175 4 7 1 29 1 104 1 34 2 61 1 224 1 63 2 330 1 373 1 302 2 304 1 111 1 66 1 69 2 139 1 162 1 209 2 41 1 210 1 232 2 117 1 286 1 22 1 189 1 345 2 262 1 50 1 100 1 76 1 26 1 
364 1 222 1 122 1 29 1 7 1 175 3 349 1 34 1 224 1 63 1 373 1 302 2 111 1 308 1 251 1 69 1 209 2 41 1 40 1 232 1 344 1 117 1 22 1 345 1 75 1 100 1 50 1 76 1 26 1 
221 1 222 3 122 3 196 3 29 2 175 19 268 2 223 1 224 3 203 1 180 1 134 2 302 4 373 3 278 2 354 1 71 1 311 1 282 1 17 1 209 9 41 3 43 1 117 2 232 10 345 6 100 2 76 3 120 1 26 2 
365 1 222 2 122 3 196 2 28 1 29 3 175 26 268 1 223 1 129 1 224 3 300 1 180 1 134 4 302 6 373 2 278 2 281 1 354 2 311 1 71 2 282 2 17 1 209 14 41 2 232 12 117 3 285 2 345 4 100 3 25 1 76 3 120 2 26 3 
221 1 365 1 222 5 3 1 122 4 28 1 196 4 29 3 175 41 268 1 223 1 129 1 224 5 300 1 301 1 203 1 180 1 332 1 134 4 302 6 373 4 278 4 281 1 354 3 71 3 311 1 355 1 282 2 17 1 209 20 41 4 342 1 117 3 232 21 260 1 285 1 345 8 100 3 263 1 25 1 76 4 120 1 26 3 
221 1 365 1 222 4 3 1 122 4 28 1 196 4 29 4 175 38 268 1 223 1 129 1 224 5 300 1 301 1 203 1 180 1 332 1 134 4 302 8 373 3 278 4 281 1 354 3 71 3 311 1 355 1 282 2 17 1 209 20 41 3 342 1 117 4 232 18 260 1 285 2 345 7 100 4 263 1 25 1 76 4 120 1 26 4 
221 2 365 1 222 8 3 1 122 7 28 1 196 7 29 2 175 52 268 1 223 1 129 1 224 8 300 1 180 1 332 1 134 4 302 4 373 7 278 4 112 2 281 1 354 4 71 2 311 1 355 1 282 1 17 1 209 27 41 7 342 1 117 2 232 25 260 1 285 1 345 14 100 2 263 1 25 1 76 7 120 1 26 2 
92 1 277 1 211 1 250 1 360 1 118 1 272 1 230 1 191 1 197 1 
64 1 74 1 
92 1 220 1 277 1 211 1 236 1 360 1 272 1 95 1 230 1 
337 1 374 1 37 2 92 1 277 1 230 1 8 1 182 1 197 1 313 1 211 1 360 1 118 1 272 1 200 1 191 1 193 1 303 1 
337 1 374 1 37 2 92 1 277 1 230 1 8 1 182 1 197 1 313 1 211 1 360 1 118 1 272 1 200 1 191 1 193 1 303 1 
337 1 374 1 37 2 92 1 277 1 230 1 8 1 182 1 197 1 313 1 211 1 360 1 118 1 272 1 200 1 191 1 193 1 303 1 
45 1 127 1 105 1 
45 1 127 1 105 1 
273 1 86 1 
127 1 273 1 86 1 
225 1 181 1 
364 2 123 1 7 2 349 2 59 1 225 1 272 1 64 1 89 1 303 1 37 1 38 1 92 1 277 1 309 1 181 1 251 2 230 1 182 1 113 1 313 1 73 1 211 1 22 2 360 1 74 1 193 1 
45 1 105 1 
127 1 273 1 86 1 
54 1 81 2 5 2 7 2 29 1 175 2 348 2 244 1 179 1 36 1 302 2 111 1 66 2 251 2 252 1 139 1 162 1 254 1 209 1 210 1 40 1 117 1 232 1 22 2 99 1 262 1 50 1 100 1 216 1 26 1 264 1 
204 1 347 1 66 2 5 2 81 2 239 2 367 1 139 1 104 1 57 1 212 1 329 1 167 1 298 1 262 1 108 1 318 1 335 1 248 1 
204 1 347 1 66 1 5 1 81 1 239 2 367 1 139 1 57 1 167 1 298 1 262 1 108 1 289 1 318 1 335 1 248 1 
204 1 319 1 205 1 66 1 5 1 81 1 128 1 139 1 162 1 210 1 12 1 157 1 212 1 262 1 
204 1 347 1 66 1 5 1 81 1 239 2 367 1 139 1 57 1 212 1 329 1 167 1 298 1 262 1 108 1 318 1 335 1 248 1 
30 1 
337 1 269 1 44 1 245 1 125 1 176 1 357 1 
291 1 125 1 153 1 327 1 269 1 270 1 91 1 303 1 337 2 306 1 39 1 229 1 44 1 97 1 359 1 46 1 193 1 
195 2 52 3 2 2 237 2 5 3 151 6 104 1 153 4 11 2 58 2 350 1 202 2 303 5 306 4 249 2 66 3 162 10 163 1 210 3 357 1 164 2 214 6 262 4 76 2 218 2 321 1 222 2 366 1 122 2 125 2 81 3 128 1 176 1 33 2 327 4 269 9 224 2 371 1 330 3 274 1 373 2 91 6 337 8 229 5 39 3 139 3 138 2 140 1 44 8 97 4 46 12 188 2 47 2 193 5 
121 1 365 1 222 2 122 2 28 1 125 2 151 5 153 2 33 1 11 2 327 2 269 8 224 2 300 1 373 2 303 1 91 3 337 5 306 2 249 1 278 1 281 1 354 1 229 1 39 1 71 1 163 1 44 5 97 2 314 1 46 6 214 5 25 1 76 2 193 1 
364 1 222 1 7 1 242 1 349 1 153 1 33 1 11 2 327 1 269 2 224 2 198 1 226 1 303 1 306 1 338 1 251 1 342 1 258 1 44 2 260 1 97 1 22 1 75 1 192 1 263 1 290 1 193 1 
337 1 306 1 125 1 176 1 153 1 357 1 327 1 44 1 269 1 97 1 
337 5 222 2 122 2 151 5 33 1 164 1 11 2 44 5 269 5 224 2 46 10 214 5 76 2 373 2 91 5 
337 1 125 1 229 1 39 1 193 1 303 1 
366 1 266 1 81 4 5 4 128 2 153 1 327 2 60 1 269 2 12 1 157 1 350 2 303 3 306 2 249 2 66 4 229 4 39 2 139 1 162 1 163 2 231 1 210 1 44 2 97 2 233 1 48 1 262 1 193 3 
364 2 320 1 81 1 5 1 128 1 175 1 29 1 7 3 242 1 349 2 61 1 330 1 89 1 302 2 304 1 111 1 66 1 251 2 139 1 162 1 210 1 232 1 117 1 22 3 23 1 189 1 262 1 100 1 75 2 50 1 216 1 26 1 
337 4 306 1 249 1 3 1 125 2 151 2 163 1 153 1 327 1 44 2 269 1 97 1 46 4 214 2 91 2 
277 1 230 1 10 1 
277 1 181 1 230 1 191 1 141 1 
277 1 230 1 10 1 
277 1 230 1 10 1 
277 1 173 1 230 1 
277 1 173 1 230 1 
277 1 173 1 230 1 
277 1 230 1 
92 1 360 1 
222 1 3 1 196 2 175 8 29 2 355 1 209 4 41 1 342 1 232 4 117 2 285 1 260 1 224 1 345 3 100 2 263 1 332 1 302 4 26 2 
342 1 232 3 260 1 224 1 222 1 245 1 3 1 345 2 196 2 175 6 263 1 355 1 209 3 332 1 
222 1 122 1 196 1 29 1 175 4 209 2 41 1 232 2 117 1 224 1 345 2 100 1 275 1 76 1 373 1 302 2 26 1 
278 2 221 1 222 1 122 1 196 1 354 1 71 1 175 7 209 3 41 1 232 4 224 1 345 2 76 1 373 1 
221 1 265 1 222 3 3 1 122 2 196 5 175 23 29 2 224 3 332 1 373 2 302 4 278 2 112 1 354 2 355 1 209 11 41 4 341 1 342 2 232 12 117 2 260 2 285 2 345 9 100 2 263 1 76 2 26 2 
232 1 278 1 175 1 
354 1 175 1 209 1 
222 1 122 1 196 2 29 1 175 6 209 3 41 1 164 1 117 1 232 3 224 1 345 3 100 1 275 1 76 1 26 1 302 2 373 1 
365 1 222 2 122 2 28 1 196 1 175 12 29 1 224 2 300 1 302 2 373 2 278 1 354 1 281 1 71 1 311 1 209 6 41 1 232 6 117 1 345 2 100 1 25 1 76 2 26 1 
222 1 196 1 175 6 209 3 41 1 342 1 232 3 260 1 224 1 345 2 263 1 
196 1 175 3 29 1 355 1 209 1 41 1 341 1 342 1 232 2 117 1 260 1 285 1 345 2 100 1 332 1 302 2 26 1 
222 2 196 3 311 1 29 1 175 10 209 5 41 2 342 2 117 1 232 5 260 2 224 2 345 5 100 1 192 1 263 1 26 1 302 2 
311 1 29 1 175 2 209 2 41 1 117 1 224 1 345 1 100 1 76 1 302 2 26 1 
222 1 122 1 196 1 311 1 29 1 175 4 209 2 41 1 232 2 117 1 224 1 345 2 100 1 76 1 373 1 302 2 26 1 
196 1 311 1 175 3 29 3 209 1 41 1 341 1 342 1 232 2 117 3 285 1 260 1 345 2 100 3 203 1 302 6 26 3 
221 1 222 5 3 1 122 3 196 7 29 5 175 34 154 1 224 5 275 1 203 1 332 1 302 10 373 3 278 4 354 3 71 1 311 1 355 1 207 1 209 16 19 1 41 5 341 1 342 3 232 18 117 5 260 3 285 2 345 12 100 5 263 2 76 3 26 5 
222 1 3 1 196 2 175 8 29 1 224 1 300 1 332 1 302 2 278 1 354 1 71 1 311 1 355 1 209 4 342 1 232 4 117 1 260 1 345 2 100 1 263 1 26 1 
221 1 222 1 3 1 122 1 196 2 175 11 29 2 224 2 300 1 275 1 332 1 302 4 278 2 354 1 71 1 311 1 355 1 209 6 41 1 342 1 232 5 117 2 260 1 345 3 100 2 263 1 76 1 26 2 
365 1 222 3 3 1 122 2 28 1 196 3 175 19 29 3 224 3 300 1 275 1 332 1 302 6 373 2 278 1 281 1 354 1 71 1 311 1 355 1 209 9 41 1 342 1 232 10 117 3 260 1 285 1 345 4 100 3 263 1 25 1 76 2 26 3 
365 1 222 2 3 1 122 2 28 1 196 3 175 17 29 3 224 3 300 1 275 1 332 1 302 6 373 1 278 1 354 1 281 1 71 1 311 1 355 1 209 10 41 2 342 1 232 7 117 3 260 1 285 1 345 5 100 3 263 1 25 1 76 2 26 3 
222 1 3 1 196 2 175 8 29 1 224 1 300 1 332 1 302 2 278 1 354 1 71 1 311 1 355 1 209 4 342 1 232 4 117 1 260 1 345 2 100 1 263 1 26 1 
365 1 222 2 122 2 28 1 196 1 175 12 29 1 224 2 300 1 302 2 373 2 278 1 354 1 281 1 71 1 311 1 209 6 41 1 232 6 117 1 345 2 100 1 25 1 76 2 26 1 
365 1 222 2 3 1 122 2 28 1 196 3 175 18 29 4 224 3 300 1 275 1 332 1 302 8 373 1 278 1 281 1 354 1 71 1 311 1 355 1 209 10 41 2 342 1 232 8 117 4 260 1 285 2 345 5 100 4 263 1 25 1 76 2 26 4 
365 1 222 2 122 3 28 1 196 3 175 16 29 4 224 3 300 1 203 1 302 8 373 2 278 1 281 1 354 1 71 1 311 1 209 9 41 3 232 7 117 4 285 2 345 6 100 4 25 1 76 3 26 4 
222 1 196 3 175 7 355 1 209 3 41 3 342 3 232 4 260 3 224 1 345 6 263 1 332 2 
365 1 222 2 3 1 122 2 28 1 196 3 175 18 29 4 224 3 300 1 203 1 332 1 302 8 373 1 278 1 281 1 354 1 71 1 311 1 355 1 209 10 41 1 342 1 232 8 117 4 260 1 285 2 345 4 100 4 263 1 25 1 76 2 26 4 
22 1 13 1 251 1 49 1 6 1 7 1 89 1 
279 1 251 1 174 1 6 1 7 1 114 1 295 1 13 1 22 1 246 1 49 1 89 1 
157 1 12 1 245 1 66 1 262 1 81 1 5 1 128 1 139 1 162 1 210 1 
364 1 320 1 66 1 251 1 80 1 5 1 81 1 128 1 162 1 7 2 139 1 349 1 210 1 22 2 330 1 262 1 89 1 304 1 
149 1 364 2 320 1 66 1 251 2 237 1 80 1 5 1 81 1 162 3 7 2 139 1 349 1 210 2 58 1 258 1 350 1 22 2 330 2 262 1 89 1 102 1 304 1 
364 2 149 1 237 1 81 2 5 2 80 1 7 2 349 1 58 1 350 1 330 2 89 1 304 1 66 2 251 2 139 1 162 3 210 2 143 1 258 1 22 2 262 1 77 1 102 1 
218 1 52 1 237 1 125 1 81 3 5 3 128 1 58 1 350 1 330 1 202 1 303 2 337 1 66 3 229 1 161 1 139 1 162 4 210 1 262 1 147 1 77 1 193 2 
337 1 218 1 52 1 66 3 125 1 237 1 5 3 81 3 229 1 128 1 138 1 162 4 139 1 210 1 58 1 350 1 330 1 262 1 202 1 77 1 193 2 303 2 
305 1 66 1 262 1 81 1 5 1 139 1 
305 1 148 1 66 7 322 1 5 6 81 7 137 1 128 2 254 1 162 3 139 2 104 1 83 1 348 1 210 2 116 1 107 1 371 1 330 1 262 3 318 1 
364 1 320 1 222 1 3 1 196 2 80 1 5 1 81 1 175 6 7 2 29 2 104 1 349 1 34 1 61 1 224 1 63 1 330 1 36 1 89 2 332 1 302 4 304 1 111 2 66 1 251 1 69 1 355 1 162 1 139 1 209 3 210 1 40 1 342 1 232 3 117 2 260 1 184 1 22 2 286 1 189 1 345 2 262 1 100 2 50 2 263 1 26 2 
218 1 52 1 2 1 366 1 125 1 5 1 81 1 128 1 176 1 153 2 327 2 59 1 269 1 202 1 303 3 337 1 306 2 66 1 229 2 39 1 138 1 162 2 357 1 44 1 97 2 188 1 47 1 193 3 
305 1 218 1 66 2 5 2 81 2 162 2 139 1 104 1 210 1 371 1 330 1 262 2 274 1 
66 4 5 4 81 4 128 1 162 1 139 1 104 1 210 1 12 1 157 1 262 1 361 1 77 1 
66 2 280 1 238 1 5 2 81 2 162 1 139 1 83 1 210 1 116 1 284 1 350 1 330 1 262 2 
66 1 262 1 81 1 5 1 239 1 108 1 128 1 139 1 57 1 248 1 
66 2 54 1 5 2 81 2 254 1 162 1 139 1 104 1 210 1 262 1 318 1 
148 1 66 5 5 4 81 5 322 1 128 1 254 1 162 3 139 2 104 1 210 2 157 1 12 1 350 1 262 2 361 1 
148 1 66 5 5 4 81 5 128 1 254 1 162 3 139 2 104 1 210 2 157 1 12 1 350 1 271 1 262 2 361 1 
364 1 66 1 251 1 80 1 5 1 81 1 128 1 162 1 7 2 139 1 349 1 210 1 143 1 22 2 330 1 262 1 89 1 304 1 
66 1 5 1 81 1 137 1 162 1 139 1 83 1 210 1 116 1 350 1 371 1 330 1 262 2 
166 1 370 1 215 1 267 1 89 1 
337 1 362 1 149 1 125 1 152 1 267 1 324 1 21 1 258 1 59 1 377 1 166 2 370 2 202 1 215 2 89 1 102 1 193 2 303 2 
370 1 22 1 251 1 99 1 252 1 7 1 267 1 215 1 264 1 
362 1 152 1 267 1 
245 1 287 1 208 1 247 1 
156 1 297 1 150 1 287 1 293 1 208 1 247 1 
156 1 67 1 331 1 
150 1 293 1 208 1 243 1 156 3 187 1 98 2 297 3 299 1 287 1 380 1 247 1 
156 2 339 1 297 2 150 1 287 1 119 1 293 1 208 1 247 1 
150 1 293 1 292 1 239 1 208 1 20 1 156 1 297 1 299 1 335 1 248 1 
156 1 297 1 150 1 299 1 293 1 208 1 247 1 
156 1 297 1 150 1 287 1 299 1 293 1 247 2 
53 1 150 2 293 2 208 1 85 1 156 2 186 1 297 2 299 1 247 1 
1 1 339 2 159 1 150 1 293 1 208 2 20 1 156 3 185 1 297 3 287 1 299 1 247 1 
307 1 339 1 150 1 239 2 293 1 367 1 208 1 156 2 297 2 287 1 299 1 108 1 247 1 335 1 248 1 
339 2 150 2 293 2 208 2 20 1 343 1 156 4 185 1 297 4 287 1 299 1 119 1 247 1 
156 1 297 1 150 1 287 1 299 1 293 1 208 1 247 1 
339 2 150 1 293 1 208 3 20 1 243 1 156 4 98 1 185 1 297 4 287 2 14 1 380 1 247 2 
339 1 150 1 293 1 208 1 256 1 156 2 131 1 297 2 299 1 287 1 109 1 247 1 
156 3 98 2 160 1 297 3 150 1 287 1 299 1 293 1 380 2 208 1 247 1 243 1 
208 2 101 2 353 1 56 1 
156 1 297 1 62 1 150 1 299 1 293 1 
156 2 339 1 159 1 297 2 150 1 287 1 299 1 293 1 208 1 247 1 
340 1 
156 1 297 1 150 1 287 1 299 1 293 1 208 1 247 1 
156 3 339 1 159 1 98 1 297 3 150 1 287 1 299 1 293 1 208 1 247 1 
185 1 14 1 208 1 20 1 
208 1 247 1 

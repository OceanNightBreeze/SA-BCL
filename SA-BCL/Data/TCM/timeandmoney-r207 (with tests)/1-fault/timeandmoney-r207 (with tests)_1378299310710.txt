#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 332 (112,213,271) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 1 289 1 262 9 266 1 369 9 292 1 294 1 7 2 245 2 11 1 178 1 12 2 64 1 86 2 356 2 67 1 130 1 307 1 110 2 377 5 252 4 45 1 312 2 334 1 282 1 190 3 316 6 115 1 
27 1 289 1 262 9 266 1 369 9 292 1 294 1 7 2 245 2 11 1 178 1 12 2 64 1 86 2 356 2 67 1 130 1 307 1 110 2 377 5 252 4 45 1 312 2 334 1 282 1 190 3 316 6 115 1 
27 1 289 1 262 10 266 1 369 10 292 1 294 1 7 2 245 2 11 1 178 1 12 2 64 1 86 2 356 2 67 1 130 1 307 1 110 2 377 6 252 5 45 1 312 2 334 1 282 1 190 4 316 7 115 1 
27 1 289 1 262 7 266 1 369 7 292 1 294 1 7 2 245 2 11 1 178 1 12 2 64 1 86 2 356 2 67 1 130 1 307 1 110 2 377 4 252 3 312 1 334 1 282 1 190 2 316 4 115 1 
86 1 356 1 67 1 110 1 377 3 262 4 252 2 45 1 369 4 292 1 312 2 7 1 245 1 190 1 11 1 316 3 115 1 64 1 
356 1 130 1 289 1 377 1 110 1 262 2 56 1 369 2 346 1 7 1 281 1 245 1 11 1 115 1 12 1 64 1 
110 2 377 2 262 3 252 1 369 3 334 1 245 2 11 1 190 1 316 1 115 1 12 1 64 1 
86 1 356 1 67 1 377 5 110 2 262 9 252 4 45 1 292 1 369 9 312 2 334 1 7 1 223 1 245 2 100 1 282 1 178 1 11 1 316 7 190 3 115 1 12 1 64 1 
86 1 356 1 67 1 377 5 110 2 262 9 252 4 45 1 292 1 369 9 312 2 334 1 7 1 223 1 245 2 100 1 282 1 178 1 11 1 316 7 190 3 115 1 12 1 64 1 
265 1 338 1 197 1 
204 1 338 1 367 2 
293 2 175 2 128 2 267 1 141 2 28 2 226 1 138 2 
79 1 341 1 259 1 141 2 28 3 260 2 238 1 82 1 3 1 195 1 368 1 293 3 175 2 267 1 31 1 146 1 148 1 147 1 269 1 299 2 104 1 226 1 371 1 182 1 301 2 152 1 128 2 229 1 304 1 277 1 309 1 75 1 47 2 317 1 191 2 25 1 138 2 
311 1 293 1 175 1 128 1 295 1 141 1 28 1 226 1 138 1 321 1 
323 1 28 1 119 1 357 1 97 1 231 1 265 1 293 1 295 1 347 1 22 1 338 1 138 1 139 1 
323 1 128 1 141 1 28 1 357 2 231 1 265 1 175 1 293 1 295 1 347 1 22 1 338 1 139 2 138 1 
322 1 199 1 357 1 344 1 139 1 
265 1 285 1 333 1 199 1 357 2 344 1 338 1 139 2 
357 1 344 1 139 1 
106 1 128 1 141 1 28 1 357 1 311 1 175 1 293 1 295 1 199 1 226 1 139 1 321 1 138 1 
338 1 
265 1 285 1 199 1 357 2 344 1 77 1 338 1 139 2 
192 2 285 1 35 1 342 1 374 1 68 1 357 5 344 2 55 1 308 1 99 2 265 1 310 1 243 2 199 2 338 1 233 1 139 5 234 1 
267 1 197 1 
128 1 141 1 28 2 20 1 293 2 175 1 267 2 134 1 138 2 
228 1 177 1 98 1 
28 1 3 1 82 1 195 1 240 1 293 1 75 1 267 1 146 1 148 1 147 1 47 1 299 1 191 1 371 1 182 1 
175 1 293 3 128 3 267 1 141 3 28 3 91 1 138 3 
311 1 293 1 128 1 295 1 141 1 28 1 138 1 
20 1 293 1 175 1 128 1 295 1 141 1 134 1 28 1 138 1 
323 1 79 1 259 1 141 3 28 4 260 2 238 1 82 1 3 1 195 1 368 1 175 2 293 4 267 1 295 1 146 1 147 1 148 1 347 1 269 1 126 1 299 1 226 1 371 1 182 1 301 1 152 1 128 3 229 1 304 1 357 1 231 1 91 1 277 1 279 1 75 1 134 1 47 1 22 1 216 1 317 1 191 1 138 3 139 1 
293 2 128 1 267 1 141 1 28 2 97 1 85 1 138 2 91 1 
323 1 128 3 141 3 365 1 28 3 357 1 231 1 91 2 175 1 293 3 295 1 134 1 347 1 22 1 126 1 216 1 338 1 139 1 138 3 
128 2 141 2 28 2 98 1 91 1 175 1 293 2 134 1 177 1 138 2 
28 1 3 1 82 1 195 1 293 1 75 1 267 1 146 1 148 1 147 1 47 1 299 1 191 1 371 1 182 1 
170 1 28 1 343 1 82 1 195 1 293 1 75 1 267 1 146 1 147 1 47 1 299 1 191 1 371 1 182 1 
0 1 79 1 341 2 259 1 260 2 238 1 98 2 32 1 269 1 177 2 152 1 301 4 155 1 156 1 228 2 229 1 90 1 41 1 277 2 161 1 210 1 315 1 214 1 137 1 
323 1 293 1 128 1 295 1 141 1 255 1 28 1 138 1 
128 1 141 1 28 2 82 1 3 1 195 1 91 1 293 2 75 1 146 1 147 1 148 1 47 1 177 1 216 1 299 1 191 1 371 1 138 1 182 1 
128 4 141 4 28 5 97 1 275 1 91 2 43 1 293 5 175 1 267 1 134 1 216 1 85 1 138 5 
311 1 293 2 128 2 295 1 141 2 255 1 28 2 138 2 
112 1 297 1 
112 1 297 1 
332 1 271 1 
332 1 271 1 
112 1 332 1 297 1 271 1 
112 1 297 1 320 1 
112 1 332 1 297 1 271 1 
112 1 297 1 213 1 
112 1 297 1 320 1 
112 1 297 1 320 1 
112 1 297 1 150 1 
112 1 297 1 150 1 
112 1 297 1 150 1 
302 2 193 2 357 2 376 1 174 2 143 1 122 1 222 1 145 1 112 2 297 2 244 1 9 1 23 2 338 1 61 3 51 1 139 2 14 2 
141 2 193 1 117 1 28 2 174 1 122 1 293 2 267 1 297 1 328 1 61 1 14 1 354 1 372 1 302 1 128 2 16 1 357 1 21 1 112 1 280 1 213 1 139 1 138 2 
86 1 356 1 7 1 
56 1 356 1 7 1 
56 1 86 2 7 3 256 1 165 1 89 1 
56 1 86 1 7 2 256 1 165 1 62 1 
56 1 86 1 7 2 256 2 165 1 
258 2 192 1 167 2 285 1 52 1 117 1 344 1 326 1 55 2 367 3 99 1 265 1 144 1 243 1 32 1 199 4 155 1 35 3 204 1 68 1 357 5 40 2 161 1 21 1 280 1 315 1 212 1 319 1 338 2 361 1 50 1 139 5 
258 6 322 5 192 2 284 1 167 6 285 1 52 2 142 1 344 6 326 1 55 6 367 9 99 2 265 1 30 1 243 2 32 3 199 7 176 1 155 3 35 8 204 3 68 1 357 9 358 1 161 3 280 4 315 3 212 2 189 1 338 5 361 3 340 5 139 9 234 1 
192 1 258 2 167 2 52 1 55 2 99 1 367 4 265 1 144 1 243 1 32 1 199 2 155 1 35 3 204 2 357 3 40 1 161 1 280 1 315 1 212 1 338 3 361 1 50 1 139 3 234 1 
258 4 192 1 284 1 167 4 52 1 55 4 367 7 99 1 265 1 144 1 30 1 243 1 32 2 199 3 155 2 35 5 204 3 357 4 40 2 161 2 280 2 315 2 212 1 189 1 338 4 361 2 139 4 50 1 234 1 
254 1 371 1 197 1 
373 1 371 1 
186 1 
195 1 371 1 
42 1 93 1 254 2 82 1 195 1 371 3 
82 1 195 1 371 1 
19 1 371 1 
248 1 301 7 341 4 183 1 187 2 41 2 221 1 261 1 277 3 160 1 161 1 378 1 32 1 211 1 348 1 214 3 381 1 
248 1 301 7 341 4 183 1 187 2 41 2 221 1 261 1 277 3 160 1 161 1 378 1 32 1 211 1 348 1 214 3 381 1 
248 1 301 7 341 4 183 1 187 2 41 2 221 1 261 1 277 3 121 1 160 1 161 1 378 1 32 1 211 1 348 1 214 3 381 1 
79 1 235 1 341 16 288 4 260 2 238 1 366 1 261 1 221 2 32 4 348 2 353 1 248 1 152 1 301 31 155 3 183 1 229 1 187 3 132 3 133 1 41 5 277 15 160 2 251 1 161 4 378 5 211 1 315 3 214 10 215 1 361 3 381 2 283 1 
248 1 301 9 152 2 153 1 79 2 341 5 183 1 229 2 187 2 238 2 260 4 206 1 221 1 261 1 41 3 277 4 160 1 161 1 378 1 32 1 348 1 214 4 381 1 353 1 
172 1 262 2 56 1 369 2 146 1 7 2 202 1 245 1 102 1 299 1 11 1 12 1 64 1 182 1 105 1 86 1 356 1 88 1 109 1 89 1 377 1 110 1 111 1 44 1 47 1 316 1 78 1 232 1 115 1 191 1 
172 1 54 1 262 3 56 1 369 3 146 1 7 2 202 1 245 1 102 1 299 1 12 1 64 1 182 1 105 1 86 1 356 1 89 1 72 1 109 1 377 1 110 1 111 1 44 1 46 1 47 1 78 1 316 2 115 1 191 1 
172 1 54 1 262 2 56 1 369 2 146 1 7 2 202 1 102 1 299 1 12 1 64 1 182 1 105 1 86 1 356 1 89 1 377 1 111 1 46 1 47 1 78 1 316 2 115 1 191 1 
227 1 96 1 287 1 171 1 172 2 195 1 72 1 110 1 262 1 264 1 209 1 369 1 75 1 146 1 245 1 47 1 202 2 78 2 299 1 191 1 371 1 12 2 182 1 
105 1 86 1 356 1 88 1 172 1 89 1 109 1 110 1 54 1 262 1 111 1 56 1 44 1 369 1 146 1 7 2 245 1 47 1 202 1 102 1 11 1 299 1 78 1 191 1 12 1 182 1 
114 1 
1 2 192 1 285 3 287 1 239 1 344 6 97 1 195 1 55 2 99 1 4 1 5 1 293 1 295 1 243 1 146 1 347 1 200 1 299 2 103 1 247 1 204 2 68 1 357 5 70 1 18 1 208 4 75 2 76 2 212 1 22 1 323 1 324 1 28 1 119 1 220 2 367 2 264 1 265 1 268 2 225 1 371 1 182 1 330 2 35 2 184 2 231 1 278 2 135 1 47 2 338 2 191 2 339 1 139 5 138 1 
323 1 285 1 28 1 119 1 239 1 97 1 344 2 5 1 293 1 295 1 347 1 225 1 103 1 247 1 184 1 357 3 231 1 208 2 22 1 77 1 138 1 139 3 
323 1 285 1 28 1 119 1 239 1 344 1 97 1 265 1 5 1 293 1 295 1 347 1 225 1 103 1 247 1 357 3 231 1 278 1 208 3 22 1 77 1 338 1 138 1 139 3 
323 1 285 1 28 1 119 1 239 1 97 1 344 2 220 1 265 1 5 1 293 1 295 1 347 1 225 1 103 1 247 1 184 1 357 3 231 1 278 1 208 3 22 1 77 1 338 1 138 1 139 3 
192 1 1 2 285 3 239 1 344 7 97 1 55 1 99 1 5 1 4 1 6 1 293 1 295 1 243 1 347 1 200 1 149 1 103 1 13 1 247 1 204 2 68 1 357 5 208 6 76 2 22 1 77 1 323 1 28 1 119 1 220 4 265 5 268 2 225 1 330 2 35 1 184 4 231 1 278 4 92 1 335 1 338 5 139 5 138 1 
1 2 192 1 323 1 324 1 285 2 28 1 119 1 239 1 344 4 97 1 220 2 55 1 367 2 99 1 265 1 4 1 5 1 293 1 295 1 268 2 243 1 347 1 200 1 225 1 103 1 247 1 330 2 35 1 204 2 184 2 68 1 357 4 231 1 278 2 208 4 76 2 22 1 338 2 139 4 138 1 
1 2 323 1 192 1 285 2 28 1 119 1 239 1 344 4 97 1 220 2 55 1 99 1 265 1 4 1 5 1 293 1 295 1 268 2 243 1 200 1 347 1 225 1 149 1 103 1 13 1 247 1 330 2 35 1 204 2 184 2 68 1 357 4 231 1 278 2 208 4 92 1 76 2 22 1 338 1 138 1 139 4 
1 2 323 1 192 1 285 2 28 1 119 1 239 1 344 4 97 1 220 2 55 1 99 1 265 1 4 1 5 1 293 1 295 1 268 2 243 1 200 1 347 1 225 1 149 1 103 1 13 1 247 1 330 2 35 1 204 2 184 2 68 1 357 4 231 1 278 2 208 4 92 1 76 2 22 1 338 1 138 1 139 4 
1 2 323 1 192 1 285 2 2 1 237 2 28 1 119 1 239 1 344 4 97 1 220 2 55 1 367 2 99 1 265 1 241 2 4 1 5 1 293 1 295 1 268 2 243 1 347 1 225 1 103 1 13 1 247 1 35 1 184 2 68 1 357 4 274 1 231 1 278 2 208 4 337 1 22 1 338 1 138 1 139 4 
1 2 192 1 323 1 285 2 28 1 119 1 239 1 97 1 344 5 55 1 220 3 99 1 265 1 4 1 5 1 293 1 295 1 268 2 243 1 200 1 347 1 225 1 149 1 103 1 13 1 247 1 330 2 35 1 204 2 184 3 68 1 357 4 231 1 278 3 208 5 92 1 76 2 335 1 22 1 338 1 138 1 139 4 
1 2 192 1 323 1 285 2 28 1 119 1 239 1 97 1 344 5 55 1 220 3 99 1 265 1 4 1 5 1 293 1 295 1 268 2 243 1 200 1 347 1 225 1 149 1 103 1 13 1 247 1 330 2 35 1 204 2 184 3 68 1 357 4 231 1 278 3 208 5 92 1 76 2 335 1 22 1 338 1 138 1 139 4 
1 2 192 1 323 1 324 1 285 2 237 2 28 1 119 1 239 1 344 4 97 1 220 2 55 1 367 2 99 1 265 1 241 2 4 1 5 1 293 1 295 1 268 2 243 1 347 1 225 1 103 1 247 1 35 1 184 2 68 1 357 4 231 1 274 1 278 2 208 4 22 1 338 1 139 4 138 1 
301 6 248 1 152 1 79 1 341 3 156 1 259 1 183 1 228 1 229 1 187 1 238 1 260 2 98 1 41 2 221 1 197 1 261 1 277 3 161 1 267 2 32 1 269 1 214 2 177 1 381 1 
79 2 341 8 259 2 288 3 260 4 238 2 98 4 368 1 267 1 84 1 32 1 269 1 177 11 104 1 152 2 301 14 249 1 155 2 228 11 129 1 229 2 132 3 41 1 277 6 251 1 161 2 378 1 113 1 336 1 315 1 214 2 361 2 283 1 
79 1 341 1 259 1 141 1 28 2 238 1 260 2 82 1 3 1 98 1 195 1 240 1 368 1 293 2 83 1 267 1 146 1 147 1 148 1 269 1 299 1 104 1 371 1 182 1 352 1 152 1 301 2 128 1 229 1 17 1 91 1 277 1 75 1 113 1 47 1 216 1 191 1 138 1 
341 10 141 1 238 3 3 2 98 7 195 2 54 1 290 1 293 3 146 2 148 2 147 2 298 2 299 3 104 1 248 1 152 3 301 20 155 2 355 2 161 3 75 1 113 1 314 2 315 2 214 8 216 1 317 2 361 2 79 3 259 3 28 3 260 6 82 2 221 1 261 1 368 1 267 2 32 3 224 2 269 3 177 7 371 2 34 1 182 2 128 1 183 1 273 1 228 7 229 3 187 1 41 4 91 1 277 10 378 4 47 3 191 3 138 1 381 1 
79 2 341 1 363 1 259 2 194 1 141 1 287 1 28 1 260 4 238 2 195 2 54 1 264 1 368 1 293 1 146 2 269 2 299 7 179 1 180 1 104 1 371 3 182 2 152 2 301 2 156 1 128 1 66 1 229 2 91 1 276 1 277 1 75 2 47 8 232 1 191 8 136 1 25 2 138 1 
79 1 341 1 259 1 141 1 28 1 260 2 238 1 98 1 175 1 293 1 32 1 269 1 177 1 151 1 152 1 301 3 155 1 128 1 228 1 229 1 41 1 277 2 161 1 134 1 113 1 315 1 214 1 361 1 138 1 
301 2 152 1 0 1 79 1 155 1 156 1 341 2 259 1 228 1 229 1 238 1 260 2 98 1 161 1 378 1 269 1 214 1 177 1 
301 2 152 1 79 1 156 1 259 1 228 1 229 1 238 1 260 2 98 1 41 1 277 2 32 1 269 1 315 1 214 1 177 1 137 1 
79 1 341 2 259 1 260 2 238 1 98 2 32 1 269 1 177 2 152 1 301 4 155 1 156 1 228 2 229 1 41 1 277 2 161 1 378 1 315 1 214 2 361 1 
301 2 152 1 0 1 79 1 155 1 341 2 259 1 228 1 229 1 238 1 260 2 98 1 276 1 161 1 378 1 269 1 214 1 177 1 
301 2 152 1 79 1 259 1 228 1 229 1 238 1 260 2 98 1 41 1 276 1 277 2 32 1 269 1 315 1 214 1 177 1 137 1 
79 1 341 2 259 1 260 2 238 1 98 2 32 1 269 1 177 2 152 1 301 4 155 1 228 2 229 1 41 1 276 1 277 2 161 1 378 1 315 1 214 2 361 1 
79 1 341 2 259 1 260 2 238 1 98 2 32 1 269 1 177 2 301 4 152 1 155 1 228 2 229 1 41 1 277 2 161 1 378 1 315 1 214 2 361 1 
79 1 341 1 259 1 28 1 238 1 260 2 82 1 3 1 195 1 368 1 293 1 267 1 146 1 147 1 148 1 269 1 299 1 104 1 371 1 182 1 301 2 152 1 229 1 277 1 75 1 47 1 317 1 191 1 
79 1 341 1 259 1 170 1 28 1 238 1 260 2 82 1 343 1 195 1 368 1 293 1 267 1 146 1 147 1 269 1 299 1 104 1 371 1 182 1 301 2 152 1 229 1 73 1 277 1 75 1 47 1 191 1 
79 1 341 2 259 1 260 2 238 1 98 2 32 1 269 1 177 2 152 1 301 4 155 1 228 2 229 1 41 1 277 2 161 1 378 1 113 1 315 1 214 2 361 1 
79 1 341 2 259 1 28 1 238 1 260 2 82 1 3 1 98 2 195 1 293 1 146 1 32 1 147 1 148 1 269 1 177 2 299 1 371 1 182 1 301 4 152 1 155 1 228 2 229 1 41 1 277 2 161 1 378 1 314 1 315 1 214 2 47 1 317 1 232 1 191 1 361 1 
79 1 341 2 259 1 141 1 28 1 260 2 238 1 98 1 175 1 293 1 32 1 269 1 177 1 152 1 301 3 155 1 128 1 228 1 229 1 277 1 161 1 378 1 134 1 113 1 315 1 214 1 24 1 361 1 138 1 
79 2 341 9 364 2 288 2 260 4 238 2 32 3 10 1 152 2 301 19 153 1 155 3 87 1 229 2 305 1 132 1 71 1 41 3 277 10 250 1 251 1 161 3 378 3 315 3 214 6 318 1 362 1 361 3 166 2 283 1 
79 3 341 14 364 1 288 2 260 6 238 3 125 1 345 1 242 1 32 2 10 1 353 2 152 3 301 26 153 1 155 3 331 1 87 1 229 3 305 1 132 2 41 2 277 12 250 2 161 3 378 2 315 2 214 4 360 1 362 2 361 3 26 1 166 4 283 2 
341 20 288 4 238 3 345 1 242 1 10 1 353 1 301 41 152 3 248 1 155 4 153 1 305 1 159 1 71 1 250 1 161 5 251 1 315 4 214 8 360 1 361 4 362 2 26 1 166 4 79 3 364 1 260 6 261 1 221 1 125 1 32 5 331 1 183 1 87 1 229 3 187 1 132 3 41 4 277 21 378 4 283 3 381 1 
79 4 341 20 364 1 288 4 260 8 238 4 221 1 261 1 125 1 345 1 242 1 32 4 10 1 353 2 248 1 152 4 301 38 153 1 155 4 183 1 331 1 87 1 229 4 187 1 305 1 159 1 132 3 71 1 41 4 277 18 250 1 251 1 161 5 378 3 315 3 214 7 360 1 362 2 361 4 26 1 381 1 166 4 283 3 
79 2 341 27 364 1 288 4 260 4 238 2 221 1 261 1 125 1 345 1 242 1 84 2 32 8 10 1 353 1 248 1 152 2 301 52 153 1 155 7 183 1 331 1 87 1 229 2 187 1 305 1 132 4 41 7 277 25 250 1 251 2 161 8 378 7 315 7 214 14 360 1 362 1 361 7 26 1 381 1 166 4 283 2 
222 1 302 1 193 1 112 1 107 1 297 1 376 1 174 1 143 1 14 1 
213 1 16 1 
302 1 193 1 112 1 297 1 185 1 53 1 101 1 174 1 14 1 
302 1 193 1 357 1 376 1 174 1 143 1 122 1 222 1 145 1 112 1 297 1 244 1 9 1 23 1 338 1 61 2 139 1 14 1 
302 1 193 1 357 1 376 1 174 1 143 1 122 1 222 1 145 1 112 1 297 1 244 1 9 1 23 1 338 1 61 2 139 1 14 1 
302 1 193 1 357 1 376 1 174 1 143 1 122 1 222 1 145 1 112 1 297 1 244 1 9 1 23 1 338 1 61 2 139 1 14 1 
173 1 158 1 320 1 
173 1 158 1 320 1 
150 1 359 1 
173 1 150 1 359 1 
372 1 354 1 
193 1 141 2 117 1 28 2 174 1 293 2 267 1 199 1 297 1 9 1 328 1 61 1 14 1 354 1 372 1 302 1 128 2 205 1 16 1 357 1 21 1 112 1 280 1 213 1 23 1 139 1 138 2 
158 1 320 1 
173 1 150 1 359 1 
79 1 236 1 341 1 363 1 259 1 28 2 238 1 260 2 195 1 124 1 368 1 293 2 370 1 146 1 269 1 349 1 179 1 299 2 104 1 371 1 182 1 152 1 301 2 272 1 229 1 277 1 113 1 47 2 191 2 25 2 138 2 
329 1 105 1 86 1 65 1 356 1 89 1 54 1 56 1 44 1 146 1 7 2 47 2 102 1 299 2 78 1 232 1 191 2 246 1 182 1 
105 1 86 1 65 1 356 1 89 1 54 1 123 1 56 1 44 1 146 1 7 2 47 1 102 1 299 1 78 1 191 1 182 1 
329 1 287 1 171 1 195 1 264 1 75 1 146 1 47 1 203 1 299 1 78 1 191 1 371 1 182 1 
329 1 105 1 86 1 65 1 356 1 89 1 54 1 56 1 44 1 146 1 7 2 47 1 102 1 299 1 78 1 191 1 246 1 182 1 
380 1 
265 1 35 1 338 1 233 1 55 1 197 1 308 1 
192 1 330 1 285 1 35 1 204 1 68 1 357 1 344 1 55 1 367 1 99 1 265 1 243 1 200 1 76 1 338 2 139 1 
192 4 140 2 285 3 344 5 195 3 55 8 99 4 146 3 243 4 8 1 201 2 299 3 154 1 155 2 204 6 157 2 68 4 108 1 357 5 70 1 308 1 19 2 161 2 74 1 75 1 212 2 254 2 315 2 257 2 22 2 361 2 258 6 167 6 168 2 80 1 82 3 367 12 265 2 224 2 32 2 371 10 182 4 373 3 35 9 38 2 93 1 47 3 232 1 233 1 191 3 338 8 49 2 94 2 139 5 
258 5 192 2 285 1 167 5 286 1 288 1 344 1 29 1 55 5 367 6 99 2 125 1 265 2 345 1 242 1 243 2 32 2 155 2 35 8 331 1 204 3 68 2 357 1 70 1 132 1 38 2 161 2 212 1 315 2 257 1 360 1 338 5 361 2 139 1 283 1 
192 1 141 1 28 1 221 1 55 2 99 1 293 1 175 1 295 1 243 1 32 1 226 1 248 1 106 1 128 1 35 2 68 1 357 1 38 2 161 2 311 1 92 1 257 1 164 1 139 1 321 1 138 1 381 1 
192 1 35 1 68 1 55 1 308 1 99 1 265 1 243 1 233 1 338 1 
258 5 155 2 167 5 35 5 204 5 38 2 55 5 367 10 161 2 224 1 32 2 315 2 257 1 338 5 361 2 
265 1 285 1 357 1 344 1 338 1 139 1 
192 2 285 2 287 1 80 1 344 4 195 1 55 2 99 2 264 1 146 1 243 2 350 1 299 4 371 1 182 1 154 2 35 2 68 1 357 3 70 2 162 1 75 2 135 1 212 2 47 4 191 4 339 1 139 3 234 1 
79 1 259 1 141 2 28 3 260 2 238 1 3 1 82 1 195 1 368 1 293 3 175 2 267 1 146 1 148 1 147 1 269 1 299 1 226 1 371 1 182 1 301 1 152 1 128 2 229 1 304 1 277 1 75 1 47 1 317 1 191 1 138 2 
258 2 192 1 167 2 35 1 204 2 187 1 68 1 70 1 55 2 367 4 99 1 265 2 243 1 212 1 338 4 
302 1 253 1 193 1 
302 1 193 1 118 1 143 1 372 1 
302 1 253 1 193 1 
302 1 253 1 193 1 
302 1 163 1 193 1 
302 1 163 1 193 1 
302 1 163 1 193 1 
302 1 193 1 
112 1 297 1 
248 1 301 8 152 2 79 2 341 4 183 1 229 2 187 1 238 2 260 4 41 2 261 1 221 1 277 4 161 1 378 1 32 1 214 3 353 1 381 1 
248 1 301 6 341 3 183 1 187 1 197 1 261 1 221 1 41 2 277 3 161 1 32 1 214 2 381 1 
152 1 301 4 79 1 155 1 303 1 341 2 229 1 238 1 260 2 41 1 277 2 161 1 378 1 32 1 315 1 214 2 361 1 
301 7 155 1 341 3 288 2 132 1 41 1 277 4 251 1 161 1 378 1 32 1 315 1 214 2 361 1 283 1 
79 2 341 11 288 2 238 2 260 4 221 2 261 1 32 3 84 1 353 2 248 1 301 23 152 2 155 2 183 1 229 2 187 1 132 2 41 5 277 12 161 3 251 1 378 4 188 1 336 1 315 2 214 9 361 2 381 2 
301 1 288 1 277 1 
301 1 341 1 132 1 
152 1 301 6 79 1 155 1 303 1 341 3 229 1 260 2 238 1 41 2 277 3 161 1 378 1 224 1 32 1 315 1 214 3 361 1 
79 1 341 6 288 1 260 2 238 1 125 1 345 1 242 1 32 2 301 12 152 1 153 1 155 2 331 1 229 1 132 1 41 1 277 6 161 2 378 1 315 2 214 2 360 1 361 2 283 1 
248 1 301 6 341 3 221 1 41 1 277 3 161 1 378 1 32 1 214 2 381 1 
301 3 152 1 79 1 341 1 183 1 229 1 238 1 260 2 41 1 221 1 261 1 277 2 378 1 188 1 214 2 381 1 353 1 
152 1 301 10 248 1 79 1 153 1 341 5 229 1 260 2 238 1 221 2 41 3 277 5 161 2 378 2 32 2 214 5 164 1 381 2 
152 1 301 2 153 1 79 1 155 1 341 2 229 1 238 1 260 2 161 1 378 1 214 1 
152 1 301 4 153 1 79 1 155 1 341 2 229 1 238 1 260 2 41 1 277 2 161 1 378 1 32 1 315 1 214 2 361 1 
301 3 152 3 153 1 79 3 341 1 229 3 238 3 260 6 71 1 221 1 41 1 277 2 188 1 378 1 214 2 353 1 381 1 
235 1 79 5 341 16 288 4 260 10 238 5 366 1 221 3 261 1 32 5 353 2 248 2 152 5 301 34 153 1 155 3 303 1 183 1 229 5 187 1 133 1 132 3 71 1 41 7 277 18 251 1 161 5 188 1 378 5 315 3 214 12 361 3 381 3 283 1 
79 1 341 4 288 1 260 2 238 1 261 1 221 1 32 1 301 8 152 1 248 1 153 1 331 1 183 1 229 1 187 1 132 1 41 2 277 4 161 1 214 2 283 1 381 1 
79 2 341 6 288 2 260 4 238 2 221 1 261 1 32 1 248 1 301 11 152 2 153 1 155 1 303 1 183 1 331 1 229 2 187 1 132 1 41 2 277 5 251 1 161 2 378 1 214 3 361 1 381 1 283 1 
79 3 341 9 288 1 260 6 238 3 221 1 261 1 125 1 345 1 242 1 32 3 353 1 248 1 301 19 152 3 153 1 155 2 303 1 183 1 331 1 229 3 187 1 132 1 41 3 277 10 161 3 378 1 315 2 214 4 360 1 361 2 381 1 283 1 
79 3 341 10 288 1 260 6 238 3 221 1 261 1 125 1 345 1 242 1 32 2 353 1 248 1 301 17 152 3 153 1 155 2 303 1 183 1 331 1 229 3 187 1 132 1 41 3 277 7 161 3 378 2 315 1 214 5 360 1 361 2 381 1 283 1 
79 1 341 4 288 1 260 2 238 1 261 1 221 1 32 1 301 8 152 1 248 1 153 1 331 1 183 1 229 1 187 1 132 1 41 2 277 4 161 1 214 2 283 1 381 1 
79 1 341 6 288 1 260 2 238 1 125 1 345 1 242 1 32 2 301 12 152 1 153 1 155 2 331 1 229 1 132 1 41 1 277 6 161 2 378 1 315 2 214 2 360 1 361 2 283 1 
79 4 341 10 288 1 260 8 238 4 221 1 261 1 125 1 345 1 242 1 32 2 353 2 248 1 301 18 152 4 153 1 155 2 303 1 183 1 331 1 229 4 187 1 132 1 41 3 277 8 161 3 378 2 315 1 214 5 360 1 361 2 381 1 283 1 
79 4 341 9 288 1 260 8 238 4 125 1 345 1 242 1 32 2 353 2 301 16 152 4 153 1 155 3 331 1 229 4 132 1 71 1 41 3 277 7 161 3 378 3 315 2 214 6 360 1 361 3 283 1 
301 7 248 1 341 3 183 1 261 2 221 3 41 3 277 4 161 1 378 3 32 1 214 6 381 3 
79 4 341 10 288 1 260 8 238 4 221 1 261 1 125 1 345 1 242 1 32 2 353 2 248 1 301 18 152 4 153 1 155 2 183 1 331 1 229 4 187 1 132 1 71 1 41 3 277 8 161 3 378 1 315 1 214 4 360 1 361 2 381 1 283 1 
293 1 267 1 28 1 97 1 207 1 138 1 85 1 
28 1 97 1 39 1 207 1 120 1 198 1 293 1 267 1 58 1 379 1 85 1 138 1 
75 1 287 1 146 1 47 1 299 1 195 1 191 1 371 1 197 1 182 1 264 1 
128 1 141 1 28 2 82 1 195 1 91 1 293 2 75 1 267 1 146 1 147 1 148 1 47 1 299 1 191 1 371 1 138 1 182 1 
323 1 141 1 28 2 82 2 195 2 293 2 267 1 295 1 146 1 148 1 147 1 347 1 201 1 299 1 371 3 182 1 154 1 128 2 91 1 19 1 47 1 191 1 138 2 
323 1 141 1 28 2 343 1 82 2 195 2 293 2 267 1 295 1 146 1 147 1 347 1 327 1 201 1 299 2 371 3 182 1 154 1 128 2 91 1 19 1 47 2 191 2 138 2 
82 1 344 1 195 1 265 1 146 1 296 1 327 1 201 1 299 3 371 4 182 1 154 1 373 1 357 2 19 1 75 1 254 1 47 3 22 1 191 3 338 1 139 2 116 1 
154 1 373 1 82 1 357 2 344 1 195 1 265 1 19 1 75 1 146 1 327 1 254 1 201 1 47 3 22 1 299 3 338 1 191 3 139 2 94 1 371 4 182 1 
146 1 47 1 299 1 191 1 180 1 182 1 
363 1 194 1 66 1 82 1 69 1 195 2 54 1 291 1 75 2 146 2 93 1 47 7 232 1 299 6 180 1 191 7 25 1 136 1 63 1 371 3 182 3 
79 2 341 3 259 2 141 1 28 2 238 2 260 4 82 1 3 1 98 1 195 1 221 1 261 1 293 2 370 1 267 2 146 1 32 1 147 1 148 1 269 2 177 1 299 1 371 1 182 1 301 6 248 1 152 2 128 1 183 1 228 1 355 1 229 2 187 1 41 2 91 1 277 3 161 1 113 1 314 1 214 2 47 1 232 1 317 1 191 1 138 1 381 1 
192 2 285 1 168 1 80 1 344 2 55 1 99 2 265 1 243 2 199 1 299 1 371 2 373 1 35 1 157 1 68 2 357 3 308 1 75 1 254 1 47 1 22 1 338 1 233 1 191 1 49 1 139 3 94 1 
108 1 82 1 195 1 146 1 93 1 254 1 47 2 232 1 299 2 180 1 191 2 371 2 182 2 
287 1 218 1 195 1 264 1 75 1 146 1 327 1 47 4 299 4 232 1 191 4 371 1 182 1 
154 1 273 1 82 1 306 1 69 1 195 1 146 1 47 2 299 2 191 2 63 1 300 1 371 1 182 2 
56 1 105 1 75 1 146 1 356 1 7 1 47 1 299 1 191 1 182 1 
236 1 363 1 195 1 54 1 146 1 47 2 232 1 299 2 191 2 371 1 182 1 
154 1 363 1 287 1 194 1 66 1 218 1 195 2 264 1 75 1 146 2 47 5 299 4 232 1 191 5 371 3 182 2 
154 1 217 1 363 1 287 1 66 1 218 1 195 2 264 1 75 1 146 2 47 5 299 4 232 1 191 5 371 3 182 2 
128 1 141 1 28 2 82 1 343 1 195 1 91 1 293 2 75 1 267 1 146 1 147 1 47 1 299 1 191 1 371 1 138 1 182 1 
154 1 82 1 69 1 195 1 291 1 146 1 93 1 47 1 299 1 191 1 63 1 371 1 182 2 
124 1 272 1 293 1 375 1 28 1 349 1 131 1 270 1 138 1 
37 1 375 1 33 1 
267 1 36 1 375 1 131 1 270 1 
323 1 36 2 37 1 375 1 357 2 131 2 231 1 265 1 267 1 295 1 347 1 199 1 22 1 126 1 270 2 338 1 33 1 139 2 95 1 
115 1 377 1 197 1 64 1 
369 1 245 1 115 1 377 1 110 1 262 1 64 1 
202 1 12 1 262 1 
325 1 130 2 377 1 110 1 262 3 369 3 313 1 245 1 127 1 11 1 115 1 64 1 
369 2 312 1 245 1 316 1 115 1 377 1 110 1 262 2 64 1 
86 1 356 1 67 1 110 1 377 1 262 1 252 1 369 1 7 1 245 1 11 1 
369 1 245 1 11 1 115 1 377 1 110 1 262 1 
369 1 245 1 11 1 115 2 110 1 262 1 64 1 
169 1 377 1 110 2 262 2 263 1 57 1 369 2 245 2 11 1 115 1 
110 1 377 2 262 3 252 1 369 3 245 1 282 1 11 1 178 1 316 2 190 1 115 1 64 1 
86 1 356 1 89 1 377 1 110 1 262 2 56 1 369 2 7 2 245 1 11 1 316 1 115 1 60 1 64 1 
110 2 377 2 262 4 252 1 369 4 45 1 312 1 245 2 11 1 316 2 190 1 115 1 64 1 
369 1 245 1 11 1 115 1 377 1 110 1 262 1 64 1 
325 1 130 1 81 1 110 1 377 3 262 4 252 1 369 4 313 1 245 1 316 2 190 1 115 2 64 2 
15 1 377 1 110 1 262 2 369 2 223 1 245 1 11 1 351 1 316 1 115 1 64 1 
325 1 130 2 219 1 377 1 110 1 262 3 369 3 313 2 245 1 11 1 115 1 64 1 
377 2 230 2 196 1 181 1 
369 1 59 1 245 1 11 1 110 1 262 1 
369 2 245 1 316 1 178 1 11 1 115 1 377 1 110 1 262 2 64 1 
48 1 
369 1 245 1 11 1 115 1 377 1 110 1 262 1 64 1 
130 1 110 1 377 1 262 3 369 3 245 1 316 1 11 1 178 1 115 1 64 1 
252 1 81 1 190 1 377 1 
115 1 377 1 

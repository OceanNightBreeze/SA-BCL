#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 3 246 1 141 1 248 1 114 1 250 9 96 1 295 5 148 1 252 2 253 2 9 1 271 1 98 6 178 1 321 1 104 4 231 2 351 2 280 9 22 1 261 1 127 1 132 1 236 2 355 1 71 2 311 2 
54 3 246 1 141 1 248 1 114 1 250 9 96 1 295 5 148 1 252 2 253 2 9 1 271 1 98 6 178 1 321 1 104 4 231 2 351 2 280 9 22 1 261 1 127 1 132 1 236 2 355 1 71 2 311 2 
54 4 246 1 141 1 248 1 114 1 250 10 96 1 295 6 148 1 252 2 253 2 9 1 271 1 98 7 178 1 321 1 104 5 231 2 351 2 280 10 22 1 261 1 127 1 132 1 236 2 355 1 71 2 311 2 
54 2 246 1 141 1 248 1 114 1 250 7 96 1 295 4 148 1 252 2 253 2 9 1 271 1 98 4 321 1 104 3 231 1 351 2 280 7 22 1 261 1 127 1 132 1 236 2 355 1 71 2 311 2 
104 2 54 1 246 1 248 1 231 2 250 4 351 1 280 4 295 3 252 1 253 1 132 1 236 1 9 1 271 1 98 3 178 1 311 1 
325 1 31 1 250 2 351 1 295 1 280 2 22 1 127 1 252 1 66 1 132 1 236 1 9 1 271 1 71 1 311 1 
104 1 54 1 250 3 280 3 295 2 261 1 132 1 236 2 9 1 271 1 98 1 71 1 311 2 
54 3 1 1 246 1 248 1 250 9 96 1 295 5 148 1 252 1 253 1 9 1 98 7 271 1 178 1 104 4 326 1 231 2 351 1 280 9 261 1 132 1 236 2 71 1 311 2 
54 3 1 1 246 1 248 1 250 9 96 1 295 5 148 1 252 1 253 1 9 1 98 7 271 1 178 1 104 4 326 1 231 2 351 1 280 9 261 1 132 1 236 2 71 1 311 2 
299 1 195 1 6 1 
217 1 299 1 225 2 
118 2 181 1 129 2 263 1 224 2 188 2 92 2 27 2 
28 1 218 1 55 1 137 2 314 1 113 1 297 1 118 3 77 1 60 1 367 1 84 1 224 2 8 1 12 1 13 2 274 2 181 1 305 1 306 1 258 2 230 1 348 1 206 1 185 1 281 1 374 1 107 1 375 1 129 2 263 1 188 2 26 1 134 2 92 2 27 3 356 1 
118 1 181 1 129 1 224 1 340 1 188 1 92 1 27 1 296 1 36 1 
86 1 0 1 157 1 358 1 105 1 349 1 195 1 116 1 118 1 65 1 299 1 340 1 92 1 27 1 
0 2 157 1 358 1 349 1 195 1 116 2 118 1 65 1 129 1 299 1 224 1 340 1 188 1 92 1 27 1 
345 1 0 1 53 1 88 1 116 1 
23 1 345 1 0 2 53 1 299 1 183 1 195 1 116 2 
0 1 53 1 116 1 
345 1 181 1 0 1 115 1 296 1 116 1 36 1 118 1 129 1 224 1 340 1 188 1 92 1 27 1 
299 1 
23 1 345 1 0 2 53 1 131 1 299 1 195 1 116 2 
345 2 42 2 288 1 0 5 53 2 315 1 195 1 293 1 116 5 160 1 58 1 338 1 23 1 59 2 299 1 238 1 101 2 200 1 123 1 
263 1 6 1 
373 1 118 2 129 1 263 2 223 1 224 1 188 1 92 2 27 2 
40 1 344 1 352 1 
28 1 258 1 218 1 137 1 113 1 281 1 118 1 375 1 367 1 263 1 84 1 26 1 12 1 274 1 27 1 322 1 
28 1 258 1 218 1 137 1 158 1 113 1 281 1 118 2 375 1 367 1 84 1 270 1 224 1 40 1 26 1 188 1 92 1 12 1 274 1 27 2 
118 3 129 1 263 1 158 1 224 3 188 3 92 3 27 3 
118 1 224 1 340 1 188 1 92 1 27 1 296 1 
118 1 129 1 223 1 224 1 340 1 188 1 92 1 27 1 373 1 
28 1 0 1 358 1 218 1 55 1 137 1 314 1 113 1 116 1 78 1 118 4 60 1 367 1 176 1 223 1 84 1 224 3 270 1 340 1 12 1 13 1 274 1 305 1 181 1 306 1 258 1 157 1 158 1 206 1 349 1 185 1 281 1 374 1 65 1 107 1 375 1 129 2 263 1 26 1 188 3 134 2 92 3 27 4 356 1 
118 2 263 1 105 1 224 1 158 1 188 1 92 2 267 1 27 2 
0 1 157 1 358 1 158 2 349 1 116 1 118 3 65 1 129 1 176 1 299 1 223 1 270 1 224 3 353 1 340 1 188 3 92 3 27 3 
158 1 352 1 118 2 129 1 223 1 224 2 188 2 40 1 92 2 27 2 
28 1 258 1 137 1 218 1 113 1 281 1 118 1 375 1 367 1 263 1 84 1 26 1 12 1 274 1 27 1 
258 1 137 1 218 1 113 1 281 1 118 1 233 1 128 1 367 1 263 1 84 1 26 1 12 1 274 1 27 1 
111 1 112 1 197 1 60 1 152 1 153 1 40 2 13 4 344 2 306 2 346 1 348 2 206 1 278 1 185 1 352 2 374 1 107 1 108 1 239 1 50 1 134 2 378 1 356 1 
118 1 45 1 358 1 224 1 340 1 188 1 92 1 27 1 
105 1 158 2 232 1 33 1 118 5 129 1 263 1 223 1 224 4 270 1 188 4 92 5 267 1 27 5 
118 2 45 1 224 2 340 1 188 2 92 2 27 2 296 1 
121 1 56 1 
121 1 56 1 
81 1 301 1 
81 1 301 1 
81 1 301 1 
121 1 302 1 56 1 
121 1 302 1 56 1 
121 1 171 1 56 1 
81 1 121 2 301 1 240 1 56 2 41 1 
121 1 302 1 56 1 
121 1 39 1 56 1 
121 1 39 1 56 1 
121 1 39 1 56 1 
287 2 0 2 245 2 63 3 247 1 334 1 56 2 125 1 196 1 116 2 299 1 38 2 121 2 354 2 100 1 49 2 215 1 41 1 379 1 
244 1 287 1 0 1 94 1 171 1 56 1 116 1 118 2 269 1 38 1 121 1 224 2 255 1 342 1 62 1 63 1 64 1 125 1 263 1 354 1 188 2 49 1 92 2 27 2 
252 1 253 1 351 1 
252 1 66 1 351 1 
252 3 66 1 253 2 37 1 376 1 109 1 
252 2 66 1 253 1 376 1 109 1 207 1 
252 2 66 1 253 1 376 1 109 2 
244 1 217 1 288 1 0 5 53 1 360 2 94 1 4 1 249 1 195 1 293 2 197 1 316 1 116 5 59 1 338 3 269 1 366 1 299 2 225 3 153 1 10 1 101 1 85 2 304 1 42 1 345 4 346 1 371 1 23 1 46 2 50 1 
217 3 286 5 0 9 288 1 53 6 360 6 195 1 249 1 293 6 197 3 116 9 59 2 338 8 269 4 366 3 80 1 299 5 225 9 153 3 10 2 101 2 370 1 85 6 304 2 345 7 42 2 103 1 88 5 346 3 20 1 160 1 212 1 23 1 50 3 241 1 
217 2 0 3 360 2 4 1 195 1 293 2 316 1 116 3 197 1 59 1 338 3 269 1 366 1 299 3 10 1 153 1 225 4 101 1 85 2 304 1 345 2 42 1 346 1 160 1 46 1 50 1 
217 3 0 4 360 4 4 1 195 1 293 4 116 4 316 1 197 2 59 1 338 5 269 2 366 2 299 4 225 7 10 1 153 2 101 1 370 1 85 4 304 1 42 1 345 3 346 2 160 1 212 1 46 2 50 2 241 1 
218 1 70 1 6 1 
218 1 163 1 
19 1 
218 1 84 1 
333 1 367 1 218 3 84 1 61 1 70 2 
367 1 218 1 84 1 
214 1 218 1 
357 1 306 3 346 1 204 1 348 4 145 1 292 1 21 1 336 1 197 1 260 2 108 2 239 3 91 1 303 1 13 7 310 1 
357 1 306 3 346 1 204 1 348 4 145 1 292 1 21 1 336 1 197 1 260 2 108 2 239 3 91 1 303 1 13 7 310 1 
357 1 306 3 346 1 204 1 348 4 145 1 292 1 21 1 336 1 197 1 260 2 108 2 239 3 91 1 303 1 13 7 310 1 72 1 
136 1 357 2 193 1 194 4 145 5 57 1 292 2 336 1 197 4 60 1 97 1 366 3 153 3 303 1 13 31 306 15 204 2 346 4 348 16 206 1 21 1 260 3 107 1 108 5 285 3 91 2 266 1 239 10 134 2 50 3 331 1 310 1 356 1 51 1 
357 1 289 1 145 1 292 1 197 1 220 1 60 2 303 1 13 9 306 4 346 1 204 1 348 5 206 2 21 1 260 2 107 2 108 3 239 4 91 1 134 4 331 1 310 1 356 2 
137 1 172 1 113 1 250 2 295 1 317 1 76 1 252 2 253 1 37 1 9 1 98 1 271 1 226 1 272 1 369 1 274 1 258 1 351 1 280 2 281 1 308 1 66 1 132 1 236 1 328 1 329 1 189 1 71 1 311 1 
268 1 137 1 172 1 113 1 250 3 294 1 295 1 317 1 252 2 253 1 37 1 9 1 98 2 226 1 272 1 369 1 274 1 258 1 124 1 351 1 280 3 281 1 308 1 66 1 132 1 236 1 328 1 329 1 71 1 311 1 
268 1 137 1 172 1 113 1 250 2 294 1 295 1 317 1 252 2 37 1 253 1 9 1 98 2 226 1 274 1 258 1 351 1 280 2 281 1 308 1 66 1 132 1 328 1 329 1 71 1 
180 1 258 1 218 1 361 1 137 1 113 1 124 1 250 1 281 1 221 1 317 2 280 1 308 2 84 1 236 1 226 2 320 1 164 1 309 1 12 1 274 1 71 2 311 1 
268 1 137 1 172 1 113 1 250 1 317 1 252 2 253 1 37 1 271 1 226 1 272 1 369 1 274 1 258 1 351 1 280 1 281 1 308 1 66 1 236 1 328 1 329 1 189 1 71 1 311 1 
208 1 
0 5 288 1 53 6 137 2 195 1 293 2 337 2 338 2 59 1 198 1 298 1 299 2 340 1 199 1 12 2 101 1 304 1 258 2 157 1 105 1 205 1 349 1 65 1 23 3 262 1 161 1 68 2 164 1 309 1 27 1 217 2 359 2 75 1 358 1 313 2 218 1 113 1 116 5 118 1 365 2 82 1 84 1 225 2 274 2 42 1 182 4 86 1 281 1 90 1 126 1 130 2 47 2 92 1 330 1 135 1 
0 3 53 2 358 1 313 1 116 3 118 1 82 1 340 1 182 2 86 1 157 1 105 1 205 1 349 1 65 1 262 1 23 1 161 1 131 1 92 1 330 1 27 1 
0 3 53 1 358 1 195 1 116 3 118 1 365 1 299 1 82 1 340 1 182 3 86 1 157 1 105 1 205 1 349 1 65 1 262 1 23 1 161 1 131 1 92 1 330 1 27 1 
0 3 53 2 358 1 359 1 313 1 195 1 116 3 118 1 365 1 299 1 82 1 340 1 182 3 86 1 157 1 105 1 205 1 349 1 65 1 23 1 262 1 161 1 131 1 92 1 330 1 27 1 
0 5 288 1 53 7 143 1 144 1 195 5 293 1 337 2 59 1 338 1 298 1 299 5 340 1 101 1 157 1 105 1 205 1 349 1 65 1 23 3 262 1 161 1 68 2 27 1 217 2 359 4 358 1 74 1 313 4 362 1 219 1 116 5 118 1 365 4 82 1 182 6 42 1 86 1 131 1 130 2 47 2 92 1 330 1 135 1 
0 4 288 1 53 4 195 1 293 1 337 2 59 1 338 1 198 1 298 1 299 2 340 1 101 1 157 1 105 1 205 1 349 1 65 1 262 1 23 2 161 1 68 2 27 1 217 2 358 1 359 2 313 2 116 4 118 1 365 2 82 1 225 2 182 4 42 1 86 1 130 2 47 2 92 1 330 1 135 1 
217 2 0 4 288 1 53 4 359 2 358 1 313 2 143 1 144 1 195 1 219 1 293 1 337 2 116 4 118 1 338 1 59 1 365 2 298 1 299 1 82 1 340 1 101 1 182 4 42 1 86 1 157 1 105 1 205 1 349 1 65 1 23 2 262 1 161 1 130 2 47 2 68 2 92 1 330 1 135 1 27 1 
217 2 0 4 288 1 53 4 359 2 358 1 313 2 143 1 144 1 195 1 219 1 293 1 337 2 116 4 118 1 338 1 59 1 365 2 298 1 299 1 82 1 340 1 101 1 182 4 42 1 86 1 157 1 105 1 205 1 349 1 65 1 23 2 262 1 161 1 130 2 47 2 68 2 92 1 330 1 135 1 27 1 
0 4 288 1 168 2 53 4 359 2 358 1 313 2 144 1 195 1 293 1 337 2 363 1 116 4 118 1 338 1 59 1 365 2 299 1 82 1 225 2 340 1 101 1 182 4 42 1 86 1 157 1 203 1 105 1 205 1 349 1 282 2 65 1 23 2 262 1 161 1 68 2 92 1 190 1 330 1 135 1 27 1 
217 2 288 1 0 4 53 5 358 1 74 1 359 3 313 3 143 1 144 1 195 1 219 1 293 1 337 2 116 4 118 1 338 1 59 1 298 1 365 3 299 1 82 1 340 1 101 1 42 1 182 5 86 1 157 1 105 1 205 1 349 1 65 1 23 2 262 1 161 1 130 2 47 2 68 2 92 1 330 1 135 1 27 1 
217 2 288 1 0 4 53 5 358 1 74 1 359 3 313 3 143 1 144 1 195 1 219 1 293 1 337 2 116 4 118 1 338 1 59 1 298 1 365 3 299 1 82 1 340 1 101 1 42 1 182 5 86 1 157 1 105 1 205 1 349 1 65 1 23 2 262 1 161 1 130 2 47 2 68 2 92 1 330 1 135 1 27 1 
0 4 288 1 53 4 195 1 293 1 337 2 59 1 338 1 198 1 299 1 340 1 101 1 157 1 105 1 205 1 349 1 65 1 262 1 23 2 161 1 68 2 27 1 168 2 358 1 359 2 313 2 363 1 116 4 118 1 365 2 82 1 225 2 182 4 42 1 86 1 282 2 92 1 330 1 135 1 
112 1 292 1 6 1 197 1 60 1 40 1 303 1 13 6 344 1 306 3 346 1 348 3 206 1 21 1 185 1 352 1 260 1 374 1 107 1 263 2 108 2 91 1 239 2 134 2 310 1 356 1 
29 1 314 1 194 3 145 1 251 1 197 2 60 2 97 1 366 2 8 1 153 2 40 11 13 14 344 11 306 6 18 1 346 1 348 8 206 2 89 1 185 1 352 4 374 2 107 2 263 1 108 1 285 3 239 2 266 1 134 4 50 1 110 1 356 2 
28 1 218 1 137 1 314 1 113 1 251 1 118 2 60 1 367 1 84 1 224 1 270 1 368 1 8 1 12 1 274 1 13 2 322 1 258 1 306 1 158 1 348 1 206 1 185 1 350 1 281 1 352 1 374 1 107 1 213 1 375 1 263 1 26 1 188 1 92 1 134 2 27 2 356 1 
137 3 145 4 292 1 251 1 197 3 60 3 8 1 153 2 341 2 303 1 12 1 13 20 344 7 305 2 306 10 258 3 346 3 158 1 348 10 206 3 21 1 260 1 352 7 107 3 263 2 108 4 26 2 310 1 27 3 356 3 28 2 268 1 218 2 314 1 169 2 113 2 318 1 118 3 367 2 366 2 270 1 224 1 84 2 40 7 274 3 87 2 185 3 281 2 44 1 374 3 375 2 235 1 284 2 91 1 239 8 188 1 134 6 92 1 50 2 
52 1 268 1 218 3 137 8 314 1 112 1 113 2 76 1 297 2 118 1 60 2 224 1 339 1 254 1 84 2 8 1 12 2 274 8 13 2 258 7 306 1 158 1 348 1 206 2 106 1 185 2 281 2 374 2 107 2 234 1 377 1 133 1 188 1 92 1 134 4 164 1 309 1 27 1 356 2 
251 1 197 1 118 1 60 1 366 1 223 1 224 1 153 1 40 1 13 3 344 1 306 2 346 1 348 1 206 1 185 1 43 1 352 1 374 1 107 1 129 1 108 1 239 1 188 1 134 2 92 1 50 1 27 1 356 1 
348 2 112 1 206 1 145 1 185 1 352 1 197 1 374 1 107 1 60 1 152 1 239 1 153 1 40 1 134 2 13 2 344 1 356 1 
306 2 346 1 112 1 206 1 185 1 278 1 352 1 374 1 107 1 60 1 108 1 239 1 40 1 134 2 50 1 13 2 344 1 356 1 
112 1 145 1 197 1 60 1 366 1 153 1 40 2 13 4 344 2 306 2 346 1 348 2 206 1 185 1 352 2 374 1 107 1 108 1 239 2 134 2 50 1 356 1 
348 2 206 1 145 1 185 1 352 1 197 1 374 1 107 1 60 1 339 1 152 1 239 1 153 1 40 1 134 2 13 2 344 1 356 1 
306 2 346 1 206 1 185 1 278 1 352 1 374 1 107 1 60 1 108 1 339 1 239 1 40 1 134 2 50 1 13 2 344 1 356 1 
145 1 197 1 60 1 366 1 339 1 153 1 40 2 13 4 344 2 306 2 346 1 348 2 206 1 185 1 352 2 374 1 107 1 108 1 239 2 134 2 50 1 356 1 
145 1 197 1 60 1 366 1 153 1 40 2 13 4 344 2 306 2 346 1 348 2 206 1 185 1 352 2 374 1 107 1 108 1 239 2 134 2 50 1 356 1 
28 1 137 1 218 1 314 1 113 1 118 1 60 1 367 1 84 1 8 1 12 1 13 2 274 1 305 1 258 1 306 1 348 1 206 1 185 1 281 1 374 1 107 1 375 1 263 1 26 1 134 2 27 1 356 1 
137 1 218 1 314 1 113 1 118 1 60 1 367 1 84 1 8 1 12 1 13 2 274 1 17 1 258 1 306 1 348 1 206 1 185 1 281 1 233 1 374 1 107 1 128 1 263 1 26 1 134 2 27 1 356 1 
145 1 251 1 197 1 60 1 366 1 153 1 40 2 13 4 344 2 306 2 346 1 348 2 206 1 185 1 352 2 374 1 107 1 108 1 239 2 134 2 50 1 356 1 
28 1 137 1 218 1 145 1 113 1 197 1 76 1 118 1 60 1 367 1 366 1 84 1 153 1 40 2 341 1 13 4 274 1 344 2 305 1 306 2 258 1 346 1 348 2 206 1 185 1 352 2 281 1 374 1 107 1 375 1 108 1 239 2 26 1 50 1 134 2 27 1 356 1 
145 1 291 1 251 1 197 1 118 1 60 1 366 1 223 1 224 1 153 1 40 1 13 3 344 1 306 1 346 1 348 2 206 1 185 1 352 1 374 1 107 1 129 1 239 1 188 1 50 1 134 2 92 1 27 1 356 1 
167 2 194 2 145 3 146 1 35 1 220 1 197 3 60 2 97 1 366 3 150 1 153 3 13 19 276 2 257 1 228 1 306 10 346 3 348 9 206 2 107 2 108 3 69 1 264 1 285 1 266 1 239 6 134 4 50 3 356 2 
167 1 194 2 145 2 35 2 220 1 197 3 222 1 60 3 97 2 366 3 120 1 150 1 153 3 13 26 276 4 228 2 306 12 346 2 348 14 206 3 107 3 67 1 108 2 69 1 264 1 285 2 239 4 134 6 50 2 166 1 331 2 380 1 242 1 356 3 
167 1 194 4 145 4 292 1 35 1 220 1 197 5 222 1 60 3 97 3 366 4 120 1 150 1 153 4 303 1 13 41 275 1 276 4 257 1 228 2 306 21 346 5 348 20 206 3 21 1 260 1 107 3 67 1 108 4 69 1 264 1 285 3 91 1 266 1 239 8 134 6 50 4 166 1 331 1 310 1 380 1 242 1 356 3 
167 1 194 4 145 3 292 1 35 1 220 1 197 5 222 1 60 4 97 3 366 4 120 1 150 1 153 4 303 1 13 38 275 1 276 4 257 1 228 2 306 18 346 4 348 20 206 4 21 1 260 1 107 4 67 1 108 4 69 1 264 1 285 3 91 1 266 1 239 7 134 8 50 3 166 1 331 2 310 1 380 1 242 1 356 4 
167 1 29 2 194 4 145 7 292 1 35 1 220 1 197 8 222 1 60 2 97 2 366 7 120 1 150 1 153 7 303 1 13 52 276 4 228 1 306 25 346 8 348 27 206 2 21 1 260 1 107 2 67 1 108 7 69 1 264 1 285 4 91 1 266 2 239 14 134 4 50 7 166 1 331 1 310 1 380 1 242 1 356 2 
287 1 38 1 121 1 354 1 49 1 215 1 56 1 41 1 379 1 186 1 
171 1 342 1 
287 1 38 1 121 1 354 1 265 1 99 1 49 1 56 1 243 1 
0 1 287 1 245 1 63 2 247 1 334 1 56 1 125 1 116 1 299 1 38 1 121 1 354 1 100 1 49 1 215 1 41 1 379 1 
0 1 287 1 245 1 63 2 247 1 334 1 56 1 125 1 116 1 299 1 38 1 121 1 354 1 100 1 49 1 215 1 41 1 379 1 
0 1 287 1 245 1 63 2 247 1 334 1 56 1 125 1 116 1 299 1 38 1 121 1 354 1 100 1 49 1 215 1 41 1 379 1 
240 1 302 1 210 1 
240 1 302 1 210 1 
79 1 39 1 
79 1 39 1 240 1 
255 1 62 1 
244 1 0 1 287 1 245 1 247 1 94 1 171 1 56 1 116 1 118 2 269 1 38 1 121 1 224 2 255 1 342 1 62 1 122 1 345 1 63 1 64 1 263 1 354 1 49 1 188 2 92 2 27 2 
302 1 210 1 
79 1 39 1 240 1 
332 1 218 1 137 2 314 1 113 1 251 1 297 2 118 2 60 1 84 1 254 1 8 1 274 2 13 2 15 1 16 1 323 1 306 1 258 2 348 1 206 1 185 1 281 1 374 1 107 1 234 1 327 1 92 2 134 2 27 2 356 1 
227 1 268 1 258 2 137 2 140 1 113 1 172 1 351 1 281 1 317 1 76 1 252 2 66 1 319 1 253 1 37 1 272 1 329 1 274 2 
268 1 258 1 137 1 172 1 113 1 351 1 317 1 281 1 252 2 175 1 66 1 319 1 253 1 37 1 272 1 329 1 274 1 
258 1 218 1 137 1 140 1 361 1 113 1 281 1 317 1 84 1 300 1 164 1 12 1 309 1 274 1 
227 1 268 1 258 1 137 1 140 1 113 1 172 1 351 1 317 1 281 1 252 2 66 1 319 1 253 1 37 1 272 1 329 1 274 1 
277 1 
58 1 338 1 299 1 238 1 195 1 293 1 6 1 
217 1 288 1 0 1 53 1 195 1 293 1 116 1 338 1 59 1 298 1 299 2 225 1 101 1 42 1 23 1 130 1 47 1 
288 4 333 1 0 5 53 5 137 3 3 1 142 2 95 1 195 2 293 8 197 2 58 1 338 9 59 4 299 8 153 2 256 2 12 1 101 4 304 2 258 3 346 2 349 2 211 1 23 3 214 2 163 3 70 2 217 6 360 6 218 10 169 2 170 2 113 4 34 2 76 1 116 5 174 2 119 2 367 3 366 2 84 3 225 12 274 3 85 6 42 4 229 2 372 1 281 3 90 1 187 2 238 1 50 2 93 1 
217 3 0 1 288 2 53 1 73 1 360 5 142 1 194 1 195 2 293 5 116 1 197 2 222 1 119 2 364 1 338 8 59 2 97 1 366 2 299 5 225 6 153 2 101 2 85 5 304 1 42 2 346 2 90 1 23 1 67 1 285 1 50 2 166 1 380 1 242 1 
288 1 0 1 142 1 143 1 292 1 293 2 115 1 296 1 116 1 197 2 36 1 118 1 119 2 59 1 338 2 224 1 340 1 101 1 42 1 181 1 346 1 279 1 129 1 91 1 188 1 92 1 27 1 310 1 
42 1 288 1 195 1 293 1 58 1 59 1 338 1 299 1 238 1 101 1 
217 5 360 5 346 2 142 1 169 1 293 5 197 2 119 2 338 5 366 2 299 5 153 2 225 10 50 2 85 5 
23 1 0 1 53 1 299 1 195 1 116 1 
288 1 0 3 53 4 75 1 218 1 137 4 30 1 113 1 293 2 116 3 59 2 338 2 84 1 11 1 12 2 101 2 274 4 304 2 42 2 258 4 372 1 160 1 281 1 90 2 23 2 126 1 164 1 309 1 93 2 
28 1 137 1 55 1 218 1 314 1 113 1 118 3 60 1 367 1 224 2 84 1 12 1 13 1 274 1 181 1 305 1 306 1 258 1 206 1 185 1 281 1 374 1 107 1 375 1 129 2 263 1 188 2 26 1 134 2 92 2 27 3 356 1 
217 2 304 1 42 1 288 1 360 2 195 2 293 2 260 1 59 1 338 1 90 1 299 4 225 4 101 1 85 2 
287 1 38 1 138 1 
287 1 38 1 138 1 
287 1 38 1 255 1 165 1 379 1 
287 1 38 1 138 1 
287 1 38 1 343 1 
287 1 38 1 343 1 
287 1 38 1 343 1 
287 1 38 1 
121 1 56 1 
306 4 346 1 348 4 206 2 145 1 21 1 292 1 260 1 197 1 107 2 60 2 108 2 239 3 91 1 134 4 303 1 13 8 331 1 310 1 356 2 
306 3 346 1 348 3 21 1 292 1 6 1 260 1 197 1 108 2 91 1 239 2 303 1 13 6 310 1 
306 2 346 1 348 2 206 1 145 1 147 1 197 1 107 1 60 1 366 1 108 1 239 2 153 1 50 1 134 2 13 4 356 1 
306 4 346 1 348 3 194 2 145 1 197 1 97 1 366 1 108 1 285 1 266 1 153 1 239 2 50 1 13 7 
29 1 194 2 145 4 292 2 197 3 60 2 366 2 153 2 303 1 13 23 306 12 346 3 348 11 206 2 21 1 260 1 107 2 162 1 108 5 285 2 91 2 239 9 266 1 50 2 134 4 110 1 331 2 310 1 356 2 
306 1 194 1 13 1 
348 1 285 1 13 1 
306 3 346 1 169 1 348 3 206 1 145 1 147 1 197 1 107 1 60 1 366 1 108 2 153 1 239 3 134 2 50 1 13 6 356 1 
194 1 145 1 220 1 197 2 222 1 60 1 97 1 366 2 153 2 13 12 306 6 346 2 348 6 206 1 107 1 67 1 108 1 285 1 239 2 134 2 50 2 166 1 242 1 380 1 356 1 
306 3 346 1 348 3 145 1 292 1 197 1 108 1 91 1 239 2 13 6 310 1 
306 2 348 1 206 1 145 1 292 1 21 1 107 1 162 1 60 1 108 1 239 2 91 1 134 2 303 1 13 3 331 1 356 1 
306 5 346 2 348 5 206 1 145 2 279 1 292 2 220 1 197 2 107 1 60 1 108 3 91 2 239 5 134 2 13 10 310 1 356 1 
348 2 206 1 145 1 220 1 197 1 107 1 60 1 153 1 239 1 134 2 13 2 356 1 
306 2 346 1 348 2 206 1 145 1 220 1 197 1 107 1 60 1 366 1 108 1 239 2 153 1 50 1 134 2 13 4 356 1 
257 1 306 2 348 1 206 3 145 1 292 1 220 1 107 3 162 1 60 3 108 1 91 1 239 2 134 6 331 1 13 3 356 3 
136 1 193 1 194 4 145 5 57 1 292 3 147 1 220 1 197 5 60 5 97 1 366 3 153 3 303 1 13 34 257 1 306 18 346 5 348 16 206 5 21 1 260 1 107 5 162 1 108 7 285 3 91 3 266 1 239 12 134 10 50 3 331 2 310 2 356 5 
194 1 292 1 197 1 220 1 60 1 97 1 303 1 13 8 306 4 346 1 348 4 206 1 21 1 260 1 107 1 108 2 285 1 91 1 239 2 134 2 242 1 310 1 356 1 
194 2 145 1 292 1 147 1 220 1 197 2 60 2 97 1 366 1 153 1 303 1 13 11 306 5 346 1 348 6 206 2 21 1 260 1 107 2 108 2 285 1 91 1 266 1 239 3 134 4 310 1 242 1 356 2 
194 1 145 1 292 1 147 1 220 1 197 3 222 1 60 3 97 1 366 2 153 2 303 1 13 19 306 10 346 3 348 9 206 3 21 1 260 1 107 3 67 1 108 3 285 1 91 1 239 4 134 6 50 2 166 1 331 1 310 1 380 1 242 1 356 3 
194 1 145 2 292 1 147 1 220 1 197 3 222 1 60 3 97 1 366 2 153 2 303 1 13 17 306 7 346 2 348 10 206 3 21 1 260 1 107 3 67 1 108 3 285 1 91 1 239 5 134 6 50 1 166 1 331 1 310 1 242 1 380 1 356 3 
194 1 292 1 197 1 220 1 60 1 97 1 303 1 13 8 306 4 346 1 348 4 206 1 21 1 260 1 107 1 108 2 285 1 91 1 239 2 134 2 242 1 310 1 356 1 
194 1 145 1 220 1 197 2 222 1 60 1 97 1 366 2 153 2 13 12 306 6 346 2 348 6 206 1 107 1 67 1 108 1 285 1 239 2 134 2 50 2 166 1 242 1 380 1 356 1 
194 1 145 2 292 1 147 1 220 1 197 3 222 1 60 4 97 1 366 2 153 2 303 1 13 18 306 8 346 2 348 10 206 4 21 1 260 1 107 4 67 1 108 3 285 1 91 1 239 5 134 8 50 1 166 1 331 2 310 1 380 1 242 1 356 4 
194 1 145 3 220 1 197 3 222 1 60 4 97 1 366 3 153 3 13 16 257 1 306 7 346 2 348 9 206 4 107 4 67 1 108 3 285 1 239 6 134 8 50 2 166 1 331 2 380 1 242 1 356 4 
306 4 346 1 348 3 145 3 21 2 292 3 197 1 108 3 91 3 239 6 303 1 13 7 310 1 
194 1 145 1 292 1 220 1 197 3 222 1 60 4 97 1 366 2 153 2 303 1 13 18 257 1 306 8 346 2 348 10 206 4 21 1 260 1 107 4 67 1 108 3 285 1 91 1 239 4 134 8 50 1 166 1 331 2 310 1 380 1 242 1 356 4 
118 1 263 1 105 1 92 1 267 1 173 1 27 1 
139 1 105 1 173 1 259 1 117 1 118 1 283 1 263 1 151 1 92 1 267 1 27 1 
258 1 218 1 137 1 84 1 113 1 164 1 309 1 12 1 274 1 6 1 281 1 
258 1 218 1 137 1 158 1 113 1 281 1 118 2 375 1 367 1 263 1 84 1 224 1 26 1 188 1 92 1 12 1 274 1 27 2 
258 1 358 1 157 1 218 3 137 1 158 1 113 1 174 1 281 1 118 2 375 1 214 1 367 2 263 1 84 2 224 2 340 1 26 1 188 1 92 2 274 1 27 2 93 1 
258 2 358 1 157 1 218 3 137 2 158 1 113 1 174 1 281 1 118 2 233 1 149 1 214 1 367 2 263 1 84 2 224 2 340 1 26 1 188 1 92 2 274 2 27 2 93 1 
0 2 258 3 53 1 137 3 218 4 349 1 195 1 32 1 113 1 174 1 116 2 281 1 307 1 149 1 214 1 367 1 299 1 84 1 163 1 12 1 70 1 274 3 93 1 
0 2 258 3 53 1 137 3 218 4 349 1 195 1 113 1 174 1 116 2 281 1 149 1 214 1 367 1 299 1 84 1 163 1 256 1 12 1 70 1 274 3 93 1 
258 1 137 1 377 1 113 1 274 1 281 1 
312 1 52 1 333 1 268 1 258 6 137 7 218 3 106 1 113 3 297 1 76 1 281 2 234 1 367 1 83 1 84 2 377 1 133 1 216 1 12 2 274 7 
137 1 251 1 292 1 197 1 60 2 341 1 303 1 13 6 344 1 305 1 258 1 306 3 346 1 158 1 348 3 206 2 21 1 352 1 260 1 107 2 263 2 108 2 26 1 27 2 310 1 356 2 28 1 218 1 113 1 76 1 118 2 367 1 224 1 84 1 40 1 274 1 87 1 185 2 281 1 374 2 327 1 375 1 91 1 239 2 188 1 134 4 92 1 
288 2 0 3 53 2 137 1 218 2 195 1 34 1 293 1 116 3 58 1 338 1 59 2 299 1 256 1 12 1 274 1 101 2 42 2 345 1 258 1 229 1 372 1 349 1 187 1 23 1 163 1 238 1 70 1 
333 1 258 2 137 2 218 2 113 2 76 1 281 1 211 1 367 1 84 1 377 1 70 1 274 2 
14 1 258 4 137 4 218 1 113 1 76 1 281 1 149 1 84 1 164 1 12 1 309 1 274 4 
156 1 312 1 258 2 137 2 218 1 113 2 281 1 235 1 367 1 84 1 216 1 274 2 273 1 93 1 
252 1 66 1 258 1 137 1 113 1 172 1 12 1 274 1 351 1 281 1 
332 1 268 1 258 2 137 2 218 1 113 1 76 1 281 1 234 1 84 1 274 2 
14 1 52 1 258 4 137 5 218 3 106 1 113 2 76 1 281 2 234 1 84 2 164 1 309 1 12 1 274 5 93 1 
14 1 52 1 258 4 137 5 218 3 347 1 113 2 76 1 281 2 234 1 84 2 164 1 309 1 12 1 274 5 93 1 
258 1 218 1 137 1 158 1 113 1 281 1 118 2 233 1 367 1 263 1 84 1 224 1 26 1 188 1 92 1 12 1 274 1 27 2 
312 1 333 1 258 1 137 1 218 1 113 2 281 1 367 1 83 1 84 1 216 1 274 1 93 1 
24 1 263 1 5 1 209 1 191 1 
345 1 0 2 358 1 157 1 349 1 184 1 195 1 5 1 209 2 116 2 65 1 24 2 176 1 263 1 299 1 340 1 48 1 154 1 191 2 
118 1 15 1 16 1 323 1 92 1 5 1 27 1 209 1 191 1 
184 1 154 1 5 1 
132 1 9 1 6 1 295 1 
132 1 236 1 9 1 250 1 295 1 280 1 311 1 
226 1 71 1 280 1 
324 1 250 3 295 1 280 3 22 2 132 1 236 1 25 1 271 1 237 1 9 1 311 1 
132 1 236 1 9 1 98 1 231 1 250 2 295 1 280 2 311 1 
104 1 248 1 250 1 351 1 280 1 295 1 252 1 253 1 236 1 271 1 311 1 
132 1 236 1 271 1 250 1 295 1 280 1 311 1 
132 2 236 1 9 1 271 1 250 1 280 1 311 1 
7 1 236 1 271 1 250 1 102 1 280 1 311 1 
104 1 54 1 250 3 96 1 280 3 148 1 295 2 132 1 236 1 9 1 271 1 98 2 311 1 
201 1 250 2 351 1 295 1 280 2 252 2 66 1 37 1 253 1 132 1 236 1 9 1 271 1 98 1 311 1 
104 1 54 1 231 1 250 4 280 4 295 2 132 1 236 2 9 1 271 1 98 2 178 1 311 2 
132 1 236 1 9 1 271 1 250 1 295 1 280 1 311 1 
202 1 104 1 54 1 250 4 280 4 295 3 22 1 132 2 25 1 236 1 237 1 9 2 98 2 311 1 
155 1 1 1 290 1 250 2 295 1 280 2 132 1 236 1 271 1 98 1 9 1 311 1 
159 1 250 3 295 1 280 3 22 2 132 1 25 1 236 1 271 1 237 2 9 1 311 1 
192 1 177 2 335 1 295 2 
2 1 236 1 271 1 250 1 280 1 311 1 
132 1 236 1 9 1 98 1 271 1 250 2 295 1 148 1 280 2 311 1 
179 1 
132 1 236 1 9 1 271 1 250 1 295 1 280 1 311 1 
250 3 280 3 295 1 148 1 22 1 132 1 236 1 98 1 271 1 9 1 311 1 
202 1 104 1 54 1 295 1 
132 1 295 1 
